#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_64)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_64) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 64 0000
        gbc.setState(0x343d, 0xa4b1, 0x5a0, 0xc6da, 0x7f02, 0xd105, 0x0, 0x0);
        gbc.writeMem(0x343d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa4b1);
        EXPECT(gbc.pc(), 0x343f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0001
        gbc.setState(0x77c7, 0x9977, 0x53f0, 0x5682, 0xb769, 0xe056, 0x0, 0x0);
        gbc.writeMem(0x77c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9977);
        EXPECT(gbc.pc(), 0x77c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0002
        gbc.setState(0x5b4, 0x655, 0x4d0, 0x6532, 0x55ce, 0xf910, 0x0, 0x0);
        gbc.writeMem(0x5b4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x655);
        EXPECT(gbc.pc(), 0x5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0003
        gbc.setState(0x93a3, 0xab22, 0x1d40, 0x555f, 0xf10d, 0x7876, 0x0, 0x0);
        gbc.writeMem(0x93a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xab22);
        EXPECT(gbc.pc(), 0x93a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a3), 0xcb);
        EXPECT(gbc.readMem(0x93a4), 0x64);
        // CB 64 0004
        gbc.setState(0xf9b, 0xa412, 0xabf0, 0x981b, 0x6417, 0x4825, 0x1, 0x1);
        gbc.writeMem(0xf9b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa412);
        EXPECT(gbc.pc(), 0xf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0005
        gbc.setState(0x8d82, 0xad21, 0x8060, 0x376e, 0x5873, 0xb293, 0x0, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xad21);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0x64);
        // CB 64 0006
        gbc.setState(0x3e6b, 0xda65, 0xaf20, 0x1d1e, 0xf2cb, 0xd66f, 0x1, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda65);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0007
        gbc.setState(0x722e, 0x7200, 0xbed0, 0xa5de, 0xfb3f, 0x4f23, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7200);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0008
        gbc.setState(0xe894, 0xe6b, 0x5ef0, 0xa72a, 0xea80, 0x571b, 0x0, 0x1);
        gbc.writeMem(0xe894, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe6b);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe894), 0xcb);
        EXPECT(gbc.readMem(0xe895), 0x64);
        // CB 64 0009
        gbc.setState(0xa923, 0x62ef, 0x5210, 0xe63b, 0x1a04, 0x6da6, 0x1, 0x1);
        gbc.writeMem(0xa923, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x62ef);
        EXPECT(gbc.pc(), 0xa925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa923), 0xcb);
        EXPECT(gbc.readMem(0xa924), 0x64);
        // CB 64 000A
        gbc.setState(0x6250, 0x98ee, 0x5ce0, 0xefe7, 0x7f1, 0x741a, 0x0, 0x1);
        gbc.writeMem(0x6250, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x98ee);
        EXPECT(gbc.pc(), 0x6252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 000B
        gbc.setState(0x47d6, 0x781c, 0x440, 0xbcb, 0xcb48, 0xdf83, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x781c);
        EXPECT(gbc.pc(), 0x47d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 000C
        gbc.setState(0x38e0, 0x9ff1, 0xc580, 0x9bdb, 0x49d2, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9ff1);
        EXPECT(gbc.pc(), 0x38e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 000D
        gbc.setState(0x34ad, 0xaa94, 0x5e70, 0xb36, 0xf39a, 0x839b, 0x0, 0x1);
        gbc.writeMem(0x34ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaa94);
        EXPECT(gbc.pc(), 0x34af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 000E
        gbc.setState(0x2d4d, 0x13d3, 0x2440, 0xf5bc, 0xc83f, 0x30fb, 0x0, 0x0);
        gbc.writeMem(0x2d4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x13d3);
        EXPECT(gbc.pc(), 0x2d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 000F
        gbc.setState(0x78ee, 0x9912, 0xcd0, 0xca44, 0xf317, 0x79b2, 0x1, 0x0);
        gbc.writeMem(0x78ee, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0x78f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0010
        gbc.setState(0x1a19, 0x80ea, 0x1c20, 0x673, 0x54eb, 0xd377, 0x1, 0x1);
        gbc.writeMem(0x1a19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x80ea);
        EXPECT(gbc.pc(), 0x1a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0011
        gbc.setState(0x5608, 0x9d1c, 0xbef0, 0x9a6, 0x2c30, 0x8440, 0x0, 0x1);
        gbc.writeMem(0x5608, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9d1c);
        EXPECT(gbc.pc(), 0x560a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0012
        gbc.setState(0x1baf, 0xfead, 0x8b20, 0x9911, 0x9762, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfead);
        EXPECT(gbc.pc(), 0x1bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0013
        gbc.setState(0x232e, 0x736e, 0x3040, 0x3f59, 0xb417, 0x7d87, 0x1, 0x1);
        gbc.writeMem(0x232e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x736e);
        EXPECT(gbc.pc(), 0x2330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0016
        gbc.setState(0x6a6e, 0x9da9, 0x5ba0, 0xbb15, 0xc0e4, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0x6a6e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9da9);
        EXPECT(gbc.pc(), 0x6a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0017
        gbc.setState(0xb17c, 0x2277, 0x6ba0, 0x545f, 0xce3, 0xa067, 0x0, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2277);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17c), 0xcb);
        EXPECT(gbc.readMem(0xb17d), 0x64);
        // CB 64 0018
        gbc.setState(0xef4, 0xfdbe, 0x50b0, 0x62fb, 0x9c49, 0x52f9, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfdbe);
        EXPECT(gbc.pc(), 0xef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0019
        gbc.setState(0x345b, 0x645b, 0x8720, 0xdec8, 0xebd6, 0xa8cb, 0x0, 0x0);
        gbc.writeMem(0x345b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x645b);
        EXPECT(gbc.pc(), 0x345d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 001A
        gbc.setState(0xc96d, 0xd455, 0x4010, 0xde42, 0xfe5e, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0xc96d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd455);
        EXPECT(gbc.pc(), 0xc96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96d), 0xcb);
        EXPECT(gbc.readMem(0xc96e), 0x64);
        // CB 64 001B
        gbc.setState(0xb3fe, 0x61e3, 0xf9f0, 0x74b8, 0x7cf2, 0x5278, 0x0, 0x1);
        gbc.writeMem(0xb3fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x61e3);
        EXPECT(gbc.pc(), 0xb400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fe), 0xcb);
        EXPECT(gbc.readMem(0xb3ff), 0x64);
        // CB 64 001C
        gbc.setState(0x18d8, 0xfb93, 0x5ec0, 0x6b32, 0xab29, 0x1447, 0x0, 0x1);
        gbc.writeMem(0x18d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0x18da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 001D
        gbc.setState(0x9f8a, 0x5bff, 0x13b0, 0x378a, 0xe8ce, 0x5bf6, 0x0, 0x1);
        gbc.writeMem(0x9f8a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5bff);
        EXPECT(gbc.pc(), 0x9f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8a), 0xcb);
        EXPECT(gbc.readMem(0x9f8b), 0x64);
        // CB 64 001E
        gbc.setState(0x275e, 0x8d06, 0x2d50, 0x97a3, 0x84bd, 0x785a, 0x0, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8d06);
        EXPECT(gbc.pc(), 0x2760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 001F
        gbc.setState(0xa005, 0x148f, 0x9be0, 0x19c3, 0xd1df, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0xa005, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x148f);
        EXPECT(gbc.pc(), 0xa007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa005), 0xcb);
        EXPECT(gbc.readMem(0xa006), 0x64);
        // CB 64 0021
        gbc.setState(0x5b21, 0x588f, 0x7330, 0xb655, 0x7c69, 0x81fd, 0x0, 0x0);
        gbc.writeMem(0x5b21, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x588f);
        EXPECT(gbc.pc(), 0x5b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0022
        gbc.setState(0xa408, 0xec50, 0x8380, 0xd232, 0xfaf9, 0x2820, 0x0, 0x1);
        gbc.writeMem(0xa408, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xec50);
        EXPECT(gbc.pc(), 0xa40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa408), 0xcb);
        EXPECT(gbc.readMem(0xa409), 0x64);
        // CB 64 0023
        gbc.setState(0x7a8f, 0x7d9a, 0x5890, 0x708a, 0xb247, 0x4545, 0x1, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0x7a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0024
        gbc.setState(0x1566, 0x2773, 0x3020, 0x1c19, 0x9844, 0xfd18, 0x1, 0x0);
        gbc.writeMem(0x1566, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2773);
        EXPECT(gbc.pc(), 0x1568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0025
        gbc.setState(0x3e81, 0xcdb8, 0x8030, 0x431b, 0x4321, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x3e81, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcdb8);
        EXPECT(gbc.pc(), 0x3e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0026
        gbc.setState(0x4a5c, 0x48db, 0xac60, 0xe9c0, 0xdec9, 0x745a, 0x0, 0x1);
        gbc.writeMem(0x4a5c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x48db);
        EXPECT(gbc.pc(), 0x4a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0027
        gbc.setState(0xdb28, 0x62db, 0xe1f0, 0xea55, 0x486a, 0xd969, 0x1, 0x0);
        gbc.writeMem(0xdb28, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x62db);
        EXPECT(gbc.pc(), 0xdb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb28), 0xcb);
        EXPECT(gbc.readMem(0xdb29), 0x64);
        // CB 64 0028
        gbc.setState(0x1d47, 0x3d45, 0x3350, 0x9d62, 0xc4a6, 0x17ef, 0x0, 0x0);
        gbc.writeMem(0x1d47, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3d45);
        EXPECT(gbc.pc(), 0x1d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0029
        gbc.setState(0x18d, 0x37ec, 0xc6a0, 0xa527, 0x7de8, 0xb14d, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x37ec);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 002A
        gbc.setState(0xb266, 0xab3a, 0xf460, 0xa1a0, 0x1344, 0x9dc9, 0x1, 0x1);
        gbc.writeMem(0xb266, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xab3a);
        EXPECT(gbc.pc(), 0xb268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb266), 0xcb);
        EXPECT(gbc.readMem(0xb267), 0x64);
        // CB 64 002B
        gbc.setState(0xe07c, 0xe013, 0x4310, 0x664c, 0x9e75, 0xb899, 0x0, 0x1);
        gbc.writeMem(0xe07c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe013);
        EXPECT(gbc.pc(), 0xe07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07c), 0xcb);
        EXPECT(gbc.readMem(0xe07d), 0x64);
        // CB 64 002C
        gbc.setState(0xa1cd, 0x54fb, 0x4b60, 0x10f3, 0x699f, 0xdeac, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x54fb);
        EXPECT(gbc.pc(), 0xa1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1cd), 0xcb);
        EXPECT(gbc.readMem(0xa1ce), 0x64);
        // CB 64 002D
        gbc.setState(0xcf74, 0x3134, 0x5210, 0xbb05, 0x11ef, 0xc0b9, 0x0, 0x0);
        gbc.writeMem(0xcf74, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3134);
        EXPECT(gbc.pc(), 0xcf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf74), 0xcb);
        EXPECT(gbc.readMem(0xcf75), 0x64);
        // CB 64 002E
        gbc.setState(0xd043, 0x3370, 0xcb30, 0xcdd3, 0x13bb, 0xad79, 0x1, 0x0);
        gbc.writeMem(0xd043, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0xd045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd043), 0xcb);
        EXPECT(gbc.readMem(0xd044), 0x64);
        // CB 64 002F
        gbc.setState(0xb9e5, 0x94f4, 0x72e0, 0xc16c, 0x3969, 0xe579, 0x0, 0x1);
        gbc.writeMem(0xb9e5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x94f4);
        EXPECT(gbc.pc(), 0xb9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e5), 0xcb);
        EXPECT(gbc.readMem(0xb9e6), 0x64);
        // CB 64 0030
        gbc.setState(0x9525, 0xed3a, 0xa2f0, 0x8fd7, 0x59e4, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0x9525, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xed3a);
        EXPECT(gbc.pc(), 0x9527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9525), 0xcb);
        EXPECT(gbc.readMem(0x9526), 0x64);
        // CB 64 0031
        gbc.setState(0x86ef, 0x3816, 0x4e80, 0x749e, 0xdee9, 0x4d5d, 0x1, 0x0);
        gbc.writeMem(0x86ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3816);
        EXPECT(gbc.pc(), 0x86f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ef), 0xcb);
        EXPECT(gbc.readMem(0x86f0), 0x64);
        // CB 64 0032
        gbc.setState(0x89a1, 0xa4ae, 0x5590, 0x3f4f, 0xa541, 0x32b9, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa4ae);
        EXPECT(gbc.pc(), 0x89a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a1), 0xcb);
        EXPECT(gbc.readMem(0x89a2), 0x64);
        // CB 64 0033
        gbc.setState(0x98d7, 0x8620, 0x8e50, 0x1932, 0x2fbb, 0x9d9a, 0x1, 0x1);
        gbc.writeMem(0x98d7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8620);
        EXPECT(gbc.pc(), 0x98d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d7), 0xcb);
        EXPECT(gbc.readMem(0x98d8), 0x64);
        // CB 64 0034
        gbc.setState(0xb032, 0xdff4, 0xea70, 0x9bd8, 0x3e31, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0xb032, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdff4);
        EXPECT(gbc.pc(), 0xb034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb032), 0xcb);
        EXPECT(gbc.readMem(0xb033), 0x64);
        // CB 64 0035
        gbc.setState(0x1d64, 0xa854, 0x6d30, 0xa0eb, 0x413a, 0xd0d1, 0x0, 0x0);
        gbc.writeMem(0x1d64, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa854);
        EXPECT(gbc.pc(), 0x1d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0036
        gbc.setState(0x6f8f, 0x6d8b, 0x93f0, 0xce48, 0x5f96, 0xba2c, 0x0, 0x0);
        gbc.writeMem(0x6f8f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6d8b);
        EXPECT(gbc.pc(), 0x6f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0037
        gbc.setState(0xed19, 0x7f37, 0x980, 0xa93a, 0x32c2, 0x8427, 0x0, 0x0);
        gbc.writeMem(0xed19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7f37);
        EXPECT(gbc.pc(), 0xed1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed19), 0xcb);
        EXPECT(gbc.readMem(0xed1a), 0x64);
        // CB 64 0038
        gbc.setState(0xb305, 0x33d2, 0xd10, 0x1305, 0x468b, 0x84e7, 0x0, 0x0);
        gbc.writeMem(0xb305, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x33d2);
        EXPECT(gbc.pc(), 0xb307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb305), 0xcb);
        EXPECT(gbc.readMem(0xb306), 0x64);
        // CB 64 0039
        gbc.setState(0x596d, 0x2803, 0xf080, 0x6dd5, 0xb434, 0x7cfc, 0x1, 0x0);
        gbc.writeMem(0x596d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2803);
        EXPECT(gbc.pc(), 0x596f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 003A
        gbc.setState(0x94aa, 0xc8d7, 0xa3a0, 0x6038, 0x155b, 0xac2f, 0x0, 0x0);
        gbc.writeMem(0x94aa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc8d7);
        EXPECT(gbc.pc(), 0x94ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94aa), 0xcb);
        EXPECT(gbc.readMem(0x94ab), 0x64);
        // CB 64 003B
        gbc.setState(0x7777, 0x9aaa, 0x14d0, 0x2f1f, 0x3b5f, 0x9875, 0x1, 0x0);
        gbc.writeMem(0x7777, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x7779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 003D
        gbc.setState(0xd74f, 0xb4e9, 0x2de0, 0xbaa1, 0x6ed8, 0x6f08, 0x1, 0x1);
        gbc.writeMem(0xd74f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb4e9);
        EXPECT(gbc.pc(), 0xd751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd74f), 0xcb);
        EXPECT(gbc.readMem(0xd750), 0x64);
        // CB 64 003E
        gbc.setState(0xb1d0, 0xb8d2, 0x9150, 0xfe3b, 0x4d1b, 0x67af, 0x1, 0x0);
        gbc.writeMem(0xb1d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb8d2);
        EXPECT(gbc.pc(), 0xb1d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d0), 0xcb);
        EXPECT(gbc.readMem(0xb1d1), 0x64);
        // CB 64 003F
        gbc.setState(0x83c8, 0x6499, 0x6030, 0x38e0, 0xe11a, 0x7d75, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6499);
        EXPECT(gbc.pc(), 0x83ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c8), 0xcb);
        EXPECT(gbc.readMem(0x83c9), 0x64);
        // CB 64 0040
        gbc.setState(0x4d0e, 0x654e, 0xcfe0, 0x9d2c, 0x3e65, 0x1074, 0x0, 0x1);
        gbc.writeMem(0x4d0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x654e);
        EXPECT(gbc.pc(), 0x4d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0041
        gbc.setState(0x8b83, 0x3f71, 0x5d20, 0x6e28, 0xae89, 0xc44e, 0x1, 0x1);
        gbc.writeMem(0x8b83, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3f71);
        EXPECT(gbc.pc(), 0x8b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b83), 0xcb);
        EXPECT(gbc.readMem(0x8b84), 0x64);
        // CB 64 0042
        gbc.setState(0xced, 0x55c1, 0x6df0, 0x5ddd, 0x8b45, 0xe909, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x55c1);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0043
        gbc.setState(0xd898, 0xe204, 0x57b0, 0x3f8d, 0x8fd8, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0xd898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe204);
        EXPECT(gbc.pc(), 0xd89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd898), 0xcb);
        EXPECT(gbc.readMem(0xd899), 0x64);
        // CB 64 0044
        gbc.setState(0x82fe, 0x7c3d, 0x1440, 0x35a0, 0x8fde, 0xfe21, 0x0, 0x0);
        gbc.writeMem(0x82fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7c3d);
        EXPECT(gbc.pc(), 0x8300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fe), 0xcb);
        EXPECT(gbc.readMem(0x82ff), 0x64);
        // CB 64 0045
        gbc.setState(0x4212, 0x10fa, 0xac90, 0xf91, 0xbc51, 0x5bcc, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x10fa);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0046
        gbc.setState(0xc064, 0x598e, 0xecd0, 0xfcc2, 0x1d46, 0xe2e0, 0x1, 0x0);
        gbc.writeMem(0xc064, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x598e);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc064), 0xcb);
        EXPECT(gbc.readMem(0xc065), 0x64);
        // CB 64 0047
        gbc.setState(0xc8c9, 0x36d4, 0xb90, 0xbb8f, 0xa3fb, 0x40d8, 0x1, 0x1);
        gbc.writeMem(0xc8c9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x36d4);
        EXPECT(gbc.pc(), 0xc8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c9), 0xcb);
        EXPECT(gbc.readMem(0xc8ca), 0x64);
        // CB 64 0048
        gbc.setState(0xcc0f, 0xfe9d, 0xcee0, 0xa197, 0x78c8, 0xbb46, 0x0, 0x1);
        gbc.writeMem(0xcc0f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfe9d);
        EXPECT(gbc.pc(), 0xcc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0f), 0xcb);
        EXPECT(gbc.readMem(0xcc10), 0x64);
        // CB 64 0049
        gbc.setState(0x30f5, 0x461d, 0xa090, 0xf4b7, 0xc321, 0x43ea, 0x0, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x461d);
        EXPECT(gbc.pc(), 0x30f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 004A
        gbc.setState(0x178b, 0x7715, 0xb930, 0x4418, 0xfeea, 0x295b, 0x0, 0x1);
        gbc.writeMem(0x178b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7715);
        EXPECT(gbc.pc(), 0x178d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 004B
        gbc.setState(0x7e39, 0xa94a, 0xb430, 0xec40, 0x5768, 0x321a, 0x1, 0x1);
        gbc.writeMem(0x7e39, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa94a);
        EXPECT(gbc.pc(), 0x7e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 004C
        gbc.setState(0xe288, 0xf829, 0xdb80, 0xf40f, 0xbeaa, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xe288, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf829);
        EXPECT(gbc.pc(), 0xe28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe288), 0xcb);
        EXPECT(gbc.readMem(0xe289), 0x64);
        // CB 64 004D
        gbc.setState(0xc149, 0xa4c, 0x38b0, 0xa216, 0xe065, 0x3c41, 0x0, 0x1);
        gbc.writeMem(0xc149, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa4c);
        EXPECT(gbc.pc(), 0xc14b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc149), 0xcb);
        EXPECT(gbc.readMem(0xc14a), 0x64);
        // CB 64 004F
        gbc.setState(0xacd6, 0x8299, 0xde90, 0x75bf, 0xec84, 0x878c, 0x0, 0x1);
        gbc.writeMem(0xacd6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0xacd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd6), 0xcb);
        EXPECT(gbc.readMem(0xacd7), 0x64);
        // CB 64 0050
        gbc.setState(0xde3f, 0x86aa, 0x1be0, 0x8782, 0x946d, 0x35f8, 0x0, 0x1);
        gbc.writeMem(0xde3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0xde41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3f), 0xcb);
        EXPECT(gbc.readMem(0xde40), 0x64);
        // CB 64 0051
        gbc.setState(0x2bc4, 0x4737, 0x9dc0, 0x7966, 0xc4c2, 0x3c5c, 0x1, 0x1);
        gbc.writeMem(0x2bc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4737);
        EXPECT(gbc.pc(), 0x2bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0052
        gbc.setState(0x88b, 0x2c43, 0xbf90, 0x2b2c, 0x6333, 0x398, 0x0, 0x0);
        gbc.writeMem(0x88b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2c43);
        EXPECT(gbc.pc(), 0x88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0053
        gbc.setState(0x3a0b, 0xb6a4, 0xfdc0, 0xa648, 0x88f7, 0xd5dc, 0x0, 0x0);
        gbc.writeMem(0x3a0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb6a4);
        EXPECT(gbc.pc(), 0x3a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0054
        gbc.setState(0xd6db, 0xa9fb, 0x8e70, 0x2df6, 0x190b, 0x95eb, 0x1, 0x1);
        gbc.writeMem(0xd6db, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0xd6dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6db), 0xcb);
        EXPECT(gbc.readMem(0xd6dc), 0x64);
        // CB 64 0055
        gbc.setState(0x1417, 0xf367, 0x13d0, 0x4a8e, 0x2055, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x1417, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf367);
        EXPECT(gbc.pc(), 0x1419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0056
        gbc.setState(0x1acf, 0xa2a2, 0xec10, 0x15c7, 0x150e, 0xf21c, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa2a2);
        EXPECT(gbc.pc(), 0x1ad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0057
        gbc.setState(0x5c2b, 0x238f, 0xb7b0, 0x49b9, 0x8ebe, 0xbd, 0x0, 0x0);
        gbc.writeMem(0x5c2b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x238f);
        EXPECT(gbc.pc(), 0x5c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0058
        gbc.setState(0x97b7, 0x7394, 0xdc70, 0x569f, 0xd8ed, 0x2a40, 0x0, 0x1);
        gbc.writeMem(0x97b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7394);
        EXPECT(gbc.pc(), 0x97b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b7), 0xcb);
        EXPECT(gbc.readMem(0x97b8), 0x64);
        // CB 64 0059
        gbc.setState(0x5f8c, 0xdd18, 0x1e90, 0x59f7, 0x8302, 0xc54b, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdd18);
        EXPECT(gbc.pc(), 0x5f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 005B
        gbc.setState(0x94bb, 0xed1e, 0x1b70, 0x6eea, 0xbea6, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0x94bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xed1e);
        EXPECT(gbc.pc(), 0x94bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94bb), 0xcb);
        EXPECT(gbc.readMem(0x94bc), 0x64);
        // CB 64 005C
        gbc.setState(0x8a97, 0xb6b, 0x2e10, 0x898, 0x277, 0x98b4, 0x1, 0x0);
        gbc.writeMem(0x8a97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb6b);
        EXPECT(gbc.pc(), 0x8a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a97), 0xcb);
        EXPECT(gbc.readMem(0x8a98), 0x64);
        // CB 64 005D
        gbc.setState(0xc02f, 0x9777, 0x7700, 0x8d7c, 0x5d6a, 0x8bc4, 0x0, 0x0);
        gbc.writeMem(0xc02f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9777);
        EXPECT(gbc.pc(), 0xc031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02f), 0xcb);
        EXPECT(gbc.readMem(0xc030), 0x64);
        // CB 64 005E
        gbc.setState(0x43e6, 0x7c7a, 0x1bf0, 0xfa9d, 0x7772, 0x7153, 0x1, 0x1);
        gbc.writeMem(0x43e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7c7a);
        EXPECT(gbc.pc(), 0x43e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 005F
        gbc.setState(0xd722, 0xfd07, 0xc3e0, 0x947a, 0x266, 0xda9c, 0x0, 0x0);
        gbc.writeMem(0xd722, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfd07);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd722), 0xcb);
        EXPECT(gbc.readMem(0xd723), 0x64);
        // CB 64 0060
        gbc.setState(0x98f3, 0x62a, 0x5870, 0x3e8d, 0xeb2a, 0x8692, 0x0, 0x1);
        gbc.writeMem(0x98f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x62a);
        EXPECT(gbc.pc(), 0x98f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f3), 0xcb);
        EXPECT(gbc.readMem(0x98f4), 0x64);
        // CB 64 0061
        gbc.setState(0xb151, 0x9fb5, 0xa200, 0x991a, 0x1af7, 0x3e4e, 0x1, 0x0);
        gbc.writeMem(0xb151, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9fb5);
        EXPECT(gbc.pc(), 0xb153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb151), 0xcb);
        EXPECT(gbc.readMem(0xb152), 0x64);
        // CB 64 0062
        gbc.setState(0xc7b5, 0x6190, 0x6b00, 0xee71, 0xb3e3, 0xaf5d, 0x1, 0x1);
        gbc.writeMem(0xc7b5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6190);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0x64);
        // CB 64 0063
        gbc.setState(0x726, 0xadc1, 0x83e0, 0x77f2, 0xa000, 0x8cb6, 0x0, 0x1);
        gbc.writeMem(0x726, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xadc1);
        EXPECT(gbc.pc(), 0x728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0064
        gbc.setState(0x4c3e, 0x30b0, 0x7ea0, 0x64a8, 0x6498, 0x59b7, 0x0, 0x0);
        gbc.writeMem(0x4c3e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x30b0);
        EXPECT(gbc.pc(), 0x4c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0065
        gbc.setState(0x8a5, 0x5e2a, 0x4580, 0xde1c, 0xd59e, 0xb9ae, 0x0, 0x0);
        gbc.writeMem(0x8a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5e2a);
        EXPECT(gbc.pc(), 0x8a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0066
        gbc.setState(0xc3a4, 0x1904, 0xdc70, 0x8e2c, 0x4cef, 0x4f96, 0x0, 0x1);
        gbc.writeMem(0xc3a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1904);
        EXPECT(gbc.pc(), 0xc3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a4), 0xcb);
        EXPECT(gbc.readMem(0xc3a5), 0x64);
        // CB 64 0067
        gbc.setState(0xd663, 0x443d, 0xc620, 0x41fa, 0x548a, 0xb9ca, 0x0, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x443d);
        EXPECT(gbc.pc(), 0xd665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd663), 0xcb);
        EXPECT(gbc.readMem(0xd664), 0x64);
        // CB 64 0068
        gbc.setState(0x93cf, 0x6f68, 0xac00, 0x69aa, 0xd9d3, 0x22b1, 0x0, 0x0);
        gbc.writeMem(0x93cf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6f68);
        EXPECT(gbc.pc(), 0x93d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cf), 0xcb);
        EXPECT(gbc.readMem(0x93d0), 0x64);
        // CB 64 0069
        gbc.setState(0xba4a, 0x6379, 0x27d0, 0xd42, 0x2de0, 0xf601, 0x0, 0x0);
        gbc.writeMem(0xba4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6379);
        EXPECT(gbc.pc(), 0xba4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4a), 0xcb);
        EXPECT(gbc.readMem(0xba4b), 0x64);
        // CB 64 006A
        gbc.setState(0xed54, 0x2510, 0xadf0, 0x1507, 0xca7e, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0xed54, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0xed56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed54), 0xcb);
        EXPECT(gbc.readMem(0xed55), 0x64);
        // CB 64 006B
        gbc.setState(0x8771, 0x147e, 0xff20, 0x7db8, 0xe40b, 0xcc38, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x147e);
        EXPECT(gbc.pc(), 0x8773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8771), 0xcb);
        EXPECT(gbc.readMem(0x8772), 0x64);
        // CB 64 006C
        gbc.setState(0xe47d, 0x4fdf, 0xc820, 0xa8b3, 0x9856, 0xe41b, 0x1, 0x1);
        gbc.writeMem(0xe47d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4fdf);
        EXPECT(gbc.pc(), 0xe47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47d), 0xcb);
        EXPECT(gbc.readMem(0xe47e), 0x64);
        // CB 64 006D
        gbc.setState(0x464f, 0xa296, 0x45d0, 0x3686, 0x1764, 0x6e62, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0x4651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 006E
        gbc.setState(0x7835, 0x617b, 0x8220, 0xe814, 0x198, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x7835, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0x7837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 006F
        gbc.setState(0x72c7, 0xecdf, 0xd690, 0x353d, 0x6d08, 0x9e57, 0x0, 0x0);
        gbc.writeMem(0x72c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xecdf);
        EXPECT(gbc.pc(), 0x72c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0070
        gbc.setState(0xd2bf, 0x55fe, 0x9680, 0x5b3b, 0x4d8, 0xe31c, 0x0, 0x0);
        gbc.writeMem(0xd2bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x55fe);
        EXPECT(gbc.pc(), 0xd2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bf), 0xcb);
        EXPECT(gbc.readMem(0xd2c0), 0x64);
        // CB 64 0071
        gbc.setState(0x7b95, 0xfac9, 0x2c00, 0x20e8, 0x528e, 0xc442, 0x0, 0x0);
        gbc.writeMem(0x7b95, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfac9);
        EXPECT(gbc.pc(), 0x7b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0072
        gbc.setState(0xedb1, 0x6511, 0xd210, 0x643a, 0x9f25, 0xc24b, 0x1, 0x1);
        gbc.writeMem(0xedb1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0xedb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb1), 0xcb);
        EXPECT(gbc.readMem(0xedb2), 0x64);
        // CB 64 0073
        gbc.setState(0x5692, 0xff2c, 0x5a10, 0x6769, 0x15b9, 0xbc18, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0074
        gbc.setState(0x5123, 0xee31, 0xf610, 0xdb79, 0x1846, 0xa4be, 0x0, 0x1);
        gbc.writeMem(0x5123, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0x5125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0075
        gbc.setState(0xe734, 0xe605, 0x90f0, 0x6ab2, 0x1616, 0x762f, 0x0, 0x0);
        gbc.writeMem(0xe734, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe605);
        EXPECT(gbc.pc(), 0xe736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe734), 0xcb);
        EXPECT(gbc.readMem(0xe735), 0x64);
        // CB 64 0076
        gbc.setState(0xbb84, 0x3d43, 0x8aa0, 0x2158, 0x6bed, 0x6ed0, 0x1, 0x0);
        gbc.writeMem(0xbb84, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3d43);
        EXPECT(gbc.pc(), 0xbb86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb84), 0xcb);
        EXPECT(gbc.readMem(0xbb85), 0x64);
        // CB 64 0078
        gbc.setState(0x594b, 0x4fb8, 0xef50, 0x8dec, 0x4788, 0x69e1, 0x1, 0x0);
        gbc.writeMem(0x594b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4fb8);
        EXPECT(gbc.pc(), 0x594d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0079
        gbc.setState(0x12a4, 0x1a0, 0x5930, 0x291f, 0x183d, 0xe23, 0x0, 0x1);
        gbc.writeMem(0x12a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1a0);
        EXPECT(gbc.pc(), 0x12a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 007A
        gbc.setState(0xafac, 0xe2a0, 0x8f90, 0xb987, 0x2e18, 0x3221, 0x0, 0x0);
        gbc.writeMem(0xafac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe2a0);
        EXPECT(gbc.pc(), 0xafae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafac), 0xcb);
        EXPECT(gbc.readMem(0xafad), 0x64);
        // CB 64 007B
        gbc.setState(0xd462, 0x8dfa, 0x7df0, 0xe8f9, 0xf673, 0x7fca, 0x0, 0x0);
        gbc.writeMem(0xd462, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8dfa);
        EXPECT(gbc.pc(), 0xd464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd462), 0xcb);
        EXPECT(gbc.readMem(0xd463), 0x64);
        // CB 64 007C
        gbc.setState(0x5a2c, 0x7ad6, 0x97c0, 0xd631, 0x3f07, 0x1605, 0x1, 0x1);
        gbc.writeMem(0x5a2c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7ad6);
        EXPECT(gbc.pc(), 0x5a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 007D
        gbc.setState(0xbe3c, 0x83dc, 0xe370, 0xee70, 0x268a, 0x38a1, 0x1, 0x1);
        gbc.writeMem(0xbe3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0xbe3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe3c), 0xcb);
        EXPECT(gbc.readMem(0xbe3d), 0x64);
        // CB 64 007E
        gbc.setState(0xe26f, 0xfcca, 0x5870, 0x80d6, 0x45c3, 0xc935, 0x1, 0x0);
        gbc.writeMem(0xe26f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfcca);
        EXPECT(gbc.pc(), 0xe271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26f), 0xcb);
        EXPECT(gbc.readMem(0xe270), 0x64);
        // CB 64 0080
        gbc.setState(0xa744, 0x5236, 0x56c0, 0xa416, 0xb8be, 0x843a, 0x1, 0x1);
        gbc.writeMem(0xa744, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5236);
        EXPECT(gbc.pc(), 0xa746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa744), 0xcb);
        EXPECT(gbc.readMem(0xa745), 0x64);
        // CB 64 0081
        gbc.setState(0xc7a7, 0xed, 0x9f60, 0xf682, 0xb0af, 0x9826, 0x1, 0x1);
        gbc.writeMem(0xc7a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xed);
        EXPECT(gbc.pc(), 0xc7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a7), 0xcb);
        EXPECT(gbc.readMem(0xc7a8), 0x64);
        // CB 64 0082
        gbc.setState(0xaa39, 0xb017, 0x84d0, 0xe2a4, 0xd9a6, 0xaea8, 0x0, 0x1);
        gbc.writeMem(0xaa39, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb017);
        EXPECT(gbc.pc(), 0xaa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa39), 0xcb);
        EXPECT(gbc.readMem(0xaa3a), 0x64);
        // CB 64 0083
        gbc.setState(0xb02f, 0x6a1a, 0xfd00, 0x1a36, 0xae03, 0xe29, 0x1, 0x0);
        gbc.writeMem(0xb02f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6a1a);
        EXPECT(gbc.pc(), 0xb031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02f), 0xcb);
        EXPECT(gbc.readMem(0xb030), 0x64);
        // CB 64 0084
        gbc.setState(0x79b8, 0x968b, 0x42c0, 0x47ce, 0x2778, 0x3d15, 0x1, 0x1);
        gbc.writeMem(0x79b8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0x79ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0085
        gbc.setState(0xb11d, 0xd08c, 0x8150, 0xb603, 0xaf1d, 0x6ed7, 0x1, 0x0);
        gbc.writeMem(0xb11d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd08c);
        EXPECT(gbc.pc(), 0xb11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11d), 0xcb);
        EXPECT(gbc.readMem(0xb11e), 0x64);
        // CB 64 0086
        gbc.setState(0xa67d, 0x5a30, 0xea50, 0x3ee, 0xb8dd, 0x9bb, 0x1, 0x1);
        gbc.writeMem(0xa67d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5a30);
        EXPECT(gbc.pc(), 0xa67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67d), 0xcb);
        EXPECT(gbc.readMem(0xa67e), 0x64);
        // CB 64 0087
        gbc.setState(0xc6dd, 0x8d5d, 0x7f20, 0x708c, 0xf156, 0xa887, 0x0, 0x0);
        gbc.writeMem(0xc6dd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8d5d);
        EXPECT(gbc.pc(), 0xc6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6dd), 0xcb);
        EXPECT(gbc.readMem(0xc6de), 0x64);
        // CB 64 0088
        gbc.setState(0x220a, 0xa176, 0xa520, 0x5be4, 0x765a, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x220a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa176);
        EXPECT(gbc.pc(), 0x220c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0089
        gbc.setState(0x88bf, 0xa63e, 0xb850, 0x3d77, 0x1dd1, 0x496b, 0x0, 0x1);
        gbc.writeMem(0x88bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0x88c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bf), 0xcb);
        EXPECT(gbc.readMem(0x88c0), 0x64);
        // CB 64 008B
        gbc.setState(0xbbb3, 0x1558, 0x9270, 0x498c, 0x3637, 0x607e, 0x1, 0x0);
        gbc.writeMem(0xbbb3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1558);
        EXPECT(gbc.pc(), 0xbbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb3), 0xcb);
        EXPECT(gbc.readMem(0xbbb4), 0x64);
        // CB 64 008C
        gbc.setState(0xdc97, 0x1175, 0x66d0, 0x8e25, 0xae06, 0xb74e, 0x0, 0x1);
        gbc.writeMem(0xdc97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1175);
        EXPECT(gbc.pc(), 0xdc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc97), 0xcb);
        EXPECT(gbc.readMem(0xdc98), 0x64);
        // CB 64 008E
        gbc.setState(0x7afb, 0x5aeb, 0x4000, 0x6317, 0xb1e9, 0xdd0b, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5aeb);
        EXPECT(gbc.pc(), 0x7afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 008F
        gbc.setState(0x67ca, 0x7a02, 0x7870, 0x835d, 0xdb00, 0xcfc2, 0x0, 0x1);
        gbc.writeMem(0x67ca, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7a02);
        EXPECT(gbc.pc(), 0x67cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0090
        gbc.setState(0x14de, 0xebc6, 0x1f30, 0xf6ac, 0x5468, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x14de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xebc6);
        EXPECT(gbc.pc(), 0x14e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0091
        gbc.setState(0xb1ee, 0x78b0, 0x4920, 0x6ec8, 0xbafd, 0xff64, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0xb1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ee), 0xcb);
        EXPECT(gbc.readMem(0xb1ef), 0x64);
        // CB 64 0093
        gbc.setState(0x526c, 0x4058, 0xf330, 0x4ea4, 0xb148, 0x5b38, 0x1, 0x1);
        gbc.writeMem(0x526c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4058);
        EXPECT(gbc.pc(), 0x526e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0094
        gbc.setState(0x3612, 0xeacf, 0x1220, 0xac68, 0x2148, 0xfaab, 0x1, 0x1);
        gbc.writeMem(0x3612, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeacf);
        EXPECT(gbc.pc(), 0x3614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0095
        gbc.setState(0x6227, 0x1c74, 0xf4b0, 0xb52, 0xf9fd, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1c74);
        EXPECT(gbc.pc(), 0x6229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0096
        gbc.setState(0x9b72, 0xdb38, 0x6fb0, 0xe01e, 0x385d, 0x7101, 0x0, 0x1);
        gbc.writeMem(0x9b72, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdb38);
        EXPECT(gbc.pc(), 0x9b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b72), 0xcb);
        EXPECT(gbc.readMem(0x9b73), 0x64);
        // CB 64 0097
        gbc.setState(0x8480, 0x47a8, 0x9e80, 0x588, 0x7b35, 0xa6d, 0x0, 0x1);
        gbc.writeMem(0x8480, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x47a8);
        EXPECT(gbc.pc(), 0x8482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8480), 0xcb);
        EXPECT(gbc.readMem(0x8481), 0x64);
        // CB 64 0098
        gbc.setState(0x11fb, 0xc5ea, 0x57d0, 0xb608, 0xd3a2, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0x11fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc5ea);
        EXPECT(gbc.pc(), 0x11fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0099
        gbc.setState(0x80de, 0x54e7, 0xc30, 0x15ff, 0xfef8, 0xc3a2, 0x1, 0x0);
        gbc.writeMem(0x80de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x54e7);
        EXPECT(gbc.pc(), 0x80e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80de), 0xcb);
        EXPECT(gbc.readMem(0x80df), 0x64);
        // CB 64 009A
        gbc.setState(0x6126, 0x2ca9, 0xc3f0, 0xc217, 0xcbc7, 0x9ae4, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2ca9);
        EXPECT(gbc.pc(), 0x6128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 009B
        gbc.setState(0xd65f, 0xab59, 0xeee0, 0xf73c, 0xe036, 0x1a54, 0x1, 0x0);
        gbc.writeMem(0xd65f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xab59);
        EXPECT(gbc.pc(), 0xd661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65f), 0xcb);
        EXPECT(gbc.readMem(0xd660), 0x64);
        // CB 64 009C
        gbc.setState(0xab77, 0xc674, 0xc1d0, 0xb177, 0xbca1, 0x5c92, 0x1, 0x1);
        gbc.writeMem(0xab77, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc674);
        EXPECT(gbc.pc(), 0xab79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab77), 0xcb);
        EXPECT(gbc.readMem(0xab78), 0x64);
        // CB 64 009D
        gbc.setState(0x6bc4, 0x9e49, 0xf7a0, 0x1600, 0x40ba, 0x2f94, 0x0, 0x0);
        gbc.writeMem(0x6bc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9e49);
        EXPECT(gbc.pc(), 0x6bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 009E
        gbc.setState(0xb4f7, 0xde31, 0x43a0, 0x153b, 0xea04, 0xd266, 0x1, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xde31);
        EXPECT(gbc.pc(), 0xb4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f7), 0xcb);
        EXPECT(gbc.readMem(0xb4f8), 0x64);
        // CB 64 009F
        gbc.setState(0xe2eb, 0xa6fc, 0xe990, 0xc748, 0xf9f2, 0x6f02, 0x1, 0x0);
        gbc.writeMem(0xe2eb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa6fc);
        EXPECT(gbc.pc(), 0xe2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2eb), 0xcb);
        EXPECT(gbc.readMem(0xe2ec), 0x64);
        // CB 64 00A0
        gbc.setState(0xa30c, 0xd412, 0xbaa0, 0x799f, 0xa517, 0x84f3, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd412);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30c), 0xcb);
        EXPECT(gbc.readMem(0xa30d), 0x64);
        // CB 64 00A1
        gbc.setState(0x4f1e, 0xf175, 0x6be0, 0xb7f1, 0x3b18, 0x442e, 0x0, 0x1);
        gbc.writeMem(0x4f1e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf175);
        EXPECT(gbc.pc(), 0x4f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00A2
        gbc.setState(0xa9ac, 0x72cb, 0x5d60, 0x4134, 0x5fef, 0x2a74, 0x0, 0x1);
        gbc.writeMem(0xa9ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x72cb);
        EXPECT(gbc.pc(), 0xa9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ac), 0xcb);
        EXPECT(gbc.readMem(0xa9ad), 0x64);
        // CB 64 00A3
        gbc.setState(0x2083, 0x8882, 0xa7b0, 0x8356, 0xae67, 0x55f2, 0x1, 0x1);
        gbc.writeMem(0x2083, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8882);
        EXPECT(gbc.pc(), 0x2085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00A4
        gbc.setState(0xd988, 0xc7ca, 0x64a0, 0x499d, 0x7df4, 0xfea9, 0x0, 0x0);
        gbc.writeMem(0xd988, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0x64);
        // CB 64 00A5
        gbc.setState(0xb545, 0x3c2f, 0x230, 0xd54c, 0x2e1f, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0xb545, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3c2f);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb545), 0xcb);
        EXPECT(gbc.readMem(0xb546), 0x64);
        // CB 64 00A6
        gbc.setState(0xec37, 0xc99d, 0x7fc0, 0xf2e6, 0x8306, 0xf3cd, 0x0, 0x0);
        gbc.writeMem(0xec37, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc99d);
        EXPECT(gbc.pc(), 0xec39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec37), 0xcb);
        EXPECT(gbc.readMem(0xec38), 0x64);
        // CB 64 00A7
        gbc.setState(0xe8c4, 0x7195, 0xb980, 0x5466, 0x4cab, 0xcdb1, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7195);
        EXPECT(gbc.pc(), 0xe8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c4), 0xcb);
        EXPECT(gbc.readMem(0xe8c5), 0x64);
        // CB 64 00A8
        gbc.setState(0x6c29, 0xd5b7, 0x97d0, 0x1bf3, 0xd528, 0x1225, 0x0, 0x0);
        gbc.writeMem(0x6c29, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd5b7);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00A9
        gbc.setState(0x1853, 0x3809, 0xa70, 0x3c4c, 0x7cbf, 0x19bc, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3809);
        EXPECT(gbc.pc(), 0x1855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00AA
        gbc.setState(0xed00, 0xf331, 0x7470, 0xa819, 0xb2c8, 0xb6c7, 0x1, 0x1);
        gbc.writeMem(0xed00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf331);
        EXPECT(gbc.pc(), 0xed02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed00), 0xcb);
        EXPECT(gbc.readMem(0xed01), 0x64);
        // CB 64 00AB
        gbc.setState(0xade1, 0x7846, 0x75c0, 0x2970, 0x4aec, 0x52b3, 0x1, 0x1);
        gbc.writeMem(0xade1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7846);
        EXPECT(gbc.pc(), 0xade3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade1), 0xcb);
        EXPECT(gbc.readMem(0xade2), 0x64);
        // CB 64 00AC
        gbc.setState(0x6a70, 0x2195, 0xbea0, 0x212f, 0xc94a, 0xf7af, 0x1, 0x0);
        gbc.writeMem(0x6a70, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2195);
        EXPECT(gbc.pc(), 0x6a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00AE
        gbc.setState(0xb370, 0x7630, 0x5fa0, 0x1c7a, 0x47f7, 0xd33f, 0x0, 0x1);
        gbc.writeMem(0xb370, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7630);
        EXPECT(gbc.pc(), 0xb372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb370), 0xcb);
        EXPECT(gbc.readMem(0xb371), 0x64);
        // CB 64 00AF
        gbc.setState(0xe30d, 0x104a, 0x6530, 0x6e4d, 0x93b6, 0x30eb, 0x0, 0x0);
        gbc.writeMem(0xe30d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x104a);
        EXPECT(gbc.pc(), 0xe30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe30d), 0xcb);
        EXPECT(gbc.readMem(0xe30e), 0x64);
        // CB 64 00B0
        gbc.setState(0xc83d, 0x43f9, 0x44c0, 0x5b6a, 0xe506, 0x3364, 0x0, 0x1);
        gbc.writeMem(0xc83d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x43f9);
        EXPECT(gbc.pc(), 0xc83f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83d), 0xcb);
        EXPECT(gbc.readMem(0xc83e), 0x64);
        // CB 64 00B1
        gbc.setState(0xfb1, 0x1665, 0x2bb0, 0x56de, 0xdc75, 0x33c, 0x1, 0x1);
        gbc.writeMem(0xfb1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1665);
        EXPECT(gbc.pc(), 0xfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00B2
        gbc.setState(0x14ac, 0x53c3, 0xb010, 0x9a91, 0xd7a5, 0xaa9d, 0x1, 0x1);
        gbc.writeMem(0x14ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x53c3);
        EXPECT(gbc.pc(), 0x14ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00B3
        gbc.setState(0x3d30, 0x887e, 0x7cc0, 0xce3b, 0x38e3, 0x3506, 0x0, 0x1);
        gbc.writeMem(0x3d30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x887e);
        EXPECT(gbc.pc(), 0x3d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00B4
        gbc.setState(0x44ad, 0x9c44, 0xb8a0, 0x1175, 0x1e21, 0x8781, 0x1, 0x1);
        gbc.writeMem(0x44ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9c44);
        EXPECT(gbc.pc(), 0x44af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00B5
        gbc.setState(0x26d1, 0x5ef0, 0xd4e0, 0xded5, 0x1a30, 0xec41, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5ef0);
        EXPECT(gbc.pc(), 0x26d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00B6
        gbc.setState(0x65f2, 0x9b0e, 0x38b0, 0x158c, 0x9d9e, 0xc882, 0x1, 0x0);
        gbc.writeMem(0x65f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9b0e);
        EXPECT(gbc.pc(), 0x65f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00B7
        gbc.setState(0x4735, 0x5748, 0x58f0, 0x9c4e, 0xa697, 0x9b97, 0x1, 0x0);
        gbc.writeMem(0x4735, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5748);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00B8
        gbc.setState(0x33fa, 0x7d0b, 0xb640, 0x3539, 0x2226, 0x141d, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7d0b);
        EXPECT(gbc.pc(), 0x33fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00B9
        gbc.setState(0x6d35, 0x4959, 0x94a0, 0xadd, 0x1858, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x6d35, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4959);
        EXPECT(gbc.pc(), 0x6d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00BA
        gbc.setState(0x5701, 0xa5e6, 0x1770, 0x438f, 0x805e, 0x9b1d, 0x1, 0x0);
        gbc.writeMem(0x5701, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa5e6);
        EXPECT(gbc.pc(), 0x5703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00BB
        gbc.setState(0x47eb, 0x411e, 0xb770, 0xa360, 0xc41e, 0x3050, 0x0, 0x0);
        gbc.writeMem(0x47eb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x411e);
        EXPECT(gbc.pc(), 0x47ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00BC
        gbc.setState(0x6a18, 0x3b2e, 0x290, 0xb1f2, 0x6e76, 0xdfe5, 0x1, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3b2e);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00BD
        gbc.setState(0x8373, 0xbb56, 0x5fd0, 0x4680, 0x9132, 0xfec4, 0x0, 0x0);
        gbc.writeMem(0x8373, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbb56);
        EXPECT(gbc.pc(), 0x8375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8373), 0xcb);
        EXPECT(gbc.readMem(0x8374), 0x64);
        // CB 64 00BE
        gbc.setState(0x6222, 0xb45b, 0x3c50, 0x1e37, 0xacc8, 0x5b6, 0x1, 0x1);
        gbc.writeMem(0x6222, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0x6224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00BF
        gbc.setState(0xc325, 0x45e4, 0x2240, 0xd2cc, 0x292b, 0x9d09, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x45e4);
        EXPECT(gbc.pc(), 0xc327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc325), 0xcb);
        EXPECT(gbc.readMem(0xc326), 0x64);
        // CB 64 00C0
        gbc.setState(0x4661, 0x834e, 0xa990, 0xac3f, 0xc4ac, 0x4b36, 0x1, 0x0);
        gbc.writeMem(0x4661, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x834e);
        EXPECT(gbc.pc(), 0x4663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00C1
        gbc.setState(0xb29c, 0xebe4, 0x6540, 0x6ad, 0x5ebf, 0xee4c, 0x0, 0x0);
        gbc.writeMem(0xb29c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xebe4);
        EXPECT(gbc.pc(), 0xb29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29c), 0xcb);
        EXPECT(gbc.readMem(0xb29d), 0x64);
        // CB 64 00C2
        gbc.setState(0x1c9e, 0x96f7, 0x930, 0xaf24, 0x2be6, 0x8700, 0x0, 0x0);
        gbc.writeMem(0x1c9e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x96f7);
        EXPECT(gbc.pc(), 0x1ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00C3
        gbc.setState(0x6afc, 0x8dc7, 0x1a00, 0x9937, 0xccf0, 0x737b, 0x0, 0x0);
        gbc.writeMem(0x6afc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0x6afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00C4
        gbc.setState(0xed, 0x600e, 0xf750, 0x2498, 0x830b, 0x3584, 0x1, 0x0);
        gbc.writeMem(0xed, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x600e);
        EXPECT(gbc.pc(), 0xef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00C5
        gbc.setState(0xb67e, 0x7b6c, 0x1fc0, 0x2afe, 0xd6a0, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xb67e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7b6c);
        EXPECT(gbc.pc(), 0xb680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67e), 0xcb);
        EXPECT(gbc.readMem(0xb67f), 0x64);
        // CB 64 00C6
        gbc.setState(0xacdd, 0x8a43, 0x6e90, 0xa40f, 0x154f, 0x5624, 0x1, 0x0);
        gbc.writeMem(0xacdd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8a43);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdd), 0xcb);
        EXPECT(gbc.readMem(0xacde), 0x64);
        // CB 64 00C7
        gbc.setState(0xee3c, 0x7ba6, 0x29c0, 0xc859, 0xcffd, 0x3158, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7ba6);
        EXPECT(gbc.pc(), 0xee3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3c), 0xcb);
        EXPECT(gbc.readMem(0xee3d), 0x64);
        // CB 64 00C8
        gbc.setState(0x6d26, 0x849c, 0xccf0, 0x1cde, 0x9ae1, 0xa04f, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x849c);
        EXPECT(gbc.pc(), 0x6d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00C9
        gbc.setState(0xdf77, 0xe395, 0x62c0, 0xd48, 0x7ab6, 0xd869, 0x1, 0x0);
        gbc.writeMem(0xdf77, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe395);
        EXPECT(gbc.pc(), 0xdf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf77), 0xcb);
        EXPECT(gbc.readMem(0xdf78), 0x64);
        // CB 64 00CA
        gbc.setState(0xa84e, 0x7626, 0xec70, 0xeaf0, 0xe93a, 0x8c26, 0x0, 0x1);
        gbc.writeMem(0xa84e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7626);
        EXPECT(gbc.pc(), 0xa850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84e), 0xcb);
        EXPECT(gbc.readMem(0xa84f), 0x64);
        // CB 64 00CB
        gbc.setState(0x3532, 0x7d5c, 0x3210, 0x329d, 0xfb1f, 0x221, 0x1, 0x0);
        gbc.writeMem(0x3532, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7d5c);
        EXPECT(gbc.pc(), 0x3534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00CC
        gbc.setState(0xb379, 0x793a, 0x6480, 0xf4e, 0xcb61, 0x1b43, 0x1, 0x0);
        gbc.writeMem(0xb379, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x793a);
        EXPECT(gbc.pc(), 0xb37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb379), 0xcb);
        EXPECT(gbc.readMem(0xb37a), 0x64);
        // CB 64 00CD
        gbc.setState(0x17e, 0xb4f2, 0x15e0, 0xfafc, 0x7201, 0xdba4, 0x1, 0x0);
        gbc.writeMem(0x17e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb4f2);
        EXPECT(gbc.pc(), 0x180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00D0
        gbc.setState(0xe5, 0xced2, 0x8910, 0x422e, 0xbb88, 0x320c, 0x1, 0x1);
        gbc.writeMem(0xe5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xced2);
        EXPECT(gbc.pc(), 0xe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00D1
        gbc.setState(0xc6f4, 0x68bc, 0x3110, 0x75ad, 0xea7c, 0x33bd, 0x1, 0x1);
        gbc.writeMem(0xc6f4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x68bc);
        EXPECT(gbc.pc(), 0xc6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f4), 0xcb);
        EXPECT(gbc.readMem(0xc6f5), 0x64);
        // CB 64 00D2
        gbc.setState(0xa6fa, 0x6d73, 0x4d00, 0x7846, 0x5c1a, 0x482e, 0x1, 0x0);
        gbc.writeMem(0xa6fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6d73);
        EXPECT(gbc.pc(), 0xa6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0xcb);
        EXPECT(gbc.readMem(0xa6fb), 0x64);
        // CB 64 00D3
        gbc.setState(0x6a00, 0x73be, 0x5090, 0xefe2, 0x844, 0x3319, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x73be);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00D4
        gbc.setState(0x6137, 0x801c, 0x4070, 0xd647, 0x9608, 0xe8d0, 0x0, 0x0);
        gbc.writeMem(0x6137, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x801c);
        EXPECT(gbc.pc(), 0x6139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00D5
        gbc.setState(0x7d33, 0xe9ed, 0x3560, 0x920c, 0x219a, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0x7d33, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe9ed);
        EXPECT(gbc.pc(), 0x7d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00D6
        gbc.setState(0xb4ba, 0xc1ce, 0x7e60, 0x69b1, 0xb1bb, 0x7fcc, 0x1, 0x1);
        gbc.writeMem(0xb4ba, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc1ce);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ba), 0xcb);
        EXPECT(gbc.readMem(0xb4bb), 0x64);
        // CB 64 00D7
        gbc.setState(0x3f9, 0x41b6, 0xede0, 0x1577, 0x8917, 0xab0e, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x41b6);
        EXPECT(gbc.pc(), 0x3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00D9
        gbc.setState(0xa094, 0x76d0, 0x7590, 0x4d73, 0x3b9e, 0x3e5d, 0x0, 0x1);
        gbc.writeMem(0xa094, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x76d0);
        EXPECT(gbc.pc(), 0xa096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa094), 0xcb);
        EXPECT(gbc.readMem(0xa095), 0x64);
        // CB 64 00DA
        gbc.setState(0xcb0a, 0x3a50, 0x6d00, 0x550e, 0x7fd7, 0xff12, 0x0, 0x0);
        gbc.writeMem(0xcb0a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3a50);
        EXPECT(gbc.pc(), 0xcb0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0a), 0xcb);
        EXPECT(gbc.readMem(0xcb0b), 0x64);
        // CB 64 00DB
        gbc.setState(0xad03, 0x3be0, 0x7dd0, 0xd054, 0x2725, 0x6083, 0x1, 0x0);
        gbc.writeMem(0xad03, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0xad05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad03), 0xcb);
        EXPECT(gbc.readMem(0xad04), 0x64);
        // CB 64 00DC
        gbc.setState(0xe53c, 0x36c4, 0xe90, 0xabac, 0x7a59, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0xe53c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x36c4);
        EXPECT(gbc.pc(), 0xe53e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53c), 0xcb);
        EXPECT(gbc.readMem(0xe53d), 0x64);
        // CB 64 00DD
        gbc.setState(0x672d, 0xd21b, 0x8e90, 0xc86c, 0x134, 0x3356, 0x0, 0x0);
        gbc.writeMem(0x672d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd21b);
        EXPECT(gbc.pc(), 0x672f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00DE
        gbc.setState(0xace3, 0xb111, 0x6920, 0xd92c, 0xb51b, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0xace3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb111);
        EXPECT(gbc.pc(), 0xace5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace3), 0xcb);
        EXPECT(gbc.readMem(0xace4), 0x64);
        // CB 64 00DF
        gbc.setState(0xacce, 0x8764, 0xaaa0, 0xb4d, 0xcba1, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0xacce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8764);
        EXPECT(gbc.pc(), 0xacd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacce), 0xcb);
        EXPECT(gbc.readMem(0xaccf), 0x64);
        // CB 64 00E0
        gbc.setState(0xd014, 0xb8b1, 0x55e0, 0xd796, 0xb07c, 0x884a, 0x1, 0x0);
        gbc.writeMem(0xd014, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb8b1);
        EXPECT(gbc.pc(), 0xd016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd014), 0xcb);
        EXPECT(gbc.readMem(0xd015), 0x64);
        // CB 64 00E1
        gbc.setState(0xa671, 0xe3a0, 0xab0, 0x6894, 0x5a9, 0xbc5b, 0x1, 0x1);
        gbc.writeMem(0xa671, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe3a0);
        EXPECT(gbc.pc(), 0xa673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa671), 0xcb);
        EXPECT(gbc.readMem(0xa672), 0x64);
        // CB 64 00E2
        gbc.setState(0x56f0, 0x7e52, 0x4910, 0x4a61, 0x6c8, 0x669f, 0x1, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7e52);
        EXPECT(gbc.pc(), 0x56f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00E3
        gbc.setState(0xa6a7, 0x1ea9, 0xcd00, 0x5dd7, 0xd207, 0xa5a7, 0x1, 0x1);
        gbc.writeMem(0xa6a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1ea9);
        EXPECT(gbc.pc(), 0xa6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a7), 0xcb);
        EXPECT(gbc.readMem(0xa6a8), 0x64);
        // CB 64 00E5
        gbc.setState(0xd0cd, 0x39a2, 0x7b0, 0xebd, 0xed61, 0x85fb, 0x0, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x39a2);
        EXPECT(gbc.pc(), 0xd0cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0cd), 0xcb);
        EXPECT(gbc.readMem(0xd0ce), 0x64);
        // CB 64 00E6
        gbc.setState(0x3422, 0xa4d, 0x8e70, 0xc9f4, 0xdbda, 0xcc8e, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa4d);
        EXPECT(gbc.pc(), 0x3424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00E7
        gbc.setState(0x96f3, 0x3967, 0x3080, 0xbc7c, 0x89e, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x96f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3967);
        EXPECT(gbc.pc(), 0x96f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f3), 0xcb);
        EXPECT(gbc.readMem(0x96f4), 0x64);
        // CB 64 00E8
        gbc.setState(0x3d3f, 0xbb15, 0x7460, 0xd4d7, 0xe1f3, 0x81d4, 0x1, 0x1);
        gbc.writeMem(0x3d3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbb15);
        EXPECT(gbc.pc(), 0x3d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00E9
        gbc.setState(0xed4d, 0x1e58, 0xa940, 0xc2c9, 0xc0b2, 0x5fe7, 0x1, 0x1);
        gbc.writeMem(0xed4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1e58);
        EXPECT(gbc.pc(), 0xed4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4d), 0xcb);
        EXPECT(gbc.readMem(0xed4e), 0x64);
        // CB 64 00EA
        gbc.setState(0x3650, 0x6b2c, 0x8990, 0x2331, 0x29b3, 0x4af8, 0x0, 0x1);
        gbc.writeMem(0x3650, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6b2c);
        EXPECT(gbc.pc(), 0x3652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00EB
        gbc.setState(0x70c0, 0x1918, 0xa360, 0x16e3, 0x12aa, 0x5db6, 0x0, 0x1);
        gbc.writeMem(0x70c0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1918);
        EXPECT(gbc.pc(), 0x70c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00EC
        gbc.setState(0xdb5a, 0x9a7b, 0x45e0, 0xdcb8, 0xde71, 0xc046, 0x0, 0x0);
        gbc.writeMem(0xdb5a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9a7b);
        EXPECT(gbc.pc(), 0xdb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5a), 0xcb);
        EXPECT(gbc.readMem(0xdb5b), 0x64);
        // CB 64 00ED
        gbc.setState(0x7e85, 0x4ccd, 0x8150, 0xa4e2, 0xec89, 0x605a, 0x0, 0x0);
        gbc.writeMem(0x7e85, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4ccd);
        EXPECT(gbc.pc(), 0x7e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00EE
        gbc.setState(0x311, 0x6d38, 0xfba0, 0x7900, 0x73b9, 0x27c2, 0x1, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00EF
        gbc.setState(0x9332, 0x80eb, 0xe260, 0x1775, 0x6bed, 0x1389, 0x0, 0x0);
        gbc.writeMem(0x9332, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x80eb);
        EXPECT(gbc.pc(), 0x9334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9332), 0xcb);
        EXPECT(gbc.readMem(0x9333), 0x64);
        // CB 64 00F0
        gbc.setState(0x4089, 0xa590, 0x82b0, 0x325c, 0x4682, 0x4013, 0x1, 0x0);
        gbc.writeMem(0x4089, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0x408b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F2
        gbc.setState(0x3945, 0xc18c, 0x9710, 0x9aa0, 0xc4d3, 0xb2bd, 0x0, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc18c);
        EXPECT(gbc.pc(), 0x3947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F3
        gbc.setState(0x2628, 0x86aa, 0x30, 0xf338, 0x1280, 0xa610, 0x1, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0x262a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F4
        gbc.setState(0xa2, 0x2527, 0x8e0, 0xfdd1, 0xb012, 0xbcd2, 0x0, 0x0);
        gbc.writeMem(0xa2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2527);
        EXPECT(gbc.pc(), 0xa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00F5
        gbc.setState(0x5925, 0x7aee, 0xb670, 0x48, 0xa06d, 0x7013, 0x1, 0x0);
        gbc.writeMem(0x5925, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7aee);
        EXPECT(gbc.pc(), 0x5927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F6
        gbc.setState(0x2c1c, 0x3248, 0x9410, 0x4bfc, 0x8813, 0x83cb, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3248);
        EXPECT(gbc.pc(), 0x2c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F7
        gbc.setState(0x3c89, 0x4888, 0xe6d0, 0x26c9, 0x3aaf, 0xa54c, 0x0, 0x0);
        gbc.writeMem(0x3c89, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4888);
        EXPECT(gbc.pc(), 0x3c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00F8
        gbc.setState(0x1044, 0xc3ed, 0x7960, 0x2ff3, 0x6ca9, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0x1044, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc3ed);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00F9
        gbc.setState(0x79f1, 0x46c0, 0xa040, 0xe5ee, 0xf16f, 0x9ed4, 0x0, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x46c0);
        EXPECT(gbc.pc(), 0x79f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 00FA
        gbc.setState(0x7fed, 0xd4c6, 0x6630, 0xb236, 0x4421, 0x284c, 0x1, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd4c6);
        EXPECT(gbc.pc(), 0x7fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00FB
        gbc.setState(0xdeb5, 0x3931, 0xdbf0, 0xabca, 0x9bc0, 0x2189, 0x1, 0x1);
        gbc.writeMem(0xdeb5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3931);
        EXPECT(gbc.pc(), 0xdeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb5), 0xcb);
        EXPECT(gbc.readMem(0xdeb6), 0x64);
        // CB 64 00FC
        gbc.setState(0x70ae, 0x56a1, 0x3390, 0x37b9, 0x61de, 0xbb0d, 0x0, 0x1);
        gbc.writeMem(0x70ae, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x56a1);
        EXPECT(gbc.pc(), 0x70b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00FD
        gbc.setState(0x2567, 0x184a, 0x4a50, 0x3f33, 0xcb7e, 0xa0c2, 0x1, 0x0);
        gbc.writeMem(0x2567, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x184a);
        EXPECT(gbc.pc(), 0x2569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 00FE
        gbc.setState(0xea34, 0x4432, 0xab0, 0x27f1, 0x1eb5, 0x35f6, 0x1, 0x0);
        gbc.writeMem(0xea34, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4432);
        EXPECT(gbc.pc(), 0xea36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea34), 0xcb);
        EXPECT(gbc.readMem(0xea35), 0x64);
        // CB 64 00FF
        gbc.setState(0xe512, 0x3de6, 0x980, 0x47e8, 0x42e2, 0xc6a3, 0x0, 0x0);
        gbc.writeMem(0xe512, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3de6);
        EXPECT(gbc.pc(), 0xe514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe512), 0xcb);
        EXPECT(gbc.readMem(0xe513), 0x64);
        // CB 64 0100
        gbc.setState(0x288e, 0xffbb, 0x6910, 0x311a, 0x7742, 0xa10b, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xffbb);
        EXPECT(gbc.pc(), 0x2890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0101
        gbc.setState(0xdcf2, 0x3de, 0x2a30, 0x198d, 0x2cb5, 0x8389, 0x1, 0x1);
        gbc.writeMem(0xdcf2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3de);
        EXPECT(gbc.pc(), 0xdcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf2), 0xcb);
        EXPECT(gbc.readMem(0xdcf3), 0x64);
        // CB 64 0102
        gbc.setState(0xb6a6, 0x2ba2, 0xe770, 0x8e1c, 0x7127, 0x18bd, 0x0, 0x0);
        gbc.writeMem(0xb6a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2ba2);
        EXPECT(gbc.pc(), 0xb6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a6), 0xcb);
        EXPECT(gbc.readMem(0xb6a7), 0x64);
        // CB 64 0103
        gbc.setState(0x1363, 0x949, 0x28b0, 0xac41, 0x7f94, 0xa4a7, 0x1, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x949);
        EXPECT(gbc.pc(), 0x1365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0104
        gbc.setState(0x687f, 0x10fb, 0x7320, 0x1459, 0x6718, 0x1f, 0x1, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x10fb);
        EXPECT(gbc.pc(), 0x6881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0105
        gbc.setState(0xb77d, 0xc722, 0x54b0, 0x94fc, 0x1272, 0xd91c, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc722);
        EXPECT(gbc.pc(), 0xb77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77d), 0xcb);
        EXPECT(gbc.readMem(0xb77e), 0x64);
        // CB 64 0106
        gbc.setState(0x8e93, 0xc721, 0xeba0, 0x1bc3, 0xb82e, 0x533a, 0x0, 0x0);
        gbc.writeMem(0x8e93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc721);
        EXPECT(gbc.pc(), 0x8e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e93), 0xcb);
        EXPECT(gbc.readMem(0x8e94), 0x64);
        // CB 64 0107
        gbc.setState(0xb79a, 0x65e5, 0x1730, 0x375b, 0x8145, 0xf3f2, 0x1, 0x1);
        gbc.writeMem(0xb79a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x65e5);
        EXPECT(gbc.pc(), 0xb79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79a), 0xcb);
        EXPECT(gbc.readMem(0xb79b), 0x64);
        // CB 64 0108
        gbc.setState(0xb7ac, 0xdcb7, 0x98c0, 0xfc1d, 0x3e98, 0x2291, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0xb7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0xcb);
        EXPECT(gbc.readMem(0xb7ad), 0x64);
        // CB 64 0109
        gbc.setState(0x3c05, 0xd363, 0x3eb0, 0x505, 0xc6e2, 0x40f, 0x1, 0x0);
        gbc.writeMem(0x3c05, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd363);
        EXPECT(gbc.pc(), 0x3c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 010A
        gbc.setState(0x2d98, 0x22b4, 0x5940, 0x663d, 0x4be1, 0x24e7, 0x1, 0x1);
        gbc.writeMem(0x2d98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x22b4);
        EXPECT(gbc.pc(), 0x2d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 010B
        gbc.setState(0xa1e7, 0x5c97, 0x78a0, 0xaede, 0x2bdf, 0xe0d0, 0x1, 0x0);
        gbc.writeMem(0xa1e7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5c97);
        EXPECT(gbc.pc(), 0xa1e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e7), 0xcb);
        EXPECT(gbc.readMem(0xa1e8), 0x64);
        // CB 64 010C
        gbc.setState(0x9061, 0x3b13, 0xf1c0, 0x2a73, 0x6daa, 0x3238, 0x1, 0x1);
        gbc.writeMem(0x9061, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3b13);
        EXPECT(gbc.pc(), 0x9063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9061), 0xcb);
        EXPECT(gbc.readMem(0x9062), 0x64);
        // CB 64 010D
        gbc.setState(0x8590, 0xa3e, 0xcbc0, 0xa41b, 0x14d1, 0xc2d3, 0x1, 0x1);
        gbc.writeMem(0x8590, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa3e);
        EXPECT(gbc.pc(), 0x8592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8590), 0xcb);
        EXPECT(gbc.readMem(0x8591), 0x64);
        // CB 64 010E
        gbc.setState(0x6879, 0xcf87, 0x66a0, 0xbefb, 0x9e6d, 0x6157, 0x1, 0x1);
        gbc.writeMem(0x6879, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcf87);
        EXPECT(gbc.pc(), 0x687b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 010F
        gbc.setState(0xd903, 0xfc1f, 0xa490, 0xfc4b, 0xe887, 0xd6d4, 0x1, 0x0);
        gbc.writeMem(0xd903, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfc1f);
        EXPECT(gbc.pc(), 0xd905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd903), 0xcb);
        EXPECT(gbc.readMem(0xd904), 0x64);
        // CB 64 0111
        gbc.setState(0xd331, 0xc245, 0x2230, 0xd892, 0x713b, 0x564b, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc245);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0x64);
        // CB 64 0112
        gbc.setState(0x6e90, 0x795f, 0x84d0, 0xaa27, 0xed06, 0xd31a, 0x0, 0x0);
        gbc.writeMem(0x6e90, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x6e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0113
        gbc.setState(0x7b92, 0xf892, 0x67d0, 0xa568, 0x8e78, 0x10c7, 0x1, 0x0);
        gbc.writeMem(0x7b92, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf892);
        EXPECT(gbc.pc(), 0x7b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0114
        gbc.setState(0xd429, 0x8517, 0x7630, 0xc366, 0x55b7, 0x7d94, 0x0, 0x0);
        gbc.writeMem(0xd429, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8517);
        EXPECT(gbc.pc(), 0xd42b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd429), 0xcb);
        EXPECT(gbc.readMem(0xd42a), 0x64);
        // CB 64 0115
        gbc.setState(0xa911, 0xc95a, 0x1ae0, 0xf7f0, 0x2df, 0x58c5, 0x1, 0x0);
        gbc.writeMem(0xa911, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc95a);
        EXPECT(gbc.pc(), 0xa913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa911), 0xcb);
        EXPECT(gbc.readMem(0xa912), 0x64);
        // CB 64 0116
        gbc.setState(0x4d15, 0xf628, 0xa290, 0x2f84, 0x3ff1, 0xa93b, 0x0, 0x1);
        gbc.writeMem(0x4d15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf628);
        EXPECT(gbc.pc(), 0x4d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0117
        gbc.setState(0xd2f6, 0x1540, 0x97d0, 0x52b7, 0x3074, 0x4689, 0x1, 0x1);
        gbc.writeMem(0xd2f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0xd2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f6), 0xcb);
        EXPECT(gbc.readMem(0xd2f7), 0x64);
        // CB 64 0118
        gbc.setState(0x3a7f, 0x6c70, 0xcf30, 0x605e, 0x1b5c, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x3a7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6c70);
        EXPECT(gbc.pc(), 0x3a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0119
        gbc.setState(0xe6e8, 0x337d, 0x1d30, 0x6568, 0xf0b0, 0xa3c0, 0x1, 0x0);
        gbc.writeMem(0xe6e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x337d);
        EXPECT(gbc.pc(), 0xe6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e8), 0xcb);
        EXPECT(gbc.readMem(0xe6e9), 0x64);
        // CB 64 011A
        gbc.setState(0x865b, 0x246b, 0xb5c0, 0xc9e0, 0xf31c, 0xb59e, 0x0, 0x1);
        gbc.writeMem(0x865b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x246b);
        EXPECT(gbc.pc(), 0x865d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865b), 0xcb);
        EXPECT(gbc.readMem(0x865c), 0x64);
        // CB 64 011B
        gbc.setState(0x5ebd, 0xd4e2, 0xf860, 0x7d1d, 0x4158, 0x7661, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd4e2);
        EXPECT(gbc.pc(), 0x5ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 011C
        gbc.setState(0xa099, 0x22af, 0xea60, 0xdaa1, 0x3300, 0xc6b6, 0x1, 0x0);
        gbc.writeMem(0xa099, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x22af);
        EXPECT(gbc.pc(), 0xa09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa099), 0xcb);
        EXPECT(gbc.readMem(0xa09a), 0x64);
        // CB 64 011D
        gbc.setState(0x8501, 0x900e, 0x96b0, 0x370f, 0x541f, 0x9ca8, 0x1, 0x0);
        gbc.writeMem(0x8501, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x900e);
        EXPECT(gbc.pc(), 0x8503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8501), 0xcb);
        EXPECT(gbc.readMem(0x8502), 0x64);
        // CB 64 011E
        gbc.setState(0xb7ef, 0x21f2, 0x7150, 0x664d, 0xe4f1, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0xb7ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x21f2);
        EXPECT(gbc.pc(), 0xb7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ef), 0xcb);
        EXPECT(gbc.readMem(0xb7f0), 0x64);
        // CB 64 011F
        gbc.setState(0x1fd9, 0x9a78, 0xe640, 0x9130, 0x1d06, 0xee51, 0x1, 0x1);
        gbc.writeMem(0x1fd9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9a78);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0120
        gbc.setState(0xa866, 0x6ace, 0x9e60, 0xbdf8, 0x410d, 0xd5c2, 0x0, 0x1);
        gbc.writeMem(0xa866, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6ace);
        EXPECT(gbc.pc(), 0xa868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa866), 0xcb);
        EXPECT(gbc.readMem(0xa867), 0x64);
        // CB 64 0121
        gbc.setState(0x24c1, 0xa5fb, 0x7180, 0x796d, 0xa62e, 0x381e, 0x0, 0x1);
        gbc.writeMem(0x24c1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa5fb);
        EXPECT(gbc.pc(), 0x24c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0122
        gbc.setState(0x84fc, 0x6838, 0x80d0, 0xa61, 0x785, 0x1916, 0x1, 0x0);
        gbc.writeMem(0x84fc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6838);
        EXPECT(gbc.pc(), 0x84fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fc), 0xcb);
        EXPECT(gbc.readMem(0x84fd), 0x64);
        // CB 64 0123
        gbc.setState(0x706e, 0xc66f, 0xc2a0, 0xec97, 0x6dc3, 0xcce6, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc66f);
        EXPECT(gbc.pc(), 0x7070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0124
        gbc.setState(0xc6e4, 0x59de, 0x1c0, 0x106b, 0xa11c, 0xd999, 0x1, 0x1);
        gbc.writeMem(0xc6e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x59de);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e4), 0xcb);
        EXPECT(gbc.readMem(0xc6e5), 0x64);
        // CB 64 0125
        gbc.setState(0x3b10, 0xdf8a, 0xce0, 0xa572, 0x4c1e, 0xa749, 0x0, 0x0);
        gbc.writeMem(0x3b10, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdf8a);
        EXPECT(gbc.pc(), 0x3b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0126
        gbc.setState(0xdc7f, 0x4977, 0x1a50, 0x4d45, 0xda09, 0x1765, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4977);
        EXPECT(gbc.pc(), 0xdc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7f), 0xcb);
        EXPECT(gbc.readMem(0xdc80), 0x64);
        // CB 64 0127
        gbc.setState(0xb78f, 0x8551, 0xec70, 0x2379, 0x5c40, 0xb62b, 0x0, 0x0);
        gbc.writeMem(0xb78f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0xb791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78f), 0xcb);
        EXPECT(gbc.readMem(0xb790), 0x64);
        // CB 64 0128
        gbc.setState(0xc0e6, 0xdd7b, 0xdd90, 0x9c79, 0x56e4, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0xc0e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdd7b);
        EXPECT(gbc.pc(), 0xc0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e6), 0xcb);
        EXPECT(gbc.readMem(0xc0e7), 0x64);
        // CB 64 0129
        gbc.setState(0xe81c, 0x3b57, 0xb050, 0x9fda, 0x3635, 0xdf96, 0x1, 0x1);
        gbc.writeMem(0xe81c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3b57);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe81c), 0xcb);
        EXPECT(gbc.readMem(0xe81d), 0x64);
        // CB 64 012A
        gbc.setState(0x4cda, 0x6c4e, 0xc660, 0xe27c, 0x453b, 0xd9e4, 0x0, 0x1);
        gbc.writeMem(0x4cda, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c4e);
        EXPECT(gbc.pc(), 0x4cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 012B
        gbc.setState(0x4fea, 0x252b, 0x5730, 0x916e, 0xe266, 0x429, 0x1, 0x1);
        gbc.writeMem(0x4fea, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x252b);
        EXPECT(gbc.pc(), 0x4fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 012C
        gbc.setState(0x62bb, 0x458c, 0x3050, 0x133b, 0xabb1, 0xfef7, 0x0, 0x0);
        gbc.writeMem(0x62bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x458c);
        EXPECT(gbc.pc(), 0x62bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 012D
        gbc.setState(0x950, 0x7cbb, 0x3e90, 0x6869, 0xdf7f, 0xba60, 0x1, 0x1);
        gbc.writeMem(0x950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7cbb);
        EXPECT(gbc.pc(), 0x952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 012E
        gbc.setState(0x79, 0x7543, 0xb6a0, 0xa4dc, 0x1c47, 0xb8f6, 0x1, 0x0);
        gbc.writeMem(0x79, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7543);
        EXPECT(gbc.pc(), 0x7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 012F
        gbc.setState(0x75a6, 0x8b99, 0xc430, 0xa72d, 0xac4c, 0x2517, 0x0, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8b99);
        EXPECT(gbc.pc(), 0x75a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0130
        gbc.setState(0xb9d4, 0xfb27, 0x71b0, 0xa10, 0xe2c8, 0x6866, 0x1, 0x0);
        gbc.writeMem(0xb9d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfb27);
        EXPECT(gbc.pc(), 0xb9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d4), 0xcb);
        EXPECT(gbc.readMem(0xb9d5), 0x64);
        // CB 64 0131
        gbc.setState(0x118c, 0xd0b8, 0x7040, 0x9097, 0x23ec, 0xd90e, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd0b8);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0132
        gbc.setState(0x269, 0x1483, 0x2f40, 0x15f9, 0x9017, 0xe81c, 0x0, 0x0);
        gbc.writeMem(0x269, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1483);
        EXPECT(gbc.pc(), 0x26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0134
        gbc.setState(0x1e93, 0xc1c, 0x53b0, 0x5ae1, 0xb74c, 0xbc3, 0x0, 0x0);
        gbc.writeMem(0x1e93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc1c);
        EXPECT(gbc.pc(), 0x1e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0135
        gbc.setState(0x1c45, 0xa45c, 0x2b70, 0xc42f, 0xda19, 0xddcf, 0x1, 0x0);
        gbc.writeMem(0x1c45, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa45c);
        EXPECT(gbc.pc(), 0x1c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0136
        gbc.setState(0x2027, 0x94f1, 0x29a0, 0x1d0f, 0x87b7, 0xba43, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x94f1);
        EXPECT(gbc.pc(), 0x2029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0137
        gbc.setState(0x901b, 0x694c, 0x2a40, 0xea00, 0xa2b1, 0x4873, 0x1, 0x1);
        gbc.writeMem(0x901b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x694c);
        EXPECT(gbc.pc(), 0x901d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901b), 0xcb);
        EXPECT(gbc.readMem(0x901c), 0x64);
        // CB 64 0138
        gbc.setState(0xe641, 0x68c6, 0xdef0, 0x58e2, 0x5edf, 0x1012, 0x0, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x68c6);
        EXPECT(gbc.pc(), 0xe643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe641), 0xcb);
        EXPECT(gbc.readMem(0xe642), 0x64);
        // CB 64 0139
        gbc.setState(0x85c4, 0xdebd, 0xc7d0, 0xae3f, 0x5b2d, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdebd);
        EXPECT(gbc.pc(), 0x85c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c4), 0xcb);
        EXPECT(gbc.readMem(0x85c5), 0x64);
        // CB 64 013A
        gbc.setState(0x78e7, 0xf6a2, 0x84f0, 0xa71, 0xd87a, 0xe23, 0x1, 0x0);
        gbc.writeMem(0x78e7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf6a2);
        EXPECT(gbc.pc(), 0x78e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 013C
        gbc.setState(0x84bf, 0xf34d, 0x1b10, 0x4fed, 0x82d2, 0x945b, 0x0, 0x1);
        gbc.writeMem(0x84bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf34d);
        EXPECT(gbc.pc(), 0x84c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bf), 0xcb);
        EXPECT(gbc.readMem(0x84c0), 0x64);
        // CB 64 013D
        gbc.setState(0x8d51, 0xc6dd, 0x9f40, 0x58f2, 0x1d06, 0x1058, 0x1, 0x0);
        gbc.writeMem(0x8d51, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc6dd);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0x64);
        // CB 64 013E
        gbc.setState(0x6db0, 0x3ee, 0x4890, 0xc3fd, 0xf642, 0xd730, 0x0, 0x1);
        gbc.writeMem(0x6db0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3ee);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 013F
        gbc.setState(0x2575, 0xca62, 0xe5b0, 0xb48a, 0xba43, 0x9997, 0x1, 0x1);
        gbc.writeMem(0x2575, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x2577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0140
        gbc.setState(0x8d1c, 0x8413, 0xcca0, 0x6cb9, 0x3fd4, 0xa69d, 0x1, 0x0);
        gbc.writeMem(0x8d1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8413);
        EXPECT(gbc.pc(), 0x8d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1c), 0xcb);
        EXPECT(gbc.readMem(0x8d1d), 0x64);
        // CB 64 0142
        gbc.setState(0x9d83, 0x61f7, 0xa260, 0x24a1, 0xcd8c, 0x1f25, 0x1, 0x1);
        gbc.writeMem(0x9d83, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x61f7);
        EXPECT(gbc.pc(), 0x9d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d83), 0xcb);
        EXPECT(gbc.readMem(0x9d84), 0x64);
        // CB 64 0143
        gbc.setState(0x91da, 0xa91e, 0x8c10, 0xb35e, 0x8e2f, 0x4009, 0x0, 0x1);
        gbc.writeMem(0x91da, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa91e);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0x64);
        // CB 64 0144
        gbc.setState(0xd44, 0xb97b, 0x2be0, 0x3717, 0x301c, 0x2c69, 0x0, 0x0);
        gbc.writeMem(0xd44, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb97b);
        EXPECT(gbc.pc(), 0xd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0145
        gbc.setState(0x1f48, 0x66e, 0xd190, 0x4e20, 0x47f6, 0x8e9f, 0x1, 0x0);
        gbc.writeMem(0x1f48, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x66e);
        EXPECT(gbc.pc(), 0x1f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0146
        gbc.setState(0xe6e6, 0xf348, 0xc6a0, 0x20b9, 0x1ee, 0xf621, 0x0, 0x0);
        gbc.writeMem(0xe6e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf348);
        EXPECT(gbc.pc(), 0xe6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e6), 0xcb);
        EXPECT(gbc.readMem(0xe6e7), 0x64);
        // CB 64 0147
        gbc.setState(0xc712, 0x70da, 0xd320, 0xf91f, 0x113c, 0xb9f, 0x0, 0x0);
        gbc.writeMem(0xc712, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x70da);
        EXPECT(gbc.pc(), 0xc714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc712), 0xcb);
        EXPECT(gbc.readMem(0xc713), 0x64);
        // CB 64 0148
        gbc.setState(0x4b42, 0xba2d, 0x1230, 0x66df, 0xbca6, 0xa69f, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xba2d);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0149
        gbc.setState(0x4eb8, 0x3ef5, 0x8360, 0xe14a, 0x56d5, 0x71ce, 0x0, 0x0);
        gbc.writeMem(0x4eb8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3ef5);
        EXPECT(gbc.pc(), 0x4eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 014A
        gbc.setState(0x62b6, 0xa8dd, 0xf0b0, 0x8e80, 0xca85, 0x76b1, 0x0, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa8dd);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 014B
        gbc.setState(0x238d, 0x4d6c, 0x9e70, 0x5eaf, 0xe622, 0xe236, 0x1, 0x0);
        gbc.writeMem(0x238d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4d6c);
        EXPECT(gbc.pc(), 0x238f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 014C
        gbc.setState(0xe3b1, 0x33e, 0xa8f0, 0x3105, 0x1480, 0xf9a, 0x0, 0x0);
        gbc.writeMem(0xe3b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x33e);
        EXPECT(gbc.pc(), 0xe3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b1), 0xcb);
        EXPECT(gbc.readMem(0xe3b2), 0x64);
        // CB 64 014D
        gbc.setState(0xef2e, 0xb053, 0xcf50, 0x80e5, 0x654, 0xa93, 0x0, 0x0);
        gbc.writeMem(0xef2e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb053);
        EXPECT(gbc.pc(), 0xef30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2e), 0xcb);
        EXPECT(gbc.readMem(0xef2f), 0x64);
        // CB 64 014E
        gbc.setState(0xa57, 0xf46b, 0xecf0, 0x38e7, 0x3d73, 0xf5bf, 0x1, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf46b);
        EXPECT(gbc.pc(), 0xa59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 014F
        gbc.setState(0x811, 0x5159, 0xfb80, 0x14ba, 0x47e7, 0xd2d3, 0x1, 0x1);
        gbc.writeMem(0x811, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0x813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0150
        gbc.setState(0x84b0, 0x196b, 0xc270, 0x2ed6, 0xe343, 0x5723, 0x1, 0x1);
        gbc.writeMem(0x84b0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b0), 0xcb);
        EXPECT(gbc.readMem(0x84b1), 0x64);
        // CB 64 0151
        gbc.setState(0x292, 0x5370, 0xfb00, 0x55d0, 0xdbde, 0x5e18, 0x0, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5370);
        EXPECT(gbc.pc(), 0x294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0152
        gbc.setState(0x5e05, 0x226a, 0x95c0, 0xbd69, 0x293d, 0x78f3, 0x1, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x226a);
        EXPECT(gbc.pc(), 0x5e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0153
        gbc.setState(0xe8d5, 0x5ce1, 0x53a0, 0xd211, 0x797c, 0x8d92, 0x0, 0x1);
        gbc.writeMem(0xe8d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0xe8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d5), 0xcb);
        EXPECT(gbc.readMem(0xe8d6), 0x64);
        // CB 64 0154
        gbc.setState(0x51c4, 0x8667, 0x34c0, 0x4dcf, 0xe7b, 0xc81, 0x1, 0x0);
        gbc.writeMem(0x51c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x51c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0155
        gbc.setState(0xee50, 0xbef8, 0xd2e0, 0xcd83, 0x7a1, 0xd032, 0x1, 0x0);
        gbc.writeMem(0xee50, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbef8);
        EXPECT(gbc.pc(), 0xee52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee50), 0xcb);
        EXPECT(gbc.readMem(0xee51), 0x64);
        // CB 64 0157
        gbc.setState(0x75b, 0xfc88, 0xf5f0, 0x7682, 0x4e0e, 0xa394, 0x0, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfc88);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0158
        gbc.setState(0x2b9d, 0xb5ac, 0xeca0, 0x6cb8, 0x472e, 0x347f, 0x1, 0x1);
        gbc.writeMem(0x2b9d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb5ac);
        EXPECT(gbc.pc(), 0x2b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0159
        gbc.setState(0x9a8a, 0x704a, 0xe2e0, 0xac9f, 0xc51a, 0xd74a, 0x1, 0x1);
        gbc.writeMem(0x9a8a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x704a);
        EXPECT(gbc.pc(), 0x9a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a8a), 0xcb);
        EXPECT(gbc.readMem(0x9a8b), 0x64);
        // CB 64 015B
        gbc.setState(0x525, 0x2c22, 0x9920, 0x6a05, 0xac72, 0x59a1, 0x0, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2c22);
        EXPECT(gbc.pc(), 0x527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 015C
        gbc.setState(0xb886, 0xd014, 0x2050, 0xbceb, 0x400a, 0x67ac, 0x1, 0x1);
        gbc.writeMem(0xb886, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd014);
        EXPECT(gbc.pc(), 0xb888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb886), 0xcb);
        EXPECT(gbc.readMem(0xb887), 0x64);
        // CB 64 015D
        gbc.setState(0x227, 0x3ff9, 0x1950, 0x75f1, 0x8330, 0x7b7, 0x1, 0x1);
        gbc.writeMem(0x227, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3ff9);
        EXPECT(gbc.pc(), 0x229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 015E
        gbc.setState(0xb2a4, 0xd700, 0xe0a0, 0x8bcb, 0x1c7b, 0xc5fe, 0x1, 0x0);
        gbc.writeMem(0xb2a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd700);
        EXPECT(gbc.pc(), 0xb2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a4), 0xcb);
        EXPECT(gbc.readMem(0xb2a5), 0x64);
        // CB 64 015F
        gbc.setState(0x8da9, 0x2c52, 0x7930, 0xaa63, 0xbb44, 0x6564, 0x1, 0x0);
        gbc.writeMem(0x8da9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2c52);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da9), 0xcb);
        EXPECT(gbc.readMem(0x8daa), 0x64);
        // CB 64 0160
        gbc.setState(0xfc0, 0xb267, 0xc630, 0xbc1, 0xb700, 0x2326, 0x0, 0x0);
        gbc.writeMem(0xfc0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0xfc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0161
        gbc.setState(0x83d7, 0x1976, 0x2190, 0x4198, 0x2f68, 0xf802, 0x1, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1976);
        EXPECT(gbc.pc(), 0x83d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d7), 0xcb);
        EXPECT(gbc.readMem(0x83d8), 0x64);
        // CB 64 0162
        gbc.setState(0x63a6, 0x9725, 0xed00, 0x8006, 0x441a, 0xae92, 0x1, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9725);
        EXPECT(gbc.pc(), 0x63a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0163
        gbc.setState(0x576f, 0xbaac, 0x45f0, 0x62e6, 0x6a6b, 0xa764, 0x1, 0x0);
        gbc.writeMem(0x576f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbaac);
        EXPECT(gbc.pc(), 0x5771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0164
        gbc.setState(0x256, 0xcaaf, 0xbcc0, 0x7099, 0x46af, 0x95c4, 0x1, 0x1);
        gbc.writeMem(0x256, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcaaf);
        EXPECT(gbc.pc(), 0x258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0165
        gbc.setState(0x285e, 0x28d4, 0x4ce0, 0x9fdc, 0xa44a, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0x285e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0x2860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0166
        gbc.setState(0xa5bb, 0x9210, 0xeaf0, 0x4da5, 0x115d, 0x3af2, 0x0, 0x1);
        gbc.writeMem(0xa5bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9210);
        EXPECT(gbc.pc(), 0xa5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5bb), 0xcb);
        EXPECT(gbc.readMem(0xa5bc), 0x64);
        // CB 64 0167
        gbc.setState(0xc7e8, 0xdd3f, 0x8b10, 0xabce, 0x29c4, 0x10c0, 0x0, 0x1);
        gbc.writeMem(0xc7e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdd3f);
        EXPECT(gbc.pc(), 0xc7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e8), 0xcb);
        EXPECT(gbc.readMem(0xc7e9), 0x64);
        // CB 64 0168
        gbc.setState(0xa44e, 0x4bdc, 0x6d50, 0xb507, 0x14f2, 0xff12, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4bdc);
        EXPECT(gbc.pc(), 0xa450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44e), 0xcb);
        EXPECT(gbc.readMem(0xa44f), 0x64);
        // CB 64 0169
        gbc.setState(0xa423, 0x6541, 0xd170, 0xcc77, 0x6a6a, 0x31f2, 0x0, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6541);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0x64);
        // CB 64 016A
        gbc.setState(0x5af6, 0x2dcf, 0xf2a0, 0xc215, 0x6838, 0x72, 0x1, 0x1);
        gbc.writeMem(0x5af6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0x5af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 016B
        gbc.setState(0x8f74, 0x6047, 0xa0a0, 0xc72d, 0x4772, 0x1e6c, 0x1, 0x0);
        gbc.writeMem(0x8f74, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6047);
        EXPECT(gbc.pc(), 0x8f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f74), 0xcb);
        EXPECT(gbc.readMem(0x8f75), 0x64);
        // CB 64 016C
        gbc.setState(0xd436, 0x27ed, 0xc920, 0xd9d7, 0x4972, 0xe669, 0x0, 0x1);
        gbc.writeMem(0xd436, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x27ed);
        EXPECT(gbc.pc(), 0xd438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd436), 0xcb);
        EXPECT(gbc.readMem(0xd437), 0x64);
        // CB 64 016D
        gbc.setState(0x38cd, 0xb911, 0x10f0, 0xc74, 0xd38, 0x9ef0, 0x0, 0x1);
        gbc.writeMem(0x38cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb911);
        EXPECT(gbc.pc(), 0x38cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 016E
        gbc.setState(0xc03d, 0x77e4, 0xefe0, 0x97a0, 0x7731, 0x522c, 0x1, 0x0);
        gbc.writeMem(0xc03d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x77e4);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03d), 0xcb);
        EXPECT(gbc.readMem(0xc03e), 0x64);
        // CB 64 0170
        gbc.setState(0x30df, 0x3915, 0x3410, 0xe1da, 0xe81b, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0x30df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3915);
        EXPECT(gbc.pc(), 0x30e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0171
        gbc.setState(0xa233, 0x7523, 0x86c0, 0x584, 0x6e6e, 0xf557, 0x0, 0x0);
        gbc.writeMem(0xa233, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7523);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa233), 0xcb);
        EXPECT(gbc.readMem(0xa234), 0x64);
        // CB 64 0172
        gbc.setState(0x9467, 0xb1d3, 0xe9b0, 0xb819, 0xa179, 0x64dd, 0x1, 0x1);
        gbc.writeMem(0x9467, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb1d3);
        EXPECT(gbc.pc(), 0x9469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9467), 0xcb);
        EXPECT(gbc.readMem(0x9468), 0x64);
        // CB 64 0173
        gbc.setState(0xcd73, 0x5770, 0xe180, 0x717e, 0x6888, 0xc0af, 0x1, 0x0);
        gbc.writeMem(0xcd73, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5770);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0xcb);
        EXPECT(gbc.readMem(0xcd74), 0x64);
        // CB 64 0174
        gbc.setState(0x99fb, 0x1ecf, 0xf110, 0xba23, 0x69ee, 0x5bae, 0x0, 0x1);
        gbc.writeMem(0x99fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1ecf);
        EXPECT(gbc.pc(), 0x99fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fb), 0xcb);
        EXPECT(gbc.readMem(0x99fc), 0x64);
        // CB 64 0175
        gbc.setState(0x440e, 0x15f8, 0x4970, 0x2b89, 0x2afc, 0xec66, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x15f8);
        EXPECT(gbc.pc(), 0x4410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0176
        gbc.setState(0xa86c, 0xb72, 0x70a0, 0x4f1c, 0xd0f2, 0x7e4b, 0x0, 0x1);
        gbc.writeMem(0xa86c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb72);
        EXPECT(gbc.pc(), 0xa86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86c), 0xcb);
        EXPECT(gbc.readMem(0xa86d), 0x64);
        // CB 64 0177
        gbc.setState(0x39ba, 0xcb8, 0xc2f0, 0x319c, 0x3bc2, 0xa91e, 0x0, 0x0);
        gbc.writeMem(0x39ba, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcb8);
        EXPECT(gbc.pc(), 0x39bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0178
        gbc.setState(0x54b, 0xa30e, 0xe4b0, 0xe1f6, 0xbc59, 0x1d83, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa30e);
        EXPECT(gbc.pc(), 0x54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0179
        gbc.setState(0x1a45, 0xcf10, 0x3720, 0xfb68, 0x8f02, 0x821f, 0x0, 0x0);
        gbc.writeMem(0x1a45, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf10);
        EXPECT(gbc.pc(), 0x1a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 017A
        gbc.setState(0x34a3, 0xb083, 0xe6f0, 0x5d63, 0x30b3, 0x36a4, 0x0, 0x0);
        gbc.writeMem(0x34a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb083);
        EXPECT(gbc.pc(), 0x34a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 017B
        gbc.setState(0x4e9, 0x8455, 0xc010, 0x7e22, 0x8b32, 0x58ad, 0x0, 0x0);
        gbc.writeMem(0x4e9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8455);
        EXPECT(gbc.pc(), 0x4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 017C
        gbc.setState(0x21fd, 0x478, 0x4350, 0x24c2, 0xb81f, 0x1ad9, 0x1, 0x1);
        gbc.writeMem(0x21fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x478);
        EXPECT(gbc.pc(), 0x21ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 017D
        gbc.setState(0x650f, 0xd155, 0x4dc0, 0xdbf3, 0x98af, 0xa240, 0x1, 0x1);
        gbc.writeMem(0x650f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd155);
        EXPECT(gbc.pc(), 0x6511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 017E
        gbc.setState(0xcbe, 0x7549, 0x8140, 0x88b9, 0x3662, 0x688, 0x0, 0x0);
        gbc.writeMem(0xcbe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7549);
        EXPECT(gbc.pc(), 0xcc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 017F
        gbc.setState(0x14e8, 0x829a, 0x2420, 0xb7f9, 0xbd02, 0xc178, 0x1, 0x1);
        gbc.writeMem(0x14e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x829a);
        EXPECT(gbc.pc(), 0x14ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0180
        gbc.setState(0x6ddf, 0x28bd, 0x54a0, 0x56f9, 0x42e3, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0x6ddf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x28bd);
        EXPECT(gbc.pc(), 0x6de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0181
        gbc.setState(0x62f5, 0x1af8, 0x3f80, 0xd52e, 0x98f1, 0xe2e8, 0x0, 0x0);
        gbc.writeMem(0x62f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0x62f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0182
        gbc.setState(0xa99e, 0xb8fe, 0xd9a0, 0x2ece, 0x8715, 0xd9da, 0x1, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb8fe);
        EXPECT(gbc.pc(), 0xa9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99e), 0xcb);
        EXPECT(gbc.readMem(0xa99f), 0x64);
        // CB 64 0183
        gbc.setState(0x9021, 0xc5c2, 0x9f90, 0xb51d, 0x8af1, 0xbb39, 0x0, 0x1);
        gbc.writeMem(0x9021, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc5c2);
        EXPECT(gbc.pc(), 0x9023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9021), 0xcb);
        EXPECT(gbc.readMem(0x9022), 0x64);
        // CB 64 0184
        gbc.setState(0x40e3, 0x7328, 0x5850, 0xf109, 0x5e30, 0xc295, 0x0, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7328);
        EXPECT(gbc.pc(), 0x40e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0185
        gbc.setState(0x3df4, 0xa230, 0xaab0, 0xce1b, 0x99fc, 0xeb4f, 0x0, 0x1);
        gbc.writeMem(0x3df4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0x3df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0187
        gbc.setState(0x5d5a, 0xe32c, 0x7590, 0x78dc, 0x8287, 0x6ab, 0x0, 0x0);
        gbc.writeMem(0x5d5a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe32c);
        EXPECT(gbc.pc(), 0x5d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0188
        gbc.setState(0x985b, 0x8b1c, 0x4890, 0x5b64, 0x303, 0x179a, 0x1, 0x0);
        gbc.writeMem(0x985b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8b1c);
        EXPECT(gbc.pc(), 0x985d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985b), 0xcb);
        EXPECT(gbc.readMem(0x985c), 0x64);
        // CB 64 0189
        gbc.setState(0xb80c, 0xdbce, 0x980, 0xaf2, 0x1401, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0xb80c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0xb80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80c), 0xcb);
        EXPECT(gbc.readMem(0xb80d), 0x64);
        // CB 64 018B
        gbc.setState(0xeaa6, 0x9ec3, 0x3f70, 0x710a, 0x80f8, 0x8b3, 0x1, 0x0);
        gbc.writeMem(0xeaa6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9ec3);
        EXPECT(gbc.pc(), 0xeaa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa6), 0xcb);
        EXPECT(gbc.readMem(0xeaa7), 0x64);
        // CB 64 018C
        gbc.setState(0xe3f6, 0xbb1c, 0xd340, 0xc7e5, 0x4a80, 0xab18, 0x1, 0x0);
        gbc.writeMem(0xe3f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbb1c);
        EXPECT(gbc.pc(), 0xe3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f6), 0xcb);
        EXPECT(gbc.readMem(0xe3f7), 0x64);
        // CB 64 018D
        gbc.setState(0xd3df, 0xd7b, 0x21f0, 0x61ff, 0xec19, 0xd33f, 0x0, 0x1);
        gbc.writeMem(0xd3df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0xd3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3df), 0xcb);
        EXPECT(gbc.readMem(0xd3e0), 0x64);
        // CB 64 018E
        gbc.setState(0xb39f, 0xc5df, 0x6a20, 0x3e92, 0x7eb7, 0x86b2, 0x0, 0x0);
        gbc.writeMem(0xb39f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0xb3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39f), 0xcb);
        EXPECT(gbc.readMem(0xb3a0), 0x64);
        // CB 64 018F
        gbc.setState(0xb088, 0xdb3, 0x6b30, 0x97da, 0x38d, 0xe569, 0x1, 0x0);
        gbc.writeMem(0xb088, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdb3);
        EXPECT(gbc.pc(), 0xb08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb088), 0xcb);
        EXPECT(gbc.readMem(0xb089), 0x64);
        // CB 64 0190
        gbc.setState(0xcf65, 0xca7b, 0x98b0, 0xe397, 0xa067, 0x1453, 0x1, 0x1);
        gbc.writeMem(0xcf65, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xca7b);
        EXPECT(gbc.pc(), 0xcf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf65), 0xcb);
        EXPECT(gbc.readMem(0xcf66), 0x64);
        // CB 64 0191
        gbc.setState(0x7b23, 0xb4ab, 0xa960, 0xc7b3, 0x79f9, 0x4d74, 0x0, 0x0);
        gbc.writeMem(0x7b23, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb4ab);
        EXPECT(gbc.pc(), 0x7b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0192
        gbc.setState(0x80e, 0xea0b, 0xfd30, 0xebd0, 0x126a, 0xe45f, 0x0, 0x1);
        gbc.writeMem(0x80e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xea0b);
        EXPECT(gbc.pc(), 0x810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0193
        gbc.setState(0x1ad6, 0xebfc, 0xd0c0, 0x1a98, 0xa167, 0x8d98, 0x1, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x1ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0194
        gbc.setState(0x2fb4, 0x202f, 0xa940, 0x9cec, 0xb2fb, 0x8237, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x202f);
        EXPECT(gbc.pc(), 0x2fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0195
        gbc.setState(0x358a, 0xa6d3, 0x7110, 0xccd4, 0x125c, 0x88eb, 0x1, 0x1);
        gbc.writeMem(0x358a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa6d3);
        EXPECT(gbc.pc(), 0x358c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0196
        gbc.setState(0xdc1, 0xf3e2, 0x3ff0, 0xada7, 0xeff9, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xdc1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf3e2);
        EXPECT(gbc.pc(), 0xdc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0197
        gbc.setState(0xd1a9, 0xd357, 0x860, 0x6bc6, 0x826f, 0x66ce, 0x0, 0x1);
        gbc.writeMem(0xd1a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd357);
        EXPECT(gbc.pc(), 0xd1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a9), 0xcb);
        EXPECT(gbc.readMem(0xd1aa), 0x64);
        // CB 64 0198
        gbc.setState(0xc6aa, 0xbc79, 0xe9f0, 0x6d7a, 0xf66, 0x8b43, 0x0, 0x0);
        gbc.writeMem(0xc6aa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbc79);
        EXPECT(gbc.pc(), 0xc6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6aa), 0xcb);
        EXPECT(gbc.readMem(0xc6ab), 0x64);
        // CB 64 0199
        gbc.setState(0xe735, 0x1d02, 0x59d0, 0xf97e, 0xe91f, 0xec6b, 0x0, 0x0);
        gbc.writeMem(0xe735, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1d02);
        EXPECT(gbc.pc(), 0xe737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe735), 0xcb);
        EXPECT(gbc.readMem(0xe736), 0x64);
        // CB 64 019B
        gbc.setState(0xaf88, 0x464c, 0x50c0, 0x721b, 0x7a5a, 0x4534, 0x1, 0x1);
        gbc.writeMem(0xaf88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0xaf8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf88), 0xcb);
        EXPECT(gbc.readMem(0xaf89), 0x64);
        // CB 64 019C
        gbc.setState(0xe0d8, 0x7813, 0x1950, 0x37a7, 0x3571, 0xd881, 0x1, 0x1);
        gbc.writeMem(0xe0d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7813);
        EXPECT(gbc.pc(), 0xe0da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d8), 0xcb);
        EXPECT(gbc.readMem(0xe0d9), 0x64);
        // CB 64 019D
        gbc.setState(0x3675, 0x3c30, 0x77c0, 0xb6db, 0xe6e1, 0x8b8a, 0x0, 0x1);
        gbc.writeMem(0x3675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3c30);
        EXPECT(gbc.pc(), 0x3677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 019E
        gbc.setState(0x9a41, 0x9d2a, 0xf360, 0x8148, 0xdfa9, 0x936f, 0x1, 0x1);
        gbc.writeMem(0x9a41, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9d2a);
        EXPECT(gbc.pc(), 0x9a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a41), 0xcb);
        EXPECT(gbc.readMem(0x9a42), 0x64);
        // CB 64 019F
        gbc.setState(0x4136, 0x5ce1, 0xaa00, 0x3e60, 0xb146, 0x8de0, 0x0, 0x0);
        gbc.writeMem(0x4136, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0x4138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01A0
        gbc.setState(0xd492, 0xcd5e, 0x92e0, 0x5f36, 0xe248, 0x2548, 0x1, 0x1);
        gbc.writeMem(0xd492, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcd5e);
        EXPECT(gbc.pc(), 0xd494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd492), 0xcb);
        EXPECT(gbc.readMem(0xd493), 0x64);
        // CB 64 01A1
        gbc.setState(0xc59, 0xd70d, 0x3ec0, 0xf13d, 0xd2c5, 0x7330, 0x0, 0x0);
        gbc.writeMem(0xc59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd70d);
        EXPECT(gbc.pc(), 0xc5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01A2
        gbc.setState(0xd540, 0x4e1e, 0x42a0, 0x7a76, 0x1e03, 0x6ea8, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4e1e);
        EXPECT(gbc.pc(), 0xd542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd540), 0xcb);
        EXPECT(gbc.readMem(0xd541), 0x64);
        // CB 64 01A3
        gbc.setState(0x7c15, 0xf24c, 0xb860, 0xa7af, 0xd302, 0x2ec, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf24c);
        EXPECT(gbc.pc(), 0x7c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01A4
        gbc.setState(0xdfb3, 0xb4f7, 0x4120, 0x39c1, 0xbe91, 0x952d, 0x0, 0x1);
        gbc.writeMem(0xdfb3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb4f7);
        EXPECT(gbc.pc(), 0xdfb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb3), 0xcb);
        EXPECT(gbc.readMem(0xdfb4), 0x64);
        // CB 64 01A5
        gbc.setState(0xa142, 0x757b, 0x8cb0, 0xbbc2, 0xff74, 0xf76b, 0x0, 0x0);
        gbc.writeMem(0xa142, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x757b);
        EXPECT(gbc.pc(), 0xa144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa142), 0xcb);
        EXPECT(gbc.readMem(0xa143), 0x64);
        // CB 64 01A6
        gbc.setState(0x9705, 0xaaf0, 0x2120, 0x13ce, 0xb7ba, 0xbb60, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xaaf0);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9705), 0xcb);
        EXPECT(gbc.readMem(0x9706), 0x64);
        // CB 64 01A7
        gbc.setState(0x9b0e, 0xc99d, 0xd280, 0x7e4e, 0xbd14, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc99d);
        EXPECT(gbc.pc(), 0x9b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0e), 0xcb);
        EXPECT(gbc.readMem(0x9b0f), 0x64);
        // CB 64 01A8
        gbc.setState(0x2071, 0xae99, 0x2d60, 0x58f9, 0x6aab, 0x7c1e, 0x0, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xae99);
        EXPECT(gbc.pc(), 0x2073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01A9
        gbc.setState(0x5369, 0x28bb, 0xe770, 0x73d8, 0xe783, 0x1888, 0x1, 0x1);
        gbc.writeMem(0x5369, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x28bb);
        EXPECT(gbc.pc(), 0x536b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01AA
        gbc.setState(0x4900, 0xa9f2, 0x41e0, 0x2caa, 0xde8, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa9f2);
        EXPECT(gbc.pc(), 0x4902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01AB
        gbc.setState(0x8b78, 0xaddf, 0xfcb0, 0x9e8c, 0x92d3, 0xe53e, 0x1, 0x1);
        gbc.writeMem(0x8b78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaddf);
        EXPECT(gbc.pc(), 0x8b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b78), 0xcb);
        EXPECT(gbc.readMem(0x8b79), 0x64);
        // CB 64 01AC
        gbc.setState(0xceef, 0x6606, 0xab10, 0x22ad, 0xdcc5, 0x6e6, 0x1, 0x0);
        gbc.writeMem(0xceef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0xcef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceef), 0xcb);
        EXPECT(gbc.readMem(0xcef0), 0x64);
        // CB 64 01AD
        gbc.setState(0x48d8, 0xc583, 0x5380, 0xa7dc, 0x1e18, 0x9d71, 0x1, 0x0);
        gbc.writeMem(0x48d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x48da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01AE
        gbc.setState(0x6115, 0xbaf7, 0x4e90, 0xf9dd, 0xb32, 0x704b, 0x1, 0x0);
        gbc.writeMem(0x6115, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbaf7);
        EXPECT(gbc.pc(), 0x6117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01B1
        gbc.setState(0xdb5b, 0x30b8, 0x23b0, 0x6dc1, 0x7edd, 0xb7c6, 0x0, 0x1);
        gbc.writeMem(0xdb5b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x30b8);
        EXPECT(gbc.pc(), 0xdb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5b), 0xcb);
        EXPECT(gbc.readMem(0xdb5c), 0x64);
        // CB 64 01B2
        gbc.setState(0x399b, 0x1cbf, 0xc800, 0x872c, 0x4c51, 0xc1ea, 0x0, 0x1);
        gbc.writeMem(0x399b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1cbf);
        EXPECT(gbc.pc(), 0x399d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01B3
        gbc.setState(0xd93e, 0x4aa0, 0xfdf0, 0xd186, 0xa99c, 0xd960, 0x1, 0x0);
        gbc.writeMem(0xd93e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4aa0);
        EXPECT(gbc.pc(), 0xd940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd93e), 0xcb);
        EXPECT(gbc.readMem(0xd93f), 0x64);
        // CB 64 01B4
        gbc.setState(0x6835, 0x3d4f, 0x2080, 0x851d, 0x276c, 0x145d, 0x0, 0x0);
        gbc.writeMem(0x6835, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3d4f);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01B5
        gbc.setState(0x3ea1, 0xc196, 0x42c0, 0x8e4b, 0xe49a, 0xc4, 0x1, 0x1);
        gbc.writeMem(0x3ea1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc196);
        EXPECT(gbc.pc(), 0x3ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01B6
        gbc.setState(0x67fa, 0x9833, 0x6880, 0x3ed0, 0x5eb5, 0x8fd0, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01B7
        gbc.setState(0xe6e8, 0xd70, 0xa4b0, 0x4986, 0xc959, 0x577a, 0x1, 0x1);
        gbc.writeMem(0xe6e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd70);
        EXPECT(gbc.pc(), 0xe6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e8), 0xcb);
        EXPECT(gbc.readMem(0xe6e9), 0x64);
        // CB 64 01B8
        gbc.setState(0x3c31, 0xdcdc, 0xffc0, 0x7cd8, 0xabc6, 0x1f0b, 0x1, 0x1);
        gbc.writeMem(0x3c31, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdcdc);
        EXPECT(gbc.pc(), 0x3c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01B9
        gbc.setState(0x4318, 0x4baa, 0xec00, 0x11a, 0x6da7, 0xdc2c, 0x1, 0x1);
        gbc.writeMem(0x4318, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4baa);
        EXPECT(gbc.pc(), 0x431a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01BB
        gbc.setState(0x3b85, 0x39a1, 0x5290, 0xccd2, 0xe9e2, 0x8488, 0x1, 0x0);
        gbc.writeMem(0x3b85, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x39a1);
        EXPECT(gbc.pc(), 0x3b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01BC
        gbc.setState(0xb46e, 0x4335, 0x340, 0xc2e8, 0x6581, 0xbbd6, 0x0, 0x1);
        gbc.writeMem(0xb46e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4335);
        EXPECT(gbc.pc(), 0xb470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46e), 0xcb);
        EXPECT(gbc.readMem(0xb46f), 0x64);
        // CB 64 01BD
        gbc.setState(0x3b41, 0xc6ee, 0xffd0, 0xafa1, 0x8de8, 0x1796, 0x0, 0x1);
        gbc.writeMem(0x3b41, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc6ee);
        EXPECT(gbc.pc(), 0x3b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01BE
        gbc.setState(0xbffa, 0xd78a, 0x3e00, 0xe65e, 0xbccd, 0x4ed4, 0x0, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd78a);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffa), 0xcb);
        EXPECT(gbc.readMem(0xbffb), 0x64);
        // CB 64 01BF
        gbc.setState(0x8932, 0x5f16, 0x4b0, 0x7f7b, 0xe77d, 0x5852, 0x1, 0x0);
        gbc.writeMem(0x8932, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5f16);
        EXPECT(gbc.pc(), 0x8934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8932), 0xcb);
        EXPECT(gbc.readMem(0x8933), 0x64);
        // CB 64 01C0
        gbc.setState(0x4bc6, 0xa27, 0xc3c0, 0x1058, 0x9a49, 0xa0b7, 0x1, 0x0);
        gbc.writeMem(0x4bc6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01C1
        gbc.setState(0xcff2, 0xa6c7, 0x68a0, 0x31d3, 0xe61a, 0xa75e, 0x0, 0x1);
        gbc.writeMem(0xcff2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0xcff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff2), 0xcb);
        EXPECT(gbc.readMem(0xcff3), 0x64);
        // CB 64 01C2
        gbc.setState(0x92bb, 0x503, 0x1de0, 0xdf13, 0x34d4, 0xe6f9, 0x1, 0x1);
        gbc.writeMem(0x92bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x503);
        EXPECT(gbc.pc(), 0x92bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92bb), 0xcb);
        EXPECT(gbc.readMem(0x92bc), 0x64);
        // CB 64 01C3
        gbc.setState(0x5f62, 0x158e, 0xbbe0, 0x6247, 0x9290, 0x8001, 0x0, 0x1);
        gbc.writeMem(0x5f62, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x158e);
        EXPECT(gbc.pc(), 0x5f64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01C4
        gbc.setState(0x88b1, 0xff93, 0x72e0, 0xd214, 0xd086, 0x227, 0x1, 0x1);
        gbc.writeMem(0x88b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xff93);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b1), 0xcb);
        EXPECT(gbc.readMem(0x88b2), 0x64);
        // CB 64 01C5
        gbc.setState(0x1311, 0xdb96, 0x1ac0, 0x9773, 0xf6a6, 0x59d5, 0x0, 0x1);
        gbc.writeMem(0x1311, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdb96);
        EXPECT(gbc.pc(), 0x1313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01C6
        gbc.setState(0x103f, 0x5bd1, 0xa0d0, 0x6345, 0x3ca7, 0x8b83, 0x0, 0x0);
        gbc.writeMem(0x103f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5bd1);
        EXPECT(gbc.pc(), 0x1041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01C7
        gbc.setState(0x3dc5, 0x2e92, 0x2aa0, 0x4fb3, 0x32f4, 0x3bf9, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2e92);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01C8
        gbc.setState(0x6d52, 0xfc7e, 0x730, 0x74bd, 0xc178, 0xf539, 0x1, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfc7e);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01C9
        gbc.setState(0xc83b, 0x345c, 0xfc90, 0x42a8, 0x9aaa, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0xc83b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x345c);
        EXPECT(gbc.pc(), 0xc83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83b), 0xcb);
        EXPECT(gbc.readMem(0xc83c), 0x64);
        // CB 64 01CA
        gbc.setState(0x935, 0x2983, 0x5c90, 0x4fd, 0x629a, 0xa73f, 0x1, 0x1);
        gbc.writeMem(0x935, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01CB
        gbc.setState(0xd0c4, 0x34a0, 0x54b0, 0x84eb, 0xe4ee, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0xd0c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x34a0);
        EXPECT(gbc.pc(), 0xd0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c4), 0xcb);
        EXPECT(gbc.readMem(0xd0c5), 0x64);
        // CB 64 01CC
        gbc.setState(0xc04, 0x9677, 0x5740, 0x7995, 0xce01, 0x42d9, 0x0, 0x0);
        gbc.writeMem(0xc04, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0xc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01CD
        gbc.setState(0xb221, 0x2921, 0x9e40, 0x7260, 0xb121, 0x7d7e, 0x0, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2921);
        EXPECT(gbc.pc(), 0xb223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb221), 0xcb);
        EXPECT(gbc.readMem(0xb222), 0x64);
        // CB 64 01CE
        gbc.setState(0xb159, 0xfd43, 0x9220, 0x137e, 0x48d7, 0x7b64, 0x1, 0x1);
        gbc.writeMem(0xb159, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfd43);
        EXPECT(gbc.pc(), 0xb15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb159), 0xcb);
        EXPECT(gbc.readMem(0xb15a), 0x64);
        // CB 64 01CF
        gbc.setState(0x7528, 0xfd88, 0x9c30, 0x1804, 0x84f, 0xc45c, 0x1, 0x1);
        gbc.writeMem(0x7528, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0x752a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01D0
        gbc.setState(0xdc4a, 0x28db, 0xd790, 0xb11, 0x814f, 0xfe36, 0x1, 0x1);
        gbc.writeMem(0xdc4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x28db);
        EXPECT(gbc.pc(), 0xdc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4a), 0xcb);
        EXPECT(gbc.readMem(0xdc4b), 0x64);
        // CB 64 01D1
        gbc.setState(0xe321, 0x60aa, 0x5be0, 0x3f5, 0x275, 0x4fb1, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x60aa);
        EXPECT(gbc.pc(), 0xe323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe321), 0xcb);
        EXPECT(gbc.readMem(0xe322), 0x64);
        // CB 64 01D2
        gbc.setState(0xa58b, 0x20b3, 0xde30, 0xb197, 0x4763, 0x2c4e, 0x1, 0x1);
        gbc.writeMem(0xa58b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x20b3);
        EXPECT(gbc.pc(), 0xa58d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58b), 0xcb);
        EXPECT(gbc.readMem(0xa58c), 0x64);
        // CB 64 01D3
        gbc.setState(0xd170, 0x386f, 0x2e60, 0x5db5, 0x2f0d, 0x7a17, 0x0, 0x0);
        gbc.writeMem(0xd170, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x386f);
        EXPECT(gbc.pc(), 0xd172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd170), 0xcb);
        EXPECT(gbc.readMem(0xd171), 0x64);
        // CB 64 01D4
        gbc.setState(0xe0a8, 0x2206, 0x18f0, 0x3c79, 0xcf66, 0xdaf3, 0x0, 0x0);
        gbc.writeMem(0xe0a8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0xe0aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a8), 0xcb);
        EXPECT(gbc.readMem(0xe0a9), 0x64);
        // CB 64 01D5
        gbc.setState(0xce2b, 0x3bee, 0x95e0, 0x631c, 0xac8, 0x9a1, 0x1, 0x0);
        gbc.writeMem(0xce2b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3bee);
        EXPECT(gbc.pc(), 0xce2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2b), 0xcb);
        EXPECT(gbc.readMem(0xce2c), 0x64);
        // CB 64 01D6
        gbc.setState(0xc31f, 0x68df, 0xb2e0, 0xefb9, 0x5ebe, 0x7ed3, 0x0, 0x1);
        gbc.writeMem(0xc31f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0xc321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0xcb);
        EXPECT(gbc.readMem(0xc320), 0x64);
        // CB 64 01D7
        gbc.setState(0x6f42, 0xc470, 0x7b30, 0x5f09, 0x88b4, 0xb866, 0x1, 0x0);
        gbc.writeMem(0x6f42, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc470);
        EXPECT(gbc.pc(), 0x6f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01D8
        gbc.setState(0x2401, 0xc1b9, 0xd4f0, 0xe894, 0x8952, 0x6db7, 0x0, 0x1);
        gbc.writeMem(0x2401, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc1b9);
        EXPECT(gbc.pc(), 0x2403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01D9
        gbc.setState(0xefcd, 0xafb7, 0x42e0, 0x789f, 0xe0f3, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0xefcd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0xefcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcd), 0xcb);
        EXPECT(gbc.readMem(0xefce), 0x64);
        // CB 64 01DA
        gbc.setState(0x38d4, 0xcbf1, 0x4520, 0x6838, 0x8410, 0xf3b7, 0x0, 0x1);
        gbc.writeMem(0x38d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0x38d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01DB
        gbc.setState(0x4474, 0x4145, 0x2c30, 0x7f97, 0xab7, 0xdaf3, 0x1, 0x1);
        gbc.writeMem(0x4474, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4145);
        EXPECT(gbc.pc(), 0x4476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01DC
        gbc.setState(0xde6a, 0x3849, 0x4150, 0x2c98, 0xc19d, 0x6799, 0x0, 0x0);
        gbc.writeMem(0xde6a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3849);
        EXPECT(gbc.pc(), 0xde6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6a), 0xcb);
        EXPECT(gbc.readMem(0xde6b), 0x64);
        // CB 64 01DD
        gbc.setState(0xb45c, 0xa9f3, 0x51f0, 0xb66c, 0x36a5, 0x7436, 0x0, 0x1);
        gbc.writeMem(0xb45c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa9f3);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45c), 0xcb);
        EXPECT(gbc.readMem(0xb45d), 0x64);
        // CB 64 01DE
        gbc.setState(0x9938, 0x7ada, 0x23a0, 0xd083, 0xbf7f, 0x7799, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7ada);
        EXPECT(gbc.pc(), 0x993a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9938), 0xcb);
        EXPECT(gbc.readMem(0x9939), 0x64);
        // CB 64 01DF
        gbc.setState(0x9053, 0xd41, 0x22d0, 0x4fd9, 0xd1fc, 0x98b7, 0x0, 0x0);
        gbc.writeMem(0x9053, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd41);
        EXPECT(gbc.pc(), 0x9055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9053), 0xcb);
        EXPECT(gbc.readMem(0x9054), 0x64);
        // CB 64 01E0
        gbc.setState(0x7d11, 0x8efe, 0x11e0, 0x6c07, 0x32de, 0xc864, 0x0, 0x1);
        gbc.writeMem(0x7d11, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x7d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01E1
        gbc.setState(0xac20, 0x4657, 0x9740, 0x366f, 0x7a40, 0x57e7, 0x0, 0x1);
        gbc.writeMem(0xac20, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4657);
        EXPECT(gbc.pc(), 0xac22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac20), 0xcb);
        EXPECT(gbc.readMem(0xac21), 0x64);
        // CB 64 01E2
        gbc.setState(0x2663, 0xb732, 0x3220, 0x2214, 0x2af3, 0xd4c6, 0x1, 0x0);
        gbc.writeMem(0x2663, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb732);
        EXPECT(gbc.pc(), 0x2665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01E3
        gbc.setState(0x61dc, 0x2472, 0xe80, 0x1097, 0x1584, 0x1d5c, 0x0, 0x1);
        gbc.writeMem(0x61dc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2472);
        EXPECT(gbc.pc(), 0x61de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01E4
        gbc.setState(0x295d, 0xb186, 0xf930, 0xec82, 0x41dc, 0xf92f, 0x0, 0x0);
        gbc.writeMem(0x295d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb186);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01E5
        gbc.setState(0x9bff, 0x2820, 0x12d0, 0x2a35, 0xb2a9, 0xc7bc, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2820);
        EXPECT(gbc.pc(), 0x9c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bff), 0xcb);
        EXPECT(gbc.readMem(0x9c00), 0x64);
        // CB 64 01E6
        gbc.setState(0x38f6, 0x32, 0xe6b0, 0x8c9b, 0xcd5d, 0xe0fb, 0x0, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x32);
        EXPECT(gbc.pc(), 0x38f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01E8
        gbc.setState(0xdb5d, 0xf56c, 0x5600, 0xe465, 0xb1e7, 0x7910, 0x0, 0x0);
        gbc.writeMem(0xdb5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf56c);
        EXPECT(gbc.pc(), 0xdb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5d), 0xcb);
        EXPECT(gbc.readMem(0xdb5e), 0x64);
        // CB 64 01E9
        gbc.setState(0x25a0, 0xf2dd, 0x5690, 0x5f38, 0x8843, 0xabbe, 0x0, 0x0);
        gbc.writeMem(0x25a0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf2dd);
        EXPECT(gbc.pc(), 0x25a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01EA
        gbc.setState(0x58a8, 0x3f7c, 0x7900, 0xefe9, 0x897, 0x22c7, 0x1, 0x1);
        gbc.writeMem(0x58a8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3f7c);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01EB
        gbc.setState(0x62d6, 0x81b6, 0x5f10, 0x8453, 0x2d6a, 0x4925, 0x0, 0x0);
        gbc.writeMem(0x62d6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x81b6);
        EXPECT(gbc.pc(), 0x62d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01EC
        gbc.setState(0xaa73, 0x650a, 0x4a90, 0x7a3f, 0x9b93, 0xecb, 0x1, 0x0);
        gbc.writeMem(0xaa73, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x650a);
        EXPECT(gbc.pc(), 0xaa75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa73), 0xcb);
        EXPECT(gbc.readMem(0xaa74), 0x64);
        // CB 64 01ED
        gbc.setState(0x82f7, 0xeaa7, 0x9c90, 0xdaa7, 0xbc0a, 0xbe3c, 0x0, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0x82f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f7), 0xcb);
        EXPECT(gbc.readMem(0x82f8), 0x64);
        // CB 64 01EE
        gbc.setState(0xb50e, 0x7ad2, 0xbaf0, 0xe9e7, 0xd398, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7ad2);
        EXPECT(gbc.pc(), 0xb510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50e), 0xcb);
        EXPECT(gbc.readMem(0xb50f), 0x64);
        // CB 64 01EF
        gbc.setState(0xb235, 0x6bfc, 0x2a20, 0x63ab, 0xa170, 0xaa9f, 0x0, 0x1);
        gbc.writeMem(0xb235, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6bfc);
        EXPECT(gbc.pc(), 0xb237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb235), 0xcb);
        EXPECT(gbc.readMem(0xb236), 0x64);
        // CB 64 01F0
        gbc.setState(0xe060, 0x9860, 0x8800, 0x522b, 0xe5e1, 0x2e1f, 0x1, 0x0);
        gbc.writeMem(0xe060, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9860);
        EXPECT(gbc.pc(), 0xe062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe060), 0xcb);
        EXPECT(gbc.readMem(0xe061), 0x64);
        // CB 64 01F1
        gbc.setState(0xdbb9, 0x1fad, 0x81c0, 0x5fe6, 0x6fb9, 0x71bf, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0xdbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb9), 0xcb);
        EXPECT(gbc.readMem(0xdbba), 0x64);
        // CB 64 01F2
        gbc.setState(0xe00f, 0xaae0, 0x3400, 0x8e9e, 0x5eda, 0x5b45, 0x0, 0x0);
        gbc.writeMem(0xe00f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaae0);
        EXPECT(gbc.pc(), 0xe011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00f), 0xcb);
        EXPECT(gbc.readMem(0xe010), 0x64);
        // CB 64 01F4
        gbc.setState(0xea02, 0x7e96, 0x6ee0, 0xcc16, 0x38b7, 0xe855, 0x1, 0x0);
        gbc.writeMem(0xea02, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7e96);
        EXPECT(gbc.pc(), 0xea04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea02), 0xcb);
        EXPECT(gbc.readMem(0xea03), 0x64);
        // CB 64 01F5
        gbc.setState(0x51a3, 0xf8d1, 0x4990, 0x8538, 0xc515, 0xef9f, 0x0, 0x0);
        gbc.writeMem(0x51a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf8d1);
        EXPECT(gbc.pc(), 0x51a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01F6
        gbc.setState(0xba1d, 0xd02b, 0x4210, 0xd932, 0xc6da, 0x140f, 0x0, 0x0);
        gbc.writeMem(0xba1d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd02b);
        EXPECT(gbc.pc(), 0xba1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1d), 0xcb);
        EXPECT(gbc.readMem(0xba1e), 0x64);
        // CB 64 01F7
        gbc.setState(0xcac4, 0x9d57, 0x3e70, 0xa876, 0x451, 0x9cb4, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9d57);
        EXPECT(gbc.pc(), 0xcac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac4), 0xcb);
        EXPECT(gbc.readMem(0xcac5), 0x64);
        // CB 64 01F8
        gbc.setState(0xa7ce, 0xa2e6, 0x7e30, 0x9398, 0xac62, 0xa7ae, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa2e6);
        EXPECT(gbc.pc(), 0xa7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ce), 0xcb);
        EXPECT(gbc.readMem(0xa7cf), 0x64);
        // CB 64 01F9
        gbc.setState(0x7b5c, 0x9b48, 0x3390, 0xa8bd, 0xb8bd, 0xe63a, 0x1, 0x1);
        gbc.writeMem(0x7b5c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9b48);
        EXPECT(gbc.pc(), 0x7b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01FA
        gbc.setState(0x5476, 0x69af, 0x7d30, 0x5ead, 0x9887, 0x6146, 0x0, 0x1);
        gbc.writeMem(0x5476, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x69af);
        EXPECT(gbc.pc(), 0x5478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 01FB
        gbc.setState(0xa9ac, 0x79db, 0x7d80, 0xf082, 0x1b8e, 0x3754, 0x0, 0x1);
        gbc.writeMem(0xa9ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x79db);
        EXPECT(gbc.pc(), 0xa9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ac), 0xcb);
        EXPECT(gbc.readMem(0xa9ad), 0x64);
        // CB 64 01FC
        gbc.setState(0xceaa, 0xd7d3, 0x5d60, 0xaa87, 0x83ca, 0x8e6a, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd7d3);
        EXPECT(gbc.pc(), 0xceac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xcb);
        EXPECT(gbc.readMem(0xceab), 0x64);
        // CB 64 01FD
        gbc.setState(0x50b5, 0x6df2, 0xcf40, 0x9351, 0x1796, 0x7c1f, 0x0, 0x0);
        gbc.writeMem(0x50b5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6df2);
        EXPECT(gbc.pc(), 0x50b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01FE
        gbc.setState(0x53fb, 0x52a9, 0xadc0, 0xee48, 0xc24a, 0x68c9, 0x0, 0x1);
        gbc.writeMem(0x53fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x52a9);
        EXPECT(gbc.pc(), 0x53fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 01FF
        gbc.setState(0x2aaf, 0x4c18, 0xd590, 0x5fe8, 0xda5b, 0x3cae, 0x0, 0x1);
        gbc.writeMem(0x2aaf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4c18);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0200
        gbc.setState(0x2e16, 0xea0e, 0xa1e0, 0x8a80, 0x2425, 0xe792, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xea0e);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0201
        gbc.setState(0xe7e5, 0x2365, 0x300, 0x161b, 0x8c74, 0xe563, 0x0, 0x0);
        gbc.writeMem(0xe7e5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2365);
        EXPECT(gbc.pc(), 0xe7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e5), 0xcb);
        EXPECT(gbc.readMem(0xe7e6), 0x64);
        // CB 64 0203
        gbc.setState(0xb710, 0x2def, 0x2ec0, 0x296e, 0xb67e, 0xafed, 0x0, 0x0);
        gbc.writeMem(0xb710, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2def);
        EXPECT(gbc.pc(), 0xb712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb710), 0xcb);
        EXPECT(gbc.readMem(0xb711), 0x64);
        // CB 64 0204
        gbc.setState(0xd8d8, 0x28ed, 0x10, 0xa9ed, 0x5679, 0x6903, 0x1, 0x0);
        gbc.writeMem(0xd8d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0xd8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d8), 0xcb);
        EXPECT(gbc.readMem(0xd8d9), 0x64);
        // CB 64 0205
        gbc.setState(0xc45c, 0xb83d, 0xb60, 0xc854, 0xf71b, 0xa26b, 0x0, 0x1);
        gbc.writeMem(0xc45c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb83d);
        EXPECT(gbc.pc(), 0xc45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45c), 0xcb);
        EXPECT(gbc.readMem(0xc45d), 0x64);
        // CB 64 0206
        gbc.setState(0x77c3, 0xe7f8, 0x3ea0, 0x3576, 0x37bc, 0xe182, 0x1, 0x1);
        gbc.writeMem(0x77c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe7f8);
        EXPECT(gbc.pc(), 0x77c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0207
        gbc.setState(0x6b9e, 0xa2e4, 0x2470, 0x8afb, 0x3dd9, 0x96f, 0x1, 0x0);
        gbc.writeMem(0x6b9e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa2e4);
        EXPECT(gbc.pc(), 0x6ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0208
        gbc.setState(0xdfb7, 0x6d77, 0x7020, 0xeb2a, 0xd5d, 0xd93b, 0x1, 0x1);
        gbc.writeMem(0xdfb7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6d77);
        EXPECT(gbc.pc(), 0xdfb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb7), 0xcb);
        EXPECT(gbc.readMem(0xdfb8), 0x64);
        // CB 64 0209
        gbc.setState(0xd633, 0xc0d, 0x1770, 0x96b3, 0x41d8, 0xf7e6, 0x1, 0x0);
        gbc.writeMem(0xd633, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc0d);
        EXPECT(gbc.pc(), 0xd635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd633), 0xcb);
        EXPECT(gbc.readMem(0xd634), 0x64);
        // CB 64 020A
        gbc.setState(0xc98f, 0x75d, 0x3e70, 0x21fb, 0x110, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x75d);
        EXPECT(gbc.pc(), 0xc991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98f), 0xcb);
        EXPECT(gbc.readMem(0xc990), 0x64);
        // CB 64 020B
        gbc.setState(0x65ef, 0x5ae2, 0x4270, 0xd12b, 0x59cc, 0xe2dd, 0x0, 0x1);
        gbc.writeMem(0x65ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5ae2);
        EXPECT(gbc.pc(), 0x65f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 020C
        gbc.setState(0x4bf7, 0xecb, 0xf0e0, 0x9d58, 0x93ba, 0xb51b, 0x0, 0x0);
        gbc.writeMem(0x4bf7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xecb);
        EXPECT(gbc.pc(), 0x4bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 020D
        gbc.setState(0x1b93, 0xd219, 0x6650, 0x8930, 0xe6e6, 0xc713, 0x0, 0x1);
        gbc.writeMem(0x1b93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd219);
        EXPECT(gbc.pc(), 0x1b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 020E
        gbc.setState(0xa7cb, 0xa995, 0xea80, 0x243, 0x4bf4, 0x4408, 0x1, 0x0);
        gbc.writeMem(0xa7cb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa995);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cb), 0xcb);
        EXPECT(gbc.readMem(0xa7cc), 0x64);
        // CB 64 020F
        gbc.setState(0x3da0, 0x7525, 0x4200, 0xba70, 0x22aa, 0x29e1, 0x1, 0x0);
        gbc.writeMem(0x3da0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7525);
        EXPECT(gbc.pc(), 0x3da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0211
        gbc.setState(0xbb9f, 0x655d, 0x3e90, 0x5482, 0x85a0, 0xa879, 0x0, 0x0);
        gbc.writeMem(0xbb9f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x655d);
        EXPECT(gbc.pc(), 0xbba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9f), 0xcb);
        EXPECT(gbc.readMem(0xbba0), 0x64);
        // CB 64 0212
        gbc.setState(0x834, 0xb0c1, 0x49f0, 0x9fed, 0x94e4, 0x2326, 0x1, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb0c1);
        EXPECT(gbc.pc(), 0x836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0213
        gbc.setState(0x8d7b, 0x8979, 0x3560, 0x102c, 0x49b7, 0x5d6c, 0x0, 0x0);
        gbc.writeMem(0x8d7b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8979);
        EXPECT(gbc.pc(), 0x8d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7b), 0xcb);
        EXPECT(gbc.readMem(0x8d7c), 0x64);
        // CB 64 0214
        gbc.setState(0xd81f, 0x992e, 0x3000, 0x94a8, 0x9008, 0x4300, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x992e);
        EXPECT(gbc.pc(), 0xd821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81f), 0xcb);
        EXPECT(gbc.readMem(0xd820), 0x64);
        // CB 64 0215
        gbc.setState(0x11f3, 0xe2e0, 0x9aa0, 0x7235, 0x55f5, 0x5abb, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe2e0);
        EXPECT(gbc.pc(), 0x11f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0216
        gbc.setState(0xc2de, 0xba47, 0x51c0, 0xefe3, 0xe8e1, 0x520f, 0x0, 0x1);
        gbc.writeMem(0xc2de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xba47);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x64);
        // CB 64 0217
        gbc.setState(0x2bf0, 0x9da8, 0x79a0, 0xd663, 0x11e7, 0x9078, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9da8);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0218
        gbc.setState(0x5fdc, 0x1866, 0xc880, 0xdcff, 0x922b, 0xaa72, 0x0, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1866);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0219
        gbc.setState(0x398b, 0xaaac, 0xbe80, 0x7845, 0xbd22, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x398b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x398d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 021A
        gbc.setState(0xab47, 0xb308, 0x32f0, 0xa92c, 0x66b0, 0xa008, 0x1, 0x1);
        gbc.writeMem(0xab47, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb308);
        EXPECT(gbc.pc(), 0xab49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab47), 0xcb);
        EXPECT(gbc.readMem(0xab48), 0x64);
        // CB 64 021B
        gbc.setState(0x3b7c, 0x9b2a, 0x8330, 0xb3ff, 0x8d86, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0x3b7c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9b2a);
        EXPECT(gbc.pc(), 0x3b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 021C
        gbc.setState(0xc505, 0xdc23, 0xa410, 0x658f, 0x8762, 0x47b0, 0x1, 0x1);
        gbc.writeMem(0xc505, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdc23);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc505), 0xcb);
        EXPECT(gbc.readMem(0xc506), 0x64);
        // CB 64 021D
        gbc.setState(0x49cf, 0x6f46, 0xac50, 0x1820, 0x772b, 0xfc1e, 0x1, 0x0);
        gbc.writeMem(0x49cf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6f46);
        EXPECT(gbc.pc(), 0x49d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 021E
        gbc.setState(0x2783, 0xa922, 0x98c0, 0x5179, 0xc106, 0x4575, 0x1, 0x0);
        gbc.writeMem(0x2783, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0x2785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 021F
        gbc.setState(0xd80d, 0xda40, 0x1a00, 0x8554, 0xed1b, 0xd666, 0x0, 0x0);
        gbc.writeMem(0xd80d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xda40);
        EXPECT(gbc.pc(), 0xd80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80d), 0xcb);
        EXPECT(gbc.readMem(0xd80e), 0x64);
        // CB 64 0220
        gbc.setState(0xdc97, 0xd21a, 0xdaf0, 0x4132, 0x5814, 0x5b13, 0x1, 0x0);
        gbc.writeMem(0xdc97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd21a);
        EXPECT(gbc.pc(), 0xdc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc97), 0xcb);
        EXPECT(gbc.readMem(0xdc98), 0x64);
        // CB 64 0221
        gbc.setState(0x1b9, 0xe2cc, 0xfc50, 0x162b, 0x784b, 0x41b2, 0x0, 0x1);
        gbc.writeMem(0x1b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe2cc);
        EXPECT(gbc.pc(), 0x1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0222
        gbc.setState(0x2e5d, 0xaa7b, 0x77c0, 0xd7a8, 0xba78, 0x9247, 0x1, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaa7b);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0223
        gbc.setState(0x8c57, 0xec72, 0x21f0, 0x6b82, 0x5c2a, 0xe0c1, 0x1, 0x0);
        gbc.writeMem(0x8c57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xec72);
        EXPECT(gbc.pc(), 0x8c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c57), 0xcb);
        EXPECT(gbc.readMem(0x8c58), 0x64);
        // CB 64 0224
        gbc.setState(0x5886, 0xad82, 0x83f0, 0x91cb, 0xfc88, 0x12cd, 0x0, 0x1);
        gbc.writeMem(0x5886, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xad82);
        EXPECT(gbc.pc(), 0x5888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0225
        gbc.setState(0x9845, 0x30e8, 0x7e00, 0x8ae8, 0x84c0, 0x28eb, 0x0, 0x0);
        gbc.writeMem(0x9845, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x30e8);
        EXPECT(gbc.pc(), 0x9847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9845), 0xcb);
        EXPECT(gbc.readMem(0x9846), 0x64);
        // CB 64 0226
        gbc.setState(0x3d4a, 0x6d81, 0x39a0, 0xf2fc, 0x290e, 0xaee2, 0x1, 0x0);
        gbc.writeMem(0x3d4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0227
        gbc.setState(0xea80, 0x99c, 0xc580, 0xe76, 0xc720, 0xd0cf, 0x1, 0x0);
        gbc.writeMem(0xea80, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x99c);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea80), 0xcb);
        EXPECT(gbc.readMem(0xea81), 0x64);
        // CB 64 0228
        gbc.setState(0x6f19, 0xe258, 0xcc50, 0xfe30, 0x623c, 0x84b2, 0x1, 0x0);
        gbc.writeMem(0x6f19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe258);
        EXPECT(gbc.pc(), 0x6f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0229
        gbc.setState(0xd147, 0x62de, 0x5d60, 0xb0a4, 0xb6f2, 0x8b1c, 0x1, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x62de);
        EXPECT(gbc.pc(), 0xd149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd147), 0xcb);
        EXPECT(gbc.readMem(0xd148), 0x64);
        // CB 64 022A
        gbc.setState(0xd160, 0xe0a7, 0x9b50, 0x878d, 0x6ac0, 0x7420, 0x1, 0x1);
        gbc.writeMem(0xd160, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe0a7);
        EXPECT(gbc.pc(), 0xd162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd160), 0xcb);
        EXPECT(gbc.readMem(0xd161), 0x64);
        // CB 64 022B
        gbc.setState(0xbfe7, 0x5140, 0xb790, 0x3282, 0x96e7, 0x8658, 0x0, 0x1);
        gbc.writeMem(0xbfe7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5140);
        EXPECT(gbc.pc(), 0xbfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe7), 0xcb);
        EXPECT(gbc.readMem(0xbfe8), 0x64);
        // CB 64 022C
        gbc.setState(0xc072, 0xd16e, 0xdf00, 0x1adc, 0xb79b, 0x2aae, 0x0, 0x0);
        gbc.writeMem(0xc072, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd16e);
        EXPECT(gbc.pc(), 0xc074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc072), 0xcb);
        EXPECT(gbc.readMem(0xc073), 0x64);
        // CB 64 022D
        gbc.setState(0x1602, 0x6726, 0x26b0, 0x8d68, 0x2bb5, 0xab57, 0x0, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6726);
        EXPECT(gbc.pc(), 0x1604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 022E
        gbc.setState(0x7514, 0xad85, 0x8a30, 0x75de, 0xd606, 0x5aaf, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 022F
        gbc.setState(0x4357, 0xeda, 0x5aa0, 0x4489, 0x3819, 0x7b31, 0x0, 0x1);
        gbc.writeMem(0x4357, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeda);
        EXPECT(gbc.pc(), 0x4359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0230
        gbc.setState(0xc4e2, 0x6ad8, 0xbd80, 0x4df3, 0x8ceb, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0xc4e2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6ad8);
        EXPECT(gbc.pc(), 0xc4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e2), 0xcb);
        EXPECT(gbc.readMem(0xc4e3), 0x64);
        // CB 64 0231
        gbc.setState(0xef54, 0x29f6, 0x2e0, 0x7418, 0xabd0, 0x3e8e, 0x1, 0x0);
        gbc.writeMem(0xef54, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x29f6);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef54), 0xcb);
        EXPECT(gbc.readMem(0xef55), 0x64);
        // CB 64 0232
        gbc.setState(0x1866, 0x9e2d, 0xdcf0, 0x6700, 0xfde0, 0xb134, 0x1, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9e2d);
        EXPECT(gbc.pc(), 0x1868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0233
        gbc.setState(0xb26, 0xc78c, 0x4df0, 0x1093, 0xb83, 0xf86e, 0x1, 0x0);
        gbc.writeMem(0xb26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc78c);
        EXPECT(gbc.pc(), 0xb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0234
        gbc.setState(0xcd06, 0x677b, 0x2f90, 0x7f23, 0xd3ec, 0xabea, 0x0, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x677b);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0x64);
        // CB 64 0235
        gbc.setState(0x146b, 0xc65f, 0xe010, 0x380c, 0x6bad, 0x2cf7, 0x0, 0x1);
        gbc.writeMem(0x146b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc65f);
        EXPECT(gbc.pc(), 0x146d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0236
        gbc.setState(0x9110, 0xbede, 0x6120, 0xe2ca, 0x4968, 0xc78c, 0x1, 0x0);
        gbc.writeMem(0x9110, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0x9112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9110), 0xcb);
        EXPECT(gbc.readMem(0x9111), 0x64);
        // CB 64 0237
        gbc.setState(0x3028, 0xe59d, 0x2c40, 0xd7b5, 0x7c32, 0x54ef, 0x1, 0x1);
        gbc.writeMem(0x3028, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe59d);
        EXPECT(gbc.pc(), 0x302a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0238
        gbc.setState(0xc2a, 0xbb97, 0xa690, 0x6752, 0xcfcc, 0xc9b, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbb97);
        EXPECT(gbc.pc(), 0xc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0239
        gbc.setState(0xaa57, 0x62ec, 0xe840, 0xb1a6, 0xdf91, 0xf97c, 0x0, 0x1);
        gbc.writeMem(0xaa57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x62ec);
        EXPECT(gbc.pc(), 0xaa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa57), 0xcb);
        EXPECT(gbc.readMem(0xaa58), 0x64);
        // CB 64 023A
        gbc.setState(0xca08, 0x1974, 0x29a0, 0xa18d, 0x1062, 0x472d, 0x1, 0x1);
        gbc.writeMem(0xca08, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1974);
        EXPECT(gbc.pc(), 0xca0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca08), 0xcb);
        EXPECT(gbc.readMem(0xca09), 0x64);
        // CB 64 023B
        gbc.setState(0x677f, 0x2cd5, 0xff0, 0x50e8, 0x20ba, 0xe65, 0x0, 0x1);
        gbc.writeMem(0x677f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0x6781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 023C
        gbc.setState(0xaa59, 0x8930, 0x88e0, 0xb3bb, 0xde6e, 0xbc56, 0x0, 0x0);
        gbc.writeMem(0xaa59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8930);
        EXPECT(gbc.pc(), 0xaa5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa59), 0xcb);
        EXPECT(gbc.readMem(0xaa5a), 0x64);
        // CB 64 023D
        gbc.setState(0x7c94, 0xb191, 0xf760, 0x7863, 0x6224, 0x8e3c, 0x1, 0x1);
        gbc.writeMem(0x7c94, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb191);
        EXPECT(gbc.pc(), 0x7c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 023E
        gbc.setState(0xb489, 0xf6e1, 0xf4c0, 0xed1d, 0xfd17, 0x8f57, 0x1, 0x1);
        gbc.writeMem(0xb489, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf6e1);
        EXPECT(gbc.pc(), 0xb48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb489), 0xcb);
        EXPECT(gbc.readMem(0xb48a), 0x64);
        // CB 64 0240
        gbc.setState(0x2844, 0x42ce, 0x7360, 0x16c9, 0xe5d5, 0x385a, 0x0, 0x1);
        gbc.writeMem(0x2844, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x42ce);
        EXPECT(gbc.pc(), 0x2846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0241
        gbc.setState(0x2625, 0x60dd, 0x2880, 0x36eb, 0xacf7, 0x269f, 0x1, 0x1);
        gbc.writeMem(0x2625, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0x2627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0242
        gbc.setState(0xa539, 0x97a5, 0x2240, 0x874f, 0xbd24, 0x3877, 0x0, 0x0);
        gbc.writeMem(0xa539, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x97a5);
        EXPECT(gbc.pc(), 0xa53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa539), 0xcb);
        EXPECT(gbc.readMem(0xa53a), 0x64);
        // CB 64 0243
        gbc.setState(0xcbce, 0xc8b3, 0xe910, 0x5e5d, 0x49bc, 0x92bb, 0x1, 0x1);
        gbc.writeMem(0xcbce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc8b3);
        EXPECT(gbc.pc(), 0xcbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbce), 0xcb);
        EXPECT(gbc.readMem(0xcbcf), 0x64);
        // CB 64 0244
        gbc.setState(0x7183, 0x1519, 0x950, 0x35c1, 0x8c81, 0x8bb2, 0x1, 0x0);
        gbc.writeMem(0x7183, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1519);
        EXPECT(gbc.pc(), 0x7185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0245
        gbc.setState(0x945f, 0xf572, 0x9fa0, 0x5188, 0x63d6, 0xa25, 0x1, 0x0);
        gbc.writeMem(0x945f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf572);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945f), 0xcb);
        EXPECT(gbc.readMem(0x9460), 0x64);
        // CB 64 0246
        gbc.setState(0x4ff5, 0xf23b, 0xaab0, 0xc447, 0x164e, 0xb29d, 0x0, 0x1);
        gbc.writeMem(0x4ff5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf23b);
        EXPECT(gbc.pc(), 0x4ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0247
        gbc.setState(0x147a, 0x3c3e, 0x5dc0, 0xb52c, 0x313d, 0x4c4a, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3c3e);
        EXPECT(gbc.pc(), 0x147c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0248
        gbc.setState(0x68cb, 0x9f6a, 0x19e0, 0xc4ed, 0x68a8, 0xc350, 0x0, 0x1);
        gbc.writeMem(0x68cb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9f6a);
        EXPECT(gbc.pc(), 0x68cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0249
        gbc.setState(0x35e8, 0xb9e6, 0x4580, 0xa954, 0x60fe, 0x406a, 0x0, 0x1);
        gbc.writeMem(0x35e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb9e6);
        EXPECT(gbc.pc(), 0x35ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 024A
        gbc.setState(0x529e, 0x61ac, 0xa2a0, 0xcf84, 0xcfcd, 0xe6c5, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x61ac);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 024B
        gbc.setState(0x50d4, 0xbab2, 0x80e0, 0xc8dd, 0xdf73, 0xf92f, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbab2);
        EXPECT(gbc.pc(), 0x50d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 024C
        gbc.setState(0xe03a, 0xe0b2, 0x57e0, 0x7aa, 0xc9be, 0xf162, 0x1, 0x1);
        gbc.writeMem(0xe03a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0xe03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03a), 0xcb);
        EXPECT(gbc.readMem(0xe03b), 0x64);
        // CB 64 024D
        gbc.setState(0xe744, 0x6be3, 0xcb0, 0x5d34, 0x17e, 0x3632, 0x1, 0x1);
        gbc.writeMem(0xe744, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6be3);
        EXPECT(gbc.pc(), 0xe746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe744), 0xcb);
        EXPECT(gbc.readMem(0xe745), 0x64);
        // CB 64 024E
        gbc.setState(0xc84c, 0xdb4c, 0xaa70, 0x9743, 0x65df, 0x491e, 0x0, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0xc84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84c), 0xcb);
        EXPECT(gbc.readMem(0xc84d), 0x64);
        // CB 64 024F
        gbc.setState(0x7f76, 0x455b, 0xeda0, 0xcbea, 0x5e8a, 0xfe2b, 0x1, 0x1);
        gbc.writeMem(0x7f76, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x455b);
        EXPECT(gbc.pc(), 0x7f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0250
        gbc.setState(0x58b1, 0x5c88, 0x9e90, 0xe46f, 0xd798, 0xe9ae, 0x0, 0x0);
        gbc.writeMem(0x58b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5c88);
        EXPECT(gbc.pc(), 0x58b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0251
        gbc.setState(0xe862, 0xf2f1, 0x46e0, 0x511e, 0x6547, 0x6b9d, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0xe864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe862), 0xcb);
        EXPECT(gbc.readMem(0xe863), 0x64);
        // CB 64 0252
        gbc.setState(0xa0e, 0xf15d, 0xecd0, 0xb959, 0x92d5, 0xb2a2, 0x0, 0x0);
        gbc.writeMem(0xa0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0xa10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0253
        gbc.setState(0xb77c, 0xf5e5, 0xe4b0, 0xb99b, 0x5e54, 0xc40e, 0x1, 0x1);
        gbc.writeMem(0xb77c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf5e5);
        EXPECT(gbc.pc(), 0xb77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77c), 0xcb);
        EXPECT(gbc.readMem(0xb77d), 0x64);
        // CB 64 0255
        gbc.setState(0x5ba7, 0x625d, 0xfc00, 0x211e, 0xd51d, 0x4dee, 0x1, 0x0);
        gbc.writeMem(0x5ba7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x625d);
        EXPECT(gbc.pc(), 0x5ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0256
        gbc.setState(0x6e8d, 0xb091, 0xca00, 0xf90c, 0x5d1, 0xa3a3, 0x0, 0x1);
        gbc.writeMem(0x6e8d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb091);
        EXPECT(gbc.pc(), 0x6e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0257
        gbc.setState(0xd071, 0xce9a, 0xd1f0, 0x24ee, 0xf25d, 0x1d8b, 0x0, 0x1);
        gbc.writeMem(0xd071, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xce9a);
        EXPECT(gbc.pc(), 0xd073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd071), 0xcb);
        EXPECT(gbc.readMem(0xd072), 0x64);
        // CB 64 0258
        gbc.setState(0x45ec, 0xbe56, 0x89b0, 0xd46e, 0xf756, 0x707d, 0x0, 0x0);
        gbc.writeMem(0x45ec, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbe56);
        EXPECT(gbc.pc(), 0x45ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0259
        gbc.setState(0x7114, 0x61ae, 0x6260, 0x8a90, 0x8e9b, 0x66ce, 0x0, 0x1);
        gbc.writeMem(0x7114, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x61ae);
        EXPECT(gbc.pc(), 0x7116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 025A
        gbc.setState(0x6607, 0x6f27, 0x92a0, 0x4daa, 0x17ae, 0x271f, 0x1, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6f27);
        EXPECT(gbc.pc(), 0x6609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 025B
        gbc.setState(0xa74d, 0xcb17, 0x4000, 0x8459, 0xc82c, 0x5a6c, 0x0, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcb17);
        EXPECT(gbc.pc(), 0xa74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74d), 0xcb);
        EXPECT(gbc.readMem(0xa74e), 0x64);
        // CB 64 025C
        gbc.setState(0x285, 0xbe9f, 0x77a0, 0xa3f6, 0x85e5, 0xff2c, 0x1, 0x0);
        gbc.writeMem(0x285, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0x287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 025D
        gbc.setState(0x2f30, 0x6e67, 0x8170, 0x1627, 0xd022, 0xe113, 0x0, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6e67);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 025E
        gbc.setState(0x985, 0x8bbe, 0x7ef0, 0xb1b2, 0x1ecb, 0xc32e, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8bbe);
        EXPECT(gbc.pc(), 0x987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 025F
        gbc.setState(0x5637, 0xf215, 0x4bd0, 0xeacb, 0x793f, 0xabe2, 0x1, 0x1);
        gbc.writeMem(0x5637, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0x5639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0260
        gbc.setState(0x2689, 0xb135, 0x1d60, 0x8503, 0x919f, 0x321f, 0x0, 0x1);
        gbc.writeMem(0x2689, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb135);
        EXPECT(gbc.pc(), 0x268b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0261
        gbc.setState(0x6628, 0x569a, 0xdd30, 0x2b7, 0xac83, 0x591a, 0x1, 0x0);
        gbc.writeMem(0x6628, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x569a);
        EXPECT(gbc.pc(), 0x662a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0262
        gbc.setState(0xbc67, 0xc6a5, 0xc990, 0x9916, 0x65c7, 0xd27, 0x1, 0x1);
        gbc.writeMem(0xbc67, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc6a5);
        EXPECT(gbc.pc(), 0xbc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc67), 0xcb);
        EXPECT(gbc.readMem(0xbc68), 0x64);
        // CB 64 0263
        gbc.setState(0xa805, 0xa322, 0x2ac0, 0xe8a9, 0x8939, 0xa938, 0x1, 0x0);
        gbc.writeMem(0xa805, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa322);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa805), 0xcb);
        EXPECT(gbc.readMem(0xa806), 0x64);
        // CB 64 0264
        gbc.setState(0x1b7c, 0xe728, 0x9d20, 0x5a3d, 0x36d3, 0x3720, 0x1, 0x1);
        gbc.writeMem(0x1b7c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe728);
        EXPECT(gbc.pc(), 0x1b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0265
        gbc.setState(0x6d1a, 0x994, 0x62e0, 0x8339, 0xe502, 0xb493, 0x1, 0x0);
        gbc.writeMem(0x6d1a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x994);
        EXPECT(gbc.pc(), 0x6d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0266
        gbc.setState(0xa2b9, 0x5e32, 0x8000, 0x2704, 0x10e3, 0x1b1e, 0x1, 0x0);
        gbc.writeMem(0xa2b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5e32);
        EXPECT(gbc.pc(), 0xa2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b9), 0xcb);
        EXPECT(gbc.readMem(0xa2ba), 0x64);
        // CB 64 0267
        gbc.setState(0x77c, 0xa6c7, 0xec80, 0xadf5, 0xdf57, 0x7f85, 0x1, 0x0);
        gbc.writeMem(0x77c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0x77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0268
        gbc.setState(0x89a5, 0x5058, 0xffe0, 0x1e76, 0xa78e, 0xb882, 0x0, 0x0);
        gbc.writeMem(0x89a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5058);
        EXPECT(gbc.pc(), 0x89a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a5), 0xcb);
        EXPECT(gbc.readMem(0x89a6), 0x64);
        // CB 64 0269
        gbc.setState(0xa3ac, 0xf17, 0xbb90, 0xff09, 0xe1b1, 0x4f55, 0x0, 0x1);
        gbc.writeMem(0xa3ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0xa3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ac), 0xcb);
        EXPECT(gbc.readMem(0xa3ad), 0x64);
        // CB 64 026A
        gbc.setState(0xb094, 0xbcbb, 0x77e0, 0x6e07, 0x9012, 0xd6ff, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbcbb);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0xcb);
        EXPECT(gbc.readMem(0xb095), 0x64);
        // CB 64 026B
        gbc.setState(0xb940, 0x67f4, 0xaaf0, 0x6215, 0x4203, 0x9bbb, 0x1, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x67f4);
        EXPECT(gbc.pc(), 0xb942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb940), 0xcb);
        EXPECT(gbc.readMem(0xb941), 0x64);
        // CB 64 026C
        gbc.setState(0xbf12, 0xea88, 0xc110, 0x5933, 0xca74, 0x2a98, 0x1, 0x1);
        gbc.writeMem(0xbf12, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xea88);
        EXPECT(gbc.pc(), 0xbf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf12), 0xcb);
        EXPECT(gbc.readMem(0xbf13), 0x64);
        // CB 64 026D
        gbc.setState(0x1a86, 0xd988, 0xac00, 0x286e, 0xbcd6, 0x57c6, 0x0, 0x0);
        gbc.writeMem(0x1a86, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd988);
        EXPECT(gbc.pc(), 0x1a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 026E
        gbc.setState(0xc236, 0xc60a, 0x85a0, 0x867f, 0x85, 0xdf1b, 0x0, 0x1);
        gbc.writeMem(0xc236, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc60a);
        EXPECT(gbc.pc(), 0xc238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc236), 0xcb);
        EXPECT(gbc.readMem(0xc237), 0x64);
        // CB 64 026F
        gbc.setState(0x3402, 0x85fb, 0x6150, 0xf635, 0xc982, 0x5ce5, 0x0, 0x0);
        gbc.writeMem(0x3402, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x85fb);
        EXPECT(gbc.pc(), 0x3404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0270
        gbc.setState(0x4c55, 0x301b, 0xe390, 0xfd85, 0xd0bb, 0x8775, 0x0, 0x1);
        gbc.writeMem(0x4c55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x301b);
        EXPECT(gbc.pc(), 0x4c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0271
        gbc.setState(0x6814, 0xee41, 0xe3c0, 0xd1ec, 0x47a0, 0xdec2, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xee41);
        EXPECT(gbc.pc(), 0x6816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0272
        gbc.setState(0xabd9, 0x9448, 0x390, 0x8b20, 0x1a9a, 0xd86e, 0x0, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9448);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd9), 0xcb);
        EXPECT(gbc.readMem(0xabda), 0x64);
        // CB 64 0273
        gbc.setState(0xc2e0, 0x321c, 0x7f40, 0xb126, 0xb968, 0x382d, 0x0, 0x1);
        gbc.writeMem(0xc2e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x321c);
        EXPECT(gbc.pc(), 0xc2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e0), 0xcb);
        EXPECT(gbc.readMem(0xc2e1), 0x64);
        // CB 64 0274
        gbc.setState(0x2898, 0xb8ff, 0xe50, 0xb790, 0x98f3, 0x443c, 0x1, 0x1);
        gbc.writeMem(0x2898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb8ff);
        EXPECT(gbc.pc(), 0x289a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0275
        gbc.setState(0x5149, 0x701f, 0xd680, 0x9be3, 0xbaa0, 0x9266, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x701f);
        EXPECT(gbc.pc(), 0x514b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0276
        gbc.setState(0x86e, 0xecb2, 0xa8a0, 0x6690, 0x1deb, 0xed73, 0x1, 0x0);
        gbc.writeMem(0x86e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xecb2);
        EXPECT(gbc.pc(), 0x870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0277
        gbc.setState(0x53db, 0x15de, 0xd680, 0xf8a2, 0x52e, 0x9851, 0x1, 0x1);
        gbc.writeMem(0x53db, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x15de);
        EXPECT(gbc.pc(), 0x53dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0278
        gbc.setState(0xb417, 0xd085, 0x3c0, 0x9c54, 0x49cf, 0xe01, 0x0, 0x1);
        gbc.writeMem(0xb417, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd085);
        EXPECT(gbc.pc(), 0xb419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb417), 0xcb);
        EXPECT(gbc.readMem(0xb418), 0x64);
        // CB 64 0279
        gbc.setState(0x6327, 0xc2e2, 0x8150, 0x347b, 0x4ca1, 0x3211, 0x0, 0x0);
        gbc.writeMem(0x6327, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc2e2);
        EXPECT(gbc.pc(), 0x6329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 027A
        gbc.setState(0x97, 0xa82, 0x4820, 0x4a35, 0xc7, 0x1f05, 0x0, 0x0);
        gbc.writeMem(0x97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa82);
        EXPECT(gbc.pc(), 0x99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 027B
        gbc.setState(0x9cd4, 0x38c, 0xef80, 0xa1b6, 0x6c9a, 0x83d, 0x0, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x38c);
        EXPECT(gbc.pc(), 0x9cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd4), 0xcb);
        EXPECT(gbc.readMem(0x9cd5), 0x64);
        // CB 64 027C
        gbc.setState(0x5c94, 0xa9ff, 0xd290, 0x8f6d, 0x39ec, 0x5eca, 0x1, 0x0);
        gbc.writeMem(0x5c94, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa9ff);
        EXPECT(gbc.pc(), 0x5c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 027D
        gbc.setState(0xfc, 0x4449, 0xb4e0, 0x1fda, 0x13ad, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0xfc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4449);
        EXPECT(gbc.pc(), 0xfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 027E
        gbc.setState(0x95f7, 0xdec1, 0x2a70, 0x25d6, 0xe78a, 0x86b7, 0x1, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdec1);
        EXPECT(gbc.pc(), 0x95f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f7), 0xcb);
        EXPECT(gbc.readMem(0x95f8), 0x64);
        // CB 64 027F
        gbc.setState(0xb0b7, 0xa714, 0x8cf0, 0x7959, 0x442b, 0xe4c0, 0x0, 0x1);
        gbc.writeMem(0xb0b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa714);
        EXPECT(gbc.pc(), 0xb0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b7), 0xcb);
        EXPECT(gbc.readMem(0xb0b8), 0x64);
        // CB 64 0280
        gbc.setState(0x8d0d, 0xe434, 0xd4e0, 0xa9e2, 0x5df2, 0xefec, 0x0, 0x1);
        gbc.writeMem(0x8d0d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe434);
        EXPECT(gbc.pc(), 0x8d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0d), 0xcb);
        EXPECT(gbc.readMem(0x8d0e), 0x64);
        // CB 64 0282
        gbc.setState(0x4e0, 0xb122, 0xa4b0, 0x2739, 0x2bc0, 0xb6de, 0x1, 0x1);
        gbc.writeMem(0x4e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb122);
        EXPECT(gbc.pc(), 0x4e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0283
        gbc.setState(0xe768, 0x7856, 0x1510, 0xcbfd, 0x3435, 0x25f4, 0x1, 0x1);
        gbc.writeMem(0xe768, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7856);
        EXPECT(gbc.pc(), 0xe76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe768), 0xcb);
        EXPECT(gbc.readMem(0xe769), 0x64);
        // CB 64 0284
        gbc.setState(0x47a3, 0x6871, 0x95e0, 0xd8b8, 0xf8a1, 0x78f0, 0x0, 0x1);
        gbc.writeMem(0x47a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6871);
        EXPECT(gbc.pc(), 0x47a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0285
        gbc.setState(0x2c7e, 0xbc4b, 0x6700, 0xb02f, 0xc0f0, 0xd421, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbc4b);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0286
        gbc.setState(0xa056, 0x6636, 0x7260, 0xf77e, 0x24fd, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6636);
        EXPECT(gbc.pc(), 0xa058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa056), 0xcb);
        EXPECT(gbc.readMem(0xa057), 0x64);
        // CB 64 0287
        gbc.setState(0x9ee6, 0xfc6c, 0xc140, 0x13b1, 0xa1b8, 0x8d57, 0x0, 0x0);
        gbc.writeMem(0x9ee6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfc6c);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0x64);
        // CB 64 0288
        gbc.setState(0x7690, 0xbb98, 0xea80, 0x2da6, 0x7e30, 0xd6f4, 0x1, 0x0);
        gbc.writeMem(0x7690, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbb98);
        EXPECT(gbc.pc(), 0x7692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0289
        gbc.setState(0x78, 0x3246, 0xe520, 0xe192, 0x7e2d, 0x68ad, 0x1, 0x1);
        gbc.writeMem(0x78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3246);
        EXPECT(gbc.pc(), 0x7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 028A
        gbc.setState(0xcc07, 0x5e15, 0xd9c0, 0xdfc6, 0xab92, 0xbcb2, 0x1, 0x1);
        gbc.writeMem(0xcc07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5e15);
        EXPECT(gbc.pc(), 0xcc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc07), 0xcb);
        EXPECT(gbc.readMem(0xcc08), 0x64);
        // CB 64 028B
        gbc.setState(0xd51e, 0xffb3, 0x8610, 0xe804, 0x179b, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0xd51e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xffb3);
        EXPECT(gbc.pc(), 0xd520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51e), 0xcb);
        EXPECT(gbc.readMem(0xd51f), 0x64);
        // CB 64 028C
        gbc.setState(0xdb56, 0x5dff, 0xb30, 0x92f2, 0xb585, 0xd084, 0x1, 0x0);
        gbc.writeMem(0xdb56, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5dff);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb56), 0xcb);
        EXPECT(gbc.readMem(0xdb57), 0x64);
        // CB 64 028D
        gbc.setState(0x30da, 0xe38a, 0x3e00, 0xbdc, 0xafe8, 0xc518, 0x0, 0x0);
        gbc.writeMem(0x30da, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe38a);
        EXPECT(gbc.pc(), 0x30dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 028E
        gbc.setState(0xc8a9, 0x9644, 0x7ea0, 0x2fc4, 0x8250, 0xed42, 0x1, 0x0);
        gbc.writeMem(0xc8a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9644);
        EXPECT(gbc.pc(), 0xc8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a9), 0xcb);
        EXPECT(gbc.readMem(0xc8aa), 0x64);
        // CB 64 028F
        gbc.setState(0xe693, 0xd7e2, 0x6a80, 0xdc43, 0x195, 0x3f21, 0x1, 0x0);
        gbc.writeMem(0xe693, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd7e2);
        EXPECT(gbc.pc(), 0xe695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe693), 0xcb);
        EXPECT(gbc.readMem(0xe694), 0x64);
        // CB 64 0290
        gbc.setState(0x61c3, 0xc1c4, 0xea30, 0xf879, 0xbe3c, 0x7ef, 0x0, 0x0);
        gbc.writeMem(0x61c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc1c4);
        EXPECT(gbc.pc(), 0x61c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0291
        gbc.setState(0x8f98, 0x8513, 0xece0, 0x49a2, 0x1da9, 0x2925, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8513);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f98), 0xcb);
        EXPECT(gbc.readMem(0x8f99), 0x64);
        // CB 64 0292
        gbc.setState(0xdbf7, 0xa564, 0x2090, 0xbeb, 0x3457, 0x294c, 0x1, 0x0);
        gbc.writeMem(0xdbf7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa564);
        EXPECT(gbc.pc(), 0xdbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf7), 0xcb);
        EXPECT(gbc.readMem(0xdbf8), 0x64);
        // CB 64 0293
        gbc.setState(0x7dd7, 0xd3d9, 0xe9f0, 0xd5aa, 0x6e86, 0xdbb1, 0x0, 0x0);
        gbc.writeMem(0x7dd7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd3d9);
        EXPECT(gbc.pc(), 0x7dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0294
        gbc.setState(0x96f5, 0xbcc8, 0x1fb0, 0x3b8b, 0xb7c1, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x96f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbcc8);
        EXPECT(gbc.pc(), 0x96f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f5), 0xcb);
        EXPECT(gbc.readMem(0x96f6), 0x64);
        // CB 64 0295
        gbc.setState(0x9f0b, 0x56ef, 0x22d0, 0xfe4f, 0x37a2, 0x8e3b, 0x0, 0x0);
        gbc.writeMem(0x9f0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x56ef);
        EXPECT(gbc.pc(), 0x9f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f0b), 0xcb);
        EXPECT(gbc.readMem(0x9f0c), 0x64);
        // CB 64 0296
        gbc.setState(0x3ba6, 0x3b02, 0xb250, 0x3db8, 0xba6b, 0x5fd3, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3b02);
        EXPECT(gbc.pc(), 0x3ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0297
        gbc.setState(0xebbf, 0x9a63, 0x7880, 0xf9c1, 0x15e6, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0xebbf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9a63);
        EXPECT(gbc.pc(), 0xebc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbf), 0xcb);
        EXPECT(gbc.readMem(0xebc0), 0x64);
        // CB 64 0298
        gbc.setState(0xd950, 0x698a, 0xcb30, 0xd791, 0x6b12, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xd950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x698a);
        EXPECT(gbc.pc(), 0xd952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd950), 0xcb);
        EXPECT(gbc.readMem(0xd951), 0x64);
        // CB 64 0299
        gbc.setState(0x454d, 0xb038, 0xbf10, 0x9158, 0x82c0, 0xa0c8, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb038);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 029A
        gbc.setState(0x9af9, 0x2695, 0xaf30, 0xf58f, 0xe80a, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0x9af9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2695);
        EXPECT(gbc.pc(), 0x9afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af9), 0xcb);
        EXPECT(gbc.readMem(0x9afa), 0x64);
        // CB 64 029C
        gbc.setState(0xe959, 0xac76, 0xbba0, 0x84e, 0x41bc, 0xd90b, 0x0, 0x0);
        gbc.writeMem(0xe959, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xac76);
        EXPECT(gbc.pc(), 0xe95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe959), 0xcb);
        EXPECT(gbc.readMem(0xe95a), 0x64);
        // CB 64 029D
        gbc.setState(0x912b, 0x2710, 0x8540, 0x3865, 0xd70e, 0x2c62, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2710);
        EXPECT(gbc.pc(), 0x912d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912b), 0xcb);
        EXPECT(gbc.readMem(0x912c), 0x64);
        // CB 64 029E
        gbc.setState(0xa598, 0xbf6, 0xefb0, 0x81c3, 0xa61c, 0x5e21, 0x0, 0x1);
        gbc.writeMem(0xa598, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbf6);
        EXPECT(gbc.pc(), 0xa59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa598), 0xcb);
        EXPECT(gbc.readMem(0xa599), 0x64);
        // CB 64 029F
        gbc.setState(0x116b, 0xce60, 0xe950, 0x5ba9, 0xc3dc, 0x4382, 0x1, 0x0);
        gbc.writeMem(0x116b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xce60);
        EXPECT(gbc.pc(), 0x116d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A0
        gbc.setState(0xd332, 0x40b9, 0xb330, 0x9f2f, 0xaeb9, 0x6560, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x40b9);
        EXPECT(gbc.pc(), 0xd334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd332), 0xcb);
        EXPECT(gbc.readMem(0xd333), 0x64);
        // CB 64 02A2
        gbc.setState(0x28b9, 0x440e, 0x4710, 0x3a9b, 0x3631, 0xb3e6, 0x0, 0x1);
        gbc.writeMem(0x28b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x440e);
        EXPECT(gbc.pc(), 0x28bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A3
        gbc.setState(0x2009, 0xa5d8, 0xc020, 0x8bbe, 0xa53b, 0xbbcd, 0x1, 0x0);
        gbc.writeMem(0x2009, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0x200b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02A4
        gbc.setState(0x2cc4, 0x1e34, 0xd810, 0x63e0, 0xe3bc, 0xd2de, 0x0, 0x0);
        gbc.writeMem(0x2cc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x2cc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A5
        gbc.setState(0x505b, 0x6d23, 0x2c00, 0xb313, 0xcbb1, 0xf6ce, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6d23);
        EXPECT(gbc.pc(), 0x505d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02A6
        gbc.setState(0x7831, 0xc0d4, 0xf950, 0x36da, 0xea0d, 0x2b6f, 0x1, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc0d4);
        EXPECT(gbc.pc(), 0x7833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A7
        gbc.setState(0xa4b, 0x6ca1, 0x790, 0xa958, 0x5146, 0x867d, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6ca1);
        EXPECT(gbc.pc(), 0xa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A8
        gbc.setState(0x589a, 0xa0d1, 0x5e90, 0x550c, 0xfcd9, 0x5af2, 0x1, 0x1);
        gbc.writeMem(0x589a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa0d1);
        EXPECT(gbc.pc(), 0x589c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02A9
        gbc.setState(0xf0d, 0x6396, 0xc240, 0x7902, 0x8052, 0xccbb, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6396);
        EXPECT(gbc.pc(), 0xf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02AA
        gbc.setState(0x4054, 0x9cd0, 0xcf20, 0xec26, 0x416e, 0xdab4, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9cd0);
        EXPECT(gbc.pc(), 0x4056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02AB
        gbc.setState(0x8429, 0x2dc8, 0xb540, 0x4760, 0xb845, 0xf676, 0x1, 0x0);
        gbc.writeMem(0x8429, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2dc8);
        EXPECT(gbc.pc(), 0x842b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8429), 0xcb);
        EXPECT(gbc.readMem(0x842a), 0x64);
        // CB 64 02AC
        gbc.setState(0xae67, 0x8148, 0x3fd0, 0xc6a0, 0x9afd, 0xa328, 0x1, 0x1);
        gbc.writeMem(0xae67, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8148);
        EXPECT(gbc.pc(), 0xae69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae67), 0xcb);
        EXPECT(gbc.readMem(0xae68), 0x64);
        // CB 64 02AD
        gbc.setState(0x6950, 0x19ec, 0x2490, 0x2471, 0x117e, 0x71a0, 0x1, 0x0);
        gbc.writeMem(0x6950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x19ec);
        EXPECT(gbc.pc(), 0x6952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02AE
        gbc.setState(0xaa24, 0xd9aa, 0x5130, 0xaeca, 0xac93, 0x7515, 0x1, 0x1);
        gbc.writeMem(0xaa24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd9aa);
        EXPECT(gbc.pc(), 0xaa26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa24), 0xcb);
        EXPECT(gbc.readMem(0xaa25), 0x64);
        // CB 64 02AF
        gbc.setState(0x6bbb, 0x9499, 0x9af0, 0xd506, 0x47a8, 0x6e48, 0x0, 0x1);
        gbc.writeMem(0x6bbb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9499);
        EXPECT(gbc.pc(), 0x6bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02B0
        gbc.setState(0xd4d, 0xb60b, 0xa6e0, 0x55f2, 0x18ba, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb60b);
        EXPECT(gbc.pc(), 0xd4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02B1
        gbc.setState(0x1928, 0xb99e, 0x7bc0, 0xf1e2, 0xb824, 0x1472, 0x0, 0x1);
        gbc.writeMem(0x1928, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb99e);
        EXPECT(gbc.pc(), 0x192a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02B2
        gbc.setState(0x4737, 0xfbbb, 0x3430, 0xff4c, 0xb2e6, 0x7605, 0x1, 0x0);
        gbc.writeMem(0x4737, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfbbb);
        EXPECT(gbc.pc(), 0x4739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02B3
        gbc.setState(0x52b8, 0x46ce, 0xbc80, 0x36f2, 0xa30c, 0xd2b6, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0x52ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02B4
        gbc.setState(0x9679, 0xdd77, 0xd170, 0xe8d8, 0x7917, 0xc25a, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdd77);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0x64);
        // CB 64 02B5
        gbc.setState(0x7ce2, 0xfe43, 0xdd00, 0x2c0f, 0x7c25, 0xf76d, 0x0, 0x0);
        gbc.writeMem(0x7ce2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0x7ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02B6
        gbc.setState(0x3fa0, 0x7c62, 0x6c70, 0x8ba2, 0xf462, 0xd9b9, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7c62);
        EXPECT(gbc.pc(), 0x3fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02B7
        gbc.setState(0x9632, 0x3378, 0xdeb0, 0xb16b, 0xdd6f, 0x3f48, 0x0, 0x0);
        gbc.writeMem(0x9632, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3378);
        EXPECT(gbc.pc(), 0x9634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9632), 0xcb);
        EXPECT(gbc.readMem(0x9633), 0x64);
        // CB 64 02B8
        gbc.setState(0x4829, 0x865c, 0xc980, 0xd2d, 0xa2aa, 0x7167, 0x0, 0x0);
        gbc.writeMem(0x4829, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x865c);
        EXPECT(gbc.pc(), 0x482b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02B9
        gbc.setState(0x8f3, 0x92e6, 0xc680, 0x61ed, 0x58b3, 0x8c51, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x92e6);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02BA
        gbc.setState(0xe8c3, 0x6b13, 0xe970, 0xf0be, 0x3880, 0x36b7, 0x0, 0x1);
        gbc.writeMem(0xe8c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0xe8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c3), 0xcb);
        EXPECT(gbc.readMem(0xe8c4), 0x64);
        // CB 64 02BB
        gbc.setState(0xe873, 0x1459, 0x4660, 0x2d5a, 0x4c73, 0x3b41, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1459);
        EXPECT(gbc.pc(), 0xe875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0xcb);
        EXPECT(gbc.readMem(0xe874), 0x64);
        // CB 64 02BC
        gbc.setState(0xd737, 0x2c4f, 0x1920, 0x45e4, 0x9f44, 0xfce6, 0x1, 0x0);
        gbc.writeMem(0xd737, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2c4f);
        EXPECT(gbc.pc(), 0xd739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd737), 0xcb);
        EXPECT(gbc.readMem(0xd738), 0x64);
        // CB 64 02BD
        gbc.setState(0x8bc2, 0x2f40, 0x3370, 0xcaed, 0xc2c8, 0x6a6b, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2f40);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc2), 0xcb);
        EXPECT(gbc.readMem(0x8bc3), 0x64);
        // CB 64 02BE
        gbc.setState(0x4abe, 0x8b11, 0x6900, 0x39e9, 0xbcb9, 0xddfd, 0x0, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8b11);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02BF
        gbc.setState(0xce24, 0x343d, 0xa070, 0xf4e1, 0x168f, 0xc5a6, 0x0, 0x0);
        gbc.writeMem(0xce24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x343d);
        EXPECT(gbc.pc(), 0xce26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce24), 0xcb);
        EXPECT(gbc.readMem(0xce25), 0x64);
        // CB 64 02C0
        gbc.setState(0xdc8, 0xbf76, 0x1b10, 0xee37, 0xd623, 0x4bab, 0x1, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbf76);
        EXPECT(gbc.pc(), 0xdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02C2
        gbc.setState(0x8405, 0x5d4f, 0xa30, 0xfb88, 0x165b, 0x468e, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5d4f);
        EXPECT(gbc.pc(), 0x8407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8405), 0xcb);
        EXPECT(gbc.readMem(0x8406), 0x64);
        // CB 64 02C3
        gbc.setState(0xd376, 0x8c1b, 0xd780, 0xc0d9, 0xc23, 0xdcb1, 0x1, 0x1);
        gbc.writeMem(0xd376, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0x64);
        // CB 64 02C4
        gbc.setState(0xccfa, 0xc248, 0xc880, 0xedd2, 0x5576, 0x5723, 0x1, 0x0);
        gbc.writeMem(0xccfa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc248);
        EXPECT(gbc.pc(), 0xccfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfa), 0xcb);
        EXPECT(gbc.readMem(0xccfb), 0x64);
        // CB 64 02C5
        gbc.setState(0xed04, 0xe1b1, 0x60b0, 0x35ad, 0x4bf3, 0xd59a, 0x1, 0x0);
        gbc.writeMem(0xed04, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe1b1);
        EXPECT(gbc.pc(), 0xed06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed04), 0xcb);
        EXPECT(gbc.readMem(0xed05), 0x64);
        // CB 64 02C6
        gbc.setState(0xb1a5, 0x66c8, 0x2d00, 0xd650, 0x5962, 0x19c1, 0x0, 0x0);
        gbc.writeMem(0xb1a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x66c8);
        EXPECT(gbc.pc(), 0xb1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a5), 0xcb);
        EXPECT(gbc.readMem(0xb1a6), 0x64);
        // CB 64 02C7
        gbc.setState(0xcd07, 0x219c, 0x3440, 0x8bd1, 0x6c2b, 0x73ee, 0x0, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x219c);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0x64);
        // CB 64 02C8
        gbc.setState(0x592c, 0x71d5, 0xc480, 0x8b2, 0xaab8, 0xdd9, 0x1, 0x0);
        gbc.writeMem(0x592c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02C9
        gbc.setState(0x4654, 0x70d7, 0x2f10, 0x8e9a, 0x22b6, 0x7ace, 0x1, 0x0);
        gbc.writeMem(0x4654, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x70d7);
        EXPECT(gbc.pc(), 0x4656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02CA
        gbc.setState(0x18df, 0x87e9, 0x9660, 0x4b7b, 0x2191, 0x39d7, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x87e9);
        EXPECT(gbc.pc(), 0x18e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02CB
        gbc.setState(0xe621, 0xf98c, 0x8f0, 0x3c, 0x27fb, 0xd840, 0x1, 0x0);
        gbc.writeMem(0xe621, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf98c);
        EXPECT(gbc.pc(), 0xe623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe621), 0xcb);
        EXPECT(gbc.readMem(0xe622), 0x64);
        // CB 64 02CC
        gbc.setState(0x373a, 0xa9b2, 0x1140, 0x17a5, 0xbd86, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa9b2);
        EXPECT(gbc.pc(), 0x373c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02CD
        gbc.setState(0x79d0, 0x10b9, 0x18c0, 0x6fd7, 0x9366, 0xfec1, 0x0, 0x1);
        gbc.writeMem(0x79d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x10b9);
        EXPECT(gbc.pc(), 0x79d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02CE
        gbc.setState(0x54c9, 0x18ae, 0x9fd0, 0xec86, 0xd6c1, 0xa8f2, 0x1, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x18ae);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02CF
        gbc.setState(0x5d95, 0x9f32, 0x2930, 0x8c66, 0x9de4, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0x5d95, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9f32);
        EXPECT(gbc.pc(), 0x5d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02D0
        gbc.setState(0x2775, 0xf5b1, 0x8980, 0x2a55, 0xf3b3, 0x228, 0x1, 0x0);
        gbc.writeMem(0x2775, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf5b1);
        EXPECT(gbc.pc(), 0x2777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02D1
        gbc.setState(0x3ff7, 0xf657, 0xcb90, 0xa3fe, 0xd720, 0x3387, 0x0, 0x1);
        gbc.writeMem(0x3ff7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf657);
        EXPECT(gbc.pc(), 0x3ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02D2
        gbc.setState(0x3d2f, 0xd0b4, 0x74b0, 0x2817, 0x1dbb, 0xe1ed, 0x0, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd0b4);
        EXPECT(gbc.pc(), 0x3d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02D3
        gbc.setState(0x1f5b, 0x1601, 0x400, 0xfbb3, 0x71c1, 0x48f2, 0x1, 0x1);
        gbc.writeMem(0x1f5b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1601);
        EXPECT(gbc.pc(), 0x1f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02D4
        gbc.setState(0x1ec3, 0x5d93, 0xeb70, 0x356, 0x349, 0x24eb, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5d93);
        EXPECT(gbc.pc(), 0x1ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02D5
        gbc.setState(0x3996, 0xe98d, 0xba60, 0x1ac5, 0x22c2, 0x113, 0x1, 0x0);
        gbc.writeMem(0x3996, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe98d);
        EXPECT(gbc.pc(), 0x3998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02D6
        gbc.setState(0xa14d, 0x12ea, 0xd420, 0x8f70, 0x2da3, 0x2ca1, 0x1, 0x0);
        gbc.writeMem(0xa14d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x12ea);
        EXPECT(gbc.pc(), 0xa14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14d), 0xcb);
        EXPECT(gbc.readMem(0xa14e), 0x64);
        // CB 64 02D7
        gbc.setState(0x7b6e, 0x69c4, 0x8140, 0x2da2, 0x7606, 0x7b14, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0x7b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02D8
        gbc.setState(0xb576, 0xf863, 0x8d70, 0xa3cb, 0x8c2e, 0xe78f, 0x0, 0x1);
        gbc.writeMem(0xb576, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf863);
        EXPECT(gbc.pc(), 0xb578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb576), 0xcb);
        EXPECT(gbc.readMem(0xb577), 0x64);
        // CB 64 02D9
        gbc.setState(0xe605, 0xa6, 0x1240, 0xa3c7, 0x4c26, 0x2cc2, 0x0, 0x0);
        gbc.writeMem(0xe605, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa6);
        EXPECT(gbc.pc(), 0xe607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe605), 0xcb);
        EXPECT(gbc.readMem(0xe606), 0x64);
        // CB 64 02DA
        gbc.setState(0x603c, 0x5627, 0x5540, 0x7f64, 0x509e, 0x5a3b, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5627);
        EXPECT(gbc.pc(), 0x603e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02DB
        gbc.setState(0x3a4e, 0x2a3, 0x8400, 0xeb72, 0x5f4a, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2a3);
        EXPECT(gbc.pc(), 0x3a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02DD
        gbc.setState(0x80d2, 0x15d, 0xe3b0, 0xa979, 0xf2e1, 0x674e, 0x1, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x15d);
        EXPECT(gbc.pc(), 0x80d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d2), 0xcb);
        EXPECT(gbc.readMem(0x80d3), 0x64);
        // CB 64 02DE
        gbc.setState(0xe3ab, 0xcff2, 0xda00, 0x7fe9, 0xa693, 0x7de, 0x1, 0x0);
        gbc.writeMem(0xe3ab, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcff2);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ab), 0xcb);
        EXPECT(gbc.readMem(0xe3ac), 0x64);
        // CB 64 02DF
        gbc.setState(0xb97b, 0xbe17, 0x1ee0, 0x3161, 0x1f40, 0x5111, 0x0, 0x0);
        gbc.writeMem(0xb97b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbe17);
        EXPECT(gbc.pc(), 0xb97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97b), 0xcb);
        EXPECT(gbc.readMem(0xb97c), 0x64);
        // CB 64 02E0
        gbc.setState(0x5903, 0x31b8, 0xeda0, 0xa95e, 0xa72a, 0xcdad, 0x1, 0x1);
        gbc.writeMem(0x5903, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x31b8);
        EXPECT(gbc.pc(), 0x5905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02E1
        gbc.setState(0x57e0, 0x42e5, 0x6eb0, 0x2eb1, 0x55dd, 0xb0f, 0x0, 0x0);
        gbc.writeMem(0x57e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x42e5);
        EXPECT(gbc.pc(), 0x57e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02E2
        gbc.setState(0xc499, 0x111e, 0xff20, 0xc856, 0xa4b9, 0xcfcf, 0x0, 0x0);
        gbc.writeMem(0xc499, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x111e);
        EXPECT(gbc.pc(), 0xc49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc499), 0xcb);
        EXPECT(gbc.readMem(0xc49a), 0x64);
        // CB 64 02E3
        gbc.setState(0xcbfb, 0x350e, 0x11e0, 0xebae, 0x73c4, 0xfc35, 0x1, 0x1);
        gbc.writeMem(0xcbfb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x350e);
        EXPECT(gbc.pc(), 0xcbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfb), 0xcb);
        EXPECT(gbc.readMem(0xcbfc), 0x64);
        // CB 64 02E4
        gbc.setState(0x9c30, 0x9ebf, 0xfd30, 0xdec3, 0xf766, 0x3c83, 0x1, 0x1);
        gbc.writeMem(0x9c30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9ebf);
        EXPECT(gbc.pc(), 0x9c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c30), 0xcb);
        EXPECT(gbc.readMem(0x9c31), 0x64);
        // CB 64 02E6
        gbc.setState(0x1898, 0xb55e, 0x20e0, 0x2033, 0x8f46, 0x3559, 0x0, 0x0);
        gbc.writeMem(0x1898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb55e);
        EXPECT(gbc.pc(), 0x189a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02E7
        gbc.setState(0x5574, 0xfb85, 0x17b0, 0x77b7, 0xdacc, 0x2a7a, 0x0, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfb85);
        EXPECT(gbc.pc(), 0x5576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02E8
        gbc.setState(0x5cfb, 0x914f, 0x36d0, 0x3ce6, 0xa7bb, 0xb462, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x914f);
        EXPECT(gbc.pc(), 0x5cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02E9
        gbc.setState(0x6267, 0xd973, 0xf70, 0x6e4b, 0x6858, 0x9d72, 0x0, 0x0);
        gbc.writeMem(0x6267, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd973);
        EXPECT(gbc.pc(), 0x6269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02EA
        gbc.setState(0x2675, 0x2f80, 0xc910, 0xb8a5, 0x3314, 0xb41d, 0x1, 0x1);
        gbc.writeMem(0x2675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2f80);
        EXPECT(gbc.pc(), 0x2677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02EB
        gbc.setState(0xe78c, 0xf747, 0xe690, 0x188, 0x7ba7, 0x708d, 0x0, 0x1);
        gbc.writeMem(0xe78c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0xe78e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78c), 0xcb);
        EXPECT(gbc.readMem(0xe78d), 0x64);
        // CB 64 02EC
        gbc.setState(0x845a, 0xb26e, 0xe070, 0xb071, 0x4ad8, 0x2048, 0x0, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb26e);
        EXPECT(gbc.pc(), 0x845c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845a), 0xcb);
        EXPECT(gbc.readMem(0x845b), 0x64);
        // CB 64 02ED
        gbc.setState(0x102, 0xfa2e, 0x3f40, 0x2ff3, 0x6ff6, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0x102, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0x104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02EE
        gbc.setState(0x8b14, 0xc4db, 0x6610, 0xb23a, 0x7338, 0xb9c9, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc4db);
        EXPECT(gbc.pc(), 0x8b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b14), 0xcb);
        EXPECT(gbc.readMem(0x8b15), 0x64);
        // CB 64 02F2
        gbc.setState(0xbdb7, 0x9000, 0xbde0, 0xffa, 0x3361, 0x8141, 0x0, 0x1);
        gbc.writeMem(0xbdb7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9000);
        EXPECT(gbc.pc(), 0xbdb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb7), 0xcb);
        EXPECT(gbc.readMem(0xbdb8), 0x64);
        // CB 64 02F3
        gbc.setState(0xee3f, 0xf09d, 0x1170, 0x6058, 0xddc, 0x8318, 0x0, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf09d);
        EXPECT(gbc.pc(), 0xee41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3f), 0xcb);
        EXPECT(gbc.readMem(0xee40), 0x64);
        // CB 64 02F4
        gbc.setState(0x712a, 0x909b, 0x3770, 0xc54e, 0xc0da, 0x252a, 0x0, 0x1);
        gbc.writeMem(0x712a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x909b);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02F5
        gbc.setState(0x6360, 0xb28d, 0x61c0, 0x4324, 0x8fcb, 0x344b, 0x1, 0x1);
        gbc.writeMem(0x6360, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02F6
        gbc.setState(0x434b, 0x57c8, 0x71c0, 0x9127, 0xa4b2, 0xe281, 0x1, 0x0);
        gbc.writeMem(0x434b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x57c8);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02F7
        gbc.setState(0x3b07, 0xb7f7, 0x25d0, 0x9297, 0xd758, 0x5b24, 0x1, 0x0);
        gbc.writeMem(0x3b07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb7f7);
        EXPECT(gbc.pc(), 0x3b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02F8
        gbc.setState(0xb6ef, 0x72e, 0x7670, 0xe835, 0xf6e3, 0xb1b2, 0x0, 0x1);
        gbc.writeMem(0xb6ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x72e);
        EXPECT(gbc.pc(), 0xb6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ef), 0xcb);
        EXPECT(gbc.readMem(0xb6f0), 0x64);
        // CB 64 02F9
        gbc.setState(0x5c07, 0xecf0, 0x9560, 0x7a0f, 0x5256, 0x8894, 0x0, 0x0);
        gbc.writeMem(0x5c07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0x5c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02FA
        gbc.setState(0x870f, 0xa7bc, 0xc930, 0xa511, 0x5220, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x870f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa7bc);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870f), 0xcb);
        EXPECT(gbc.readMem(0x8710), 0x64);
        // CB 64 02FB
        gbc.setState(0x1411, 0xc817, 0xd380, 0xa8f7, 0xab04, 0xf4c7, 0x0, 0x1);
        gbc.writeMem(0x1411, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc817);
        EXPECT(gbc.pc(), 0x1413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02FC
        gbc.setState(0x7fd7, 0x227d, 0xbe20, 0x1ec7, 0x642a, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x7fd7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x227d);
        EXPECT(gbc.pc(), 0x7fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 02FD
        gbc.setState(0xb934, 0x7f09, 0xb880, 0x9e62, 0x5e79, 0xa77c, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7f09);
        EXPECT(gbc.pc(), 0xb936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb934), 0xcb);
        EXPECT(gbc.readMem(0xb935), 0x64);
        // CB 64 02FE
        gbc.setState(0x7250, 0xf81f, 0x87f0, 0xedb0, 0xb80b, 0xf817, 0x1, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf81f);
        EXPECT(gbc.pc(), 0x7252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 02FF
        gbc.setState(0x2623, 0x1629, 0x2a80, 0x2091, 0x8df3, 0x89fe, 0x0, 0x0);
        gbc.writeMem(0x2623, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1629);
        EXPECT(gbc.pc(), 0x2625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0300
        gbc.setState(0x8558, 0xa227, 0x42c0, 0xd917, 0x8f8e, 0x4859, 0x0, 0x1);
        gbc.writeMem(0x8558, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa227);
        EXPECT(gbc.pc(), 0x855a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8558), 0xcb);
        EXPECT(gbc.readMem(0x8559), 0x64);
        // CB 64 0301
        gbc.setState(0xa955, 0x263a, 0x9bd0, 0xe4e1, 0x7f35, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0xa955, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0xa957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa955), 0xcb);
        EXPECT(gbc.readMem(0xa956), 0x64);
        // CB 64 0303
        gbc.setState(0x69d4, 0xf98e, 0x4a50, 0x87a1, 0x8954, 0x7e00, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf98e);
        EXPECT(gbc.pc(), 0x69d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0304
        gbc.setState(0x4034, 0xb0ed, 0xc1e0, 0x75a1, 0x76c8, 0x8d8c, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb0ed);
        EXPECT(gbc.pc(), 0x4036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0305
        gbc.setState(0x5f40, 0xe7d4, 0x1920, 0x8fb4, 0x3c48, 0x8852, 0x1, 0x1);
        gbc.writeMem(0x5f40, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe7d4);
        EXPECT(gbc.pc(), 0x5f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0306
        gbc.setState(0x4c6f, 0x45f7, 0x6340, 0xe57e, 0x5cde, 0x24e6, 0x1, 0x0);
        gbc.writeMem(0x4c6f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x45f7);
        EXPECT(gbc.pc(), 0x4c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0307
        gbc.setState(0x3a88, 0x19c5, 0xc970, 0xbc05, 0xa304, 0xb593, 0x1, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x19c5);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0308
        gbc.setState(0x636d, 0xa6ee, 0x5b20, 0xb176, 0x66da, 0x9df5, 0x0, 0x0);
        gbc.writeMem(0x636d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa6ee);
        EXPECT(gbc.pc(), 0x636f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0309
        gbc.setState(0xb3a7, 0x6b1b, 0x7340, 0x1bd, 0x890c, 0x4ad6, 0x1, 0x1);
        gbc.writeMem(0xb3a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6b1b);
        EXPECT(gbc.pc(), 0xb3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a7), 0xcb);
        EXPECT(gbc.readMem(0xb3a8), 0x64);
        // CB 64 030A
        gbc.setState(0x9716, 0xf994, 0x98c0, 0x5a8a, 0xe7d, 0xb289, 0x1, 0x1);
        gbc.writeMem(0x9716, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf994);
        EXPECT(gbc.pc(), 0x9718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9716), 0xcb);
        EXPECT(gbc.readMem(0x9717), 0x64);
        // CB 64 030B
        gbc.setState(0xd2e6, 0xb9d6, 0x6c70, 0x2110, 0xf183, 0x8bf3, 0x0, 0x1);
        gbc.writeMem(0xd2e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb9d6);
        EXPECT(gbc.pc(), 0xd2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e6), 0xcb);
        EXPECT(gbc.readMem(0xd2e7), 0x64);
        // CB 64 030C
        gbc.setState(0x2c3a, 0x3301, 0xd960, 0x4cf7, 0x393b, 0x6812, 0x0, 0x1);
        gbc.writeMem(0x2c3a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3301);
        EXPECT(gbc.pc(), 0x2c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 030D
        gbc.setState(0x36ef, 0xcb0, 0xe010, 0xcd17, 0x6178, 0x2bbc, 0x1, 0x1);
        gbc.writeMem(0x36ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcb0);
        EXPECT(gbc.pc(), 0x36f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 030E
        gbc.setState(0x5e29, 0x6c8e, 0x450, 0xc8c0, 0xc1ad, 0x32d1, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6c8e);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 030F
        gbc.setState(0x80a4, 0x70ac, 0xb950, 0xca20, 0xcc71, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0x80a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x70ac);
        EXPECT(gbc.pc(), 0x80a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a4), 0xcb);
        EXPECT(gbc.readMem(0x80a5), 0x64);
        // CB 64 0310
        gbc.setState(0x4681, 0x91c7, 0x58a0, 0xa947, 0x57cf, 0x898b, 0x1, 0x1);
        gbc.writeMem(0x4681, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x91c7);
        EXPECT(gbc.pc(), 0x4683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0311
        gbc.setState(0xcd5d, 0xba4b, 0x41d0, 0x4643, 0x2290, 0x2c39, 0x1, 0x0);
        gbc.writeMem(0xcd5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0xcd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5d), 0xcb);
        EXPECT(gbc.readMem(0xcd5e), 0x64);
        // CB 64 0312
        gbc.setState(0xb8be, 0x896, 0xa590, 0xc558, 0x71ce, 0xe9db, 0x0, 0x1);
        gbc.writeMem(0xb8be, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x896);
        EXPECT(gbc.pc(), 0xb8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8be), 0xcb);
        EXPECT(gbc.readMem(0xb8bf), 0x64);
        // CB 64 0313
        gbc.setState(0x5e15, 0xd14f, 0xf930, 0xda66, 0xc3f6, 0x16ea, 0x0, 0x0);
        gbc.writeMem(0x5e15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd14f);
        EXPECT(gbc.pc(), 0x5e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0314
        gbc.setState(0xe865, 0x6d1b, 0x53a0, 0xf524, 0x3843, 0xbe7b, 0x1, 0x0);
        gbc.writeMem(0xe865, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d1b);
        EXPECT(gbc.pc(), 0xe867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0xcb);
        EXPECT(gbc.readMem(0xe866), 0x64);
        // CB 64 0315
        gbc.setState(0x4ae9, 0xda0d, 0x46b0, 0x53f5, 0xb38f, 0x606f, 0x1, 0x0);
        gbc.writeMem(0x4ae9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda0d);
        EXPECT(gbc.pc(), 0x4aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0316
        gbc.setState(0x4387, 0xd22a, 0xac00, 0x9ca5, 0x60ff, 0x9626, 0x0, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd22a);
        EXPECT(gbc.pc(), 0x4389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0317
        gbc.setState(0x8b15, 0x3456, 0x9760, 0x3bfa, 0xf7b, 0xdb1, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3456);
        EXPECT(gbc.pc(), 0x8b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b15), 0xcb);
        EXPECT(gbc.readMem(0x8b16), 0x64);
        // CB 64 0318
        gbc.setState(0xa02e, 0x21bc, 0xeea0, 0x4af5, 0x6327, 0x510, 0x0, 0x0);
        gbc.writeMem(0xa02e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x21bc);
        EXPECT(gbc.pc(), 0xa030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02e), 0xcb);
        EXPECT(gbc.readMem(0xa02f), 0x64);
        // CB 64 031A
        gbc.setState(0x7b65, 0xc0b4, 0xe950, 0x86ec, 0xc88c, 0x33b0, 0x0, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc0b4);
        EXPECT(gbc.pc(), 0x7b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 031B
        gbc.setState(0x384f, 0x1b42, 0x3030, 0xe08, 0x1d1d, 0x58fd, 0x1, 0x1);
        gbc.writeMem(0x384f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1b42);
        EXPECT(gbc.pc(), 0x3851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 031C
        gbc.setState(0xdba7, 0xe927, 0x4930, 0x6cf1, 0xb98a, 0x1c7c, 0x0, 0x1);
        gbc.writeMem(0xdba7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe927);
        EXPECT(gbc.pc(), 0xdba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba7), 0xcb);
        EXPECT(gbc.readMem(0xdba8), 0x64);
        // CB 64 031D
        gbc.setState(0x7943, 0x46cf, 0x63f0, 0x37d9, 0xdef8, 0xc39b, 0x0, 0x0);
        gbc.writeMem(0x7943, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0x7945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 031E
        gbc.setState(0x407d, 0xd79f, 0xec80, 0xb894, 0x172b, 0x8c4c, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd79f);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 031F
        gbc.setState(0xbe24, 0xf42b, 0xfb50, 0x5a5c, 0x3c0d, 0xba74, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf42b);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0x64);
        // CB 64 0320
        gbc.setState(0x98d5, 0xde2e, 0x2bd0, 0x4d8d, 0x85f1, 0x1676, 0x0, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xde2e);
        EXPECT(gbc.pc(), 0x98d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d5), 0xcb);
        EXPECT(gbc.readMem(0x98d6), 0x64);
        // CB 64 0321
        gbc.setState(0x5393, 0x5bc, 0xa120, 0xef07, 0x27ad, 0x285e, 0x1, 0x1);
        gbc.writeMem(0x5393, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5bc);
        EXPECT(gbc.pc(), 0x5395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0322
        gbc.setState(0xa85b, 0x11e3, 0x6f70, 0xb521, 0xe427, 0x9ed1, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x11e3);
        EXPECT(gbc.pc(), 0xa85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85b), 0xcb);
        EXPECT(gbc.readMem(0xa85c), 0x64);
        // CB 64 0323
        gbc.setState(0x9f68, 0xc22d, 0x90d0, 0xb3f, 0xe908, 0x259f, 0x1, 0x1);
        gbc.writeMem(0x9f68, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc22d);
        EXPECT(gbc.pc(), 0x9f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f68), 0xcb);
        EXPECT(gbc.readMem(0x9f69), 0x64);
        // CB 64 0324
        gbc.setState(0x7437, 0xbb9a, 0xc7e0, 0xcb72, 0xce6c, 0x7e31, 0x1, 0x1);
        gbc.writeMem(0x7437, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbb9a);
        EXPECT(gbc.pc(), 0x7439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0325
        gbc.setState(0x269b, 0x20e3, 0x32c0, 0xe107, 0x9dd0, 0xf747, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x20e3);
        EXPECT(gbc.pc(), 0x269d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0326
        gbc.setState(0x62e4, 0x7879, 0xe1f0, 0x3d28, 0x2376, 0x4c26, 0x0, 0x0);
        gbc.writeMem(0x62e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7879);
        EXPECT(gbc.pc(), 0x62e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0327
        gbc.setState(0x43f2, 0xe41c, 0x24f0, 0x84cb, 0x51d9, 0xeed0, 0x1, 0x1);
        gbc.writeMem(0x43f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe41c);
        EXPECT(gbc.pc(), 0x43f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0328
        gbc.setState(0xc602, 0x68f6, 0x300, 0x534b, 0x3b09, 0x44, 0x1, 0x1);
        gbc.writeMem(0xc602, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x68f6);
        EXPECT(gbc.pc(), 0xc604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc602), 0xcb);
        EXPECT(gbc.readMem(0xc603), 0x64);
        // CB 64 0329
        gbc.setState(0x232c, 0x56af, 0xad60, 0xa4f6, 0xd730, 0x3df6, 0x1, 0x0);
        gbc.writeMem(0x232c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x56af);
        EXPECT(gbc.pc(), 0x232e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 032A
        gbc.setState(0x43a3, 0x1804, 0xf560, 0xf9a7, 0xa2ce, 0x703, 0x1, 0x0);
        gbc.writeMem(0x43a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1804);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 032B
        gbc.setState(0xb783, 0xb75a, 0xd5f0, 0xf035, 0xe848, 0xded4, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb75a);
        EXPECT(gbc.pc(), 0xb785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb783), 0xcb);
        EXPECT(gbc.readMem(0xb784), 0x64);
        // CB 64 032C
        gbc.setState(0x7841, 0x7d29, 0xd790, 0x31d3, 0x713f, 0xabe1, 0x0, 0x0);
        gbc.writeMem(0x7841, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7d29);
        EXPECT(gbc.pc(), 0x7843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 032D
        gbc.setState(0x13ec, 0x48c1, 0xaf20, 0xf9bb, 0x8bf5, 0xbd12, 0x1, 0x0);
        gbc.writeMem(0x13ec, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x48c1);
        EXPECT(gbc.pc(), 0x13ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 032E
        gbc.setState(0xa243, 0x650d, 0x59d0, 0xda24, 0x848b, 0x4c52, 0x0, 0x0);
        gbc.writeMem(0xa243, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0xa245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa243), 0xcb);
        EXPECT(gbc.readMem(0xa244), 0x64);
        // CB 64 032F
        gbc.setState(0xcc58, 0x8f7b, 0x70e0, 0xfd55, 0x4e7, 0x6b7b, 0x0, 0x0);
        gbc.writeMem(0xcc58, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8f7b);
        EXPECT(gbc.pc(), 0xcc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc58), 0xcb);
        EXPECT(gbc.readMem(0xcc59), 0x64);
        // CB 64 0330
        gbc.setState(0x41ff, 0x955a, 0x4900, 0x2ac9, 0x63c3, 0xe8e3, 0x0, 0x1);
        gbc.writeMem(0x41ff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x955a);
        EXPECT(gbc.pc(), 0x4201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0331
        gbc.setState(0x63f2, 0x52bc, 0x260, 0xd7bf, 0x354, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x63f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x52bc);
        EXPECT(gbc.pc(), 0x63f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0332
        gbc.setState(0x9ce7, 0xa9c6, 0x8630, 0xfb0e, 0x2e54, 0x7767, 0x0, 0x1);
        gbc.writeMem(0x9ce7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa9c6);
        EXPECT(gbc.pc(), 0x9ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce7), 0xcb);
        EXPECT(gbc.readMem(0x9ce8), 0x64);
        // CB 64 0333
        gbc.setState(0xe189, 0xe5ad, 0x2370, 0x754f, 0xf3c6, 0x5983, 0x1, 0x0);
        gbc.writeMem(0xe189, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe5ad);
        EXPECT(gbc.pc(), 0xe18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe189), 0xcb);
        EXPECT(gbc.readMem(0xe18a), 0x64);
        // CB 64 0335
        gbc.setState(0xbdf, 0xeb40, 0x23e0, 0x23b5, 0xb48d, 0x55e, 0x1, 0x0);
        gbc.writeMem(0xbdf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xeb40);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0336
        gbc.setState(0xdeac, 0xc15f, 0xc360, 0x891, 0x7139, 0x2b7e, 0x0, 0x1);
        gbc.writeMem(0xdeac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc15f);
        EXPECT(gbc.pc(), 0xdeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeac), 0xcb);
        EXPECT(gbc.readMem(0xdead), 0x64);
        // CB 64 0337
        gbc.setState(0x27b6, 0x6ac1, 0xa6f0, 0xf92e, 0xf84b, 0x5d6a, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6ac1);
        EXPECT(gbc.pc(), 0x27b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0338
        gbc.setState(0xdfe7, 0x4398, 0xbe70, 0x40a5, 0x49a2, 0xe7b8, 0x0, 0x1);
        gbc.writeMem(0xdfe7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4398);
        EXPECT(gbc.pc(), 0xdfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe7), 0xcb);
        EXPECT(gbc.readMem(0xdfe8), 0x64);
        // CB 64 033A
        gbc.setState(0xc1bf, 0x8af, 0x56d0, 0x7bf5, 0xebbb, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xc1bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8af);
        EXPECT(gbc.pc(), 0xc1c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bf), 0xcb);
        EXPECT(gbc.readMem(0xc1c0), 0x64);
        // CB 64 033B
        gbc.setState(0x3c1b, 0x1aa7, 0xae30, 0xdbc0, 0x3eef, 0xd4bd, 0x0, 0x0);
        gbc.writeMem(0x3c1b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1aa7);
        EXPECT(gbc.pc(), 0x3c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 033C
        gbc.setState(0xd13, 0xf6e3, 0x8600, 0x7e0c, 0xe226, 0x6fad, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf6e3);
        EXPECT(gbc.pc(), 0xd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 033D
        gbc.setState(0x31d0, 0xe15c, 0xca30, 0x607b, 0x2d00, 0x578e, 0x1, 0x0);
        gbc.writeMem(0x31d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe15c);
        EXPECT(gbc.pc(), 0x31d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 033E
        gbc.setState(0x7c96, 0xcff0, 0xc020, 0xfdf, 0xf9e8, 0xe49e, 0x0, 0x0);
        gbc.writeMem(0x7c96, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcff0);
        EXPECT(gbc.pc(), 0x7c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 033F
        gbc.setState(0x9632, 0x8787, 0xae70, 0xcd47, 0x6c8, 0xba02, 0x1, 0x1);
        gbc.writeMem(0x9632, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x9634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9632), 0xcb);
        EXPECT(gbc.readMem(0x9633), 0x64);
        // CB 64 0340
        gbc.setState(0x7dc2, 0x9f78, 0x990, 0x7489, 0x9df9, 0xd8d6, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9f78);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0341
        gbc.setState(0x1f02, 0x48f6, 0xdda0, 0x218c, 0x67ba, 0x13c4, 0x0, 0x1);
        gbc.writeMem(0x1f02, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x48f6);
        EXPECT(gbc.pc(), 0x1f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0342
        gbc.setState(0x3d63, 0x53db, 0x3290, 0x62ab, 0x2fe3, 0x826, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x53db);
        EXPECT(gbc.pc(), 0x3d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0343
        gbc.setState(0x83cc, 0x1bd1, 0xe9a0, 0xa788, 0x54f6, 0x32b5, 0x1, 0x1);
        gbc.writeMem(0x83cc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1bd1);
        EXPECT(gbc.pc(), 0x83ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cc), 0xcb);
        EXPECT(gbc.readMem(0x83cd), 0x64);
        // CB 64 0344
        gbc.setState(0x5a0f, 0x7a3c, 0xf030, 0x6106, 0xe712, 0xaab7, 0x0, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7a3c);
        EXPECT(gbc.pc(), 0x5a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0345
        gbc.setState(0x18dc, 0x3ca0, 0x85d0, 0x496, 0x4f13, 0x222a, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3ca0);
        EXPECT(gbc.pc(), 0x18de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0346
        gbc.setState(0xd099, 0x9022, 0xf1c0, 0x6945, 0xf25c, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0xd099, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9022);
        EXPECT(gbc.pc(), 0xd09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd099), 0xcb);
        EXPECT(gbc.readMem(0xd09a), 0x64);
        // CB 64 0347
        gbc.setState(0x44fd, 0xb6f0, 0xe7b0, 0xaff1, 0xda27, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0x44fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb6f0);
        EXPECT(gbc.pc(), 0x44ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0348
        gbc.setState(0xd33f, 0xb56b, 0x9200, 0x1a75, 0x17b1, 0x5415, 0x0, 0x0);
        gbc.writeMem(0xd33f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb56b);
        EXPECT(gbc.pc(), 0xd341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33f), 0xcb);
        EXPECT(gbc.readMem(0xd340), 0x64);
        // CB 64 0349
        gbc.setState(0xb699, 0x84df, 0x7710, 0x909d, 0x1352, 0xce16, 0x1, 0x0);
        gbc.writeMem(0xb699, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x84df);
        EXPECT(gbc.pc(), 0xb69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb699), 0xcb);
        EXPECT(gbc.readMem(0xb69a), 0x64);
        // CB 64 034A
        gbc.setState(0xa5a9, 0x6f96, 0x1b20, 0x4c63, 0x340f, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0xa5a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6f96);
        EXPECT(gbc.pc(), 0xa5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a9), 0xcb);
        EXPECT(gbc.readMem(0xa5aa), 0x64);
        // CB 64 034B
        gbc.setState(0xb0b, 0x94df, 0x1660, 0x293b, 0x7f62, 0x4279, 0x1, 0x1);
        gbc.writeMem(0xb0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x94df);
        EXPECT(gbc.pc(), 0xb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 034C
        gbc.setState(0x4005, 0x4334, 0xfe0, 0xa3d0, 0x5815, 0x26e3, 0x1, 0x0);
        gbc.writeMem(0x4005, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4334);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 034D
        gbc.setState(0xa60, 0x5931, 0x790, 0x75f5, 0xe93f, 0x5827, 0x1, 0x1);
        gbc.writeMem(0xa60, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5931);
        EXPECT(gbc.pc(), 0xa62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 034E
        gbc.setState(0xe211, 0x4b3, 0xd600, 0x11d9, 0x6847, 0x9180, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4b3);
        EXPECT(gbc.pc(), 0xe213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe211), 0xcb);
        EXPECT(gbc.readMem(0xe212), 0x64);
        // CB 64 034F
        gbc.setState(0x2367, 0xacac, 0x4d90, 0xdf93, 0x1b6b, 0x712b, 0x1, 0x0);
        gbc.writeMem(0x2367, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xacac);
        EXPECT(gbc.pc(), 0x2369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0350
        gbc.setState(0xce3c, 0x13cc, 0x2db0, 0x32c9, 0x877, 0xce6a, 0x1, 0x0);
        gbc.writeMem(0xce3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x13cc);
        EXPECT(gbc.pc(), 0xce3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3c), 0xcb);
        EXPECT(gbc.readMem(0xce3d), 0x64);
        // CB 64 0351
        gbc.setState(0x6008, 0x7d1a, 0x87c0, 0xb57e, 0x2545, 0xe30e, 0x1, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7d1a);
        EXPECT(gbc.pc(), 0x600a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0352
        gbc.setState(0x9887, 0xec16, 0xe0e0, 0x91af, 0x2093, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0x9889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9887), 0xcb);
        EXPECT(gbc.readMem(0x9888), 0x64);
        // CB 64 0353
        gbc.setState(0x7dd6, 0xc78d, 0x480, 0x82e, 0x6f0a, 0x538a, 0x1, 0x0);
        gbc.writeMem(0x7dd6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc78d);
        EXPECT(gbc.pc(), 0x7dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0354
        gbc.setState(0xe7d4, 0x27ab, 0xa3e0, 0xa7d8, 0x6a78, 0x9c37, 0x1, 0x0);
        gbc.writeMem(0xe7d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x27ab);
        EXPECT(gbc.pc(), 0xe7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d4), 0xcb);
        EXPECT(gbc.readMem(0xe7d5), 0x64);
        // CB 64 0355
        gbc.setState(0x4946, 0x60b7, 0x3b10, 0x8fd1, 0x16ef, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x60b7);
        EXPECT(gbc.pc(), 0x4948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0356
        gbc.setState(0x84ff, 0x4e38, 0x4310, 0x7d12, 0x180f, 0xbe34, 0x0, 0x1);
        gbc.writeMem(0x84ff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4e38);
        EXPECT(gbc.pc(), 0x8501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ff), 0xcb);
        EXPECT(gbc.readMem(0x8500), 0x64);
        // CB 64 0357
        gbc.setState(0x2124, 0xc195, 0x8a50, 0x2f2a, 0xc65f, 0x73f0, 0x1, 0x1);
        gbc.writeMem(0x2124, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0x2126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0358
        gbc.setState(0x68cd, 0xa27e, 0xe720, 0xbaea, 0xdfd2, 0x76c, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa27e);
        EXPECT(gbc.pc(), 0x68cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0359
        gbc.setState(0x984c, 0x116d, 0x3440, 0xba85, 0x1370, 0xcc2a, 0x1, 0x1);
        gbc.writeMem(0x984c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x116d);
        EXPECT(gbc.pc(), 0x984e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984c), 0xcb);
        EXPECT(gbc.readMem(0x984d), 0x64);
        // CB 64 035A
        gbc.setState(0x8b61, 0x6e0e, 0xcef0, 0x631c, 0xfa1e, 0x3bea, 0x0, 0x1);
        gbc.writeMem(0x8b61, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6e0e);
        EXPECT(gbc.pc(), 0x8b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b61), 0xcb);
        EXPECT(gbc.readMem(0x8b62), 0x64);
        // CB 64 035B
        gbc.setState(0x1e9, 0xd4cb, 0x2ae0, 0x2661, 0xda23, 0x6bae, 0x0, 0x0);
        gbc.writeMem(0x1e9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0x1eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 035C
        gbc.setState(0x2bda, 0x498b, 0x920, 0x8afa, 0x2fce, 0x7d01, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x498b);
        EXPECT(gbc.pc(), 0x2bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 035D
        gbc.setState(0x5017, 0xa90a, 0xb710, 0x2c79, 0x661c, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x5017, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa90a);
        EXPECT(gbc.pc(), 0x5019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 035E
        gbc.setState(0xc58e, 0x552b, 0x9400, 0xc974, 0xfe85, 0x6ef, 0x1, 0x1);
        gbc.writeMem(0xc58e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x552b);
        EXPECT(gbc.pc(), 0xc590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58e), 0xcb);
        EXPECT(gbc.readMem(0xc58f), 0x64);
        // CB 64 0360
        gbc.setState(0x7ff0, 0x297b, 0xe290, 0xb893, 0x6abf, 0xe03d, 0x1, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0361
        gbc.setState(0x7a63, 0x20ed, 0x5f50, 0x684, 0x43f0, 0xfdd4, 0x0, 0x1);
        gbc.writeMem(0x7a63, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x20ed);
        EXPECT(gbc.pc(), 0x7a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0362
        gbc.setState(0x7362, 0xa040, 0x1ee0, 0xb1d6, 0x3d47, 0x915, 0x1, 0x1);
        gbc.writeMem(0x7362, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa040);
        EXPECT(gbc.pc(), 0x7364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0364
        gbc.setState(0x7217, 0x9f90, 0xb160, 0x666c, 0x32d9, 0x3b7c, 0x1, 0x0);
        gbc.writeMem(0x7217, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9f90);
        EXPECT(gbc.pc(), 0x7219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0365
        gbc.setState(0xde7d, 0x1d32, 0x52a0, 0x2e79, 0xbd01, 0x43a, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1d32);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7d), 0xcb);
        EXPECT(gbc.readMem(0xde7e), 0x64);
        // CB 64 0366
        gbc.setState(0x3f2d, 0x292b, 0x8d10, 0xb25c, 0xbd46, 0xb500, 0x1, 0x0);
        gbc.writeMem(0x3f2d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x292b);
        EXPECT(gbc.pc(), 0x3f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0368
        gbc.setState(0xcc16, 0x2a70, 0x2e10, 0x9df6, 0x5eb3, 0xaa7f, 0x1, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2a70);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc16), 0xcb);
        EXPECT(gbc.readMem(0xcc17), 0x64);
        // CB 64 0369
        gbc.setState(0x883e, 0xdcee, 0x5bc0, 0xf59d, 0x3f44, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0x883e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdcee);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0x64);
        // CB 64 036A
        gbc.setState(0x7905, 0xe81a, 0xabf0, 0x8d4, 0x63b2, 0xd528, 0x0, 0x0);
        gbc.writeMem(0x7905, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe81a);
        EXPECT(gbc.pc(), 0x7907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 036B
        gbc.setState(0xb909, 0xd094, 0x8cc0, 0x6f37, 0xb967, 0xd273, 0x0, 0x1);
        gbc.writeMem(0xb909, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd094);
        EXPECT(gbc.pc(), 0xb90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb909), 0xcb);
        EXPECT(gbc.readMem(0xb90a), 0x64);
        // CB 64 036C
        gbc.setState(0x4a0a, 0x378c, 0xc510, 0xccba, 0xfbdf, 0xf781, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0x4a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 036D
        gbc.setState(0xc2de, 0xda4c, 0xa310, 0xb48f, 0xa421, 0xf995, 0x1, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xda4c);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x64);
        // CB 64 036E
        gbc.setState(0x9286, 0xb969, 0xb660, 0x8fbd, 0xf978, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0x9286, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb969);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9286), 0xcb);
        EXPECT(gbc.readMem(0x9287), 0x64);
        // CB 64 036F
        gbc.setState(0x4a7f, 0xd425, 0x3180, 0x2b63, 0x3d4d, 0xb7cd, 0x0, 0x0);
        gbc.writeMem(0x4a7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd425);
        EXPECT(gbc.pc(), 0x4a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0370
        gbc.setState(0x83f7, 0xbc24, 0xfa80, 0xd7d9, 0x64db, 0xaa15, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbc24);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f7), 0xcb);
        EXPECT(gbc.readMem(0x83f8), 0x64);
        // CB 64 0371
        gbc.setState(0x2824, 0x7eaa, 0xfab0, 0xd39, 0x946c, 0x5b6e, 0x1, 0x0);
        gbc.writeMem(0x2824, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7eaa);
        EXPECT(gbc.pc(), 0x2826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0372
        gbc.setState(0x882b, 0x30ae, 0xd3a0, 0x915c, 0x6cec, 0x1a6d, 0x0, 0x1);
        gbc.writeMem(0x882b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0x882d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882b), 0xcb);
        EXPECT(gbc.readMem(0x882c), 0x64);
        // CB 64 0373
        gbc.setState(0x4951, 0x7438, 0x9c20, 0x6fd5, 0xc62c, 0xd3db, 0x1, 0x0);
        gbc.writeMem(0x4951, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7438);
        EXPECT(gbc.pc(), 0x4953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0374
        gbc.setState(0x3128, 0xff1b, 0x2ba0, 0x13d6, 0x6efc, 0xa68f, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xff1b);
        EXPECT(gbc.pc(), 0x312a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0375
        gbc.setState(0x74bd, 0x11b5, 0x24a0, 0x6453, 0xc8b8, 0x71e4, 0x1, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x11b5);
        EXPECT(gbc.pc(), 0x74bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0376
        gbc.setState(0x9d3c, 0xb1fa, 0x7af0, 0x712e, 0xc056, 0x72f1, 0x1, 0x0);
        gbc.writeMem(0x9d3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb1fa);
        EXPECT(gbc.pc(), 0x9d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3c), 0xcb);
        EXPECT(gbc.readMem(0x9d3d), 0x64);
        // CB 64 0377
        gbc.setState(0x7ba6, 0x7e39, 0x26d0, 0xfd8a, 0x6b9f, 0x6256, 0x0, 0x1);
        gbc.writeMem(0x7ba6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7e39);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0378
        gbc.setState(0x4c4f, 0x80ef, 0x5770, 0xe114, 0x6bc0, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0x4c4f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x80ef);
        EXPECT(gbc.pc(), 0x4c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0379
        gbc.setState(0xe71e, 0x216d, 0x48d0, 0xf706, 0xb13a, 0x46ac, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x216d);
        EXPECT(gbc.pc(), 0xe720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71e), 0xcb);
        EXPECT(gbc.readMem(0xe71f), 0x64);
        // CB 64 037A
        gbc.setState(0x851c, 0x801e, 0x54e0, 0x9ca8, 0x9e2d, 0x5df3, 0x1, 0x1);
        gbc.writeMem(0x851c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x801e);
        EXPECT(gbc.pc(), 0x851e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851c), 0xcb);
        EXPECT(gbc.readMem(0x851d), 0x64);
        // CB 64 037B
        gbc.setState(0xf62, 0x356d, 0x7ae0, 0xcd16, 0xbbda, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0xf62, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x356d);
        EXPECT(gbc.pc(), 0xf64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 037C
        gbc.setState(0x4e88, 0x4f8f, 0xebe0, 0x7ca5, 0xda27, 0x119f, 0x0, 0x1);
        gbc.writeMem(0x4e88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4f8f);
        EXPECT(gbc.pc(), 0x4e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 037D
        gbc.setState(0x8c13, 0x8722, 0xd590, 0x4bd9, 0x6943, 0xdf6a, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8722);
        EXPECT(gbc.pc(), 0x8c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c13), 0xcb);
        EXPECT(gbc.readMem(0x8c14), 0x64);
        // CB 64 037E
        gbc.setState(0x10c7, 0x6d6f, 0x5df0, 0x3eb7, 0x3de6, 0xe32b, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6d6f);
        EXPECT(gbc.pc(), 0x10c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 037F
        gbc.setState(0x7865, 0xce21, 0x5ed0, 0xc61, 0x884b, 0x3d68, 0x1, 0x1);
        gbc.writeMem(0x7865, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xce21);
        EXPECT(gbc.pc(), 0x7867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0380
        gbc.setState(0x6675, 0x9a35, 0xa7a0, 0x43b7, 0x5349, 0x568f, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9a35);
        EXPECT(gbc.pc(), 0x6677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0381
        gbc.setState(0x402, 0x8fd0, 0xb8d0, 0xbc10, 0xbe12, 0xf688, 0x0, 0x1);
        gbc.writeMem(0x402, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8fd0);
        EXPECT(gbc.pc(), 0x404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0382
        gbc.setState(0xe63a, 0x6ebc, 0x6870, 0x522e, 0x9b89, 0x7e6d, 0x1, 0x1);
        gbc.writeMem(0xe63a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6ebc);
        EXPECT(gbc.pc(), 0xe63c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63a), 0xcb);
        EXPECT(gbc.readMem(0xe63b), 0x64);
        // CB 64 0383
        gbc.setState(0x47a2, 0x6c4a, 0x2090, 0xebf7, 0xb64b, 0x31f, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6c4a);
        EXPECT(gbc.pc(), 0x47a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0384
        gbc.setState(0x420f, 0x1125, 0x99b0, 0xbaff, 0x694e, 0x15bb, 0x0, 0x1);
        gbc.writeMem(0x420f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1125);
        EXPECT(gbc.pc(), 0x4211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0385
        gbc.setState(0x486b, 0x6efc, 0x7280, 0x2136, 0x9da0, 0xe2fc, 0x0, 0x1);
        gbc.writeMem(0x486b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6efc);
        EXPECT(gbc.pc(), 0x486d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0386
        gbc.setState(0xcf1c, 0x5e11, 0x8c70, 0xa58f, 0xc7d4, 0x8244, 0x1, 0x1);
        gbc.writeMem(0xcf1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5e11);
        EXPECT(gbc.pc(), 0xcf1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1c), 0xcb);
        EXPECT(gbc.readMem(0xcf1d), 0x64);
        // CB 64 0387
        gbc.setState(0x9919, 0x4998, 0x47f0, 0x595b, 0x8488, 0x964e, 0x0, 0x1);
        gbc.writeMem(0x9919, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4998);
        EXPECT(gbc.pc(), 0x991b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9919), 0xcb);
        EXPECT(gbc.readMem(0x991a), 0x64);
        // CB 64 0388
        gbc.setState(0xb28d, 0x3dcb, 0x3a30, 0xba36, 0x5376, 0xc050, 0x1, 0x0);
        gbc.writeMem(0xb28d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3dcb);
        EXPECT(gbc.pc(), 0xb28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb28d), 0xcb);
        EXPECT(gbc.readMem(0xb28e), 0x64);
        // CB 64 0389
        gbc.setState(0x47e6, 0xf284, 0x990, 0xfa64, 0xe4e6, 0xc2cd, 0x0, 0x1);
        gbc.writeMem(0x47e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf284);
        EXPECT(gbc.pc(), 0x47e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 038A
        gbc.setState(0xc92, 0xd89d, 0x3950, 0xda9d, 0x4085, 0xaebf, 0x1, 0x1);
        gbc.writeMem(0xc92, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd89d);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 038B
        gbc.setState(0xd467, 0x8157, 0x2c0, 0x9012, 0x5328, 0xe965, 0x0, 0x0);
        gbc.writeMem(0xd467, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8157);
        EXPECT(gbc.pc(), 0xd469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd467), 0xcb);
        EXPECT(gbc.readMem(0xd468), 0x64);
        // CB 64 038C
        gbc.setState(0xbf55, 0xdd47, 0xc7d0, 0x26a1, 0xab3a, 0xee1d, 0x0, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdd47);
        EXPECT(gbc.pc(), 0xbf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf55), 0xcb);
        EXPECT(gbc.readMem(0xbf56), 0x64);
        // CB 64 038E
        gbc.setState(0x9c6c, 0x64a4, 0x3c0, 0x249d, 0x9c41, 0x3322, 0x1, 0x1);
        gbc.writeMem(0x9c6c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x64a4);
        EXPECT(gbc.pc(), 0x9c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6c), 0xcb);
        EXPECT(gbc.readMem(0x9c6d), 0x64);
        // CB 64 038F
        gbc.setState(0xa95f, 0x1118, 0x97e0, 0x9a6a, 0xc0e, 0x326a, 0x1, 0x1);
        gbc.writeMem(0xa95f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1118);
        EXPECT(gbc.pc(), 0xa961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95f), 0xcb);
        EXPECT(gbc.readMem(0xa960), 0x64);
        // CB 64 0390
        gbc.setState(0x76f4, 0xb7aa, 0x9f20, 0x27dd, 0x7bbd, 0x4534, 0x1, 0x0);
        gbc.writeMem(0x76f4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb7aa);
        EXPECT(gbc.pc(), 0x76f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0391
        gbc.setState(0xa04d, 0x787d, 0xce50, 0x2f2c, 0x2799, 0xe788, 0x1, 0x1);
        gbc.writeMem(0xa04d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x787d);
        EXPECT(gbc.pc(), 0xa04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04d), 0xcb);
        EXPECT(gbc.readMem(0xa04e), 0x64);
        // CB 64 0392
        gbc.setState(0xd24a, 0x353, 0x3050, 0x7675, 0x260, 0xbc77, 0x1, 0x1);
        gbc.writeMem(0xd24a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x353);
        EXPECT(gbc.pc(), 0xd24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24a), 0xcb);
        EXPECT(gbc.readMem(0xd24b), 0x64);
        // CB 64 0393
        gbc.setState(0x26d, 0x7b27, 0x2140, 0xdd58, 0xcde7, 0x1e40, 0x1, 0x0);
        gbc.writeMem(0x26d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7b27);
        EXPECT(gbc.pc(), 0x26f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0394
        gbc.setState(0x2a2f, 0x27f7, 0x5a0, 0xd8b9, 0x7f43, 0x9d45, 0x0, 0x1);
        gbc.writeMem(0x2a2f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x27f7);
        EXPECT(gbc.pc(), 0x2a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0395
        gbc.setState(0x3498, 0x3232, 0xb990, 0x7c97, 0xf566, 0x7aab, 0x0, 0x0);
        gbc.writeMem(0x3498, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3232);
        EXPECT(gbc.pc(), 0x349a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0396
        gbc.setState(0x49cd, 0x4294, 0x9360, 0x1607, 0xd88a, 0x2864, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4294);
        EXPECT(gbc.pc(), 0x49cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0397
        gbc.setState(0x542f, 0x32aa, 0xf340, 0x535c, 0x9fec, 0x547b, 0x0, 0x0);
        gbc.writeMem(0x542f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x32aa);
        EXPECT(gbc.pc(), 0x5431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 0398
        gbc.setState(0x6569, 0xe3a2, 0xfe30, 0xebea, 0x6acf, 0x358d, 0x1, 0x0);
        gbc.writeMem(0x6569, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe3a2);
        EXPECT(gbc.pc(), 0x656b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 0399
        gbc.setState(0x23ea, 0xe0c0, 0xd060, 0xcf45, 0xe85b, 0x87fb, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe0c0);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 039A
        gbc.setState(0x3763, 0xfb0d, 0x7100, 0xade7, 0xd4e9, 0x25ac, 0x0, 0x0);
        gbc.writeMem(0x3763, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0x3765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 039C
        gbc.setState(0xdbc0, 0x60d9, 0xb9b0, 0x93ef, 0xd16d, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0xdbc0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x60d9);
        EXPECT(gbc.pc(), 0xdbc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc0), 0xcb);
        EXPECT(gbc.readMem(0xdbc1), 0x64);
        // CB 64 039D
        gbc.setState(0x450e, 0x67be, 0x90e0, 0xf57d, 0xa457, 0xfac0, 0x1, 0x0);
        gbc.writeMem(0x450e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x67be);
        EXPECT(gbc.pc(), 0x4510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 039E
        gbc.setState(0x8f38, 0x9a70, 0xd620, 0x997c, 0x3e7e, 0x1d96, 0x1, 0x1);
        gbc.writeMem(0x8f38, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9a70);
        EXPECT(gbc.pc(), 0x8f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f38), 0xcb);
        EXPECT(gbc.readMem(0x8f39), 0x64);
        // CB 64 039F
        gbc.setState(0x90d, 0xcb5c, 0xf430, 0xe3a, 0x3e10, 0xe010, 0x0, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcb5c);
        EXPECT(gbc.pc(), 0x90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03A0
        gbc.setState(0x5764, 0x33a0, 0x9230, 0x9745, 0x2fd8, 0xd4a3, 0x1, 0x0);
        gbc.writeMem(0x5764, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x33a0);
        EXPECT(gbc.pc(), 0x5766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03A1
        gbc.setState(0x9b40, 0x5483, 0xc540, 0xc43d, 0x3944, 0xe964, 0x0, 0x0);
        gbc.writeMem(0x9b40, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5483);
        EXPECT(gbc.pc(), 0x9b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b40), 0xcb);
        EXPECT(gbc.readMem(0x9b41), 0x64);
        // CB 64 03A2
        gbc.setState(0x615c, 0x94a8, 0xb100, 0x8fe1, 0x20c5, 0x9737, 0x0, 0x0);
        gbc.writeMem(0x615c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x94a8);
        EXPECT(gbc.pc(), 0x615e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03A3
        gbc.setState(0xc44f, 0xb, 0x8b40, 0x1a7a, 0x7a7b, 0x63b0, 0x1, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb);
        EXPECT(gbc.pc(), 0xc451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44f), 0xcb);
        EXPECT(gbc.readMem(0xc450), 0x64);
        // CB 64 03A4
        gbc.setState(0x6797, 0x1b2a, 0x4de0, 0x3406, 0x738, 0xc17d, 0x0, 0x1);
        gbc.writeMem(0x6797, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b2a);
        EXPECT(gbc.pc(), 0x6799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03A5
        gbc.setState(0x7ebb, 0x42bf, 0x20e0, 0xf27f, 0x4191, 0x16bf, 0x0, 0x1);
        gbc.writeMem(0x7ebb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x42bf);
        EXPECT(gbc.pc(), 0x7ebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03A6
        gbc.setState(0xcce9, 0xb92c, 0x24e0, 0x6dc9, 0x17d8, 0x4bab, 0x1, 0x1);
        gbc.writeMem(0xcce9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb92c);
        EXPECT(gbc.pc(), 0xcceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce9), 0xcb);
        EXPECT(gbc.readMem(0xccea), 0x64);
        // CB 64 03A7
        gbc.setState(0x8025, 0xe0e3, 0x920, 0xb7da, 0xdb23, 0x77b3, 0x1, 0x0);
        gbc.writeMem(0x8025, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe0e3);
        EXPECT(gbc.pc(), 0x8027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8025), 0xcb);
        EXPECT(gbc.readMem(0x8026), 0x64);
        // CB 64 03A8
        gbc.setState(0x83ad, 0xb81f, 0x50e0, 0x983c, 0x5ce8, 0xb749, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb81f);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ad), 0xcb);
        EXPECT(gbc.readMem(0x83ae), 0x64);
        // CB 64 03A9
        gbc.setState(0xbd00, 0xa029, 0x91d0, 0x4d9e, 0x7417, 0xe202, 0x1, 0x0);
        gbc.writeMem(0xbd00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa029);
        EXPECT(gbc.pc(), 0xbd02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd00), 0xcb);
        EXPECT(gbc.readMem(0xbd01), 0x64);
        // CB 64 03AA
        gbc.setState(0xd178, 0x2d6c, 0x3290, 0xfdf7, 0x3589, 0x920, 0x1, 0x0);
        gbc.writeMem(0xd178, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2d6c);
        EXPECT(gbc.pc(), 0xd17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd178), 0xcb);
        EXPECT(gbc.readMem(0xd179), 0x64);
        // CB 64 03AB
        gbc.setState(0x1559, 0x8ac4, 0x4430, 0xb61c, 0x44c2, 0xb042, 0x1, 0x0);
        gbc.writeMem(0x1559, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8ac4);
        EXPECT(gbc.pc(), 0x155b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03AC
        gbc.setState(0x62e0, 0xd4ba, 0x470, 0x503a, 0xbeb1, 0xa6d8, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd4ba);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03AD
        gbc.setState(0x76d5, 0x2c70, 0x6a10, 0x7890, 0x1c2d, 0x4353, 0x1, 0x1);
        gbc.writeMem(0x76d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2c70);
        EXPECT(gbc.pc(), 0x76d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03AE
        gbc.setState(0x3533, 0xec0a, 0xc2d0, 0xd83f, 0x54e3, 0x675e, 0x1, 0x1);
        gbc.writeMem(0x3533, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xec0a);
        EXPECT(gbc.pc(), 0x3535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03AF
        gbc.setState(0x107e, 0xaa83, 0x22b0, 0xd507, 0x1d51, 0x3889, 0x1, 0x0);
        gbc.writeMem(0x107e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xaa83);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03B0
        gbc.setState(0x615, 0x8b87, 0xdf70, 0x1418, 0x67b7, 0xfe93, 0x1, 0x0);
        gbc.writeMem(0x615, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8b87);
        EXPECT(gbc.pc(), 0x617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03B1
        gbc.setState(0xffe, 0x2272, 0x5dc0, 0x85ba, 0x116e, 0x42d3, 0x0, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2272);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03B2
        gbc.setState(0x57e4, 0x4d33, 0xcb90, 0x3c54, 0xcd74, 0xd4f3, 0x0, 0x0);
        gbc.writeMem(0x57e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4d33);
        EXPECT(gbc.pc(), 0x57e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03B3
        gbc.setState(0xbd55, 0xabae, 0xdd10, 0x6919, 0xfa98, 0xc239, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xabae);
        EXPECT(gbc.pc(), 0xbd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd55), 0xcb);
        EXPECT(gbc.readMem(0xbd56), 0x64);
        // CB 64 03B4
        gbc.setState(0xb853, 0x702a, 0xd100, 0xe7d8, 0x1e84, 0xac40, 0x0, 0x0);
        gbc.writeMem(0xb853, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0xb855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb853), 0xcb);
        EXPECT(gbc.readMem(0xb854), 0x64);
        // CB 64 03B5
        gbc.setState(0x7e4f, 0x2b08, 0xfe50, 0x671e, 0xe0cc, 0xb172, 0x0, 0x0);
        gbc.writeMem(0x7e4f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2b08);
        EXPECT(gbc.pc(), 0x7e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03B6
        gbc.setState(0x5be8, 0xfeab, 0xb5b0, 0x4774, 0x27a6, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0x5be8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0x5bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03B7
        gbc.setState(0xad26, 0x5e5f, 0x9b30, 0xa2d4, 0x1303, 0x2d58, 0x1, 0x1);
        gbc.writeMem(0xad26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5e5f);
        EXPECT(gbc.pc(), 0xad28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad26), 0xcb);
        EXPECT(gbc.readMem(0xad27), 0x64);
        // CB 64 03B8
        gbc.setState(0x454d, 0x50ee, 0xaa20, 0x6a99, 0x5571, 0x535e, 0x1, 0x1);
        gbc.writeMem(0x454d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x50ee);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03B9
        gbc.setState(0x4e82, 0x101b, 0xf9f0, 0xb830, 0xa850, 0xbb3c, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03BA
        gbc.setState(0x9830, 0x4bfb, 0xc840, 0x6203, 0xca6c, 0x6ae, 0x0, 0x1);
        gbc.writeMem(0x9830, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4bfb);
        EXPECT(gbc.pc(), 0x9832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9830), 0xcb);
        EXPECT(gbc.readMem(0x9831), 0x64);
        // CB 64 03BB
        gbc.setState(0x500b, 0xea70, 0x72f0, 0x8655, 0x3d39, 0x9611, 0x1, 0x1);
        gbc.writeMem(0x500b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xea70);
        EXPECT(gbc.pc(), 0x500d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03BC
        gbc.setState(0xaddf, 0x28c5, 0x97e0, 0x927, 0x3ce, 0x8103, 0x1, 0x1);
        gbc.writeMem(0xaddf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x28c5);
        EXPECT(gbc.pc(), 0xade1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddf), 0xcb);
        EXPECT(gbc.readMem(0xade0), 0x64);
        // CB 64 03BD
        gbc.setState(0x2ca7, 0xc211, 0xd330, 0x50f8, 0xb85a, 0x7335, 0x0, 0x1);
        gbc.writeMem(0x2ca7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc211);
        EXPECT(gbc.pc(), 0x2ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03BE
        gbc.setState(0x6a2c, 0xdbf0, 0xc990, 0x7162, 0xa3bd, 0x894c, 0x0, 0x1);
        gbc.writeMem(0x6a2c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdbf0);
        EXPECT(gbc.pc(), 0x6a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03BF
        gbc.setState(0xb24c, 0xe3b1, 0xc790, 0x6543, 0x1aa4, 0x6670, 0x1, 0x1);
        gbc.writeMem(0xb24c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe3b1);
        EXPECT(gbc.pc(), 0xb24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24c), 0xcb);
        EXPECT(gbc.readMem(0xb24d), 0x64);
        // CB 64 03C0
        gbc.setState(0x1024, 0xfa98, 0x3920, 0x1802, 0xabb5, 0xf05f, 0x1, 0x1);
        gbc.writeMem(0x1024, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfa98);
        EXPECT(gbc.pc(), 0x1026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03C1
        gbc.setState(0x95fd, 0x2099, 0x8250, 0xf737, 0xbd85, 0x9164, 0x1, 0x0);
        gbc.writeMem(0x95fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2099);
        EXPECT(gbc.pc(), 0x95ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fd), 0xcb);
        EXPECT(gbc.readMem(0x95fe), 0x64);
        // CB 64 03C2
        gbc.setState(0x2307, 0x96fc, 0xf7e0, 0x5cab, 0x12cd, 0xe857, 0x0, 0x0);
        gbc.writeMem(0x2307, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x96fc);
        EXPECT(gbc.pc(), 0x2309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03C3
        gbc.setState(0x8ff6, 0xdcd1, 0xb0c0, 0x8a45, 0x7087, 0xac00, 0x1, 0x0);
        gbc.writeMem(0x8ff6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdcd1);
        EXPECT(gbc.pc(), 0x8ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff6), 0xcb);
        EXPECT(gbc.readMem(0x8ff7), 0x64);
        // CB 64 03C4
        gbc.setState(0x9148, 0xac52, 0xa950, 0x4e82, 0x6910, 0x1763, 0x1, 0x0);
        gbc.writeMem(0x9148, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xac52);
        EXPECT(gbc.pc(), 0x914a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9148), 0xcb);
        EXPECT(gbc.readMem(0x9149), 0x64);
        // CB 64 03C5
        gbc.setState(0x1760, 0xfbde, 0x51e0, 0x546e, 0x2b6, 0xf10a, 0x0, 0x0);
        gbc.writeMem(0x1760, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfbde);
        EXPECT(gbc.pc(), 0x1762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03C6
        gbc.setState(0x29fe, 0x9734, 0xa6a0, 0x81e0, 0x57d5, 0x9a2e, 0x1, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9734);
        EXPECT(gbc.pc(), 0x2a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03C7
        gbc.setState(0x870d, 0x7ca, 0xe070, 0xa4b8, 0xf789, 0x6adc, 0x0, 0x0);
        gbc.writeMem(0x870d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7ca);
        EXPECT(gbc.pc(), 0x870f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870d), 0xcb);
        EXPECT(gbc.readMem(0x870e), 0x64);
        // CB 64 03C8
        gbc.setState(0xbfdf, 0x9025, 0x58e0, 0xfdc3, 0xec33, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9025);
        EXPECT(gbc.pc(), 0xbfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdf), 0xcb);
        EXPECT(gbc.readMem(0xbfe0), 0x64);
        // CB 64 03C9
        gbc.setState(0x3f78, 0xc7a8, 0x3120, 0x65cd, 0x9bcd, 0xf79f, 0x0, 0x0);
        gbc.writeMem(0x3f78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc7a8);
        EXPECT(gbc.pc(), 0x3f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03CA
        gbc.setState(0x2a30, 0xec6f, 0x1ce0, 0x7fa4, 0x276c, 0xe0e9, 0x0, 0x1);
        gbc.writeMem(0x2a30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xec6f);
        EXPECT(gbc.pc(), 0x2a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03CB
        gbc.setState(0x8536, 0xc8f8, 0x37f0, 0x2ed2, 0xb56a, 0x1381, 0x0, 0x1);
        gbc.writeMem(0x8536, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc8f8);
        EXPECT(gbc.pc(), 0x8538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8536), 0xcb);
        EXPECT(gbc.readMem(0x8537), 0x64);
        // CB 64 03CC
        gbc.setState(0x5a9d, 0xa49c, 0x5540, 0x602e, 0x2856, 0x6bed, 0x0, 0x0);
        gbc.writeMem(0x5a9d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa49c);
        EXPECT(gbc.pc(), 0x5a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03CD
        gbc.setState(0x95d5, 0x1e5f, 0xa1b0, 0xdada, 0x23df, 0xff19, 0x0, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1e5f);
        EXPECT(gbc.pc(), 0x95d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d5), 0xcb);
        EXPECT(gbc.readMem(0x95d6), 0x64);
        // CB 64 03CF
        gbc.setState(0xf46, 0xe4f6, 0x8df0, 0x12, 0x597, 0x198e, 0x0, 0x1);
        gbc.writeMem(0xf46, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe4f6);
        EXPECT(gbc.pc(), 0xf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03D1
        gbc.setState(0x6b49, 0x1161, 0x1a50, 0x77fa, 0x1ae1, 0xca98, 0x1, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1161);
        EXPECT(gbc.pc(), 0x6b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03D2
        gbc.setState(0xdd98, 0xbbc9, 0x6370, 0xad46, 0xd3bc, 0x5049, 0x0, 0x1);
        gbc.writeMem(0xdd98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbbc9);
        EXPECT(gbc.pc(), 0xdd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd98), 0xcb);
        EXPECT(gbc.readMem(0xdd99), 0x64);
        // CB 64 03D3
        gbc.setState(0x3afd, 0xd1b4, 0x360, 0xb875, 0xd0ef, 0xfa61, 0x1, 0x0);
        gbc.writeMem(0x3afd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd1b4);
        EXPECT(gbc.pc(), 0x3aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03D4
        gbc.setState(0x9f30, 0x2823, 0x4660, 0xaa54, 0xf6a0, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0x9f30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2823);
        EXPECT(gbc.pc(), 0x9f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f30), 0xcb);
        EXPECT(gbc.readMem(0x9f31), 0x64);
        // CB 64 03D5
        gbc.setState(0x860e, 0xf8be, 0xbfb0, 0x6af9, 0x9a02, 0xa366, 0x1, 0x1);
        gbc.writeMem(0x860e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf8be);
        EXPECT(gbc.pc(), 0x8610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860e), 0xcb);
        EXPECT(gbc.readMem(0x860f), 0x64);
        // CB 64 03D6
        gbc.setState(0xe968, 0x424c, 0xd4a0, 0xec23, 0x572c, 0x12a, 0x0, 0x0);
        gbc.writeMem(0xe968, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x424c);
        EXPECT(gbc.pc(), 0xe96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe968), 0xcb);
        EXPECT(gbc.readMem(0xe969), 0x64);
        // CB 64 03D7
        gbc.setState(0x15de, 0x378c, 0xa0b0, 0xac2d, 0x2c, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0x15de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0x15e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03D8
        gbc.setState(0xed59, 0xb12b, 0x6880, 0x826, 0xd39e, 0x78fd, 0x1, 0x1);
        gbc.writeMem(0xed59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb12b);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0x64);
        // CB 64 03D9
        gbc.setState(0x1c61, 0x1867, 0xf0, 0x5e32, 0xa59e, 0xc906, 0x1, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1867);
        EXPECT(gbc.pc(), 0x1c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03DA
        gbc.setState(0xcabd, 0x460b, 0xa240, 0xd918, 0x4f0f, 0xb243, 0x1, 0x1);
        gbc.writeMem(0xcabd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0xcabf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabd), 0xcb);
        EXPECT(gbc.readMem(0xcabe), 0x64);
        // CB 64 03DB
        gbc.setState(0xb05b, 0xa409, 0x82b0, 0xf6f, 0x29ed, 0xe6c2, 0x0, 0x0);
        gbc.writeMem(0xb05b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa409);
        EXPECT(gbc.pc(), 0xb05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05b), 0xcb);
        EXPECT(gbc.readMem(0xb05c), 0x64);
        // CB 64 03DC
        gbc.setState(0x780, 0xbd, 0x7c70, 0x75d9, 0x95b4, 0x6000, 0x0, 0x0);
        gbc.writeMem(0x780, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbd);
        EXPECT(gbc.pc(), 0x782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03DE
        gbc.setState(0x4bcb, 0x8970, 0x57c0, 0xb35, 0xbda5, 0x875c, 0x0, 0x1);
        gbc.writeMem(0x4bcb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8970);
        EXPECT(gbc.pc(), 0x4bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03DF
        gbc.setState(0x8cf4, 0x113a, 0x7990, 0x70d, 0x4f7b, 0xd3f9, 0x1, 0x0);
        gbc.writeMem(0x8cf4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x113a);
        EXPECT(gbc.pc(), 0x8cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf4), 0xcb);
        EXPECT(gbc.readMem(0x8cf5), 0x64);
        // CB 64 03E2
        gbc.setState(0x6a58, 0x80db, 0x2850, 0x493f, 0x787e, 0x211a, 0x1, 0x0);
        gbc.writeMem(0x6a58, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x80db);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03E4
        gbc.setState(0x66a9, 0xe60, 0x9640, 0x979b, 0xad0f, 0x1b16, 0x0, 0x0);
        gbc.writeMem(0x66a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe60);
        EXPECT(gbc.pc(), 0x66ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 64 03E5
        gbc.setState(0xb8b1, 0xbb12, 0xc0d0, 0x8e81, 0xd875, 0x9ed1, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbb12);
        EXPECT(gbc.pc(), 0xb8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b1), 0xcb);
        EXPECT(gbc.readMem(0xb8b2), 0x64);
        // CB 64 03E6
        gbc.setState(0x2fb2, 0xc9a4, 0x7f50, 0x9eaa, 0x9e11, 0xb364, 0x1, 0x1);
        gbc.writeMem(0x2fb2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc9a4);
        EXPECT(gbc.pc(), 0x2fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 64 03E7
        gbc.setState(0x97b7, 0x886b, 0xcb90, 0xc083, 0xa21c, 0xb3fa, 0x0, 0x1);
        gbc.writeMem(0x97b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x886b);
        EXPECT(gbc.pc(), 0x97b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b7), 0xcb);
        EXPECT(gbc.readMem(0x97b8), 0x64);
    }
}
#endif
