#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_02)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_02) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 02 0000
        gbc.setState(0x2f0, 0x9d7f, 0xbce0, 0x7929, 0x237b, 0x9658, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9d7f);
        EXPECT(gbc.pc(), 0x2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0001
        gbc.setState(0x2636, 0x8bf9, 0x98a0, 0x4d91, 0x4157, 0xef46, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8bf9);
        EXPECT(gbc.pc(), 0x2638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0002
        gbc.setState(0xa282, 0x83f3, 0xf760, 0x3763, 0x78fc, 0xb7d6, 0x0, 0x0);
        gbc.writeMem(0xa282, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x83f3);
        EXPECT(gbc.pc(), 0xa284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa282), 0xcb);
        EXPECT(gbc.readMem(0xa283), 0x2);
        // CB 02 0003
        gbc.setState(0xb3b0, 0x715f, 0xfa30, 0x967e, 0xd8fd, 0x89a0, 0x1, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x715f);
        EXPECT(gbc.pc(), 0xb3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b0), 0xcb);
        EXPECT(gbc.readMem(0xb3b1), 0x2);
        // CB 02 0004
        gbc.setState(0xa124, 0xc429, 0xcc10, 0xd2c2, 0x739, 0xafbe, 0x1, 0x1);
        gbc.writeMem(0xa124, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0xa126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa124), 0xcb);
        EXPECT(gbc.readMem(0xa125), 0x2);
        // CB 02 0005
        gbc.setState(0x3f8e, 0x8cdc, 0x74e0, 0x369a, 0x2ad5, 0x6c40, 0x1, 0x0);
        gbc.writeMem(0x3f8e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8cdc);
        EXPECT(gbc.pc(), 0x3f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0006
        gbc.setState(0x2d7b, 0xae91, 0xae50, 0x83e2, 0xc8bf, 0x1544, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xae91);
        EXPECT(gbc.pc(), 0x2d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0007
        gbc.setState(0x71d7, 0x93d7, 0xd0e0, 0xd6e1, 0x49b0, 0xd371, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0x71d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0008
        gbc.setState(0xf4f, 0x5092, 0x92c0, 0xd46d, 0xac5e, 0xef60, 0x1, 0x1);
        gbc.writeMem(0xf4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5092);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0009
        gbc.setState(0x8e1e, 0xe21d, 0xdab0, 0x802f, 0xcfd2, 0x6391, 0x0, 0x1);
        gbc.writeMem(0x8e1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe21d);
        EXPECT(gbc.pc(), 0x8e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1e), 0xcb);
        EXPECT(gbc.readMem(0x8e1f), 0x2);
        // CB 02 000A
        gbc.setState(0x2c1c, 0xd79f, 0xaca0, 0xf924, 0x8c57, 0x376d, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd79f);
        EXPECT(gbc.pc(), 0x2c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 000B
        gbc.setState(0x32e5, 0x9fb3, 0xb340, 0xcd67, 0x9457, 0xbe0d, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9fb3);
        EXPECT(gbc.pc(), 0x32e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 000C
        gbc.setState(0xc6a6, 0xffde, 0xd620, 0x66a5, 0x4069, 0xef5c, 0x1, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xffde);
        EXPECT(gbc.pc(), 0xc6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a6), 0xcb);
        EXPECT(gbc.readMem(0xc6a7), 0x2);
        // CB 02 000D
        gbc.setState(0x6ccd, 0xb244, 0xe640, 0xfe44, 0xe62d, 0xd102, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb244);
        EXPECT(gbc.pc(), 0x6ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 000E
        gbc.setState(0x59d7, 0xf4b2, 0xaab0, 0x9706, 0xc3bb, 0x82b5, 0x1, 0x0);
        gbc.writeMem(0x59d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf4b2);
        EXPECT(gbc.pc(), 0x59d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0010
        gbc.setState(0x13f3, 0x13c8, 0x3ca0, 0xd925, 0xf07b, 0xdc6b, 0x0, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x13c8);
        EXPECT(gbc.pc(), 0x13f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0011
        gbc.setState(0xc478, 0x42a8, 0x5b20, 0xaca8, 0x4a4f, 0x7666, 0x1, 0x0);
        gbc.writeMem(0xc478, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x42a8);
        EXPECT(gbc.pc(), 0xc47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc478), 0xcb);
        EXPECT(gbc.readMem(0xc479), 0x2);
        // CB 02 0012
        gbc.setState(0x5a05, 0xe9e8, 0xc760, 0xa0a, 0x9485, 0x231f, 0x1, 0x1);
        gbc.writeMem(0x5a05, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x5a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0014
        gbc.setState(0x77ce, 0x90ba, 0xc050, 0x392, 0xfb7b, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x77ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x90ba);
        EXPECT(gbc.pc(), 0x77d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0015
        gbc.setState(0xe39e, 0xc752, 0x5f50, 0x3c22, 0xff1d, 0xd647, 0x0, 0x1);
        gbc.writeMem(0xe39e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc752);
        EXPECT(gbc.pc(), 0xe3a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39e), 0xcb);
        EXPECT(gbc.readMem(0xe39f), 0x2);
        // CB 02 0016
        gbc.setState(0x9672, 0x288, 0x7600, 0x6433, 0xe5af, 0x2f9d, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x288);
        EXPECT(gbc.pc(), 0x9674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9672), 0xcb);
        EXPECT(gbc.readMem(0x9673), 0x2);
        // CB 02 0017
        gbc.setState(0xea3, 0xcad5, 0x7790, 0xdc11, 0xc7b2, 0x2579, 0x0, 0x1);
        gbc.writeMem(0xea3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcad5);
        EXPECT(gbc.pc(), 0xea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0018
        gbc.setState(0xa583, 0xd6e8, 0x990, 0x26fe, 0x9dd2, 0x5435, 0x1, 0x1);
        gbc.writeMem(0xa583, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd6e8);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0x2);
        // CB 02 0019
        gbc.setState(0xd1bb, 0x2de1, 0x3ca0, 0x37c8, 0x4161, 0xee14, 0x1, 0x0);
        gbc.writeMem(0xd1bb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0xd1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bb), 0xcb);
        EXPECT(gbc.readMem(0xd1bc), 0x2);
        // CB 02 001A
        gbc.setState(0xafc1, 0xfc6b, 0x83f0, 0x926b, 0xe2f6, 0x47a1, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0xafc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc1), 0xcb);
        EXPECT(gbc.readMem(0xafc2), 0x2);
        // CB 02 001B
        gbc.setState(0xd4b6, 0x941d, 0x2a10, 0xd77c, 0xf8c5, 0x23d2, 0x1, 0x1);
        gbc.writeMem(0xd4b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0xd4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b6), 0xcb);
        EXPECT(gbc.readMem(0xd4b7), 0x2);
        // CB 02 001C
        gbc.setState(0xcd5c, 0x915f, 0xb8f0, 0xea0d, 0x148a, 0x3551, 0x1, 0x1);
        gbc.writeMem(0xcd5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x915f);
        EXPECT(gbc.pc(), 0xcd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5c), 0xcb);
        EXPECT(gbc.readMem(0xcd5d), 0x2);
        // CB 02 001D
        gbc.setState(0x62c, 0x764, 0xcc50, 0x2fc7, 0xdc88, 0x1f6d, 0x0, 0x1);
        gbc.writeMem(0x62c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x764);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 001E
        gbc.setState(0x33df, 0xa841, 0x2f70, 0xca15, 0xf2f0, 0xf0f0, 0x0, 0x0);
        gbc.writeMem(0x33df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa841);
        EXPECT(gbc.pc(), 0x33e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 001F
        gbc.setState(0x9b2d, 0x36, 0x28c0, 0x2a8e, 0x7223, 0x8005, 0x0, 0x1);
        gbc.writeMem(0x9b2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x9b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2d), 0xcb);
        EXPECT(gbc.readMem(0x9b2e), 0x2);
        // CB 02 0020
        gbc.setState(0xe873, 0xf180, 0x150, 0x8871, 0x50a8, 0xbf15, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf180);
        EXPECT(gbc.pc(), 0xe875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0xcb);
        EXPECT(gbc.readMem(0xe874), 0x2);
        // CB 02 0021
        gbc.setState(0xd2d0, 0x604b, 0x5850, 0xe6a7, 0x92b4, 0x905e, 0x1, 0x0);
        gbc.writeMem(0xd2d0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x604b);
        EXPECT(gbc.pc(), 0xd2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d0), 0xcb);
        EXPECT(gbc.readMem(0xd2d1), 0x2);
        // CB 02 0022
        gbc.setState(0x7ff0, 0x5980, 0xd8a0, 0x25c0, 0x4fa9, 0xb6dc, 0x1, 0x0);
        gbc.writeMem(0x7ff0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5980);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0023
        gbc.setState(0x5054, 0x6293, 0xe430, 0x91cf, 0x3b34, 0x43c8, 0x1, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6293);
        EXPECT(gbc.pc(), 0x5056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0025
        gbc.setState(0x5880, 0x408f, 0x74b0, 0x2696, 0x91c0, 0x6ae8, 0x0, 0x0);
        gbc.writeMem(0x5880, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x408f);
        EXPECT(gbc.pc(), 0x5882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0026
        gbc.setState(0x2a9d, 0x8e6, 0x8600, 0xa1e, 0x38a5, 0xf36f, 0x0, 0x1);
        gbc.writeMem(0x2a9d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8e6);
        EXPECT(gbc.pc(), 0x2a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0027
        gbc.setState(0x21b6, 0x2a17, 0xe030, 0x6f09, 0x2f78, 0x7a11, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2a17);
        EXPECT(gbc.pc(), 0x21b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0028
        gbc.setState(0x9de2, 0x4de9, 0x12f0, 0x698d, 0xe296, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0x9de2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4de9);
        EXPECT(gbc.pc(), 0x9de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de2), 0xcb);
        EXPECT(gbc.readMem(0x9de3), 0x2);
        // CB 02 0029
        gbc.setState(0x1713, 0x8a84, 0xd030, 0xa572, 0xb003, 0x4328, 0x0, 0x1);
        gbc.writeMem(0x1713, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8a84);
        EXPECT(gbc.pc(), 0x1715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 002A
        gbc.setState(0xdba0, 0xa0ec, 0x9200, 0x3e8, 0xb98f, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0xdba0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0xdba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba0), 0xcb);
        EXPECT(gbc.readMem(0xdba1), 0x2);
        // CB 02 002B
        gbc.setState(0xca69, 0xc445, 0x40f0, 0xf4c0, 0xd4a1, 0xc0d7, 0x0, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc445);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0x2);
        // CB 02 002C
        gbc.setState(0x702, 0x204c, 0x6440, 0x21f6, 0x6125, 0x647f, 0x1, 0x0);
        gbc.writeMem(0x702, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 002D
        gbc.setState(0x4cda, 0x1fd9, 0x4a30, 0x2c2d, 0xebc8, 0xda9b, 0x0, 0x0);
        gbc.writeMem(0x4cda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0x4cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 002E
        gbc.setState(0xf6b, 0x5823, 0xd110, 0xcde2, 0xab32, 0x17e1, 0x0, 0x0);
        gbc.writeMem(0xf6b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5823);
        EXPECT(gbc.pc(), 0xf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 002F
        gbc.setState(0x280, 0x532f, 0xc620, 0x2e9d, 0x2681, 0x8c6e, 0x1, 0x0);
        gbc.writeMem(0x280, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x532f);
        EXPECT(gbc.pc(), 0x282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0030
        gbc.setState(0x5177, 0xd84d, 0x3320, 0x15cb, 0x280c, 0xbc59, 0x0, 0x0);
        gbc.writeMem(0x5177, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd84d);
        EXPECT(gbc.pc(), 0x5179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0031
        gbc.setState(0xd26b, 0x2f9a, 0x5a60, 0x4510, 0x1265, 0xdb5e, 0x0, 0x0);
        gbc.writeMem(0xd26b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2f9a);
        EXPECT(gbc.pc(), 0xd26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26b), 0xcb);
        EXPECT(gbc.readMem(0xd26c), 0x2);
        // CB 02 0032
        gbc.setState(0xcd29, 0xe7b0, 0x8490, 0x6649, 0x8435, 0xc750, 0x1, 0x0);
        gbc.writeMem(0xcd29, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe7b0);
        EXPECT(gbc.pc(), 0xcd2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd29), 0xcb);
        EXPECT(gbc.readMem(0xcd2a), 0x2);
        // CB 02 0033
        gbc.setState(0x6246, 0x6b04, 0xbf0, 0x1f67, 0x3abe, 0xa935, 0x0, 0x0);
        gbc.writeMem(0x6246, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6b04);
        EXPECT(gbc.pc(), 0x6248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0034
        gbc.setState(0x9938, 0x530, 0x7950, 0x6833, 0xeb2b, 0xee1f, 0x0, 0x0);
        gbc.writeMem(0x9938, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x530);
        EXPECT(gbc.pc(), 0x993a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0xcb);
        EXPECT(gbc.readMem(0x9939), 0x2);
        // CB 02 0035
        gbc.setState(0xae1d, 0xb190, 0x92f0, 0x415, 0xe71a, 0xe9ab, 0x1, 0x1);
        gbc.writeMem(0xae1d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb190);
        EXPECT(gbc.pc(), 0xae1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1d), 0xcb);
        EXPECT(gbc.readMem(0xae1e), 0x2);
        // CB 02 0036
        gbc.setState(0xd1ef, 0x81ed, 0xf340, 0x46dc, 0xdcc, 0x2d24, 0x0, 0x0);
        gbc.writeMem(0xd1ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x81ed);
        EXPECT(gbc.pc(), 0xd1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ef), 0xcb);
        EXPECT(gbc.readMem(0xd1f0), 0x2);
        // CB 02 0037
        gbc.setState(0x2694, 0xbe45, 0x2860, 0xb2c, 0x4234, 0x4895, 0x1, 0x0);
        gbc.writeMem(0x2694, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbe45);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0038
        gbc.setState(0x8965, 0x7882, 0x5fc0, 0x78c4, 0xa47a, 0x8c88, 0x1, 0x1);
        gbc.writeMem(0x8965, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0x8967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8965), 0xcb);
        EXPECT(gbc.readMem(0x8966), 0x2);
        // CB 02 003A
        gbc.setState(0x5f88, 0x2b86, 0x5df0, 0x3ac6, 0x6aaf, 0x2b12, 0x1, 0x0);
        gbc.writeMem(0x5f88, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x5f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 003B
        gbc.setState(0x18df, 0xeabc, 0xee50, 0xef00, 0xecbe, 0x9f7a, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xeabc);
        EXPECT(gbc.pc(), 0x18e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 003C
        gbc.setState(0x10e8, 0xa543, 0x94d0, 0xc5fe, 0x1d6e, 0xc648, 0x0, 0x1);
        gbc.writeMem(0x10e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa543);
        EXPECT(gbc.pc(), 0x10ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 003D
        gbc.setState(0x6a8a, 0x556d, 0x8230, 0x6af4, 0x9ae, 0x9ee4, 0x0, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x556d);
        EXPECT(gbc.pc(), 0x6a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 003E
        gbc.setState(0x4446, 0xcda7, 0x1a80, 0x4b1a, 0xb66e, 0x927e, 0x0, 0x1);
        gbc.writeMem(0x4446, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcda7);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 003F
        gbc.setState(0x4a30, 0x6a7c, 0x7ec0, 0x25c6, 0x9009, 0x3276, 0x0, 0x1);
        gbc.writeMem(0x4a30, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6a7c);
        EXPECT(gbc.pc(), 0x4a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0040
        gbc.setState(0x72e9, 0xf1da, 0x66c0, 0x3c13, 0x2cdf, 0x41f9, 0x0, 0x0);
        gbc.writeMem(0x72e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf1da);
        EXPECT(gbc.pc(), 0x72eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0041
        gbc.setState(0x438e, 0xad7c, 0x4a0, 0xbeed, 0x6b71, 0x545d, 0x0, 0x1);
        gbc.writeMem(0x438e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xad7c);
        EXPECT(gbc.pc(), 0x4390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0042
        gbc.setState(0xcfd8, 0xbdf1, 0x2940, 0xcd3, 0xc125, 0x2817, 0x0, 0x1);
        gbc.writeMem(0xcfd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbdf1);
        EXPECT(gbc.pc(), 0xcfda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd8), 0xcb);
        EXPECT(gbc.readMem(0xcfd9), 0x2);
        // CB 02 0043
        gbc.setState(0x7262, 0xe96d, 0x2ef0, 0x371f, 0x215a, 0x8931, 0x1, 0x1);
        gbc.writeMem(0x7262, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe96d);
        EXPECT(gbc.pc(), 0x7264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0044
        gbc.setState(0x5410, 0x91b1, 0x3be0, 0x2e65, 0x3257, 0x687b, 0x0, 0x1);
        gbc.writeMem(0x5410, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x91b1);
        EXPECT(gbc.pc(), 0x5412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0045
        gbc.setState(0x9048, 0x6cf4, 0x23c0, 0xc927, 0x7809, 0x1173, 0x1, 0x1);
        gbc.writeMem(0x9048, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6cf4);
        EXPECT(gbc.pc(), 0x904a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9048), 0xcb);
        EXPECT(gbc.readMem(0x9049), 0x2);
        // CB 02 0046
        gbc.setState(0x9251, 0x30c2, 0x55b0, 0xaac8, 0xb0b9, 0x2d7, 0x0, 0x1);
        gbc.writeMem(0x9251, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x30c2);
        EXPECT(gbc.pc(), 0x9253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9251), 0xcb);
        EXPECT(gbc.readMem(0x9252), 0x2);
        // CB 02 0047
        gbc.setState(0xeaa, 0x6bad, 0xa8a0, 0xffb, 0xc542, 0xf139, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6bad);
        EXPECT(gbc.pc(), 0xeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0048
        gbc.setState(0x40f5, 0x1fbb, 0x4710, 0xa455, 0x959d, 0x752d, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1fbb);
        EXPECT(gbc.pc(), 0x40f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0049
        gbc.setState(0xdfb0, 0xdc84, 0xf10, 0xc96b, 0x3444, 0x7a32, 0x1, 0x1);
        gbc.writeMem(0xdfb0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdc84);
        EXPECT(gbc.pc(), 0xdfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb0), 0xcb);
        EXPECT(gbc.readMem(0xdfb1), 0x2);
        // CB 02 004A
        gbc.setState(0x8c0a, 0x731e, 0x5ba0, 0xd66d, 0x805c, 0x9c96, 0x1, 0x1);
        gbc.writeMem(0x8c0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x731e);
        EXPECT(gbc.pc(), 0x8c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0a), 0xcb);
        EXPECT(gbc.readMem(0x8c0b), 0x2);
        // CB 02 004B
        gbc.setState(0xe7f6, 0xf582, 0x5810, 0x9a43, 0x28ae, 0x4804, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0xe7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f6), 0xcb);
        EXPECT(gbc.readMem(0xe7f7), 0x2);
        // CB 02 004D
        gbc.setState(0xad68, 0x5373, 0x1f50, 0x5096, 0x8860, 0x6003, 0x1, 0x0);
        gbc.writeMem(0xad68, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5373);
        EXPECT(gbc.pc(), 0xad6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad68), 0xcb);
        EXPECT(gbc.readMem(0xad69), 0x2);
        // CB 02 004E
        gbc.setState(0xb4f6, 0x6f45, 0xaf0, 0x4237, 0xf82b, 0x9f8d, 0x1, 0x1);
        gbc.writeMem(0xb4f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6f45);
        EXPECT(gbc.pc(), 0xb4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f6), 0xcb);
        EXPECT(gbc.readMem(0xb4f7), 0x2);
        // CB 02 004F
        gbc.setState(0x2e5e, 0x4d95, 0x2900, 0x4151, 0x10ea, 0xa1f0, 0x0, 0x0);
        gbc.writeMem(0x2e5e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4d95);
        EXPECT(gbc.pc(), 0x2e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0050
        gbc.setState(0x5af6, 0xc5e6, 0x40c0, 0xec66, 0x1c3e, 0x73db, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc5e6);
        EXPECT(gbc.pc(), 0x5af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0051
        gbc.setState(0xbed6, 0xed6f, 0x5f40, 0x1432, 0x68c3, 0x67b1, 0x0, 0x1);
        gbc.writeMem(0xbed6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xed6f);
        EXPECT(gbc.pc(), 0xbed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed6), 0xcb);
        EXPECT(gbc.readMem(0xbed7), 0x2);
        // CB 02 0052
        gbc.setState(0xe5e, 0xedc9, 0x5f0, 0x1aed, 0x9d58, 0x212, 0x1, 0x0);
        gbc.writeMem(0xe5e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xedc9);
        EXPECT(gbc.pc(), 0xe60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0053
        gbc.setState(0x2527, 0x3c15, 0xd3a0, 0x8a67, 0x2a3c, 0x508a, 0x0, 0x0);
        gbc.writeMem(0x2527, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3c15);
        EXPECT(gbc.pc(), 0x2529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0054
        gbc.setState(0xc882, 0x5588, 0x7ae0, 0x3fe5, 0x854, 0x66fa, 0x1, 0x0);
        gbc.writeMem(0xc882, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0xc884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc882), 0xcb);
        EXPECT(gbc.readMem(0xc883), 0x2);
        // CB 02 0055
        gbc.setState(0x6154, 0xd50d, 0x9240, 0x6c6c, 0x5866, 0x1533, 0x0, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd50d);
        EXPECT(gbc.pc(), 0x6156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0056
        gbc.setState(0xdd20, 0x116, 0xf460, 0x9197, 0xbb64, 0x997a, 0x1, 0x1);
        gbc.writeMem(0xdd20, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x116);
        EXPECT(gbc.pc(), 0xdd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd20), 0xcb);
        EXPECT(gbc.readMem(0xdd21), 0x2);
        // CB 02 0057
        gbc.setState(0x5ba1, 0xbfbe, 0xb2c0, 0x968e, 0x71cf, 0x3b99, 0x1, 0x0);
        gbc.writeMem(0x5ba1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbfbe);
        EXPECT(gbc.pc(), 0x5ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0058
        gbc.setState(0x122a, 0x2553, 0x7e30, 0xb8fa, 0xad66, 0x7808, 0x1, 0x1);
        gbc.writeMem(0x122a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2553);
        EXPECT(gbc.pc(), 0x122c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0059
        gbc.setState(0x686c, 0x60c2, 0xa8d0, 0x16c2, 0x320f, 0x3c92, 0x1, 0x1);
        gbc.writeMem(0x686c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x60c2);
        EXPECT(gbc.pc(), 0x686e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 005A
        gbc.setState(0x9fb3, 0x934d, 0xa030, 0x3120, 0x68ae, 0x42ef, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x934d);
        EXPECT(gbc.pc(), 0x9fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb3), 0xcb);
        EXPECT(gbc.readMem(0x9fb4), 0x2);
        // CB 02 005B
        gbc.setState(0xd59f, 0x4f26, 0x7420, 0xed3c, 0xd7ba, 0x3077, 0x0, 0x1);
        gbc.writeMem(0xd59f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4f26);
        EXPECT(gbc.pc(), 0xd5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59f), 0xcb);
        EXPECT(gbc.readMem(0xd5a0), 0x2);
        // CB 02 005C
        gbc.setState(0xbb60, 0x478, 0x4f80, 0x5666, 0xf9f8, 0x79f6, 0x1, 0x0);
        gbc.writeMem(0xbb60, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x478);
        EXPECT(gbc.pc(), 0xbb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb60), 0xcb);
        EXPECT(gbc.readMem(0xbb61), 0x2);
        // CB 02 005D
        gbc.setState(0xb72c, 0xa2a8, 0x3b50, 0xfe7f, 0xe7d9, 0x4668, 0x1, 0x1);
        gbc.writeMem(0xb72c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa2a8);
        EXPECT(gbc.pc(), 0xb72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72c), 0xcb);
        EXPECT(gbc.readMem(0xb72d), 0x2);
        // CB 02 005E
        gbc.setState(0x2a25, 0x405d, 0xcb60, 0x1b19, 0x8735, 0xd63e, 0x1, 0x1);
        gbc.writeMem(0x2a25, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x405d);
        EXPECT(gbc.pc(), 0x2a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 005F
        gbc.setState(0x8e73, 0xcdeb, 0xd8c0, 0x2526, 0xf79c, 0x8898, 0x0, 0x0);
        gbc.writeMem(0x8e73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e73), 0xcb);
        EXPECT(gbc.readMem(0x8e74), 0x2);
        // CB 02 0060
        gbc.setState(0x9ae7, 0x44fa, 0xce90, 0x2a02, 0xd56, 0x71d, 0x1, 0x1);
        gbc.writeMem(0x9ae7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x44fa);
        EXPECT(gbc.pc(), 0x9ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae7), 0xcb);
        EXPECT(gbc.readMem(0x9ae8), 0x2);
        // CB 02 0061
        gbc.setState(0x125f, 0x2b4f, 0xc580, 0xede0, 0x249, 0x9333, 0x0, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2b4f);
        EXPECT(gbc.pc(), 0x1261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0062
        gbc.setState(0x93d5, 0xc82, 0x3f90, 0xedfa, 0x5ad2, 0x4e57, 0x0, 0x1);
        gbc.writeMem(0x93d5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc82);
        EXPECT(gbc.pc(), 0x93d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d5), 0xcb);
        EXPECT(gbc.readMem(0x93d6), 0x2);
        // CB 02 0063
        gbc.setState(0x1065, 0x3d81, 0x7620, 0xf523, 0x5884, 0x37e0, 0x0, 0x0);
        gbc.writeMem(0x1065, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0x1067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0064
        gbc.setState(0x8db9, 0x7715, 0x8fa0, 0x795, 0xa1c8, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7715);
        EXPECT(gbc.pc(), 0x8dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db9), 0xcb);
        EXPECT(gbc.readMem(0x8dba), 0x2);
        // CB 02 0065
        gbc.setState(0xaf7b, 0x8c8, 0x60b0, 0x5606, 0xd716, 0xef59, 0x0, 0x1);
        gbc.writeMem(0xaf7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8c8);
        EXPECT(gbc.pc(), 0xaf7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7b), 0xcb);
        EXPECT(gbc.readMem(0xaf7c), 0x2);
        // CB 02 0066
        gbc.setState(0x6958, 0xbdbb, 0x7450, 0x2429, 0xbb84, 0x28f4, 0x0, 0x1);
        gbc.writeMem(0x6958, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbdbb);
        EXPECT(gbc.pc(), 0x695a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0067
        gbc.setState(0x20f, 0xc956, 0xea00, 0xec43, 0x9f6b, 0x8202, 0x0, 0x0);
        gbc.writeMem(0x20f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc956);
        EXPECT(gbc.pc(), 0x211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0068
        gbc.setState(0x3ace, 0xb72c, 0x9210, 0x8913, 0x6e3d, 0x9ba1, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb72c);
        EXPECT(gbc.pc(), 0x3ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0069
        gbc.setState(0xda7a, 0xfaad, 0xeb20, 0x2e0c, 0x11d, 0x6fe, 0x0, 0x1);
        gbc.writeMem(0xda7a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfaad);
        EXPECT(gbc.pc(), 0xda7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7a), 0xcb);
        EXPECT(gbc.readMem(0xda7b), 0x2);
        // CB 02 006A
        gbc.setState(0xc6d5, 0xb024, 0x1b0, 0x7e82, 0xe726, 0x5de4, 0x0, 0x1);
        gbc.writeMem(0xc6d5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0xc6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d5), 0xcb);
        EXPECT(gbc.readMem(0xc6d6), 0x2);
        // CB 02 006B
        gbc.setState(0x941e, 0x4ca9, 0x90e0, 0x882a, 0x8dc4, 0x505d, 0x1, 0x0);
        gbc.writeMem(0x941e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4ca9);
        EXPECT(gbc.pc(), 0x9420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x941e), 0xcb);
        EXPECT(gbc.readMem(0x941f), 0x2);
        // CB 02 006C
        gbc.setState(0x66b6, 0x6ca, 0x5200, 0x9498, 0x2a12, 0x7fae, 0x1, 0x1);
        gbc.writeMem(0x66b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6ca);
        EXPECT(gbc.pc(), 0x66b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 006D
        gbc.setState(0xd27a, 0xdf69, 0x1880, 0x9aca, 0x556, 0xa41, 0x0, 0x1);
        gbc.writeMem(0xd27a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdf69);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27a), 0xcb);
        EXPECT(gbc.readMem(0xd27b), 0x2);
        // CB 02 006E
        gbc.setState(0x6fc9, 0x5f92, 0x650, 0x2baa, 0xcded, 0x85cd, 0x1, 0x0);
        gbc.writeMem(0x6fc9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5f92);
        EXPECT(gbc.pc(), 0x6fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 006F
        gbc.setState(0xc2bd, 0x13cf, 0x18f0, 0x7dcc, 0x81aa, 0xc0ef, 0x1, 0x0);
        gbc.writeMem(0xc2bd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x13cf);
        EXPECT(gbc.pc(), 0xc2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bd), 0xcb);
        EXPECT(gbc.readMem(0xc2be), 0x2);
        // CB 02 0070
        gbc.setState(0x6ecb, 0x5bf9, 0x26e0, 0x4645, 0xdf4a, 0xa1f, 0x1, 0x1);
        gbc.writeMem(0x6ecb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5bf9);
        EXPECT(gbc.pc(), 0x6ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0071
        gbc.setState(0xda6e, 0x955c, 0xfb20, 0x4e7d, 0x3094, 0xd711, 0x1, 0x1);
        gbc.writeMem(0xda6e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x955c);
        EXPECT(gbc.pc(), 0xda70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6e), 0xcb);
        EXPECT(gbc.readMem(0xda6f), 0x2);
        // CB 02 0072
        gbc.setState(0x456e, 0xfe9b, 0xa680, 0x2a39, 0xe709, 0xbad, 0x1, 0x0);
        gbc.writeMem(0x456e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfe9b);
        EXPECT(gbc.pc(), 0x4570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0073
        gbc.setState(0xd0d1, 0xdc26, 0x9100, 0xa9e, 0x9f02, 0x41d4, 0x0, 0x0);
        gbc.writeMem(0xd0d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdc26);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0x2);
        // CB 02 0074
        gbc.setState(0xebb8, 0xa978, 0x6540, 0x6ffc, 0x2aaa, 0x16e1, 0x1, 0x1);
        gbc.writeMem(0xebb8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa978);
        EXPECT(gbc.pc(), 0xebba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb8), 0xcb);
        EXPECT(gbc.readMem(0xebb9), 0x2);
        // CB 02 0075
        gbc.setState(0x186a, 0xa7ed, 0xeef0, 0x1ff3, 0x93df, 0x165f, 0x0, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa7ed);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0076
        gbc.setState(0xba5d, 0x6482, 0xc440, 0xb29, 0xf1d6, 0x660d, 0x1, 0x1);
        gbc.writeMem(0xba5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6482);
        EXPECT(gbc.pc(), 0xba5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5d), 0xcb);
        EXPECT(gbc.readMem(0xba5e), 0x2);
        // CB 02 0077
        gbc.setState(0xeda7, 0x454b, 0x770, 0xfc67, 0xd3d0, 0x9, 0x0, 0x1);
        gbc.writeMem(0xeda7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x454b);
        EXPECT(gbc.pc(), 0xeda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda7), 0xcb);
        EXPECT(gbc.readMem(0xeda8), 0x2);
        // CB 02 0078
        gbc.setState(0xdbc8, 0xac07, 0x8b50, 0x4588, 0x8581, 0x21a4, 0x0, 0x1);
        gbc.writeMem(0xdbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xac07);
        EXPECT(gbc.pc(), 0xdbca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc8), 0xcb);
        EXPECT(gbc.readMem(0xdbc9), 0x2);
        // CB 02 0079
        gbc.setState(0xbdfc, 0x2fe1, 0x3b30, 0x15df, 0xb1fc, 0x5ac7, 0x1, 0x1);
        gbc.writeMem(0xbdfc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2fe1);
        EXPECT(gbc.pc(), 0xbdfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfc), 0xcb);
        EXPECT(gbc.readMem(0xbdfd), 0x2);
        // CB 02 007A
        gbc.setState(0xbd0e, 0x7ef, 0x1e20, 0x1582, 0x95ab, 0xf55b, 0x1, 0x0);
        gbc.writeMem(0xbd0e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7ef);
        EXPECT(gbc.pc(), 0xbd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0e), 0xcb);
        EXPECT(gbc.readMem(0xbd0f), 0x2);
        // CB 02 007B
        gbc.setState(0xb938, 0xcb35, 0xa720, 0x8a12, 0xe36e, 0x775c, 0x1, 0x1);
        gbc.writeMem(0xb938, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcb35);
        EXPECT(gbc.pc(), 0xb93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb938), 0xcb);
        EXPECT(gbc.readMem(0xb939), 0x2);
        // CB 02 007C
        gbc.setState(0x928c, 0x45cc, 0x160, 0x1905, 0x7f31, 0xb745, 0x0, 0x0);
        gbc.writeMem(0x928c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0x928e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928c), 0xcb);
        EXPECT(gbc.readMem(0x928d), 0x2);
        // CB 02 007D
        gbc.setState(0xdfcd, 0xb3f0, 0xfb10, 0xa3b0, 0xf744, 0x1497, 0x0, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb3f0);
        EXPECT(gbc.pc(), 0xdfcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcd), 0xcb);
        EXPECT(gbc.readMem(0xdfce), 0x2);
        // CB 02 007F
        gbc.setState(0x84b6, 0x1c1a, 0x3a90, 0x4367, 0x2b37, 0xae8b, 0x0, 0x0);
        gbc.writeMem(0x84b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1c1a);
        EXPECT(gbc.pc(), 0x84b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b6), 0xcb);
        EXPECT(gbc.readMem(0x84b7), 0x2);
        // CB 02 0080
        gbc.setState(0x6410, 0xf7d2, 0x85f0, 0xd75c, 0x4e2f, 0xb640, 0x0, 0x1);
        gbc.writeMem(0x6410, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf7d2);
        EXPECT(gbc.pc(), 0x6412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0081
        gbc.setState(0xb7f6, 0x74eb, 0x4db0, 0x357a, 0x18d9, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0xb7f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x74eb);
        EXPECT(gbc.pc(), 0xb7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f6), 0xcb);
        EXPECT(gbc.readMem(0xb7f7), 0x2);
        // CB 02 0082
        gbc.setState(0x7946, 0x5758, 0x3b40, 0x2eaf, 0x9fe3, 0xc39a, 0x0, 0x1);
        gbc.writeMem(0x7946, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5758);
        EXPECT(gbc.pc(), 0x7948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0083
        gbc.setState(0x10e7, 0x6ea2, 0x9600, 0x320e, 0x2ce5, 0xfa1, 0x0, 0x1);
        gbc.writeMem(0x10e7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6ea2);
        EXPECT(gbc.pc(), 0x10e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0084
        gbc.setState(0x45fd, 0x5c2a, 0xc030, 0xe227, 0xad1b, 0x7431, 0x1, 0x0);
        gbc.writeMem(0x45fd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0x45ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0085
        gbc.setState(0x99d, 0x2a62, 0x34c0, 0xe57c, 0x878d, 0xfce6, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2a62);
        EXPECT(gbc.pc(), 0x99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0086
        gbc.setState(0x42c3, 0x321, 0x5f80, 0x9103, 0x90b6, 0xd4da, 0x0, 0x0);
        gbc.writeMem(0x42c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x321);
        EXPECT(gbc.pc(), 0x42c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0087
        gbc.setState(0x812a, 0x10c3, 0x11b0, 0x44f3, 0x4d13, 0x3f11, 0x1, 0x1);
        gbc.writeMem(0x812a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x10c3);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0x2);
        // CB 02 0088
        gbc.setState(0x2b26, 0xf44c, 0xbe20, 0x46c, 0xf6a2, 0xa779, 0x0, 0x0);
        gbc.writeMem(0x2b26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf44c);
        EXPECT(gbc.pc(), 0x2b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 008A
        gbc.setState(0xb06f, 0x7f0b, 0x8700, 0x2a95, 0xb634, 0x8957, 0x1, 0x0);
        gbc.writeMem(0xb06f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0xb071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06f), 0xcb);
        EXPECT(gbc.readMem(0xb070), 0x2);
        // CB 02 008B
        gbc.setState(0xaab4, 0x353a, 0xfed0, 0xbcee, 0xbf7d, 0xa978, 0x1, 0x1);
        gbc.writeMem(0xaab4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x353a);
        EXPECT(gbc.pc(), 0xaab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab4), 0xcb);
        EXPECT(gbc.readMem(0xaab5), 0x2);
        // CB 02 008C
        gbc.setState(0x9bdf, 0x8c4b, 0x8aa0, 0x628e, 0x6aeb, 0x229, 0x1, 0x1);
        gbc.writeMem(0x9bdf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8c4b);
        EXPECT(gbc.pc(), 0x9be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdf), 0xcb);
        EXPECT(gbc.readMem(0x9be0), 0x2);
        // CB 02 008D
        gbc.setState(0xd17b, 0xdb6b, 0x5060, 0x3db3, 0xa214, 0x70e, 0x1, 0x1);
        gbc.writeMem(0xd17b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0xd17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17b), 0xcb);
        EXPECT(gbc.readMem(0xd17c), 0x2);
        // CB 02 008E
        gbc.setState(0x4dbe, 0x673, 0xc480, 0x6fa7, 0x275d, 0xab2e, 0x0, 0x1);
        gbc.writeMem(0x4dbe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x673);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 008F
        gbc.setState(0x1c4a, 0xea80, 0xd530, 0x1f99, 0x8164, 0xe3b6, 0x1, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xea80);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0090
        gbc.setState(0x2253, 0xe14d, 0x5630, 0x11e2, 0xeaa9, 0xcef3, 0x1, 0x0);
        gbc.writeMem(0x2253, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe14d);
        EXPECT(gbc.pc(), 0x2255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0091
        gbc.setState(0xd98a, 0x6cf1, 0x5e00, 0x7434, 0x2f35, 0x447a, 0x0, 0x1);
        gbc.writeMem(0xd98a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6cf1);
        EXPECT(gbc.pc(), 0xd98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98a), 0xcb);
        EXPECT(gbc.readMem(0xd98b), 0x2);
        // CB 02 0092
        gbc.setState(0x497b, 0x1271, 0xbbb0, 0xb9c1, 0xe939, 0xbb3b, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1271);
        EXPECT(gbc.pc(), 0x497d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0093
        gbc.setState(0x7d89, 0x870c, 0x7bf0, 0xea1a, 0x2286, 0x97b1, 0x0, 0x0);
        gbc.writeMem(0x7d89, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x870c);
        EXPECT(gbc.pc(), 0x7d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0094
        gbc.setState(0xb4f8, 0x9f63, 0x7480, 0xf38, 0xcbac, 0x8498, 0x1, 0x1);
        gbc.writeMem(0xb4f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9f63);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f8), 0xcb);
        EXPECT(gbc.readMem(0xb4f9), 0x2);
        // CB 02 0095
        gbc.setState(0xbb82, 0x9df2, 0xeed0, 0x97e5, 0xdd0a, 0x9511, 0x1, 0x0);
        gbc.writeMem(0xbb82, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9df2);
        EXPECT(gbc.pc(), 0xbb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb82), 0xcb);
        EXPECT(gbc.readMem(0xbb83), 0x2);
        // CB 02 0096
        gbc.setState(0x3485, 0xef4a, 0x1320, 0x1536, 0x2531, 0x4703, 0x0, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0x3487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0097
        gbc.setState(0x37f, 0x8e78, 0xdf20, 0x7ba7, 0xe7a7, 0x682d, 0x0, 0x1);
        gbc.writeMem(0x37f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8e78);
        EXPECT(gbc.pc(), 0x381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0098
        gbc.setState(0x2b9b, 0x89a9, 0x4c30, 0x5b65, 0x4a7e, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0x2b9b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x89a9);
        EXPECT(gbc.pc(), 0x2b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0099
        gbc.setState(0x6e57, 0x423e, 0xee0, 0x1c1f, 0xae97, 0xaff1, 0x0, 0x0);
        gbc.writeMem(0x6e57, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x423e);
        EXPECT(gbc.pc(), 0x6e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 009A
        gbc.setState(0x621f, 0x36ff, 0xf6e0, 0xfcc5, 0x1bed, 0x1615, 0x1, 0x0);
        gbc.writeMem(0x621f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x36ff);
        EXPECT(gbc.pc(), 0x6221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 009B
        gbc.setState(0xb557, 0x92e9, 0xd850, 0x95c6, 0x7a8a, 0xf973, 0x1, 0x0);
        gbc.writeMem(0xb557, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x92e9);
        EXPECT(gbc.pc(), 0xb559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb557), 0xcb);
        EXPECT(gbc.readMem(0xb558), 0x2);
        // CB 02 009C
        gbc.setState(0x75a7, 0x28fe, 0x8300, 0x7071, 0xe448, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0x75a7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x28fe);
        EXPECT(gbc.pc(), 0x75a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 009D
        gbc.setState(0xd4ee, 0x17a6, 0xcab0, 0xaf88, 0xc4f6, 0xe800, 0x0, 0x1);
        gbc.writeMem(0xd4ee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x17a6);
        EXPECT(gbc.pc(), 0xd4f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ee), 0xcb);
        EXPECT(gbc.readMem(0xd4ef), 0x2);
        // CB 02 009F
        gbc.setState(0x51e2, 0x4da9, 0x8140, 0x1d19, 0x7eb3, 0x3912, 0x1, 0x0);
        gbc.writeMem(0x51e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4da9);
        EXPECT(gbc.pc(), 0x51e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00A0
        gbc.setState(0x3547, 0x1ca2, 0xabf0, 0x213a, 0x76ca, 0x57ec, 0x0, 0x0);
        gbc.writeMem(0x3547, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1ca2);
        EXPECT(gbc.pc(), 0x3549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00A1
        gbc.setState(0x1481, 0xb128, 0x7360, 0xc155, 0xe146, 0x579, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb128);
        EXPECT(gbc.pc(), 0x1483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00A2
        gbc.setState(0xac0b, 0x9f9e, 0x4b90, 0x55ac, 0xead1, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xac0b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0xac0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0b), 0xcb);
        EXPECT(gbc.readMem(0xac0c), 0x2);
        // CB 02 00A3
        gbc.setState(0x5aac, 0xe938, 0x7490, 0xe9be, 0xcd5e, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x5aac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe938);
        EXPECT(gbc.pc(), 0x5aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00A4
        gbc.setState(0xdccb, 0xa0f1, 0xc220, 0x9790, 0x787c, 0x4669, 0x1, 0x0);
        gbc.writeMem(0xdccb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa0f1);
        EXPECT(gbc.pc(), 0xdccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccb), 0xcb);
        EXPECT(gbc.readMem(0xdccc), 0x2);
        // CB 02 00A5
        gbc.setState(0x4a82, 0x301a, 0x5ec0, 0x367, 0x75b7, 0x66a3, 0x1, 0x0);
        gbc.writeMem(0x4a82, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x301a);
        EXPECT(gbc.pc(), 0x4a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00A6
        gbc.setState(0x778, 0xdcd1, 0xd790, 0x8710, 0xb055, 0x59, 0x0, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdcd1);
        EXPECT(gbc.pc(), 0x77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00A7
        gbc.setState(0x22b5, 0x436d, 0xaf0, 0x59f8, 0xddd2, 0xbbb5, 0x1, 0x1);
        gbc.writeMem(0x22b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x436d);
        EXPECT(gbc.pc(), 0x22b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00A8
        gbc.setState(0x1093, 0x67ea, 0xd8f0, 0x14fb, 0x50ee, 0x2c2, 0x1, 0x1);
        gbc.writeMem(0x1093, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x67ea);
        EXPECT(gbc.pc(), 0x1095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00A9
        gbc.setState(0xe1c8, 0xa9a8, 0x3d10, 0x5bc9, 0xffba, 0xd215, 0x1, 0x1);
        gbc.writeMem(0xe1c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa9a8);
        EXPECT(gbc.pc(), 0xe1ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c8), 0xcb);
        EXPECT(gbc.readMem(0xe1c9), 0x2);
        // CB 02 00AA
        gbc.setState(0xb9a2, 0xafa2, 0xa560, 0xab03, 0xf79c, 0xe79b, 0x0, 0x1);
        gbc.writeMem(0xb9a2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xafa2);
        EXPECT(gbc.pc(), 0xb9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a2), 0xcb);
        EXPECT(gbc.readMem(0xb9a3), 0x2);
        // CB 02 00AB
        gbc.setState(0x98c9, 0x3694, 0x1bc0, 0x41f1, 0xeb3d, 0x678b, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3694);
        EXPECT(gbc.pc(), 0x98cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c9), 0xcb);
        EXPECT(gbc.readMem(0x98ca), 0x2);
        // CB 02 00AC
        gbc.setState(0xcacd, 0x28c5, 0x5380, 0x655b, 0x4ea, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0xcacd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x28c5);
        EXPECT(gbc.pc(), 0xcacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcacd), 0xcb);
        EXPECT(gbc.readMem(0xcace), 0x2);
        // CB 02 00AD
        gbc.setState(0x8978, 0xb2e9, 0xae30, 0xd3fb, 0x998d, 0xfb, 0x0, 0x0);
        gbc.writeMem(0x8978, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb2e9);
        EXPECT(gbc.pc(), 0x897a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8978), 0xcb);
        EXPECT(gbc.readMem(0x8979), 0x2);
        // CB 02 00AE
        gbc.setState(0x9862, 0xa887, 0x5180, 0xe0cb, 0x63f0, 0xb114, 0x0, 0x0);
        gbc.writeMem(0x9862, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa887);
        EXPECT(gbc.pc(), 0x9864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9862), 0xcb);
        EXPECT(gbc.readMem(0x9863), 0x2);
        // CB 02 00AF
        gbc.setState(0x556b, 0xeb5, 0x2dc0, 0x29c6, 0x2f89, 0x97ba, 0x0, 0x0);
        gbc.writeMem(0x556b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xeb5);
        EXPECT(gbc.pc(), 0x556d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00B0
        gbc.setState(0x8774, 0x66ee, 0x5680, 0xc44, 0x1e2, 0xa32c, 0x1, 0x0);
        gbc.writeMem(0x8774, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x66ee);
        EXPECT(gbc.pc(), 0x8776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8774), 0xcb);
        EXPECT(gbc.readMem(0x8775), 0x2);
        // CB 02 00B1
        gbc.setState(0x514f, 0x3d88, 0xfe40, 0x5d86, 0x7434, 0x6213, 0x1, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3d88);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00B2
        gbc.setState(0xd7f5, 0xdacf, 0x90f0, 0x9685, 0x9148, 0x4d02, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0x2);
        // CB 02 00B3
        gbc.setState(0x92eb, 0x58cc, 0x7f10, 0x6526, 0x4ed6, 0x865d, 0x0, 0x1);
        gbc.writeMem(0x92eb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x58cc);
        EXPECT(gbc.pc(), 0x92ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92eb), 0xcb);
        EXPECT(gbc.readMem(0x92ec), 0x2);
        // CB 02 00B4
        gbc.setState(0x1c51, 0x1851, 0x9bd0, 0x926, 0x82c7, 0xfe94, 0x1, 0x0);
        gbc.writeMem(0x1c51, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1851);
        EXPECT(gbc.pc(), 0x1c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00B5
        gbc.setState(0x4a97, 0x953, 0x97e0, 0x645d, 0x952b, 0x11ac, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0x4a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00B6
        gbc.setState(0x3d72, 0xd50e, 0x9190, 0x1ddd, 0xa4cf, 0xa99, 0x0, 0x0);
        gbc.writeMem(0x3d72, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd50e);
        EXPECT(gbc.pc(), 0x3d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00B7
        gbc.setState(0x7c3, 0x2a98, 0x4bc0, 0x346e, 0xafd8, 0x86aa, 0x1, 0x0);
        gbc.writeMem(0x7c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2a98);
        EXPECT(gbc.pc(), 0x7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00B8
        gbc.setState(0x51a6, 0xbedf, 0xee40, 0x11da, 0x699c, 0xb0e8, 0x1, 0x0);
        gbc.writeMem(0x51a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbedf);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00B9
        gbc.setState(0x75d9, 0x8020, 0x17b0, 0x6807, 0x6524, 0xb1ca, 0x0, 0x1);
        gbc.writeMem(0x75d9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00BA
        gbc.setState(0x98cb, 0x380, 0x2580, 0x4065, 0xce08, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x98cb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x380);
        EXPECT(gbc.pc(), 0x98cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98cb), 0xcb);
        EXPECT(gbc.readMem(0x98cc), 0x2);
        // CB 02 00BB
        gbc.setState(0xde98, 0x4501, 0x10, 0x921e, 0x739c, 0x103f, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4501);
        EXPECT(gbc.pc(), 0xde9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde98), 0xcb);
        EXPECT(gbc.readMem(0xde99), 0x2);
        // CB 02 00BC
        gbc.setState(0x9e02, 0x94e6, 0xd630, 0xd71f, 0x920, 0x746a, 0x1, 0x0);
        gbc.writeMem(0x9e02, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x94e6);
        EXPECT(gbc.pc(), 0x9e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e02), 0xcb);
        EXPECT(gbc.readMem(0x9e03), 0x2);
        // CB 02 00BD
        gbc.setState(0xe064, 0x54ec, 0x340, 0x3e5, 0xb878, 0xd80, 0x0, 0x0);
        gbc.writeMem(0xe064, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x54ec);
        EXPECT(gbc.pc(), 0xe066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe064), 0xcb);
        EXPECT(gbc.readMem(0xe065), 0x2);
        // CB 02 00BE
        gbc.setState(0x2340, 0x971d, 0x3630, 0x79d6, 0xfa2c, 0x3963, 0x0, 0x0);
        gbc.writeMem(0x2340, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x971d);
        EXPECT(gbc.pc(), 0x2342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00C0
        gbc.setState(0xd9, 0x6b2d, 0xdf50, 0x57a8, 0xce5e, 0x3b69, 0x0, 0x1);
        gbc.writeMem(0xd9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6b2d);
        EXPECT(gbc.pc(), 0xdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00C2
        gbc.setState(0x8658, 0x80f4, 0x4d50, 0xec3c, 0x695e, 0xd1fd, 0x1, 0x1);
        gbc.writeMem(0x8658, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x80f4);
        EXPECT(gbc.pc(), 0x865a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8658), 0xcb);
        EXPECT(gbc.readMem(0x8659), 0x2);
        // CB 02 00C3
        gbc.setState(0xc436, 0x751e, 0x5360, 0x2ff7, 0x999c, 0x29b5, 0x1, 0x1);
        gbc.writeMem(0xc436, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x751e);
        EXPECT(gbc.pc(), 0xc438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc436), 0xcb);
        EXPECT(gbc.readMem(0xc437), 0x2);
        // CB 02 00C4
        gbc.setState(0xcb4d, 0x1918, 0x2f90, 0x57bd, 0x820e, 0x7f6c, 0x0, 0x0);
        gbc.writeMem(0xcb4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1918);
        EXPECT(gbc.pc(), 0xcb4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4d), 0xcb);
        EXPECT(gbc.readMem(0xcb4e), 0x2);
        // CB 02 00C5
        gbc.setState(0x2170, 0x384c, 0x1450, 0x8726, 0x4133, 0x5275, 0x0, 0x0);
        gbc.writeMem(0x2170, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x384c);
        EXPECT(gbc.pc(), 0x2172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00C7
        gbc.setState(0x9343, 0x9074, 0x74f0, 0x9ef9, 0x4ba1, 0xcee9, 0x1, 0x1);
        gbc.writeMem(0x9343, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9074);
        EXPECT(gbc.pc(), 0x9345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9343), 0xcb);
        EXPECT(gbc.readMem(0x9344), 0x2);
        // CB 02 00C8
        gbc.setState(0x6231, 0xba67, 0xc250, 0xd8ba, 0xcafa, 0x88ba, 0x1, 0x0);
        gbc.writeMem(0x6231, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xba67);
        EXPECT(gbc.pc(), 0x6233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00C9
        gbc.setState(0x42ca, 0xe28e, 0x5420, 0xa9d6, 0xb14d, 0x5833, 0x0, 0x0);
        gbc.writeMem(0x42ca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe28e);
        EXPECT(gbc.pc(), 0x42cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00CA
        gbc.setState(0x3fd8, 0x3709, 0xb220, 0x34d6, 0x1d89, 0xe6f5, 0x1, 0x0);
        gbc.writeMem(0x3fd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x3fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00CB
        gbc.setState(0x276b, 0xa6c8, 0x20d0, 0x88da, 0x7352, 0x3987, 0x1, 0x0);
        gbc.writeMem(0x276b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa6c8);
        EXPECT(gbc.pc(), 0x276d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00CC
        gbc.setState(0x90bf, 0xae30, 0x2bf0, 0x9ba7, 0xc78e, 0xe922, 0x0, 0x1);
        gbc.writeMem(0x90bf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xae30);
        EXPECT(gbc.pc(), 0x90c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bf), 0xcb);
        EXPECT(gbc.readMem(0x90c0), 0x2);
        // CB 02 00CD
        gbc.setState(0x33e6, 0x2d53, 0x4b60, 0xf43a, 0x80fb, 0xae72, 0x0, 0x0);
        gbc.writeMem(0x33e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d53);
        EXPECT(gbc.pc(), 0x33e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00CF
        gbc.setState(0xb2f, 0xd247, 0xe220, 0x2c38, 0x3277, 0x7554, 0x0, 0x0);
        gbc.writeMem(0xb2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0xb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00D0
        gbc.setState(0x9901, 0x5488, 0x7fe0, 0x3815, 0x21d2, 0xae60, 0x0, 0x1);
        gbc.writeMem(0x9901, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5488);
        EXPECT(gbc.pc(), 0x9903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9901), 0xcb);
        EXPECT(gbc.readMem(0x9902), 0x2);
        // CB 02 00D1
        gbc.setState(0x20d1, 0x170e, 0x5b40, 0xefb2, 0xad88, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x170e);
        EXPECT(gbc.pc(), 0x20d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00D2
        gbc.setState(0xc7db, 0x5d23, 0x4930, 0x2fce, 0x57af, 0x51fa, 0x1, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5d23);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7db), 0xcb);
        EXPECT(gbc.readMem(0xc7dc), 0x2);
        // CB 02 00D3
        gbc.setState(0xd99c, 0x319c, 0xb960, 0xbd89, 0x8c98, 0xa567, 0x1, 0x0);
        gbc.writeMem(0xd99c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x319c);
        EXPECT(gbc.pc(), 0xd99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd99c), 0xcb);
        EXPECT(gbc.readMem(0xd99d), 0x2);
        // CB 02 00D4
        gbc.setState(0x3e7e, 0x2c97, 0x7cd0, 0x5d93, 0x204f, 0xcebb, 0x0, 0x0);
        gbc.writeMem(0x3e7e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2c97);
        EXPECT(gbc.pc(), 0x3e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00D6
        gbc.setState(0xea88, 0xf280, 0x72b0, 0xcab3, 0x6fed, 0xa5df, 0x1, 0x0);
        gbc.writeMem(0xea88, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf280);
        EXPECT(gbc.pc(), 0xea8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea88), 0xcb);
        EXPECT(gbc.readMem(0xea89), 0x2);
        // CB 02 00D7
        gbc.setState(0x32b9, 0x9539, 0x3c40, 0x7ca8, 0xa5fd, 0x4f6a, 0x1, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00D8
        gbc.setState(0xe673, 0x8a99, 0xd8d0, 0xc01c, 0x7fb4, 0xcfba, 0x0, 0x1);
        gbc.writeMem(0xe673, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8a99);
        EXPECT(gbc.pc(), 0xe675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe673), 0xcb);
        EXPECT(gbc.readMem(0xe674), 0x2);
        // CB 02 00D9
        gbc.setState(0x2db4, 0x5a8f, 0xc100, 0xf195, 0x1584, 0x1e5d, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5a8f);
        EXPECT(gbc.pc(), 0x2db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00DA
        gbc.setState(0x6090, 0x100b, 0x460, 0x6d16, 0x7678, 0xf389, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x100b);
        EXPECT(gbc.pc(), 0x6092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00DB
        gbc.setState(0xce6, 0xc41f, 0xb140, 0x6c16, 0xce46, 0x1499, 0x1, 0x1);
        gbc.writeMem(0xce6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc41f);
        EXPECT(gbc.pc(), 0xce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00DC
        gbc.setState(0x298a, 0x880b, 0x700, 0xf78b, 0x672, 0xb94d, 0x0, 0x1);
        gbc.writeMem(0x298a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x880b);
        EXPECT(gbc.pc(), 0x298c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00DE
        gbc.setState(0x46aa, 0x9109, 0x4e30, 0x5c16, 0x84dc, 0xc188, 0x1, 0x1);
        gbc.writeMem(0x46aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9109);
        EXPECT(gbc.pc(), 0x46ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00DF
        gbc.setState(0x4941, 0x7f10, 0x6ba0, 0x2e3f, 0x3d52, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0x4941, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0x4943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00E0
        gbc.setState(0x2985, 0x395e, 0x6160, 0x8922, 0x7228, 0xe9a9, 0x1, 0x0);
        gbc.writeMem(0x2985, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x395e);
        EXPECT(gbc.pc(), 0x2987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00E2
        gbc.setState(0xb5f4, 0x77d3, 0xff90, 0x3b61, 0xbf75, 0xc832, 0x1, 0x0);
        gbc.writeMem(0xb5f4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x77d3);
        EXPECT(gbc.pc(), 0xb5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f4), 0xcb);
        EXPECT(gbc.readMem(0xb5f5), 0x2);
        // CB 02 00E3
        gbc.setState(0x6532, 0x55a4, 0xd5e0, 0x331c, 0x3174, 0x1fb7, 0x1, 0x0);
        gbc.writeMem(0x6532, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x55a4);
        EXPECT(gbc.pc(), 0x6534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00E5
        gbc.setState(0xa496, 0x4a7f, 0xdf60, 0x413b, 0x1e98, 0xe4f8, 0x0, 0x0);
        gbc.writeMem(0xa496, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4a7f);
        EXPECT(gbc.pc(), 0xa498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa496), 0xcb);
        EXPECT(gbc.readMem(0xa497), 0x2);
        // CB 02 00E7
        gbc.setState(0x40c3, 0x3298, 0x61e0, 0x5d3a, 0xc9f7, 0x4e20, 0x1, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3298);
        EXPECT(gbc.pc(), 0x40c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00E8
        gbc.setState(0xa39, 0x7008, 0x1450, 0x5dd2, 0x8448, 0xa540, 0x0, 0x0);
        gbc.writeMem(0xa39, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7008);
        EXPECT(gbc.pc(), 0xa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00E9
        gbc.setState(0x5844, 0xd4e8, 0xb400, 0xac9c, 0x2e4a, 0x97b5, 0x1, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0x5846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00EA
        gbc.setState(0xee39, 0x6dfa, 0xc420, 0xdf5e, 0x690, 0x3700, 0x1, 0x1);
        gbc.writeMem(0xee39, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6dfa);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee39), 0xcb);
        EXPECT(gbc.readMem(0xee3a), 0x2);
        // CB 02 00EB
        gbc.setState(0x91db, 0x7ca8, 0x74f0, 0xdddd, 0x1959, 0x6b94, 0x1, 0x1);
        gbc.writeMem(0x91db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7ca8);
        EXPECT(gbc.pc(), 0x91dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91db), 0xcb);
        EXPECT(gbc.readMem(0x91dc), 0x2);
        // CB 02 00EC
        gbc.setState(0xe5d3, 0x1af3, 0x3b90, 0x2b20, 0x73a4, 0x2200, 0x1, 0x0);
        gbc.writeMem(0xe5d3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1af3);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0x2);
        // CB 02 00ED
        gbc.setState(0xece2, 0x50fc, 0x62a0, 0x3ca9, 0x8b3a, 0x39bc, 0x0, 0x0);
        gbc.writeMem(0xece2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x50fc);
        EXPECT(gbc.pc(), 0xece4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece2), 0xcb);
        EXPECT(gbc.readMem(0xece3), 0x2);
        // CB 02 00EE
        gbc.setState(0x1262, 0x539f, 0x4050, 0xc283, 0xb3c0, 0x7d0b, 0x1, 0x0);
        gbc.writeMem(0x1262, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0x1264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00EF
        gbc.setState(0x55ed, 0x309e, 0xe230, 0xb797, 0x76f6, 0x2504, 0x0, 0x1);
        gbc.writeMem(0x55ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x309e);
        EXPECT(gbc.pc(), 0x55ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00F0
        gbc.setState(0x98ed, 0xfe5e, 0x330, 0x8013, 0xccca, 0x2f8, 0x1, 0x1);
        gbc.writeMem(0x98ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe5e);
        EXPECT(gbc.pc(), 0x98ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ed), 0xcb);
        EXPECT(gbc.readMem(0x98ee), 0x2);
        // CB 02 00F1
        gbc.setState(0x12fd, 0xab8c, 0x2960, 0x91c2, 0xd901, 0x6d7b, 0x0, 0x1);
        gbc.writeMem(0x12fd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x12ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00F2
        gbc.setState(0x15d6, 0x3fc8, 0xef40, 0x9cc3, 0xf51, 0xd766, 0x0, 0x0);
        gbc.writeMem(0x15d6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3fc8);
        EXPECT(gbc.pc(), 0x15d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00F3
        gbc.setState(0xe3f1, 0x66ef, 0xf480, 0xa9d1, 0xb164, 0xb983, 0x0, 0x1);
        gbc.writeMem(0xe3f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x66ef);
        EXPECT(gbc.pc(), 0xe3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f1), 0xcb);
        EXPECT(gbc.readMem(0xe3f2), 0x2);
        // CB 02 00F5
        gbc.setState(0xd3bc, 0x5ce5, 0x18f0, 0xa646, 0x8dc, 0xc528, 0x0, 0x1);
        gbc.writeMem(0xd3bc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5ce5);
        EXPECT(gbc.pc(), 0xd3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bc), 0xcb);
        EXPECT(gbc.readMem(0xd3bd), 0x2);
        // CB 02 00F6
        gbc.setState(0xb007, 0xd0c6, 0x3880, 0x7956, 0x2d75, 0x3127, 0x1, 0x0);
        gbc.writeMem(0xb007, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd0c6);
        EXPECT(gbc.pc(), 0xb009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb007), 0xcb);
        EXPECT(gbc.readMem(0xb008), 0x2);
        // CB 02 00F7
        gbc.setState(0xe26a, 0xd455, 0xbe70, 0xf1c2, 0x4b79, 0x5d10, 0x0, 0x1);
        gbc.writeMem(0xe26a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd455);
        EXPECT(gbc.pc(), 0xe26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26a), 0xcb);
        EXPECT(gbc.readMem(0xe26b), 0x2);
        // CB 02 00F8
        gbc.setState(0x48e2, 0x18c8, 0x9d60, 0x6de2, 0xcd0f, 0xc7c5, 0x0, 0x1);
        gbc.writeMem(0x48e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x18c8);
        EXPECT(gbc.pc(), 0x48e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00FA
        gbc.setState(0xb7aa, 0x55ec, 0x5850, 0xab36, 0xe0f2, 0x2103, 0x1, 0x0);
        gbc.writeMem(0xb7aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x55ec);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7aa), 0xcb);
        EXPECT(gbc.readMem(0xb7ab), 0x2);
        // CB 02 00FB
        gbc.setState(0x354a, 0xb331, 0x7b90, 0xf7c1, 0x3144, 0xca54, 0x0, 0x1);
        gbc.writeMem(0x354a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb331);
        EXPECT(gbc.pc(), 0x354c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 00FC
        gbc.setState(0x4172, 0x467c, 0x7270, 0x3139, 0x9a6d, 0xef4f, 0x1, 0x1);
        gbc.writeMem(0x4172, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x467c);
        EXPECT(gbc.pc(), 0x4174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00FD
        gbc.setState(0x180b, 0xda4c, 0xc9b0, 0x45af, 0xb487, 0xf062, 0x1, 0x1);
        gbc.writeMem(0x180b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xda4c);
        EXPECT(gbc.pc(), 0x180d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00FE
        gbc.setState(0x617b, 0xcbe7, 0xa2b0, 0x5e86, 0xd93e, 0x1ec7, 0x1, 0x0);
        gbc.writeMem(0x617b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcbe7);
        EXPECT(gbc.pc(), 0x617d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 00FF
        gbc.setState(0xcdfa, 0xc92b, 0xfe60, 0x7f28, 0x8003, 0x680a, 0x1, 0x0);
        gbc.writeMem(0xcdfa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc92b);
        EXPECT(gbc.pc(), 0xcdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfa), 0xcb);
        EXPECT(gbc.readMem(0xcdfb), 0x2);
        // CB 02 0100
        gbc.setState(0xe0a4, 0x3f4a, 0xd650, 0xc366, 0x4dcd, 0x115f, 0x1, 0x1);
        gbc.writeMem(0xe0a4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3f4a);
        EXPECT(gbc.pc(), 0xe0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a4), 0xcb);
        EXPECT(gbc.readMem(0xe0a5), 0x2);
        // CB 02 0103
        gbc.setState(0x894c, 0xd144, 0x16a0, 0x9fce, 0x8bfb, 0x1e88, 0x0, 0x0);
        gbc.writeMem(0x894c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd144);
        EXPECT(gbc.pc(), 0x894e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894c), 0xcb);
        EXPECT(gbc.readMem(0x894d), 0x2);
        // CB 02 0104
        gbc.setState(0x2e1f, 0xeaa0, 0x1d90, 0x52d5, 0xecc6, 0xb6cb, 0x1, 0x0);
        gbc.writeMem(0x2e1f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xeaa0);
        EXPECT(gbc.pc(), 0x2e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0105
        gbc.setState(0xb435, 0x1b66, 0x1820, 0xb116, 0x627b, 0x847a, 0x1, 0x1);
        gbc.writeMem(0xb435, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1b66);
        EXPECT(gbc.pc(), 0xb437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb435), 0xcb);
        EXPECT(gbc.readMem(0xb436), 0x2);
        // CB 02 0106
        gbc.setState(0x6388, 0xf38d, 0x5790, 0x7bc8, 0xdef9, 0x84d1, 0x1, 0x0);
        gbc.writeMem(0x6388, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf38d);
        EXPECT(gbc.pc(), 0x638a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0107
        gbc.setState(0x37a8, 0x9f4a, 0x4b40, 0xdec7, 0xb70, 0x234d, 0x1, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9f4a);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0108
        gbc.setState(0x3224, 0x465d, 0x77e0, 0x63e3, 0x72ab, 0xe08e, 0x0, 0x0);
        gbc.writeMem(0x3224, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x465d);
        EXPECT(gbc.pc(), 0x3226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0109
        gbc.setState(0x5ecb, 0x64b, 0x29d0, 0x2f6, 0x2bc5, 0x3b26, 0x1, 0x0);
        gbc.writeMem(0x5ecb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x64b);
        EXPECT(gbc.pc(), 0x5ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 010A
        gbc.setState(0x32fa, 0xc880, 0xaa0, 0xacfc, 0x9b59, 0x9345, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0x32fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 010B
        gbc.setState(0x494e, 0x1db5, 0x7b70, 0xb712, 0x8a25, 0x4fe2, 0x0, 0x1);
        gbc.writeMem(0x494e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1db5);
        EXPECT(gbc.pc(), 0x4950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 010C
        gbc.setState(0x2a93, 0x66e4, 0x5eb0, 0xe678, 0x703a, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x66e4);
        EXPECT(gbc.pc(), 0x2a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 010D
        gbc.setState(0x271c, 0x9173, 0x9040, 0x3c36, 0xa825, 0xdd58, 0x1, 0x0);
        gbc.writeMem(0x271c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9173);
        EXPECT(gbc.pc(), 0x271e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 010E
        gbc.setState(0x7c4e, 0xf297, 0x2010, 0xaa65, 0x1948, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x7c4e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf297);
        EXPECT(gbc.pc(), 0x7c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 010F
        gbc.setState(0x6657, 0xa15, 0xa9c0, 0xdc7c, 0xee34, 0x4368, 0x0, 0x1);
        gbc.writeMem(0x6657, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa15);
        EXPECT(gbc.pc(), 0x6659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0110
        gbc.setState(0xcb45, 0x1bba, 0x7650, 0x6cd1, 0x89a, 0x25f3, 0x0, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1bba);
        EXPECT(gbc.pc(), 0xcb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb45), 0xcb);
        EXPECT(gbc.readMem(0xcb46), 0x2);
        // CB 02 0111
        gbc.setState(0xcfca, 0xb8d8, 0xc8b0, 0x4730, 0x7a89, 0xfaf9, 0x0, 0x1);
        gbc.writeMem(0xcfca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb8d8);
        EXPECT(gbc.pc(), 0xcfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfca), 0xcb);
        EXPECT(gbc.readMem(0xcfcb), 0x2);
        // CB 02 0112
        gbc.setState(0x443f, 0xe08e, 0xc600, 0x1658, 0xfabb, 0x5953, 0x0, 0x0);
        gbc.writeMem(0x443f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe08e);
        EXPECT(gbc.pc(), 0x4441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0113
        gbc.setState(0xc0, 0x61f0, 0x54c0, 0x863c, 0x3e99, 0x14c3, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x61f0);
        EXPECT(gbc.pc(), 0xc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0114
        gbc.setState(0x75a6, 0x135, 0x9290, 0x1895, 0x4555, 0x4139, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x135);
        EXPECT(gbc.pc(), 0x75a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0115
        gbc.setState(0xc3df, 0x1183, 0x4f60, 0x389, 0x52e1, 0x79a4, 0x0, 0x1);
        gbc.writeMem(0xc3df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1183);
        EXPECT(gbc.pc(), 0xc3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3df), 0xcb);
        EXPECT(gbc.readMem(0xc3e0), 0x2);
        // CB 02 0116
        gbc.setState(0xd674, 0x82e8, 0x4450, 0x649c, 0x48c3, 0xb295, 0x0, 0x0);
        gbc.writeMem(0xd674, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x82e8);
        EXPECT(gbc.pc(), 0xd676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd674), 0xcb);
        EXPECT(gbc.readMem(0xd675), 0x2);
        // CB 02 0117
        gbc.setState(0x6e4, 0x2768, 0xd0, 0xf6f5, 0x5e44, 0x2517, 0x0, 0x0);
        gbc.writeMem(0x6e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2768);
        EXPECT(gbc.pc(), 0x6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0118
        gbc.setState(0x1319, 0x3ab8, 0x3e90, 0xdd6a, 0x14ee, 0x1554, 0x1, 0x1);
        gbc.writeMem(0x1319, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3ab8);
        EXPECT(gbc.pc(), 0x131b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0119
        gbc.setState(0xeaf, 0xc6c2, 0x49f0, 0x9d98, 0xb5cf, 0x61b4, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc6c2);
        EXPECT(gbc.pc(), 0xeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 011A
        gbc.setState(0x16d, 0xad11, 0x55f0, 0x1397, 0x3e95, 0xbc80, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xad11);
        EXPECT(gbc.pc(), 0x16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 011B
        gbc.setState(0x3a84, 0xda97, 0x100, 0xe53d, 0xc515, 0xc22a, 0x0, 0x0);
        gbc.writeMem(0x3a84, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xda97);
        EXPECT(gbc.pc(), 0x3a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 011C
        gbc.setState(0x7890, 0xd69e, 0xbb90, 0xf1d4, 0xd82d, 0x9ead, 0x1, 0x1);
        gbc.writeMem(0x7890, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd69e);
        EXPECT(gbc.pc(), 0x7892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 011D
        gbc.setState(0x8f8b, 0xc09e, 0xe570, 0xb286, 0xa8e3, 0x35e0, 0x0, 0x0);
        gbc.writeMem(0x8f8b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc09e);
        EXPECT(gbc.pc(), 0x8f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f8b), 0xcb);
        EXPECT(gbc.readMem(0x8f8c), 0x2);
        // CB 02 011E
        gbc.setState(0xba5d, 0x2446, 0x1970, 0x571e, 0x4678, 0xd25f, 0x0, 0x0);
        gbc.writeMem(0xba5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2446);
        EXPECT(gbc.pc(), 0xba5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5d), 0xcb);
        EXPECT(gbc.readMem(0xba5e), 0x2);
        // CB 02 011F
        gbc.setState(0x37a0, 0xadb5, 0x7660, 0xd7e9, 0xb6b7, 0xe668, 0x0, 0x0);
        gbc.writeMem(0x37a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xadb5);
        EXPECT(gbc.pc(), 0x37a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0120
        gbc.setState(0x6f5f, 0x370f, 0x9dd0, 0x4261, 0x97dd, 0xff6d, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x370f);
        EXPECT(gbc.pc(), 0x6f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0121
        gbc.setState(0x85a1, 0x59f, 0x2c10, 0x7ead, 0x44b0, 0xf6b6, 0x0, 0x1);
        gbc.writeMem(0x85a1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x59f);
        EXPECT(gbc.pc(), 0x85a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a1), 0xcb);
        EXPECT(gbc.readMem(0x85a2), 0x2);
        // CB 02 0123
        gbc.setState(0xa512, 0xffa4, 0xcd70, 0x3c7b, 0x8da0, 0xa89a, 0x0, 0x1);
        gbc.writeMem(0xa512, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xffa4);
        EXPECT(gbc.pc(), 0xa514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa512), 0xcb);
        EXPECT(gbc.readMem(0xa513), 0x2);
        // CB 02 0124
        gbc.setState(0x5516, 0x1337, 0x7210, 0xb2ba, 0x8584, 0x7afa, 0x0, 0x0);
        gbc.writeMem(0x5516, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1337);
        EXPECT(gbc.pc(), 0x5518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0125
        gbc.setState(0xe61e, 0x962b, 0xaff0, 0xb142, 0x6a5f, 0x14d9, 0x0, 0x0);
        gbc.writeMem(0xe61e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0xe620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61e), 0xcb);
        EXPECT(gbc.readMem(0xe61f), 0x2);
        // CB 02 0127
        gbc.setState(0xd7e9, 0x5f2a, 0x34d0, 0x354, 0xbb87, 0x145a, 0x0, 0x1);
        gbc.writeMem(0xd7e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5f2a);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e9), 0xcb);
        EXPECT(gbc.readMem(0xd7ea), 0x2);
        // CB 02 0128
        gbc.setState(0x845a, 0x5709, 0x1b60, 0xa3c3, 0x3b5f, 0x9026, 0x1, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5709);
        EXPECT(gbc.pc(), 0x845c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845a), 0xcb);
        EXPECT(gbc.readMem(0x845b), 0x2);
        // CB 02 0129
        gbc.setState(0x1ee2, 0xab4e, 0xc800, 0xb406, 0xf94f, 0x574a, 0x0, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xab4e);
        EXPECT(gbc.pc(), 0x1ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 012A
        gbc.setState(0x9bbf, 0xc20f, 0x30e0, 0xc09, 0x331d, 0xd06, 0x0, 0x1);
        gbc.writeMem(0x9bbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc20f);
        EXPECT(gbc.pc(), 0x9bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbf), 0xcb);
        EXPECT(gbc.readMem(0x9bc0), 0x2);
        // CB 02 012B
        gbc.setState(0xe7f7, 0x88af, 0xc210, 0x6e81, 0x3809, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0xe7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f7), 0xcb);
        EXPECT(gbc.readMem(0xe7f8), 0x2);
        // CB 02 012C
        gbc.setState(0x8470, 0x53cc, 0x40f0, 0x7319, 0x6de7, 0x5b9d, 0x0, 0x0);
        gbc.writeMem(0x8470, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x53cc);
        EXPECT(gbc.pc(), 0x8472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8470), 0xcb);
        EXPECT(gbc.readMem(0x8471), 0x2);
        // CB 02 012D
        gbc.setState(0x3b1a, 0xd609, 0xf8d0, 0x40de, 0xeb3c, 0xd3ec, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd609);
        EXPECT(gbc.pc(), 0x3b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 012E
        gbc.setState(0xa3be, 0x851, 0xfd10, 0xc58b, 0xd2f4, 0xdd6c, 0x1, 0x0);
        gbc.writeMem(0xa3be, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x851);
        EXPECT(gbc.pc(), 0xa3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3be), 0xcb);
        EXPECT(gbc.readMem(0xa3bf), 0x2);
        // CB 02 012F
        gbc.setState(0x4cda, 0x5fef, 0x7bf0, 0x504b, 0x1e9f, 0xf96c, 0x1, 0x0);
        gbc.writeMem(0x4cda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5fef);
        EXPECT(gbc.pc(), 0x4cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0130
        gbc.setState(0xa164, 0x692, 0xc850, 0x7ff1, 0x9fd1, 0x6d59, 0x1, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x692);
        EXPECT(gbc.pc(), 0xa166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa164), 0xcb);
        EXPECT(gbc.readMem(0xa165), 0x2);
        // CB 02 0131
        gbc.setState(0x897d, 0xb06a, 0xeb90, 0x8b5d, 0x79c9, 0x79c, 0x0, 0x1);
        gbc.writeMem(0x897d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb06a);
        EXPECT(gbc.pc(), 0x897f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897d), 0xcb);
        EXPECT(gbc.readMem(0x897e), 0x2);
        // CB 02 0132
        gbc.setState(0xde3b, 0x5ba6, 0x34c0, 0x2c5f, 0x9f30, 0xa64c, 0x0, 0x1);
        gbc.writeMem(0xde3b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5ba6);
        EXPECT(gbc.pc(), 0xde3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3b), 0xcb);
        EXPECT(gbc.readMem(0xde3c), 0x2);
        // CB 02 0133
        gbc.setState(0x7716, 0xa0, 0xf400, 0xbbf, 0x92a5, 0x96e7, 0x1, 0x0);
        gbc.writeMem(0x7716, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa0);
        EXPECT(gbc.pc(), 0x7718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0134
        gbc.setState(0x9ccc, 0x6a11, 0xa7f0, 0xe4e4, 0x4a31, 0xc43f, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6a11);
        EXPECT(gbc.pc(), 0x9cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccc), 0xcb);
        EXPECT(gbc.readMem(0x9ccd), 0x2);
        // CB 02 0135
        gbc.setState(0xcc9, 0x3471, 0xdad0, 0xb39d, 0xc1d0, 0xbe98, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3471);
        EXPECT(gbc.pc(), 0xccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0136
        gbc.setState(0x4b6c, 0x643d, 0x9650, 0x7e02, 0xd626, 0x1989, 0x0, 0x1);
        gbc.writeMem(0x4b6c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0x4b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0137
        gbc.setState(0x8195, 0x2042, 0x3070, 0x5dd8, 0x2631, 0xf649, 0x1, 0x0);
        gbc.writeMem(0x8195, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2042);
        EXPECT(gbc.pc(), 0x8197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8195), 0xcb);
        EXPECT(gbc.readMem(0x8196), 0x2);
        // CB 02 0138
        gbc.setState(0x171b, 0xdab8, 0xc240, 0x8380, 0x676b, 0xcfe9, 0x1, 0x0);
        gbc.writeMem(0x171b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdab8);
        EXPECT(gbc.pc(), 0x171d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0139
        gbc.setState(0x8541, 0x5443, 0xc250, 0xe172, 0xbc8b, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x8541, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5443);
        EXPECT(gbc.pc(), 0x8543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8541), 0xcb);
        EXPECT(gbc.readMem(0x8542), 0x2);
        // CB 02 013A
        gbc.setState(0x642e, 0x85e4, 0x6c40, 0x3d5b, 0x5542, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x642e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x85e4);
        EXPECT(gbc.pc(), 0x6430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 013C
        gbc.setState(0xc74e, 0x517e, 0xb230, 0x8b43, 0x85f5, 0xfe1a, 0x1, 0x1);
        gbc.writeMem(0xc74e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x517e);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74e), 0xcb);
        EXPECT(gbc.readMem(0xc74f), 0x2);
        // CB 02 013D
        gbc.setState(0x7780, 0xc18, 0xf4f0, 0x403f, 0xacfb, 0x3d00, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc18);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 013E
        gbc.setState(0x7677, 0x35a6, 0xce0, 0x3db2, 0x9fa2, 0x1c0a, 0x0, 0x0);
        gbc.writeMem(0x7677, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x35a6);
        EXPECT(gbc.pc(), 0x7679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 013F
        gbc.setState(0xce76, 0x8ba1, 0x97e0, 0x69fb, 0xaba8, 0x4bd, 0x0, 0x0);
        gbc.writeMem(0xce76, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8ba1);
        EXPECT(gbc.pc(), 0xce78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce76), 0xcb);
        EXPECT(gbc.readMem(0xce77), 0x2);
        // CB 02 0140
        gbc.setState(0x1191, 0xda22, 0xcc00, 0x8705, 0xce3, 0xaa33, 0x1, 0x0);
        gbc.writeMem(0x1191, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xda22);
        EXPECT(gbc.pc(), 0x1193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0141
        gbc.setState(0x3ebb, 0xff30, 0x4f30, 0x8d23, 0xa73f, 0x275a, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff30);
        EXPECT(gbc.pc(), 0x3ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0143
        gbc.setState(0x8f6e, 0x1935, 0xaa60, 0x64d1, 0x6291, 0x7c32, 0x0, 0x1);
        gbc.writeMem(0x8f6e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1935);
        EXPECT(gbc.pc(), 0x8f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6e), 0xcb);
        EXPECT(gbc.readMem(0x8f6f), 0x2);
        // CB 02 0144
        gbc.setState(0x78b5, 0x4c6d, 0x3cc0, 0xba48, 0xa609, 0x6309, 0x1, 0x1);
        gbc.writeMem(0x78b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4c6d);
        EXPECT(gbc.pc(), 0x78b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0145
        gbc.setState(0xe48c, 0x6225, 0x4790, 0x89b9, 0xb5b8, 0x95ed, 0x0, 0x1);
        gbc.writeMem(0xe48c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6225);
        EXPECT(gbc.pc(), 0xe48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48c), 0xcb);
        EXPECT(gbc.readMem(0xe48d), 0x2);
        // CB 02 0146
        gbc.setState(0xd1d1, 0x778b, 0xea10, 0x21ff, 0x30f2, 0x7789, 0x0, 0x0);
        gbc.writeMem(0xd1d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x778b);
        EXPECT(gbc.pc(), 0xd1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d1), 0xcb);
        EXPECT(gbc.readMem(0xd1d2), 0x2);
        // CB 02 0147
        gbc.setState(0x68da, 0x53a3, 0x4c20, 0x4c9a, 0x598e, 0xcb10, 0x0, 0x1);
        gbc.writeMem(0x68da, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0x68dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0148
        gbc.setState(0x2342, 0xfd22, 0x8a00, 0xc770, 0x893d, 0xf58f, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfd22);
        EXPECT(gbc.pc(), 0x2344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0149
        gbc.setState(0xecf5, 0x6df5, 0x9dd0, 0x3c49, 0x1875, 0x57c9, 0x1, 0x1);
        gbc.writeMem(0xecf5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6df5);
        EXPECT(gbc.pc(), 0xecf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf5), 0xcb);
        EXPECT(gbc.readMem(0xecf6), 0x2);
        // CB 02 014A
        gbc.setState(0xec3f, 0x3218, 0xe760, 0x2331, 0x45e9, 0xe28c, 0x1, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3218);
        EXPECT(gbc.pc(), 0xec41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3f), 0xcb);
        EXPECT(gbc.readMem(0xec40), 0x2);
        // CB 02 014B
        gbc.setState(0x7459, 0x498c, 0xb3b0, 0xd82, 0xa3d5, 0xbf43, 0x0, 0x0);
        gbc.writeMem(0x7459, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x498c);
        EXPECT(gbc.pc(), 0x745b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 014C
        gbc.setState(0xc56, 0x207b, 0x250, 0xfc7b, 0x59da, 0xc986, 0x1, 0x0);
        gbc.writeMem(0xc56, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x207b);
        EXPECT(gbc.pc(), 0xc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 014D
        gbc.setState(0xe10b, 0x203e, 0x3bd0, 0xbe85, 0x6670, 0xb13b, 0x0, 0x0);
        gbc.writeMem(0xe10b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0xe10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe10b), 0xcb);
        EXPECT(gbc.readMem(0xe10c), 0x2);
        // CB 02 014E
        gbc.setState(0xc6e4, 0xec25, 0x3620, 0xf709, 0xce37, 0xb6ae, 0x0, 0x0);
        gbc.writeMem(0xc6e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xec25);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e4), 0xcb);
        EXPECT(gbc.readMem(0xc6e5), 0x2);
        // CB 02 014F
        gbc.setState(0x661e, 0x7375, 0x69a0, 0x1b8e, 0x36f2, 0x67c7, 0x1, 0x1);
        gbc.writeMem(0x661e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7375);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0150
        gbc.setState(0x19e7, 0x5001, 0x9800, 0xb833, 0xc584, 0xab80, 0x1, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5001);
        EXPECT(gbc.pc(), 0x19e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0151
        gbc.setState(0xe420, 0x9b15, 0x24e0, 0xaa81, 0x4b7, 0xc015, 0x1, 0x1);
        gbc.writeMem(0xe420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9b15);
        EXPECT(gbc.pc(), 0xe422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe420), 0xcb);
        EXPECT(gbc.readMem(0xe421), 0x2);
        // CB 02 0152
        gbc.setState(0x67db, 0x3930, 0x9f10, 0xbfc9, 0xd14e, 0xdc31, 0x0, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3930);
        EXPECT(gbc.pc(), 0x67dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0153
        gbc.setState(0x75c9, 0xb59a, 0xb030, 0xcfd, 0x842d, 0xe1f3, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb59a);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0154
        gbc.setState(0x17c5, 0x9c51, 0x1d20, 0x8956, 0xe259, 0xedee, 0x0, 0x0);
        gbc.writeMem(0x17c5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9c51);
        EXPECT(gbc.pc(), 0x17c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0155
        gbc.setState(0xe15, 0x5e3a, 0x7f00, 0xbf6, 0x9e0c, 0x93f1, 0x0, 0x0);
        gbc.writeMem(0xe15, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5e3a);
        EXPECT(gbc.pc(), 0xe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0156
        gbc.setState(0xb79f, 0x2aa8, 0xc190, 0x9ae4, 0xbb5f, 0x8869, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2aa8);
        EXPECT(gbc.pc(), 0xb7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79f), 0xcb);
        EXPECT(gbc.readMem(0xb7a0), 0x2);
        // CB 02 0157
        gbc.setState(0x132c, 0x9f77, 0xf1f0, 0x4ac3, 0x2627, 0x7b9c, 0x1, 0x0);
        gbc.writeMem(0x132c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9f77);
        EXPECT(gbc.pc(), 0x132e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0158
        gbc.setState(0x8fa3, 0x6ea8, 0x1a30, 0x82b4, 0x220, 0xaff8, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6ea8);
        EXPECT(gbc.pc(), 0x8fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa3), 0xcb);
        EXPECT(gbc.readMem(0x8fa4), 0x2);
        // CB 02 0159
        gbc.setState(0x762a, 0x3b3c, 0x3970, 0x67f, 0xacf3, 0x51f, 0x0, 0x1);
        gbc.writeMem(0x762a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3b3c);
        EXPECT(gbc.pc(), 0x762c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 015A
        gbc.setState(0x697f, 0x811d, 0x5150, 0xab72, 0xd1fb, 0xb759, 0x0, 0x0);
        gbc.writeMem(0x697f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x811d);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 015B
        gbc.setState(0x8650, 0xada1, 0x200, 0xa2a5, 0x36dc, 0xc037, 0x0, 0x0);
        gbc.writeMem(0x8650, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xada1);
        EXPECT(gbc.pc(), 0x8652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8650), 0xcb);
        EXPECT(gbc.readMem(0x8651), 0x2);
        // CB 02 015C
        gbc.setState(0x5910, 0xaaec, 0xeeb0, 0xa811, 0x1eb3, 0xa2a6, 0x0, 0x0);
        gbc.writeMem(0x5910, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaaec);
        EXPECT(gbc.pc(), 0x5912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 015D
        gbc.setState(0xa400, 0x6d2e, 0x40, 0x8c4a, 0x77fa, 0x246c, 0x1, 0x1);
        gbc.writeMem(0xa400, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6d2e);
        EXPECT(gbc.pc(), 0xa402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa400), 0xcb);
        EXPECT(gbc.readMem(0xa401), 0x2);
        // CB 02 015E
        gbc.setState(0x13f, 0x8912, 0x79a0, 0xf967, 0x17fe, 0x253e, 0x1, 0x1);
        gbc.writeMem(0x13f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8912);
        EXPECT(gbc.pc(), 0x141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 015F
        gbc.setState(0x946f, 0x1352, 0x7b50, 0x7fa1, 0x384b, 0x1b9c, 0x0, 0x0);
        gbc.writeMem(0x946f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1352);
        EXPECT(gbc.pc(), 0x9471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946f), 0xcb);
        EXPECT(gbc.readMem(0x9470), 0x2);
        // CB 02 0160
        gbc.setState(0x334e, 0xa88b, 0x7590, 0x7204, 0x80c0, 0x851c, 0x0, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa88b);
        EXPECT(gbc.pc(), 0x3350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0162
        gbc.setState(0x61b5, 0x8577, 0xdb30, 0xa45, 0x157, 0xc866, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8577);
        EXPECT(gbc.pc(), 0x61b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0163
        gbc.setState(0xb344, 0xa1d3, 0x6520, 0xdeff, 0x2b0, 0xe2b1, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa1d3);
        EXPECT(gbc.pc(), 0xb346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb344), 0xcb);
        EXPECT(gbc.readMem(0xb345), 0x2);
        // CB 02 0164
        gbc.setState(0x4c30, 0xc3d7, 0x2540, 0x176b, 0x360c, 0x6712, 0x0, 0x0);
        gbc.writeMem(0x4c30, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc3d7);
        EXPECT(gbc.pc(), 0x4c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0165
        gbc.setState(0x9443, 0xfd5f, 0x3550, 0xb945, 0xc46b, 0xe268, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfd5f);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0x2);
        // CB 02 0166
        gbc.setState(0x155, 0x7d2c, 0x92b0, 0xb958, 0x93ef, 0xe2f9, 0x1, 0x0);
        gbc.writeMem(0x155, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7d2c);
        EXPECT(gbc.pc(), 0x157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0168
        gbc.setState(0x9988, 0x8493, 0x4ae0, 0xefa3, 0x85b3, 0xc1e, 0x0, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8493);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9988), 0xcb);
        EXPECT(gbc.readMem(0x9989), 0x2);
        // CB 02 016A
        gbc.setState(0x3673, 0x5e90, 0x58e0, 0x7335, 0x17ec, 0xf527, 0x0, 0x1);
        gbc.writeMem(0x3673, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5e90);
        EXPECT(gbc.pc(), 0x3675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 016C
        gbc.setState(0xbbc8, 0x67ed, 0xa120, 0x80b9, 0xc2a4, 0xd75c, 0x1, 0x1);
        gbc.writeMem(0xbbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x67ed);
        EXPECT(gbc.pc(), 0xbbca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc8), 0xcb);
        EXPECT(gbc.readMem(0xbbc9), 0x2);
        // CB 02 016D
        gbc.setState(0x9657, 0x3a9d, 0x6d00, 0xc5c9, 0xf011, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0x9657, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3a9d);
        EXPECT(gbc.pc(), 0x9659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9657), 0xcb);
        EXPECT(gbc.readMem(0x9658), 0x2);
        // CB 02 016E
        gbc.setState(0x82ac, 0x22e7, 0x1610, 0x88a2, 0x90cb, 0x70f3, 0x1, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x22e7);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ac), 0xcb);
        EXPECT(gbc.readMem(0x82ad), 0x2);
        // CB 02 016F
        gbc.setState(0x4dcc, 0xb6ed, 0x2c20, 0xaa6, 0xbd62, 0x8c0c, 0x0, 0x0);
        gbc.writeMem(0x4dcc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb6ed);
        EXPECT(gbc.pc(), 0x4dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0170
        gbc.setState(0xa6d3, 0xaf49, 0x3d80, 0x744, 0x1604, 0xbf10, 0x1, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaf49);
        EXPECT(gbc.pc(), 0xa6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d3), 0xcb);
        EXPECT(gbc.readMem(0xa6d4), 0x2);
        // CB 02 0172
        gbc.setState(0x28d2, 0x12b5, 0x9780, 0x9263, 0xad0a, 0xcd2e, 0x0, 0x1);
        gbc.writeMem(0x28d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x12b5);
        EXPECT(gbc.pc(), 0x28d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0173
        gbc.setState(0x836e, 0x51eb, 0x9f80, 0xe7ac, 0x50d9, 0x5d5c, 0x0, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x51eb);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836e), 0xcb);
        EXPECT(gbc.readMem(0x836f), 0x2);
        // CB 02 0174
        gbc.setState(0xbbc8, 0xa1fe, 0xab10, 0x7ec9, 0xaa3e, 0xda53, 0x0, 0x0);
        gbc.writeMem(0xbbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa1fe);
        EXPECT(gbc.pc(), 0xbbca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc8), 0xcb);
        EXPECT(gbc.readMem(0xbbc9), 0x2);
        // CB 02 0175
        gbc.setState(0x1d8e, 0x113f, 0x7fd0, 0xefce, 0x367f, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x1d8e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x113f);
        EXPECT(gbc.pc(), 0x1d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0176
        gbc.setState(0x4a0a, 0x182f, 0xc270, 0x5b22, 0x6fc3, 0x828a, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x182f);
        EXPECT(gbc.pc(), 0x4a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0177
        gbc.setState(0xdebd, 0xbf94, 0x4f30, 0x30ac, 0x5857, 0x36ff, 0x1, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbf94);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebd), 0xcb);
        EXPECT(gbc.readMem(0xdebe), 0x2);
        // CB 02 0178
        gbc.setState(0x83df, 0x8c7d, 0x36b0, 0xac41, 0xc6b1, 0xfce4, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0x83e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83df), 0xcb);
        EXPECT(gbc.readMem(0x83e0), 0x2);
        // CB 02 0179
        gbc.setState(0x6edb, 0x7b80, 0x5df0, 0x9794, 0xa81c, 0x3784, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7b80);
        EXPECT(gbc.pc(), 0x6edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 017A
        gbc.setState(0x5628, 0x1469, 0x4b30, 0xf2ff, 0x4559, 0x9a79, 0x0, 0x0);
        gbc.writeMem(0x5628, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1469);
        EXPECT(gbc.pc(), 0x562a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 017B
        gbc.setState(0x8735, 0x8833, 0xd440, 0x2697, 0x1186, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x8735, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8833);
        EXPECT(gbc.pc(), 0x8737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8735), 0xcb);
        EXPECT(gbc.readMem(0x8736), 0x2);
        // CB 02 017C
        gbc.setState(0x7e90, 0x358b, 0x7e80, 0x7ed1, 0x63ae, 0x5ba1, 0x0, 0x1);
        gbc.writeMem(0x7e90, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x358b);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 017E
        gbc.setState(0xd906, 0x2a55, 0xba50, 0x1630, 0x80a4, 0xb909, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2a55);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd906), 0xcb);
        EXPECT(gbc.readMem(0xd907), 0x2);
        // CB 02 017F
        gbc.setState(0xa968, 0x95bd, 0x7730, 0xef96, 0xcd75, 0x9524, 0x1, 0x0);
        gbc.writeMem(0xa968, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x95bd);
        EXPECT(gbc.pc(), 0xa96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa968), 0xcb);
        EXPECT(gbc.readMem(0xa969), 0x2);
        // CB 02 0180
        gbc.setState(0x81a6, 0x6726, 0x9420, 0xfac7, 0x59c4, 0xeb59, 0x1, 0x1);
        gbc.writeMem(0x81a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6726);
        EXPECT(gbc.pc(), 0x81a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a6), 0xcb);
        EXPECT(gbc.readMem(0x81a7), 0x2);
        // CB 02 0181
        gbc.setState(0xcba4, 0x42ae, 0xe220, 0x2b2, 0xa1e7, 0x9140, 0x1, 0x0);
        gbc.writeMem(0xcba4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x42ae);
        EXPECT(gbc.pc(), 0xcba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba4), 0xcb);
        EXPECT(gbc.readMem(0xcba5), 0x2);
        // CB 02 0182
        gbc.setState(0x2a40, 0x945, 0x3580, 0x84a3, 0xcae9, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0x2a40, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x945);
        EXPECT(gbc.pc(), 0x2a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0183
        gbc.setState(0x386d, 0x9091, 0xd870, 0x9d6a, 0x53b4, 0x7579, 0x0, 0x1);
        gbc.writeMem(0x386d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9091);
        EXPECT(gbc.pc(), 0x386f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0184
        gbc.setState(0x741e, 0x2fc3, 0x8eb0, 0x152e, 0xe2f5, 0x3fe, 0x1, 0x1);
        gbc.writeMem(0x741e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2fc3);
        EXPECT(gbc.pc(), 0x7420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0185
        gbc.setState(0xcb9a, 0xf6ea, 0xa710, 0x5dcd, 0x475d, 0x712a, 0x0, 0x0);
        gbc.writeMem(0xcb9a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf6ea);
        EXPECT(gbc.pc(), 0xcb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9a), 0xcb);
        EXPECT(gbc.readMem(0xcb9b), 0x2);
        // CB 02 0186
        gbc.setState(0xbf58, 0x6093, 0xb1a0, 0xf020, 0xd49f, 0x4f3, 0x1, 0x0);
        gbc.writeMem(0xbf58, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6093);
        EXPECT(gbc.pc(), 0xbf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf58), 0xcb);
        EXPECT(gbc.readMem(0xbf59), 0x2);
        // CB 02 0187
        gbc.setState(0x4e7c, 0xa0f8, 0x9c00, 0x759b, 0x48c0, 0xbf5f, 0x0, 0x1);
        gbc.writeMem(0x4e7c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa0f8);
        EXPECT(gbc.pc(), 0x4e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0188
        gbc.setState(0xe4d0, 0xd245, 0x4930, 0x3f75, 0xfb7a, 0xed0d, 0x0, 0x0);
        gbc.writeMem(0xe4d0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd245);
        EXPECT(gbc.pc(), 0xe4d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d0), 0xcb);
        EXPECT(gbc.readMem(0xe4d1), 0x2);
        // CB 02 0189
        gbc.setState(0x2f53, 0x428c, 0xd920, 0x992f, 0x16eb, 0x2292, 0x1, 0x0);
        gbc.writeMem(0x2f53, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x428c);
        EXPECT(gbc.pc(), 0x2f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 018A
        gbc.setState(0x9b99, 0xf671, 0xadf0, 0x37ae, 0xf943, 0x68c7, 0x1, 0x1);
        gbc.writeMem(0x9b99, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf671);
        EXPECT(gbc.pc(), 0x9b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b99), 0xcb);
        EXPECT(gbc.readMem(0x9b9a), 0x2);
        // CB 02 018B
        gbc.setState(0x3be3, 0xc9c6, 0xd4d0, 0x46e0, 0xda9a, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x3be3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc9c6);
        EXPECT(gbc.pc(), 0x3be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 018C
        gbc.setState(0xc39d, 0x5211, 0xc490, 0x2238, 0x63f3, 0x5023, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5211);
        EXPECT(gbc.pc(), 0xc39f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39d), 0xcb);
        EXPECT(gbc.readMem(0xc39e), 0x2);
        // CB 02 018D
        gbc.setState(0x29e9, 0xf37, 0xa120, 0x4038, 0xbfa5, 0x5943, 0x0, 0x0);
        gbc.writeMem(0x29e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf37);
        EXPECT(gbc.pc(), 0x29eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 018E
        gbc.setState(0x6e8b, 0xb5b2, 0xd0, 0x47f3, 0xc13, 0x3b60, 0x1, 0x1);
        gbc.writeMem(0x6e8b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb5b2);
        EXPECT(gbc.pc(), 0x6e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 018F
        gbc.setState(0x6314, 0xa90b, 0x9030, 0xd41c, 0x151f, 0xe222, 0x0, 0x1);
        gbc.writeMem(0x6314, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa90b);
        EXPECT(gbc.pc(), 0x6316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0191
        gbc.setState(0xc584, 0x5f83, 0x7250, 0x29dd, 0x3664, 0x375e, 0x0, 0x0);
        gbc.writeMem(0xc584, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5f83);
        EXPECT(gbc.pc(), 0xc586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc584), 0xcb);
        EXPECT(gbc.readMem(0xc585), 0x2);
        // CB 02 0192
        gbc.setState(0x4b25, 0x1de3, 0xf7c0, 0x8393, 0x9edc, 0x3561, 0x0, 0x1);
        gbc.writeMem(0x4b25, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1de3);
        EXPECT(gbc.pc(), 0x4b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0193
        gbc.setState(0x555a, 0x1443, 0x3790, 0xa294, 0xf57f, 0x2d5f, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1443);
        EXPECT(gbc.pc(), 0x555c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0194
        gbc.setState(0xa340, 0x25ce, 0x4dd0, 0xe342, 0x81fa, 0x93c0, 0x1, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x25ce);
        EXPECT(gbc.pc(), 0xa342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa340), 0xcb);
        EXPECT(gbc.readMem(0xa341), 0x2);
        // CB 02 0195
        gbc.setState(0x97ef, 0x1d64, 0x4530, 0x807f, 0x5627, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0x97ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1d64);
        EXPECT(gbc.pc(), 0x97f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ef), 0xcb);
        EXPECT(gbc.readMem(0x97f0), 0x2);
        // CB 02 0196
        gbc.setState(0x287c, 0x6f15, 0x80b0, 0x1021, 0x1888, 0x78ad, 0x1, 0x0);
        gbc.writeMem(0x287c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6f15);
        EXPECT(gbc.pc(), 0x287e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0197
        gbc.setState(0xe15a, 0xb510, 0xa850, 0xca94, 0x3097, 0x2cea, 0x1, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb510);
        EXPECT(gbc.pc(), 0xe15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15a), 0xcb);
        EXPECT(gbc.readMem(0xe15b), 0x2);
        // CB 02 0199
        gbc.setState(0x6485, 0x47a1, 0xa0e0, 0xa13d, 0xc2d6, 0x3d5c, 0x0, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x47a1);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 019A
        gbc.setState(0x20c3, 0x2dff, 0x1780, 0x35a8, 0x6a38, 0xf07a, 0x1, 0x0);
        gbc.writeMem(0x20c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2dff);
        EXPECT(gbc.pc(), 0x20c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 019B
        gbc.setState(0x96a7, 0x9964, 0x2cd0, 0x4839, 0x6bfa, 0xf281, 0x0, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9964);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a7), 0xcb);
        EXPECT(gbc.readMem(0x96a8), 0x2);
        // CB 02 019C
        gbc.setState(0xbe6a, 0x359b, 0x74d0, 0x2e7a, 0xda5d, 0x2eff, 0x0, 0x0);
        gbc.writeMem(0xbe6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x359b);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6a), 0xcb);
        EXPECT(gbc.readMem(0xbe6b), 0x2);
        // CB 02 019D
        gbc.setState(0x1e4f, 0x116c, 0x7d60, 0x3ff4, 0x2a84, 0xa263, 0x1, 0x1);
        gbc.writeMem(0x1e4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0x1e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 019E
        gbc.setState(0x5f3a, 0xb841, 0x7a80, 0xe9f6, 0xe83f, 0xfaed, 0x0, 0x0);
        gbc.writeMem(0x5f3a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb841);
        EXPECT(gbc.pc(), 0x5f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 019F
        gbc.setState(0xdcda, 0xe129, 0xaec0, 0x71fa, 0x75af, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0xdcda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe129);
        EXPECT(gbc.pc(), 0xdcdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcda), 0xcb);
        EXPECT(gbc.readMem(0xdcdb), 0x2);
        // CB 02 01A0
        gbc.setState(0x45e1, 0xde5d, 0xb190, 0x6cb9, 0xaf24, 0x55a, 0x1, 0x0);
        gbc.writeMem(0x45e1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xde5d);
        EXPECT(gbc.pc(), 0x45e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01A1
        gbc.setState(0x9669, 0x79d1, 0x3de0, 0x41fe, 0x6f62, 0x8f97, 0x0, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x79d1);
        EXPECT(gbc.pc(), 0x966b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9669), 0xcb);
        EXPECT(gbc.readMem(0x966a), 0x2);
        // CB 02 01A2
        gbc.setState(0x8314, 0x82e9, 0xa70, 0xe237, 0xc8c4, 0x7d75, 0x0, 0x0);
        gbc.writeMem(0x8314, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x82e9);
        EXPECT(gbc.pc(), 0x8316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8314), 0xcb);
        EXPECT(gbc.readMem(0x8315), 0x2);
        // CB 02 01A3
        gbc.setState(0xd918, 0xe95e, 0xb8d0, 0x626d, 0xe240, 0xbc86, 0x0, 0x0);
        gbc.writeMem(0xd918, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe95e);
        EXPECT(gbc.pc(), 0xd91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd918), 0xcb);
        EXPECT(gbc.readMem(0xd919), 0x2);
        // CB 02 01A4
        gbc.setState(0x6b7, 0xbc41, 0x180, 0xffa7, 0x63aa, 0x7992, 0x0, 0x0);
        gbc.writeMem(0x6b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbc41);
        EXPECT(gbc.pc(), 0x6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01A5
        gbc.setState(0x6a2f, 0x7239, 0x2f70, 0x1351, 0xe5cf, 0xbd93, 0x0, 0x1);
        gbc.writeMem(0x6a2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7239);
        EXPECT(gbc.pc(), 0x6a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01A6
        gbc.setState(0x73b0, 0xba95, 0x3450, 0x898d, 0x44ff, 0x7402, 0x1, 0x0);
        gbc.writeMem(0x73b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xba95);
        EXPECT(gbc.pc(), 0x73b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01A7
        gbc.setState(0x7139, 0x9d73, 0x38e0, 0x61c5, 0x974f, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0x7139, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9d73);
        EXPECT(gbc.pc(), 0x713b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01A8
        gbc.setState(0xe6fa, 0x4683, 0x4270, 0xee5, 0x94ac, 0xdc7d, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4683);
        EXPECT(gbc.pc(), 0xe6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fa), 0xcb);
        EXPECT(gbc.readMem(0xe6fb), 0x2);
        // CB 02 01A9
        gbc.setState(0x2301, 0xd190, 0xfcb0, 0x3957, 0xfa16, 0xd100, 0x0, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd190);
        EXPECT(gbc.pc(), 0x2303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01AA
        gbc.setState(0x118d, 0xc747, 0xb3b0, 0xe85, 0xc63f, 0x3f3d, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc747);
        EXPECT(gbc.pc(), 0x118f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01AB
        gbc.setState(0xcd98, 0x6a25, 0x9650, 0xa53c, 0x4ef8, 0xa84e, 0x0, 0x1);
        gbc.writeMem(0xcd98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6a25);
        EXPECT(gbc.pc(), 0xcd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd98), 0xcb);
        EXPECT(gbc.readMem(0xcd99), 0x2);
        // CB 02 01AC
        gbc.setState(0xb43c, 0x4913, 0xa0d0, 0xa6a, 0x95ef, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0xb43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4913);
        EXPECT(gbc.pc(), 0xb43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43c), 0xcb);
        EXPECT(gbc.readMem(0xb43d), 0x2);
        // CB 02 01AD
        gbc.setState(0x913c, 0x3b39, 0x99c0, 0x364, 0xb6c4, 0xcd91, 0x0, 0x0);
        gbc.writeMem(0x913c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3b39);
        EXPECT(gbc.pc(), 0x913e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913c), 0xcb);
        EXPECT(gbc.readMem(0x913d), 0x2);
        // CB 02 01B0
        gbc.setState(0x5a04, 0xb2ae, 0x5220, 0x8968, 0xed76, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x5a04, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb2ae);
        EXPECT(gbc.pc(), 0x5a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01B1
        gbc.setState(0x7788, 0x327, 0xe090, 0x6592, 0x7fc7, 0xe08d, 0x0, 0x1);
        gbc.writeMem(0x7788, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x327);
        EXPECT(gbc.pc(), 0x778a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01B2
        gbc.setState(0x174b, 0x6849, 0x3ec0, 0x6b51, 0x8149, 0xec03, 0x1, 0x0);
        gbc.writeMem(0x174b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6849);
        EXPECT(gbc.pc(), 0x174d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01B3
        gbc.setState(0xd3c3, 0x9cec, 0x4ba0, 0x34dc, 0xa90b, 0xe9b9, 0x1, 0x0);
        gbc.writeMem(0xd3c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9cec);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0x2);
        // CB 02 01B4
        gbc.setState(0x250b, 0x5b38, 0x7c20, 0xb263, 0x59, 0x65f4, 0x0, 0x0);
        gbc.writeMem(0x250b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5b38);
        EXPECT(gbc.pc(), 0x250d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01B5
        gbc.setState(0x8939, 0xdfd3, 0x5a60, 0xf324, 0x5cb9, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x8939, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdfd3);
        EXPECT(gbc.pc(), 0x893b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8939), 0xcb);
        EXPECT(gbc.readMem(0x893a), 0x2);
        // CB 02 01B7
        gbc.setState(0xeea7, 0x2754, 0x4660, 0xcce6, 0x855b, 0x4cd5, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2754);
        EXPECT(gbc.pc(), 0xeea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea7), 0xcb);
        EXPECT(gbc.readMem(0xeea8), 0x2);
        // CB 02 01BA
        gbc.setState(0x61d7, 0xc718, 0x10d0, 0xc6b3, 0x549b, 0x5d4, 0x0, 0x1);
        gbc.writeMem(0x61d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc718);
        EXPECT(gbc.pc(), 0x61d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01BB
        gbc.setState(0xebbe, 0x4500, 0xf1f0, 0xb7d7, 0xb199, 0x7df4, 0x0, 0x1);
        gbc.writeMem(0xebbe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4500);
        EXPECT(gbc.pc(), 0xebc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbe), 0xcb);
        EXPECT(gbc.readMem(0xebbf), 0x2);
        // CB 02 01BC
        gbc.setState(0x7629, 0xb020, 0xa450, 0xd21e, 0x3233, 0x64ad, 0x0, 0x1);
        gbc.writeMem(0x7629, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb020);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01BD
        gbc.setState(0x5e7f, 0xabcd, 0xd000, 0x5e0e, 0x209c, 0x9c25, 0x1, 0x1);
        gbc.writeMem(0x5e7f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xabcd);
        EXPECT(gbc.pc(), 0x5e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01BE
        gbc.setState(0xbecc, 0xa41a, 0x3480, 0xb13f, 0x91ac, 0x9b82, 0x1, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa41a);
        EXPECT(gbc.pc(), 0xbece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecc), 0xcb);
        EXPECT(gbc.readMem(0xbecd), 0x2);
        // CB 02 01BF
        gbc.setState(0x9b31, 0x9ffd, 0xa4f0, 0xda7, 0x5f79, 0x5f7a, 0x0, 0x1);
        gbc.writeMem(0x9b31, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0x9b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b31), 0xcb);
        EXPECT(gbc.readMem(0x9b32), 0x2);
        // CB 02 01C0
        gbc.setState(0xc39a, 0x68, 0x5ea0, 0x1fc3, 0xad97, 0x796e, 0x1, 0x0);
        gbc.writeMem(0xc39a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x68);
        EXPECT(gbc.pc(), 0xc39c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39a), 0xcb);
        EXPECT(gbc.readMem(0xc39b), 0x2);
        // CB 02 01C1
        gbc.setState(0x7b1c, 0xe6b3, 0xcf80, 0x61dc, 0xa630, 0xe522, 0x0, 0x1);
        gbc.writeMem(0x7b1c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe6b3);
        EXPECT(gbc.pc(), 0x7b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01C2
        gbc.setState(0x643e, 0x8706, 0x9010, 0xc09f, 0xc7c3, 0x5dfc, 0x0, 0x1);
        gbc.writeMem(0x643e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8706);
        EXPECT(gbc.pc(), 0x6440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01C3
        gbc.setState(0x6921, 0x9fd2, 0x6150, 0x462e, 0x8a8f, 0x49dc, 0x0, 0x0);
        gbc.writeMem(0x6921, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9fd2);
        EXPECT(gbc.pc(), 0x6923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01C4
        gbc.setState(0x2f1a, 0x97, 0xc60, 0x499d, 0x7820, 0x6b6a, 0x1, 0x1);
        gbc.writeMem(0x2f1a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x97);
        EXPECT(gbc.pc(), 0x2f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01C5
        gbc.setState(0xb9f0, 0xd19b, 0xd840, 0xf3d0, 0x92c5, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0xb9f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd19b);
        EXPECT(gbc.pc(), 0xb9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f0), 0xcb);
        EXPECT(gbc.readMem(0xb9f1), 0x2);
        // CB 02 01C6
        gbc.setState(0xeee9, 0x62f7, 0xd20, 0x3157, 0xd2ef, 0xc797, 0x0, 0x0);
        gbc.writeMem(0xeee9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x62f7);
        EXPECT(gbc.pc(), 0xeeeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee9), 0xcb);
        EXPECT(gbc.readMem(0xeeea), 0x2);
        // CB 02 01C7
        gbc.setState(0x4cfc, 0xb0ce, 0xeb10, 0xd1d8, 0x8712, 0x6be6, 0x1, 0x0);
        gbc.writeMem(0x4cfc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb0ce);
        EXPECT(gbc.pc(), 0x4cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01C8
        gbc.setState(0xc401, 0x2f4a, 0xbbf0, 0x16ba, 0x5cb9, 0x62bf, 0x1, 0x1);
        gbc.writeMem(0xc401, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2f4a);
        EXPECT(gbc.pc(), 0xc403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc401), 0xcb);
        EXPECT(gbc.readMem(0xc402), 0x2);
        // CB 02 01C9
        gbc.setState(0x934b, 0xc717, 0x39b0, 0x68b2, 0xb5f0, 0xbc16, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc717);
        EXPECT(gbc.pc(), 0x934d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934b), 0xcb);
        EXPECT(gbc.readMem(0x934c), 0x2);
        // CB 02 01CA
        gbc.setState(0xb5f1, 0x6766, 0xc2b0, 0x2ca, 0x29de, 0x2505, 0x1, 0x0);
        gbc.writeMem(0xb5f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6766);
        EXPECT(gbc.pc(), 0xb5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f1), 0xcb);
        EXPECT(gbc.readMem(0xb5f2), 0x2);
        // CB 02 01CC
        gbc.setState(0x9e7f, 0xea43, 0xd890, 0x7cf1, 0x23a9, 0x60cb, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xea43);
        EXPECT(gbc.pc(), 0x9e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7f), 0xcb);
        EXPECT(gbc.readMem(0x9e80), 0x2);
        // CB 02 01CD
        gbc.setState(0x4541, 0x4f33, 0xdd90, 0x4053, 0x403e, 0x10f1, 0x0, 0x1);
        gbc.writeMem(0x4541, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4f33);
        EXPECT(gbc.pc(), 0x4543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01CE
        gbc.setState(0x7b6, 0x4518, 0xca80, 0xd6c3, 0x1e84, 0x5fcc, 0x0, 0x1);
        gbc.writeMem(0x7b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4518);
        EXPECT(gbc.pc(), 0x7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01CF
        gbc.setState(0xc14e, 0x22f6, 0x7950, 0x953a, 0x424c, 0xcacb, 0x0, 0x1);
        gbc.writeMem(0xc14e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x22f6);
        EXPECT(gbc.pc(), 0xc150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14e), 0xcb);
        EXPECT(gbc.readMem(0xc14f), 0x2);
        // CB 02 01D0
        gbc.setState(0x3be3, 0x407f, 0x990, 0xd980, 0x6ee5, 0x9317, 0x1, 0x1);
        gbc.writeMem(0x3be3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x407f);
        EXPECT(gbc.pc(), 0x3be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01D1
        gbc.setState(0xe5f8, 0x242a, 0x90b0, 0xaf, 0x3a7, 0x33c3, 0x0, 0x1);
        gbc.writeMem(0xe5f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x242a);
        EXPECT(gbc.pc(), 0xe5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f8), 0xcb);
        EXPECT(gbc.readMem(0xe5f9), 0x2);
        // CB 02 01D2
        gbc.setState(0xa175, 0xf7b4, 0x3190, 0xf9c9, 0xea28, 0x14d4, 0x1, 0x0);
        gbc.writeMem(0xa175, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf7b4);
        EXPECT(gbc.pc(), 0xa177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa175), 0xcb);
        EXPECT(gbc.readMem(0xa176), 0x2);
        // CB 02 01D3
        gbc.setState(0x4d2d, 0xa01e, 0x4b10, 0xf121, 0xb074, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa01e);
        EXPECT(gbc.pc(), 0x4d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01D4
        gbc.setState(0xc7b0, 0xad6f, 0x8990, 0xae05, 0xeb13, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xad6f);
        EXPECT(gbc.pc(), 0xc7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b0), 0xcb);
        EXPECT(gbc.readMem(0xc7b1), 0x2);
        // CB 02 01D5
        gbc.setState(0xbe4e, 0x9901, 0x4160, 0x7615, 0xfb13, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0xbe4e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9901);
        EXPECT(gbc.pc(), 0xbe50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe4e), 0xcb);
        EXPECT(gbc.readMem(0xbe4f), 0x2);
        // CB 02 01D6
        gbc.setState(0x63dd, 0x15ee, 0x7910, 0x33be, 0x925d, 0xf221, 0x1, 0x1);
        gbc.writeMem(0x63dd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x15ee);
        EXPECT(gbc.pc(), 0x63df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01D7
        gbc.setState(0x3bd7, 0xfb7c, 0xbc0, 0x5d9d, 0xda32, 0xa5d3, 0x1, 0x0);
        gbc.writeMem(0x3bd7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0x3bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01D8
        gbc.setState(0xe905, 0x21bc, 0x66a0, 0xe7ff, 0xdc47, 0x2693, 0x0, 0x0);
        gbc.writeMem(0xe905, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x21bc);
        EXPECT(gbc.pc(), 0xe907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe905), 0xcb);
        EXPECT(gbc.readMem(0xe906), 0x2);
        // CB 02 01D9
        gbc.setState(0xdfeb, 0xe1c1, 0xbe10, 0x132, 0x6f5d, 0x9d89, 0x1, 0x1);
        gbc.writeMem(0xdfeb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe1c1);
        EXPECT(gbc.pc(), 0xdfed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfeb), 0xcb);
        EXPECT(gbc.readMem(0xdfec), 0x2);
        // CB 02 01DA
        gbc.setState(0x9f98, 0xdbfd, 0x8550, 0x580d, 0x8ada, 0xb589, 0x0, 0x0);
        gbc.writeMem(0x9f98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdbfd);
        EXPECT(gbc.pc(), 0x9f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0xcb);
        EXPECT(gbc.readMem(0x9f99), 0x2);
        // CB 02 01DB
        gbc.setState(0xe0b8, 0x6530, 0xc740, 0x520a, 0x135d, 0x4328, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6530);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b8), 0xcb);
        EXPECT(gbc.readMem(0xe0b9), 0x2);
        // CB 02 01DC
        gbc.setState(0x202a, 0xedd3, 0x18b0, 0x200c, 0xf89d, 0xa3d, 0x0, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xedd3);
        EXPECT(gbc.pc(), 0x202c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01DD
        gbc.setState(0xe8e5, 0x2ff, 0x53c0, 0xa5a7, 0xfd77, 0x46e3, 0x0, 0x1);
        gbc.writeMem(0xe8e5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2ff);
        EXPECT(gbc.pc(), 0xe8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e5), 0xcb);
        EXPECT(gbc.readMem(0xe8e6), 0x2);
        // CB 02 01DE
        gbc.setState(0x2a29, 0x5f13, 0x7a00, 0xaa10, 0xd523, 0x5c8e, 0x0, 0x0);
        gbc.writeMem(0x2a29, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5f13);
        EXPECT(gbc.pc(), 0x2a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01DF
        gbc.setState(0xceca, 0xb48b, 0x8220, 0xa442, 0xa448, 0x492b, 0x1, 0x1);
        gbc.writeMem(0xceca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb48b);
        EXPECT(gbc.pc(), 0xcecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceca), 0xcb);
        EXPECT(gbc.readMem(0xcecb), 0x2);
        // CB 02 01E0
        gbc.setState(0x2ac1, 0x6037, 0x9c10, 0x43b4, 0xe684, 0x3c94, 0x1, 0x0);
        gbc.writeMem(0x2ac1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6037);
        EXPECT(gbc.pc(), 0x2ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01E1
        gbc.setState(0xd392, 0xd4fb, 0xf440, 0x379c, 0x2ea, 0x2b28, 0x0, 0x0);
        gbc.writeMem(0xd392, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0xd394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd392), 0xcb);
        EXPECT(gbc.readMem(0xd393), 0x2);
        // CB 02 01E2
        gbc.setState(0x135b, 0xff00, 0xf5b0, 0xc83e, 0x1f55, 0xb339, 0x0, 0x1);
        gbc.writeMem(0x135b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xff00);
        EXPECT(gbc.pc(), 0x135d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01E3
        gbc.setState(0x6521, 0x1159, 0x8ef0, 0xab8f, 0xfe6d, 0x921d, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1159);
        EXPECT(gbc.pc(), 0x6523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01E4
        gbc.setState(0x7a85, 0xc5f1, 0x20c0, 0xc777, 0x4684, 0xddd6, 0x0, 0x0);
        gbc.writeMem(0x7a85, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc5f1);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01E5
        gbc.setState(0xd906, 0xcaec, 0x9030, 0x419d, 0x835b, 0xd52, 0x0, 0x0);
        gbc.writeMem(0xd906, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcaec);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd906), 0xcb);
        EXPECT(gbc.readMem(0xd907), 0x2);
        // CB 02 01E6
        gbc.setState(0x3f27, 0xf21, 0x1a10, 0x82cb, 0x474f, 0xcfa4, 0x1, 0x1);
        gbc.writeMem(0x3f27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf21);
        EXPECT(gbc.pc(), 0x3f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01E7
        gbc.setState(0x751, 0xb17f, 0xc090, 0x4462, 0x83c3, 0x755d, 0x0, 0x1);
        gbc.writeMem(0x751, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb17f);
        EXPECT(gbc.pc(), 0x753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01E8
        gbc.setState(0x346a, 0xe0b6, 0xba0, 0xaad1, 0xc752, 0x5d4d, 0x0, 0x1);
        gbc.writeMem(0x346a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe0b6);
        EXPECT(gbc.pc(), 0x346c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01E9
        gbc.setState(0x9213, 0x5b82, 0x9cc0, 0xd7d4, 0x6c00, 0xcd64, 0x1, 0x1);
        gbc.writeMem(0x9213, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5b82);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9213), 0xcb);
        EXPECT(gbc.readMem(0x9214), 0x2);
        // CB 02 01EA
        gbc.setState(0x6cff, 0xd125, 0xf270, 0xf68c, 0x6804, 0x50c8, 0x1, 0x1);
        gbc.writeMem(0x6cff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd125);
        EXPECT(gbc.pc(), 0x6d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01EB
        gbc.setState(0x9b24, 0xcb26, 0x2f50, 0x3987, 0x4ea0, 0x854a, 0x0, 0x0);
        gbc.writeMem(0x9b24, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcb26);
        EXPECT(gbc.pc(), 0x9b26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b24), 0xcb);
        EXPECT(gbc.readMem(0x9b25), 0x2);
        // CB 02 01EC
        gbc.setState(0x4250, 0xd438, 0xa820, 0x5f87, 0x89a2, 0x3926, 0x1, 0x0);
        gbc.writeMem(0x4250, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd438);
        EXPECT(gbc.pc(), 0x4252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01ED
        gbc.setState(0x26c2, 0x3427, 0x5110, 0x7766, 0x9ce3, 0xa8f5, 0x0, 0x0);
        gbc.writeMem(0x26c2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3427);
        EXPECT(gbc.pc(), 0x26c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01EE
        gbc.setState(0xbb2d, 0x7718, 0xa020, 0x3cbb, 0x2994, 0xddfb, 0x0, 0x1);
        gbc.writeMem(0xbb2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7718);
        EXPECT(gbc.pc(), 0xbb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2d), 0xcb);
        EXPECT(gbc.readMem(0xbb2e), 0x2);
        // CB 02 01EF
        gbc.setState(0xaaf, 0xe80d, 0x9640, 0x11cd, 0xc6fb, 0xc35, 0x1, 0x0);
        gbc.writeMem(0xaaf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe80d);
        EXPECT(gbc.pc(), 0xab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01F0
        gbc.setState(0x1ce8, 0xfeb7, 0x7940, 0x476b, 0x5ba4, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0x1ce8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfeb7);
        EXPECT(gbc.pc(), 0x1cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01F1
        gbc.setState(0x7d2e, 0x79d0, 0x32c0, 0xcd7e, 0xfdec, 0x3ecc, 0x0, 0x1);
        gbc.writeMem(0x7d2e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x79d0);
        EXPECT(gbc.pc(), 0x7d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01F2
        gbc.setState(0x9601, 0x485e, 0xb050, 0x5cde, 0x2c56, 0x65a0, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x485e);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9601), 0xcb);
        EXPECT(gbc.readMem(0x9602), 0x2);
        // CB 02 01F3
        gbc.setState(0xd6f0, 0xa805, 0x7cc0, 0x181, 0x5830, 0xcd54, 0x0, 0x1);
        gbc.writeMem(0xd6f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0xd6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f0), 0xcb);
        EXPECT(gbc.readMem(0xd6f1), 0x2);
        // CB 02 01F4
        gbc.setState(0x937c, 0x3e7e, 0xb0, 0x2cfa, 0x1f8, 0x6712, 0x0, 0x1);
        gbc.writeMem(0x937c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3e7e);
        EXPECT(gbc.pc(), 0x937e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937c), 0xcb);
        EXPECT(gbc.readMem(0x937d), 0x2);
        // CB 02 01F7
        gbc.setState(0x1544, 0x8189, 0x6670, 0x3b01, 0xa46e, 0xf397, 0x1, 0x1);
        gbc.writeMem(0x1544, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8189);
        EXPECT(gbc.pc(), 0x1546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01F8
        gbc.setState(0x71df, 0xc947, 0xf880, 0xa97f, 0x82ea, 0x1e79, 0x0, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01F9
        gbc.setState(0x1c13, 0xec3d, 0x5df0, 0x1815, 0x167d, 0x4a45, 0x1, 0x1);
        gbc.writeMem(0x1c13, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xec3d);
        EXPECT(gbc.pc(), 0x1c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 01FA
        gbc.setState(0x91c8, 0xfdbe, 0xbde0, 0xa7fb, 0x808b, 0xc022, 0x1, 0x0);
        gbc.writeMem(0x91c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfdbe);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c8), 0xcb);
        EXPECT(gbc.readMem(0x91c9), 0x2);
        // CB 02 01FB
        gbc.setState(0xc535, 0xaa79, 0x6c90, 0x47b8, 0x4d28, 0xafc3, 0x1, 0x0);
        gbc.writeMem(0xc535, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xaa79);
        EXPECT(gbc.pc(), 0xc537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc535), 0xcb);
        EXPECT(gbc.readMem(0xc536), 0x2);
        // CB 02 01FD
        gbc.setState(0x2611, 0xaec2, 0xdd10, 0x1467, 0xbded, 0xd512, 0x0, 0x0);
        gbc.writeMem(0x2611, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaec2);
        EXPECT(gbc.pc(), 0x2613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01FE
        gbc.setState(0x6cfa, 0xcf47, 0x4f30, 0x9b27, 0x8098, 0xc9ae, 0x0, 0x1);
        gbc.writeMem(0x6cfa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcf47);
        EXPECT(gbc.pc(), 0x6cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 01FF
        gbc.setState(0xc534, 0xe8e8, 0x72c0, 0xb419, 0x19a0, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0xc534, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0xc536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc534), 0xcb);
        EXPECT(gbc.readMem(0xc535), 0x2);
        // CB 02 0200
        gbc.setState(0x9f9b, 0x7211, 0x8b30, 0x7fef, 0x389b, 0x93ab, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0x9f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9b), 0xcb);
        EXPECT(gbc.readMem(0x9f9c), 0x2);
        // CB 02 0201
        gbc.setState(0x2866, 0x5e16, 0x8670, 0x3c76, 0x1ee4, 0xd5bf, 0x0, 0x0);
        gbc.writeMem(0x2866, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5e16);
        EXPECT(gbc.pc(), 0x2868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0202
        gbc.setState(0xd580, 0x491c, 0x8290, 0xcd1e, 0xba14, 0xf8e7, 0x0, 0x0);
        gbc.writeMem(0xd580, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x491c);
        EXPECT(gbc.pc(), 0xd582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd580), 0xcb);
        EXPECT(gbc.readMem(0xd581), 0x2);
        // CB 02 0204
        gbc.setState(0x2cc3, 0x4460, 0xfda0, 0x5fbf, 0x40b, 0x92fb, 0x1, 0x1);
        gbc.writeMem(0x2cc3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4460);
        EXPECT(gbc.pc(), 0x2cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0205
        gbc.setState(0xbe31, 0x3802, 0x7310, 0xeee7, 0xfb7e, 0xe79e, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3802);
        EXPECT(gbc.pc(), 0xbe33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe31), 0xcb);
        EXPECT(gbc.readMem(0xbe32), 0x2);
        // CB 02 0206
        gbc.setState(0xeafa, 0x1cb2, 0xc3d0, 0x67c5, 0x1846, 0x69f3, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1cb2);
        EXPECT(gbc.pc(), 0xeafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeafa), 0xcb);
        EXPECT(gbc.readMem(0xeafb), 0x2);
        // CB 02 0207
        gbc.setState(0x3d1e, 0x99b4, 0x1ee0, 0x802a, 0xdc53, 0xe4e8, 0x0, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x99b4);
        EXPECT(gbc.pc(), 0x3d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0208
        gbc.setState(0x9f18, 0xaea1, 0xac40, 0xf972, 0x6ab0, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0x9f18, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaea1);
        EXPECT(gbc.pc(), 0x9f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f18), 0xcb);
        EXPECT(gbc.readMem(0x9f19), 0x2);
        // CB 02 0209
        gbc.setState(0x688f, 0x14fc, 0x53b0, 0x8fb2, 0x9426, 0xb815, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x14fc);
        EXPECT(gbc.pc(), 0x6891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 020A
        gbc.setState(0xbe0f, 0x91b7, 0x8d40, 0xa75a, 0x26cb, 0x7150, 0x0, 0x0);
        gbc.writeMem(0xbe0f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x91b7);
        EXPECT(gbc.pc(), 0xbe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0f), 0xcb);
        EXPECT(gbc.readMem(0xbe10), 0x2);
        // CB 02 020B
        gbc.setState(0xc323, 0xed2, 0xff50, 0x3ba9, 0x360e, 0x38c4, 0x1, 0x0);
        gbc.writeMem(0xc323, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xed2);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc323), 0xcb);
        EXPECT(gbc.readMem(0xc324), 0x2);
        // CB 02 020C
        gbc.setState(0x7ace, 0x39c1, 0x96a0, 0xa67c, 0x6b8, 0x62d3, 0x0, 0x1);
        gbc.writeMem(0x7ace, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0x7ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 020D
        gbc.setState(0xac59, 0xe581, 0x45c0, 0xe0ef, 0x3358, 0x2e62, 0x0, 0x0);
        gbc.writeMem(0xac59, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe581);
        EXPECT(gbc.pc(), 0xac5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac59), 0xcb);
        EXPECT(gbc.readMem(0xac5a), 0x2);
        // CB 02 020E
        gbc.setState(0xbb27, 0xf354, 0x5190, 0x9f0d, 0xf538, 0x664a, 0x1, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf354);
        EXPECT(gbc.pc(), 0xbb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb27), 0xcb);
        EXPECT(gbc.readMem(0xbb28), 0x2);
        // CB 02 020F
        gbc.setState(0x86c0, 0x6b3, 0x6c0, 0x7e44, 0xffb5, 0xec6, 0x0, 0x0);
        gbc.writeMem(0x86c0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6b3);
        EXPECT(gbc.pc(), 0x86c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c0), 0xcb);
        EXPECT(gbc.readMem(0x86c1), 0x2);
        // CB 02 0210
        gbc.setState(0x48b4, 0xc212, 0xa400, 0xd407, 0x6d8f, 0xfc20, 0x0, 0x1);
        gbc.writeMem(0x48b4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc212);
        EXPECT(gbc.pc(), 0x48b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0211
        gbc.setState(0x23cc, 0x9cc6, 0xbd90, 0x9f0a, 0x4716, 0x90, 0x0, 0x1);
        gbc.writeMem(0x23cc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9cc6);
        EXPECT(gbc.pc(), 0x23ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0212
        gbc.setState(0xa78e, 0x6b20, 0xb50, 0x1bc5, 0x6a68, 0xf476, 0x1, 0x1);
        gbc.writeMem(0xa78e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6b20);
        EXPECT(gbc.pc(), 0xa790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78e), 0xcb);
        EXPECT(gbc.readMem(0xa78f), 0x2);
        // CB 02 0213
        gbc.setState(0xdfac, 0x41f3, 0x5e80, 0x4a26, 0x7ee6, 0x1b31, 0x0, 0x1);
        gbc.writeMem(0xdfac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x41f3);
        EXPECT(gbc.pc(), 0xdfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfac), 0xcb);
        EXPECT(gbc.readMem(0xdfad), 0x2);
        // CB 02 0214
        gbc.setState(0xd2ef, 0x873d, 0x6d50, 0xe31c, 0x351b, 0x8eaa, 0x1, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x873d);
        EXPECT(gbc.pc(), 0xd2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ef), 0xcb);
        EXPECT(gbc.readMem(0xd2f0), 0x2);
        // CB 02 0215
        gbc.setState(0xe38c, 0xf7e4, 0x7990, 0xeca6, 0xc19c, 0x84f5, 0x0, 0x1);
        gbc.writeMem(0xe38c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38c), 0xcb);
        EXPECT(gbc.readMem(0xe38d), 0x2);
        // CB 02 0216
        gbc.setState(0x7653, 0x93b0, 0xcdf0, 0x9cc0, 0xda1d, 0x607f, 0x1, 0x1);
        gbc.writeMem(0x7653, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0x7655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0217
        gbc.setState(0xb04d, 0x224e, 0xd3a0, 0xdd72, 0xf9ea, 0xa097, 0x1, 0x0);
        gbc.writeMem(0xb04d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x224e);
        EXPECT(gbc.pc(), 0xb04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04d), 0xcb);
        EXPECT(gbc.readMem(0xb04e), 0x2);
        // CB 02 0218
        gbc.setState(0x4ea0, 0xe888, 0xb2a0, 0xc7e8, 0xf636, 0x52b9, 0x1, 0x0);
        gbc.writeMem(0x4ea0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe888);
        EXPECT(gbc.pc(), 0x4ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0219
        gbc.setState(0x7c0c, 0x1a26, 0x1610, 0x4cec, 0x2d75, 0xe79f, 0x0, 0x1);
        gbc.writeMem(0x7c0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1a26);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 021A
        gbc.setState(0x882f, 0x398c, 0xea70, 0x6bd5, 0xa8c4, 0x12af, 0x1, 0x0);
        gbc.writeMem(0x882f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x398c);
        EXPECT(gbc.pc(), 0x8831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882f), 0xcb);
        EXPECT(gbc.readMem(0x8830), 0x2);
        // CB 02 021B
        gbc.setState(0x847f, 0x7d93, 0xea20, 0x8f78, 0x6e5a, 0x2cd1, 0x1, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7d93);
        EXPECT(gbc.pc(), 0x8481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847f), 0xcb);
        EXPECT(gbc.readMem(0x8480), 0x2);
        // CB 02 021C
        gbc.setState(0x4db6, 0x1ffb, 0x60c0, 0x8ec2, 0xe0dc, 0x685e, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1ffb);
        EXPECT(gbc.pc(), 0x4db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 021D
        gbc.setState(0x3429, 0x4ca1, 0x8900, 0xf547, 0xa1af, 0xe5d1, 0x1, 0x1);
        gbc.writeMem(0x3429, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4ca1);
        EXPECT(gbc.pc(), 0x342b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 021E
        gbc.setState(0x32db, 0xc57, 0x15e0, 0x7acd, 0x39af, 0xa94, 0x1, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc57);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 021F
        gbc.setState(0x2156, 0x484c, 0x940, 0xcdec, 0xf1d7, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x484c);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0221
        gbc.setState(0xaea1, 0xecd7, 0x7730, 0x1b92, 0x48f7, 0x23d4, 0x0, 0x1);
        gbc.writeMem(0xaea1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xecd7);
        EXPECT(gbc.pc(), 0xaea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea1), 0xcb);
        EXPECT(gbc.readMem(0xaea2), 0x2);
        // CB 02 0222
        gbc.setState(0x266c, 0x9e8, 0x4e40, 0x685f, 0x9021, 0x217d, 0x0, 0x0);
        gbc.writeMem(0x266c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9e8);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0223
        gbc.setState(0x63fa, 0x637e, 0x3fd0, 0xc06d, 0x24a1, 0x3888, 0x0, 0x1);
        gbc.writeMem(0x63fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x637e);
        EXPECT(gbc.pc(), 0x63fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0224
        gbc.setState(0xa863, 0xe231, 0x7040, 0xd7e8, 0x34e9, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xa863, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe231);
        EXPECT(gbc.pc(), 0xa865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa863), 0xcb);
        EXPECT(gbc.readMem(0xa864), 0x2);
        // CB 02 0225
        gbc.setState(0xcb4b, 0xe72b, 0x1170, 0x1b7a, 0x3352, 0x7b09, 0x0, 0x0);
        gbc.writeMem(0xcb4b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe72b);
        EXPECT(gbc.pc(), 0xcb4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4b), 0xcb);
        EXPECT(gbc.readMem(0xcb4c), 0x2);
        // CB 02 0227
        gbc.setState(0x5e61, 0x6e4d, 0x5470, 0x80bb, 0x2547, 0x4ed4, 0x0, 0x1);
        gbc.writeMem(0x5e61, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6e4d);
        EXPECT(gbc.pc(), 0x5e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0228
        gbc.setState(0xdfb4, 0xb31b, 0xfc40, 0x6ae8, 0x1536, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0xdfb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0xdfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb4), 0xcb);
        EXPECT(gbc.readMem(0xdfb5), 0x2);
        // CB 02 0229
        gbc.setState(0x8a38, 0x89a5, 0xea50, 0x44ba, 0x9ad5, 0xe219, 0x1, 0x1);
        gbc.writeMem(0x8a38, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x8a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a38), 0xcb);
        EXPECT(gbc.readMem(0x8a39), 0x2);
        // CB 02 022A
        gbc.setState(0x5fd2, 0x1f8e, 0xdb0, 0x89ae, 0xb55b, 0x6d40, 0x0, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1f8e);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 022B
        gbc.setState(0x57e9, 0x9598, 0x61f0, 0xbad9, 0x5b39, 0xa435, 0x1, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0x57eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 022C
        gbc.setState(0xe9ef, 0x1ba6, 0x1c10, 0xfbd, 0x65de, 0x64fa, 0x0, 0x0);
        gbc.writeMem(0xe9ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1ba6);
        EXPECT(gbc.pc(), 0xe9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ef), 0xcb);
        EXPECT(gbc.readMem(0xe9f0), 0x2);
        // CB 02 022D
        gbc.setState(0xc8f, 0xcb7f, 0x4620, 0x7fa7, 0xa128, 0x86c5, 0x0, 0x1);
        gbc.writeMem(0xc8f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcb7f);
        EXPECT(gbc.pc(), 0xc91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 022E
        gbc.setState(0xacd3, 0x3287, 0x96e0, 0x8a83, 0x4763, 0xb924, 0x0, 0x1);
        gbc.writeMem(0xacd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3287);
        EXPECT(gbc.pc(), 0xacd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd3), 0xcb);
        EXPECT(gbc.readMem(0xacd4), 0x2);
        // CB 02 022F
        gbc.setState(0xbd01, 0x71a7, 0xaeb0, 0x1f63, 0x93aa, 0x1519, 0x0, 0x0);
        gbc.writeMem(0xbd01, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x71a7);
        EXPECT(gbc.pc(), 0xbd03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd01), 0xcb);
        EXPECT(gbc.readMem(0xbd02), 0x2);
        // CB 02 0230
        gbc.setState(0xc51a, 0xc93b, 0x5ae0, 0x8c2, 0x943f, 0x2ce1, 0x0, 0x1);
        gbc.writeMem(0xc51a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc93b);
        EXPECT(gbc.pc(), 0xc51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc51a), 0xcb);
        EXPECT(gbc.readMem(0xc51b), 0x2);
        // CB 02 0231
        gbc.setState(0x506e, 0x7484, 0x910, 0x6a57, 0x3ea6, 0xa50b, 0x1, 0x1);
        gbc.writeMem(0x506e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0x5070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0232
        gbc.setState(0x6420, 0x947e, 0xd420, 0xa10a, 0xdcd7, 0xc914, 0x1, 0x1);
        gbc.writeMem(0x6420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x947e);
        EXPECT(gbc.pc(), 0x6422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0233
        gbc.setState(0x4a0c, 0xd13d, 0x9680, 0xee41, 0x35fa, 0xfa7c, 0x1, 0x1);
        gbc.writeMem(0x4a0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd13d);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0234
        gbc.setState(0x9e37, 0x479c, 0x7e70, 0xeb9c, 0xf68, 0x4fc1, 0x0, 0x0);
        gbc.writeMem(0x9e37, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x479c);
        EXPECT(gbc.pc(), 0x9e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e37), 0xcb);
        EXPECT(gbc.readMem(0x9e38), 0x2);
        // CB 02 0235
        gbc.setState(0x6805, 0x5cd9, 0xc810, 0x1ab4, 0xbe3c, 0x5b2e, 0x0, 0x1);
        gbc.writeMem(0x6805, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5cd9);
        EXPECT(gbc.pc(), 0x6807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0236
        gbc.setState(0x9658, 0x9f0a, 0x6fc0, 0x2095, 0x81f1, 0xd74d, 0x0, 0x1);
        gbc.writeMem(0x9658, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9f0a);
        EXPECT(gbc.pc(), 0x965a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9658), 0xcb);
        EXPECT(gbc.readMem(0x9659), 0x2);
        // CB 02 0238
        gbc.setState(0x3edb, 0x4b32, 0xa7a0, 0xb24f, 0x513d, 0xdca0, 0x1, 0x0);
        gbc.writeMem(0x3edb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4b32);
        EXPECT(gbc.pc(), 0x3edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0239
        gbc.setState(0x254, 0x591e, 0x30b0, 0x3dcc, 0xca2, 0x235c, 0x0, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x591e);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 023B
        gbc.setState(0xd0f0, 0xf0eb, 0x4090, 0x4bf4, 0x137e, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xd0f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf0eb);
        EXPECT(gbc.pc(), 0xd0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f0), 0xcb);
        EXPECT(gbc.readMem(0xd0f1), 0x2);
        // CB 02 023C
        gbc.setState(0x8106, 0x1d6e, 0xfa80, 0xcd39, 0xcae7, 0xf02c, 0x0, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1d6e);
        EXPECT(gbc.pc(), 0x8108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8106), 0xcb);
        EXPECT(gbc.readMem(0x8107), 0x2);
        // CB 02 023D
        gbc.setState(0x5beb, 0x2397, 0x7760, 0xb34a, 0x3444, 0x7528, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2397);
        EXPECT(gbc.pc(), 0x5bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 023E
        gbc.setState(0x71e0, 0xc319, 0x38a0, 0x8a37, 0xc85f, 0x3be8, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc319);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0240
        gbc.setState(0x3d26, 0xf272, 0xbd20, 0x7584, 0x3e9, 0xd8e3, 0x0, 0x1);
        gbc.writeMem(0x3d26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf272);
        EXPECT(gbc.pc(), 0x3d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0241
        gbc.setState(0x2a78, 0xf960, 0x2910, 0xa0ae, 0x7f0a, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf960);
        EXPECT(gbc.pc(), 0x2a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0242
        gbc.setState(0x813, 0x9d1b, 0x71a0, 0xd5d5, 0xf1a1, 0xc56e, 0x0, 0x0);
        gbc.writeMem(0x813, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9d1b);
        EXPECT(gbc.pc(), 0x815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0243
        gbc.setState(0xad5f, 0xf5cf, 0x2360, 0x5794, 0x7c26, 0x1605, 0x0, 0x0);
        gbc.writeMem(0xad5f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf5cf);
        EXPECT(gbc.pc(), 0xad61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5f), 0xcb);
        EXPECT(gbc.readMem(0xad60), 0x2);
        // CB 02 0244
        gbc.setState(0xd04c, 0x9d65, 0x76f0, 0x1047, 0x75ad, 0x2e18, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0xd04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04c), 0xcb);
        EXPECT(gbc.readMem(0xd04d), 0x2);
        // CB 02 0245
        gbc.setState(0x7485, 0x22c7, 0x3b70, 0x43f9, 0x22a5, 0xc86c, 0x1, 0x1);
        gbc.writeMem(0x7485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x22c7);
        EXPECT(gbc.pc(), 0x7487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0246
        gbc.setState(0x3ece, 0xa306, 0xe390, 0x7982, 0x1e25, 0x78e3, 0x1, 0x1);
        gbc.writeMem(0x3ece, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa306);
        EXPECT(gbc.pc(), 0x3ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0247
        gbc.setState(0x9855, 0x20e0, 0x6140, 0xeb36, 0x5b25, 0x848, 0x1, 0x1);
        gbc.writeMem(0x9855, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x20e0);
        EXPECT(gbc.pc(), 0x9857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9855), 0xcb);
        EXPECT(gbc.readMem(0x9856), 0x2);
        // CB 02 0248
        gbc.setState(0xd843, 0xf9ea, 0x8740, 0xc0eb, 0x2074, 0x10c6, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf9ea);
        EXPECT(gbc.pc(), 0xd845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd843), 0xcb);
        EXPECT(gbc.readMem(0xd844), 0x2);
        // CB 02 024A
        gbc.setState(0x8772, 0xb562, 0x1f0, 0xf57, 0xcef, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0x8772, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb562);
        EXPECT(gbc.pc(), 0x8774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8772), 0xcb);
        EXPECT(gbc.readMem(0x8773), 0x2);
        // CB 02 024B
        gbc.setState(0x7594, 0xbe19, 0xfc30, 0x1cd4, 0x4de9, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x7594, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbe19);
        EXPECT(gbc.pc(), 0x7596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 024C
        gbc.setState(0x343a, 0xc65c, 0xa320, 0xcc4, 0x1704, 0x6c8b, 0x1, 0x0);
        gbc.writeMem(0x343a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc65c);
        EXPECT(gbc.pc(), 0x343c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 024D
        gbc.setState(0x1618, 0x7d4d, 0x14d0, 0x6cec, 0x2d68, 0x3c12, 0x1, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7d4d);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 024E
        gbc.setState(0x295d, 0x5e9, 0xbc90, 0x313c, 0x7ff3, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5e9);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 024F
        gbc.setState(0x1181, 0x9fe0, 0xca40, 0x7a48, 0x6a55, 0xb420, 0x1, 0x0);
        gbc.writeMem(0x1181, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9fe0);
        EXPECT(gbc.pc(), 0x1183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0250
        gbc.setState(0x8dc3, 0xc40f, 0xca20, 0xad1b, 0xcbce, 0xaf13, 0x0, 0x1);
        gbc.writeMem(0x8dc3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc40f);
        EXPECT(gbc.pc(), 0x8dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc3), 0xcb);
        EXPECT(gbc.readMem(0x8dc4), 0x2);
        // CB 02 0251
        gbc.setState(0x536f, 0x209d, 0x8690, 0x7929, 0x5873, 0x4c12, 0x0, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x209d);
        EXPECT(gbc.pc(), 0x5371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0252
        gbc.setState(0x9b27, 0xeb91, 0x89d0, 0xb032, 0xee83, 0x2cde, 0x0, 0x0);
        gbc.writeMem(0x9b27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeb91);
        EXPECT(gbc.pc(), 0x9b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b27), 0xcb);
        EXPECT(gbc.readMem(0x9b28), 0x2);
        // CB 02 0253
        gbc.setState(0x115b, 0xcfe5, 0xff10, 0xaf2, 0x435a, 0x66a1, 0x0, 0x0);
        gbc.writeMem(0x115b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcfe5);
        EXPECT(gbc.pc(), 0x115d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0255
        gbc.setState(0xbfab, 0x8de, 0x9f80, 0xceff, 0x320c, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0xbfab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8de);
        EXPECT(gbc.pc(), 0xbfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfab), 0xcb);
        EXPECT(gbc.readMem(0xbfac), 0x2);
        // CB 02 0256
        gbc.setState(0x3a, 0x44df, 0x3730, 0x986, 0x1d4a, 0x2dfd, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x44df);
        EXPECT(gbc.pc(), 0x3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0257
        gbc.setState(0x2191, 0xce41, 0x4b40, 0x11e1, 0x17b6, 0xf821, 0x1, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xce41);
        EXPECT(gbc.pc(), 0x2193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0258
        gbc.setState(0x9e15, 0x89fe, 0x2850, 0x82ee, 0xe557, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0x9e15, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x89fe);
        EXPECT(gbc.pc(), 0x9e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e15), 0xcb);
        EXPECT(gbc.readMem(0x9e16), 0x2);
        // CB 02 0259
        gbc.setState(0x5139, 0x8ecc, 0xbd70, 0xe80a, 0xad00, 0x6327, 0x0, 0x1);
        gbc.writeMem(0x5139, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8ecc);
        EXPECT(gbc.pc(), 0x513b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 025A
        gbc.setState(0x23de, 0x7728, 0x8590, 0xc01, 0x4078, 0x437b, 0x1, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7728);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 025B
        gbc.setState(0x5035, 0x9513, 0xb320, 0x9ed0, 0xba, 0x1d14, 0x0, 0x0);
        gbc.writeMem(0x5035, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9513);
        EXPECT(gbc.pc(), 0x5037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 025C
        gbc.setState(0x2800, 0x4ffc, 0x1760, 0x511f, 0x5f0f, 0xb1d9, 0x1, 0x0);
        gbc.writeMem(0x2800, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4ffc);
        EXPECT(gbc.pc(), 0x2802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 025D
        gbc.setState(0x36be, 0xdcfd, 0x1510, 0x938d, 0xf095, 0xfab2, 0x0, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdcfd);
        EXPECT(gbc.pc(), 0x36c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 025F
        gbc.setState(0x39eb, 0x8740, 0x1350, 0x63b0, 0x1197, 0xd076, 0x1, 0x1);
        gbc.writeMem(0x39eb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8740);
        EXPECT(gbc.pc(), 0x39ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0260
        gbc.setState(0x9742, 0xd252, 0xf230, 0x410c, 0xe337, 0x4217, 0x0, 0x0);
        gbc.writeMem(0x9742, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd252);
        EXPECT(gbc.pc(), 0x9744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9742), 0xcb);
        EXPECT(gbc.readMem(0x9743), 0x2);
        // CB 02 0261
        gbc.setState(0xd0ee, 0x7753, 0x38d0, 0x80f2, 0xe430, 0x1282, 0x0, 0x0);
        gbc.writeMem(0xd0ee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7753);
        EXPECT(gbc.pc(), 0xd0f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ee), 0xcb);
        EXPECT(gbc.readMem(0xd0ef), 0x2);
        // CB 02 0262
        gbc.setState(0x4647, 0xfb2a, 0x5150, 0xdc3a, 0xc091, 0x2f6a, 0x0, 0x0);
        gbc.writeMem(0x4647, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfb2a);
        EXPECT(gbc.pc(), 0x4649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0263
        gbc.setState(0x2d0c, 0xe2fa, 0xd360, 0x6dfe, 0xe795, 0xeb17, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe2fa);
        EXPECT(gbc.pc(), 0x2d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0264
        gbc.setState(0x85b5, 0x1534, 0xf4c0, 0x7b07, 0x3157, 0x9282, 0x1, 0x0);
        gbc.writeMem(0x85b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1534);
        EXPECT(gbc.pc(), 0x85b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b5), 0xcb);
        EXPECT(gbc.readMem(0x85b6), 0x2);
        // CB 02 0265
        gbc.setState(0x97f1, 0x7736, 0xc3d0, 0xa783, 0xc41, 0xb342, 0x1, 0x1);
        gbc.writeMem(0x97f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7736);
        EXPECT(gbc.pc(), 0x97f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f1), 0xcb);
        EXPECT(gbc.readMem(0x97f2), 0x2);
        // CB 02 0266
        gbc.setState(0xcf1, 0xdbab, 0x5bc0, 0xb865, 0xf0b7, 0xc7fd, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdbab);
        EXPECT(gbc.pc(), 0xcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0267
        gbc.setState(0x7ebe, 0x8d98, 0xfba0, 0xd950, 0x235, 0x80fc, 0x0, 0x0);
        gbc.writeMem(0x7ebe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8d98);
        EXPECT(gbc.pc(), 0x7ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0268
        gbc.setState(0x2d2c, 0x2d56, 0x9d60, 0xf4bf, 0x15fa, 0x21e4, 0x1, 0x0);
        gbc.writeMem(0x2d2c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2d56);
        EXPECT(gbc.pc(), 0x2d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0269
        gbc.setState(0x1b4c, 0x7dd1, 0x54f0, 0x7da4, 0xafa2, 0x2b91, 0x0, 0x0);
        gbc.writeMem(0x1b4c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7dd1);
        EXPECT(gbc.pc(), 0x1b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 026A
        gbc.setState(0x63bb, 0x5d0, 0x9840, 0x74a2, 0x16cd, 0x801d, 0x1, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5d0);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 026B
        gbc.setState(0x5999, 0xc802, 0xcf10, 0x19ab, 0x7f62, 0x1608, 0x1, 0x1);
        gbc.writeMem(0x5999, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc802);
        EXPECT(gbc.pc(), 0x599b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 026C
        gbc.setState(0x5178, 0xdb3c, 0xa480, 0x26ea, 0x323b, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x5178, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdb3c);
        EXPECT(gbc.pc(), 0x517a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 026D
        gbc.setState(0x23dc, 0xbb4a, 0xbbe0, 0xb42b, 0x10e3, 0xb684, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbb4a);
        EXPECT(gbc.pc(), 0x23de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 026E
        gbc.setState(0x38ed, 0x410, 0x79a0, 0xbc51, 0x3f35, 0xda17, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x410);
        EXPECT(gbc.pc(), 0x38ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0270
        gbc.setState(0x5d4d, 0x9c49, 0x56f0, 0x6de4, 0x83d4, 0x849, 0x1, 0x0);
        gbc.writeMem(0x5d4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9c49);
        EXPECT(gbc.pc(), 0x5d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0271
        gbc.setState(0xaeda, 0x5fe4, 0xee20, 0x7853, 0x6fd4, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0xaeda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5fe4);
        EXPECT(gbc.pc(), 0xaedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeda), 0xcb);
        EXPECT(gbc.readMem(0xaedb), 0x2);
        // CB 02 0272
        gbc.setState(0x8d75, 0x5a6, 0x8e50, 0xea34, 0x40a1, 0xe9ec, 0x1, 0x1);
        gbc.writeMem(0x8d75, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5a6);
        EXPECT(gbc.pc(), 0x8d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d75), 0xcb);
        EXPECT(gbc.readMem(0x8d76), 0x2);
        // CB 02 0273
        gbc.setState(0x3188, 0x86a5, 0xece0, 0x7b3b, 0x7b1, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x3188, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x86a5);
        EXPECT(gbc.pc(), 0x318a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0274
        gbc.setState(0x2ba8, 0xe05a, 0xbaf0, 0x8cc6, 0x9087, 0xc167, 0x1, 0x0);
        gbc.writeMem(0x2ba8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x2baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0275
        gbc.setState(0xcbe9, 0xc365, 0x4910, 0x2e4b, 0xd6f3, 0xbf64, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc365);
        EXPECT(gbc.pc(), 0xcbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe9), 0xcb);
        EXPECT(gbc.readMem(0xcbea), 0x2);
        // CB 02 0276
        gbc.setState(0x461f, 0x79d3, 0xe6d0, 0xa47c, 0x55fc, 0x699a, 0x1, 0x1);
        gbc.writeMem(0x461f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x79d3);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0277
        gbc.setState(0x8ca0, 0xcdff, 0xe730, 0xfe96, 0x6f1b, 0x8e41, 0x0, 0x0);
        gbc.writeMem(0x8ca0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0x8ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca0), 0xcb);
        EXPECT(gbc.readMem(0x8ca1), 0x2);
        // CB 02 0278
        gbc.setState(0x420d, 0x76d3, 0x4610, 0x7967, 0x750f, 0x8a04, 0x0, 0x0);
        gbc.writeMem(0x420d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x76d3);
        EXPECT(gbc.pc(), 0x420f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0279
        gbc.setState(0x383d, 0x8f63, 0xe6e0, 0xf635, 0x92bf, 0xf6d0, 0x1, 0x0);
        gbc.writeMem(0x383d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8f63);
        EXPECT(gbc.pc(), 0x383f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 027A
        gbc.setState(0x79e, 0x2a03, 0x5530, 0x4b75, 0xadcb, 0x6437, 0x0, 0x1);
        gbc.writeMem(0x79e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2a03);
        EXPECT(gbc.pc(), 0x7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 027B
        gbc.setState(0xef1d, 0xfeb5, 0xa3e0, 0x2c27, 0xcc80, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0xef1d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfeb5);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1d), 0xcb);
        EXPECT(gbc.readMem(0xef1e), 0x2);
        // CB 02 027C
        gbc.setState(0x8d71, 0xd271, 0xdb60, 0x96b6, 0xb174, 0x27b7, 0x1, 0x1);
        gbc.writeMem(0x8d71, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd271);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d71), 0xcb);
        EXPECT(gbc.readMem(0x8d72), 0x2);
        // CB 02 027D
        gbc.setState(0x7e75, 0xdb4c, 0x9400, 0x4ae8, 0xcb22, 0x4d78, 0x0, 0x1);
        gbc.writeMem(0x7e75, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0x7e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 027E
        gbc.setState(0x7d6a, 0xe1d4, 0xc6f0, 0x954c, 0x59ee, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x7d6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe1d4);
        EXPECT(gbc.pc(), 0x7d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 027F
        gbc.setState(0xb5af, 0x4a93, 0xf860, 0x3d65, 0x3a5f, 0x780, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4a93);
        EXPECT(gbc.pc(), 0xb5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5af), 0xcb);
        EXPECT(gbc.readMem(0xb5b0), 0x2);
        // CB 02 0280
        gbc.setState(0x7cea, 0xff60, 0xbb40, 0xee18, 0x6fe2, 0x1b03, 0x1, 0x0);
        gbc.writeMem(0x7cea, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xff60);
        EXPECT(gbc.pc(), 0x7cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0281
        gbc.setState(0x5bd8, 0x1e96, 0x4c50, 0x2b92, 0x76c9, 0xc31, 0x0, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1e96);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0282
        gbc.setState(0x6462, 0x65cd, 0xcfe0, 0xea2a, 0x2661, 0xce09, 0x0, 0x0);
        gbc.writeMem(0x6462, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x65cd);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0283
        gbc.setState(0x2c81, 0x7c4a, 0x6a0, 0x829f, 0x2d6e, 0xbb4, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7c4a);
        EXPECT(gbc.pc(), 0x2c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0284
        gbc.setState(0x4841, 0xb6a2, 0x190, 0xa51e, 0x363e, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x4841, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb6a2);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0285
        gbc.setState(0x8388, 0x79b0, 0x9580, 0x3aa2, 0xcab0, 0xc13d, 0x1, 0x1);
        gbc.writeMem(0x8388, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x79b0);
        EXPECT(gbc.pc(), 0x838a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8388), 0xcb);
        EXPECT(gbc.readMem(0x8389), 0x2);
        // CB 02 0286
        gbc.setState(0xd0c8, 0xedf8, 0xb1d0, 0xbc09, 0x2824, 0x9653, 0x0, 0x1);
        gbc.writeMem(0xd0c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xedf8);
        EXPECT(gbc.pc(), 0xd0ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c8), 0xcb);
        EXPECT(gbc.readMem(0xd0c9), 0x2);
        // CB 02 0287
        gbc.setState(0x5f06, 0x8b21, 0x49c0, 0xb565, 0x23c0, 0x3695, 0x0, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0x5f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0288
        gbc.setState(0xeb09, 0x912f, 0x6370, 0x3a9b, 0xab76, 0xa36a, 0x0, 0x1);
        gbc.writeMem(0xeb09, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x912f);
        EXPECT(gbc.pc(), 0xeb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb09), 0xcb);
        EXPECT(gbc.readMem(0xeb0a), 0x2);
        // CB 02 0289
        gbc.setState(0x305d, 0x67bc, 0xba30, 0x2b44, 0xcdcf, 0x6997, 0x1, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x67bc);
        EXPECT(gbc.pc(), 0x305f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 028A
        gbc.setState(0xe189, 0x1f74, 0x2320, 0x1554, 0xe2b2, 0xc39e, 0x0, 0x0);
        gbc.writeMem(0xe189, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1f74);
        EXPECT(gbc.pc(), 0xe18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe189), 0xcb);
        EXPECT(gbc.readMem(0xe18a), 0x2);
        // CB 02 028B
        gbc.setState(0xc55e, 0xaf3a, 0x5630, 0x1886, 0x1f8c, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0xc55e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xaf3a);
        EXPECT(gbc.pc(), 0xc560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55e), 0xcb);
        EXPECT(gbc.readMem(0xc55f), 0x2);
        // CB 02 028C
        gbc.setState(0x1c13, 0x4770, 0x1660, 0xf08e, 0x96e, 0x15b4, 0x1, 0x1);
        gbc.writeMem(0x1c13, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4770);
        EXPECT(gbc.pc(), 0x1c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 028D
        gbc.setState(0x636, 0x51fa, 0xdc90, 0x6ec7, 0x94be, 0xf606, 0x0, 0x0);
        gbc.writeMem(0x636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x51fa);
        EXPECT(gbc.pc(), 0x638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 028E
        gbc.setState(0x48e6, 0xa3ed, 0x7f30, 0x2438, 0xbcf8, 0xe84a, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa3ed);
        EXPECT(gbc.pc(), 0x48e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 028F
        gbc.setState(0x9172, 0xa70d, 0x8330, 0x4f35, 0x7731, 0xeff2, 0x1, 0x1);
        gbc.writeMem(0x9172, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa70d);
        EXPECT(gbc.pc(), 0x9174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9172), 0xcb);
        EXPECT(gbc.readMem(0x9173), 0x2);
        // CB 02 0290
        gbc.setState(0xcdb4, 0xbfa6, 0xe890, 0x4911, 0xa9d5, 0x2b12, 0x1, 0x1);
        gbc.writeMem(0xcdb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbfa6);
        EXPECT(gbc.pc(), 0xcdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb4), 0xcb);
        EXPECT(gbc.readMem(0xcdb5), 0x2);
        // CB 02 0291
        gbc.setState(0x8116, 0x1c2b, 0x2970, 0x10c9, 0xd248, 0x3792, 0x0, 0x1);
        gbc.writeMem(0x8116, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1c2b);
        EXPECT(gbc.pc(), 0x8118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8116), 0xcb);
        EXPECT(gbc.readMem(0x8117), 0x2);
        // CB 02 0292
        gbc.setState(0xd274, 0x608, 0xdc90, 0x5a9d, 0x9a11, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0xd274, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x608);
        EXPECT(gbc.pc(), 0xd276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd274), 0xcb);
        EXPECT(gbc.readMem(0xd275), 0x2);
        // CB 02 0293
        gbc.setState(0xe2b4, 0xbea, 0x490, 0x23bd, 0x458c, 0xf31b, 0x0, 0x0);
        gbc.writeMem(0xe2b4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbea);
        EXPECT(gbc.pc(), 0xe2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b4), 0xcb);
        EXPECT(gbc.readMem(0xe2b5), 0x2);
        // CB 02 0294
        gbc.setState(0xda89, 0xe1fe, 0xc340, 0xf71f, 0x5f90, 0x2883, 0x1, 0x0);
        gbc.writeMem(0xda89, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe1fe);
        EXPECT(gbc.pc(), 0xda8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda89), 0xcb);
        EXPECT(gbc.readMem(0xda8a), 0x2);
        // CB 02 0295
        gbc.setState(0xcfc5, 0xb488, 0xc90, 0xabbc, 0x3aae, 0x6155, 0x0, 0x0);
        gbc.writeMem(0xcfc5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb488);
        EXPECT(gbc.pc(), 0xcfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc5), 0xcb);
        EXPECT(gbc.readMem(0xcfc6), 0x2);
        // CB 02 0296
        gbc.setState(0x5f9e, 0x1ca, 0xca00, 0x9a4c, 0xf2bc, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0x5f9e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1ca);
        EXPECT(gbc.pc(), 0x5fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0297
        gbc.setState(0xa718, 0x9ae, 0x6d0, 0x839a, 0xb27e, 0xaa60, 0x0, 0x1);
        gbc.writeMem(0xa718, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9ae);
        EXPECT(gbc.pc(), 0xa71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa718), 0xcb);
        EXPECT(gbc.readMem(0xa719), 0x2);
        // CB 02 0298
        gbc.setState(0x350a, 0xcf89, 0xd330, 0xd2ae, 0xd45d, 0xfe22, 0x0, 0x0);
        gbc.writeMem(0x350a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcf89);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0299
        gbc.setState(0x63de, 0x9667, 0x69b0, 0xcce5, 0xe390, 0xb2ff, 0x1, 0x0);
        gbc.writeMem(0x63de, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9667);
        EXPECT(gbc.pc(), 0x63e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 029A
        gbc.setState(0x7947, 0x210f, 0x1400, 0x6f34, 0xd761, 0x76ab, 0x0, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x210f);
        EXPECT(gbc.pc(), 0x7949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 029B
        gbc.setState(0x6880, 0x4241, 0x5de0, 0x458d, 0xff3d, 0x32cf, 0x1, 0x1);
        gbc.writeMem(0x6880, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4241);
        EXPECT(gbc.pc(), 0x6882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 029C
        gbc.setState(0xd43c, 0x83f2, 0xb9d0, 0x3d96, 0x5037, 0xa77c, 0x1, 0x1);
        gbc.writeMem(0xd43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x83f2);
        EXPECT(gbc.pc(), 0xd43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43c), 0xcb);
        EXPECT(gbc.readMem(0xd43d), 0x2);
        // CB 02 029D
        gbc.setState(0x5e14, 0xabd5, 0x4ad0, 0x610d, 0x7a30, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x5e14, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xabd5);
        EXPECT(gbc.pc(), 0x5e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 029E
        gbc.setState(0x69b8, 0xf44a, 0x9040, 0x822a, 0x9332, 0xab4, 0x1, 0x1);
        gbc.writeMem(0x69b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf44a);
        EXPECT(gbc.pc(), 0x69ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 029F
        gbc.setState(0x8455, 0x1aef, 0xce50, 0xccaa, 0xdf0, 0x70e6, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1aef);
        EXPECT(gbc.pc(), 0x8457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8455), 0xcb);
        EXPECT(gbc.readMem(0x8456), 0x2);
        // CB 02 02A0
        gbc.setState(0x96b3, 0xa2d6, 0x6220, 0x18c4, 0xb514, 0x6caf, 0x1, 0x1);
        gbc.writeMem(0x96b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa2d6);
        EXPECT(gbc.pc(), 0x96b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b3), 0xcb);
        EXPECT(gbc.readMem(0x96b4), 0x2);
        // CB 02 02A1
        gbc.setState(0xd035, 0xec7, 0x70e0, 0x49b4, 0x501a, 0x73bd, 0x0, 0x0);
        gbc.writeMem(0xd035, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xec7);
        EXPECT(gbc.pc(), 0xd037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd035), 0xcb);
        EXPECT(gbc.readMem(0xd036), 0x2);
        // CB 02 02A2
        gbc.setState(0xd848, 0xe805, 0xc550, 0xd319, 0x73d2, 0x1c68, 0x0, 0x1);
        gbc.writeMem(0xd848, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe805);
        EXPECT(gbc.pc(), 0xd84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd848), 0xcb);
        EXPECT(gbc.readMem(0xd849), 0x2);
        // CB 02 02A3
        gbc.setState(0x67c6, 0x137, 0xd200, 0xbd1f, 0xcd33, 0xab93, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x137);
        EXPECT(gbc.pc(), 0x67c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02A4
        gbc.setState(0x1f1b, 0x98fd, 0xda80, 0xa498, 0xe321, 0xb117, 0x0, 0x1);
        gbc.writeMem(0x1f1b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x98fd);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02A5
        gbc.setState(0x3a1f, 0xc439, 0x8300, 0xba2, 0x3234, 0x3d8a, 0x0, 0x0);
        gbc.writeMem(0x3a1f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc439);
        EXPECT(gbc.pc(), 0x3a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02A6
        gbc.setState(0xc5fb, 0xc51, 0x71d0, 0x7850, 0xa7e3, 0xe354, 0x1, 0x1);
        gbc.writeMem(0xc5fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0xc5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fb), 0xcb);
        EXPECT(gbc.readMem(0xc5fc), 0x2);
        // CB 02 02A7
        gbc.setState(0x2404, 0x3f10, 0x70f0, 0xcbee, 0x660c, 0x4de2, 0x0, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3f10);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02A8
        gbc.setState(0xad3, 0x520f, 0x8120, 0x6775, 0x819b, 0xee64, 0x1, 0x0);
        gbc.writeMem(0xad3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x520f);
        EXPECT(gbc.pc(), 0xad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02A9
        gbc.setState(0xac4f, 0xb4e9, 0x1f0, 0xf8cd, 0xcf50, 0x3d5e, 0x0, 0x1);
        gbc.writeMem(0xac4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb4e9);
        EXPECT(gbc.pc(), 0xac51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4f), 0xcb);
        EXPECT(gbc.readMem(0xac50), 0x2);
        // CB 02 02AA
        gbc.setState(0xa6e1, 0x438d, 0x81e0, 0x56d4, 0xb860, 0x4863, 0x0, 0x0);
        gbc.writeMem(0xa6e1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x438d);
        EXPECT(gbc.pc(), 0xa6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e1), 0xcb);
        EXPECT(gbc.readMem(0xa6e2), 0x2);
        // CB 02 02AB
        gbc.setState(0x3462, 0xfcb, 0x7dc0, 0x9378, 0x6581, 0x7fa, 0x1, 0x1);
        gbc.writeMem(0x3462, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfcb);
        EXPECT(gbc.pc(), 0x3464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02AC
        gbc.setState(0x4a19, 0x7865, 0x4350, 0x88ae, 0x2192, 0xcb60, 0x1, 0x0);
        gbc.writeMem(0x4a19, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7865);
        EXPECT(gbc.pc(), 0x4a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02AD
        gbc.setState(0xc297, 0xf966, 0x94b0, 0xc100, 0xe467, 0xd352, 0x0, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf966);
        EXPECT(gbc.pc(), 0xc299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc297), 0xcb);
        EXPECT(gbc.readMem(0xc298), 0x2);
        // CB 02 02AE
        gbc.setState(0x789, 0x7c93, 0x2660, 0x26c0, 0xe7ae, 0x7a0a, 0x0, 0x0);
        gbc.writeMem(0x789, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7c93);
        EXPECT(gbc.pc(), 0x78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02AF
        gbc.setState(0x805e, 0x693c, 0x4230, 0x84e3, 0x240a, 0xa132, 0x1, 0x1);
        gbc.writeMem(0x805e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x693c);
        EXPECT(gbc.pc(), 0x8060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805e), 0xcb);
        EXPECT(gbc.readMem(0x805f), 0x2);
        // CB 02 02B0
        gbc.setState(0x200f, 0x9f01, 0xe870, 0xd66f, 0x1e06, 0xa729, 0x0, 0x1);
        gbc.writeMem(0x200f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0x2011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02B2
        gbc.setState(0x7231, 0x59bf, 0xf570, 0xe7c8, 0xff5, 0xae96, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x59bf);
        EXPECT(gbc.pc(), 0x7233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02B3
        gbc.setState(0x262e, 0xff08, 0x14a0, 0xfd68, 0xe386, 0x5ebf, 0x0, 0x0);
        gbc.writeMem(0x262e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0x2630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02B4
        gbc.setState(0x60aa, 0x3ed9, 0xcb00, 0x8d6b, 0x4987, 0x553f, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3ed9);
        EXPECT(gbc.pc(), 0x60ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02B5
        gbc.setState(0xc43c, 0x6374, 0x6500, 0xbbcf, 0xe6f4, 0x8850, 0x1, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6374);
        EXPECT(gbc.pc(), 0xc43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43c), 0xcb);
        EXPECT(gbc.readMem(0xc43d), 0x2);
        // CB 02 02B6
        gbc.setState(0xf4, 0xc31c, 0x69d0, 0x9a28, 0x35c4, 0x94dd, 0x0, 0x0);
        gbc.writeMem(0xf4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc31c);
        EXPECT(gbc.pc(), 0xf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02B7
        gbc.setState(0x80c9, 0x4ffe, 0xcf60, 0x1d08, 0x4c24, 0xd740, 0x0, 0x1);
        gbc.writeMem(0x80c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4ffe);
        EXPECT(gbc.pc(), 0x80cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c9), 0xcb);
        EXPECT(gbc.readMem(0x80ca), 0x2);
        // CB 02 02B8
        gbc.setState(0xb362, 0xc522, 0x4ba0, 0x2b3, 0x58de, 0xf62d, 0x0, 0x0);
        gbc.writeMem(0xb362, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc522);
        EXPECT(gbc.pc(), 0xb364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb362), 0xcb);
        EXPECT(gbc.readMem(0xb363), 0x2);
        // CB 02 02B9
        gbc.setState(0x337e, 0x209c, 0xc190, 0xa136, 0x97e5, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x337e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x209c);
        EXPECT(gbc.pc(), 0x3380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02BA
        gbc.setState(0x9dfb, 0xd23c, 0xd2f0, 0x8b55, 0x3a74, 0x7795, 0x1, 0x0);
        gbc.writeMem(0x9dfb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd23c);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfb), 0xcb);
        EXPECT(gbc.readMem(0x9dfc), 0x2);
        // CB 02 02BC
        gbc.setState(0x9d, 0x9967, 0xffc0, 0xe5fd, 0xe358, 0xb2c3, 0x0, 0x1);
        gbc.writeMem(0x9d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9967);
        EXPECT(gbc.pc(), 0x9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02BD
        gbc.setState(0x9d06, 0x1df5, 0x2e50, 0xda33, 0xa350, 0xcdb7, 0x1, 0x0);
        gbc.writeMem(0x9d06, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1df5);
        EXPECT(gbc.pc(), 0x9d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d06), 0xcb);
        EXPECT(gbc.readMem(0x9d07), 0x2);
        // CB 02 02BE
        gbc.setState(0x2ac4, 0x281c, 0x5870, 0x7cd8, 0x3e7c, 0xe5a0, 0x1, 0x1);
        gbc.writeMem(0x2ac4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0x2ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02BF
        gbc.setState(0x4c79, 0x84d6, 0x4970, 0x5da1, 0x1a2d, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x4c79, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x84d6);
        EXPECT(gbc.pc(), 0x4c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C0
        gbc.setState(0x6239, 0x9e0c, 0x1950, 0x1567, 0x7c52, 0x2311, 0x0, 0x0);
        gbc.writeMem(0x6239, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9e0c);
        EXPECT(gbc.pc(), 0x623b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C1
        gbc.setState(0xc584, 0xa503, 0xfaa0, 0xf148, 0xb684, 0x29c1, 0x1, 0x1);
        gbc.writeMem(0xc584, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa503);
        EXPECT(gbc.pc(), 0xc586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc584), 0xcb);
        EXPECT(gbc.readMem(0xc585), 0x2);
        // CB 02 02C2
        gbc.setState(0x6716, 0x9570, 0x23e0, 0xeaf8, 0x152a, 0x976c, 0x1, 0x1);
        gbc.writeMem(0x6716, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9570);
        EXPECT(gbc.pc(), 0x6718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C3
        gbc.setState(0x851, 0xc3fc, 0xaee0, 0x33de, 0x85c8, 0x2b4f, 0x0, 0x1);
        gbc.writeMem(0x851, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc3fc);
        EXPECT(gbc.pc(), 0x853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02C4
        gbc.setState(0x91b8, 0x29be, 0x11f0, 0x8f0, 0x508d, 0x5781, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x29be);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0x2);
        // CB 02 02C5
        gbc.setState(0x7cdc, 0x6859, 0xbdd0, 0xcde3, 0xe4bf, 0xefd7, 0x1, 0x0);
        gbc.writeMem(0x7cdc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6859);
        EXPECT(gbc.pc(), 0x7cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02C6
        gbc.setState(0x62e3, 0x831c, 0xa30, 0xbf46, 0x493c, 0xe0f9, 0x1, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x831c);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C7
        gbc.setState(0x3090, 0xedc, 0xdb0, 0x4099, 0x9c9, 0x2ab4, 0x0, 0x0);
        gbc.writeMem(0x3090, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xedc);
        EXPECT(gbc.pc(), 0x3092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C8
        gbc.setState(0x4996, 0x2827, 0xcb30, 0xf4cc, 0x5f17, 0xbc68, 0x1, 0x0);
        gbc.writeMem(0x4996, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2827);
        EXPECT(gbc.pc(), 0x4998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02C9
        gbc.setState(0x9337, 0x8f28, 0x1550, 0xbabb, 0xaaf3, 0xfd0d, 0x1, 0x0);
        gbc.writeMem(0x9337, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8f28);
        EXPECT(gbc.pc(), 0x9339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9337), 0xcb);
        EXPECT(gbc.readMem(0x9338), 0x2);
        // CB 02 02CA
        gbc.setState(0x4e32, 0xc68f, 0x3ed0, 0x4d41, 0x587e, 0x843d, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc68f);
        EXPECT(gbc.pc(), 0x4e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02CB
        gbc.setState(0x8ea2, 0xb7fd, 0x1c20, 0x9336, 0x5066, 0x567c, 0x1, 0x1);
        gbc.writeMem(0x8ea2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb7fd);
        EXPECT(gbc.pc(), 0x8ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea2), 0xcb);
        EXPECT(gbc.readMem(0x8ea3), 0x2);
        // CB 02 02CC
        gbc.setState(0x7b26, 0xcc65, 0xc810, 0xe032, 0x7185, 0x1541, 0x1, 0x1);
        gbc.writeMem(0x7b26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcc65);
        EXPECT(gbc.pc(), 0x7b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02CD
        gbc.setState(0x5317, 0xbb18, 0xb600, 0xb0a6, 0x44ee, 0x350d, 0x0, 0x1);
        gbc.writeMem(0x5317, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbb18);
        EXPECT(gbc.pc(), 0x5319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02CE
        gbc.setState(0x3bfd, 0x5702, 0x1ed0, 0xf99c, 0x64d7, 0xe5a7, 0x0, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5702);
        EXPECT(gbc.pc(), 0x3bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02CF
        gbc.setState(0xe460, 0xb4cf, 0xd170, 0xcdc5, 0x7c07, 0xa947, 0x1, 0x0);
        gbc.writeMem(0xe460, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb4cf);
        EXPECT(gbc.pc(), 0xe462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe460), 0xcb);
        EXPECT(gbc.readMem(0xe461), 0x2);
        // CB 02 02D0
        gbc.setState(0xa372, 0x3a18, 0x67a0, 0x148f, 0x84b7, 0x536b, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3a18);
        EXPECT(gbc.pc(), 0xa374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa372), 0xcb);
        EXPECT(gbc.readMem(0xa373), 0x2);
        // CB 02 02D1
        gbc.setState(0x85ef, 0x6124, 0x7ee0, 0xfa04, 0x9fb, 0x4028, 0x1, 0x0);
        gbc.writeMem(0x85ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6124);
        EXPECT(gbc.pc(), 0x85f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ef), 0xcb);
        EXPECT(gbc.readMem(0x85f0), 0x2);
        // CB 02 02D2
        gbc.setState(0xb47f, 0xf7d9, 0x99b0, 0x7ce0, 0x9242, 0x1c0f, 0x0, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf7d9);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0x2);
        // CB 02 02D3
        gbc.setState(0xe9db, 0xc649, 0x4af0, 0x3ed5, 0x2483, 0x58cd, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc649);
        EXPECT(gbc.pc(), 0xe9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9db), 0xcb);
        EXPECT(gbc.readMem(0xe9dc), 0x2);
        // CB 02 02D4
        gbc.setState(0xabfe, 0x5178, 0x980, 0x5b6f, 0x4c08, 0x794d, 0x1, 0x0);
        gbc.writeMem(0xabfe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5178);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfe), 0xcb);
        EXPECT(gbc.readMem(0xabff), 0x2);
        // CB 02 02D5
        gbc.setState(0x2a0a, 0xd474, 0xa730, 0xba7a, 0xe346, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0x2a0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd474);
        EXPECT(gbc.pc(), 0x2a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02D6
        gbc.setState(0x849e, 0xae7a, 0xeb10, 0x964e, 0x9be5, 0xd18, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xae7a);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0xcb);
        EXPECT(gbc.readMem(0x849f), 0x2);
        // CB 02 02D7
        gbc.setState(0xb25d, 0x8b85, 0x37f0, 0x18e5, 0xd40b, 0xf235, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8b85);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0x2);
        // CB 02 02D8
        gbc.setState(0x4eb7, 0xa8b8, 0x3b00, 0x244d, 0x3bb5, 0x6b44, 0x1, 0x0);
        gbc.writeMem(0x4eb7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa8b8);
        EXPECT(gbc.pc(), 0x4eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02D9
        gbc.setState(0x2d6d, 0xc597, 0x4b80, 0x723f, 0x2c57, 0x6839, 0x1, 0x0);
        gbc.writeMem(0x2d6d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc597);
        EXPECT(gbc.pc(), 0x2d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02DA
        gbc.setState(0xc5b7, 0xc94d, 0x7c00, 0xeab8, 0xd848, 0xd88f, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc94d);
        EXPECT(gbc.pc(), 0xc5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b7), 0xcb);
        EXPECT(gbc.readMem(0xc5b8), 0x2);
        // CB 02 02DC
        gbc.setState(0x1bbf, 0xaeb4, 0x7d60, 0x5c1e, 0x8587, 0x5da5, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xaeb4);
        EXPECT(gbc.pc(), 0x1bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02DD
        gbc.setState(0x6ce, 0xa4db, 0xa3c0, 0x9822, 0x29b9, 0x6232, 0x1, 0x1);
        gbc.writeMem(0x6ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa4db);
        EXPECT(gbc.pc(), 0x6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02DE
        gbc.setState(0xcb9f, 0xdcef, 0xf130, 0x91b9, 0xb2a5, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0xcb9f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdcef);
        EXPECT(gbc.pc(), 0xcba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9f), 0xcb);
        EXPECT(gbc.readMem(0xcba0), 0x2);
        // CB 02 02E0
        gbc.setState(0x34cb, 0xd538, 0xdde0, 0xe0ff, 0x87cc, 0x2235, 0x1, 0x0);
        gbc.writeMem(0x34cb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd538);
        EXPECT(gbc.pc(), 0x34cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02E2
        gbc.setState(0x5805, 0x4909, 0x1680, 0xaaf2, 0x8609, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4909);
        EXPECT(gbc.pc(), 0x5807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02E3
        gbc.setState(0x57b7, 0x73f6, 0x2610, 0x1671, 0xd5a6, 0x716f, 0x0, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x73f6);
        EXPECT(gbc.pc(), 0x57b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02E4
        gbc.setState(0xe23f, 0x9f9b, 0x9e30, 0xfb40, 0x5cd5, 0x3937, 0x1, 0x0);
        gbc.writeMem(0xe23f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9f9b);
        EXPECT(gbc.pc(), 0xe241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23f), 0xcb);
        EXPECT(gbc.readMem(0xe240), 0x2);
        // CB 02 02E5
        gbc.setState(0x7c08, 0xedc8, 0xbfc0, 0xb59b, 0xbeb6, 0xcbb8, 0x1, 0x1);
        gbc.writeMem(0x7c08, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xedc8);
        EXPECT(gbc.pc(), 0x7c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02E6
        gbc.setState(0x835c, 0xc7c0, 0x1690, 0x439a, 0xd037, 0x5661, 0x0, 0x0);
        gbc.writeMem(0x835c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc7c0);
        EXPECT(gbc.pc(), 0x835e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835c), 0xcb);
        EXPECT(gbc.readMem(0x835d), 0x2);
        // CB 02 02E7
        gbc.setState(0x6afd, 0xcb5f, 0x6da0, 0x1969, 0x78ec, 0x9f7a, 0x0, 0x0);
        gbc.writeMem(0x6afd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcb5f);
        EXPECT(gbc.pc(), 0x6aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02E8
        gbc.setState(0x9d2f, 0xe644, 0x8ef0, 0xd2e6, 0x80a1, 0x689e, 0x0, 0x0);
        gbc.writeMem(0x9d2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe644);
        EXPECT(gbc.pc(), 0x9d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2f), 0xcb);
        EXPECT(gbc.readMem(0x9d30), 0x2);
        // CB 02 02E9
        gbc.setState(0x6420, 0xcc5e, 0x3c10, 0x71ff, 0xc46b, 0xbe14, 0x0, 0x0);
        gbc.writeMem(0x6420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcc5e);
        EXPECT(gbc.pc(), 0x6422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02EA
        gbc.setState(0x1418, 0xe54, 0x5b20, 0xacd9, 0x4079, 0x230c, 0x1, 0x1);
        gbc.writeMem(0x1418, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0x141a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02EB
        gbc.setState(0xeddf, 0xb171, 0x1f80, 0xffe2, 0x4b9c, 0x8450, 0x0, 0x1);
        gbc.writeMem(0xeddf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb171);
        EXPECT(gbc.pc(), 0xede1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddf), 0xcb);
        EXPECT(gbc.readMem(0xede0), 0x2);
        // CB 02 02EC
        gbc.setState(0xae5d, 0x39df, 0xf7e0, 0x481a, 0xdb98, 0x51f2, 0x1, 0x1);
        gbc.writeMem(0xae5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x39df);
        EXPECT(gbc.pc(), 0xae5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5d), 0xcb);
        EXPECT(gbc.readMem(0xae5e), 0x2);
        // CB 02 02ED
        gbc.setState(0x19b1, 0xdc05, 0xc960, 0xc6f9, 0x394f, 0x69a8, 0x0, 0x1);
        gbc.writeMem(0x19b1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdc05);
        EXPECT(gbc.pc(), 0x19b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02EE
        gbc.setState(0xa37d, 0xd5e3, 0xe90, 0x39de, 0x6fe0, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0xa37d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd5e3);
        EXPECT(gbc.pc(), 0xa37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37d), 0xcb);
        EXPECT(gbc.readMem(0xa37e), 0x2);
        // CB 02 02EF
        gbc.setState(0xbcb4, 0xa5d4, 0x2590, 0x5739, 0x4257, 0x8106, 0x0, 0x1);
        gbc.writeMem(0xbcb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa5d4);
        EXPECT(gbc.pc(), 0xbcb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb4), 0xcb);
        EXPECT(gbc.readMem(0xbcb5), 0x2);
        // CB 02 02F0
        gbc.setState(0x4ae6, 0xa2d2, 0x1410, 0x3dc8, 0xa368, 0x9143, 0x0, 0x1);
        gbc.writeMem(0x4ae6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa2d2);
        EXPECT(gbc.pc(), 0x4ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02F2
        gbc.setState(0xd331, 0xd7a2, 0x14a0, 0x2d24, 0x50f8, 0xe01c, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd7a2);
        EXPECT(gbc.pc(), 0xd333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd331), 0xcb);
        EXPECT(gbc.readMem(0xd332), 0x2);
        // CB 02 02F3
        gbc.setState(0xa858, 0x9151, 0xde50, 0x266f, 0x8570, 0xe1c, 0x0, 0x1);
        gbc.writeMem(0xa858, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9151);
        EXPECT(gbc.pc(), 0xa85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa858), 0xcb);
        EXPECT(gbc.readMem(0xa859), 0x2);
        // CB 02 02F4
        gbc.setState(0x4888, 0xe53, 0x4900, 0x2ae9, 0xe981, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x4888, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe53);
        EXPECT(gbc.pc(), 0x488a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02F5
        gbc.setState(0xa352, 0x7112, 0x330, 0x28db, 0x3088, 0x6466, 0x1, 0x0);
        gbc.writeMem(0xa352, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7112);
        EXPECT(gbc.pc(), 0xa354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa352), 0xcb);
        EXPECT(gbc.readMem(0xa353), 0x2);
        // CB 02 02F6
        gbc.setState(0x239e, 0x4600, 0x5530, 0xcbe1, 0x17c1, 0x262c, 0x0, 0x0);
        gbc.writeMem(0x239e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4600);
        EXPECT(gbc.pc(), 0x23a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 02F7
        gbc.setState(0x364a, 0x7342, 0x840, 0xe5ff, 0xf737, 0xf958, 0x1, 0x1);
        gbc.writeMem(0x364a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7342);
        EXPECT(gbc.pc(), 0x364c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02F8
        gbc.setState(0x8cd5, 0xb82f, 0x5310, 0xffcc, 0xb899, 0x441d, 0x1, 0x0);
        gbc.writeMem(0x8cd5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb82f);
        EXPECT(gbc.pc(), 0x8cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd5), 0xcb);
        EXPECT(gbc.readMem(0x8cd6), 0x2);
        // CB 02 02F9
        gbc.setState(0x2d66, 0x6e45, 0xd950, 0x9266, 0x8bed, 0x1f1b, 0x1, 0x0);
        gbc.writeMem(0x2d66, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6e45);
        EXPECT(gbc.pc(), 0x2d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02FA
        gbc.setState(0x5824, 0x636c, 0xbe90, 0x4cb5, 0xe6f5, 0x49b, 0x0, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x636c);
        EXPECT(gbc.pc(), 0x5826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02FB
        gbc.setState(0xc6e6, 0x5759, 0x9340, 0x58ad, 0x9da3, 0x4a8a, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5759);
        EXPECT(gbc.pc(), 0xc6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e6), 0xcb);
        EXPECT(gbc.readMem(0xc6e7), 0x2);
        // CB 02 02FC
        gbc.setState(0x30fa, 0xeedb, 0x3770, 0x4591, 0xb72f, 0xc30b, 0x1, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xeedb);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 02FD
        gbc.setState(0x8dbf, 0x3343, 0xf020, 0x1d56, 0x9de4, 0x3413, 0x1, 0x0);
        gbc.writeMem(0x8dbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0x8dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbf), 0xcb);
        EXPECT(gbc.readMem(0x8dc0), 0x2);
        // CB 02 02FE
        gbc.setState(0xeb17, 0xd9e1, 0x9610, 0x511e, 0x3ca9, 0x9afb, 0x1, 0x0);
        gbc.writeMem(0xeb17, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd9e1);
        EXPECT(gbc.pc(), 0xeb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb17), 0xcb);
        EXPECT(gbc.readMem(0xeb18), 0x2);
        // CB 02 02FF
        gbc.setState(0xb36, 0xaa80, 0x3290, 0x11ca, 0xd564, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa80);
        EXPECT(gbc.pc(), 0xb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0300
        gbc.setState(0xac5c, 0x1b81, 0x20f0, 0xe4b2, 0x6de9, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0xac5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b81);
        EXPECT(gbc.pc(), 0xac5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5c), 0xcb);
        EXPECT(gbc.readMem(0xac5d), 0x2);
        // CB 02 0301
        gbc.setState(0x2ce3, 0x48de, 0x840, 0x38f3, 0x709b, 0x4745, 0x0, 0x1);
        gbc.writeMem(0x2ce3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0302
        gbc.setState(0x7870, 0xce54, 0xb790, 0x2c1f, 0x2b0e, 0x78bd, 0x1, 0x0);
        gbc.writeMem(0x7870, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xce54);
        EXPECT(gbc.pc(), 0x7872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0303
        gbc.setState(0xbbe2, 0x5339, 0xdf10, 0x42b, 0x234c, 0x5962, 0x0, 0x1);
        gbc.writeMem(0xbbe2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5339);
        EXPECT(gbc.pc(), 0xbbe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe2), 0xcb);
        EXPECT(gbc.readMem(0xbbe3), 0x2);
        // CB 02 0304
        gbc.setState(0x48ce, 0x2b73, 0x3600, 0xea6a, 0xae1a, 0x7f0, 0x1, 0x1);
        gbc.writeMem(0x48ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2b73);
        EXPECT(gbc.pc(), 0x48d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0305
        gbc.setState(0x3d2, 0xb51e, 0x3b80, 0xaa5e, 0x7f9b, 0xb8bb, 0x1, 0x0);
        gbc.writeMem(0x3d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb51e);
        EXPECT(gbc.pc(), 0x3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0306
        gbc.setState(0xa652, 0xaa39, 0xe5a0, 0x455c, 0x392, 0x2832, 0x1, 0x0);
        gbc.writeMem(0xa652, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaa39);
        EXPECT(gbc.pc(), 0xa654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa652), 0xcb);
        EXPECT(gbc.readMem(0xa653), 0x2);
        // CB 02 0307
        gbc.setState(0x2ef4, 0xf2e6, 0x5530, 0x8db8, 0xce5b, 0xb81a, 0x0, 0x1);
        gbc.writeMem(0x2ef4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf2e6);
        EXPECT(gbc.pc(), 0x2ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0308
        gbc.setState(0x1b35, 0xfa6d, 0xfa40, 0x7003, 0x8ed2, 0xc6cd, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfa6d);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0309
        gbc.setState(0x7031, 0x2a77, 0x8490, 0xf664, 0xc99, 0xa34e, 0x1, 0x0);
        gbc.writeMem(0x7031, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2a77);
        EXPECT(gbc.pc(), 0x7033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 030A
        gbc.setState(0x75e4, 0xe036, 0x9a10, 0xca33, 0x9c9f, 0x950a, 0x0, 0x0);
        gbc.writeMem(0x75e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe036);
        EXPECT(gbc.pc(), 0x75e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 030B
        gbc.setState(0x371d, 0x31ef, 0xdb80, 0x2c27, 0xc9f4, 0x4787, 0x0, 0x0);
        gbc.writeMem(0x371d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0x371f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 030C
        gbc.setState(0x82b1, 0xd5dd, 0xc4e0, 0xe743, 0x5e90, 0xacd9, 0x0, 0x0);
        gbc.writeMem(0x82b1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd5dd);
        EXPECT(gbc.pc(), 0x82b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b1), 0xcb);
        EXPECT(gbc.readMem(0x82b2), 0x2);
        // CB 02 030D
        gbc.setState(0x12ec, 0x1cc1, 0x8190, 0x9f3b, 0x7754, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1cc1);
        EXPECT(gbc.pc(), 0x12ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 030E
        gbc.setState(0x6ac4, 0x229e, 0xf340, 0x8ba2, 0x711e, 0x6de, 0x1, 0x0);
        gbc.writeMem(0x6ac4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x229e);
        EXPECT(gbc.pc(), 0x6ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 030F
        gbc.setState(0x79ef, 0x443f, 0xe370, 0x33d, 0xe54c, 0x48ef, 0x1, 0x1);
        gbc.writeMem(0x79ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x443f);
        EXPECT(gbc.pc(), 0x79f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0310
        gbc.setState(0x1330, 0x1674, 0x2d40, 0x4d33, 0xd79a, 0x6708, 0x1, 0x0);
        gbc.writeMem(0x1330, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1674);
        EXPECT(gbc.pc(), 0x1332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0311
        gbc.setState(0x3dcf, 0x33bc, 0x4330, 0x2b7c, 0xd0c7, 0xac61, 0x0, 0x1);
        gbc.writeMem(0x3dcf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x33bc);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0312
        gbc.setState(0x7c1e, 0x1c64, 0x92a0, 0x79f4, 0x8418, 0x894b, 0x1, 0x1);
        gbc.writeMem(0x7c1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1c64);
        EXPECT(gbc.pc(), 0x7c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0313
        gbc.setState(0x3316, 0x217f, 0xab80, 0x82b9, 0x47c9, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0x3316, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x217f);
        EXPECT(gbc.pc(), 0x3318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0314
        gbc.setState(0x58e2, 0x90dc, 0xf530, 0xb2e7, 0x5858, 0x844, 0x1, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x90dc);
        EXPECT(gbc.pc(), 0x58e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0315
        gbc.setState(0xb4f6, 0x1255, 0x7d80, 0xd35e, 0x94a5, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0xb4f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1255);
        EXPECT(gbc.pc(), 0xb4f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f6), 0xcb);
        EXPECT(gbc.readMem(0xb4f7), 0x2);
        // CB 02 0316
        gbc.setState(0x1dab, 0x106e, 0x5de0, 0x3a0a, 0x20d3, 0x5a8c, 0x1, 0x1);
        gbc.writeMem(0x1dab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x106e);
        EXPECT(gbc.pc(), 0x1dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0317
        gbc.setState(0xd322, 0xeac7, 0xdb30, 0x490b, 0x6a6b, 0xd876, 0x1, 0x0);
        gbc.writeMem(0xd322, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0xd324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd322), 0xcb);
        EXPECT(gbc.readMem(0xd323), 0x2);
        // CB 02 0319
        gbc.setState(0x55e3, 0xfbf9, 0x5430, 0x1165, 0x2ff, 0xb9fa, 0x0, 0x1);
        gbc.writeMem(0x55e3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfbf9);
        EXPECT(gbc.pc(), 0x55e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 031A
        gbc.setState(0x27c6, 0xb376, 0x5760, 0x2c06, 0xbb6, 0x6cd1, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb376);
        EXPECT(gbc.pc(), 0x27c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 031B
        gbc.setState(0xe210, 0x9125, 0x6e90, 0xb95b, 0x5718, 0xde76, 0x1, 0x0);
        gbc.writeMem(0xe210, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9125);
        EXPECT(gbc.pc(), 0xe212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe210), 0xcb);
        EXPECT(gbc.readMem(0xe211), 0x2);
        // CB 02 031C
        gbc.setState(0x2873, 0x8317, 0xee20, 0xd95e, 0xfeea, 0xcfcb, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8317);
        EXPECT(gbc.pc(), 0x2875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 031D
        gbc.setState(0xc54d, 0x81d6, 0x3980, 0x7102, 0x9d58, 0xac7f, 0x1, 0x1);
        gbc.writeMem(0xc54d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x81d6);
        EXPECT(gbc.pc(), 0xc54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc54d), 0xcb);
        EXPECT(gbc.readMem(0xc54e), 0x2);
        // CB 02 031E
        gbc.setState(0xbc8a, 0x7f85, 0x94c0, 0xedf1, 0x39b6, 0x8211, 0x0, 0x1);
        gbc.writeMem(0xbc8a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7f85);
        EXPECT(gbc.pc(), 0xbc8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8a), 0xcb);
        EXPECT(gbc.readMem(0xbc8b), 0x2);
        // CB 02 031F
        gbc.setState(0x6280, 0x4d52, 0xbef0, 0xe717, 0x3908, 0x156b, 0x1, 0x1);
        gbc.writeMem(0x6280, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4d52);
        EXPECT(gbc.pc(), 0x6282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0320
        gbc.setState(0x567d, 0x9016, 0xea20, 0xf45b, 0x28e0, 0xb7dc, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9016);
        EXPECT(gbc.pc(), 0x567f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0321
        gbc.setState(0x7dd2, 0x724e, 0x8260, 0xc5e6, 0x2c09, 0x39ab, 0x1, 0x1);
        gbc.writeMem(0x7dd2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x724e);
        EXPECT(gbc.pc(), 0x7dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0322
        gbc.setState(0x7e90, 0xb6ac, 0x52e0, 0xaf7c, 0x88a, 0xda1e, 0x0, 0x1);
        gbc.writeMem(0x7e90, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb6ac);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0324
        gbc.setState(0x5a5c, 0x3abb, 0x4db0, 0x69c2, 0xb51a, 0x744, 0x0, 0x0);
        gbc.writeMem(0x5a5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3abb);
        EXPECT(gbc.pc(), 0x5a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0325
        gbc.setState(0x26b3, 0xcb0c, 0x6b0, 0xc5ec, 0xee97, 0xd858, 0x1, 0x0);
        gbc.writeMem(0x26b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0x26b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0326
        gbc.setState(0xad77, 0x54f1, 0xf180, 0xdb44, 0xc8a2, 0x1733, 0x0, 0x1);
        gbc.writeMem(0xad77, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0xad79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad77), 0xcb);
        EXPECT(gbc.readMem(0xad78), 0x2);
        // CB 02 0327
        gbc.setState(0xb3f, 0x4ab1, 0x9660, 0xd954, 0x49a0, 0xe10b, 0x1, 0x1);
        gbc.writeMem(0xb3f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4ab1);
        EXPECT(gbc.pc(), 0xb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0328
        gbc.setState(0xa1ff, 0x5269, 0x60b0, 0xa78, 0xff87, 0xc0b4, 0x0, 0x0);
        gbc.writeMem(0xa1ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5269);
        EXPECT(gbc.pc(), 0xa201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ff), 0xcb);
        EXPECT(gbc.readMem(0xa200), 0x2);
        // CB 02 0329
        gbc.setState(0xb9fc, 0x704a, 0xd3a0, 0x31c8, 0xbfbb, 0x316f, 0x1, 0x0);
        gbc.writeMem(0xb9fc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x704a);
        EXPECT(gbc.pc(), 0xb9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fc), 0xcb);
        EXPECT(gbc.readMem(0xb9fd), 0x2);
        // CB 02 032B
        gbc.setState(0x41df, 0x916, 0x3e20, 0x6647, 0x6eb6, 0x6cc2, 0x0, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x916);
        EXPECT(gbc.pc(), 0x41e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 032C
        gbc.setState(0x61d6, 0x59d5, 0xb4d0, 0xaadb, 0xb7f8, 0x3cb2, 0x0, 0x0);
        gbc.writeMem(0x61d6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x59d5);
        EXPECT(gbc.pc(), 0x61d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 032D
        gbc.setState(0x2bd, 0x4a5c, 0x2df0, 0x3428, 0x3192, 0x4b59, 0x1, 0x1);
        gbc.writeMem(0x2bd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0x2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 032E
        gbc.setState(0xb29a, 0xa590, 0x1a90, 0x7f16, 0xa304, 0x81b8, 0x1, 0x0);
        gbc.writeMem(0xb29a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0xb29c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29a), 0xcb);
        EXPECT(gbc.readMem(0xb29b), 0x2);
        // CB 02 032F
        gbc.setState(0xc1f8, 0x7e05, 0xe6c0, 0x741a, 0xf8c4, 0x841d, 0x0, 0x1);
        gbc.writeMem(0xc1f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7e05);
        EXPECT(gbc.pc(), 0xc1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f8), 0xcb);
        EXPECT(gbc.readMem(0xc1f9), 0x2);
        // CB 02 0330
        gbc.setState(0x2272, 0x8556, 0x5770, 0x827f, 0xbb0b, 0x85c6, 0x1, 0x0);
        gbc.writeMem(0x2272, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8556);
        EXPECT(gbc.pc(), 0x2274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0331
        gbc.setState(0x9207, 0x4d5, 0xdb60, 0x818d, 0x2cdb, 0x7f6f, 0x0, 0x1);
        gbc.writeMem(0x9207, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4d5);
        EXPECT(gbc.pc(), 0x9209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9207), 0xcb);
        EXPECT(gbc.readMem(0x9208), 0x2);
        // CB 02 0332
        gbc.setState(0x2fce, 0xa096, 0x4f00, 0xe3e1, 0xc3f7, 0xd557, 0x0, 0x1);
        gbc.writeMem(0x2fce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa096);
        EXPECT(gbc.pc(), 0x2fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0333
        gbc.setState(0x9030, 0x6c65, 0x5fe0, 0x218c, 0xe14f, 0xe709, 0x1, 0x1);
        gbc.writeMem(0x9030, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6c65);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0xcb);
        EXPECT(gbc.readMem(0x9031), 0x2);
        // CB 02 0334
        gbc.setState(0xcb8, 0x764f, 0xdab0, 0xea0, 0x50b9, 0x352f, 0x1, 0x0);
        gbc.writeMem(0xcb8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x764f);
        EXPECT(gbc.pc(), 0xcba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0335
        gbc.setState(0xb6a0, 0x6c62, 0x3590, 0x762a, 0x5b6a, 0x24bb, 0x0, 0x0);
        gbc.writeMem(0xb6a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6c62);
        EXPECT(gbc.pc(), 0xb6a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a0), 0xcb);
        EXPECT(gbc.readMem(0xb6a1), 0x2);
        // CB 02 0336
        gbc.setState(0x11ea, 0xad13, 0x3570, 0x42d8, 0x9a45, 0x422e, 0x0, 0x1);
        gbc.writeMem(0x11ea, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xad13);
        EXPECT(gbc.pc(), 0x11ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0337
        gbc.setState(0x10e0, 0xc3e, 0x72e0, 0xa7be, 0x8d64, 0xa87c, 0x1, 0x1);
        gbc.writeMem(0x10e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc3e);
        EXPECT(gbc.pc(), 0x10e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0338
        gbc.setState(0x4317, 0xda0b, 0xe5b0, 0x468c, 0xbf70, 0xa375, 0x1, 0x0);
        gbc.writeMem(0x4317, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xda0b);
        EXPECT(gbc.pc(), 0x4319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0339
        gbc.setState(0xc8f1, 0xe857, 0xc910, 0x155f, 0xe1ed, 0x70a9, 0x0, 0x1);
        gbc.writeMem(0xc8f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe857);
        EXPECT(gbc.pc(), 0xc8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f1), 0xcb);
        EXPECT(gbc.readMem(0xc8f2), 0x2);
        // CB 02 033A
        gbc.setState(0x8bcf, 0x5da1, 0xa590, 0x2cfc, 0x2ac6, 0x3649, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5da1);
        EXPECT(gbc.pc(), 0x8bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bcf), 0xcb);
        EXPECT(gbc.readMem(0x8bd0), 0x2);
        // CB 02 033B
        gbc.setState(0x30ff, 0x87f5, 0x500, 0x720, 0x671d, 0x995e, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x87f5);
        EXPECT(gbc.pc(), 0x3101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 033C
        gbc.setState(0xed09, 0xd651, 0x9590, 0x97f3, 0x39e4, 0x5021, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd651);
        EXPECT(gbc.pc(), 0xed0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed09), 0xcb);
        EXPECT(gbc.readMem(0xed0a), 0x2);
        // CB 02 033D
        gbc.setState(0x9c04, 0x5a08, 0x5fa0, 0xfe58, 0xf08e, 0x94ff, 0x0, 0x0);
        gbc.writeMem(0x9c04, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5a08);
        EXPECT(gbc.pc(), 0x9c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c04), 0xcb);
        EXPECT(gbc.readMem(0x9c05), 0x2);
        // CB 02 033E
        gbc.setState(0xa26b, 0xbb6e, 0x73c0, 0xb94, 0xd265, 0x2071, 0x0, 0x1);
        gbc.writeMem(0xa26b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbb6e);
        EXPECT(gbc.pc(), 0xa26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26b), 0xcb);
        EXPECT(gbc.readMem(0xa26c), 0x2);
        // CB 02 033F
        gbc.setState(0xe0ae, 0x14a9, 0x6e10, 0x5960, 0xd79f, 0x141d, 0x0, 0x0);
        gbc.writeMem(0xe0ae, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x14a9);
        EXPECT(gbc.pc(), 0xe0b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ae), 0xcb);
        EXPECT(gbc.readMem(0xe0af), 0x2);
        // CB 02 0340
        gbc.setState(0xb376, 0x5825, 0xba10, 0x3809, 0xf98e, 0xfe97, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0xb378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb376), 0xcb);
        EXPECT(gbc.readMem(0xb377), 0x2);
        // CB 02 0341
        gbc.setState(0x8010, 0x4f6f, 0x3400, 0x7573, 0xa23e, 0x6138, 0x1, 0x1);
        gbc.writeMem(0x8010, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4f6f);
        EXPECT(gbc.pc(), 0x8012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8010), 0xcb);
        EXPECT(gbc.readMem(0x8011), 0x2);
        // CB 02 0342
        gbc.setState(0x3b56, 0xae3c, 0xe790, 0x2f6d, 0xd628, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x3b56, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xae3c);
        EXPECT(gbc.pc(), 0x3b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0343
        gbc.setState(0x4233, 0xbb9e, 0x4dc0, 0xd2f2, 0xa75c, 0xa44b, 0x1, 0x1);
        gbc.writeMem(0x4233, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbb9e);
        EXPECT(gbc.pc(), 0x4235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0344
        gbc.setState(0xa5d, 0xaf83, 0x81d0, 0x435a, 0x79a7, 0xae3a, 0x1, 0x1);
        gbc.writeMem(0xa5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaf83);
        EXPECT(gbc.pc(), 0xa5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0345
        gbc.setState(0x9af, 0x1042, 0x9820, 0x46f6, 0x90e6, 0x734, 0x0, 0x1);
        gbc.writeMem(0x9af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1042);
        EXPECT(gbc.pc(), 0x9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0346
        gbc.setState(0x7778, 0xfba9, 0x5710, 0x1afa, 0x4dc7, 0x8273, 0x0, 0x1);
        gbc.writeMem(0x7778, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfba9);
        EXPECT(gbc.pc(), 0x777a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0347
        gbc.setState(0x8ad3, 0x838b, 0x2ed0, 0x3c7c, 0x6ff6, 0x707c, 0x0, 0x0);
        gbc.writeMem(0x8ad3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x838b);
        EXPECT(gbc.pc(), 0x8ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad3), 0xcb);
        EXPECT(gbc.readMem(0x8ad4), 0x2);
        // CB 02 0348
        gbc.setState(0xb896, 0x853d, 0x77c0, 0x5855, 0x9eb1, 0x417d, 0x1, 0x1);
        gbc.writeMem(0xb896, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x853d);
        EXPECT(gbc.pc(), 0xb898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb896), 0xcb);
        EXPECT(gbc.readMem(0xb897), 0x2);
        // CB 02 034A
        gbc.setState(0xc5d8, 0x2e15, 0xb0b0, 0x48ff, 0x9166, 0x8f93, 0x0, 0x1);
        gbc.writeMem(0xc5d8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2e15);
        EXPECT(gbc.pc(), 0xc5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d8), 0xcb);
        EXPECT(gbc.readMem(0xc5d9), 0x2);
        // CB 02 034B
        gbc.setState(0x6a4d, 0xa729, 0xd5b0, 0x7ad5, 0x7a64, 0x4075, 0x0, 0x0);
        gbc.writeMem(0x6a4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa729);
        EXPECT(gbc.pc(), 0x6a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 034C
        gbc.setState(0xb0f3, 0xf37f, 0xcf00, 0xcf3d, 0x6bc5, 0x3a7c, 0x1, 0x1);
        gbc.writeMem(0xb0f3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf37f);
        EXPECT(gbc.pc(), 0xb0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f3), 0xcb);
        EXPECT(gbc.readMem(0xb0f4), 0x2);
        // CB 02 034D
        gbc.setState(0xb620, 0xee9c, 0xe5e0, 0x8fa4, 0xe2c7, 0xe972, 0x1, 0x0);
        gbc.writeMem(0xb620, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0xb622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb620), 0xcb);
        EXPECT(gbc.readMem(0xb621), 0x2);
        // CB 02 034E
        gbc.setState(0xcd3c, 0x9922, 0x7fb0, 0x5afd, 0x1ae0, 0x3332, 0x0, 0x0);
        gbc.writeMem(0xcd3c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9922);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3c), 0xcb);
        EXPECT(gbc.readMem(0xcd3d), 0x2);
        // CB 02 034F
        gbc.setState(0xe8a9, 0xef62, 0xf270, 0xe53e, 0x80ca, 0x991a, 0x0, 0x0);
        gbc.writeMem(0xe8a9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xef62);
        EXPECT(gbc.pc(), 0xe8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a9), 0xcb);
        EXPECT(gbc.readMem(0xe8aa), 0x2);
        // CB 02 0350
        gbc.setState(0x42c5, 0x1ea1, 0x1670, 0x2490, 0xe1f3, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x42c5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1ea1);
        EXPECT(gbc.pc(), 0x42c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0351
        gbc.setState(0x4c23, 0x1d16, 0x7a0, 0x81e5, 0x168b, 0x87b0, 0x1, 0x1);
        gbc.writeMem(0x4c23, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1d16);
        EXPECT(gbc.pc(), 0x4c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0352
        gbc.setState(0xe912, 0x36f9, 0x5f60, 0x6a42, 0x38e4, 0x6f26, 0x0, 0x0);
        gbc.writeMem(0xe912, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x36f9);
        EXPECT(gbc.pc(), 0xe914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe912), 0xcb);
        EXPECT(gbc.readMem(0xe913), 0x2);
        // CB 02 0353
        gbc.setState(0x9a6a, 0x21d1, 0xbc60, 0x196d, 0x661f, 0x3929, 0x0, 0x1);
        gbc.writeMem(0x9a6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x21d1);
        EXPECT(gbc.pc(), 0x9a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6a), 0xcb);
        EXPECT(gbc.readMem(0x9a6b), 0x2);
        // CB 02 0354
        gbc.setState(0x3f11, 0x77e0, 0xcbd0, 0xf27c, 0xb1b1, 0x181, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x77e0);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0355
        gbc.setState(0x5892, 0x646b, 0x5640, 0xfd02, 0x8d4c, 0x98e7, 0x1, 0x0);
        gbc.writeMem(0x5892, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x646b);
        EXPECT(gbc.pc(), 0x5894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0357
        gbc.setState(0x3982, 0x54f3, 0x3a0, 0xf8e9, 0xe123, 0xa58, 0x0, 0x0);
        gbc.writeMem(0x3982, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0358
        gbc.setState(0xee63, 0xc551, 0xfec0, 0x2e3f, 0x7e43, 0xd559, 0x0, 0x0);
        gbc.writeMem(0xee63, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc551);
        EXPECT(gbc.pc(), 0xee65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee63), 0xcb);
        EXPECT(gbc.readMem(0xee64), 0x2);
        // CB 02 0359
        gbc.setState(0xc7e0, 0x90a0, 0xcd20, 0x776c, 0x870a, 0x7782, 0x1, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x90a0);
        EXPECT(gbc.pc(), 0xc7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e0), 0xcb);
        EXPECT(gbc.readMem(0xc7e1), 0x2);
        // CB 02 035A
        gbc.setState(0x57dc, 0x1c0b, 0x4ed0, 0x3450, 0x8e41, 0x18c0, 0x0, 0x0);
        gbc.writeMem(0x57dc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1c0b);
        EXPECT(gbc.pc(), 0x57de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 035B
        gbc.setState(0x8b05, 0x54bc, 0x7d90, 0xd291, 0xf937, 0x1e58, 0x0, 0x0);
        gbc.writeMem(0x8b05, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x54bc);
        EXPECT(gbc.pc(), 0x8b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b05), 0xcb);
        EXPECT(gbc.readMem(0x8b06), 0x2);
        // CB 02 035C
        gbc.setState(0x756, 0xa1f9, 0x82b0, 0x3f5a, 0xd419, 0x1f8a, 0x0, 0x0);
        gbc.writeMem(0x756, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa1f9);
        EXPECT(gbc.pc(), 0x758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 035D
        gbc.setState(0xec7b, 0x5d6f, 0x9cf0, 0xca34, 0xccb4, 0x42a3, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5d6f);
        EXPECT(gbc.pc(), 0xec7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7b), 0xcb);
        EXPECT(gbc.readMem(0xec7c), 0x2);
        // CB 02 035E
        gbc.setState(0x6f37, 0x469c, 0xe060, 0xc0f7, 0x8843, 0x69d2, 0x1, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0x6f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 035F
        gbc.setState(0x2e70, 0xec7c, 0x4d40, 0x589, 0xcdd, 0x9acb, 0x1, 0x0);
        gbc.writeMem(0x2e70, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xec7c);
        EXPECT(gbc.pc(), 0x2e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0360
        gbc.setState(0x5109, 0xf4d1, 0x97f0, 0x633f, 0xcb2b, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x5109, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x510b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0361
        gbc.setState(0x8841, 0x3c50, 0xe550, 0x9bd5, 0x1917, 0xdbb, 0x1, 0x1);
        gbc.writeMem(0x8841, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3c50);
        EXPECT(gbc.pc(), 0x8843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8841), 0xcb);
        EXPECT(gbc.readMem(0x8842), 0x2);
        // CB 02 0362
        gbc.setState(0x29e0, 0xbec3, 0xc6d0, 0x8f37, 0x8b0a, 0x23a2, 0x1, 0x0);
        gbc.writeMem(0x29e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbec3);
        EXPECT(gbc.pc(), 0x29e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0363
        gbc.setState(0x2a17, 0xcf60, 0x4d80, 0xf6, 0x9d8b, 0xf407, 0x1, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcf60);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0364
        gbc.setState(0x45af, 0xe48e, 0x4140, 0x7cd0, 0xa676, 0x5e44, 0x0, 0x1);
        gbc.writeMem(0x45af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe48e);
        EXPECT(gbc.pc(), 0x45b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0365
        gbc.setState(0x71b2, 0x118e, 0x14f0, 0x329b, 0xc584, 0xad82, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x118e);
        EXPECT(gbc.pc(), 0x71b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0366
        gbc.setState(0xab86, 0x23e, 0xd660, 0xd5b3, 0x3c, 0x96fb, 0x0, 0x0);
        gbc.writeMem(0xab86, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x23e);
        EXPECT(gbc.pc(), 0xab88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab86), 0xcb);
        EXPECT(gbc.readMem(0xab87), 0x2);
        // CB 02 0367
        gbc.setState(0xb56a, 0x8547, 0xd100, 0x1e13, 0x9bfe, 0x8d60, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8547);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0x2);
        // CB 02 0368
        gbc.setState(0x134c, 0xcd05, 0x16a0, 0xda3, 0x80c2, 0x9510, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcd05);
        EXPECT(gbc.pc(), 0x134e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0369
        gbc.setState(0x5d7a, 0x1bf7, 0x6050, 0xddb7, 0x7568, 0x89ca, 0x0, 0x1);
        gbc.writeMem(0x5d7a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1bf7);
        EXPECT(gbc.pc(), 0x5d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 036A
        gbc.setState(0x3256, 0xe131, 0xbfb0, 0x1d9d, 0x6de2, 0x6313, 0x0, 0x0);
        gbc.writeMem(0x3256, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe131);
        EXPECT(gbc.pc(), 0x3258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 036B
        gbc.setState(0x822d, 0x2c4a, 0x7ac0, 0xbdc6, 0xf094, 0xf53c, 0x0, 0x1);
        gbc.writeMem(0x822d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2c4a);
        EXPECT(gbc.pc(), 0x822f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822d), 0xcb);
        EXPECT(gbc.readMem(0x822e), 0x2);
        // CB 02 036C
        gbc.setState(0xbeb7, 0xc38c, 0x7c90, 0xbeed, 0x164d, 0xa35d, 0x0, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc38c);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb7), 0xcb);
        EXPECT(gbc.readMem(0xbeb8), 0x2);
        // CB 02 036D
        gbc.setState(0xdd, 0x5bfa, 0x3f10, 0x915f, 0xaac0, 0x65b2, 0x1, 0x1);
        gbc.writeMem(0xdd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5bfa);
        EXPECT(gbc.pc(), 0xdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 036E
        gbc.setState(0x72f1, 0xe114, 0xfab0, 0xb28c, 0xec3f, 0x7aa9, 0x1, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe114);
        EXPECT(gbc.pc(), 0x72f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 036F
        gbc.setState(0x35aa, 0x1641, 0x690, 0xa566, 0xbf79, 0x19e2, 0x0, 0x1);
        gbc.writeMem(0x35aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1641);
        EXPECT(gbc.pc(), 0x35ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0370
        gbc.setState(0xc0e8, 0x7c92, 0x6650, 0xdc42, 0x1140, 0xe9e2, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7c92);
        EXPECT(gbc.pc(), 0xc0ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e8), 0xcb);
        EXPECT(gbc.readMem(0xc0e9), 0x2);
        // CB 02 0371
        gbc.setState(0x81f8, 0xca38, 0x5b80, 0x82e1, 0x18f2, 0x1b87, 0x1, 0x1);
        gbc.writeMem(0x81f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xca38);
        EXPECT(gbc.pc(), 0x81fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f8), 0xcb);
        EXPECT(gbc.readMem(0x81f9), 0x2);
        // CB 02 0372
        gbc.setState(0xa526, 0x1fd3, 0xc0, 0x6b23, 0xbad6, 0x7b73, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1fd3);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa526), 0xcb);
        EXPECT(gbc.readMem(0xa527), 0x2);
        // CB 02 0373
        gbc.setState(0x3751, 0x918f, 0xba00, 0xd5c5, 0xc8dd, 0x80d4, 0x0, 0x0);
        gbc.writeMem(0x3751, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x918f);
        EXPECT(gbc.pc(), 0x3753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0374
        gbc.setState(0x99e8, 0xdbd7, 0x6de0, 0x886f, 0x307b, 0xc87a, 0x0, 0x0);
        gbc.writeMem(0x99e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdbd7);
        EXPECT(gbc.pc(), 0x99ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e8), 0xcb);
        EXPECT(gbc.readMem(0x99e9), 0x2);
        // CB 02 0375
        gbc.setState(0x723, 0x435e, 0xf280, 0x9e2e, 0xb1a7, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x723, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x435e);
        EXPECT(gbc.pc(), 0x725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0376
        gbc.setState(0x6444, 0x493, 0xc180, 0xb59f, 0x821e, 0xa73a, 0x0, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x493);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0377
        gbc.setState(0xe46b, 0xad8e, 0x1df0, 0x8f8f, 0xea0e, 0xa8da, 0x0, 0x1);
        gbc.writeMem(0xe46b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xad8e);
        EXPECT(gbc.pc(), 0xe46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46b), 0xcb);
        EXPECT(gbc.readMem(0xe46c), 0x2);
        // CB 02 0378
        gbc.setState(0xc73, 0x2bb1, 0x1860, 0xedbc, 0x3d90, 0x3384, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2bb1);
        EXPECT(gbc.pc(), 0xc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0379
        gbc.setState(0x8d1b, 0x3a01, 0x4db0, 0xa888, 0x6b25, 0x7391, 0x0, 0x1);
        gbc.writeMem(0x8d1b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3a01);
        EXPECT(gbc.pc(), 0x8d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1b), 0xcb);
        EXPECT(gbc.readMem(0x8d1c), 0x2);
        // CB 02 037A
        gbc.setState(0x4085, 0xcb1, 0x4530, 0xd2ab, 0xcb02, 0x55ae, 0x0, 0x1);
        gbc.writeMem(0x4085, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcb1);
        EXPECT(gbc.pc(), 0x4087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 037B
        gbc.setState(0xc16a, 0x10d5, 0xc870, 0xeb8, 0xcf09, 0xa45a, 0x0, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x10d5);
        EXPECT(gbc.pc(), 0xc16c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16a), 0xcb);
        EXPECT(gbc.readMem(0xc16b), 0x2);
        // CB 02 037C
        gbc.setState(0xbb77, 0x9260, 0x51a0, 0x756e, 0xd50, 0x3e8a, 0x0, 0x1);
        gbc.writeMem(0xbb77, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9260);
        EXPECT(gbc.pc(), 0xbb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb77), 0xcb);
        EXPECT(gbc.readMem(0xbb78), 0x2);
        // CB 02 037D
        gbc.setState(0x51e9, 0x2042, 0x3c70, 0x6d62, 0xf752, 0x8fc4, 0x1, 0x0);
        gbc.writeMem(0x51e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2042);
        EXPECT(gbc.pc(), 0x51eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 037E
        gbc.setState(0x560d, 0xc645, 0x8c00, 0xa94c, 0xf7b8, 0x1a69, 0x0, 0x1);
        gbc.writeMem(0x560d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc645);
        EXPECT(gbc.pc(), 0x560f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 037F
        gbc.setState(0x52e4, 0xbecd, 0xaf50, 0x1676, 0x55d, 0xcdba, 0x1, 0x1);
        gbc.writeMem(0x52e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbecd);
        EXPECT(gbc.pc(), 0x52e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0380
        gbc.setState(0x50b6, 0xe13e, 0xae00, 0x7dd6, 0xb627, 0x3327, 0x1, 0x1);
        gbc.writeMem(0x50b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe13e);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0381
        gbc.setState(0xb34d, 0x8e99, 0xe7d0, 0xca9f, 0xaa0e, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0xb34d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8e99);
        EXPECT(gbc.pc(), 0xb34f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34d), 0xcb);
        EXPECT(gbc.readMem(0xb34e), 0x2);
        // CB 02 0382
        gbc.setState(0x619d, 0xd0ed, 0xdbe0, 0x6757, 0x9e3e, 0xcb64, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0x619f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0383
        gbc.setState(0x3403, 0x6ab0, 0xcad0, 0x3904, 0xb927, 0x1b03, 0x1, 0x1);
        gbc.writeMem(0x3403, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6ab0);
        EXPECT(gbc.pc(), 0x3405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0384
        gbc.setState(0x157a, 0xaf96, 0x290, 0xbaff, 0x61ee, 0xfca4, 0x1, 0x0);
        gbc.writeMem(0x157a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaf96);
        EXPECT(gbc.pc(), 0x157c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0386
        gbc.setState(0x82e9, 0xdd51, 0xf7f0, 0x59f5, 0x2100, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0x82e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdd51);
        EXPECT(gbc.pc(), 0x82eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e9), 0xcb);
        EXPECT(gbc.readMem(0x82ea), 0x2);
        // CB 02 0387
        gbc.setState(0x8f36, 0xb915, 0x2e30, 0x9a56, 0xf88e, 0x7897, 0x1, 0x0);
        gbc.writeMem(0x8f36, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0x8f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f36), 0xcb);
        EXPECT(gbc.readMem(0x8f37), 0x2);
        // CB 02 0388
        gbc.setState(0x125d, 0xea0b, 0x47e0, 0xb7db, 0x6f1c, 0x1185, 0x0, 0x1);
        gbc.writeMem(0x125d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xea0b);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0389
        gbc.setState(0x8854, 0xeca2, 0x7d10, 0xeaea, 0x9e9, 0xf9b0, 0x0, 0x0);
        gbc.writeMem(0x8854, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xeca2);
        EXPECT(gbc.pc(), 0x8856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8854), 0xcb);
        EXPECT(gbc.readMem(0x8855), 0x2);
        // CB 02 038A
        gbc.setState(0xc482, 0x4e2, 0x32c0, 0xb2b0, 0xf985, 0xba3b, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4e2);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0x2);
        // CB 02 038B
        gbc.setState(0x1319, 0x327, 0xafb0, 0xa6bb, 0xf432, 0x7918, 0x0, 0x0);
        gbc.writeMem(0x1319, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x327);
        EXPECT(gbc.pc(), 0x131b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 038C
        gbc.setState(0x9dd3, 0x537b, 0x24d0, 0xe78e, 0x21f4, 0xc50d, 0x1, 0x0);
        gbc.writeMem(0x9dd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x537b);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd3), 0xcb);
        EXPECT(gbc.readMem(0x9dd4), 0x2);
        // CB 02 038D
        gbc.setState(0xd9ff, 0x4a0f, 0xb0e0, 0xd678, 0x74e8, 0x5357, 0x0, 0x1);
        gbc.writeMem(0xd9ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4a0f);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ff), 0xcb);
        EXPECT(gbc.readMem(0xda00), 0x2);
        // CB 02 038E
        gbc.setState(0xc8ab, 0x6c9f, 0xeb30, 0x395b, 0x26f2, 0xb012, 0x0, 0x1);
        gbc.writeMem(0xc8ab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6c9f);
        EXPECT(gbc.pc(), 0xc8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ab), 0xcb);
        EXPECT(gbc.readMem(0xc8ac), 0x2);
        // CB 02 038F
        gbc.setState(0x8e38, 0xc36, 0xa540, 0xa2fb, 0xc035, 0xba74, 0x0, 0x0);
        gbc.writeMem(0x8e38, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc36);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e38), 0xcb);
        EXPECT(gbc.readMem(0x8e39), 0x2);
        // CB 02 0390
        gbc.setState(0x2e6c, 0x41b4, 0x410, 0x7afb, 0xa480, 0x348a, 0x0, 0x1);
        gbc.writeMem(0x2e6c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x41b4);
        EXPECT(gbc.pc(), 0x2e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0391
        gbc.setState(0x16dd, 0x1e40, 0xc3b0, 0xe4ef, 0x8e2e, 0xa7af, 0x0, 0x1);
        gbc.writeMem(0x16dd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1e40);
        EXPECT(gbc.pc(), 0x16df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0392
        gbc.setState(0xe1f9, 0xf523, 0xe790, 0x12ef, 0xa93b, 0xc2b9, 0x1, 0x1);
        gbc.writeMem(0xe1f9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf523);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0x2);
        // CB 02 0393
        gbc.setState(0x3987, 0xe0ef, 0x63c0, 0xed7f, 0xebe1, 0xe7, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe0ef);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0394
        gbc.setState(0x91ec, 0x2084, 0x7230, 0x32e3, 0x648b, 0xcc94, 0x0, 0x1);
        gbc.writeMem(0x91ec, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2084);
        EXPECT(gbc.pc(), 0x91ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ec), 0xcb);
        EXPECT(gbc.readMem(0x91ed), 0x2);
        // CB 02 0395
        gbc.setState(0x778b, 0x59e3, 0x9750, 0xa647, 0x87b0, 0xa402, 0x0, 0x0);
        gbc.writeMem(0x778b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x59e3);
        EXPECT(gbc.pc(), 0x778d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 0396
        gbc.setState(0x8129, 0x9542, 0x8650, 0xecbd, 0x8991, 0xc076, 0x1, 0x0);
        gbc.writeMem(0x8129, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9542);
        EXPECT(gbc.pc(), 0x812b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8129), 0xcb);
        EXPECT(gbc.readMem(0x812a), 0x2);
        // CB 02 0397
        gbc.setState(0x88cd, 0x7230, 0x2b80, 0xf999, 0xb2b8, 0x293, 0x0, 0x1);
        gbc.writeMem(0x88cd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7230);
        EXPECT(gbc.pc(), 0x88cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cd), 0xcb);
        EXPECT(gbc.readMem(0x88ce), 0x2);
        // CB 02 0398
        gbc.setState(0x3051, 0x7d58, 0x8c80, 0x2800, 0x32bb, 0xea8a, 0x1, 0x0);
        gbc.writeMem(0x3051, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7d58);
        EXPECT(gbc.pc(), 0x3053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 0399
        gbc.setState(0x7636, 0xf248, 0xf160, 0x3d21, 0xcd34, 0xb3e0, 0x0, 0x1);
        gbc.writeMem(0x7636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf248);
        EXPECT(gbc.pc(), 0x7638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 039B
        gbc.setState(0x47, 0x1f3f, 0x9d0, 0xa9be, 0x6c9, 0x78b6, 0x1, 0x1);
        gbc.writeMem(0x47, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1f3f);
        EXPECT(gbc.pc(), 0x49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 039C
        gbc.setState(0x7646, 0x8837, 0xd10, 0xfa51, 0x9641, 0x7328, 0x1, 0x1);
        gbc.writeMem(0x7646, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8837);
        EXPECT(gbc.pc(), 0x7648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 039D
        gbc.setState(0xdbac, 0xa87d, 0x80a0, 0x1ae6, 0xf656, 0x54fb, 0x1, 0x1);
        gbc.writeMem(0xdbac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa87d);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbac), 0xcb);
        EXPECT(gbc.readMem(0xdbad), 0x2);
        // CB 02 039E
        gbc.setState(0xa6a1, 0xc96b, 0x1b50, 0x5908, 0xd5e1, 0x91aa, 0x1, 0x1);
        gbc.writeMem(0xa6a1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc96b);
        EXPECT(gbc.pc(), 0xa6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a1), 0xcb);
        EXPECT(gbc.readMem(0xa6a2), 0x2);
        // CB 02 039F
        gbc.setState(0x95d2, 0xcfd0, 0x430, 0x56e7, 0x84bf, 0x54e0, 0x1, 0x1);
        gbc.writeMem(0x95d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcfd0);
        EXPECT(gbc.pc(), 0x95d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d2), 0xcb);
        EXPECT(gbc.readMem(0x95d3), 0x2);
        // CB 02 03A0
        gbc.setState(0x3cee, 0xd89d, 0x9b20, 0xe81c, 0x3046, 0xbb16, 0x0, 0x0);
        gbc.writeMem(0x3cee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd89d);
        EXPECT(gbc.pc(), 0x3cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03A2
        gbc.setState(0x9fe3, 0xf8f6, 0xd0d0, 0xbe49, 0x2f8e, 0x430a, 0x1, 0x1);
        gbc.writeMem(0x9fe3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf8f6);
        EXPECT(gbc.pc(), 0x9fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe3), 0xcb);
        EXPECT(gbc.readMem(0x9fe4), 0x2);
        // CB 02 03A3
        gbc.setState(0x72a0, 0x403a, 0x2400, 0xc7ed, 0x1883, 0x2d34, 0x0, 0x1);
        gbc.writeMem(0x72a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x403a);
        EXPECT(gbc.pc(), 0x72a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03A4
        gbc.setState(0x63b2, 0x4d9f, 0xd590, 0x8727, 0xfcee, 0x2b02, 0x0, 0x1);
        gbc.writeMem(0x63b2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4d9f);
        EXPECT(gbc.pc(), 0x63b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03A5
        gbc.setState(0x18ab, 0xb7d0, 0x55c0, 0xdc32, 0x3c2, 0x5f24, 0x1, 0x1);
        gbc.writeMem(0x18ab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb7d0);
        EXPECT(gbc.pc(), 0x18ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03A6
        gbc.setState(0x31fb, 0x1f7a, 0x63d0, 0xfda4, 0x9977, 0x223b, 0x1, 0x0);
        gbc.writeMem(0x31fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1f7a);
        EXPECT(gbc.pc(), 0x31fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03A7
        gbc.setState(0x581d, 0xfd5, 0x36f0, 0x2482, 0xf7a9, 0xadf1, 0x0, 0x1);
        gbc.writeMem(0x581d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfd5);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03A8
        gbc.setState(0x4bf7, 0x7a3d, 0xf5d0, 0xc258, 0xe620, 0xf36d, 0x0, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7a3d);
        EXPECT(gbc.pc(), 0x4bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03A9
        gbc.setState(0x9980, 0xf806, 0x6bc0, 0xd30f, 0x2e04, 0x2a95, 0x0, 0x1);
        gbc.writeMem(0x9980, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf806);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9980), 0xcb);
        EXPECT(gbc.readMem(0x9981), 0x2);
        // CB 02 03AA
        gbc.setState(0x4958, 0x8b2c, 0x2ec0, 0x427e, 0xbfe2, 0x7aae, 0x1, 0x1);
        gbc.writeMem(0x4958, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8b2c);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03AB
        gbc.setState(0xc444, 0x9820, 0x6010, 0x210c, 0x4740, 0xffc4, 0x0, 0x0);
        gbc.writeMem(0xc444, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9820);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc444), 0xcb);
        EXPECT(gbc.readMem(0xc445), 0x2);
        // CB 02 03AC
        gbc.setState(0x4d64, 0x4689, 0x5160, 0x31a4, 0xd60a, 0x7567, 0x1, 0x1);
        gbc.writeMem(0x4d64, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4689);
        EXPECT(gbc.pc(), 0x4d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03AD
        gbc.setState(0xd1b3, 0xdaf3, 0xfaf0, 0xba5d, 0x8a0e, 0x76e0, 0x1, 0x1);
        gbc.writeMem(0xd1b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdaf3);
        EXPECT(gbc.pc(), 0xd1b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b3), 0xcb);
        EXPECT(gbc.readMem(0xd1b4), 0x2);
        // CB 02 03AE
        gbc.setState(0x6181, 0xc01d, 0xa4b0, 0x3fe9, 0x83fb, 0x4aaf, 0x0, 0x0);
        gbc.writeMem(0x6181, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc01d);
        EXPECT(gbc.pc(), 0x6183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03AF
        gbc.setState(0x5c22, 0x35be, 0x1d50, 0x25cf, 0xcd71, 0x7c84, 0x1, 0x0);
        gbc.writeMem(0x5c22, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x35be);
        EXPECT(gbc.pc(), 0x5c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03B0
        gbc.setState(0x8464, 0xa9e, 0xd970, 0xddb7, 0x8958, 0x29f, 0x1, 0x0);
        gbc.writeMem(0x8464, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0x8466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8464), 0xcb);
        EXPECT(gbc.readMem(0x8465), 0x2);
        // CB 02 03B1
        gbc.setState(0xddf1, 0xfa6c, 0x5880, 0xd1ac, 0xa8de, 0x64d3, 0x1, 0x1);
        gbc.writeMem(0xddf1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfa6c);
        EXPECT(gbc.pc(), 0xddf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf1), 0xcb);
        EXPECT(gbc.readMem(0xddf2), 0x2);
        // CB 02 03B2
        gbc.setState(0xc81d, 0x1d52, 0xce0, 0x66d9, 0x8d97, 0x3314, 0x1, 0x0);
        gbc.writeMem(0xc81d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1d52);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81d), 0xcb);
        EXPECT(gbc.readMem(0xc81e), 0x2);
        // CB 02 03B4
        gbc.setState(0xcca1, 0x4a5e, 0x3ed0, 0x4d0, 0x43d, 0xeb72, 0x0, 0x1);
        gbc.writeMem(0xcca1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4a5e);
        EXPECT(gbc.pc(), 0xcca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca1), 0xcb);
        EXPECT(gbc.readMem(0xcca2), 0x2);
        // CB 02 03B5
        gbc.setState(0x3a73, 0x2e57, 0x64c0, 0x1c0f, 0x4684, 0x7558, 0x0, 0x1);
        gbc.writeMem(0x3a73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2e57);
        EXPECT(gbc.pc(), 0x3a75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03B6
        gbc.setState(0x6e8f, 0x25c2, 0x3a90, 0x94df, 0x9909, 0xf30a, 0x1, 0x0);
        gbc.writeMem(0x6e8f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x25c2);
        EXPECT(gbc.pc(), 0x6e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03B7
        gbc.setState(0xd3f1, 0xb02c, 0xabb0, 0x20cb, 0x8eaf, 0xe617, 0x0, 0x1);
        gbc.writeMem(0xd3f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb02c);
        EXPECT(gbc.pc(), 0xd3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f1), 0xcb);
        EXPECT(gbc.readMem(0xd3f2), 0x2);
        // CB 02 03B8
        gbc.setState(0xd782, 0xa208, 0xf190, 0x96b3, 0xdb21, 0xc9cb, 0x1, 0x0);
        gbc.writeMem(0xd782, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0xd784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd782), 0xcb);
        EXPECT(gbc.readMem(0xd783), 0x2);
        // CB 02 03B9
        gbc.setState(0x7f26, 0x684a, 0xb70, 0xb5c7, 0xd7fd, 0xa78, 0x0, 0x0);
        gbc.writeMem(0x7f26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x684a);
        EXPECT(gbc.pc(), 0x7f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03BB
        gbc.setState(0x4024, 0x857b, 0xec40, 0xe8a5, 0xc889, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0x4024, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x857b);
        EXPECT(gbc.pc(), 0x4026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03BC
        gbc.setState(0x9013, 0x19c9, 0x4ff0, 0xc502, 0xcec9, 0x899a, 0x0, 0x1);
        gbc.writeMem(0x9013, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0x9015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9013), 0xcb);
        EXPECT(gbc.readMem(0x9014), 0x2);
        // CB 02 03BD
        gbc.setState(0x652a, 0x76b4, 0xd610, 0xaffa, 0x45a, 0x3114, 0x1, 0x1);
        gbc.writeMem(0x652a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x76b4);
        EXPECT(gbc.pc(), 0x652c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03BE
        gbc.setState(0x2c48, 0xba68, 0x4570, 0x8c81, 0x914f, 0x43df, 0x1, 0x1);
        gbc.writeMem(0x2c48, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xba68);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03BF
        gbc.setState(0xbb5d, 0xb81a, 0x1530, 0x52a6, 0xf469, 0xc302, 0x0, 0x0);
        gbc.writeMem(0xbb5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0xbb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5d), 0xcb);
        EXPECT(gbc.readMem(0xbb5e), 0x2);
        // CB 02 03C0
        gbc.setState(0x5ca3, 0x61ec, 0xf210, 0x4005, 0xb8af, 0x3f22, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x61ec);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03C1
        gbc.setState(0x12f7, 0xe9ee, 0x1de0, 0x34bf, 0x297f, 0x7833, 0x0, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe9ee);
        EXPECT(gbc.pc(), 0x12f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03C2
        gbc.setState(0xe19a, 0x46aa, 0x8ed0, 0x9fc3, 0x7773, 0xc721, 0x0, 0x0);
        gbc.writeMem(0xe19a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x46aa);
        EXPECT(gbc.pc(), 0xe19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19a), 0xcb);
        EXPECT(gbc.readMem(0xe19b), 0x2);
        // CB 02 03C3
        gbc.setState(0x9284, 0x8c2, 0x8810, 0x5ba9, 0xe474, 0xf979, 0x0, 0x0);
        gbc.writeMem(0x9284, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8c2);
        EXPECT(gbc.pc(), 0x9286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9284), 0xcb);
        EXPECT(gbc.readMem(0x9285), 0x2);
        // CB 02 03C6
        gbc.setState(0xae21, 0xd53d, 0xae70, 0x7f77, 0xbc10, 0xdd23, 0x0, 0x1);
        gbc.writeMem(0xae21, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd53d);
        EXPECT(gbc.pc(), 0xae23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae21), 0xcb);
        EXPECT(gbc.readMem(0xae22), 0x2);
        // CB 02 03C7
        gbc.setState(0xbd98, 0xe51a, 0x6c00, 0x4c11, 0xdf00, 0xb742, 0x0, 0x1);
        gbc.writeMem(0xbd98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe51a);
        EXPECT(gbc.pc(), 0xbd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd98), 0xcb);
        EXPECT(gbc.readMem(0xbd99), 0x2);
        // CB 02 03C8
        gbc.setState(0xd24c, 0xfb75, 0x30b0, 0xcccc, 0xb3e8, 0xb414, 0x1, 0x0);
        gbc.writeMem(0xd24c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfb75);
        EXPECT(gbc.pc(), 0xd24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24c), 0xcb);
        EXPECT(gbc.readMem(0xd24d), 0x2);
        // CB 02 03C9
        gbc.setState(0x6a78, 0x3718, 0x2430, 0x7b8c, 0xbda7, 0x8bc7, 0x1, 0x1);
        gbc.writeMem(0x6a78, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3718);
        EXPECT(gbc.pc(), 0x6a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03CA
        gbc.setState(0xcf52, 0x7cb8, 0xf370, 0x85db, 0xa758, 0xfc19, 0x0, 0x1);
        gbc.writeMem(0xcf52, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7cb8);
        EXPECT(gbc.pc(), 0xcf54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf52), 0xcb);
        EXPECT(gbc.readMem(0xcf53), 0x2);
        // CB 02 03CB
        gbc.setState(0x2c71, 0xe5bc, 0x2f90, 0x4bca, 0x5ecd, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0x2c71, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe5bc);
        EXPECT(gbc.pc(), 0x2c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03CC
        gbc.setState(0xcdd3, 0xb024, 0x7510, 0xafa7, 0xd251, 0xeb6b, 0x1, 0x1);
        gbc.writeMem(0xcdd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0xcdd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd3), 0xcb);
        EXPECT(gbc.readMem(0xcdd4), 0x2);
        // CB 02 03CD
        gbc.setState(0xe480, 0x57f0, 0xb9f0, 0xc15, 0xb5f2, 0xb96d, 0x0, 0x0);
        gbc.writeMem(0xe480, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x57f0);
        EXPECT(gbc.pc(), 0xe482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe480), 0xcb);
        EXPECT(gbc.readMem(0xe481), 0x2);
        // CB 02 03CE
        gbc.setState(0x9084, 0xae57, 0x3530, 0x4ad7, 0x1ffe, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xae57);
        EXPECT(gbc.pc(), 0x9086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9084), 0xcb);
        EXPECT(gbc.readMem(0x9085), 0x2);
        // CB 02 03CF
        gbc.setState(0x1516, 0x5ad0, 0xb400, 0x140d, 0x7c3a, 0x489f, 0x1, 0x1);
        gbc.writeMem(0x1516, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5ad0);
        EXPECT(gbc.pc(), 0x1518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03D0
        gbc.setState(0xe76d, 0x3da3, 0xe700, 0xdb4c, 0xe9ea, 0xb284, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3da3);
        EXPECT(gbc.pc(), 0xe76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76d), 0xcb);
        EXPECT(gbc.readMem(0xe76e), 0x2);
        // CB 02 03D1
        gbc.setState(0xc3cc, 0x4e80, 0xf2d0, 0x476a, 0x1fae, 0x27bc, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4e80);
        EXPECT(gbc.pc(), 0xc3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cc), 0xcb);
        EXPECT(gbc.readMem(0xc3cd), 0x2);
        // CB 02 03D2
        gbc.setState(0x3913, 0x72a0, 0xa90, 0x8753, 0x8e0e, 0x3c1f, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x72a0);
        EXPECT(gbc.pc(), 0x3915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03D3
        gbc.setState(0x674, 0xf62a, 0xd140, 0x5123, 0xb0f9, 0x690e, 0x1, 0x0);
        gbc.writeMem(0x674, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0x676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03D4
        gbc.setState(0x3710, 0xe3ac, 0x7f70, 0x4f6b, 0x93f8, 0x141b, 0x0, 0x0);
        gbc.writeMem(0x3710, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe3ac);
        EXPECT(gbc.pc(), 0x3712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03D5
        gbc.setState(0x81d8, 0x7bed, 0x8b10, 0xa158, 0x210e, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7bed);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d8), 0xcb);
        EXPECT(gbc.readMem(0x81d9), 0x2);
        // CB 02 03D6
        gbc.setState(0xd48a, 0xf132, 0x6320, 0xda57, 0xc635, 0x15db, 0x1, 0x0);
        gbc.writeMem(0xd48a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf132);
        EXPECT(gbc.pc(), 0xd48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48a), 0xcb);
        EXPECT(gbc.readMem(0xd48b), 0x2);
        // CB 02 03D7
        gbc.setState(0x7d74, 0x60a3, 0x6110, 0xe09d, 0x53b3, 0x81c3, 0x0, 0x0);
        gbc.writeMem(0x7d74, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x60a3);
        EXPECT(gbc.pc(), 0x7d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03D9
        gbc.setState(0x3fc2, 0x4b84, 0x8ea0, 0x4f18, 0x7d69, 0x51cf, 0x1, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4b84);
        EXPECT(gbc.pc(), 0x3fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03DA
        gbc.setState(0xdab9, 0x147e, 0x9380, 0xcc2e, 0xf4be, 0xa2e8, 0x0, 0x0);
        gbc.writeMem(0xdab9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x147e);
        EXPECT(gbc.pc(), 0xdabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab9), 0xcb);
        EXPECT(gbc.readMem(0xdaba), 0x2);
        // CB 02 03DB
        gbc.setState(0x4699, 0x6058, 0xc220, 0x8ced, 0xf15c, 0x675c, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6058);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03DC
        gbc.setState(0xd2b0, 0x4d00, 0x40c0, 0x87a8, 0x3535, 0x890e, 0x1, 0x1);
        gbc.writeMem(0xd2b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4d00);
        EXPECT(gbc.pc(), 0xd2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b0), 0xcb);
        EXPECT(gbc.readMem(0xd2b1), 0x2);
        // CB 02 03DD
        gbc.setState(0x3703, 0x6f6a, 0xc0e0, 0x562f, 0x2b6e, 0x2505, 0x0, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6f6a);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03DE
        gbc.setState(0x8842, 0x2fdc, 0xa6e0, 0xb1ff, 0xe829, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0x8842, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2fdc);
        EXPECT(gbc.pc(), 0x8844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8842), 0xcb);
        EXPECT(gbc.readMem(0x8843), 0x2);
        // CB 02 03DF
        gbc.setState(0x3b81, 0xcf68, 0x9640, 0xebb9, 0x5a97, 0xd3c1, 0x1, 0x0);
        gbc.writeMem(0x3b81, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcf68);
        EXPECT(gbc.pc(), 0x3b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03E0
        gbc.setState(0x74fb, 0x23da, 0xbda0, 0xcde5, 0x618f, 0x5959, 0x0, 0x1);
        gbc.writeMem(0x74fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0x74fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 02 03E1
        gbc.setState(0x2655, 0x5e83, 0x2800, 0x5e6a, 0xa529, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0x2655, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5e83);
        EXPECT(gbc.pc(), 0x2657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03E2
        gbc.setState(0x2210, 0x2046, 0xc5d0, 0x2f12, 0xd88b, 0xe8ba, 0x0, 0x1);
        gbc.writeMem(0x2210, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2046);
        EXPECT(gbc.pc(), 0x2212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03E3
        gbc.setState(0xbfeb, 0x64e6, 0x5a20, 0x6783, 0x16ae, 0xbfe0, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x64e6);
        EXPECT(gbc.pc(), 0xbfed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfeb), 0xcb);
        EXPECT(gbc.readMem(0xbfec), 0x2);
        // CB 02 03E4
        gbc.setState(0x33e9, 0xe863, 0x2410, 0x8c29, 0xcb6f, 0xa249, 0x0, 0x1);
        gbc.writeMem(0x33e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe863);
        EXPECT(gbc.pc(), 0x33eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03E5
        gbc.setState(0xd2c6, 0xc817, 0xc430, 0x51df, 0xf4f0, 0xef5b, 0x1, 0x0);
        gbc.writeMem(0xd2c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc817);
        EXPECT(gbc.pc(), 0xd2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c6), 0xcb);
        EXPECT(gbc.readMem(0xd2c7), 0x2);
        // CB 02 03E6
        gbc.setState(0x3650, 0x4087, 0xe6d0, 0x15fb, 0xbc85, 0xefff, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4087);
        EXPECT(gbc.pc(), 0x3652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 02 03E7
        gbc.setState(0x362, 0xca39, 0x4bc0, 0xc07b, 0x84d6, 0x8b36, 0x0, 0x1);
        gbc.writeMem(0x362, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xca39);
        EXPECT(gbc.pc(), 0x364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
