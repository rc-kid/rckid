    TEST(gbcemu, opcode_cb_e1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E1 0000
        gbc.setState(0xa441, 0x182a, 0x3fd0, 0x8f9d, 0x8bcd, 0x8c21, 0x1, 0x1);
        gbc.writeMem(0xa441, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x182a);
        EXPECT(gbc.pc(), 0xa443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa441), 0xcb);
        EXPECT(gbc.readMem(0xa442), 0xe1);
        // CB E1 0001
        gbc.setState(0xeea0, 0x7a55, 0x7870, 0xc01a, 0x378e, 0x324, 0x0, 0x0);
        gbc.writeMem(0xeea0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7a55);
        EXPECT(gbc.pc(), 0xeea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea0), 0xcb);
        EXPECT(gbc.readMem(0xeea1), 0xe1);
        // CB E1 0002
        gbc.setState(0xa682, 0x4694, 0xa1b0, 0x3c8, 0x4ac0, 0x14c9, 0x1, 0x1);
        gbc.writeMem(0xa682, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0xa684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa682), 0xcb);
        EXPECT(gbc.readMem(0xa683), 0xe1);
        // CB E1 0003
        gbc.setState(0xc0fc, 0xb935, 0xa890, 0x36fb, 0x634c, 0x7c58, 0x0, 0x1);
        gbc.writeMem(0xc0fc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb935);
        EXPECT(gbc.pc(), 0xc0fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fc), 0xcb);
        EXPECT(gbc.readMem(0xc0fd), 0xe1);
        // CB E1 0004
        gbc.setState(0x6cff, 0xd3c0, 0x6f90, 0x6632, 0x4032, 0x173c, 0x0, 0x0);
        gbc.writeMem(0x6cff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd3c0);
        EXPECT(gbc.pc(), 0x6d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0005
        gbc.setState(0x998b, 0xe369, 0x2ab0, 0xda2f, 0xdfaa, 0xba94, 0x0, 0x1);
        gbc.writeMem(0x998b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe369);
        EXPECT(gbc.pc(), 0x998d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998b), 0xcb);
        EXPECT(gbc.readMem(0x998c), 0xe1);
        // CB E1 0006
        gbc.setState(0x5a37, 0x2857, 0x6ee0, 0x9653, 0xdefe, 0x727a, 0x0, 0x1);
        gbc.writeMem(0x5a37, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2857);
        EXPECT(gbc.pc(), 0x5a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0007
        gbc.setState(0x3e6b, 0xc7f5, 0xf360, 0x9a47, 0x5278, 0xc72b, 0x0, 0x0);
        gbc.writeMem(0x3e6b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc7f5);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0008
        gbc.setState(0xbb4d, 0x64ee, 0x95d0, 0xb166, 0x4655, 0x11e4, 0x1, 0x0);
        gbc.writeMem(0xbb4d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x64ee);
        EXPECT(gbc.pc(), 0xbb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4d), 0xcb);
        EXPECT(gbc.readMem(0xbb4e), 0xe1);
        // CB E1 0009
        gbc.setState(0xca11, 0xe2ab, 0x5140, 0xafeb, 0xa730, 0x561e, 0x1, 0x1);
        gbc.writeMem(0xca11, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe2ab);
        EXPECT(gbc.pc(), 0xca13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca11), 0xcb);
        EXPECT(gbc.readMem(0xca12), 0xe1);
        // CB E1 000A
        gbc.setState(0xac9c, 0x66f9, 0x8890, 0x7572, 0x6f28, 0x5291, 0x1, 0x1);
        gbc.writeMem(0xac9c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x66f9);
        EXPECT(gbc.pc(), 0xac9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9c), 0xcb);
        EXPECT(gbc.readMem(0xac9d), 0xe1);
        // CB E1 000B
        gbc.setState(0x9b98, 0xe8, 0x61b0, 0x1314, 0x8b9f, 0x2087, 0x1, 0x1);
        gbc.writeMem(0x9b98, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe8);
        EXPECT(gbc.pc(), 0x9b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b98), 0xcb);
        EXPECT(gbc.readMem(0x9b99), 0xe1);
        // CB E1 000D
        gbc.setState(0xbf4e, 0x52fb, 0x48b0, 0xd152, 0x6d07, 0x6596, 0x1, 0x1);
        gbc.writeMem(0xbf4e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x52fb);
        EXPECT(gbc.pc(), 0xbf50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4e), 0xcb);
        EXPECT(gbc.readMem(0xbf4f), 0xe1);
        // CB E1 000E
        gbc.setState(0x544d, 0x9b3, 0xd410, 0x2fbd, 0x1f42, 0x1094, 0x1, 0x0);
        gbc.writeMem(0x544d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9b3);
        EXPECT(gbc.pc(), 0x544f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 000F
        gbc.setState(0xa97b, 0x6ccf, 0x17e0, 0x21d2, 0x400b, 0x3adb, 0x0, 0x0);
        gbc.writeMem(0xa97b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6ccf);
        EXPECT(gbc.pc(), 0xa97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97b), 0xcb);
        EXPECT(gbc.readMem(0xa97c), 0xe1);
        // CB E1 0010
        gbc.setState(0x5d34, 0xa889, 0xd8a0, 0x9f44, 0xb3d0, 0xe7c8, 0x0, 0x0);
        gbc.writeMem(0x5d34, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa889);
        EXPECT(gbc.pc(), 0x5d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0011
        gbc.setState(0x81d6, 0x7c96, 0x89a0, 0x4a63, 0xf104, 0xf44c, 0x0, 0x1);
        gbc.writeMem(0x81d6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7c96);
        EXPECT(gbc.pc(), 0x81d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d6), 0xcb);
        EXPECT(gbc.readMem(0x81d7), 0xe1);
        // CB E1 0012
        gbc.setState(0x4d23, 0xd41, 0x4770, 0x7aa2, 0x4e8, 0x9cd2, 0x0, 0x1);
        gbc.writeMem(0x4d23, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd41);
        EXPECT(gbc.pc(), 0x4d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0013
        gbc.setState(0x3bd0, 0xbbdb, 0x29b0, 0xe68, 0xd1dd, 0x7d23, 0x0, 0x1);
        gbc.writeMem(0x3bd0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbbdb);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0014
        gbc.setState(0x10ee, 0xcd57, 0x9430, 0x3b91, 0x5c29, 0x5ba9, 0x1, 0x0);
        gbc.writeMem(0x10ee, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcd57);
        EXPECT(gbc.pc(), 0x10f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0015
        gbc.setState(0x6490, 0x9cff, 0x7020, 0xe52f, 0xcb8b, 0x4aa1, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9cff);
        EXPECT(gbc.pc(), 0x6492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0016
        gbc.setState(0xd1ef, 0xcf7a, 0x5310, 0x4761, 0xc9e0, 0x5238, 0x1, 0x0);
        gbc.writeMem(0xd1ef, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcf7a);
        EXPECT(gbc.pc(), 0xd1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ef), 0xcb);
        EXPECT(gbc.readMem(0xd1f0), 0xe1);
        // CB E1 0017
        gbc.setState(0x257a, 0xe8f4, 0x3dd0, 0x4f9a, 0xf8a0, 0x6fd5, 0x0, 0x0);
        gbc.writeMem(0x257a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe8f4);
        EXPECT(gbc.pc(), 0x257c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0018
        gbc.setState(0x274, 0xb25, 0x52b0, 0x7b11, 0xacc2, 0xb9c8, 0x1, 0x1);
        gbc.writeMem(0x274, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb25);
        EXPECT(gbc.pc(), 0x276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0019
        gbc.setState(0xbcad, 0xcd2a, 0xd720, 0xd835, 0x3820, 0x3056, 0x1, 0x0);
        gbc.writeMem(0xbcad, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcd2a);
        EXPECT(gbc.pc(), 0xbcaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcad), 0xcb);
        EXPECT(gbc.readMem(0xbcae), 0xe1);
        // CB E1 001A
        gbc.setState(0x6773, 0x6431, 0x1f90, 0xcf66, 0x4a6, 0x6608, 0x1, 0x0);
        gbc.writeMem(0x6773, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6431);
        EXPECT(gbc.pc(), 0x6775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 001B
        gbc.setState(0x1f4, 0xbadc, 0x88f0, 0xb869, 0x56a7, 0x8df, 0x1, 0x1);
        gbc.writeMem(0x1f4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbadc);
        EXPECT(gbc.pc(), 0x1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 001C
        gbc.setState(0x7a80, 0xa510, 0x1910, 0x830c, 0x6b7f, 0x60dc, 0x1, 0x0);
        gbc.writeMem(0x7a80, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa510);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 001D
        gbc.setState(0xc133, 0xb228, 0x87d0, 0xa5f7, 0x3fd8, 0x62f0, 0x1, 0x1);
        gbc.writeMem(0xc133, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb228);
        EXPECT(gbc.pc(), 0xc135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc133), 0xcb);
        EXPECT(gbc.readMem(0xc134), 0xe1);
        // CB E1 001E
        gbc.setState(0xc6a6, 0x4f32, 0x35c0, 0xbccd, 0xd767, 0xa3b2, 0x0, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4f32);
        EXPECT(gbc.pc(), 0xc6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a6), 0xcb);
        EXPECT(gbc.readMem(0xc6a7), 0xe1);
        // CB E1 001F
        gbc.setState(0xc8ea, 0x6d87, 0x8860, 0xe7db, 0xb94d, 0xea5d, 0x1, 0x1);
        gbc.writeMem(0xc8ea, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0xc8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ea), 0xcb);
        EXPECT(gbc.readMem(0xc8eb), 0xe1);
        // CB E1 0022
        gbc.setState(0x54de, 0x95f2, 0x9e00, 0x5e6, 0x14e, 0x9a97, 0x1, 0x1);
        gbc.writeMem(0x54de, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x95f2);
        EXPECT(gbc.pc(), 0x54e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0023
        gbc.setState(0x8551, 0x6dc7, 0xfbc0, 0x2f27, 0x7c96, 0xbf37, 0x0, 0x0);
        gbc.writeMem(0x8551, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6dc7);
        EXPECT(gbc.pc(), 0x8553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8551), 0xcb);
        EXPECT(gbc.readMem(0x8552), 0xe1);
        // CB E1 0024
        gbc.setState(0x2ca2, 0xa6e7, 0xe4d0, 0x5ceb, 0xd8e0, 0xd114, 0x1, 0x1);
        gbc.writeMem(0x2ca2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa6e7);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0025
        gbc.setState(0x8953, 0xd5ff, 0xcd20, 0xc1c2, 0x7d57, 0xd7f, 0x0, 0x1);
        gbc.writeMem(0x8953, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd5ff);
        EXPECT(gbc.pc(), 0x8955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8953), 0xcb);
        EXPECT(gbc.readMem(0x8954), 0xe1);
        // CB E1 0026
        gbc.setState(0x5623, 0x4db8, 0x69a0, 0x6e7f, 0x75a3, 0xe29a, 0x0, 0x1);
        gbc.writeMem(0x5623, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4db8);
        EXPECT(gbc.pc(), 0x5625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0027
        gbc.setState(0xd864, 0x7226, 0xcf60, 0x11c6, 0x83da, 0x9ff6, 0x0, 0x1);
        gbc.writeMem(0xd864, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7226);
        EXPECT(gbc.pc(), 0xd866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd864), 0xcb);
        EXPECT(gbc.readMem(0xd865), 0xe1);
        // CB E1 0028
        gbc.setState(0x9485, 0xd89a, 0x6170, 0xd48e, 0xa1d2, 0x15, 0x0, 0x1);
        gbc.writeMem(0x9485, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd89a);
        EXPECT(gbc.pc(), 0x9487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9485), 0xcb);
        EXPECT(gbc.readMem(0x9486), 0xe1);
        // CB E1 0029
        gbc.setState(0xcccc, 0x285b, 0x36c0, 0x53b0, 0x3338, 0xadbf, 0x1, 0x0);
        gbc.writeMem(0xcccc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x285b);
        EXPECT(gbc.pc(), 0xccce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccc), 0xcb);
        EXPECT(gbc.readMem(0xcccd), 0xe1);
        // CB E1 002A
        gbc.setState(0xdf26, 0xbb8b, 0xbe40, 0xf020, 0x908b, 0xe252, 0x0, 0x1);
        gbc.writeMem(0xdf26, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbb8b);
        EXPECT(gbc.pc(), 0xdf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf26), 0xcb);
        EXPECT(gbc.readMem(0xdf27), 0xe1);
        // CB E1 002C
        gbc.setState(0x8e4a, 0xaaac, 0xe0b0, 0xec6, 0x6ec9, 0x1e15, 0x0, 0x0);
        gbc.writeMem(0x8e4a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x8e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4a), 0xcb);
        EXPECT(gbc.readMem(0x8e4b), 0xe1);
        // CB E1 002D
        gbc.setState(0xcedd, 0x3148, 0x93f0, 0x4ceb, 0xfee5, 0x1c2b, 0x1, 0x0);
        gbc.writeMem(0xcedd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3148);
        EXPECT(gbc.pc(), 0xcedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedd), 0xcb);
        EXPECT(gbc.readMem(0xcede), 0xe1);
        // CB E1 002E
        gbc.setState(0xe510, 0x6bac, 0x5810, 0x8dfc, 0xf8d3, 0x2049, 0x1, 0x1);
        gbc.writeMem(0xe510, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6bac);
        EXPECT(gbc.pc(), 0xe512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe510), 0xcb);
        EXPECT(gbc.readMem(0xe511), 0xe1);
        // CB E1 002F
        gbc.setState(0x6c2d, 0x46b0, 0x3450, 0x86c0, 0xf6f8, 0x7203, 0x0, 0x1);
        gbc.writeMem(0x6c2d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x46b0);
        EXPECT(gbc.pc(), 0x6c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0030
        gbc.setState(0x76d6, 0xbaaf, 0x1380, 0x416b, 0x70df, 0x5c0b, 0x0, 0x0);
        gbc.writeMem(0x76d6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbaaf);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0031
        gbc.setState(0x8014, 0x7c07, 0xa360, 0xaf8b, 0x6bab, 0xa3ce, 0x0, 0x0);
        gbc.writeMem(0x8014, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7c07);
        EXPECT(gbc.pc(), 0x8016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8014), 0xcb);
        EXPECT(gbc.readMem(0x8015), 0xe1);
        // CB E1 0032
        gbc.setState(0x1450, 0x4060, 0x7b70, 0xfc67, 0x452c, 0xfef3, 0x1, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4060);
        EXPECT(gbc.pc(), 0x1452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0033
        gbc.setState(0xc457, 0x4b30, 0xdd0, 0x8ebd, 0x89ef, 0xc49e, 0x1, 0x1);
        gbc.writeMem(0xc457, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4b30);
        EXPECT(gbc.pc(), 0xc459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc457), 0xcb);
        EXPECT(gbc.readMem(0xc458), 0xe1);
        // CB E1 0034
        gbc.setState(0xa457, 0xea7e, 0x3bf0, 0xd1d0, 0x12b7, 0x1414, 0x0, 0x1);
        gbc.writeMem(0xa457, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xea7e);
        EXPECT(gbc.pc(), 0xa459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa457), 0xcb);
        EXPECT(gbc.readMem(0xa458), 0xe1);
        // CB E1 0035
        gbc.setState(0x5069, 0x2942, 0xe0, 0x6be0, 0x4451, 0xd187, 0x1, 0x1);
        gbc.writeMem(0x5069, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2942);
        EXPECT(gbc.pc(), 0x506b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0036
        gbc.setState(0x199a, 0x166b, 0x3f30, 0x889e, 0x6c85, 0xfd83, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x166b);
        EXPECT(gbc.pc(), 0x199c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0037
        gbc.setState(0xfdb, 0xf149, 0x51f0, 0xbfe8, 0x9569, 0xb0d3, 0x1, 0x0);
        gbc.writeMem(0xfdb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf149);
        EXPECT(gbc.pc(), 0xfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0038
        gbc.setState(0xaff3, 0x45c5, 0xd1b0, 0xea4c, 0xf574, 0xfa85, 0x0, 0x1);
        gbc.writeMem(0xaff3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x45c5);
        EXPECT(gbc.pc(), 0xaff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff3), 0xcb);
        EXPECT(gbc.readMem(0xaff4), 0xe1);
        // CB E1 0039
        gbc.setState(0xb0d7, 0xd649, 0xb1a0, 0x759b, 0xac, 0x4169, 0x1, 0x1);
        gbc.writeMem(0xb0d7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd649);
        EXPECT(gbc.pc(), 0xb0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d7), 0xcb);
        EXPECT(gbc.readMem(0xb0d8), 0xe1);
        // CB E1 003A
        gbc.setState(0xc421, 0xf161, 0x61f0, 0xeb82, 0x92fc, 0x974f, 0x0, 0x1);
        gbc.writeMem(0xc421, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0xc423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc421), 0xcb);
        EXPECT(gbc.readMem(0xc422), 0xe1);
        // CB E1 003B
        gbc.setState(0x25f, 0xf889, 0x7010, 0x39d3, 0x1240, 0x8d94, 0x0, 0x1);
        gbc.writeMem(0x25f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf889);
        EXPECT(gbc.pc(), 0x261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 003C
        gbc.setState(0x5d45, 0x3de4, 0xcbe0, 0xf91f, 0x3404, 0x8715, 0x1, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3de4);
        EXPECT(gbc.pc(), 0x5d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 003D
        gbc.setState(0x5bf6, 0x1a72, 0xc650, 0x4b9e, 0x48b5, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0x5bf6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1a72);
        EXPECT(gbc.pc(), 0x5bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 003E
        gbc.setState(0x5638, 0x29e5, 0x3990, 0x17b7, 0xd568, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0x5638, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x29e5);
        EXPECT(gbc.pc(), 0x563a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 003F
        gbc.setState(0x25f8, 0x2487, 0x9560, 0x7b83, 0xd652, 0xa06e, 0x0, 0x1);
        gbc.writeMem(0x25f8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2487);
        EXPECT(gbc.pc(), 0x25fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0040
        gbc.setState(0x8625, 0x2849, 0xcb70, 0x270e, 0x4f1a, 0xbd4d, 0x1, 0x0);
        gbc.writeMem(0x8625, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2849);
        EXPECT(gbc.pc(), 0x8627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8625), 0xcb);
        EXPECT(gbc.readMem(0x8626), 0xe1);
        // CB E1 0041
        gbc.setState(0xa80e, 0xb299, 0xc010, 0x14a3, 0xd3ed, 0x6565, 0x1, 0x1);
        gbc.writeMem(0xa80e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb299);
        EXPECT(gbc.pc(), 0xa810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80e), 0xcb);
        EXPECT(gbc.readMem(0xa80f), 0xe1);
        // CB E1 0042
        gbc.setState(0x2a6f, 0x6883, 0x130, 0x9c9f, 0x855a, 0x91c, 0x0, 0x0);
        gbc.writeMem(0x2a6f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0x2a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0043
        gbc.setState(0xc26d, 0xf984, 0x1b10, 0x5edb, 0x7f4d, 0x188c, 0x0, 0x0);
        gbc.writeMem(0xc26d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf984);
        EXPECT(gbc.pc(), 0xc26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26d), 0xcb);
        EXPECT(gbc.readMem(0xc26e), 0xe1);
        // CB E1 0044
        gbc.setState(0x4e95, 0x5818, 0x9490, 0x64ed, 0x9b2a, 0xe09a, 0x0, 0x1);
        gbc.writeMem(0x4e95, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5818);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0046
        gbc.setState(0x8c3d, 0x2b47, 0xe290, 0xf2e2, 0x3be, 0x1d7a, 0x1, 0x0);
        gbc.writeMem(0x8c3d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2b47);
        EXPECT(gbc.pc(), 0x8c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3d), 0xcb);
        EXPECT(gbc.readMem(0x8c3e), 0xe1);
        // CB E1 0047
        gbc.setState(0xc823, 0x3bcf, 0x5690, 0x246b, 0x8d80, 0x6464, 0x0, 0x0);
        gbc.writeMem(0xc823, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0xc825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc823), 0xcb);
        EXPECT(gbc.readMem(0xc824), 0xe1);
        // CB E1 0048
        gbc.setState(0x8c52, 0xbeca, 0x6dc0, 0x964b, 0x6464, 0x38fd, 0x0, 0x0);
        gbc.writeMem(0x8c52, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbeca);
        EXPECT(gbc.pc(), 0x8c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c52), 0xcb);
        EXPECT(gbc.readMem(0x8c53), 0xe1);
        // CB E1 0049
        gbc.setState(0x9992, 0x410c, 0x7d0, 0xc498, 0xe907, 0xcd7b, 0x0, 0x0);
        gbc.writeMem(0x9992, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x410c);
        EXPECT(gbc.pc(), 0x9994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9992), 0xcb);
        EXPECT(gbc.readMem(0x9993), 0xe1);
        // CB E1 004A
        gbc.setState(0x5e15, 0x70cd, 0x1470, 0x360, 0xa695, 0xb0c, 0x1, 0x1);
        gbc.writeMem(0x5e15, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x70cd);
        EXPECT(gbc.pc(), 0x5e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 004B
        gbc.setState(0xca02, 0xcc5d, 0x920, 0x2e90, 0xdfaf, 0xd741, 0x0, 0x0);
        gbc.writeMem(0xca02, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0xca04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca02), 0xcb);
        EXPECT(gbc.readMem(0xca03), 0xe1);
        // CB E1 004C
        gbc.setState(0x36ee, 0x40a5, 0xa0a0, 0x8cc4, 0xddac, 0x25af, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x40a5);
        EXPECT(gbc.pc(), 0x36f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 004D
        gbc.setState(0x71e9, 0x8faa, 0x9b50, 0xe37a, 0xb4eb, 0xd379, 0x0, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8faa);
        EXPECT(gbc.pc(), 0x71eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 004F
        gbc.setState(0x530c, 0x6f15, 0x5640, 0xfda7, 0xf5, 0x5bae, 0x1, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6f15);
        EXPECT(gbc.pc(), 0x530e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0050
        gbc.setState(0xb74a, 0x8cb9, 0x7d30, 0xb30b, 0xadb0, 0x3c95, 0x0, 0x1);
        gbc.writeMem(0xb74a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8cb9);
        EXPECT(gbc.pc(), 0xb74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74a), 0xcb);
        EXPECT(gbc.readMem(0xb74b), 0xe1);
        // CB E1 0051
        gbc.setState(0x1972, 0x373c, 0xd060, 0x8b6b, 0x6480, 0x15f7, 0x1, 0x1);
        gbc.writeMem(0x1972, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x373c);
        EXPECT(gbc.pc(), 0x1974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0052
        gbc.setState(0x67b4, 0x9f51, 0xfa20, 0xf6fd, 0x71ea, 0x7de4, 0x0, 0x0);
        gbc.writeMem(0x67b4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9f51);
        EXPECT(gbc.pc(), 0x67b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0053
        gbc.setState(0xe325, 0xab97, 0x44d0, 0xbbeb, 0xe1d0, 0xfb03, 0x1, 0x0);
        gbc.writeMem(0xe325, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xab97);
        EXPECT(gbc.pc(), 0xe327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe325), 0xcb);
        EXPECT(gbc.readMem(0xe326), 0xe1);
        // CB E1 0054
        gbc.setState(0x93e8, 0xdb42, 0xa8a0, 0x1d06, 0x5bd9, 0x7c6d, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdb42);
        EXPECT(gbc.pc(), 0x93ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e8), 0xcb);
        EXPECT(gbc.readMem(0x93e9), 0xe1);
        // CB E1 0055
        gbc.setState(0x950e, 0xc08b, 0xbb20, 0x25ca, 0xcb28, 0x6e35, 0x1, 0x1);
        gbc.writeMem(0x950e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0x9510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950e), 0xcb);
        EXPECT(gbc.readMem(0x950f), 0xe1);
        // CB E1 0056
        gbc.setState(0xeb38, 0xea16, 0x8580, 0x8d3f, 0x1ff7, 0xe6bd, 0x1, 0x0);
        gbc.writeMem(0xeb38, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0xeb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb38), 0xcb);
        EXPECT(gbc.readMem(0xeb39), 0xe1);
        // CB E1 0057
        gbc.setState(0x35e4, 0x3b87, 0xcc40, 0x2096, 0x3504, 0xd29c, 0x0, 0x1);
        gbc.writeMem(0x35e4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b87);
        EXPECT(gbc.pc(), 0x35e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0058
        gbc.setState(0xe445, 0x521d, 0xa90, 0x4223, 0x1b1d, 0x1503, 0x0, 0x1);
        gbc.writeMem(0xe445, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x521d);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe445), 0xcb);
        EXPECT(gbc.readMem(0xe446), 0xe1);
        // CB E1 0059
        gbc.setState(0xe3ca, 0x4a5b, 0x90, 0xef99, 0x6f21, 0xb6f, 0x1, 0x0);
        gbc.writeMem(0xe3ca, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4a5b);
        EXPECT(gbc.pc(), 0xe3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ca), 0xcb);
        EXPECT(gbc.readMem(0xe3cb), 0xe1);
        // CB E1 005A
        gbc.setState(0x3c4c, 0x57f0, 0x9460, 0x92db, 0x8137, 0xf7c4, 0x1, 0x0);
        gbc.writeMem(0x3c4c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x57f0);
        EXPECT(gbc.pc(), 0x3c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 005B
        gbc.setState(0x8aeb, 0x5701, 0x9b40, 0xbfac, 0x53d5, 0x7ccb, 0x1, 0x1);
        gbc.writeMem(0x8aeb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5701);
        EXPECT(gbc.pc(), 0x8aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aeb), 0xcb);
        EXPECT(gbc.readMem(0x8aec), 0xe1);
        // CB E1 005C
        gbc.setState(0xbbec, 0xff36, 0xce60, 0x5d26, 0x6831, 0x41b2, 0x1, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0xe1);
        // CB E1 005D
        gbc.setState(0x1588, 0xe97c, 0xef20, 0x5b6f, 0x1f4e, 0xfe81, 0x1, 0x0);
        gbc.writeMem(0x1588, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe97c);
        EXPECT(gbc.pc(), 0x158a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 005E
        gbc.setState(0x3c21, 0x445a, 0xbec0, 0xfd7c, 0xb007, 0x68a8, 0x0, 0x1);
        gbc.writeMem(0x3c21, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x445a);
        EXPECT(gbc.pc(), 0x3c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 005F
        gbc.setState(0x74f2, 0xde8e, 0xa580, 0x1667, 0x5f0f, 0xdd23, 0x0, 0x1);
        gbc.writeMem(0x74f2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xde8e);
        EXPECT(gbc.pc(), 0x74f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0060
        gbc.setState(0x7a04, 0xdee7, 0xa920, 0xc438, 0xe3f6, 0xb512, 0x1, 0x1);
        gbc.writeMem(0x7a04, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdee7);
        EXPECT(gbc.pc(), 0x7a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0061
        gbc.setState(0xe3a1, 0x8590, 0x7590, 0xe780, 0x1b24, 0xcb5d, 0x0, 0x1);
        gbc.writeMem(0xe3a1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8590);
        EXPECT(gbc.pc(), 0xe3a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a1), 0xcb);
        EXPECT(gbc.readMem(0xe3a2), 0xe1);
        // CB E1 0062
        gbc.setState(0x4892, 0x19f2, 0x86a0, 0xd27e, 0x6765, 0x2207, 0x1, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x19f2);
        EXPECT(gbc.pc(), 0x4894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0063
        gbc.setState(0x7e29, 0x8f2, 0xa880, 0xc350, 0x4dd4, 0x988b, 0x1, 0x1);
        gbc.writeMem(0x7e29, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8f2);
        EXPECT(gbc.pc(), 0x7e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0064
        gbc.setState(0x861b, 0xef35, 0x2e60, 0x5bf8, 0x7788, 0x63a8, 0x1, 0x0);
        gbc.writeMem(0x861b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xef35);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861b), 0xcb);
        EXPECT(gbc.readMem(0x861c), 0xe1);
        // CB E1 0065
        gbc.setState(0x92a4, 0x59ee, 0x70e0, 0xa8eb, 0x1952, 0xe4c6, 0x1, 0x1);
        gbc.writeMem(0x92a4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x59ee);
        EXPECT(gbc.pc(), 0x92a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a4), 0xcb);
        EXPECT(gbc.readMem(0x92a5), 0xe1);
        // CB E1 0066
        gbc.setState(0xaa4d, 0x4476, 0xe6a0, 0x3b97, 0xd146, 0x6d42, 0x1, 0x1);
        gbc.writeMem(0xaa4d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4476);
        EXPECT(gbc.pc(), 0xaa4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4d), 0xcb);
        EXPECT(gbc.readMem(0xaa4e), 0xe1);
        // CB E1 0067
        gbc.setState(0xe918, 0xc35e, 0x95f0, 0xa0c5, 0xc175, 0xff55, 0x1, 0x1);
        gbc.writeMem(0xe918, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc35e);
        EXPECT(gbc.pc(), 0xe91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe918), 0xcb);
        EXPECT(gbc.readMem(0xe919), 0xe1);
        // CB E1 0068
        gbc.setState(0xfe8, 0x2854, 0x8ca0, 0xc9c8, 0x9623, 0x259e, 0x1, 0x0);
        gbc.writeMem(0xfe8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0xfea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0069
        gbc.setState(0xeae9, 0x3e8d, 0x4820, 0x7b1b, 0x37f0, 0xe328, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3e8d);
        EXPECT(gbc.pc(), 0xeaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae9), 0xcb);
        EXPECT(gbc.readMem(0xeaea), 0xe1);
        // CB E1 006A
        gbc.setState(0xa498, 0x5f65, 0xf520, 0xcc2, 0x8cd6, 0x64f3, 0x1, 0x1);
        gbc.writeMem(0xa498, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5f65);
        EXPECT(gbc.pc(), 0xa49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa498), 0xcb);
        EXPECT(gbc.readMem(0xa499), 0xe1);
        // CB E1 006B
        gbc.setState(0x1aaa, 0x6a0b, 0xc640, 0xf68e, 0x521, 0x700a, 0x1, 0x1);
        gbc.writeMem(0x1aaa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6a0b);
        EXPECT(gbc.pc(), 0x1aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 006C
        gbc.setState(0xd954, 0xedbd, 0x8880, 0xf897, 0x39cf, 0xe1f5, 0x1, 0x0);
        gbc.writeMem(0xd954, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedbd);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd954), 0xcb);
        EXPECT(gbc.readMem(0xd955), 0xe1);
        // CB E1 006D
        gbc.setState(0x9baa, 0xe66c, 0x72a0, 0xf366, 0xb892, 0xb33d, 0x1, 0x0);
        gbc.writeMem(0x9baa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe66c);
        EXPECT(gbc.pc(), 0x9bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baa), 0xcb);
        EXPECT(gbc.readMem(0x9bab), 0xe1);
        // CB E1 006E
        gbc.setState(0xb1c9, 0x6faa, 0xc5b0, 0x227c, 0x5e6b, 0x1b19, 0x0, 0x1);
        gbc.writeMem(0xb1c9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6faa);
        EXPECT(gbc.pc(), 0xb1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c9), 0xcb);
        EXPECT(gbc.readMem(0xb1ca), 0xe1);
        // CB E1 006F
        gbc.setState(0x3721, 0x12d3, 0x74a0, 0xd92d, 0xa74, 0x7e47, 0x1, 0x1);
        gbc.writeMem(0x3721, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x12d3);
        EXPECT(gbc.pc(), 0x3723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0070
        gbc.setState(0x2327, 0x9787, 0x43f0, 0xfbf, 0xa579, 0x2f22, 0x1, 0x0);
        gbc.writeMem(0x2327, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9787);
        EXPECT(gbc.pc(), 0x2329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0072
        gbc.setState(0x18d4, 0x36f8, 0x8460, 0x72b4, 0xfd9b, 0xff57, 0x0, 0x0);
        gbc.writeMem(0x18d4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x36f8);
        EXPECT(gbc.pc(), 0x18d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0073
        gbc.setState(0xd743, 0xee9, 0x3e80, 0x13ca, 0x3bc2, 0x5e62, 0x1, 0x1);
        gbc.writeMem(0xd743, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee9);
        EXPECT(gbc.pc(), 0xd745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd743), 0xcb);
        EXPECT(gbc.readMem(0xd744), 0xe1);
        // CB E1 0074
        gbc.setState(0xad1c, 0xaa07, 0x7050, 0x1728, 0x7bb0, 0x4f1a, 0x1, 0x1);
        gbc.writeMem(0xad1c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xaa07);
        EXPECT(gbc.pc(), 0xad1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1c), 0xcb);
        EXPECT(gbc.readMem(0xad1d), 0xe1);
        // CB E1 0075
        gbc.setState(0x4e5e, 0x87cf, 0xc550, 0x5960, 0xc337, 0x45ff, 0x1, 0x1);
        gbc.writeMem(0x4e5e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x87cf);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0076
        gbc.setState(0x7bcf, 0x10dc, 0x81f0, 0x40e1, 0x589d, 0x70cd, 0x0, 0x1);
        gbc.writeMem(0x7bcf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0x7bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0077
        gbc.setState(0x3e55, 0x6046, 0x12a0, 0x5763, 0x955d, 0xf972, 0x1, 0x0);
        gbc.writeMem(0x3e55, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6046);
        EXPECT(gbc.pc(), 0x3e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0078
        gbc.setState(0xe3d3, 0x3527, 0x92c0, 0xec6b, 0x9f79, 0x8293, 0x1, 0x0);
        gbc.writeMem(0xe3d3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0xe3d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d3), 0xcb);
        EXPECT(gbc.readMem(0xe3d4), 0xe1);
        // CB E1 0079
        gbc.setState(0x726f, 0x93db, 0xf270, 0xc333, 0x7fa9, 0xd4a3, 0x1, 0x0);
        gbc.writeMem(0x726f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x93db);
        EXPECT(gbc.pc(), 0x7271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 007A
        gbc.setState(0x368f, 0x3c60, 0x3ef0, 0xe94f, 0xad9e, 0x1c9a, 0x1, 0x1);
        gbc.writeMem(0x368f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3c60);
        EXPECT(gbc.pc(), 0x3691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 007B
        gbc.setState(0x3215, 0xff3b, 0x2a00, 0x847b, 0x8b1d, 0x684a, 0x1, 0x0);
        gbc.writeMem(0x3215, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xff3b);
        EXPECT(gbc.pc(), 0x3217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 007C
        gbc.setState(0x3d1a, 0x257d, 0x7c50, 0xe3a1, 0xe0b4, 0xa186, 0x1, 0x1);
        gbc.writeMem(0x3d1a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x257d);
        EXPECT(gbc.pc(), 0x3d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 007D
        gbc.setState(0x5cbc, 0x7c6e, 0x60b0, 0x3fa8, 0x5dc0, 0x96b4, 0x1, 0x0);
        gbc.writeMem(0x5cbc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7c6e);
        EXPECT(gbc.pc(), 0x5cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 007E
        gbc.setState(0xc169, 0xd2e0, 0xe3d0, 0x8fdf, 0x98a8, 0xa422, 0x0, 0x0);
        gbc.writeMem(0xc169, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd2e0);
        EXPECT(gbc.pc(), 0xc16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc169), 0xcb);
        EXPECT(gbc.readMem(0xc16a), 0xe1);
        // CB E1 007F
        gbc.setState(0x1aa5, 0xb838, 0x4ea0, 0xa70d, 0xabcb, 0xca1a, 0x0, 0x0);
        gbc.writeMem(0x1aa5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb838);
        EXPECT(gbc.pc(), 0x1aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0080
        gbc.setState(0xae6b, 0x28ce, 0xcf90, 0x4b78, 0x8359, 0x6976, 0x1, 0x0);
        gbc.writeMem(0xae6b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x28ce);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6b), 0xcb);
        EXPECT(gbc.readMem(0xae6c), 0xe1);
        // CB E1 0081
        gbc.setState(0x5c21, 0x9d34, 0x2980, 0x91d1, 0xbf4f, 0xa7db, 0x1, 0x0);
        gbc.writeMem(0x5c21, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9d34);
        EXPECT(gbc.pc(), 0x5c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0082
        gbc.setState(0x8ae0, 0xda43, 0xeab0, 0xb2ca, 0x2dd1, 0x1c85, 0x1, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xda43);
        EXPECT(gbc.pc(), 0x8ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae0), 0xcb);
        EXPECT(gbc.readMem(0x8ae1), 0xe1);
        // CB E1 0083
        gbc.setState(0x7f84, 0x1af9, 0x4190, 0xc9df, 0xad96, 0xdb0e, 0x0, 0x0);
        gbc.writeMem(0x7f84, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1af9);
        EXPECT(gbc.pc(), 0x7f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0084
        gbc.setState(0xe16, 0xf809, 0x57b0, 0x4fb3, 0x2158, 0x3844, 0x0, 0x1);
        gbc.writeMem(0xe16, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf809);
        EXPECT(gbc.pc(), 0xe18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0085
        gbc.setState(0x79a2, 0xe489, 0xca40, 0xba04, 0x64c8, 0xb337, 0x1, 0x0);
        gbc.writeMem(0x79a2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0x79a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0086
        gbc.setState(0x1c49, 0x2944, 0x2990, 0xed60, 0x4e5d, 0x1774, 0x0, 0x0);
        gbc.writeMem(0x1c49, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2944);
        EXPECT(gbc.pc(), 0x1c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0087
        gbc.setState(0x12e5, 0xd7f7, 0x12f0, 0xaa88, 0x3f4b, 0xe4c7, 0x0, 0x1);
        gbc.writeMem(0x12e5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd7f7);
        EXPECT(gbc.pc(), 0x12e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0088
        gbc.setState(0xc3fa, 0x6280, 0x6d70, 0x9a44, 0xc082, 0x9350, 0x1, 0x1);
        gbc.writeMem(0xc3fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6280);
        EXPECT(gbc.pc(), 0xc3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fa), 0xcb);
        EXPECT(gbc.readMem(0xc3fb), 0xe1);
        // CB E1 0089
        gbc.setState(0x14af, 0xc08a, 0xe010, 0x69c5, 0xbef2, 0x474c, 0x0, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc08a);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 008A
        gbc.setState(0xbd0a, 0xf7b0, 0x79a0, 0x9533, 0xf4f, 0x2e44, 0x0, 0x0);
        gbc.writeMem(0xbd0a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf7b0);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0a), 0xcb);
        EXPECT(gbc.readMem(0xbd0b), 0xe1);
        // CB E1 008B
        gbc.setState(0x46e3, 0x906, 0x1000, 0x5d64, 0xd953, 0xedae, 0x1, 0x0);
        gbc.writeMem(0x46e3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x906);
        EXPECT(gbc.pc(), 0x46e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 008C
        gbc.setState(0xd401, 0x992f, 0xf510, 0xdf3f, 0x8e3f, 0x5962, 0x0, 0x1);
        gbc.writeMem(0xd401, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x992f);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd401), 0xcb);
        EXPECT(gbc.readMem(0xd402), 0xe1);
        // CB E1 008D
        gbc.setState(0x1494, 0x7c24, 0x40b0, 0x8060, 0x2758, 0xf2cf, 0x1, 0x1);
        gbc.writeMem(0x1494, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0x1496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 008E
        gbc.setState(0x1f3a, 0xb05b, 0x7af0, 0xa030, 0x459f, 0xd856, 0x1, 0x0);
        gbc.writeMem(0x1f3a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0x1f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 008F
        gbc.setState(0x46b3, 0x3001, 0x68f0, 0x273f, 0xe821, 0xdf38, 0x0, 0x0);
        gbc.writeMem(0x46b3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3001);
        EXPECT(gbc.pc(), 0x46b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0090
        gbc.setState(0x272f, 0x7ca4, 0x3eb0, 0x2734, 0xf723, 0x23b4, 0x0, 0x1);
        gbc.writeMem(0x272f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7ca4);
        EXPECT(gbc.pc(), 0x2731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0091
        gbc.setState(0x115e, 0x652, 0xe2b0, 0xc690, 0x7cc4, 0x136b, 0x0, 0x1);
        gbc.writeMem(0x115e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x652);
        EXPECT(gbc.pc(), 0x1160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0092
        gbc.setState(0x2d55, 0x757f, 0xaaa0, 0xb29a, 0xbf8f, 0xc995, 0x0, 0x1);
        gbc.writeMem(0x2d55, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x757f);
        EXPECT(gbc.pc(), 0x2d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0093
        gbc.setState(0xb9e8, 0xc894, 0x5890, 0xccbf, 0xda30, 0xdd99, 0x0, 0x1);
        gbc.writeMem(0xb9e8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc894);
        EXPECT(gbc.pc(), 0xb9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e8), 0xcb);
        EXPECT(gbc.readMem(0xb9e9), 0xe1);
        // CB E1 0094
        gbc.setState(0x9fb8, 0xae85, 0x4750, 0xf53f, 0x619a, 0x71e4, 0x0, 0x0);
        gbc.writeMem(0x9fb8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xae85);
        EXPECT(gbc.pc(), 0x9fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb8), 0xcb);
        EXPECT(gbc.readMem(0x9fb9), 0xe1);
        // CB E1 0095
        gbc.setState(0x3714, 0x20a2, 0x95b0, 0x113c, 0x799b, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0x3714, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x20a2);
        EXPECT(gbc.pc(), 0x3716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0096
        gbc.setState(0x2839, 0xf74f, 0x3be0, 0xfb0f, 0xca26, 0x7dc5, 0x1, 0x1);
        gbc.writeMem(0x2839, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf74f);
        EXPECT(gbc.pc(), 0x283b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0097
        gbc.setState(0xae4d, 0x66d4, 0x1680, 0x37e3, 0xfe75, 0xb455, 0x1, 0x1);
        gbc.writeMem(0xae4d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x66d4);
        EXPECT(gbc.pc(), 0xae4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4d), 0xcb);
        EXPECT(gbc.readMem(0xae4e), 0xe1);
        // CB E1 0098
        gbc.setState(0x2be8, 0x2b1b, 0x3df0, 0xaf88, 0xf08e, 0x3dcf, 0x1, 0x0);
        gbc.writeMem(0x2be8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0x2bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 009B
        gbc.setState(0xa8bf, 0xd41d, 0xc40, 0xe5a8, 0x615c, 0x3863, 0x1, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd41d);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bf), 0xcb);
        EXPECT(gbc.readMem(0xa8c0), 0xe1);
        // CB E1 009C
        gbc.setState(0x89ce, 0x4c8d, 0xf360, 0xa7f2, 0x823b, 0xef28, 0x0, 0x0);
        gbc.writeMem(0x89ce, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4c8d);
        EXPECT(gbc.pc(), 0x89d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ce), 0xcb);
        EXPECT(gbc.readMem(0x89cf), 0xe1);
        // CB E1 009D
        gbc.setState(0x35b, 0xff06, 0x6570, 0xbe2f, 0xc64, 0xfebb, 0x1, 0x0);
        gbc.writeMem(0x35b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xff06);
        EXPECT(gbc.pc(), 0x35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 009E
        gbc.setState(0xce9a, 0x7d04, 0x86f0, 0xbbd2, 0xb330, 0x6d43, 0x0, 0x1);
        gbc.writeMem(0xce9a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7d04);
        EXPECT(gbc.pc(), 0xce9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9a), 0xcb);
        EXPECT(gbc.readMem(0xce9b), 0xe1);
        // CB E1 009F
        gbc.setState(0xaaaf, 0x89ab, 0xf340, 0xba5d, 0x1165, 0x630c, 0x1, 0x0);
        gbc.writeMem(0xaaaf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x89ab);
        EXPECT(gbc.pc(), 0xaab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaaf), 0xcb);
        EXPECT(gbc.readMem(0xaab0), 0xe1);
        // CB E1 00A0
        gbc.setState(0x6bd5, 0x447e, 0x8000, 0xa8dc, 0xf8af, 0x8967, 0x0, 0x0);
        gbc.writeMem(0x6bd5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x447e);
        EXPECT(gbc.pc(), 0x6bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00A1
        gbc.setState(0x43c7, 0xd60f, 0xfd30, 0x33a7, 0xf63a, 0x67b8, 0x1, 0x0);
        gbc.writeMem(0x43c7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd60f);
        EXPECT(gbc.pc(), 0x43c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00A2
        gbc.setState(0x18a6, 0x287b, 0x7a20, 0xebee, 0xb5e, 0xa146, 0x0, 0x0);
        gbc.writeMem(0x18a6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x287b);
        EXPECT(gbc.pc(), 0x18a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00A3
        gbc.setState(0x9c9d, 0xdeff, 0x1040, 0x7ace, 0xb9f9, 0x63e9, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0x9c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9d), 0xcb);
        EXPECT(gbc.readMem(0x9c9e), 0xe1);
        // CB E1 00A4
        gbc.setState(0x8187, 0x9797, 0xac70, 0x9b62, 0xd29f, 0xcc0a, 0x1, 0x1);
        gbc.writeMem(0x8187, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9797);
        EXPECT(gbc.pc(), 0x8189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8187), 0xcb);
        EXPECT(gbc.readMem(0x8188), 0xe1);
        // CB E1 00A5
        gbc.setState(0xd1de, 0x31c7, 0x9b20, 0x3b36, 0x8e60, 0xe737, 0x1, 0x1);
        gbc.writeMem(0xd1de, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x31c7);
        EXPECT(gbc.pc(), 0xd1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1de), 0xcb);
        EXPECT(gbc.readMem(0xd1df), 0xe1);
        // CB E1 00A6
        gbc.setState(0xd079, 0xd294, 0xcc50, 0xcff, 0x95be, 0x568f, 0x0, 0x0);
        gbc.writeMem(0xd079, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd294);
        EXPECT(gbc.pc(), 0xd07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0xcb);
        EXPECT(gbc.readMem(0xd07a), 0xe1);
        // CB E1 00A7
        gbc.setState(0xc731, 0x6fca, 0xb6e0, 0x53a8, 0xd004, 0x2bc4, 0x0, 0x0);
        gbc.writeMem(0xc731, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0xc733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc731), 0xcb);
        EXPECT(gbc.readMem(0xc732), 0xe1);
        // CB E1 00A8
        gbc.setState(0xb37c, 0x7b8e, 0xbe00, 0x3b2c, 0xbb2c, 0x9f36, 0x0, 0x0);
        gbc.writeMem(0xb37c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7b8e);
        EXPECT(gbc.pc(), 0xb37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37c), 0xcb);
        EXPECT(gbc.readMem(0xb37d), 0xe1);
        // CB E1 00A9
        gbc.setState(0x5d04, 0xf6a9, 0x4f40, 0xb9c, 0x6272, 0x28f6, 0x0, 0x0);
        gbc.writeMem(0x5d04, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf6a9);
        EXPECT(gbc.pc(), 0x5d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00AA
        gbc.setState(0x819c, 0x5f92, 0x9930, 0x341d, 0x5b36, 0x282d, 0x0, 0x0);
        gbc.writeMem(0x819c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5f92);
        EXPECT(gbc.pc(), 0x819e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819c), 0xcb);
        EXPECT(gbc.readMem(0x819d), 0xe1);
        // CB E1 00AB
        gbc.setState(0x487, 0x3e51, 0x6390, 0x4074, 0x6416, 0xde91, 0x0, 0x1);
        gbc.writeMem(0x487, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3e51);
        EXPECT(gbc.pc(), 0x489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00AC
        gbc.setState(0x1d31, 0xca4a, 0xf1d0, 0xf2c5, 0xf06c, 0xd0a4, 0x1, 0x0);
        gbc.writeMem(0x1d31, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0x1d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00AD
        gbc.setState(0x6e8a, 0xac4a, 0x9030, 0x1fd1, 0xa4ea, 0x8361, 0x1, 0x0);
        gbc.writeMem(0x6e8a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xac4a);
        EXPECT(gbc.pc(), 0x6e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00AE
        gbc.setState(0x98f5, 0x714d, 0xc7c0, 0xc3fb, 0x96d4, 0xc024, 0x1, 0x0);
        gbc.writeMem(0x98f5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0x98f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f5), 0xcb);
        EXPECT(gbc.readMem(0x98f6), 0xe1);
        // CB E1 00AF
        gbc.setState(0x918a, 0x4572, 0x3fd0, 0xb9dc, 0x396, 0x8b3a, 0x0, 0x0);
        gbc.writeMem(0x918a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4572);
        EXPECT(gbc.pc(), 0x918c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x918a), 0xcb);
        EXPECT(gbc.readMem(0x918b), 0xe1);
        // CB E1 00B0
        gbc.setState(0x5367, 0xdee0, 0x5790, 0xa43, 0xa68e, 0x74ef, 0x1, 0x0);
        gbc.writeMem(0x5367, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdee0);
        EXPECT(gbc.pc(), 0x5369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00B1
        gbc.setState(0xdfd5, 0x2110, 0x84f0, 0xb5e6, 0x7bb4, 0xbc5e, 0x0, 0x1);
        gbc.writeMem(0xdfd5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2110);
        EXPECT(gbc.pc(), 0xdfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd5), 0xcb);
        EXPECT(gbc.readMem(0xdfd6), 0xe1);
        // CB E1 00B2
        gbc.setState(0x5e59, 0x9828, 0xa800, 0x33b1, 0x2eee, 0xee7, 0x1, 0x0);
        gbc.writeMem(0x5e59, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9828);
        EXPECT(gbc.pc(), 0x5e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00B3
        gbc.setState(0x11ef, 0xc903, 0x8e90, 0x6b17, 0x7a4a, 0x7b83, 0x0, 0x1);
        gbc.writeMem(0x11ef, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc903);
        EXPECT(gbc.pc(), 0x11f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00B4
        gbc.setState(0x83d, 0x931f, 0x6040, 0x2294, 0xc7ff, 0x3513, 0x1, 0x1);
        gbc.writeMem(0x83d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x931f);
        EXPECT(gbc.pc(), 0x83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00B5
        gbc.setState(0x1fd7, 0xc652, 0xbe10, 0x77d2, 0x63f2, 0x59ec, 0x1, 0x1);
        gbc.writeMem(0x1fd7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0x1fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00B7
        gbc.setState(0xb51c, 0xae22, 0xbeb0, 0x7dd6, 0xc336, 0x709b, 0x0, 0x0);
        gbc.writeMem(0xb51c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xae22);
        EXPECT(gbc.pc(), 0xb51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51c), 0xcb);
        EXPECT(gbc.readMem(0xb51d), 0xe1);
        // CB E1 00B8
        gbc.setState(0x9953, 0x967f, 0x65e0, 0x5c60, 0xdbf0, 0x2b6, 0x0, 0x1);
        gbc.writeMem(0x9953, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x967f);
        EXPECT(gbc.pc(), 0x9955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9953), 0xcb);
        EXPECT(gbc.readMem(0x9954), 0xe1);
        // CB E1 00B9
        gbc.setState(0xe33a, 0xc2fc, 0xbc90, 0x2210, 0x3259, 0xd50a, 0x0, 0x0);
        gbc.writeMem(0xe33a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc2fc);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0xcb);
        EXPECT(gbc.readMem(0xe33b), 0xe1);
        // CB E1 00BA
        gbc.setState(0xe2d8, 0x74f6, 0xde30, 0x7fd8, 0x4b4c, 0x7fbc, 0x1, 0x1);
        gbc.writeMem(0xe2d8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x74f6);
        EXPECT(gbc.pc(), 0xe2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d8), 0xcb);
        EXPECT(gbc.readMem(0xe2d9), 0xe1);
        // CB E1 00BB
        gbc.setState(0x7581, 0xfc54, 0x2360, 0xd1ac, 0x3dca, 0xcb76, 0x0, 0x0);
        gbc.writeMem(0x7581, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0x7583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00BD
        gbc.setState(0x3850, 0x710f, 0xf740, 0xd35e, 0x76d9, 0xc6d2, 0x0, 0x0);
        gbc.writeMem(0x3850, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x710f);
        EXPECT(gbc.pc(), 0x3852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00BE
        gbc.setState(0xcd46, 0xd550, 0x91d0, 0x45eb, 0x250e, 0x5899, 0x1, 0x0);
        gbc.writeMem(0xcd46, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd550);
        EXPECT(gbc.pc(), 0xcd48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd46), 0xcb);
        EXPECT(gbc.readMem(0xcd47), 0xe1);
        // CB E1 00C0
        gbc.setState(0x3896, 0xadc0, 0x1cb0, 0xaf70, 0xc4f, 0x78a6, 0x0, 0x0);
        gbc.writeMem(0x3896, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xadc0);
        EXPECT(gbc.pc(), 0x3898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00C1
        gbc.setState(0xc711, 0xe4ec, 0x48a0, 0x4998, 0x3fab, 0x3afe, 0x1, 0x1);
        gbc.writeMem(0xc711, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc711), 0xcb);
        EXPECT(gbc.readMem(0xc712), 0xe1);
        // CB E1 00C2
        gbc.setState(0x7d64, 0x60f, 0x9580, 0x7579, 0x46, 0x9ab5, 0x1, 0x1);
        gbc.writeMem(0x7d64, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x60f);
        EXPECT(gbc.pc(), 0x7d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00C3
        gbc.setState(0x443f, 0x89b1, 0xcb50, 0x7b44, 0x7285, 0xb5d6, 0x1, 0x0);
        gbc.writeMem(0x443f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0x4441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00C4
        gbc.setState(0x234, 0xaf1c, 0xf0, 0xe69b, 0xc6bb, 0x748e, 0x0, 0x0);
        gbc.writeMem(0x234, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xaf1c);
        EXPECT(gbc.pc(), 0x236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00C5
        gbc.setState(0x1c81, 0xdee8, 0xcff0, 0xb97c, 0x8253, 0xe903, 0x0, 0x0);
        gbc.writeMem(0x1c81, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdee8);
        EXPECT(gbc.pc(), 0x1c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00C6
        gbc.setState(0xd151, 0x966, 0xdf00, 0xc2fb, 0x7fa6, 0xec69, 0x0, 0x1);
        gbc.writeMem(0xd151, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x966);
        EXPECT(gbc.pc(), 0xd153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd151), 0xcb);
        EXPECT(gbc.readMem(0xd152), 0xe1);
        // CB E1 00C7
        gbc.setState(0x72fe, 0xa3e8, 0x6e10, 0x694d, 0x4d1c, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x72fe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa3e8);
        EXPECT(gbc.pc(), 0x7300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00C8
        gbc.setState(0xc2e8, 0x5e79, 0x7600, 0xe657, 0xf479, 0xd7fa, 0x0, 0x1);
        gbc.writeMem(0xc2e8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e79);
        EXPECT(gbc.pc(), 0xc2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e8), 0xcb);
        EXPECT(gbc.readMem(0xc2e9), 0xe1);
        // CB E1 00C9
        gbc.setState(0x4f6f, 0x76c8, 0xfc00, 0xc972, 0x8cf1, 0x4f37, 0x0, 0x1);
        gbc.writeMem(0x4f6f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0x4f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00CA
        gbc.setState(0x31ab, 0x706, 0xf3c0, 0xb612, 0xc786, 0xad25, 0x1, 0x0);
        gbc.writeMem(0x31ab, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x706);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00CB
        gbc.setState(0xc7ed, 0xf73b, 0x2400, 0x73ab, 0xaebc, 0x7154, 0x0, 0x1);
        gbc.writeMem(0xc7ed, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf73b);
        EXPECT(gbc.pc(), 0xc7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ed), 0xcb);
        EXPECT(gbc.readMem(0xc7ee), 0xe1);
        // CB E1 00CC
        gbc.setState(0xe5b6, 0x5083, 0x39a0, 0xdbb2, 0xd685, 0xc4ea, 0x1, 0x0);
        gbc.writeMem(0xe5b6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5083);
        EXPECT(gbc.pc(), 0xe5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b6), 0xcb);
        EXPECT(gbc.readMem(0xe5b7), 0xe1);
        // CB E1 00CE
        gbc.setState(0x6de9, 0x7146, 0xd9d0, 0xd66a, 0x4c81, 0x2c9f, 0x0, 0x0);
        gbc.writeMem(0x6de9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7146);
        EXPECT(gbc.pc(), 0x6deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00CF
        gbc.setState(0x93cb, 0xd7a6, 0xae20, 0xeafa, 0xc6d3, 0xef8c, 0x0, 0x1);
        gbc.writeMem(0x93cb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd7a6);
        EXPECT(gbc.pc(), 0x93cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cb), 0xcb);
        EXPECT(gbc.readMem(0x93cc), 0xe1);
        // CB E1 00D0
        gbc.setState(0x1643, 0x10b7, 0x4560, 0x7678, 0x462f, 0x5dce, 0x0, 0x1);
        gbc.writeMem(0x1643, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x10b7);
        EXPECT(gbc.pc(), 0x1645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00D1
        gbc.setState(0xe805, 0x62b6, 0x9200, 0xd159, 0x4201, 0xba4e, 0x1, 0x1);
        gbc.writeMem(0xe805, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x62b6);
        EXPECT(gbc.pc(), 0xe807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe805), 0xcb);
        EXPECT(gbc.readMem(0xe806), 0xe1);
        // CB E1 00D2
        gbc.setState(0x23cf, 0x2c04, 0x290, 0x4d7e, 0x7824, 0xd1fe, 0x0, 0x0);
        gbc.writeMem(0x23cf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2c04);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00D3
        gbc.setState(0xe0b, 0x3943, 0xe1a0, 0xf230, 0x604a, 0x7735, 0x0, 0x0);
        gbc.writeMem(0xe0b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3943);
        EXPECT(gbc.pc(), 0xe0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00D4
        gbc.setState(0xb673, 0x2389, 0xfb10, 0x75e6, 0x7582, 0xa4c1, 0x0, 0x1);
        gbc.writeMem(0xb673, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2389);
        EXPECT(gbc.pc(), 0xb675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb673), 0xcb);
        EXPECT(gbc.readMem(0xb674), 0xe1);
        // CB E1 00D5
        gbc.setState(0x904c, 0xd982, 0x1320, 0xe0ce, 0x778d, 0xb09d, 0x0, 0x1);
        gbc.writeMem(0x904c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd982);
        EXPECT(gbc.pc(), 0x904e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904c), 0xcb);
        EXPECT(gbc.readMem(0x904d), 0xe1);
        // CB E1 00D6
        gbc.setState(0x2c9b, 0x37b6, 0x84f0, 0xc950, 0x8eb5, 0x7393, 0x1, 0x1);
        gbc.writeMem(0x2c9b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x37b6);
        EXPECT(gbc.pc(), 0x2c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00D7
        gbc.setState(0x7a7b, 0x91, 0xb230, 0xe7e2, 0xce99, 0x5678, 0x1, 0x1);
        gbc.writeMem(0x7a7b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x91);
        EXPECT(gbc.pc(), 0x7a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00D8
        gbc.setState(0x2117, 0xfd8, 0x6eb0, 0x9c72, 0x6294, 0x198f, 0x1, 0x1);
        gbc.writeMem(0x2117, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfd8);
        EXPECT(gbc.pc(), 0x2119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00D9
        gbc.setState(0x50de, 0xf356, 0xced0, 0x30ea, 0xc352, 0x7333, 0x0, 0x0);
        gbc.writeMem(0x50de, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf356);
        EXPECT(gbc.pc(), 0x50e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00DA
        gbc.setState(0x5651, 0x6a9d, 0x37f0, 0xf1c6, 0x39e0, 0x3c44, 0x0, 0x1);
        gbc.writeMem(0x5651, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6a9d);
        EXPECT(gbc.pc(), 0x5653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00DC
        gbc.setState(0x3de7, 0x4bea, 0x6f90, 0xf98a, 0x7063, 0x4ff5, 0x1, 0x1);
        gbc.writeMem(0x3de7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x3de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00DD
        gbc.setState(0x8c0d, 0x385f, 0xf090, 0xc8a9, 0x803c, 0xd47b, 0x0, 0x0);
        gbc.writeMem(0x8c0d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x8c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0d), 0xcb);
        EXPECT(gbc.readMem(0x8c0e), 0xe1);
        // CB E1 00DE
        gbc.setState(0x2275, 0x1504, 0xa520, 0x8c50, 0x2dc6, 0xd64e, 0x0, 0x0);
        gbc.writeMem(0x2275, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1504);
        EXPECT(gbc.pc(), 0x2277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00DF
        gbc.setState(0x9b6c, 0xb813, 0x7c90, 0xcd42, 0xfbc, 0x478f, 0x0, 0x0);
        gbc.writeMem(0x9b6c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb813);
        EXPECT(gbc.pc(), 0x9b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6c), 0xcb);
        EXPECT(gbc.readMem(0x9b6d), 0xe1);
        // CB E1 00E0
        gbc.setState(0x1b2e, 0x75ad, 0x5890, 0xe795, 0x9d76, 0x215, 0x1, 0x1);
        gbc.writeMem(0x1b2e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x75ad);
        EXPECT(gbc.pc(), 0x1b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00E1
        gbc.setState(0xdb2d, 0x61f9, 0x5140, 0xb37a, 0x1a4a, 0x7beb, 0x0, 0x1);
        gbc.writeMem(0xdb2d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x61f9);
        EXPECT(gbc.pc(), 0xdb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2d), 0xcb);
        EXPECT(gbc.readMem(0xdb2e), 0xe1);
        // CB E1 00E2
        gbc.setState(0x5460, 0x78a4, 0x2850, 0xd7ab, 0xd4d7, 0xf2c8, 0x1, 0x0);
        gbc.writeMem(0x5460, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x78a4);
        EXPECT(gbc.pc(), 0x5462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00E4
        gbc.setState(0xeda0, 0xc6cb, 0xba00, 0xf8c, 0x1f70, 0xa62e, 0x0, 0x1);
        gbc.writeMem(0xeda0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc6cb);
        EXPECT(gbc.pc(), 0xeda2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda0), 0xcb);
        EXPECT(gbc.readMem(0xeda1), 0xe1);
        // CB E1 00E5
        gbc.setState(0x85f5, 0xf7bb, 0x8110, 0x4fba, 0x3c84, 0x40f4, 0x0, 0x0);
        gbc.writeMem(0x85f5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf7bb);
        EXPECT(gbc.pc(), 0x85f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f5), 0xcb);
        EXPECT(gbc.readMem(0x85f6), 0xe1);
        // CB E1 00E6
        gbc.setState(0x323f, 0x4b46, 0x9900, 0xb4db, 0xbf35, 0xcad3, 0x0, 0x1);
        gbc.writeMem(0x323f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4b46);
        EXPECT(gbc.pc(), 0x3241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00E7
        gbc.setState(0xe6a5, 0x6e22, 0x42c0, 0x7a93, 0x79bf, 0xddcb, 0x0, 0x0);
        gbc.writeMem(0xe6a5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6e22);
        EXPECT(gbc.pc(), 0xe6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a5), 0xcb);
        EXPECT(gbc.readMem(0xe6a6), 0xe1);
        // CB E1 00E8
        gbc.setState(0x7809, 0xb5c5, 0x210, 0x1fee, 0xb54, 0xa69, 0x1, 0x0);
        gbc.writeMem(0x7809, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb5c5);
        EXPECT(gbc.pc(), 0x780b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00E9
        gbc.setState(0x6739, 0x1538, 0xd760, 0xb65c, 0x14cf, 0xd4bc, 0x0, 0x0);
        gbc.writeMem(0x6739, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1538);
        EXPECT(gbc.pc(), 0x673b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00EA
        gbc.setState(0xeb54, 0x1fb1, 0x6f90, 0x5651, 0xcb29, 0x13e2, 0x0, 0x0);
        gbc.writeMem(0xeb54, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1fb1);
        EXPECT(gbc.pc(), 0xeb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb54), 0xcb);
        EXPECT(gbc.readMem(0xeb55), 0xe1);
        // CB E1 00EB
        gbc.setState(0x28e2, 0x3ed8, 0x2710, 0x7732, 0xc298, 0x13cb, 0x1, 0x1);
        gbc.writeMem(0x28e2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3ed8);
        EXPECT(gbc.pc(), 0x28e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00EC
        gbc.setState(0xb1d3, 0x56ec, 0xf070, 0x574, 0x93d6, 0xc152, 0x1, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x56ec);
        EXPECT(gbc.pc(), 0xb1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d3), 0xcb);
        EXPECT(gbc.readMem(0xb1d4), 0xe1);
        // CB E1 00ED
        gbc.setState(0xb670, 0xda70, 0xbcb0, 0xd547, 0x39b7, 0x77f1, 0x0, 0x0);
        gbc.writeMem(0xb670, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xda70);
        EXPECT(gbc.pc(), 0xb672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb670), 0xcb);
        EXPECT(gbc.readMem(0xb671), 0xe1);
        // CB E1 00EE
        gbc.setState(0x7b74, 0x3b68, 0x94d0, 0x7408, 0x32ba, 0x377, 0x1, 0x0);
        gbc.writeMem(0x7b74, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3b68);
        EXPECT(gbc.pc(), 0x7b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00EF
        gbc.setState(0x2b60, 0x50c6, 0x1360, 0x49ac, 0x2de4, 0xf31, 0x0, 0x1);
        gbc.writeMem(0x2b60, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x50c6);
        EXPECT(gbc.pc(), 0x2b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00F0
        gbc.setState(0x4c46, 0x88f6, 0x2af0, 0x2a29, 0x8cba, 0xac41, 0x0, 0x0);
        gbc.writeMem(0x4c46, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x88f6);
        EXPECT(gbc.pc(), 0x4c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00F1
        gbc.setState(0x59c0, 0xb8f, 0x4c30, 0x4c13, 0xab35, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0x59c0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb8f);
        EXPECT(gbc.pc(), 0x59c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00F2
        gbc.setState(0x7893, 0x9270, 0x3770, 0x7dd2, 0x32a4, 0x3ff3, 0x0, 0x0);
        gbc.writeMem(0x7893, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9270);
        EXPECT(gbc.pc(), 0x7895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00F3
        gbc.setState(0xe1ea, 0xe991, 0xf190, 0xf178, 0x4dd1, 0x2cdd, 0x0, 0x0);
        gbc.writeMem(0xe1ea, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe991);
        EXPECT(gbc.pc(), 0xe1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ea), 0xcb);
        EXPECT(gbc.readMem(0xe1eb), 0xe1);
        // CB E1 00F4
        gbc.setState(0xe123, 0xc08d, 0xdc10, 0xf801, 0xe187, 0xec2b, 0x1, 0x0);
        gbc.writeMem(0xe123, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc08d);
        EXPECT(gbc.pc(), 0xe125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe123), 0xcb);
        EXPECT(gbc.readMem(0xe124), 0xe1);
        // CB E1 00F5
        gbc.setState(0xacdc, 0x1e98, 0x3590, 0x403a, 0x75c7, 0x1594, 0x1, 0x1);
        gbc.writeMem(0xacdc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1e98);
        EXPECT(gbc.pc(), 0xacde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdc), 0xcb);
        EXPECT(gbc.readMem(0xacdd), 0xe1);
        // CB E1 00F6
        gbc.setState(0x6d08, 0x39b4, 0x9fd0, 0x5f07, 0xf1d, 0xc103, 0x1, 0x1);
        gbc.writeMem(0x6d08, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x39b4);
        EXPECT(gbc.pc(), 0x6d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00F8
        gbc.setState(0x3bff, 0xdfe5, 0x2f50, 0xbb73, 0xce9b, 0xbbc0, 0x0, 0x0);
        gbc.writeMem(0x3bff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0x3c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00F9
        gbc.setState(0x81da, 0xad2, 0x8670, 0x395d, 0xf3ed, 0x9c7, 0x0, 0x0);
        gbc.writeMem(0x81da, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xad2);
        EXPECT(gbc.pc(), 0x81dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81da), 0xcb);
        EXPECT(gbc.readMem(0x81db), 0xe1);
        // CB E1 00FA
        gbc.setState(0x4036, 0x40ac, 0xdd60, 0xd3c0, 0x243d, 0xd53c, 0x1, 0x1);
        gbc.writeMem(0x4036, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x40ac);
        EXPECT(gbc.pc(), 0x4038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00FB
        gbc.setState(0x5c90, 0x5c79, 0x80, 0x7224, 0x4294, 0x845a, 0x1, 0x1);
        gbc.writeMem(0x5c90, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0x5c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 00FC
        gbc.setState(0xef06, 0xf472, 0x42d0, 0x5071, 0xbe76, 0x3e1a, 0x1, 0x0);
        gbc.writeMem(0xef06, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0xef08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef06), 0xcb);
        EXPECT(gbc.readMem(0xef07), 0xe1);
        // CB E1 00FD
        gbc.setState(0x1c19, 0x68c0, 0x53f0, 0x35f2, 0xdb22, 0xed99, 0x0, 0x1);
        gbc.writeMem(0x1c19, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x68c0);
        EXPECT(gbc.pc(), 0x1c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 00FE
        gbc.setState(0xecb0, 0x3322, 0xd700, 0x5df, 0xad6e, 0xf4f2, 0x1, 0x0);
        gbc.writeMem(0xecb0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3322);
        EXPECT(gbc.pc(), 0xecb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb0), 0xcb);
        EXPECT(gbc.readMem(0xecb1), 0xe1);
        // CB E1 00FF
        gbc.setState(0xc7d6, 0xec23, 0x5c40, 0x6027, 0x4140, 0xa07c, 0x0, 0x1);
        gbc.writeMem(0xc7d6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xec23);
        EXPECT(gbc.pc(), 0xc7d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d6), 0xcb);
        EXPECT(gbc.readMem(0xc7d7), 0xe1);
        // CB E1 0100
        gbc.setState(0x56b1, 0x5c58, 0xb980, 0x83d1, 0xeac, 0xe5f0, 0x1, 0x1);
        gbc.writeMem(0x56b1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5c58);
        EXPECT(gbc.pc(), 0x56b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0101
        gbc.setState(0x9fe4, 0xcd96, 0xa3f0, 0x3a08, 0xeff0, 0x11d3, 0x1, 0x0);
        gbc.writeMem(0x9fe4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcd96);
        EXPECT(gbc.pc(), 0x9fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe4), 0xcb);
        EXPECT(gbc.readMem(0x9fe5), 0xe1);
        // CB E1 0102
        gbc.setState(0x95a1, 0x9502, 0x1690, 0x2c84, 0xc6bd, 0x21df, 0x1, 0x1);
        gbc.writeMem(0x95a1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9502);
        EXPECT(gbc.pc(), 0x95a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a1), 0xcb);
        EXPECT(gbc.readMem(0x95a2), 0xe1);
        // CB E1 0103
        gbc.setState(0x9746, 0xaf67, 0x1af0, 0x60fc, 0x999f, 0xc012, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaf67);
        EXPECT(gbc.pc(), 0x9748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9746), 0xcb);
        EXPECT(gbc.readMem(0x9747), 0xe1);
        // CB E1 0104
        gbc.setState(0x4e82, 0xf883, 0xcd0, 0x58b3, 0x1e90, 0x95e3, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0105
        gbc.setState(0x5e62, 0x3709, 0xf410, 0x9133, 0x2d7c, 0x4ac0, 0x1, 0x1);
        gbc.writeMem(0x5e62, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x5e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0106
        gbc.setState(0x1a4f, 0x1cc2, 0x4990, 0xab2a, 0x82d4, 0xe928, 0x1, 0x1);
        gbc.writeMem(0x1a4f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1cc2);
        EXPECT(gbc.pc(), 0x1a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0107
        gbc.setState(0x7612, 0xad47, 0x6c0, 0xba94, 0x1e3a, 0x78b, 0x0, 0x0);
        gbc.writeMem(0x7612, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0x7614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0108
        gbc.setState(0x1f07, 0x7171, 0x3040, 0xdde9, 0x3aca, 0x833b, 0x0, 0x0);
        gbc.writeMem(0x1f07, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7171);
        EXPECT(gbc.pc(), 0x1f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0109
        gbc.setState(0x4cff, 0xa400, 0x9180, 0xeaad, 0x9e31, 0x87e, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa400);
        EXPECT(gbc.pc(), 0x4d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 010A
        gbc.setState(0xe868, 0x7b15, 0x1f80, 0x5b68, 0x8142, 0x3bb5, 0x0, 0x0);
        gbc.writeMem(0xe868, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7b15);
        EXPECT(gbc.pc(), 0xe86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe868), 0xcb);
        EXPECT(gbc.readMem(0xe869), 0xe1);
        // CB E1 010B
        gbc.setState(0xd9be, 0x9e39, 0xb760, 0xaa1d, 0xf28, 0x7cd9, 0x1, 0x1);
        gbc.writeMem(0xd9be, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9e39);
        EXPECT(gbc.pc(), 0xd9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9be), 0xcb);
        EXPECT(gbc.readMem(0xd9bf), 0xe1);
        // CB E1 010C
        gbc.setState(0x7549, 0xbea1, 0xc850, 0xc062, 0xf129, 0xa637, 0x1, 0x0);
        gbc.writeMem(0x7549, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbea1);
        EXPECT(gbc.pc(), 0x754b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 010D
        gbc.setState(0xc01c, 0x808f, 0x6210, 0x790c, 0x7f6a, 0x465b, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x808f);
        EXPECT(gbc.pc(), 0xc01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01c), 0xcb);
        EXPECT(gbc.readMem(0xc01d), 0xe1);
        // CB E1 010E
        gbc.setState(0x51fa, 0x31ac, 0x380, 0x10ab, 0xa1c5, 0xb08b, 0x0, 0x1);
        gbc.writeMem(0x51fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x31ac);
        EXPECT(gbc.pc(), 0x51fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 010F
        gbc.setState(0x3b9d, 0xd533, 0xbc80, 0x28d0, 0x6729, 0x3e19, 0x1, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd533);
        EXPECT(gbc.pc(), 0x3b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0110
        gbc.setState(0x7be8, 0x9a7b, 0x9730, 0xebcb, 0xb07a, 0xb50f, 0x1, 0x1);
        gbc.writeMem(0x7be8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9a7b);
        EXPECT(gbc.pc(), 0x7bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0111
        gbc.setState(0xbac8, 0xf0fe, 0x4810, 0x59eb, 0xe4bb, 0xf05d, 0x0, 0x0);
        gbc.writeMem(0xbac8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf0fe);
        EXPECT(gbc.pc(), 0xbaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac8), 0xcb);
        EXPECT(gbc.readMem(0xbac9), 0xe1);
        // CB E1 0112
        gbc.setState(0x73ab, 0xc4d8, 0x6de0, 0x16cf, 0x8e43, 0xeb40, 0x0, 0x1);
        gbc.writeMem(0x73ab, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc4d8);
        EXPECT(gbc.pc(), 0x73ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0113
        gbc.setState(0xa077, 0xd91d, 0x6f10, 0xd95e, 0xeca4, 0xaecd, 0x1, 0x1);
        gbc.writeMem(0xa077, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd91d);
        EXPECT(gbc.pc(), 0xa079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0xcb);
        EXPECT(gbc.readMem(0xa078), 0xe1);
        // CB E1 0114
        gbc.setState(0xb959, 0x2d62, 0xcc70, 0xe010, 0xc8fe, 0xd3dc, 0x1, 0x1);
        gbc.writeMem(0xb959, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2d62);
        EXPECT(gbc.pc(), 0xb95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb959), 0xcb);
        EXPECT(gbc.readMem(0xb95a), 0xe1);
        // CB E1 0115
        gbc.setState(0xcb16, 0x1a3a, 0x4f70, 0x3028, 0xe022, 0x8dbe, 0x1, 0x0);
        gbc.writeMem(0xcb16, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1a3a);
        EXPECT(gbc.pc(), 0xcb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb16), 0xcb);
        EXPECT(gbc.readMem(0xcb17), 0xe1);
        // CB E1 0116
        gbc.setState(0x9e31, 0x40cc, 0x50a0, 0x3dae, 0x9cc6, 0x8a0f, 0x1, 0x0);
        gbc.writeMem(0x9e31, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x40cc);
        EXPECT(gbc.pc(), 0x9e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e31), 0xcb);
        EXPECT(gbc.readMem(0x9e32), 0xe1);
        // CB E1 0117
        gbc.setState(0x77ee, 0x2d6, 0x83e0, 0x5205, 0xf3ea, 0xcdf5, 0x1, 0x1);
        gbc.writeMem(0x77ee, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2d6);
        EXPECT(gbc.pc(), 0x77f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0118
        gbc.setState(0x7c20, 0x7604, 0xccd0, 0x6d2b, 0xca95, 0xf577, 0x0, 0x0);
        gbc.writeMem(0x7c20, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7604);
        EXPECT(gbc.pc(), 0x7c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0119
        gbc.setState(0x1cfa, 0xf632, 0xd7c0, 0x415b, 0xa1ea, 0x2195, 0x1, 0x0);
        gbc.writeMem(0x1cfa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0x1cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 011A
        gbc.setState(0xefcb, 0x193d, 0x4400, 0xfcec, 0xfd7c, 0x1052, 0x1, 0x0);
        gbc.writeMem(0xefcb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x193d);
        EXPECT(gbc.pc(), 0xefcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcb), 0xcb);
        EXPECT(gbc.readMem(0xefcc), 0xe1);
        // CB E1 011B
        gbc.setState(0x2dc0, 0xa750, 0xfe50, 0x5ebf, 0x5ab, 0x1cbc, 0x0, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa750);
        EXPECT(gbc.pc(), 0x2dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 011C
        gbc.setState(0x458, 0x3dcc, 0x6fb0, 0x1a2e, 0x10a2, 0x59ab, 0x1, 0x1);
        gbc.writeMem(0x458, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3dcc);
        EXPECT(gbc.pc(), 0x45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 011D
        gbc.setState(0x8e6e, 0xccc8, 0xee20, 0xd821, 0xb29c, 0x3f68, 0x0, 0x0);
        gbc.writeMem(0x8e6e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xccc8);
        EXPECT(gbc.pc(), 0x8e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6e), 0xcb);
        EXPECT(gbc.readMem(0x8e6f), 0xe1);
        // CB E1 011E
        gbc.setState(0x2c1, 0xd9ec, 0x1e80, 0xe72, 0xc0fc, 0x2b36, 0x0, 0x0);
        gbc.writeMem(0x2c1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd9ec);
        EXPECT(gbc.pc(), 0x2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 011F
        gbc.setState(0x1a6c, 0xf452, 0x3250, 0xfbde, 0xe47a, 0xfa20, 0x1, 0x1);
        gbc.writeMem(0x1a6c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf452);
        EXPECT(gbc.pc(), 0x1a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0120
        gbc.setState(0xea68, 0x2b3f, 0x5850, 0xfe5d, 0x6e0e, 0x4c0f, 0x0, 0x1);
        gbc.writeMem(0xea68, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2b3f);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0xe1);
        // CB E1 0121
        gbc.setState(0xc759, 0xe2c6, 0xaa40, 0x8f2f, 0x5357, 0x94ce, 0x0, 0x1);
        gbc.writeMem(0xc759, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe2c6);
        EXPECT(gbc.pc(), 0xc75b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc759), 0xcb);
        EXPECT(gbc.readMem(0xc75a), 0xe1);
        // CB E1 0122
        gbc.setState(0xaffd, 0x53da, 0xae30, 0x9b8, 0x61a2, 0xb3da, 0x1, 0x1);
        gbc.writeMem(0xaffd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x53da);
        EXPECT(gbc.pc(), 0xafff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffd), 0xcb);
        EXPECT(gbc.readMem(0xaffe), 0xe1);
        // CB E1 0123
        gbc.setState(0xe91d, 0x9f9a, 0xc2a0, 0xbe63, 0xa4ea, 0x5ab3, 0x0, 0x1);
        gbc.writeMem(0xe91d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9f9a);
        EXPECT(gbc.pc(), 0xe91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91d), 0xcb);
        EXPECT(gbc.readMem(0xe91e), 0xe1);
        // CB E1 0124
        gbc.setState(0x59b, 0xbfd6, 0x5110, 0xece7, 0x36b1, 0x39f0, 0x0, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbfd6);
        EXPECT(gbc.pc(), 0x59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0125
        gbc.setState(0xa137, 0xaa98, 0x830, 0x42f5, 0xd208, 0xb9d0, 0x0, 0x1);
        gbc.writeMem(0xa137, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaa98);
        EXPECT(gbc.pc(), 0xa139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa137), 0xcb);
        EXPECT(gbc.readMem(0xa138), 0xe1);
        // CB E1 0126
        gbc.setState(0x99a8, 0x7a22, 0xca80, 0x871e, 0x8f2d, 0x804b, 0x0, 0x1);
        gbc.writeMem(0x99a8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7a22);
        EXPECT(gbc.pc(), 0x99aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a8), 0xcb);
        EXPECT(gbc.readMem(0x99a9), 0xe1);
        // CB E1 0127
        gbc.setState(0x85, 0x8775, 0x9c60, 0x304c, 0xf1d7, 0xbd48, 0x0, 0x0);
        gbc.writeMem(0x85, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8775);
        EXPECT(gbc.pc(), 0x87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0128
        gbc.setState(0x4e04, 0xbbc7, 0xf960, 0x3898, 0xca54, 0x5b01, 0x1, 0x0);
        gbc.writeMem(0x4e04, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0x4e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 012A
        gbc.setState(0x457a, 0x1d1f, 0xf740, 0x1141, 0xcdfa, 0xd95e, 0x0, 0x1);
        gbc.writeMem(0x457a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1d1f);
        EXPECT(gbc.pc(), 0x457c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 012B
        gbc.setState(0x3627, 0x227a, 0x9620, 0xd1ad, 0x51b6, 0xe0, 0x0, 0x0);
        gbc.writeMem(0x3627, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x227a);
        EXPECT(gbc.pc(), 0x3629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 012C
        gbc.setState(0x86bf, 0x1779, 0x5e20, 0x1aae, 0x6eba, 0x87f9, 0x1, 0x0);
        gbc.writeMem(0x86bf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1779);
        EXPECT(gbc.pc(), 0x86c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86bf), 0xcb);
        EXPECT(gbc.readMem(0x86c0), 0xe1);
        // CB E1 012D
        gbc.setState(0x3e36, 0xfba3, 0x8090, 0xd6d9, 0x44a4, 0xdc43, 0x1, 0x0);
        gbc.writeMem(0x3e36, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfba3);
        EXPECT(gbc.pc(), 0x3e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 012E
        gbc.setState(0xbb63, 0xaaba, 0xe9c0, 0xeab8, 0x69b2, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xbb63, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xaaba);
        EXPECT(gbc.pc(), 0xbb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb63), 0xcb);
        EXPECT(gbc.readMem(0xbb64), 0xe1);
        // CB E1 012F
        gbc.setState(0xf76, 0x583, 0x66a0, 0x1be5, 0x4081, 0x8c45, 0x0, 0x0);
        gbc.writeMem(0xf76, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x583);
        EXPECT(gbc.pc(), 0xf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0130
        gbc.setState(0x16cd, 0x9de9, 0xd890, 0x4cb7, 0x9b05, 0xf409, 0x0, 0x0);
        gbc.writeMem(0x16cd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9de9);
        EXPECT(gbc.pc(), 0x16cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0131
        gbc.setState(0x2a88, 0x8858, 0x1cf0, 0x839c, 0x4482, 0x9946, 0x1, 0x0);
        gbc.writeMem(0x2a88, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8858);
        EXPECT(gbc.pc(), 0x2a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0132
        gbc.setState(0xed2c, 0xc283, 0x5230, 0x8ebb, 0x5fcf, 0x6fa3, 0x0, 0x0);
        gbc.writeMem(0xed2c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc283);
        EXPECT(gbc.pc(), 0xed2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2c), 0xcb);
        EXPECT(gbc.readMem(0xed2d), 0xe1);
        // CB E1 0133
        gbc.setState(0x8247, 0x85df, 0x7760, 0xf9b1, 0x7c0, 0x1d5c, 0x0, 0x1);
        gbc.writeMem(0x8247, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x85df);
        EXPECT(gbc.pc(), 0x8249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8247), 0xcb);
        EXPECT(gbc.readMem(0x8248), 0xe1);
        // CB E1 0134
        gbc.setState(0x3ef5, 0x55e, 0x2e30, 0x72ad, 0xf608, 0xe5b1, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x55e);
        EXPECT(gbc.pc(), 0x3ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0135
        gbc.setState(0xdab6, 0xaa6a, 0xd8e0, 0x7012, 0xb5b8, 0xbbaf, 0x1, 0x0);
        gbc.writeMem(0xdab6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaa6a);
        EXPECT(gbc.pc(), 0xdab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab6), 0xcb);
        EXPECT(gbc.readMem(0xdab7), 0xe1);
        // CB E1 0136
        gbc.setState(0x9e0c, 0xaec, 0xe1b0, 0xad98, 0x9cc4, 0xb01d, 0x0, 0x0);
        gbc.writeMem(0x9e0c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaec);
        EXPECT(gbc.pc(), 0x9e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0c), 0xcb);
        EXPECT(gbc.readMem(0x9e0d), 0xe1);
        // CB E1 0137
        gbc.setState(0x4431, 0xa717, 0xbf40, 0x8afe, 0xa307, 0xa4d9, 0x1, 0x1);
        gbc.writeMem(0x4431, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa717);
        EXPECT(gbc.pc(), 0x4433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0138
        gbc.setState(0xcbba, 0x5380, 0xcdd0, 0x229f, 0xd5c6, 0x24a, 0x1, 0x1);
        gbc.writeMem(0xcbba, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5380);
        EXPECT(gbc.pc(), 0xcbbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbba), 0xcb);
        EXPECT(gbc.readMem(0xcbbb), 0xe1);
        // CB E1 0139
        gbc.setState(0x2142, 0xf88f, 0x31b0, 0xe4b5, 0xe7b0, 0xe834, 0x0, 0x1);
        gbc.writeMem(0x2142, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf88f);
        EXPECT(gbc.pc(), 0x2144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 013A
        gbc.setState(0x2463, 0xe5a5, 0x6810, 0x5066, 0xa971, 0xd2fa, 0x1, 0x0);
        gbc.writeMem(0x2463, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe5a5);
        EXPECT(gbc.pc(), 0x2465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 013B
        gbc.setState(0x357a, 0xe43b, 0x3e00, 0xaba2, 0x3b7, 0x6abb, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe43b);
        EXPECT(gbc.pc(), 0x357c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 013C
        gbc.setState(0x8427, 0x7704, 0x7050, 0xd7d5, 0x97e5, 0xdecb, 0x1, 0x1);
        gbc.writeMem(0x8427, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7704);
        EXPECT(gbc.pc(), 0x8429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8427), 0xcb);
        EXPECT(gbc.readMem(0x8428), 0xe1);
        // CB E1 013D
        gbc.setState(0x9e35, 0xa427, 0x8240, 0x2f13, 0x7298, 0x16af, 0x0, 0x0);
        gbc.writeMem(0x9e35, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa427);
        EXPECT(gbc.pc(), 0x9e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e35), 0xcb);
        EXPECT(gbc.readMem(0x9e36), 0xe1);
        // CB E1 013E
        gbc.setState(0xded1, 0xb0f7, 0x6090, 0x9248, 0x5e99, 0x497c, 0x1, 0x1);
        gbc.writeMem(0xded1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb0f7);
        EXPECT(gbc.pc(), 0xded3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded1), 0xcb);
        EXPECT(gbc.readMem(0xded2), 0xe1);
        // CB E1 013F
        gbc.setState(0xce00, 0x74bf, 0x83c0, 0x615d, 0x1a87, 0x3977, 0x1, 0x1);
        gbc.writeMem(0xce00, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x74bf);
        EXPECT(gbc.pc(), 0xce02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce00), 0xcb);
        EXPECT(gbc.readMem(0xce01), 0xe1);
        // CB E1 0140
        gbc.setState(0xaeda, 0x6e16, 0xaa80, 0xc676, 0xb5cf, 0xe897, 0x1, 0x1);
        gbc.writeMem(0xaeda, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6e16);
        EXPECT(gbc.pc(), 0xaedc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeda), 0xcb);
        EXPECT(gbc.readMem(0xaedb), 0xe1);
        // CB E1 0141
        gbc.setState(0xc4f7, 0x693c, 0xaaf0, 0xd565, 0x8729, 0xba54, 0x0, 0x1);
        gbc.writeMem(0xc4f7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x693c);
        EXPECT(gbc.pc(), 0xc4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f7), 0xcb);
        EXPECT(gbc.readMem(0xc4f8), 0xe1);
        // CB E1 0142
        gbc.setState(0x4c40, 0x491a, 0x3b40, 0xff1d, 0x1711, 0x38f, 0x1, 0x0);
        gbc.writeMem(0x4c40, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x491a);
        EXPECT(gbc.pc(), 0x4c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0143
        gbc.setState(0x50cd, 0x8b55, 0xfff0, 0xb1c5, 0x4146, 0x895a, 0x0, 0x1);
        gbc.writeMem(0x50cd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8b55);
        EXPECT(gbc.pc(), 0x50cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0144
        gbc.setState(0x9c14, 0x2bab, 0xcc30, 0x241d, 0xb39d, 0x2638, 0x0, 0x1);
        gbc.writeMem(0x9c14, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2bab);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0xe1);
        // CB E1 0145
        gbc.setState(0x4428, 0x378a, 0xd850, 0xcf6, 0x7177, 0x391b, 0x1, 0x0);
        gbc.writeMem(0x4428, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x378a);
        EXPECT(gbc.pc(), 0x442a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0146
        gbc.setState(0x7c52, 0xe057, 0xe490, 0xe990, 0x5568, 0x1fe1, 0x0, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe057);
        EXPECT(gbc.pc(), 0x7c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0147
        gbc.setState(0x7b1f, 0x2cf9, 0x8780, 0x2f7c, 0x5868, 0xf8e3, 0x0, 0x0);
        gbc.writeMem(0x7b1f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2cf9);
        EXPECT(gbc.pc(), 0x7b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0148
        gbc.setState(0x659f, 0x6595, 0x1d00, 0x5494, 0x7c57, 0xa019, 0x0, 0x1);
        gbc.writeMem(0x659f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6595);
        EXPECT(gbc.pc(), 0x65a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0149
        gbc.setState(0xd105, 0xe784, 0x9ab0, 0x5ccb, 0x84a3, 0xae41, 0x1, 0x1);
        gbc.writeMem(0xd105, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe784);
        EXPECT(gbc.pc(), 0xd107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd105), 0xcb);
        EXPECT(gbc.readMem(0xd106), 0xe1);
        // CB E1 014A
        gbc.setState(0x45b1, 0xc566, 0xa0e0, 0x64df, 0xe0e8, 0x68bb, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc566);
        EXPECT(gbc.pc(), 0x45b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 014B
        gbc.setState(0x15ca, 0x8adb, 0x5030, 0x2769, 0x8958, 0x7426, 0x0, 0x1);
        gbc.writeMem(0x15ca, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8adb);
        EXPECT(gbc.pc(), 0x15cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 014C
        gbc.setState(0x3819, 0xb73a, 0x39f0, 0x6a8f, 0x94aa, 0x1b99, 0x1, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb73a);
        EXPECT(gbc.pc(), 0x381b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 014D
        gbc.setState(0x7904, 0x7d90, 0x5430, 0xf8a6, 0x1cee, 0x1fc8, 0x0, 0x1);
        gbc.writeMem(0x7904, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7d90);
        EXPECT(gbc.pc(), 0x7906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 014E
        gbc.setState(0xe12e, 0xab1d, 0x6f20, 0xe65f, 0x329c, 0x947d, 0x1, 0x0);
        gbc.writeMem(0xe12e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xab1d);
        EXPECT(gbc.pc(), 0xe130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe12e), 0xcb);
        EXPECT(gbc.readMem(0xe12f), 0xe1);
        // CB E1 014F
        gbc.setState(0x4627, 0x411a, 0x2870, 0xa5f1, 0x9c6f, 0x363f, 0x1, 0x0);
        gbc.writeMem(0x4627, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0x4629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0151
        gbc.setState(0xd63b, 0xc2b8, 0x3000, 0xe4db, 0xa06c, 0x8a0b, 0x0, 0x0);
        gbc.writeMem(0xd63b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc2b8);
        EXPECT(gbc.pc(), 0xd63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63b), 0xcb);
        EXPECT(gbc.readMem(0xd63c), 0xe1);
        // CB E1 0152
        gbc.setState(0xaee5, 0x5b19, 0x1c70, 0x2348, 0x3e0, 0x6edd, 0x0, 0x1);
        gbc.writeMem(0xaee5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5b19);
        EXPECT(gbc.pc(), 0xaee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee5), 0xcb);
        EXPECT(gbc.readMem(0xaee6), 0xe1);
        // CB E1 0153
        gbc.setState(0x1612, 0xb977, 0x6580, 0xa18f, 0xd77f, 0xacd9, 0x1, 0x0);
        gbc.writeMem(0x1612, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb977);
        EXPECT(gbc.pc(), 0x1614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0154
        gbc.setState(0x2cf3, 0x9709, 0xc670, 0xff6b, 0xb047, 0xfbe0, 0x0, 0x1);
        gbc.writeMem(0x2cf3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9709);
        EXPECT(gbc.pc(), 0x2cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0155
        gbc.setState(0x6685, 0x8569, 0xb7d0, 0x1f5e, 0xd7b, 0xbb97, 0x0, 0x0);
        gbc.writeMem(0x6685, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8569);
        EXPECT(gbc.pc(), 0x6687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0156
        gbc.setState(0x8220, 0x18d, 0xcf30, 0x2ca8, 0xa077, 0x1a34, 0x0, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x18d);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8220), 0xcb);
        EXPECT(gbc.readMem(0x8221), 0xe1);
        // CB E1 0157
        gbc.setState(0x1123, 0xd337, 0xb100, 0x982b, 0x232f, 0x34a0, 0x0, 0x0);
        gbc.writeMem(0x1123, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd337);
        EXPECT(gbc.pc(), 0x1125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0158
        gbc.setState(0x6b2f, 0x481e, 0x9c20, 0x694a, 0xb2b9, 0x1600, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x481e);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0159
        gbc.setState(0x40dd, 0xa2b6, 0x11c0, 0x4f2, 0x6f91, 0x6f0c, 0x1, 0x0);
        gbc.writeMem(0x40dd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa2b6);
        EXPECT(gbc.pc(), 0x40df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 015A
        gbc.setState(0xb6e, 0x12bd, 0x70f0, 0x562e, 0x2e94, 0x24f4, 0x1, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x12bd);
        EXPECT(gbc.pc(), 0xb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 015B
        gbc.setState(0xbb3c, 0xcbd2, 0xacc0, 0xba34, 0x7c13, 0xdab, 0x0, 0x0);
        gbc.writeMem(0xbb3c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcbd2);
        EXPECT(gbc.pc(), 0xbb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3c), 0xcb);
        EXPECT(gbc.readMem(0xbb3d), 0xe1);
        // CB E1 015C
        gbc.setState(0xaaa, 0xfe21, 0xef50, 0x3234, 0x3fc4, 0xda2c, 0x0, 0x1);
        gbc.writeMem(0xaaa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfe21);
        EXPECT(gbc.pc(), 0xaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 015D
        gbc.setState(0x2686, 0x4edb, 0x2090, 0x5797, 0xa703, 0x12ce, 0x1, 0x1);
        gbc.writeMem(0x2686, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4edb);
        EXPECT(gbc.pc(), 0x2688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 015E
        gbc.setState(0xcd01, 0xfb20, 0x9ff0, 0x3090, 0x1a45, 0x5b11, 0x0, 0x1);
        gbc.writeMem(0xcd01, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfb20);
        EXPECT(gbc.pc(), 0xcd03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd01), 0xcb);
        EXPECT(gbc.readMem(0xcd02), 0xe1);
        // CB E1 015F
        gbc.setState(0x34c4, 0xec7e, 0x7170, 0xd1d, 0x4af2, 0x2ee4, 0x0, 0x0);
        gbc.writeMem(0x34c4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xec7e);
        EXPECT(gbc.pc(), 0x34c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0160
        gbc.setState(0xa479, 0x1f80, 0xaf70, 0x5ceb, 0x2aa8, 0x8e97, 0x0, 0x1);
        gbc.writeMem(0xa479, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1f80);
        EXPECT(gbc.pc(), 0xa47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa479), 0xcb);
        EXPECT(gbc.readMem(0xa47a), 0xe1);
        // CB E1 0161
        gbc.setState(0x24fa, 0x39c0, 0xd9c0, 0xd002, 0x762f, 0x585a, 0x1, 0x0);
        gbc.writeMem(0x24fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x39c0);
        EXPECT(gbc.pc(), 0x24fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0162
        gbc.setState(0xd24b, 0xbd, 0x4f60, 0x5b6e, 0xfec4, 0xf7d5, 0x0, 0x0);
        gbc.writeMem(0xd24b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbd);
        EXPECT(gbc.pc(), 0xd24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24b), 0xcb);
        EXPECT(gbc.readMem(0xd24c), 0xe1);
        // CB E1 0163
        gbc.setState(0x88f3, 0x2fd1, 0x2930, 0xaa8b, 0xc050, 0x5eeb, 0x0, 0x1);
        gbc.writeMem(0x88f3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2fd1);
        EXPECT(gbc.pc(), 0x88f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f3), 0xcb);
        EXPECT(gbc.readMem(0x88f4), 0xe1);
        // CB E1 0164
        gbc.setState(0x5aaa, 0x3c6e, 0x40e0, 0xc00b, 0xf77e, 0xb97f, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3c6e);
        EXPECT(gbc.pc(), 0x5aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0165
        gbc.setState(0x432d, 0x5fc1, 0x4120, 0x70ac, 0xfa78, 0x650, 0x0, 0x0);
        gbc.writeMem(0x432d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5fc1);
        EXPECT(gbc.pc(), 0x432f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0166
        gbc.setState(0xdc13, 0xf0d5, 0x41f0, 0x7051, 0x9b75, 0x3c1f, 0x1, 0x1);
        gbc.writeMem(0xdc13, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf0d5);
        EXPECT(gbc.pc(), 0xdc15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc13), 0xcb);
        EXPECT(gbc.readMem(0xdc14), 0xe1);
        // CB E1 0167
        gbc.setState(0xba4f, 0xca19, 0x770, 0xcaed, 0x2ba1, 0x436c, 0x1, 0x1);
        gbc.writeMem(0xba4f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xca19);
        EXPECT(gbc.pc(), 0xba51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4f), 0xcb);
        EXPECT(gbc.readMem(0xba50), 0xe1);
        // CB E1 0168
        gbc.setState(0x2dac, 0xf286, 0x4cf0, 0x45e8, 0xb4c1, 0x3d32, 0x0, 0x1);
        gbc.writeMem(0x2dac, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf286);
        EXPECT(gbc.pc(), 0x2dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0169
        gbc.setState(0x62b5, 0x45fc, 0xb620, 0xc750, 0x2002, 0x3b2e, 0x1, 0x0);
        gbc.writeMem(0x62b5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x45fc);
        EXPECT(gbc.pc(), 0x62b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 016A
        gbc.setState(0xa309, 0xf58a, 0xf8a0, 0xe5fa, 0x60b8, 0xe3c2, 0x1, 0x0);
        gbc.writeMem(0xa309, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf58a);
        EXPECT(gbc.pc(), 0xa30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa309), 0xcb);
        EXPECT(gbc.readMem(0xa30a), 0xe1);
        // CB E1 016B
        gbc.setState(0x878e, 0x9ccf, 0x8bd0, 0x7096, 0x5da0, 0xa839, 0x0, 0x0);
        gbc.writeMem(0x878e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9ccf);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x878e), 0xcb);
        EXPECT(gbc.readMem(0x878f), 0xe1);
        // CB E1 016C
        gbc.setState(0x82e7, 0x3f46, 0x5440, 0x3111, 0x7f74, 0x574a, 0x0, 0x1);
        gbc.writeMem(0x82e7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3f46);
        EXPECT(gbc.pc(), 0x82e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e7), 0xcb);
        EXPECT(gbc.readMem(0x82e8), 0xe1);
        // CB E1 016D
        gbc.setState(0xb736, 0xcecb, 0x78b0, 0x2ca6, 0xbd8a, 0x489f, 0x0, 0x1);
        gbc.writeMem(0xb736, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0xb738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb736), 0xcb);
        EXPECT(gbc.readMem(0xb737), 0xe1);
        // CB E1 016E
        gbc.setState(0xbad4, 0xecd8, 0x9f0, 0x18b9, 0x8760, 0x7ae5, 0x0, 0x0);
        gbc.writeMem(0xbad4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xecd8);
        EXPECT(gbc.pc(), 0xbad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad4), 0xcb);
        EXPECT(gbc.readMem(0xbad5), 0xe1);
        // CB E1 016F
        gbc.setState(0x13fe, 0x3b2d, 0x310, 0x6e5b, 0x1737, 0xad7f, 0x0, 0x1);
        gbc.writeMem(0x13fe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3b2d);
        EXPECT(gbc.pc(), 0x1400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0170
        gbc.setState(0xdf9b, 0x6274, 0xea90, 0x1e19, 0xfbc5, 0x3f3e, 0x1, 0x0);
        gbc.writeMem(0xdf9b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6274);
        EXPECT(gbc.pc(), 0xdf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9b), 0xcb);
        EXPECT(gbc.readMem(0xdf9c), 0xe1);
        // CB E1 0171
        gbc.setState(0x176c, 0x803c, 0x5d00, 0xa021, 0x29c3, 0x12d4, 0x1, 0x0);
        gbc.writeMem(0x176c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x803c);
        EXPECT(gbc.pc(), 0x176e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0172
        gbc.setState(0x3609, 0x5c8c, 0xf710, 0x5e9d, 0x3fa2, 0x48b3, 0x0, 0x1);
        gbc.writeMem(0x3609, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5c8c);
        EXPECT(gbc.pc(), 0x360b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0173
        gbc.setState(0xb681, 0x388d, 0x7fc0, 0xbc04, 0x1a95, 0xb7ca, 0x0, 0x0);
        gbc.writeMem(0xb681, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x388d);
        EXPECT(gbc.pc(), 0xb683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb681), 0xcb);
        EXPECT(gbc.readMem(0xb682), 0xe1);
        // CB E1 0175
        gbc.setState(0xfcc, 0xc401, 0x68a0, 0xa4cc, 0x95d4, 0xa443, 0x1, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc401);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0176
        gbc.setState(0x9a56, 0x97c, 0x3f00, 0xe301, 0xce3d, 0xcd06, 0x1, 0x1);
        gbc.writeMem(0x9a56, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x97c);
        EXPECT(gbc.pc(), 0x9a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a56), 0xcb);
        EXPECT(gbc.readMem(0x9a57), 0xe1);
        // CB E1 0177
        gbc.setState(0x3828, 0xc1f5, 0x68b0, 0x43b6, 0x1eac, 0x9e40, 0x1, 0x0);
        gbc.writeMem(0x3828, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc1f5);
        EXPECT(gbc.pc(), 0x382a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0178
        gbc.setState(0x282, 0xb3e3, 0xccc0, 0x526c, 0xbc47, 0x464a, 0x1, 0x1);
        gbc.writeMem(0x282, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb3e3);
        EXPECT(gbc.pc(), 0x284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 017A
        gbc.setState(0x368b, 0xfc21, 0x8320, 0xdb01, 0x113e, 0x83b5, 0x0, 0x1);
        gbc.writeMem(0x368b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfc21);
        EXPECT(gbc.pc(), 0x368d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 017B
        gbc.setState(0xb40a, 0x2516, 0xc820, 0x16d3, 0xf070, 0xaf7a, 0x0, 0x0);
        gbc.writeMem(0xb40a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2516);
        EXPECT(gbc.pc(), 0xb40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40a), 0xcb);
        EXPECT(gbc.readMem(0xb40b), 0xe1);
        // CB E1 017C
        gbc.setState(0x69a3, 0x9b74, 0xadc0, 0xfecf, 0x3e30, 0xce28, 0x1, 0x0);
        gbc.writeMem(0x69a3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0x69a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 017D
        gbc.setState(0xd78a, 0x6b3f, 0x8dd0, 0x80f, 0x10a8, 0xa83f, 0x0, 0x0);
        gbc.writeMem(0xd78a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6b3f);
        EXPECT(gbc.pc(), 0xd78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd78a), 0xcb);
        EXPECT(gbc.readMem(0xd78b), 0xe1);
        // CB E1 017E
        gbc.setState(0xa766, 0x2a6c, 0x1150, 0xf56a, 0x306b, 0xb9c2, 0x0, 0x1);
        gbc.writeMem(0xa766, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2a6c);
        EXPECT(gbc.pc(), 0xa768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa766), 0xcb);
        EXPECT(gbc.readMem(0xa767), 0xe1);
        // CB E1 017F
        gbc.setState(0x8ff9, 0x9539, 0xf360, 0x2613, 0xcb4b, 0xfd06, 0x0, 0x1);
        gbc.writeMem(0x8ff9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x8ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff9), 0xcb);
        EXPECT(gbc.readMem(0x8ffa), 0xe1);
        // CB E1 0180
        gbc.setState(0x644f, 0x877d, 0xa400, 0x8538, 0x18f1, 0x9cf8, 0x1, 0x0);
        gbc.writeMem(0x644f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x877d);
        EXPECT(gbc.pc(), 0x6451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0181
        gbc.setState(0x1e83, 0x81ea, 0xc000, 0x462c, 0x7777, 0xb3db, 0x0, 0x0);
        gbc.writeMem(0x1e83, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x81ea);
        EXPECT(gbc.pc(), 0x1e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0182
        gbc.setState(0x903d, 0xaa09, 0xe800, 0xff49, 0x4660, 0x7e14, 0x0, 0x1);
        gbc.writeMem(0x903d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaa09);
        EXPECT(gbc.pc(), 0x903f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903d), 0xcb);
        EXPECT(gbc.readMem(0x903e), 0xe1);
        // CB E1 0183
        gbc.setState(0xd566, 0x1a81, 0xa440, 0xbf74, 0xaf97, 0x5850, 0x1, 0x0);
        gbc.writeMem(0xd566, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1a81);
        EXPECT(gbc.pc(), 0xd568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd566), 0xcb);
        EXPECT(gbc.readMem(0xd567), 0xe1);
        // CB E1 0184
        gbc.setState(0xdffd, 0x9eec, 0x37b0, 0x56cc, 0xa5bc, 0xbf1b, 0x1, 0x0);
        gbc.writeMem(0xdffd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9eec);
        EXPECT(gbc.pc(), 0xdfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdffd), 0xcb);
        EXPECT(gbc.readMem(0xdffe), 0xe1);
        // CB E1 0185
        gbc.setState(0xaa7e, 0x538, 0x53f0, 0x44b4, 0x9a16, 0xb053, 0x1, 0x1);
        gbc.writeMem(0xaa7e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x538);
        EXPECT(gbc.pc(), 0xaa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7e), 0xcb);
        EXPECT(gbc.readMem(0xaa7f), 0xe1);
        // CB E1 0186
        gbc.setState(0x3caa, 0x6f7c, 0xe830, 0xd346, 0x941, 0x5b4, 0x0, 0x0);
        gbc.writeMem(0x3caa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0x3cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0187
        gbc.setState(0x6db5, 0xc2d2, 0x66f0, 0x5d79, 0xaf96, 0x3098, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc2d2);
        EXPECT(gbc.pc(), 0x6db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0188
        gbc.setState(0xd594, 0xc75a, 0xe990, 0xc67d, 0x10d4, 0xde93, 0x0, 0x1);
        gbc.writeMem(0xd594, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0xd596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd594), 0xcb);
        EXPECT(gbc.readMem(0xd595), 0xe1);
        // CB E1 0189
        gbc.setState(0x21ea, 0x9fda, 0x2670, 0x5edc, 0xd0ba, 0x818b, 0x1, 0x1);
        gbc.writeMem(0x21ea, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9fda);
        EXPECT(gbc.pc(), 0x21ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 018A
        gbc.setState(0x96b3, 0xa044, 0xc1f0, 0x22d1, 0x562b, 0x68bc, 0x1, 0x0);
        gbc.writeMem(0x96b3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa044);
        EXPECT(gbc.pc(), 0x96b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b3), 0xcb);
        EXPECT(gbc.readMem(0x96b4), 0xe1);
        // CB E1 018B
        gbc.setState(0xcdc9, 0x54cc, 0x3ef0, 0x5e46, 0x284e, 0x2912, 0x1, 0x1);
        gbc.writeMem(0xcdc9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x54cc);
        EXPECT(gbc.pc(), 0xcdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc9), 0xcb);
        EXPECT(gbc.readMem(0xcdca), 0xe1);
        // CB E1 018C
        gbc.setState(0x7074, 0x3ad2, 0x1300, 0x9436, 0x6eff, 0x309e, 0x0, 0x1);
        gbc.writeMem(0x7074, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3ad2);
        EXPECT(gbc.pc(), 0x7076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 018D
        gbc.setState(0x43f1, 0x7dcb, 0xa6b0, 0x2d29, 0x2a81, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0x43f1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7dcb);
        EXPECT(gbc.pc(), 0x43f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 018E
        gbc.setState(0xc5f0, 0x333f, 0xd130, 0xcd83, 0xb589, 0xc237, 0x1, 0x0);
        gbc.writeMem(0xc5f0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x333f);
        EXPECT(gbc.pc(), 0xc5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f0), 0xcb);
        EXPECT(gbc.readMem(0xc5f1), 0xe1);
        // CB E1 018F
        gbc.setState(0x6e85, 0xf76b, 0xfb50, 0x3adb, 0x1242, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0x6e85, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf76b);
        EXPECT(gbc.pc(), 0x6e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0190
        gbc.setState(0x708, 0xc0f7, 0xeea0, 0x380, 0x354b, 0xd283, 0x0, 0x0);
        gbc.writeMem(0x708, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc0f7);
        EXPECT(gbc.pc(), 0x70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0191
        gbc.setState(0x9dc0, 0x2ad9, 0xd4b0, 0x2704, 0x7d5b, 0xafc8, 0x1, 0x1);
        gbc.writeMem(0x9dc0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2ad9);
        EXPECT(gbc.pc(), 0x9dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc0), 0xcb);
        EXPECT(gbc.readMem(0x9dc1), 0xe1);
        // CB E1 0192
        gbc.setState(0x5407, 0xf89d, 0xc7f0, 0xc0db, 0x224f, 0x7cd8, 0x0, 0x0);
        gbc.writeMem(0x5407, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0x5409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0193
        gbc.setState(0x30fa, 0x9165, 0x5240, 0x5324, 0xf3b2, 0xf7c6, 0x1, 0x0);
        gbc.writeMem(0x30fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0194
        gbc.setState(0x2eab, 0xaa6d, 0x4160, 0x9d17, 0x34dd, 0x8694, 0x0, 0x1);
        gbc.writeMem(0x2eab, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xaa6d);
        EXPECT(gbc.pc(), 0x2ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0195
        gbc.setState(0x773c, 0x9b96, 0xee10, 0x6b10, 0x6550, 0x3ecc, 0x0, 0x0);
        gbc.writeMem(0x773c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9b96);
        EXPECT(gbc.pc(), 0x773e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0196
        gbc.setState(0x5325, 0x853f, 0xce00, 0xa58e, 0x1f56, 0x301, 0x1, 0x1);
        gbc.writeMem(0x5325, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x853f);
        EXPECT(gbc.pc(), 0x5327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0198
        gbc.setState(0x1c6b, 0xd4e, 0x4ed0, 0xd72, 0xc698, 0x444, 0x1, 0x1);
        gbc.writeMem(0x1c6b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd4e);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0199
        gbc.setState(0x21ff, 0x2858, 0x5a30, 0x3228, 0xac11, 0x3968, 0x1, 0x0);
        gbc.writeMem(0x21ff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2858);
        EXPECT(gbc.pc(), 0x2201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 019A
        gbc.setState(0x8ea6, 0xc69, 0xcae0, 0xc070, 0x4bd, 0x7af4, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc69);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea6), 0xcb);
        EXPECT(gbc.readMem(0x8ea7), 0xe1);
        // CB E1 019B
        gbc.setState(0x6140, 0xcf33, 0xb0, 0x3bc0, 0xba6b, 0x7578, 0x1, 0x0);
        gbc.writeMem(0x6140, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcf33);
        EXPECT(gbc.pc(), 0x6142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 019C
        gbc.setState(0x1d69, 0xd114, 0x73c0, 0xf816, 0xfc30, 0x9364, 0x0, 0x1);
        gbc.writeMem(0x1d69, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0x1d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 019D
        gbc.setState(0x42a, 0x87cb, 0xc9c0, 0x53a5, 0xee23, 0xba68, 0x0, 0x0);
        gbc.writeMem(0x42a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x87cb);
        EXPECT(gbc.pc(), 0x42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 019E
        gbc.setState(0xd0b, 0xbe7c, 0xe3f0, 0xbd27, 0x250c, 0x4378, 0x1, 0x1);
        gbc.writeMem(0xd0b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbe7c);
        EXPECT(gbc.pc(), 0xd0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 019F
        gbc.setState(0xbb64, 0x3569, 0x74a0, 0x46b4, 0x69bc, 0x2ef6, 0x0, 0x1);
        gbc.writeMem(0xbb64, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3569);
        EXPECT(gbc.pc(), 0xbb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb64), 0xcb);
        EXPECT(gbc.readMem(0xbb65), 0xe1);
        // CB E1 01A0
        gbc.setState(0xbbf7, 0xeed5, 0xf80, 0xfb58, 0x68e9, 0x2917, 0x0, 0x0);
        gbc.writeMem(0xbbf7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeed5);
        EXPECT(gbc.pc(), 0xbbf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf7), 0xcb);
        EXPECT(gbc.readMem(0xbbf8), 0xe1);
        // CB E1 01A1
        gbc.setState(0x3bd0, 0xd90c, 0xffb0, 0xd020, 0x2586, 0xe414, 0x1, 0x0);
        gbc.writeMem(0x3bd0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01A2
        gbc.setState(0x7199, 0x8a80, 0xf3e0, 0xed00, 0xeb4d, 0x3171, 0x1, 0x1);
        gbc.writeMem(0x7199, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8a80);
        EXPECT(gbc.pc(), 0x719b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01A3
        gbc.setState(0x1da3, 0x98de, 0x2bc0, 0xfa41, 0xef8b, 0x1791, 0x1, 0x1);
        gbc.writeMem(0x1da3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x98de);
        EXPECT(gbc.pc(), 0x1da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01A4
        gbc.setState(0xdb76, 0x3114, 0x8520, 0x141c, 0xbceb, 0xc51c, 0x0, 0x0);
        gbc.writeMem(0xdb76, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3114);
        EXPECT(gbc.pc(), 0xdb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb76), 0xcb);
        EXPECT(gbc.readMem(0xdb77), 0xe1);
        // CB E1 01A5
        gbc.setState(0x226f, 0xcb2e, 0xdd00, 0x7f90, 0xd4e9, 0x7891, 0x0, 0x0);
        gbc.writeMem(0x226f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcb2e);
        EXPECT(gbc.pc(), 0x2271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01A6
        gbc.setState(0x3b5c, 0x6c8a, 0x99c0, 0xfaf8, 0xad37, 0x6c3a, 0x0, 0x1);
        gbc.writeMem(0x3b5c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6c8a);
        EXPECT(gbc.pc(), 0x3b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01A7
        gbc.setState(0xc0af, 0x4f1a, 0xd050, 0x520c, 0x63fe, 0x69a3, 0x1, 0x0);
        gbc.writeMem(0xc0af, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4f1a);
        EXPECT(gbc.pc(), 0xc0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0af), 0xcb);
        EXPECT(gbc.readMem(0xc0b0), 0xe1);
        // CB E1 01A8
        gbc.setState(0x6f73, 0xe1f1, 0xb720, 0xb563, 0x4aec, 0x9df9, 0x0, 0x1);
        gbc.writeMem(0x6f73, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe1f1);
        EXPECT(gbc.pc(), 0x6f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01A9
        gbc.setState(0x956a, 0x8a9, 0x1d20, 0xf83e, 0x5c19, 0xf64f, 0x1, 0x1);
        gbc.writeMem(0x956a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8a9);
        EXPECT(gbc.pc(), 0x956c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956a), 0xcb);
        EXPECT(gbc.readMem(0x956b), 0xe1);
        // CB E1 01AA
        gbc.setState(0x7ee5, 0xf27e, 0xedf0, 0xfec0, 0x6521, 0x5251, 0x0, 0x0);
        gbc.writeMem(0x7ee5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0x7ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01AB
        gbc.setState(0xaf4f, 0xcc65, 0x93f0, 0xeb71, 0x3f2, 0x7d4, 0x0, 0x0);
        gbc.writeMem(0xaf4f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcc65);
        EXPECT(gbc.pc(), 0xaf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4f), 0xcb);
        EXPECT(gbc.readMem(0xaf50), 0xe1);
        // CB E1 01AC
        gbc.setState(0x3819, 0x6ad2, 0x73d0, 0x8b0, 0xe2b0, 0xdd55, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6ad2);
        EXPECT(gbc.pc(), 0x381b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01AD
        gbc.setState(0xb643, 0xc233, 0xddd0, 0x6c3f, 0xbd55, 0xdeea, 0x0, 0x0);
        gbc.writeMem(0xb643, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc233);
        EXPECT(gbc.pc(), 0xb645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb643), 0xcb);
        EXPECT(gbc.readMem(0xb644), 0xe1);
        // CB E1 01AE
        gbc.setState(0x9ef0, 0x2f5b, 0xa750, 0x871, 0xe451, 0x2c7b, 0x0, 0x0);
        gbc.writeMem(0x9ef0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2f5b);
        EXPECT(gbc.pc(), 0x9ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef0), 0xcb);
        EXPECT(gbc.readMem(0x9ef1), 0xe1);
        // CB E1 01AF
        gbc.setState(0xdb6d, 0x7c62, 0xe590, 0xb620, 0xca1e, 0x82d8, 0x0, 0x0);
        gbc.writeMem(0xdb6d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7c62);
        EXPECT(gbc.pc(), 0xdb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6d), 0xcb);
        EXPECT(gbc.readMem(0xdb6e), 0xe1);
        // CB E1 01B0
        gbc.setState(0x528, 0x6d3, 0xfb10, 0x4a, 0xa6a4, 0xcff0, 0x1, 0x1);
        gbc.writeMem(0x528, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6d3);
        EXPECT(gbc.pc(), 0x52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01B1
        gbc.setState(0xb0fa, 0x8c6b, 0xfac0, 0x244f, 0x177c, 0x5f4c, 0x0, 0x0);
        gbc.writeMem(0xb0fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8c6b);
        EXPECT(gbc.pc(), 0xb0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fa), 0xcb);
        EXPECT(gbc.readMem(0xb0fb), 0xe1);
        // CB E1 01B2
        gbc.setState(0x15c5, 0xbb95, 0x2450, 0xfda5, 0x66b7, 0x9e47, 0x1, 0x0);
        gbc.writeMem(0x15c5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbb95);
        EXPECT(gbc.pc(), 0x15c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01B4
        gbc.setState(0x991, 0x6dfd, 0xcc80, 0xcca5, 0xe738, 0xa756, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0x993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01B5
        gbc.setState(0xc72b, 0x7fde, 0x9870, 0x5583, 0x848f, 0x3525, 0x0, 0x1);
        gbc.writeMem(0xc72b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7fde);
        EXPECT(gbc.pc(), 0xc72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72b), 0xcb);
        EXPECT(gbc.readMem(0xc72c), 0xe1);
        // CB E1 01B6
        gbc.setState(0x11e4, 0xb711, 0xe3a0, 0xe0da, 0xb09b, 0xc273, 0x1, 0x0);
        gbc.writeMem(0x11e4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb711);
        EXPECT(gbc.pc(), 0x11e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01B8
        gbc.setState(0xcdaf, 0x269f, 0xa9b0, 0xb20f, 0x6e31, 0x9447, 0x1, 0x0);
        gbc.writeMem(0xcdaf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x269f);
        EXPECT(gbc.pc(), 0xcdb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdaf), 0xcb);
        EXPECT(gbc.readMem(0xcdb0), 0xe1);
        // CB E1 01B9
        gbc.setState(0xa84f, 0xb8e1, 0xbaf0, 0x98d9, 0xb99e, 0x42ea, 0x1, 0x1);
        gbc.writeMem(0xa84f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb8e1);
        EXPECT(gbc.pc(), 0xa851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84f), 0xcb);
        EXPECT(gbc.readMem(0xa850), 0xe1);
        // CB E1 01BA
        gbc.setState(0x2f29, 0xf380, 0x6830, 0x2387, 0x19d4, 0x341b, 0x1, 0x1);
        gbc.writeMem(0x2f29, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf380);
        EXPECT(gbc.pc(), 0x2f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01BB
        gbc.setState(0x70b2, 0xc33b, 0xac80, 0x7537, 0xe44e, 0x8858, 0x0, 0x1);
        gbc.writeMem(0x70b2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc33b);
        EXPECT(gbc.pc(), 0x70b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01BC
        gbc.setState(0xab63, 0xb6f, 0x44d0, 0x7187, 0xdacb, 0x403b, 0x0, 0x1);
        gbc.writeMem(0xab63, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb6f);
        EXPECT(gbc.pc(), 0xab65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab63), 0xcb);
        EXPECT(gbc.readMem(0xab64), 0xe1);
        // CB E1 01BD
        gbc.setState(0xa6d9, 0xd762, 0xe760, 0xbdb1, 0x3728, 0xbe81, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0xa6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d9), 0xcb);
        EXPECT(gbc.readMem(0xa6da), 0xe1);
        // CB E1 01BE
        gbc.setState(0xcafc, 0x8299, 0x1460, 0x49a5, 0xf5e2, 0x5f19, 0x1, 0x0);
        gbc.writeMem(0xcafc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0xcafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafc), 0xcb);
        EXPECT(gbc.readMem(0xcafd), 0xe1);
        // CB E1 01BF
        gbc.setState(0x3297, 0x36cc, 0x4f30, 0xaea8, 0x3b0c, 0x81f2, 0x0, 0x0);
        gbc.writeMem(0x3297, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x36cc);
        EXPECT(gbc.pc(), 0x3299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01C0
        gbc.setState(0x5f15, 0x40cb, 0x3ca0, 0x80d4, 0xd8ee, 0x61a3, 0x1, 0x0);
        gbc.writeMem(0x5f15, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x40cb);
        EXPECT(gbc.pc(), 0x5f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01C1
        gbc.setState(0x23b9, 0x7a8d, 0x3e80, 0xd1d2, 0xff3a, 0x8716, 0x1, 0x1);
        gbc.writeMem(0x23b9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7a8d);
        EXPECT(gbc.pc(), 0x23bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01C2
        gbc.setState(0x2c83, 0x414, 0xd970, 0x5443, 0xa25e, 0xd5a5, 0x0, 0x1);
        gbc.writeMem(0x2c83, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x414);
        EXPECT(gbc.pc(), 0x2c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01C3
        gbc.setState(0x876a, 0xb6ec, 0xc8e0, 0xe2f, 0xc30c, 0x745b, 0x1, 0x0);
        gbc.writeMem(0x876a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb6ec);
        EXPECT(gbc.pc(), 0x876c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876a), 0xcb);
        EXPECT(gbc.readMem(0x876b), 0xe1);
        // CB E1 01C4
        gbc.setState(0xa95d, 0xbd7e, 0xa720, 0x58c0, 0xc62, 0x9fc0, 0x0, 0x0);
        gbc.writeMem(0xa95d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbd7e);
        EXPECT(gbc.pc(), 0xa95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95d), 0xcb);
        EXPECT(gbc.readMem(0xa95e), 0xe1);
        // CB E1 01C5
        gbc.setState(0xb368, 0x1da4, 0xfad0, 0x38b4, 0xb73a, 0x5d7c, 0x0, 0x1);
        gbc.writeMem(0xb368, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0xb36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb368), 0xcb);
        EXPECT(gbc.readMem(0xb369), 0xe1);
        // CB E1 01C6
        gbc.setState(0x6776, 0xdccb, 0x46f0, 0x5b1d, 0xefde, 0x5504, 0x0, 0x1);
        gbc.writeMem(0x6776, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdccb);
        EXPECT(gbc.pc(), 0x6778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01C7
        gbc.setState(0xb971, 0xc295, 0xe20, 0xd3b3, 0xacc7, 0x2ce3, 0x1, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc295);
        EXPECT(gbc.pc(), 0xb973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb971), 0xcb);
        EXPECT(gbc.readMem(0xb972), 0xe1);
        // CB E1 01C8
        gbc.setState(0x9842, 0xfc61, 0xdda0, 0xa04, 0x161b, 0xf6ca, 0x1, 0x0);
        gbc.writeMem(0x9842, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0x9844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9842), 0xcb);
        EXPECT(gbc.readMem(0x9843), 0xe1);
        // CB E1 01C9
        gbc.setState(0x7b8d, 0x2ca7, 0xce10, 0x8aa0, 0xa2a8, 0x5d66, 0x0, 0x1);
        gbc.writeMem(0x7b8d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2ca7);
        EXPECT(gbc.pc(), 0x7b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01CA
        gbc.setState(0xc7a0, 0x59d5, 0x50c0, 0x343, 0x71d, 0xb6ee, 0x0, 0x0);
        gbc.writeMem(0xc7a0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x59d5);
        EXPECT(gbc.pc(), 0xc7a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a0), 0xcb);
        EXPECT(gbc.readMem(0xc7a1), 0xe1);
        // CB E1 01CB
        gbc.setState(0x59bd, 0x76f8, 0x9f40, 0x9646, 0x20f8, 0xcdba, 0x0, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01CC
        gbc.setState(0xc737, 0xb437, 0x9880, 0x1ff5, 0xd2c5, 0x8184, 0x1, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb437);
        EXPECT(gbc.pc(), 0xc739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc737), 0xcb);
        EXPECT(gbc.readMem(0xc738), 0xe1);
        // CB E1 01CD
        gbc.setState(0xaa5a, 0x2d9d, 0x2bc0, 0xfce, 0x31a3, 0x39cf, 0x0, 0x1);
        gbc.writeMem(0xaa5a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0xaa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5a), 0xcb);
        EXPECT(gbc.readMem(0xaa5b), 0xe1);
        // CB E1 01CE
        gbc.setState(0xb331, 0xb536, 0x1fd0, 0xd898, 0xaa6, 0x7197, 0x1, 0x0);
        gbc.writeMem(0xb331, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb536);
        EXPECT(gbc.pc(), 0xb333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb331), 0xcb);
        EXPECT(gbc.readMem(0xb332), 0xe1);
        // CB E1 01CF
        gbc.setState(0x2380, 0xa611, 0x3d40, 0xf26f, 0xda79, 0x3bbd, 0x0, 0x0);
        gbc.writeMem(0x2380, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa611);
        EXPECT(gbc.pc(), 0x2382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01D0
        gbc.setState(0xd235, 0xb593, 0x44a0, 0xfd33, 0xf387, 0x52b6, 0x0, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb593);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0xe1);
        // CB E1 01D1
        gbc.setState(0x4437, 0xbb44, 0x4d60, 0xf362, 0xd158, 0x70a7, 0x1, 0x1);
        gbc.writeMem(0x4437, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbb44);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01D2
        gbc.setState(0x7bf6, 0xb49e, 0x5180, 0xb8b8, 0xdb, 0x25e8, 0x1, 0x0);
        gbc.writeMem(0x7bf6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb49e);
        EXPECT(gbc.pc(), 0x7bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01D3
        gbc.setState(0x80b5, 0xd590, 0x7a50, 0xcca, 0xe93d, 0xabe1, 0x0, 0x0);
        gbc.writeMem(0x80b5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd590);
        EXPECT(gbc.pc(), 0x80b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b5), 0xcb);
        EXPECT(gbc.readMem(0x80b6), 0xe1);
        // CB E1 01D4
        gbc.setState(0x5dd2, 0x2de, 0xb110, 0x857e, 0x188a, 0x8bd5, 0x0, 0x0);
        gbc.writeMem(0x5dd2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2de);
        EXPECT(gbc.pc(), 0x5dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01D5
        gbc.setState(0x25ad, 0xb14e, 0x5f10, 0x40f, 0xbcbc, 0x126b, 0x1, 0x0);
        gbc.writeMem(0x25ad, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb14e);
        EXPECT(gbc.pc(), 0x25af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01D6
        gbc.setState(0x2b80, 0xef45, 0xc870, 0xe2cd, 0xf18f, 0x6bc6, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xef45);
        EXPECT(gbc.pc(), 0x2b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01D7
        gbc.setState(0xe9a5, 0xa2d5, 0xd030, 0x7b80, 0x6485, 0x4d7f, 0x1, 0x0);
        gbc.writeMem(0xe9a5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa2d5);
        EXPECT(gbc.pc(), 0xe9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a5), 0xcb);
        EXPECT(gbc.readMem(0xe9a6), 0xe1);
        // CB E1 01D8
        gbc.setState(0x2c86, 0x32b2, 0xec70, 0x399c, 0xfe54, 0xeed1, 0x1, 0x1);
        gbc.writeMem(0x2c86, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0x2c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01D9
        gbc.setState(0x4786, 0xcf77, 0x6df0, 0x6b48, 0x52f6, 0x2c14, 0x1, 0x0);
        gbc.writeMem(0x4786, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcf77);
        EXPECT(gbc.pc(), 0x4788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01DA
        gbc.setState(0xc193, 0x13b3, 0x50, 0xb989, 0xd137, 0x4cfe, 0x0, 0x0);
        gbc.writeMem(0xc193, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x13b3);
        EXPECT(gbc.pc(), 0xc195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc193), 0xcb);
        EXPECT(gbc.readMem(0xc194), 0xe1);
        // CB E1 01DB
        gbc.setState(0x9576, 0xcfa1, 0x3c10, 0xf6c0, 0x1f37, 0xd143, 0x1, 0x1);
        gbc.writeMem(0x9576, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcfa1);
        EXPECT(gbc.pc(), 0x9578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9576), 0xcb);
        EXPECT(gbc.readMem(0x9577), 0xe1);
        // CB E1 01DC
        gbc.setState(0x19d7, 0x7c39, 0x1b00, 0x3a4e, 0x2d8c, 0x1f96, 0x1, 0x0);
        gbc.writeMem(0x19d7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7c39);
        EXPECT(gbc.pc(), 0x19d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01DD
        gbc.setState(0x3d68, 0xc722, 0xf070, 0x8d52, 0x4b62, 0xca7a, 0x0, 0x0);
        gbc.writeMem(0x3d68, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc722);
        EXPECT(gbc.pc(), 0x3d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01DE
        gbc.setState(0x40c3, 0xbba9, 0x680, 0x7d7f, 0x87d3, 0x456e, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbba9);
        EXPECT(gbc.pc(), 0x40c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01DF
        gbc.setState(0x999b, 0xc41d, 0xb670, 0x6345, 0x388f, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0x999b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc41d);
        EXPECT(gbc.pc(), 0x999d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999b), 0xcb);
        EXPECT(gbc.readMem(0x999c), 0xe1);
        // CB E1 01E1
        gbc.setState(0xef05, 0xac01, 0x1320, 0xddde, 0x8e17, 0x83dd, 0x1, 0x1);
        gbc.writeMem(0xef05, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0xef07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef05), 0xcb);
        EXPECT(gbc.readMem(0xef06), 0xe1);
        // CB E1 01E2
        gbc.setState(0xc9e1, 0x5596, 0xb970, 0x4835, 0x94ea, 0x7b47, 0x1, 0x0);
        gbc.writeMem(0xc9e1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5596);
        EXPECT(gbc.pc(), 0xc9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e1), 0xcb);
        EXPECT(gbc.readMem(0xc9e2), 0xe1);
        // CB E1 01E3
        gbc.setState(0x5c6e, 0x85d8, 0x6010, 0xa53e, 0x2026, 0x4f08, 0x1, 0x0);
        gbc.writeMem(0x5c6e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x85d8);
        EXPECT(gbc.pc(), 0x5c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01E4
        gbc.setState(0xd680, 0x24e2, 0x9950, 0xd850, 0x9b2f, 0x9f28, 0x0, 0x0);
        gbc.writeMem(0xd680, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x24e2);
        EXPECT(gbc.pc(), 0xd682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd680), 0xcb);
        EXPECT(gbc.readMem(0xd681), 0xe1);
        // CB E1 01E5
        gbc.setState(0x83de, 0x1206, 0x8070, 0x5a96, 0xfebe, 0x6b0f, 0x0, 0x0);
        gbc.writeMem(0x83de, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1206);
        EXPECT(gbc.pc(), 0x83e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83de), 0xcb);
        EXPECT(gbc.readMem(0x83df), 0xe1);
        // CB E1 01E6
        gbc.setState(0x11df, 0xbdd8, 0x7270, 0xe30b, 0x37c3, 0x6903, 0x1, 0x1);
        gbc.writeMem(0x11df, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbdd8);
        EXPECT(gbc.pc(), 0x11e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01E7
        gbc.setState(0xebad, 0xd41b, 0xa750, 0xd2ed, 0x1169, 0xaefc, 0x0, 0x0);
        gbc.writeMem(0xebad, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd41b);
        EXPECT(gbc.pc(), 0xebaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebad), 0xcb);
        EXPECT(gbc.readMem(0xebae), 0xe1);
        // CB E1 01E8
        gbc.setState(0xd4fe, 0x99d0, 0x6c60, 0xfc8d, 0x7d51, 0x6331, 0x1, 0x1);
        gbc.writeMem(0xd4fe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x99d0);
        EXPECT(gbc.pc(), 0xd500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fe), 0xcb);
        EXPECT(gbc.readMem(0xd4ff), 0xe1);
        // CB E1 01E9
        gbc.setState(0x83fc, 0xd44d, 0x9630, 0x470e, 0xb78f, 0x3a8, 0x1, 0x1);
        gbc.writeMem(0x83fc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd44d);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fc), 0xcb);
        EXPECT(gbc.readMem(0x83fd), 0xe1);
        // CB E1 01EA
        gbc.setState(0x84b, 0x1737, 0xda00, 0xe1ef, 0x4b8e, 0xcd6c, 0x1, 0x0);
        gbc.writeMem(0x84b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1737);
        EXPECT(gbc.pc(), 0x84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01EB
        gbc.setState(0x9911, 0x52d1, 0x6060, 0x3dc8, 0x8e34, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x9911, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x52d1);
        EXPECT(gbc.pc(), 0x9913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9911), 0xcb);
        EXPECT(gbc.readMem(0x9912), 0xe1);
        // CB E1 01EC
        gbc.setState(0x5821, 0x537, 0x3e50, 0x1553, 0x88c1, 0xd4cb, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x537);
        EXPECT(gbc.pc(), 0x5823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01ED
        gbc.setState(0x35da, 0xf4c9, 0xef50, 0x3c73, 0xc372, 0x5a8b, 0x0, 0x0);
        gbc.writeMem(0x35da, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf4c9);
        EXPECT(gbc.pc(), 0x35dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01EF
        gbc.setState(0x6612, 0xe5e6, 0x41e0, 0xfe88, 0xd96d, 0x72ab, 0x1, 0x1);
        gbc.writeMem(0x6612, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe5e6);
        EXPECT(gbc.pc(), 0x6614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01F0
        gbc.setState(0x3e54, 0xf59d, 0xe2f0, 0x96ac, 0xde5, 0x35f7, 0x1, 0x1);
        gbc.writeMem(0x3e54, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf59d);
        EXPECT(gbc.pc(), 0x3e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 01F1
        gbc.setState(0xa3f1, 0x8907, 0xb8e0, 0x235b, 0xb7bf, 0x4b87, 0x0, 0x1);
        gbc.writeMem(0xa3f1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8907);
        EXPECT(gbc.pc(), 0xa3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f1), 0xcb);
        EXPECT(gbc.readMem(0xa3f2), 0xe1);
        // CB E1 01F2
        gbc.setState(0x4158, 0x33a8, 0xf3c0, 0xfc50, 0xb1b9, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0x4158, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x33a8);
        EXPECT(gbc.pc(), 0x415a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01F3
        gbc.setState(0x9a62, 0xb1b2, 0x7ff0, 0xa2c8, 0x6fee, 0xf72e, 0x0, 0x1);
        gbc.writeMem(0x9a62, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb1b2);
        EXPECT(gbc.pc(), 0x9a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a62), 0xcb);
        EXPECT(gbc.readMem(0x9a63), 0xe1);
        // CB E1 01F4
        gbc.setState(0x857c, 0x24bf, 0x6450, 0xab7, 0x89e5, 0x8e6a, 0x0, 0x1);
        gbc.writeMem(0x857c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x24bf);
        EXPECT(gbc.pc(), 0x857e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857c), 0xcb);
        EXPECT(gbc.readMem(0x857d), 0xe1);
        // CB E1 01F5
        gbc.setState(0x2341, 0x9e41, 0x1e60, 0x66a, 0x29b5, 0x1387, 0x1, 0x0);
        gbc.writeMem(0x2341, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9e41);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01F6
        gbc.setState(0xe641, 0xa2fb, 0x9e00, 0xcd4d, 0x40f3, 0xbb16, 0x1, 0x1);
        gbc.writeMem(0xe641, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa2fb);
        EXPECT(gbc.pc(), 0xe643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe641), 0xcb);
        EXPECT(gbc.readMem(0xe642), 0xe1);
        // CB E1 01F7
        gbc.setState(0xc3e4, 0x493a, 0x47e0, 0xbbd0, 0xa3a8, 0x5fb2, 0x0, 0x1);
        gbc.writeMem(0xc3e4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x493a);
        EXPECT(gbc.pc(), 0xc3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e4), 0xcb);
        EXPECT(gbc.readMem(0xc3e5), 0xe1);
        // CB E1 01F8
        gbc.setState(0xa8c0, 0x4259, 0x9400, 0x5247, 0xbf52, 0x1e49, 0x0, 0x0);
        gbc.writeMem(0xa8c0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4259);
        EXPECT(gbc.pc(), 0xa8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c0), 0xcb);
        EXPECT(gbc.readMem(0xa8c1), 0xe1);
        // CB E1 01F9
        gbc.setState(0x2a4d, 0x2d5d, 0xaae0, 0x8db5, 0x9242, 0xfdb7, 0x0, 0x1);
        gbc.writeMem(0x2a4d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d5d);
        EXPECT(gbc.pc(), 0x2a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01FA
        gbc.setState(0xc8b1, 0x58d5, 0x6e10, 0xd1e2, 0x27ce, 0x786c, 0x1, 0x0);
        gbc.writeMem(0xc8b1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x58d5);
        EXPECT(gbc.pc(), 0xc8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b1), 0xcb);
        EXPECT(gbc.readMem(0xc8b2), 0xe1);
        // CB E1 01FB
        gbc.setState(0xee4a, 0x87fa, 0xbc00, 0xa366, 0x8fee, 0x8148, 0x0, 0x0);
        gbc.writeMem(0xee4a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x87fa);
        EXPECT(gbc.pc(), 0xee4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0xcb);
        EXPECT(gbc.readMem(0xee4b), 0xe1);
        // CB E1 01FC
        gbc.setState(0xa704, 0x102c, 0x88f0, 0xc947, 0xf16c, 0x1c77, 0x0, 0x1);
        gbc.writeMem(0xa704, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0xa706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa704), 0xcb);
        EXPECT(gbc.readMem(0xa705), 0xe1);
        // CB E1 01FD
        gbc.setState(0x70da, 0x6e81, 0x2c40, 0x53ff, 0xc3c9, 0xd048, 0x1, 0x0);
        gbc.writeMem(0x70da, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6e81);
        EXPECT(gbc.pc(), 0x70dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 01FE
        gbc.setState(0xa29b, 0x87c4, 0x8ed0, 0xea23, 0xb900, 0xf44f, 0x0, 0x1);
        gbc.writeMem(0xa29b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x87c4);
        EXPECT(gbc.pc(), 0xa29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29b), 0xcb);
        EXPECT(gbc.readMem(0xa29c), 0xe1);
        // CB E1 01FF
        gbc.setState(0xa235, 0xb0e0, 0x6820, 0x2340, 0x77eb, 0x2020, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb0e0);
        EXPECT(gbc.pc(), 0xa237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa235), 0xcb);
        EXPECT(gbc.readMem(0xa236), 0xe1);
        // CB E1 0200
        gbc.setState(0xadb6, 0x38a3, 0xfa00, 0xf51a, 0xc9b8, 0xf625, 0x0, 0x0);
        gbc.writeMem(0xadb6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0xadb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb6), 0xcb);
        EXPECT(gbc.readMem(0xadb7), 0xe1);
        // CB E1 0201
        gbc.setState(0x378f, 0x62e5, 0x540, 0x3720, 0x7400, 0x4e2b, 0x0, 0x0);
        gbc.writeMem(0x378f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x62e5);
        EXPECT(gbc.pc(), 0x3791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0202
        gbc.setState(0x1d94, 0xa2b3, 0xbd30, 0x5eb0, 0xa95b, 0xa235, 0x1, 0x1);
        gbc.writeMem(0x1d94, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa2b3);
        EXPECT(gbc.pc(), 0x1d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0203
        gbc.setState(0x2aea, 0x502d, 0x86d0, 0x20f5, 0x826e, 0x638e, 0x0, 0x0);
        gbc.writeMem(0x2aea, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x502d);
        EXPECT(gbc.pc(), 0x2aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0204
        gbc.setState(0xd154, 0x6db9, 0x2790, 0x7ad5, 0xa2b8, 0x1da7, 0x1, 0x1);
        gbc.writeMem(0xd154, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6db9);
        EXPECT(gbc.pc(), 0xd156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd154), 0xcb);
        EXPECT(gbc.readMem(0xd155), 0xe1);
        // CB E1 0205
        gbc.setState(0x6d1b, 0xdf05, 0x8a10, 0x5cf6, 0xe7d8, 0xab92, 0x1, 0x1);
        gbc.writeMem(0x6d1b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdf05);
        EXPECT(gbc.pc(), 0x6d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0206
        gbc.setState(0xedf9, 0x8b0a, 0xc040, 0x8b69, 0x2169, 0xcc1b, 0x0, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8b0a);
        EXPECT(gbc.pc(), 0xedfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf9), 0xcb);
        EXPECT(gbc.readMem(0xedfa), 0xe1);
        // CB E1 0207
        gbc.setState(0x95f5, 0xe0c, 0xb500, 0xffb2, 0x9a36, 0xc34a, 0x1, 0x0);
        gbc.writeMem(0x95f5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe0c);
        EXPECT(gbc.pc(), 0x95f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f5), 0xcb);
        EXPECT(gbc.readMem(0x95f6), 0xe1);
        // CB E1 0209
        gbc.setState(0xa782, 0x9a29, 0x2f10, 0xab55, 0xf390, 0x726b, 0x1, 0x1);
        gbc.writeMem(0xa782, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0xa784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa782), 0xcb);
        EXPECT(gbc.readMem(0xa783), 0xe1);
        // CB E1 020A
        gbc.setState(0xecee, 0x69ae, 0xade0, 0xdec8, 0x9fd7, 0x6bfb, 0x1, 0x1);
        gbc.writeMem(0xecee, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x69ae);
        EXPECT(gbc.pc(), 0xecf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecee), 0xcb);
        EXPECT(gbc.readMem(0xecef), 0xe1);
        // CB E1 020B
        gbc.setState(0xfa8, 0x1e63, 0xbbb0, 0x582c, 0x4481, 0x667d, 0x0, 0x1);
        gbc.writeMem(0xfa8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1e63);
        EXPECT(gbc.pc(), 0xfaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 020C
        gbc.setState(0x3bad, 0xb123, 0x8690, 0xc094, 0xed4d, 0xbbe9, 0x0, 0x0);
        gbc.writeMem(0x3bad, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb123);
        EXPECT(gbc.pc(), 0x3baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 020D
        gbc.setState(0xb3fb, 0x2448, 0xf10, 0x4866, 0x7722, 0xc353, 0x1, 0x0);
        gbc.writeMem(0xb3fb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2448);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fb), 0xcb);
        EXPECT(gbc.readMem(0xb3fc), 0xe1);
        // CB E1 020F
        gbc.setState(0x60a, 0x7a6e, 0xab60, 0x309d, 0xf8c, 0x4154, 0x1, 0x1);
        gbc.writeMem(0x60a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7a6e);
        EXPECT(gbc.pc(), 0x60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0210
        gbc.setState(0x8a1, 0x1ee6, 0xcae0, 0xa6ed, 0xdaa, 0x5f7b, 0x0, 0x1);
        gbc.writeMem(0x8a1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1ee6);
        EXPECT(gbc.pc(), 0x8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0211
        gbc.setState(0xd10e, 0x9f2b, 0xd460, 0xe08f, 0xce06, 0xfadd, 0x1, 0x1);
        gbc.writeMem(0xd10e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9f2b);
        EXPECT(gbc.pc(), 0xd110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10e), 0xcb);
        EXPECT(gbc.readMem(0xd10f), 0xe1);
        // CB E1 0214
        gbc.setState(0x7eec, 0x8a06, 0x76a0, 0x10c2, 0x2202, 0x433d, 0x1, 0x1);
        gbc.writeMem(0x7eec, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8a06);
        EXPECT(gbc.pc(), 0x7eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0215
        gbc.setState(0x4b2f, 0x8e34, 0xc4e0, 0xd27b, 0xb762, 0x9f33, 0x0, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8e34);
        EXPECT(gbc.pc(), 0x4b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0216
        gbc.setState(0x5f58, 0x911b, 0x7b20, 0x2ce0, 0x92f, 0x21a9, 0x1, 0x0);
        gbc.writeMem(0x5f58, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x911b);
        EXPECT(gbc.pc(), 0x5f5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0217
        gbc.setState(0xbec, 0x72c7, 0xbc70, 0x594, 0x366c, 0xc0fb, 0x0, 0x1);
        gbc.writeMem(0xbec, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x72c7);
        EXPECT(gbc.pc(), 0xbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0218
        gbc.setState(0x680f, 0xf97d, 0xef50, 0xac76, 0x8ca8, 0x5d63, 0x0, 0x1);
        gbc.writeMem(0x680f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf97d);
        EXPECT(gbc.pc(), 0x6811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0219
        gbc.setState(0x945f, 0x1151, 0x6500, 0xdc31, 0x375a, 0x97e8, 0x1, 0x1);
        gbc.writeMem(0x945f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1151);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945f), 0xcb);
        EXPECT(gbc.readMem(0x9460), 0xe1);
        // CB E1 021A
        gbc.setState(0x8f9c, 0xb8b4, 0x9310, 0x7fd5, 0x7b6f, 0x8c72, 0x1, 0x0);
        gbc.writeMem(0x8f9c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb8b4);
        EXPECT(gbc.pc(), 0x8f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9c), 0xcb);
        EXPECT(gbc.readMem(0x8f9d), 0xe1);
        // CB E1 021B
        gbc.setState(0xe1f0, 0xd479, 0x26a0, 0x4568, 0x673d, 0xce29, 0x1, 0x1);
        gbc.writeMem(0xe1f0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd479);
        EXPECT(gbc.pc(), 0xe1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f0), 0xcb);
        EXPECT(gbc.readMem(0xe1f1), 0xe1);
        // CB E1 021C
        gbc.setState(0xceda, 0xa5ee, 0x2e0, 0xde26, 0x1543, 0xf046, 0x0, 0x0);
        gbc.writeMem(0xceda, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa5ee);
        EXPECT(gbc.pc(), 0xcedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceda), 0xcb);
        EXPECT(gbc.readMem(0xcedb), 0xe1);
        // CB E1 021D
        gbc.setState(0xc3dc, 0xa0d1, 0xb790, 0x5adb, 0xbfd0, 0xbc84, 0x1, 0x0);
        gbc.writeMem(0xc3dc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa0d1);
        EXPECT(gbc.pc(), 0xc3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3dc), 0xcb);
        EXPECT(gbc.readMem(0xc3dd), 0xe1);
        // CB E1 021E
        gbc.setState(0x4a38, 0x77cf, 0x1e30, 0xb223, 0x5eed, 0x6b9f, 0x1, 0x1);
        gbc.writeMem(0x4a38, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x77cf);
        EXPECT(gbc.pc(), 0x4a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 021F
        gbc.setState(0xcd1f, 0xa403, 0x12c0, 0xb729, 0x8b78, 0x1a01, 0x0, 0x1);
        gbc.writeMem(0xcd1f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa403);
        EXPECT(gbc.pc(), 0xcd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1f), 0xcb);
        EXPECT(gbc.readMem(0xcd20), 0xe1);
        // CB E1 0220
        gbc.setState(0x63ea, 0x1139, 0x4cd0, 0xaf69, 0xc3ce, 0x1bc9, 0x1, 0x0);
        gbc.writeMem(0x63ea, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1139);
        EXPECT(gbc.pc(), 0x63ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0221
        gbc.setState(0x4ffe, 0x92f4, 0xa640, 0x8212, 0xab32, 0x693e, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x92f4);
        EXPECT(gbc.pc(), 0x5000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0222
        gbc.setState(0xe3b3, 0xa1c9, 0xdf40, 0x4535, 0xa443, 0x8f0e, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa1c9);
        EXPECT(gbc.pc(), 0xe3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b3), 0xcb);
        EXPECT(gbc.readMem(0xe3b4), 0xe1);
        // CB E1 0223
        gbc.setState(0x64df, 0x1fc6, 0x9560, 0xea0e, 0x57d1, 0xd9de, 0x0, 0x0);
        gbc.writeMem(0x64df, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1fc6);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0224
        gbc.setState(0x7fd3, 0x3348, 0x4950, 0xf936, 0xfea, 0xd9c6, 0x0, 0x0);
        gbc.writeMem(0x7fd3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3348);
        EXPECT(gbc.pc(), 0x7fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0225
        gbc.setState(0x6968, 0x3a85, 0x2070, 0xf409, 0xcc0d, 0x8177, 0x1, 0x1);
        gbc.writeMem(0x6968, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3a85);
        EXPECT(gbc.pc(), 0x696a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0226
        gbc.setState(0x7f34, 0x335d, 0x83e0, 0x3348, 0x8aeb, 0xb952, 0x1, 0x0);
        gbc.writeMem(0x7f34, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x335d);
        EXPECT(gbc.pc(), 0x7f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0227
        gbc.setState(0xaa96, 0x3bd2, 0xcf70, 0x6695, 0x90dd, 0xc244, 0x0, 0x1);
        gbc.writeMem(0xaa96, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3bd2);
        EXPECT(gbc.pc(), 0xaa98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa96), 0xcb);
        EXPECT(gbc.readMem(0xaa97), 0xe1);
        // CB E1 0228
        gbc.setState(0xd18c, 0x615f, 0x6fd0, 0xec91, 0xcf28, 0xc3a8, 0x0, 0x0);
        gbc.writeMem(0xd18c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x615f);
        EXPECT(gbc.pc(), 0xd18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd18c), 0xcb);
        EXPECT(gbc.readMem(0xd18d), 0xe1);
        // CB E1 0229
        gbc.setState(0xaade, 0xb3e7, 0x750, 0xf764, 0xa178, 0x8e83, 0x0, 0x1);
        gbc.writeMem(0xaade, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb3e7);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaade), 0xcb);
        EXPECT(gbc.readMem(0xaadf), 0xe1);
        // CB E1 022A
        gbc.setState(0x4d07, 0xcb72, 0xd510, 0xa42, 0xb670, 0x6284, 0x1, 0x1);
        gbc.writeMem(0x4d07, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x4d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 022B
        gbc.setState(0x44b8, 0x8bed, 0xfbf0, 0x353b, 0x99dc, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0x44ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 022C
        gbc.setState(0x1fe, 0x719c, 0xce10, 0x29ba, 0x4dc, 0x7465, 0x1, 0x1);
        gbc.writeMem(0x1fe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x719c);
        EXPECT(gbc.pc(), 0x200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 022E
        gbc.setState(0x7c8d, 0xcc20, 0x8bf0, 0x45a4, 0xf558, 0x5d69, 0x1, 0x0);
        gbc.writeMem(0x7c8d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcc20);
        EXPECT(gbc.pc(), 0x7c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 022F
        gbc.setState(0xb0fc, 0x839c, 0x8b20, 0x4dfb, 0x2303, 0xf37d, 0x1, 0x1);
        gbc.writeMem(0xb0fc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x839c);
        EXPECT(gbc.pc(), 0xb0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fc), 0xcb);
        EXPECT(gbc.readMem(0xb0fd), 0xe1);
        // CB E1 0230
        gbc.setState(0xe879, 0x71e7, 0xe430, 0x2738, 0x3284, 0x89e3, 0x1, 0x1);
        gbc.writeMem(0xe879, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x71e7);
        EXPECT(gbc.pc(), 0xe87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe879), 0xcb);
        EXPECT(gbc.readMem(0xe87a), 0xe1);
        // CB E1 0231
        gbc.setState(0x8910, 0x8d01, 0x37c0, 0x885a, 0xb706, 0x85e7, 0x1, 0x0);
        gbc.writeMem(0x8910, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8d01);
        EXPECT(gbc.pc(), 0x8912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8910), 0xcb);
        EXPECT(gbc.readMem(0x8911), 0xe1);
        // CB E1 0232
        gbc.setState(0xebd7, 0x6dc2, 0xa550, 0x3a12, 0xc526, 0x4213, 0x1, 0x0);
        gbc.writeMem(0xebd7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6dc2);
        EXPECT(gbc.pc(), 0xebd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd7), 0xcb);
        EXPECT(gbc.readMem(0xebd8), 0xe1);
        // CB E1 0234
        gbc.setState(0x42b6, 0x4d45, 0xf180, 0x5abc, 0x7d95, 0x5769, 0x0, 0x0);
        gbc.writeMem(0x42b6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4d45);
        EXPECT(gbc.pc(), 0x42b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0236
        gbc.setState(0x8ef9, 0x9a7, 0x69b0, 0x48e0, 0x83db, 0x34de, 0x0, 0x0);
        gbc.writeMem(0x8ef9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9a7);
        EXPECT(gbc.pc(), 0x8efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef9), 0xcb);
        EXPECT(gbc.readMem(0x8efa), 0xe1);
        // CB E1 0237
        gbc.setState(0xa3ef, 0x6a7a, 0xf160, 0x265b, 0x99b7, 0xe7b7, 0x0, 0x0);
        gbc.writeMem(0xa3ef, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0xa3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ef), 0xcb);
        EXPECT(gbc.readMem(0xa3f0), 0xe1);
        // CB E1 0238
        gbc.setState(0x5869, 0xddeb, 0x32b0, 0x2ddd, 0x8ee7, 0x504d, 0x0, 0x0);
        gbc.writeMem(0x5869, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xddeb);
        EXPECT(gbc.pc(), 0x586b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0239
        gbc.setState(0xe894, 0xb8f9, 0x1ad0, 0x2026, 0xa4ac, 0x7a02, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb8f9);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe894), 0xcb);
        EXPECT(gbc.readMem(0xe895), 0xe1);
        // CB E1 023A
        gbc.setState(0xefd5, 0xd344, 0x5690, 0x4740, 0x81bc, 0x6b39, 0x0, 0x0);
        gbc.writeMem(0xefd5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd344);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd5), 0xcb);
        EXPECT(gbc.readMem(0xefd6), 0xe1);
        // CB E1 023B
        gbc.setState(0x68e, 0x7812, 0x6030, 0x16a1, 0xe010, 0xeb81, 0x0, 0x1);
        gbc.writeMem(0x68e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7812);
        EXPECT(gbc.pc(), 0x690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 023C
        gbc.setState(0x1b98, 0x5732, 0xc5c0, 0x3507, 0x7039, 0x3a91, 0x1, 0x0);
        gbc.writeMem(0x1b98, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0x1b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 023D
        gbc.setState(0x83dd, 0x5086, 0x7be0, 0xe297, 0xd478, 0x4062, 0x1, 0x0);
        gbc.writeMem(0x83dd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5086);
        EXPECT(gbc.pc(), 0x83df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83dd), 0xcb);
        EXPECT(gbc.readMem(0x83de), 0xe1);
        // CB E1 023E
        gbc.setState(0x5497, 0xba21, 0xfc0, 0xd165, 0xeb79, 0x8279, 0x1, 0x1);
        gbc.writeMem(0x5497, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xba21);
        EXPECT(gbc.pc(), 0x5499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 023F
        gbc.setState(0xe2e7, 0xbfd0, 0x9870, 0xfb0f, 0x6ffd, 0xc365, 0x0, 0x0);
        gbc.writeMem(0xe2e7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbfd0);
        EXPECT(gbc.pc(), 0xe2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e7), 0xcb);
        EXPECT(gbc.readMem(0xe2e8), 0xe1);
        // CB E1 0241
        gbc.setState(0xbbd2, 0xac08, 0x9070, 0x89c3, 0xee58, 0xd418, 0x0, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xac08);
        EXPECT(gbc.pc(), 0xbbd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd2), 0xcb);
        EXPECT(gbc.readMem(0xbbd3), 0xe1);
        // CB E1 0242
        gbc.setState(0x81e6, 0xe9e8, 0x7f30, 0x968, 0xf801, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x81e6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x81e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e6), 0xcb);
        EXPECT(gbc.readMem(0x81e7), 0xe1);
        // CB E1 0243
        gbc.setState(0x6f1d, 0xd5e4, 0x64f0, 0x1133, 0x705b, 0x7f2, 0x0, 0x0);
        gbc.writeMem(0x6f1d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd5e4);
        EXPECT(gbc.pc(), 0x6f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0244
        gbc.setState(0xa3c, 0x9230, 0xa7d0, 0x1b00, 0xea2b, 0x31bd, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9230);
        EXPECT(gbc.pc(), 0xa3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0245
        gbc.setState(0x305e, 0x5cf9, 0x8750, 0x624b, 0xffd5, 0x662d, 0x1, 0x1);
        gbc.writeMem(0x305e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5cf9);
        EXPECT(gbc.pc(), 0x3060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0246
        gbc.setState(0x9849, 0x466a, 0xdf50, 0x6c1b, 0x5a7a, 0xf542, 0x0, 0x1);
        gbc.writeMem(0x9849, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x466a);
        EXPECT(gbc.pc(), 0x984b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9849), 0xcb);
        EXPECT(gbc.readMem(0x984a), 0xe1);
        // CB E1 0247
        gbc.setState(0x26ae, 0x11cf, 0x98a0, 0xcc68, 0xd8ff, 0xb1d5, 0x0, 0x1);
        gbc.writeMem(0x26ae, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x11cf);
        EXPECT(gbc.pc(), 0x26b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0248
        gbc.setState(0xd27, 0xb10d, 0x1590, 0x9f5b, 0xea70, 0x38f4, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0xd29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0249
        gbc.setState(0x997e, 0x5246, 0x3b0, 0xb2df, 0x1bf8, 0xd252, 0x1, 0x0);
        gbc.writeMem(0x997e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5246);
        EXPECT(gbc.pc(), 0x9980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997e), 0xcb);
        EXPECT(gbc.readMem(0x997f), 0xe1);
        // CB E1 024A
        gbc.setState(0x2940, 0x3e18, 0x8b60, 0x32f2, 0x5ed3, 0xa40f, 0x0, 0x1);
        gbc.writeMem(0x2940, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 024B
        gbc.setState(0x1046, 0x222d, 0xfc80, 0xc394, 0x1513, 0xa348, 0x1, 0x0);
        gbc.writeMem(0x1046, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x222d);
        EXPECT(gbc.pc(), 0x1048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 024C
        gbc.setState(0x4464, 0xdd4c, 0xa3c0, 0xbd9c, 0x444b, 0xfb78, 0x0, 0x1);
        gbc.writeMem(0x4464, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 024D
        gbc.setState(0xcf05, 0x38a, 0xc4d0, 0xbe8f, 0xfac2, 0x5749, 0x0, 0x1);
        gbc.writeMem(0xcf05, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x38a);
        EXPECT(gbc.pc(), 0xcf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf05), 0xcb);
        EXPECT(gbc.readMem(0xcf06), 0xe1);
        // CB E1 024E
        gbc.setState(0x8a3, 0x1fac, 0x6dc0, 0x73aa, 0xbc03, 0x3ad5, 0x0, 0x1);
        gbc.writeMem(0x8a3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1fac);
        EXPECT(gbc.pc(), 0x8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 024F
        gbc.setState(0x8fe2, 0x8b7c, 0x7230, 0x98f4, 0x8163, 0xa54f, 0x1, 0x1);
        gbc.writeMem(0x8fe2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8b7c);
        EXPECT(gbc.pc(), 0x8fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe2), 0xcb);
        EXPECT(gbc.readMem(0x8fe3), 0xe1);
        // CB E1 0250
        gbc.setState(0x1a9a, 0x14eb, 0xd4e0, 0x93a5, 0xbf98, 0x8645, 0x0, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x14eb);
        EXPECT(gbc.pc(), 0x1a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0251
        gbc.setState(0x71fd, 0x994f, 0xbdc0, 0x30f5, 0x732c, 0xcf2b, 0x1, 0x0);
        gbc.writeMem(0x71fd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x994f);
        EXPECT(gbc.pc(), 0x71ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0252
        gbc.setState(0x6249, 0x6918, 0xcf10, 0x2f70, 0x5b48, 0x6849, 0x1, 0x0);
        gbc.writeMem(0x6249, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6918);
        EXPECT(gbc.pc(), 0x624b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0253
        gbc.setState(0x4e72, 0x746f, 0xd470, 0x50ad, 0xb6af, 0x98b8, 0x0, 0x0);
        gbc.writeMem(0x4e72, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x746f);
        EXPECT(gbc.pc(), 0x4e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0254
        gbc.setState(0xeebf, 0x76ae, 0x5590, 0x90d9, 0xfce7, 0x9b3f, 0x1, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x76ae);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebf), 0xcb);
        EXPECT(gbc.readMem(0xeec0), 0xe1);
        // CB E1 0255
        gbc.setState(0x881c, 0x8932, 0x5fe0, 0xd81b, 0x55c7, 0x3ca4, 0x1, 0x0);
        gbc.writeMem(0x881c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8932);
        EXPECT(gbc.pc(), 0x881e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881c), 0xcb);
        EXPECT(gbc.readMem(0x881d), 0xe1);
        // CB E1 0256
        gbc.setState(0xe782, 0x8165, 0xcde0, 0x8ce3, 0x2d53, 0xbcae, 0x0, 0x1);
        gbc.writeMem(0xe782, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8165);
        EXPECT(gbc.pc(), 0xe784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe782), 0xcb);
        EXPECT(gbc.readMem(0xe783), 0xe1);
        // CB E1 0257
        gbc.setState(0xb6cc, 0x4b06, 0x18b0, 0x8677, 0x66b1, 0xb797, 0x0, 0x1);
        gbc.writeMem(0xb6cc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0xb6ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6cc), 0xcb);
        EXPECT(gbc.readMem(0xb6cd), 0xe1);
        // CB E1 0258
        gbc.setState(0xc4b6, 0x83d1, 0x70f0, 0x34b6, 0x2bc4, 0x5cd3, 0x1, 0x1);
        gbc.writeMem(0xc4b6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x83d1);
        EXPECT(gbc.pc(), 0xc4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b6), 0xcb);
        EXPECT(gbc.readMem(0xc4b7), 0xe1);
        // CB E1 0259
        gbc.setState(0x5587, 0x6bf1, 0x35e0, 0xd9fd, 0x154f, 0xb939, 0x0, 0x1);
        gbc.writeMem(0x5587, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6bf1);
        EXPECT(gbc.pc(), 0x5589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 025A
        gbc.setState(0xb40e, 0x5454, 0xcb50, 0xac7e, 0x2052, 0xf259, 0x1, 0x1);
        gbc.writeMem(0xb40e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5454);
        EXPECT(gbc.pc(), 0xb410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40e), 0xcb);
        EXPECT(gbc.readMem(0xb40f), 0xe1);
        // CB E1 025B
        gbc.setState(0x1ecc, 0x7664, 0x1b0, 0xe748, 0x5b2a, 0x8bbd, 0x1, 0x1);
        gbc.writeMem(0x1ecc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7664);
        EXPECT(gbc.pc(), 0x1ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 025C
        gbc.setState(0xb10, 0x4654, 0x51e0, 0x762f, 0x1211, 0xf40b, 0x1, 0x1);
        gbc.writeMem(0xb10, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4654);
        EXPECT(gbc.pc(), 0xb12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 025D
        gbc.setState(0x524a, 0xcd8b, 0x14f0, 0xecf5, 0x5e1b, 0xef97, 0x0, 0x0);
        gbc.writeMem(0x524a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcd8b);
        EXPECT(gbc.pc(), 0x524c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 025E
        gbc.setState(0x5079, 0xfca2, 0x6120, 0x67a, 0x9ab8, 0x5b8b, 0x1, 0x1);
        gbc.writeMem(0x5079, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfca2);
        EXPECT(gbc.pc(), 0x507b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 025F
        gbc.setState(0xe9b1, 0xe736, 0x9c90, 0x635b, 0x1c3a, 0xd3a1, 0x0, 0x1);
        gbc.writeMem(0xe9b1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe736);
        EXPECT(gbc.pc(), 0xe9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b1), 0xcb);
        EXPECT(gbc.readMem(0xe9b2), 0xe1);
        // CB E1 0260
        gbc.setState(0x7d3e, 0xfcf9, 0x56f0, 0xe6cb, 0x54ef, 0x4a59, 0x1, 0x0);
        gbc.writeMem(0x7d3e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfcf9);
        EXPECT(gbc.pc(), 0x7d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0261
        gbc.setState(0x1e19, 0x1645, 0x3fa0, 0x4eae, 0x3f95, 0x1bcc, 0x0, 0x1);
        gbc.writeMem(0x1e19, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1645);
        EXPECT(gbc.pc(), 0x1e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0263
        gbc.setState(0xe337, 0x78a5, 0x8e00, 0xc05b, 0x150a, 0xc0e7, 0x1, 0x1);
        gbc.writeMem(0xe337, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0xe339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe337), 0xcb);
        EXPECT(gbc.readMem(0xe338), 0xe1);
        // CB E1 0264
        gbc.setState(0xc5f2, 0xc2ef, 0x8f0, 0xb1aa, 0xe7f4, 0xba32, 0x1, 0x1);
        gbc.writeMem(0xc5f2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc2ef);
        EXPECT(gbc.pc(), 0xc5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f2), 0xcb);
        EXPECT(gbc.readMem(0xc5f3), 0xe1);
        // CB E1 0265
        gbc.setState(0x813c, 0xe08a, 0x1790, 0xf962, 0xa265, 0xc2ee, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x813e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813c), 0xcb);
        EXPECT(gbc.readMem(0x813d), 0xe1);
        // CB E1 0266
        gbc.setState(0xee55, 0xc244, 0x6480, 0x9bf7, 0x3482, 0x3d65, 0x1, 0x0);
        gbc.writeMem(0xee55, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0xee57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee55), 0xcb);
        EXPECT(gbc.readMem(0xee56), 0xe1);
        // CB E1 0267
        gbc.setState(0xb631, 0xa5ba, 0xff40, 0xa6a3, 0xe1b2, 0xb051, 0x1, 0x0);
        gbc.writeMem(0xb631, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa5ba);
        EXPECT(gbc.pc(), 0xb633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb631), 0xcb);
        EXPECT(gbc.readMem(0xb632), 0xe1);
        // CB E1 0268
        gbc.setState(0xe4e3, 0x9cdc, 0xa950, 0xc6d8, 0xff78, 0xbfc1, 0x1, 0x0);
        gbc.writeMem(0xe4e3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9cdc);
        EXPECT(gbc.pc(), 0xe4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e3), 0xcb);
        EXPECT(gbc.readMem(0xe4e4), 0xe1);
        // CB E1 0269
        gbc.setState(0x40a1, 0x62a2, 0xbdb0, 0x3921, 0x5c25, 0xf8f4, 0x1, 0x0);
        gbc.writeMem(0x40a1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x40a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 026A
        gbc.setState(0x683c, 0x4d9e, 0xae90, 0x1c02, 0x46c3, 0x8b18, 0x0, 0x1);
        gbc.writeMem(0x683c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4d9e);
        EXPECT(gbc.pc(), 0x683e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 026B
        gbc.setState(0x52cd, 0xc998, 0x80b0, 0x64, 0xfa07, 0xb93c, 0x0, 0x0);
        gbc.writeMem(0x52cd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc998);
        EXPECT(gbc.pc(), 0x52cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 026C
        gbc.setState(0x15ac, 0xef6d, 0xc950, 0xe0df, 0xa01d, 0x3be7, 0x0, 0x0);
        gbc.writeMem(0x15ac, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xef6d);
        EXPECT(gbc.pc(), 0x15ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 026D
        gbc.setState(0x91ba, 0x7978, 0xd5d0, 0x95e6, 0xca9d, 0xd200, 0x1, 0x1);
        gbc.writeMem(0x91ba, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7978);
        EXPECT(gbc.pc(), 0x91bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ba), 0xcb);
        EXPECT(gbc.readMem(0x91bb), 0xe1);
        // CB E1 026E
        gbc.setState(0x6dab, 0xa42c, 0x7640, 0x58b4, 0x55c9, 0x1087, 0x0, 0x0);
        gbc.writeMem(0x6dab, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa42c);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 026F
        gbc.setState(0x5007, 0x66bb, 0x9260, 0x328d, 0x62a4, 0x2df3, 0x0, 0x1);
        gbc.writeMem(0x5007, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x66bb);
        EXPECT(gbc.pc(), 0x5009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0270
        gbc.setState(0x9372, 0x3ca1, 0x6710, 0x415a, 0x4eb3, 0xa691, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3ca1);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0xcb);
        EXPECT(gbc.readMem(0x9373), 0xe1);
        // CB E1 0271
        gbc.setState(0x5c8f, 0xf511, 0x4c0, 0x7f66, 0xf5a1, 0xaf5a, 0x1, 0x0);
        gbc.writeMem(0x5c8f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf511);
        EXPECT(gbc.pc(), 0x5c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0272
        gbc.setState(0x15c7, 0x7c4c, 0x7ed0, 0x1835, 0xd8b4, 0x83a5, 0x1, 0x1);
        gbc.writeMem(0x15c7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7c4c);
        EXPECT(gbc.pc(), 0x15c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0274
        gbc.setState(0xbdfe, 0x49d1, 0xfda0, 0x84be, 0x83, 0x1e98, 0x0, 0x1);
        gbc.writeMem(0xbdfe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x49d1);
        EXPECT(gbc.pc(), 0xbe00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfe), 0xcb);
        EXPECT(gbc.readMem(0xbdff), 0xe1);
        // CB E1 0275
        gbc.setState(0xb9d9, 0xbfa5, 0x9920, 0x69b3, 0xb9b4, 0x484e, 0x0, 0x1);
        gbc.writeMem(0xb9d9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0xb9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d9), 0xcb);
        EXPECT(gbc.readMem(0xb9da), 0xe1);
        // CB E1 0276
        gbc.setState(0xab28, 0x95e2, 0xda10, 0xb443, 0x88ff, 0xff71, 0x0, 0x0);
        gbc.writeMem(0xab28, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x95e2);
        EXPECT(gbc.pc(), 0xab2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab28), 0xcb);
        EXPECT(gbc.readMem(0xab29), 0xe1);
        // CB E1 0277
        gbc.setState(0x95a0, 0x822a, 0x3da0, 0xbb72, 0xf2d3, 0x5d1e, 0x1, 0x1);
        gbc.writeMem(0x95a0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x822a);
        EXPECT(gbc.pc(), 0x95a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a0), 0xcb);
        EXPECT(gbc.readMem(0x95a1), 0xe1);
        // CB E1 0278
        gbc.setState(0x22fb, 0x1a9c, 0xd940, 0x8733, 0x1afa, 0x58d3, 0x0, 0x1);
        gbc.writeMem(0x22fb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1a9c);
        EXPECT(gbc.pc(), 0x22fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0279
        gbc.setState(0x6896, 0xf2e0, 0x150, 0x8918, 0xaf8c, 0x9e42, 0x1, 0x1);
        gbc.writeMem(0x6896, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf2e0);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 027A
        gbc.setState(0xb24c, 0xc632, 0xc190, 0x55c1, 0xe37, 0x1389, 0x1, 0x1);
        gbc.writeMem(0xb24c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc632);
        EXPECT(gbc.pc(), 0xb24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24c), 0xcb);
        EXPECT(gbc.readMem(0xb24d), 0xe1);
        // CB E1 027B
        gbc.setState(0x2480, 0x19fb, 0x4ba0, 0x54be, 0x9dd0, 0xfd83, 0x0, 0x1);
        gbc.writeMem(0x2480, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x19fb);
        EXPECT(gbc.pc(), 0x2482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 027C
        gbc.setState(0x26a7, 0x64ce, 0x5e90, 0x8c41, 0x776f, 0xa7dd, 0x0, 0x0);
        gbc.writeMem(0x26a7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x64ce);
        EXPECT(gbc.pc(), 0x26a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 027D
        gbc.setState(0x8746, 0x2b89, 0x3c90, 0x656e, 0xd0f3, 0xec35, 0x1, 0x1);
        gbc.writeMem(0x8746, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2b89);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8746), 0xcb);
        EXPECT(gbc.readMem(0x8747), 0xe1);
        // CB E1 027E
        gbc.setState(0xc656, 0x91aa, 0xa840, 0x5e85, 0x2b35, 0xd8ce, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x91aa);
        EXPECT(gbc.pc(), 0xc658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc656), 0xcb);
        EXPECT(gbc.readMem(0xc657), 0xe1);
        // CB E1 027F
        gbc.setState(0x7ddc, 0x4fd4, 0x3d30, 0x2828, 0x322a, 0xc54, 0x0, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4fd4);
        EXPECT(gbc.pc(), 0x7dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0280
        gbc.setState(0x235f, 0x8d89, 0x37e0, 0xa106, 0xc07b, 0xe08a, 0x0, 0x0);
        gbc.writeMem(0x235f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8d89);
        EXPECT(gbc.pc(), 0x2361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0281
        gbc.setState(0xda92, 0xd774, 0x7780, 0x594b, 0x53c0, 0x983a, 0x0, 0x1);
        gbc.writeMem(0xda92, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd774);
        EXPECT(gbc.pc(), 0xda94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda92), 0xcb);
        EXPECT(gbc.readMem(0xda93), 0xe1);
        // CB E1 0282
        gbc.setState(0x8b88, 0x97f8, 0xcc80, 0xaf6c, 0x4c90, 0xf609, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x97f8);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0xe1);
        // CB E1 0283
        gbc.setState(0x7cb4, 0x870e, 0x1e50, 0xe638, 0x703d, 0xd97e, 0x0, 0x0);
        gbc.writeMem(0x7cb4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x870e);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0284
        gbc.setState(0xa8cf, 0x134a, 0x72b0, 0xe19c, 0xbc6f, 0x92d0, 0x0, 0x0);
        gbc.writeMem(0xa8cf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x134a);
        EXPECT(gbc.pc(), 0xa8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cf), 0xcb);
        EXPECT(gbc.readMem(0xa8d0), 0xe1);
        // CB E1 0286
        gbc.setState(0xcdf3, 0xeb26, 0x8a60, 0x145, 0x3d2, 0x602e, 0x1, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xeb26);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf3), 0xcb);
        EXPECT(gbc.readMem(0xcdf4), 0xe1);
        // CB E1 0287
        gbc.setState(0x8ecb, 0x43fe, 0xa390, 0x1d67, 0xf10e, 0x1148, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x43fe);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0xe1);
        // CB E1 0288
        gbc.setState(0x28c3, 0xe310, 0x4ea0, 0x56fd, 0x5acb, 0xd662, 0x0, 0x0);
        gbc.writeMem(0x28c3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe310);
        EXPECT(gbc.pc(), 0x28c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0289
        gbc.setState(0xcd14, 0x3b7, 0x5580, 0xbc80, 0xd6a4, 0xe320, 0x1, 0x1);
        gbc.writeMem(0xcd14, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3b7);
        EXPECT(gbc.pc(), 0xcd16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd14), 0xcb);
        EXPECT(gbc.readMem(0xcd15), 0xe1);
        // CB E1 028A
        gbc.setState(0x2499, 0x30f5, 0x2070, 0xf406, 0x4c27, 0x5d5a, 0x1, 0x1);
        gbc.writeMem(0x2499, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x30f5);
        EXPECT(gbc.pc(), 0x249b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 028B
        gbc.setState(0x94db, 0x874c, 0x3c80, 0x8622, 0x2ac0, 0xf2b1, 0x0, 0x1);
        gbc.writeMem(0x94db, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x874c);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94db), 0xcb);
        EXPECT(gbc.readMem(0x94dc), 0xe1);
        // CB E1 028C
        gbc.setState(0x45f2, 0x948a, 0x6a30, 0x784a, 0xdc7f, 0x488a, 0x1, 0x1);
        gbc.writeMem(0x45f2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x948a);
        EXPECT(gbc.pc(), 0x45f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 028D
        gbc.setState(0x8d77, 0x64da, 0x4300, 0x14a2, 0xbbb7, 0x8586, 0x1, 0x1);
        gbc.writeMem(0x8d77, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x64da);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d77), 0xcb);
        EXPECT(gbc.readMem(0x8d78), 0xe1);
        // CB E1 028E
        gbc.setState(0x7f95, 0x1096, 0xe3b0, 0xb70b, 0xa1b0, 0xa1bc, 0x1, 0x0);
        gbc.writeMem(0x7f95, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1096);
        EXPECT(gbc.pc(), 0x7f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 028F
        gbc.setState(0x93eb, 0xb1e7, 0xc980, 0x3e0a, 0x188d, 0xc968, 0x0, 0x1);
        gbc.writeMem(0x93eb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb1e7);
        EXPECT(gbc.pc(), 0x93ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93eb), 0xcb);
        EXPECT(gbc.readMem(0x93ec), 0xe1);
        // CB E1 0290
        gbc.setState(0x9ec4, 0x576e, 0xc750, 0xcc04, 0x1c0e, 0xdf92, 0x1, 0x0);
        gbc.writeMem(0x9ec4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x576e);
        EXPECT(gbc.pc(), 0x9ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec4), 0xcb);
        EXPECT(gbc.readMem(0x9ec5), 0xe1);
        // CB E1 0291
        gbc.setState(0x6342, 0xb387, 0xae90, 0xca1a, 0x53d1, 0xe2cd, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb387);
        EXPECT(gbc.pc(), 0x6344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0292
        gbc.setState(0x7568, 0x1463, 0x29e0, 0x10f, 0xbd37, 0xcfde, 0x1, 0x0);
        gbc.writeMem(0x7568, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x756a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0293
        gbc.setState(0x9b68, 0x77a, 0x5670, 0x3d3a, 0x5b1d, 0x9315, 0x1, 0x1);
        gbc.writeMem(0x9b68, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x77a);
        EXPECT(gbc.pc(), 0x9b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b68), 0xcb);
        EXPECT(gbc.readMem(0x9b69), 0xe1);
        // CB E1 0294
        gbc.setState(0x7b39, 0x95c9, 0x2b20, 0x8900, 0x5dfb, 0xdc2c, 0x1, 0x0);
        gbc.writeMem(0x7b39, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x95c9);
        EXPECT(gbc.pc(), 0x7b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0295
        gbc.setState(0xb950, 0x276e, 0xe170, 0x156, 0xa87b, 0x92eb, 0x1, 0x0);
        gbc.writeMem(0xb950, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x276e);
        EXPECT(gbc.pc(), 0xb952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb950), 0xcb);
        EXPECT(gbc.readMem(0xb951), 0xe1);
        // CB E1 0296
        gbc.setState(0xaea1, 0xd1f, 0x4750, 0xe2ac, 0x9bc8, 0x60fe, 0x1, 0x0);
        gbc.writeMem(0xaea1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd1f);
        EXPECT(gbc.pc(), 0xaea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea1), 0xcb);
        EXPECT(gbc.readMem(0xaea2), 0xe1);
        // CB E1 0297
        gbc.setState(0xd826, 0x3cc, 0x9770, 0x54b1, 0x914d, 0xf221, 0x0, 0x0);
        gbc.writeMem(0xd826, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3cc);
        EXPECT(gbc.pc(), 0xd828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd826), 0xcb);
        EXPECT(gbc.readMem(0xd827), 0xe1);
        // CB E1 0298
        gbc.setState(0xe201, 0x69c, 0xd8d0, 0x6aa6, 0xa1a0, 0x84dc, 0x1, 0x1);
        gbc.writeMem(0xe201, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x69c);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe201), 0xcb);
        EXPECT(gbc.readMem(0xe202), 0xe1);
        // CB E1 0299
        gbc.setState(0x6263, 0x9b7f, 0xd70, 0x6108, 0x4370, 0x5902, 0x0, 0x0);
        gbc.writeMem(0x6263, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9b7f);
        EXPECT(gbc.pc(), 0x6265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 029A
        gbc.setState(0x84b4, 0xc4ab, 0x4a50, 0x5e3e, 0x1248, 0xdc21, 0x1, 0x1);
        gbc.writeMem(0x84b4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc4ab);
        EXPECT(gbc.pc(), 0x84b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b4), 0xcb);
        EXPECT(gbc.readMem(0x84b5), 0xe1);
        // CB E1 029B
        gbc.setState(0x881d, 0x900f, 0xc720, 0x9649, 0xb813, 0x61d1, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x900f);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881d), 0xcb);
        EXPECT(gbc.readMem(0x881e), 0xe1);
        // CB E1 029C
        gbc.setState(0x4a9b, 0x3f9c, 0xba30, 0x3e7d, 0x6690, 0xc49a, 0x1, 0x0);
        gbc.writeMem(0x4a9b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3f9c);
        EXPECT(gbc.pc(), 0x4a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 029D
        gbc.setState(0xcd0f, 0x2565, 0x7840, 0xa996, 0xee8d, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0xcd0f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2565);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0xe1);
        // CB E1 029F
        gbc.setState(0x390e, 0x23c5, 0x3cb0, 0x73a9, 0x35ce, 0x1ad5, 0x1, 0x1);
        gbc.writeMem(0x390e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x23c5);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A0
        gbc.setState(0xc50b, 0xce27, 0x8110, 0xaa45, 0xbd01, 0x8464, 0x1, 0x0);
        gbc.writeMem(0xc50b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xce27);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50b), 0xcb);
        EXPECT(gbc.readMem(0xc50c), 0xe1);
        // CB E1 02A1
        gbc.setState(0x2aa1, 0xab33, 0x66f0, 0xd1dc, 0xc75e, 0xbeea, 0x1, 0x0);
        gbc.writeMem(0x2aa1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xab33);
        EXPECT(gbc.pc(), 0x2aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A2
        gbc.setState(0x1589, 0x16e7, 0x3250, 0xba87, 0x2c, 0xac33, 0x1, 0x1);
        gbc.writeMem(0x1589, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x16e7);
        EXPECT(gbc.pc(), 0x158b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A3
        gbc.setState(0x3af9, 0xe630, 0x280, 0x275e, 0x207a, 0x7325, 0x0, 0x1);
        gbc.writeMem(0x3af9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe630);
        EXPECT(gbc.pc(), 0x3afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02A5
        gbc.setState(0x32cd, 0xaf20, 0xff90, 0xb145, 0xe776, 0xe75e, 0x0, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xaf20);
        EXPECT(gbc.pc(), 0x32cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A6
        gbc.setState(0x2c45, 0x879e, 0x8a70, 0x3caa, 0xdd9e, 0x6c09, 0x1, 0x1);
        gbc.writeMem(0x2c45, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x879e);
        EXPECT(gbc.pc(), 0x2c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A7
        gbc.setState(0xa79, 0x73a8, 0x9e30, 0xe4d0, 0x55d7, 0xa25d, 0x0, 0x1);
        gbc.writeMem(0xa79, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x73a8);
        EXPECT(gbc.pc(), 0xa7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02A8
        gbc.setState(0xcabb, 0x99b3, 0xf8b0, 0x346c, 0x6e6f, 0x6434, 0x0, 0x1);
        gbc.writeMem(0xcabb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x99b3);
        EXPECT(gbc.pc(), 0xcabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabb), 0xcb);
        EXPECT(gbc.readMem(0xcabc), 0xe1);
        // CB E1 02A9
        gbc.setState(0x754c, 0xcfec, 0xfd50, 0x8f81, 0x6005, 0x5600, 0x1, 0x0);
        gbc.writeMem(0x754c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcfec);
        EXPECT(gbc.pc(), 0x754e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02AA
        gbc.setState(0xd5d6, 0x397c, 0xfe30, 0x62de, 0xf00f, 0x3bdd, 0x1, 0x1);
        gbc.writeMem(0xd5d6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x397c);
        EXPECT(gbc.pc(), 0xd5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d6), 0xcb);
        EXPECT(gbc.readMem(0xd5d7), 0xe1);
        // CB E1 02AB
        gbc.setState(0x296c, 0x47b0, 0xb330, 0x9685, 0x8197, 0x59fe, 0x0, 0x0);
        gbc.writeMem(0x296c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x47b0);
        EXPECT(gbc.pc(), 0x296e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02AC
        gbc.setState(0x4ff8, 0x2f9, 0xb720, 0x6d99, 0x7fac, 0x4574, 0x1, 0x0);
        gbc.writeMem(0x4ff8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2f9);
        EXPECT(gbc.pc(), 0x4ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02AD
        gbc.setState(0x651, 0x3106, 0x6c60, 0xd3c3, 0x520b, 0x4dab, 0x1, 0x0);
        gbc.writeMem(0x651, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3106);
        EXPECT(gbc.pc(), 0x653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02AE
        gbc.setState(0x19e8, 0x3513, 0xf090, 0x2cc1, 0xb555, 0xc887, 0x0, 0x1);
        gbc.writeMem(0x19e8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x19ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02AF
        gbc.setState(0xddad, 0x5217, 0xb240, 0x9df0, 0xeb7, 0xb81, 0x0, 0x0);
        gbc.writeMem(0xddad, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5217);
        EXPECT(gbc.pc(), 0xddaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddad), 0xcb);
        EXPECT(gbc.readMem(0xddae), 0xe1);
        // CB E1 02B0
        gbc.setState(0xa8da, 0x44cd, 0x4a40, 0xbaea, 0xd5fa, 0x6d72, 0x0, 0x0);
        gbc.writeMem(0xa8da, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0xa8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8da), 0xcb);
        EXPECT(gbc.readMem(0xa8db), 0xe1);
        // CB E1 02B1
        gbc.setState(0x19b6, 0xee8b, 0x8d00, 0xd08e, 0xab7d, 0xac24, 0x1, 0x0);
        gbc.writeMem(0x19b6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xee8b);
        EXPECT(gbc.pc(), 0x19b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02B2
        gbc.setState(0x445c, 0x7686, 0x6670, 0xa1e5, 0x104a, 0x633c, 0x1, 0x0);
        gbc.writeMem(0x445c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7686);
        EXPECT(gbc.pc(), 0x445e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02B3
        gbc.setState(0x56f9, 0xf1aa, 0x3f70, 0x64f4, 0xc44f, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x56f9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf1aa);
        EXPECT(gbc.pc(), 0x56fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02B4
        gbc.setState(0xb07b, 0xd9a9, 0xf280, 0x8ca8, 0x311e, 0xad1a, 0x0, 0x1);
        gbc.writeMem(0xb07b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd9a9);
        EXPECT(gbc.pc(), 0xb07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07b), 0xcb);
        EXPECT(gbc.readMem(0xb07c), 0xe1);
        // CB E1 02B5
        gbc.setState(0x891c, 0xe272, 0x9c30, 0x93d1, 0x391f, 0x2b85, 0x1, 0x1);
        gbc.writeMem(0x891c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0x891e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891c), 0xcb);
        EXPECT(gbc.readMem(0x891d), 0xe1);
        // CB E1 02B6
        gbc.setState(0xe1b8, 0x8856, 0x92f0, 0x9454, 0x388f, 0x4566, 0x1, 0x0);
        gbc.writeMem(0xe1b8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8856);
        EXPECT(gbc.pc(), 0xe1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b8), 0xcb);
        EXPECT(gbc.readMem(0xe1b9), 0xe1);
        // CB E1 02B7
        gbc.setState(0xb223, 0x21b2, 0x3d0, 0xb7b3, 0x2a08, 0xeab8, 0x0, 0x1);
        gbc.writeMem(0xb223, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x21b2);
        EXPECT(gbc.pc(), 0xb225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb223), 0xcb);
        EXPECT(gbc.readMem(0xb224), 0xe1);
        // CB E1 02B8
        gbc.setState(0x238a, 0x149c, 0xbac0, 0x5471, 0xe414, 0x6db1, 0x0, 0x0);
        gbc.writeMem(0x238a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x149c);
        EXPECT(gbc.pc(), 0x238c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02B9
        gbc.setState(0x6207, 0xb71d, 0x9380, 0x9cf1, 0x1851, 0x5fa6, 0x0, 0x1);
        gbc.writeMem(0x6207, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb71d);
        EXPECT(gbc.pc(), 0x6209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02BA
        gbc.setState(0x1e08, 0xea55, 0x9180, 0x5cea, 0xc995, 0x62ae, 0x1, 0x1);
        gbc.writeMem(0x1e08, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xea55);
        EXPECT(gbc.pc(), 0x1e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02BD
        gbc.setState(0x57f4, 0xd97c, 0x3280, 0x61d6, 0x6d78, 0x6b04, 0x1, 0x1);
        gbc.writeMem(0x57f4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd97c);
        EXPECT(gbc.pc(), 0x57f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02BE
        gbc.setState(0x121d, 0x372f, 0xd420, 0x93e6, 0xb95d, 0xb551, 0x1, 0x0);
        gbc.writeMem(0x121d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x372f);
        EXPECT(gbc.pc(), 0x121f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02BF
        gbc.setState(0x4233, 0x6ec6, 0x3f0, 0x87d8, 0xd0a6, 0x3aeb, 0x1, 0x0);
        gbc.writeMem(0x4233, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6ec6);
        EXPECT(gbc.pc(), 0x4235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02C1
        gbc.setState(0x8cb2, 0xe547, 0xb2c0, 0xd809, 0x460c, 0x3977, 0x0, 0x0);
        gbc.writeMem(0x8cb2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe547);
        EXPECT(gbc.pc(), 0x8cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb2), 0xcb);
        EXPECT(gbc.readMem(0x8cb3), 0xe1);
        // CB E1 02C2
        gbc.setState(0x4cc7, 0x513f, 0xff00, 0x8cc5, 0x76b6, 0xe2f6, 0x0, 0x1);
        gbc.writeMem(0x4cc7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x513f);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02C3
        gbc.setState(0xc6ae, 0xf90f, 0x8600, 0x75f, 0xc4f0, 0xd730, 0x0, 0x1);
        gbc.writeMem(0xc6ae, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf90f);
        EXPECT(gbc.pc(), 0xc6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ae), 0xcb);
        EXPECT(gbc.readMem(0xc6af), 0xe1);
        // CB E1 02C4
        gbc.setState(0x174e, 0x95c5, 0xa450, 0xe4d9, 0x3d78, 0x2c54, 0x0, 0x0);
        gbc.writeMem(0x174e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x95c5);
        EXPECT(gbc.pc(), 0x1750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02C5
        gbc.setState(0x62c7, 0x40c5, 0xcfd0, 0xea11, 0x3b96, 0x461d, 0x1, 0x0);
        gbc.writeMem(0x62c7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x40c5);
        EXPECT(gbc.pc(), 0x62c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02C7
        gbc.setState(0x3dff, 0x1e06, 0x97c0, 0xd242, 0x6d06, 0xd25e, 0x1, 0x0);
        gbc.writeMem(0x3dff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1e06);
        EXPECT(gbc.pc(), 0x3e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02C8
        gbc.setState(0x940, 0x8192, 0xd1f0, 0xdb46, 0xb716, 0x7617, 0x1, 0x1);
        gbc.writeMem(0x940, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8192);
        EXPECT(gbc.pc(), 0x942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02C9
        gbc.setState(0x3523, 0x6803, 0x8a30, 0xfedc, 0xc376, 0xc1e1, 0x1, 0x0);
        gbc.writeMem(0x3523, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6803);
        EXPECT(gbc.pc(), 0x3525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02CA
        gbc.setState(0x7626, 0x8c5f, 0xc400, 0xdd74, 0x7969, 0x1db1, 0x0, 0x1);
        gbc.writeMem(0x7626, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0x7628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02CB
        gbc.setState(0x805d, 0x2add, 0xfbf0, 0x1b86, 0x7a8b, 0x8367, 0x0, 0x0);
        gbc.writeMem(0x805d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2add);
        EXPECT(gbc.pc(), 0x805f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x805d), 0xcb);
        EXPECT(gbc.readMem(0x805e), 0xe1);
        // CB E1 02CC
        gbc.setState(0x6e6c, 0xdfb5, 0x58c0, 0xea05, 0x8719, 0x4eee, 0x0, 0x1);
        gbc.writeMem(0x6e6c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdfb5);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02CD
        gbc.setState(0x8864, 0x4a3e, 0x87a0, 0x1037, 0x64eb, 0x4789, 0x1, 0x0);
        gbc.writeMem(0x8864, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4a3e);
        EXPECT(gbc.pc(), 0x8866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8864), 0xcb);
        EXPECT(gbc.readMem(0x8865), 0xe1);
        // CB E1 02CE
        gbc.setState(0x77e6, 0x8373, 0x26b0, 0x1e4b, 0x2a12, 0x57be, 0x0, 0x0);
        gbc.writeMem(0x77e6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8373);
        EXPECT(gbc.pc(), 0x77e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02CF
        gbc.setState(0xc88c, 0xcf84, 0x5cf0, 0x36d6, 0xcd8f, 0x7a31, 0x0, 0x0);
        gbc.writeMem(0xc88c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcf84);
        EXPECT(gbc.pc(), 0xc88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88c), 0xcb);
        EXPECT(gbc.readMem(0xc88d), 0xe1);
        // CB E1 02D0
        gbc.setState(0x92b0, 0x14aa, 0x3400, 0x8efd, 0x5323, 0x2e17, 0x1, 0x0);
        gbc.writeMem(0x92b0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x14aa);
        EXPECT(gbc.pc(), 0x92b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b0), 0xcb);
        EXPECT(gbc.readMem(0x92b1), 0xe1);
        // CB E1 02D1
        gbc.setState(0x452, 0xad2b, 0x7a90, 0xcde0, 0xd11e, 0x9c7f, 0x0, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xad2b);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02D2
        gbc.setState(0xa9df, 0x9a02, 0xa6f0, 0x2253, 0x38ff, 0x48cc, 0x1, 0x1);
        gbc.writeMem(0xa9df, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9a02);
        EXPECT(gbc.pc(), 0xa9e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9df), 0xcb);
        EXPECT(gbc.readMem(0xa9e0), 0xe1);
        // CB E1 02D3
        gbc.setState(0x4e41, 0xba32, 0xafd0, 0x2603, 0x4095, 0xd29c, 0x0, 0x0);
        gbc.writeMem(0x4e41, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xba32);
        EXPECT(gbc.pc(), 0x4e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02D4
        gbc.setState(0xbad7, 0x6b53, 0xf970, 0xc27d, 0xb06b, 0x35fb, 0x1, 0x0);
        gbc.writeMem(0xbad7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6b53);
        EXPECT(gbc.pc(), 0xbad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad7), 0xcb);
        EXPECT(gbc.readMem(0xbad8), 0xe1);
        // CB E1 02D5
        gbc.setState(0x8aaf, 0xae96, 0xfb50, 0x4e29, 0x1994, 0x7ff4, 0x1, 0x0);
        gbc.writeMem(0x8aaf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xae96);
        EXPECT(gbc.pc(), 0x8ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aaf), 0xcb);
        EXPECT(gbc.readMem(0x8ab0), 0xe1);
        // CB E1 02D6
        gbc.setState(0x510d, 0xda83, 0x3c00, 0xc38a, 0xdeff, 0x21dd, 0x0, 0x0);
        gbc.writeMem(0x510d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xda83);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02D7
        gbc.setState(0xafcb, 0x812c, 0x9b80, 0x1abd, 0x8a71, 0xe71a, 0x0, 0x0);
        gbc.writeMem(0xafcb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x812c);
        EXPECT(gbc.pc(), 0xafcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcb), 0xcb);
        EXPECT(gbc.readMem(0xafcc), 0xe1);
        // CB E1 02D8
        gbc.setState(0x3e14, 0xe6f3, 0xad30, 0x93c9, 0x43b3, 0xb5e4, 0x0, 0x1);
        gbc.writeMem(0x3e14, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe6f3);
        EXPECT(gbc.pc(), 0x3e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02D9
        gbc.setState(0x8e25, 0xdb1f, 0x16b0, 0x16c2, 0x5d5f, 0xccb6, 0x0, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb1f);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e25), 0xcb);
        EXPECT(gbc.readMem(0x8e26), 0xe1);
        // CB E1 02DA
        gbc.setState(0x2f72, 0xadc5, 0xaf80, 0xaa08, 0x971d, 0xfa5b, 0x0, 0x0);
        gbc.writeMem(0x2f72, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0x2f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02DB
        gbc.setState(0x97e, 0xa90b, 0x2890, 0xf402, 0x97fd, 0x9c04, 0x0, 0x0);
        gbc.writeMem(0x97e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa90b);
        EXPECT(gbc.pc(), 0x980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02DC
        gbc.setState(0x37e9, 0x6902, 0x38f0, 0xb60a, 0x88f8, 0xf1eb, 0x0, 0x1);
        gbc.writeMem(0x37e9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6902);
        EXPECT(gbc.pc(), 0x37eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02DD
        gbc.setState(0x5003, 0xa2c5, 0xa860, 0xd0b9, 0xe323, 0x5db6, 0x0, 0x1);
        gbc.writeMem(0x5003, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa2c5);
        EXPECT(gbc.pc(), 0x5005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02DE
        gbc.setState(0xce48, 0x68bc, 0x9a80, 0x985b, 0x8d5b, 0x1eb1, 0x0, 0x1);
        gbc.writeMem(0xce48, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x68bc);
        EXPECT(gbc.pc(), 0xce4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce48), 0xcb);
        EXPECT(gbc.readMem(0xce49), 0xe1);
        // CB E1 02DF
        gbc.setState(0x14f9, 0x6d73, 0xe360, 0xcfbb, 0x54a3, 0x5102, 0x1, 0x1);
        gbc.writeMem(0x14f9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6d73);
        EXPECT(gbc.pc(), 0x14fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02E0
        gbc.setState(0x70fa, 0xc18c, 0x320, 0x913e, 0x669e, 0x7034, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc18c);
        EXPECT(gbc.pc(), 0x70fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02E1
        gbc.setState(0xc983, 0x6d12, 0xad70, 0x1b6a, 0x78c6, 0x34b4, 0x1, 0x0);
        gbc.writeMem(0xc983, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6d12);
        EXPECT(gbc.pc(), 0xc985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc983), 0xcb);
        EXPECT(gbc.readMem(0xc984), 0xe1);
        // CB E1 02E2
        gbc.setState(0x758c, 0xfa3e, 0x6a50, 0x8b3b, 0x384a, 0x6855, 0x1, 0x1);
        gbc.writeMem(0x758c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfa3e);
        EXPECT(gbc.pc(), 0x758e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02E3
        gbc.setState(0x8f1c, 0x10de, 0xf3d0, 0x9f71, 0x6902, 0xc3c3, 0x1, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x10de);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0xe1);
        // CB E1 02E4
        gbc.setState(0x4c85, 0xe12d, 0x3530, 0xa1c0, 0xfd9d, 0xf192, 0x0, 0x1);
        gbc.writeMem(0x4c85, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe12d);
        EXPECT(gbc.pc(), 0x4c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02E5
        gbc.setState(0x3f7b, 0x86d1, 0x8d90, 0x8a9d, 0x1864, 0x993f, 0x1, 0x1);
        gbc.writeMem(0x3f7b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0x3f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02E6
        gbc.setState(0x1ef1, 0xaab0, 0xa560, 0x58d3, 0x17a, 0xa5fd, 0x1, 0x1);
        gbc.writeMem(0x1ef1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xaab0);
        EXPECT(gbc.pc(), 0x1ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02E7
        gbc.setState(0x7985, 0x5c44, 0x2830, 0xf2fe, 0x8271, 0x4c11, 0x1, 0x1);
        gbc.writeMem(0x7985, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5c44);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02E8
        gbc.setState(0x476b, 0xb60f, 0x4aa0, 0xa0b1, 0x1c65, 0x23d9, 0x1, 0x1);
        gbc.writeMem(0x476b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb60f);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02E9
        gbc.setState(0xbc51, 0x7eec, 0x1430, 0xd742, 0x731f, 0xbb59, 0x0, 0x0);
        gbc.writeMem(0xbc51, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7eec);
        EXPECT(gbc.pc(), 0xbc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc51), 0xcb);
        EXPECT(gbc.readMem(0xbc52), 0xe1);
        // CB E1 02EA
        gbc.setState(0xb1bb, 0xaf0d, 0xf590, 0xff0f, 0x3a63, 0x1c7d, 0x1, 0x0);
        gbc.writeMem(0xb1bb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xaf0d);
        EXPECT(gbc.pc(), 0xb1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1bb), 0xcb);
        EXPECT(gbc.readMem(0xb1bc), 0xe1);
        // CB E1 02EB
        gbc.setState(0xae61, 0xab5b, 0x8260, 0x60ee, 0xc127, 0x1e6, 0x0, 0x1);
        gbc.writeMem(0xae61, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xab5b);
        EXPECT(gbc.pc(), 0xae63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae61), 0xcb);
        EXPECT(gbc.readMem(0xae62), 0xe1);
        // CB E1 02ED
        gbc.setState(0x90cf, 0x9875, 0x2270, 0xb1f5, 0x8131, 0x4588, 0x1, 0x1);
        gbc.writeMem(0x90cf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9875);
        EXPECT(gbc.pc(), 0x90d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cf), 0xcb);
        EXPECT(gbc.readMem(0x90d0), 0xe1);
        // CB E1 02EE
        gbc.setState(0xc86c, 0x2c88, 0xad0, 0xe99e, 0x448f, 0xa681, 0x0, 0x1);
        gbc.writeMem(0xc86c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2c88);
        EXPECT(gbc.pc(), 0xc86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86c), 0xcb);
        EXPECT(gbc.readMem(0xc86d), 0xe1);
        // CB E1 02EF
        gbc.setState(0x15f3, 0x345c, 0xc550, 0xda5d, 0xe923, 0xd70f, 0x0, 0x0);
        gbc.writeMem(0x15f3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x345c);
        EXPECT(gbc.pc(), 0x15f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02F0
        gbc.setState(0x64eb, 0x6ac5, 0xe730, 0xc820, 0xba3d, 0x681b, 0x1, 0x0);
        gbc.writeMem(0x64eb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6ac5);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02F1
        gbc.setState(0x4f89, 0x89f3, 0x38a0, 0x1c69, 0x4311, 0x28fe, 0x0, 0x1);
        gbc.writeMem(0x4f89, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x89f3);
        EXPECT(gbc.pc(), 0x4f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02F2
        gbc.setState(0xc8d5, 0x999a, 0x3810, 0x8a8b, 0xdff2, 0x9dbc, 0x1, 0x0);
        gbc.writeMem(0xc8d5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x999a);
        EXPECT(gbc.pc(), 0xc8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d5), 0xcb);
        EXPECT(gbc.readMem(0xc8d6), 0xe1);
        // CB E1 02F3
        gbc.setState(0x8901, 0xf759, 0x9e00, 0x990c, 0x9c4a, 0x4c35, 0x1, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf759);
        EXPECT(gbc.pc(), 0x8903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8901), 0xcb);
        EXPECT(gbc.readMem(0x8902), 0xe1);
        // CB E1 02F4
        gbc.setState(0x98b4, 0xca28, 0xd9f0, 0x7fce, 0x53e, 0x4d9e, 0x1, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xca28);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b4), 0xcb);
        EXPECT(gbc.readMem(0x98b5), 0xe1);
        // CB E1 02F5
        gbc.setState(0x2c6c, 0x47b9, 0x6cf0, 0xe738, 0x7524, 0x9b41, 0x0, 0x1);
        gbc.writeMem(0x2c6c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x47b9);
        EXPECT(gbc.pc(), 0x2c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02F7
        gbc.setState(0xb353, 0xd080, 0x4b10, 0x355d, 0x65de, 0xbf55, 0x1, 0x1);
        gbc.writeMem(0xb353, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd080);
        EXPECT(gbc.pc(), 0xb355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb353), 0xcb);
        EXPECT(gbc.readMem(0xb354), 0xe1);
        // CB E1 02F8
        gbc.setState(0x27c9, 0x646f, 0xcd0, 0x283f, 0x58eb, 0x587b, 0x0, 0x0);
        gbc.writeMem(0x27c9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x646f);
        EXPECT(gbc.pc(), 0x27cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02F9
        gbc.setState(0xd0c3, 0xd721, 0x1770, 0x379e, 0x5ba3, 0x5a0a, 0x1, 0x1);
        gbc.writeMem(0xd0c3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd721);
        EXPECT(gbc.pc(), 0xd0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c3), 0xcb);
        EXPECT(gbc.readMem(0xd0c4), 0xe1);
        // CB E1 02FA
        gbc.setState(0x6a5c, 0xa90e, 0x2290, 0xf9a5, 0x1947, 0x13e8, 0x0, 0x0);
        gbc.writeMem(0x6a5c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa90e);
        EXPECT(gbc.pc(), 0x6a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02FB
        gbc.setState(0x7ed5, 0xa30a, 0x8450, 0x21b9, 0x2ede, 0xa84d, 0x0, 0x1);
        gbc.writeMem(0x7ed5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa30a);
        EXPECT(gbc.pc(), 0x7ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02FC
        gbc.setState(0x7e, 0x6d90, 0x5660, 0x57f3, 0x54d6, 0x9956, 0x0, 0x0);
        gbc.writeMem(0x7e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 02FD
        gbc.setState(0x74e6, 0xfa0, 0x3690, 0x7c46, 0x7db5, 0xb5a3, 0x0, 0x0);
        gbc.writeMem(0x74e6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfa0);
        EXPECT(gbc.pc(), 0x74e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 02FE
        gbc.setState(0x84b7, 0xf56, 0x1b00, 0x5147, 0xde0b, 0xde5e, 0x0, 0x1);
        gbc.writeMem(0x84b7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf56);
        EXPECT(gbc.pc(), 0x84b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b7), 0xcb);
        EXPECT(gbc.readMem(0x84b8), 0xe1);
        // CB E1 02FF
        gbc.setState(0x82a1, 0x6a4e, 0xdd30, 0x3df9, 0xf2d5, 0x9457, 0x0, 0x1);
        gbc.writeMem(0x82a1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0x82a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a1), 0xcb);
        EXPECT(gbc.readMem(0x82a2), 0xe1);
        // CB E1 0300
        gbc.setState(0x95c8, 0xb934, 0x3780, 0xacd1, 0x9dba, 0xc38d, 0x0, 0x0);
        gbc.writeMem(0x95c8, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb934);
        EXPECT(gbc.pc(), 0x95ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c8), 0xcb);
        EXPECT(gbc.readMem(0x95c9), 0xe1);
        // CB E1 0301
        gbc.setState(0x1db1, 0x8b7e, 0x43a0, 0x672, 0x29bd, 0x10e6, 0x0, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8b7e);
        EXPECT(gbc.pc(), 0x1db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0302
        gbc.setState(0xb4eb, 0x1c14, 0x8110, 0x9106, 0xa666, 0xd276, 0x0, 0x1);
        gbc.writeMem(0xb4eb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1c14);
        EXPECT(gbc.pc(), 0xb4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4eb), 0xcb);
        EXPECT(gbc.readMem(0xb4ec), 0xe1);
        // CB E1 0303
        gbc.setState(0x6687, 0x4879, 0x50d0, 0x8a72, 0x17b1, 0xd3f4, 0x0, 0x1);
        gbc.writeMem(0x6687, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4879);
        EXPECT(gbc.pc(), 0x6689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0304
        gbc.setState(0x947f, 0xbb09, 0x54b0, 0x4b39, 0xf1d0, 0xbe67, 0x1, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbb09);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947f), 0xcb);
        EXPECT(gbc.readMem(0x9480), 0xe1);
        // CB E1 0305
        gbc.setState(0x65b1, 0x2e59, 0x9f40, 0xd418, 0xf228, 0x7fc1, 0x1, 0x1);
        gbc.writeMem(0x65b1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2e59);
        EXPECT(gbc.pc(), 0x65b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0306
        gbc.setState(0x6f26, 0x1997, 0x9750, 0x7245, 0x974, 0x5839, 0x1, 0x1);
        gbc.writeMem(0x6f26, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1997);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0307
        gbc.setState(0xc796, 0xdcb7, 0x26c0, 0x899d, 0x337, 0x4183, 0x0, 0x1);
        gbc.writeMem(0xc796, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0xc798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc796), 0xcb);
        EXPECT(gbc.readMem(0xc797), 0xe1);
        // CB E1 0308
        gbc.setState(0x77f1, 0x96ee, 0x2f00, 0x657c, 0x1d77, 0x239b, 0x0, 0x0);
        gbc.writeMem(0x77f1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x96ee);
        EXPECT(gbc.pc(), 0x77f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0309
        gbc.setState(0x8e3a, 0xc28d, 0x31a0, 0x148, 0x70a2, 0xe415, 0x1, 0x0);
        gbc.writeMem(0x8e3a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc28d);
        EXPECT(gbc.pc(), 0x8e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3a), 0xcb);
        EXPECT(gbc.readMem(0x8e3b), 0xe1);
        // CB E1 030A
        gbc.setState(0x4968, 0xdcc7, 0x47f0, 0xbcec, 0x2d50, 0xf40b, 0x1, 0x1);
        gbc.writeMem(0x4968, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0x496a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 030B
        gbc.setState(0x621f, 0x69e7, 0x8ba0, 0x8f41, 0x4228, 0xa735, 0x1, 0x1);
        gbc.writeMem(0x621f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x69e7);
        EXPECT(gbc.pc(), 0x6221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 030C
        gbc.setState(0xa946, 0xc4d1, 0x26c0, 0x9249, 0x4359, 0xf96d, 0x1, 0x0);
        gbc.writeMem(0xa946, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc4d1);
        EXPECT(gbc.pc(), 0xa948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa946), 0xcb);
        EXPECT(gbc.readMem(0xa947), 0xe1);
        // CB E1 030D
        gbc.setState(0x66c6, 0xbc07, 0x74d0, 0x52ad, 0xe452, 0x2b3b, 0x0, 0x1);
        gbc.writeMem(0x66c6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbc07);
        EXPECT(gbc.pc(), 0x66c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 030E
        gbc.setState(0xb795, 0x88e6, 0x55a0, 0x40b6, 0xb1fc, 0x2a1c, 0x0, 0x0);
        gbc.writeMem(0xb795, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x88e6);
        EXPECT(gbc.pc(), 0xb797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb795), 0xcb);
        EXPECT(gbc.readMem(0xb796), 0xe1);
        // CB E1 030F
        gbc.setState(0x281e, 0x4660, 0xd330, 0x4658, 0x6455, 0xf035, 0x1, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4660);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0310
        gbc.setState(0x40d0, 0xc78, 0x6e10, 0x8f6d, 0x94ac, 0x4b3a, 0x1, 0x0);
        gbc.writeMem(0x40d0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc78);
        EXPECT(gbc.pc(), 0x40d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0311
        gbc.setState(0xdb59, 0xdf80, 0x1490, 0x47d9, 0x80c7, 0xcf9a, 0x0, 0x0);
        gbc.writeMem(0xdb59, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdf80);
        EXPECT(gbc.pc(), 0xdb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb59), 0xcb);
        EXPECT(gbc.readMem(0xdb5a), 0xe1);
        // CB E1 0312
        gbc.setState(0x55ec, 0x9eb8, 0x5bf0, 0x62a, 0xf38a, 0x5827, 0x1, 0x1);
        gbc.writeMem(0x55ec, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9eb8);
        EXPECT(gbc.pc(), 0x55ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0315
        gbc.setState(0x12c3, 0x6823, 0xcc60, 0xe987, 0x73df, 0xdc45, 0x0, 0x0);
        gbc.writeMem(0x12c3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6823);
        EXPECT(gbc.pc(), 0x12c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0316
        gbc.setState(0x895b, 0xf681, 0xe930, 0x4132, 0x2f0b, 0x2307, 0x0, 0x0);
        gbc.writeMem(0x895b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf681);
        EXPECT(gbc.pc(), 0x895d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895b), 0xcb);
        EXPECT(gbc.readMem(0x895c), 0xe1);
        // CB E1 0317
        gbc.setState(0x3e56, 0x6a21, 0xfb10, 0xee74, 0x43d6, 0x9b6d, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6a21);
        EXPECT(gbc.pc(), 0x3e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0318
        gbc.setState(0xef4e, 0x444a, 0xf1f0, 0xb223, 0x5ffe, 0x494, 0x0, 0x1);
        gbc.writeMem(0xef4e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x444a);
        EXPECT(gbc.pc(), 0xef50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4e), 0xcb);
        EXPECT(gbc.readMem(0xef4f), 0xe1);
        // CB E1 0319
        gbc.setState(0xbe11, 0x59f6, 0xa770, 0x2e8b, 0x70fd, 0x87c0, 0x0, 0x0);
        gbc.writeMem(0xbe11, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0xbe13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0xe1);
        // CB E1 031A
        gbc.setState(0xe158, 0x168e, 0xe850, 0xb6ac, 0x5d2a, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0xe158, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x168e);
        EXPECT(gbc.pc(), 0xe15a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe158), 0xcb);
        EXPECT(gbc.readMem(0xe159), 0xe1);
        // CB E1 031B
        gbc.setState(0xaf19, 0xf161, 0x8e10, 0xe5f6, 0x6e22, 0x804f, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0xaf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf19), 0xcb);
        EXPECT(gbc.readMem(0xaf1a), 0xe1);
        // CB E1 031C
        gbc.setState(0xbc7a, 0x59c5, 0x6cb0, 0x8eb2, 0x60f3, 0xdd37, 0x1, 0x0);
        gbc.writeMem(0xbc7a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x59c5);
        EXPECT(gbc.pc(), 0xbc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7a), 0xcb);
        EXPECT(gbc.readMem(0xbc7b), 0xe1);
        // CB E1 031D
        gbc.setState(0x38a6, 0xee0c, 0x6e50, 0x79f3, 0x9a15, 0xb83e, 0x0, 0x0);
        gbc.writeMem(0x38a6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xee0c);
        EXPECT(gbc.pc(), 0x38a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 031E
        gbc.setState(0x1366, 0xcea1, 0x4b20, 0xa945, 0x67e0, 0xcee1, 0x0, 0x1);
        gbc.writeMem(0x1366, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcea1);
        EXPECT(gbc.pc(), 0x1368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 031F
        gbc.setState(0x5e92, 0x31dc, 0xb4a0, 0xa91d, 0x4b82, 0x6301, 0x0, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0x5e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0320
        gbc.setState(0x21f9, 0x216d, 0x9c20, 0xa, 0x6ef6, 0xc2b6, 0x1, 0x0);
        gbc.writeMem(0x21f9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x216d);
        EXPECT(gbc.pc(), 0x21fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0321
        gbc.setState(0x30be, 0x49ca, 0x8fb0, 0x3a5c, 0x5c9e, 0xef65, 0x1, 0x0);
        gbc.writeMem(0x30be, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x49ca);
        EXPECT(gbc.pc(), 0x30c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0322
        gbc.setState(0xe7b4, 0xaa18, 0x8880, 0x824c, 0xe2ad, 0xf4a6, 0x0, 0x1);
        gbc.writeMem(0xe7b4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaa18);
        EXPECT(gbc.pc(), 0xe7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b4), 0xcb);
        EXPECT(gbc.readMem(0xe7b5), 0xe1);
        // CB E1 0323
        gbc.setState(0x1cb2, 0x8c52, 0xeaf0, 0xab66, 0x216d, 0x45c5, 0x1, 0x0);
        gbc.writeMem(0x1cb2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8c52);
        EXPECT(gbc.pc(), 0x1cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0324
        gbc.setState(0x6379, 0x8f13, 0x79b0, 0xc762, 0x28ea, 0x7ac, 0x0, 0x1);
        gbc.writeMem(0x6379, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8f13);
        EXPECT(gbc.pc(), 0x637b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0325
        gbc.setState(0x4b70, 0xf78d, 0x8340, 0xfb75, 0xc116, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0x4b70, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf78d);
        EXPECT(gbc.pc(), 0x4b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0326
        gbc.setState(0xb906, 0x48d8, 0xe370, 0xd77e, 0xc91b, 0x2400, 0x0, 0x0);
        gbc.writeMem(0xb906, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x48d8);
        EXPECT(gbc.pc(), 0xb908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb906), 0xcb);
        EXPECT(gbc.readMem(0xb907), 0xe1);
        // CB E1 0327
        gbc.setState(0x3b7a, 0x1965, 0xd00, 0x5894, 0xa987, 0xa21, 0x1, 0x1);
        gbc.writeMem(0x3b7a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1965);
        EXPECT(gbc.pc(), 0x3b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0328
        gbc.setState(0x2324, 0xf3b3, 0xf950, 0x3e34, 0xb9b5, 0x47cc, 0x0, 0x1);
        gbc.writeMem(0x2324, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf3b3);
        EXPECT(gbc.pc(), 0x2326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0329
        gbc.setState(0x3246, 0x204, 0x7670, 0x2778, 0xd0d5, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0x3246, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x3248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 032A
        gbc.setState(0xd1a3, 0x6cdf, 0xfb0, 0x1ae2, 0x99ac, 0xe00e, 0x0, 0x1);
        gbc.writeMem(0xd1a3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6cdf);
        EXPECT(gbc.pc(), 0xd1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a3), 0xcb);
        EXPECT(gbc.readMem(0xd1a4), 0xe1);
        // CB E1 032B
        gbc.setState(0x92b0, 0x2193, 0xdc50, 0xeac3, 0x24b, 0xe8e4, 0x1, 0x0);
        gbc.writeMem(0x92b0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2193);
        EXPECT(gbc.pc(), 0x92b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b0), 0xcb);
        EXPECT(gbc.readMem(0x92b1), 0xe1);
        // CB E1 032C
        gbc.setState(0xbb64, 0x1a80, 0xdbb0, 0x665, 0x5694, 0xd7cf, 0x0, 0x1);
        gbc.writeMem(0xbb64, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1a80);
        EXPECT(gbc.pc(), 0xbb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb64), 0xcb);
        EXPECT(gbc.readMem(0xbb65), 0xe1);
        // CB E1 032D
        gbc.setState(0x3d3e, 0x170d, 0xbc80, 0x8783, 0x4b69, 0x14d0, 0x0, 0x0);
        gbc.writeMem(0x3d3e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x170d);
        EXPECT(gbc.pc(), 0x3d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 032F
        gbc.setState(0x197f, 0xfe2d, 0x6ba0, 0x72fb, 0x62d, 0x4445, 0x1, 0x0);
        gbc.writeMem(0x197f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfe2d);
        EXPECT(gbc.pc(), 0x1981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0330
        gbc.setState(0x16f2, 0xbd49, 0xe870, 0x14d6, 0xd190, 0x8243, 0x0, 0x0);
        gbc.writeMem(0x16f2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbd49);
        EXPECT(gbc.pc(), 0x16f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0331
        gbc.setState(0x9c82, 0xdd00, 0xa170, 0xc445, 0xbd1c, 0xdd7f, 0x0, 0x1);
        gbc.writeMem(0x9c82, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdd00);
        EXPECT(gbc.pc(), 0x9c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c82), 0xcb);
        EXPECT(gbc.readMem(0x9c83), 0xe1);
        // CB E1 0332
        gbc.setState(0x54fd, 0x1cb5, 0x5b60, 0xd4e9, 0x75bf, 0x177f, 0x0, 0x0);
        gbc.writeMem(0x54fd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1cb5);
        EXPECT(gbc.pc(), 0x54ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0333
        gbc.setState(0xe8f2, 0x842f, 0x7a30, 0x738f, 0xc6ac, 0xc127, 0x1, 0x0);
        gbc.writeMem(0xe8f2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0xe8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f2), 0xcb);
        EXPECT(gbc.readMem(0xe8f3), 0xe1);
        // CB E1 0334
        gbc.setState(0x9fc7, 0xb2e5, 0x86b0, 0xd770, 0xc0cd, 0x4f66, 0x1, 0x0);
        gbc.writeMem(0x9fc7, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb2e5);
        EXPECT(gbc.pc(), 0x9fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc7), 0xcb);
        EXPECT(gbc.readMem(0x9fc8), 0xe1);
        // CB E1 0335
        gbc.setState(0x1ad3, 0xc0df, 0x8320, 0x9582, 0x1cec, 0xc159, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc0df);
        EXPECT(gbc.pc(), 0x1ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0336
        gbc.setState(0x579, 0x6b22, 0x3270, 0xa301, 0x6138, 0xe8cf, 0x1, 0x0);
        gbc.writeMem(0x579, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6b22);
        EXPECT(gbc.pc(), 0x57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0337
        gbc.setState(0x355d, 0xf233, 0x9150, 0xd36c, 0x248, 0x5f58, 0x0, 0x1);
        gbc.writeMem(0x355d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf233);
        EXPECT(gbc.pc(), 0x355f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0338
        gbc.setState(0x4b67, 0xea8c, 0xc1d0, 0x92b2, 0x2fc6, 0x854e, 0x0, 0x1);
        gbc.writeMem(0x4b67, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xea8c);
        EXPECT(gbc.pc(), 0x4b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0339
        gbc.setState(0x458c, 0x3f93, 0x9cd0, 0xb50f, 0xef16, 0xec61, 0x1, 0x1);
        gbc.writeMem(0x458c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3f93);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 033A
        gbc.setState(0x650, 0x1f2b, 0xb910, 0x778e, 0x6b09, 0x6ab8, 0x0, 0x1);
        gbc.writeMem(0x650, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1f2b);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 033B
        gbc.setState(0xa02f, 0xc93, 0xe5d0, 0xfb8d, 0x74f1, 0xc572, 0x1, 0x0);
        gbc.writeMem(0xa02f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc93);
        EXPECT(gbc.pc(), 0xa031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02f), 0xcb);
        EXPECT(gbc.readMem(0xa030), 0xe1);
        // CB E1 033C
        gbc.setState(0x5fdc, 0xfbef, 0xc8b0, 0xc2a7, 0x4e40, 0xe9e4, 0x1, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 033D
        gbc.setState(0xd137, 0x82cc, 0xcf60, 0x402e, 0xebe2, 0x652e, 0x0, 0x0);
        gbc.writeMem(0xd137, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x82cc);
        EXPECT(gbc.pc(), 0xd139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd137), 0xcb);
        EXPECT(gbc.readMem(0xd138), 0xe1);
        // CB E1 033E
        gbc.setState(0x2699, 0x9659, 0xfc90, 0xd0db, 0xdfa, 0x9ce, 0x1, 0x1);
        gbc.writeMem(0x2699, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9659);
        EXPECT(gbc.pc(), 0x269b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 033F
        gbc.setState(0xcdda, 0x737c, 0x5280, 0xc547, 0x2511, 0x5f9c, 0x1, 0x1);
        gbc.writeMem(0xcdda, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x737c);
        EXPECT(gbc.pc(), 0xcddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdda), 0xcb);
        EXPECT(gbc.readMem(0xcddb), 0xe1);
        // CB E1 0340
        gbc.setState(0x428b, 0xcbe3, 0xa050, 0x4bfd, 0xc792, 0xa83, 0x0, 0x1);
        gbc.writeMem(0x428b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcbe3);
        EXPECT(gbc.pc(), 0x428d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0341
        gbc.setState(0xa355, 0xd89b, 0xd590, 0x11cc, 0xbcba, 0x307c, 0x1, 0x0);
        gbc.writeMem(0xa355, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd89b);
        EXPECT(gbc.pc(), 0xa357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa355), 0xcb);
        EXPECT(gbc.readMem(0xa356), 0xe1);
        // CB E1 0342
        gbc.setState(0x2538, 0xa49f, 0x1be0, 0x2f5, 0x2adc, 0xbcaf, 0x0, 0x0);
        gbc.writeMem(0x2538, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa49f);
        EXPECT(gbc.pc(), 0x253a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0343
        gbc.setState(0xd0ac, 0x7a9a, 0x1e00, 0x21a8, 0x9a1b, 0x6d8, 0x1, 0x1);
        gbc.writeMem(0xd0ac, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7a9a);
        EXPECT(gbc.pc(), 0xd0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ac), 0xcb);
        EXPECT(gbc.readMem(0xd0ad), 0xe1);
        // CB E1 0344
        gbc.setState(0x9224, 0x1c42, 0xd100, 0x6537, 0x947f, 0x51a4, 0x0, 0x0);
        gbc.writeMem(0x9224, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1c42);
        EXPECT(gbc.pc(), 0x9226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9224), 0xcb);
        EXPECT(gbc.readMem(0x9225), 0xe1);
        // CB E1 0345
        gbc.setState(0x1ffa, 0x4f8d, 0x3040, 0x3cbb, 0x41f4, 0xaf0a, 0x0, 0x1);
        gbc.writeMem(0x1ffa, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4f8d);
        EXPECT(gbc.pc(), 0x1ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0347
        gbc.setState(0xcf5d, 0x9c6c, 0x9e60, 0xf11b, 0xaa77, 0x12dc, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9c6c);
        EXPECT(gbc.pc(), 0xcf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5d), 0xcb);
        EXPECT(gbc.readMem(0xcf5e), 0xe1);
        // CB E1 0348
        gbc.setState(0x1516, 0x658, 0x5d30, 0x87ba, 0x3d77, 0x9021, 0x1, 0x1);
        gbc.writeMem(0x1516, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x658);
        EXPECT(gbc.pc(), 0x1518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 034A
        gbc.setState(0x768c, 0x2a63, 0xd260, 0x70d2, 0x95de, 0x54be, 0x1, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2a63);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 034B
        gbc.setState(0xb1e2, 0xfa41, 0xb400, 0x6d67, 0xde12, 0x9191, 0x0, 0x0);
        gbc.writeMem(0xb1e2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfa41);
        EXPECT(gbc.pc(), 0xb1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e2), 0xcb);
        EXPECT(gbc.readMem(0xb1e3), 0xe1);
        // CB E1 034C
        gbc.setState(0x29d, 0xf6d6, 0x5cd0, 0x990d, 0xcaa7, 0x2c19, 0x1, 0x1);
        gbc.writeMem(0x29d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf6d6);
        EXPECT(gbc.pc(), 0x29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 034D
        gbc.setState(0x102e, 0x6335, 0x8b0, 0xd5e8, 0x56cf, 0x9c89, 0x0, 0x0);
        gbc.writeMem(0x102e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6335);
        EXPECT(gbc.pc(), 0x1030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 034E
        gbc.setState(0xba20, 0x91d3, 0xdae0, 0x415, 0xdc09, 0x637, 0x1, 0x0);
        gbc.writeMem(0xba20, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0xba22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba20), 0xcb);
        EXPECT(gbc.readMem(0xba21), 0xe1);
        // CB E1 034F
        gbc.setState(0xb3f9, 0x91d5, 0x3350, 0x854f, 0x7bc6, 0xdc2, 0x1, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x91d5);
        EXPECT(gbc.pc(), 0xb3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f9), 0xcb);
        EXPECT(gbc.readMem(0xb3fa), 0xe1);
        // CB E1 0350
        gbc.setState(0x7194, 0x893e, 0xfa60, 0x55b0, 0x5e27, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0x7194, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x893e);
        EXPECT(gbc.pc(), 0x7196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0351
        gbc.setState(0x1b01, 0x30fb, 0x2200, 0x8e16, 0xa897, 0xd892, 0x0, 0x1);
        gbc.writeMem(0x1b01, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x30fb);
        EXPECT(gbc.pc(), 0x1b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0352
        gbc.setState(0x13e5, 0x63ec, 0x7a40, 0xe77e, 0x6f06, 0x6974, 0x0, 0x0);
        gbc.writeMem(0x13e5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x63ec);
        EXPECT(gbc.pc(), 0x13e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0353
        gbc.setState(0x4c0f, 0xbc02, 0x9a40, 0x234a, 0x8339, 0x22b7, 0x1, 0x0);
        gbc.writeMem(0x4c0f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbc02);
        EXPECT(gbc.pc(), 0x4c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0354
        gbc.setState(0x316f, 0x64fa, 0x88c0, 0x4ed8, 0xb67f, 0xdab, 0x1, 0x0);
        gbc.writeMem(0x316f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x64fa);
        EXPECT(gbc.pc(), 0x3171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0355
        gbc.setState(0xe504, 0xf7b6, 0x8290, 0x5283, 0x784d, 0x3f5c, 0x1, 0x0);
        gbc.writeMem(0xe504, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf7b6);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0xe1);
        // CB E1 0356
        gbc.setState(0xf8d, 0x9db6, 0xbc20, 0x3fe3, 0xbfbd, 0x50f2, 0x1, 0x0);
        gbc.writeMem(0xf8d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9db6);
        EXPECT(gbc.pc(), 0xf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0357
        gbc.setState(0x5572, 0xbd92, 0x21a0, 0xa2cb, 0xa201, 0xba71, 0x1, 0x1);
        gbc.writeMem(0x5572, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbd92);
        EXPECT(gbc.pc(), 0x5574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0358
        gbc.setState(0xc4bf, 0xf1a1, 0xda0, 0x84a8, 0x79c5, 0x272, 0x1, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf1a1);
        EXPECT(gbc.pc(), 0xc4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bf), 0xcb);
        EXPECT(gbc.readMem(0xc4c0), 0xe1);
        // CB E1 0359
        gbc.setState(0xc728, 0x770, 0x61e0, 0x8308, 0x2b1e, 0x1b07, 0x0, 0x0);
        gbc.writeMem(0xc728, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x770);
        EXPECT(gbc.pc(), 0xc72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc728), 0xcb);
        EXPECT(gbc.readMem(0xc729), 0xe1);
        // CB E1 035A
        gbc.setState(0xe927, 0x1f5, 0x1590, 0xfaa9, 0x112c, 0x1d58, 0x0, 0x1);
        gbc.writeMem(0xe927, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1f5);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe927), 0xcb);
        EXPECT(gbc.readMem(0xe928), 0xe1);
        // CB E1 035B
        gbc.setState(0xd0a3, 0x381b, 0x6940, 0xaf5f, 0x8e04, 0x8c59, 0x0, 0x0);
        gbc.writeMem(0xd0a3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x381b);
        EXPECT(gbc.pc(), 0xd0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a3), 0xcb);
        EXPECT(gbc.readMem(0xd0a4), 0xe1);
        // CB E1 035C
        gbc.setState(0x1b52, 0x7a25, 0x3990, 0x5312, 0x8fd3, 0xf11f, 0x1, 0x0);
        gbc.writeMem(0x1b52, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7a25);
        EXPECT(gbc.pc(), 0x1b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 035D
        gbc.setState(0x99c9, 0xde0f, 0xe6d0, 0x9d26, 0x5772, 0x459c, 0x1, 0x1);
        gbc.writeMem(0x99c9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xde0f);
        EXPECT(gbc.pc(), 0x99cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c9), 0xcb);
        EXPECT(gbc.readMem(0x99ca), 0xe1);
        // CB E1 035E
        gbc.setState(0x6a74, 0x3c33, 0xcaf0, 0xaabf, 0x74fa, 0xe904, 0x0, 0x0);
        gbc.writeMem(0x6a74, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3c33);
        EXPECT(gbc.pc(), 0x6a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 035F
        gbc.setState(0x524f, 0x3bba, 0xee50, 0x4c97, 0xa8be, 0x6201, 0x1, 0x0);
        gbc.writeMem(0x524f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3bba);
        EXPECT(gbc.pc(), 0x5251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0360
        gbc.setState(0x9192, 0x2a2e, 0x9ec0, 0x3c45, 0x7adf, 0xb286, 0x0, 0x0);
        gbc.writeMem(0x9192, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2a2e);
        EXPECT(gbc.pc(), 0x9194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9192), 0xcb);
        EXPECT(gbc.readMem(0x9193), 0xe1);
        // CB E1 0362
        gbc.setState(0x1374, 0xafa0, 0x6a90, 0x6ad0, 0xbfef, 0x5c59, 0x1, 0x0);
        gbc.writeMem(0x1374, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xafa0);
        EXPECT(gbc.pc(), 0x1376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0363
        gbc.setState(0x9733, 0x723e, 0x11f0, 0x4f7c, 0xda33, 0x99b8, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x723e);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9733), 0xcb);
        EXPECT(gbc.readMem(0x9734), 0xe1);
        // CB E1 0364
        gbc.setState(0x54c3, 0x99b1, 0xb760, 0x6952, 0xdd10, 0x3383, 0x0, 0x0);
        gbc.writeMem(0x54c3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x99b1);
        EXPECT(gbc.pc(), 0x54c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0365
        gbc.setState(0x564c, 0xc04b, 0x2bb0, 0xa29e, 0xc574, 0x12e0, 0x0, 0x0);
        gbc.writeMem(0x564c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc04b);
        EXPECT(gbc.pc(), 0x564e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0366
        gbc.setState(0xb9e4, 0x93f7, 0x4e90, 0x8f77, 0xa675, 0x7a06, 0x1, 0x0);
        gbc.writeMem(0xb9e4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0xb9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e4), 0xcb);
        EXPECT(gbc.readMem(0xb9e5), 0xe1);
        // CB E1 0367
        gbc.setState(0x292, 0x7929, 0x0, 0x3673, 0xb333, 0x383c, 0x1, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7929);
        EXPECT(gbc.pc(), 0x294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0368
        gbc.setState(0xc5af, 0xc466, 0x8c0, 0xcdaf, 0x36c7, 0xc6d9, 0x0, 0x0);
        gbc.writeMem(0xc5af, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc466);
        EXPECT(gbc.pc(), 0xc5b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5af), 0xcb);
        EXPECT(gbc.readMem(0xc5b0), 0xe1);
        // CB E1 0369
        gbc.setState(0x19f5, 0xf4da, 0x7e30, 0x49c7, 0xde90, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x19f5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf4da);
        EXPECT(gbc.pc(), 0x19f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 036A
        gbc.setState(0x3ac3, 0xf016, 0xe290, 0x66d3, 0x9ec9, 0x7f2d, 0x1, 0x1);
        gbc.writeMem(0x3ac3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 036C
        gbc.setState(0x6c8e, 0x901d, 0x450, 0x79d8, 0x3358, 0x5341, 0x0, 0x0);
        gbc.writeMem(0x6c8e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0x6c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 036D
        gbc.setState(0xd3bf, 0xc5ce, 0x5a10, 0x3b2a, 0xd68d, 0xcdbe, 0x0, 0x1);
        gbc.writeMem(0xd3bf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc5ce);
        EXPECT(gbc.pc(), 0xd3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3bf), 0xcb);
        EXPECT(gbc.readMem(0xd3c0), 0xe1);
        // CB E1 036E
        gbc.setState(0x47dc, 0xeef7, 0x9ae0, 0x427f, 0x3121, 0x85e7, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xeef7);
        EXPECT(gbc.pc(), 0x47de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 036F
        gbc.setState(0x2a9, 0x81aa, 0x7da0, 0xad95, 0xf59b, 0x8bb9, 0x1, 0x0);
        gbc.writeMem(0x2a9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x81aa);
        EXPECT(gbc.pc(), 0x2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0370
        gbc.setState(0x1898, 0xf54e, 0xa920, 0x1940, 0xb916, 0x8444, 0x0, 0x1);
        gbc.writeMem(0x1898, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf54e);
        EXPECT(gbc.pc(), 0x189a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0371
        gbc.setState(0xbf9b, 0xe864, 0x6f60, 0x3bc8, 0x8297, 0x1839, 0x1, 0x1);
        gbc.writeMem(0xbf9b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe864);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0xe1);
        // CB E1 0372
        gbc.setState(0x7eda, 0x1b10, 0xb520, 0xa681, 0xe0c5, 0x475f, 0x0, 0x1);
        gbc.writeMem(0x7eda, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1b10);
        EXPECT(gbc.pc(), 0x7edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0373
        gbc.setState(0x732b, 0xf1bf, 0xe960, 0x3269, 0x182d, 0x746, 0x1, 0x0);
        gbc.writeMem(0x732b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf1bf);
        EXPECT(gbc.pc(), 0x732d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0374
        gbc.setState(0xd61e, 0x4b26, 0x4800, 0x6f87, 0x7f98, 0xe7e6, 0x0, 0x0);
        gbc.writeMem(0xd61e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4b26);
        EXPECT(gbc.pc(), 0xd620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61e), 0xcb);
        EXPECT(gbc.readMem(0xd61f), 0xe1);
        // CB E1 0375
        gbc.setState(0x6a9f, 0xffe8, 0xc4f0, 0xf66d, 0x9eb4, 0xba26, 0x1, 0x0);
        gbc.writeMem(0x6a9f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xffe8);
        EXPECT(gbc.pc(), 0x6aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0376
        gbc.setState(0x6290, 0x735, 0x5f10, 0xbb85, 0x374b, 0x8d02, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x735);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0377
        gbc.setState(0xc89, 0xb2bd, 0x3db0, 0x74e4, 0xf6fa, 0x3442, 0x1, 0x1);
        gbc.writeMem(0xc89, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb2bd);
        EXPECT(gbc.pc(), 0xc8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0378
        gbc.setState(0x15bd, 0xd578, 0xbbd0, 0x1f23, 0x19fb, 0x5b5, 0x1, 0x0);
        gbc.writeMem(0x15bd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd578);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0379
        gbc.setState(0x7dab, 0xdfa2, 0x34c0, 0x887f, 0xd97b, 0xe431, 0x0, 0x1);
        gbc.writeMem(0x7dab, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdfa2);
        EXPECT(gbc.pc(), 0x7dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 037A
        gbc.setState(0x2a5d, 0xf1ca, 0xb580, 0x5812, 0x26f2, 0xa7d7, 0x1, 0x0);
        gbc.writeMem(0x2a5d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf1ca);
        EXPECT(gbc.pc(), 0x2a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 037B
        gbc.setState(0x16f1, 0x6e78, 0x21f0, 0x6737, 0xe3f4, 0xb812, 0x1, 0x0);
        gbc.writeMem(0x16f1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6e78);
        EXPECT(gbc.pc(), 0x16f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 037C
        gbc.setState(0x50b6, 0xd236, 0x9e90, 0xde7, 0x530a, 0x506c, 0x0, 0x1);
        gbc.writeMem(0x50b6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd236);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 037D
        gbc.setState(0x3af1, 0x6c8f, 0x8420, 0x8024, 0x505b, 0x3dc3, 0x1, 0x0);
        gbc.writeMem(0x3af1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6c8f);
        EXPECT(gbc.pc(), 0x3af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 037E
        gbc.setState(0xd043, 0x4380, 0x8b50, 0x6bec, 0x1239, 0x3769, 0x1, 0x0);
        gbc.writeMem(0xd043, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4380);
        EXPECT(gbc.pc(), 0xd045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd043), 0xcb);
        EXPECT(gbc.readMem(0xd044), 0xe1);
        // CB E1 037F
        gbc.setState(0x9f96, 0x8740, 0xd4b0, 0x76a1, 0x92e5, 0xe0a5, 0x0, 0x1);
        gbc.writeMem(0x9f96, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8740);
        EXPECT(gbc.pc(), 0x9f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f96), 0xcb);
        EXPECT(gbc.readMem(0x9f97), 0xe1);
        // CB E1 0380
        gbc.setState(0xd0e6, 0x84bb, 0x9130, 0x65d9, 0x7cee, 0xea92, 0x0, 0x0);
        gbc.writeMem(0xd0e6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x84bb);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e6), 0xcb);
        EXPECT(gbc.readMem(0xd0e7), 0xe1);
        // CB E1 0381
        gbc.setState(0x1685, 0xbc96, 0x7920, 0x2538, 0xd0c6, 0xc62, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbc96);
        EXPECT(gbc.pc(), 0x1687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0382
        gbc.setState(0xc38d, 0x76fd, 0xf00, 0xb765, 0x178f, 0xe0f1, 0x1, 0x1);
        gbc.writeMem(0xc38d, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x76fd);
        EXPECT(gbc.pc(), 0xc38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc38d), 0xcb);
        EXPECT(gbc.readMem(0xc38e), 0xe1);
        // CB E1 0383
        gbc.setState(0x646b, 0x4b05, 0x41e0, 0x69fe, 0x1cec, 0x43c8, 0x1, 0x1);
        gbc.writeMem(0x646b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4b05);
        EXPECT(gbc.pc(), 0x646d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0384
        gbc.setState(0xb738, 0x8ff7, 0x59f0, 0x6e2f, 0x5e90, 0xca80, 0x1, 0x0);
        gbc.writeMem(0xb738, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8ff7);
        EXPECT(gbc.pc(), 0xb73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb738), 0xcb);
        EXPECT(gbc.readMem(0xb739), 0xe1);
        // CB E1 0385
        gbc.setState(0xade, 0x918a, 0xcd10, 0x65d5, 0x3e2, 0xa618, 0x0, 0x1);
        gbc.writeMem(0xade, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x918a);
        EXPECT(gbc.pc(), 0xae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0386
        gbc.setState(0x419b, 0xf85c, 0xb20, 0x8714, 0x2298, 0xf2b6, 0x0, 0x1);
        gbc.writeMem(0x419b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf85c);
        EXPECT(gbc.pc(), 0x419d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0387
        gbc.setState(0x7df2, 0x9cc6, 0x4c0, 0x260a, 0xe5af, 0xf51d, 0x0, 0x0);
        gbc.writeMem(0x7df2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9cc6);
        EXPECT(gbc.pc(), 0x7df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0388
        gbc.setState(0x8545, 0xd815, 0xd4b0, 0x9960, 0xcdcb, 0xc26e, 0x1, 0x1);
        gbc.writeMem(0x8545, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0x8547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8545), 0xcb);
        EXPECT(gbc.readMem(0x8546), 0xe1);
        // CB E1 0389
        gbc.setState(0xdd61, 0x87a5, 0x20b0, 0x8390, 0x78b0, 0xb13a, 0x1, 0x1);
        gbc.writeMem(0xdd61, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x87a5);
        EXPECT(gbc.pc(), 0xdd63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd61), 0xcb);
        EXPECT(gbc.readMem(0xdd62), 0xe1);
        // CB E1 038A
        gbc.setState(0x128, 0x9e1a, 0x4cd0, 0x1391, 0x407e, 0x3975, 0x1, 0x1);
        gbc.writeMem(0x128, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9e1a);
        EXPECT(gbc.pc(), 0x12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 038B
        gbc.setState(0x1ec9, 0x2112, 0x6f70, 0x4dd4, 0xcf17, 0x8172, 0x1, 0x1);
        gbc.writeMem(0x1ec9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2112);
        EXPECT(gbc.pc(), 0x1ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 038C
        gbc.setState(0xae42, 0x576d, 0x8bc0, 0x4638, 0x281a, 0x4f7d, 0x0, 0x0);
        gbc.writeMem(0xae42, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x576d);
        EXPECT(gbc.pc(), 0xae44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0xcb);
        EXPECT(gbc.readMem(0xae43), 0xe1);
        // CB E1 038D
        gbc.setState(0xee4a, 0xd58a, 0x4c20, 0x5748, 0x61c8, 0xe13f, 0x1, 0x1);
        gbc.writeMem(0xee4a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0xee4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0xcb);
        EXPECT(gbc.readMem(0xee4b), 0xe1);
        // CB E1 038E
        gbc.setState(0x6716, 0x3827, 0xd660, 0xd637, 0x81fb, 0xe8f1, 0x0, 0x0);
        gbc.writeMem(0x6716, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3827);
        EXPECT(gbc.pc(), 0x6718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 038F
        gbc.setState(0xcf39, 0x658f, 0xda70, 0x3d3f, 0x9924, 0x1021, 0x0, 0x1);
        gbc.writeMem(0xcf39, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x658f);
        EXPECT(gbc.pc(), 0xcf3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf39), 0xcb);
        EXPECT(gbc.readMem(0xcf3a), 0xe1);
        // CB E1 0390
        gbc.setState(0xd57a, 0x9aec, 0xe0d0, 0x2849, 0x79c9, 0xeee6, 0x0, 0x1);
        gbc.writeMem(0xd57a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9aec);
        EXPECT(gbc.pc(), 0xd57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57a), 0xcb);
        EXPECT(gbc.readMem(0xd57b), 0xe1);
        // CB E1 0391
        gbc.setState(0x3283, 0xfc5d, 0x2840, 0xe56b, 0xe6c2, 0x8658, 0x0, 0x0);
        gbc.writeMem(0x3283, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfc5d);
        EXPECT(gbc.pc(), 0x3285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0392
        gbc.setState(0x9cb5, 0xfc48, 0x7830, 0x3504, 0xec6d, 0xb311, 0x1, 0x0);
        gbc.writeMem(0x9cb5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfc48);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb5), 0xcb);
        EXPECT(gbc.readMem(0x9cb6), 0xe1);
        // CB E1 0393
        gbc.setState(0x86a2, 0x16c0, 0xcb60, 0x1f64, 0x9ccd, 0xa57e, 0x0, 0x1);
        gbc.writeMem(0x86a2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16c0);
        EXPECT(gbc.pc(), 0x86a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a2), 0xcb);
        EXPECT(gbc.readMem(0x86a3), 0xe1);
        // CB E1 0394
        gbc.setState(0xdffd, 0x681e, 0xf100, 0xb340, 0xe586, 0xb56, 0x1, 0x0);
        gbc.writeMem(0xdffd, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x681e);
        EXPECT(gbc.pc(), 0xdfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdffd), 0xcb);
        EXPECT(gbc.readMem(0xdffe), 0xe1);
        // CB E1 0395
        gbc.setState(0x64df, 0xc8f0, 0x970, 0xabc2, 0x53fb, 0xbd30, 0x1, 0x1);
        gbc.writeMem(0x64df, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc8f0);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0396
        gbc.setState(0x1a7e, 0x29b3, 0x7a10, 0x9ba2, 0x607c, 0xfef4, 0x1, 0x1);
        gbc.writeMem(0x1a7e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x29b3);
        EXPECT(gbc.pc(), 0x1a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0397
        gbc.setState(0x1cbc, 0xa725, 0xab80, 0x49d8, 0x74fb, 0xc8ff, 0x0, 0x1);
        gbc.writeMem(0x1cbc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x1cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 0398
        gbc.setState(0x6f00, 0xc911, 0xe8d0, 0x472f, 0x7326, 0x6cf3, 0x0, 0x0);
        gbc.writeMem(0x6f00, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc911);
        EXPECT(gbc.pc(), 0x6f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 0399
        gbc.setState(0xd063, 0xa7f2, 0x48e0, 0x20b0, 0x46fd, 0xbfdd, 0x1, 0x0);
        gbc.writeMem(0xd063, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa7f2);
        EXPECT(gbc.pc(), 0xd065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd063), 0xcb);
        EXPECT(gbc.readMem(0xd064), 0xe1);
        // CB E1 039B
        gbc.setState(0x5d9a, 0x75b, 0xb3f0, 0xc968, 0x172, 0x9603, 0x1, 0x1);
        gbc.writeMem(0x5d9a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x75b);
        EXPECT(gbc.pc(), 0x5d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 039C
        gbc.setState(0x804, 0xaee1, 0x3c60, 0xa2, 0x286c, 0x360f, 0x0, 0x0);
        gbc.writeMem(0x804, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaee1);
        EXPECT(gbc.pc(), 0x806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 039D
        gbc.setState(0xc233, 0x6463, 0x6970, 0xffaf, 0x7c23, 0x68d6, 0x1, 0x0);
        gbc.writeMem(0xc233, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6463);
        EXPECT(gbc.pc(), 0xc235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc233), 0xcb);
        EXPECT(gbc.readMem(0xc234), 0xe1);
        // CB E1 039E
        gbc.setState(0x8b4a, 0x7f11, 0xa350, 0x2367, 0x6214, 0xb33, 0x1, 0x0);
        gbc.writeMem(0x8b4a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7f11);
        EXPECT(gbc.pc(), 0x8b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4a), 0xcb);
        EXPECT(gbc.readMem(0x8b4b), 0xe1);
        // CB E1 039F
        gbc.setState(0x6a57, 0x4553, 0x2720, 0x4d49, 0xfa4, 0x9892, 0x0, 0x0);
        gbc.writeMem(0x6a57, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x6a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03A0
        gbc.setState(0x12ac, 0xcc21, 0xf2b0, 0xbdc0, 0xb025, 0x1047, 0x0, 0x1);
        gbc.writeMem(0x12ac, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcc21);
        EXPECT(gbc.pc(), 0x12ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03A1
        gbc.setState(0x8cc6, 0xe1ac, 0xd7d0, 0x8446, 0x1669, 0x5cf2, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe1ac);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0xe1);
        // CB E1 03A2
        gbc.setState(0x4e02, 0xdc43, 0x4620, 0x24cc, 0xad6d, 0x512d, 0x1, 0x1);
        gbc.writeMem(0x4e02, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdc43);
        EXPECT(gbc.pc(), 0x4e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03A3
        gbc.setState(0x9f31, 0xdbb0, 0x85d0, 0x22fb, 0x92e7, 0xa5c0, 0x0, 0x0);
        gbc.writeMem(0x9f31, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdbb0);
        EXPECT(gbc.pc(), 0x9f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f31), 0xcb);
        EXPECT(gbc.readMem(0x9f32), 0xe1);
        // CB E1 03A4
        gbc.setState(0xe51b, 0x56d8, 0xcf60, 0x9c28, 0x6d6f, 0xfada, 0x1, 0x0);
        gbc.writeMem(0xe51b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x56d8);
        EXPECT(gbc.pc(), 0xe51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51b), 0xcb);
        EXPECT(gbc.readMem(0xe51c), 0xe1);
        // CB E1 03A5
        gbc.setState(0x1db6, 0x8fa, 0x48b0, 0xec12, 0x46ca, 0x4048, 0x1, 0x0);
        gbc.writeMem(0x1db6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8fa);
        EXPECT(gbc.pc(), 0x1db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03A6
        gbc.setState(0xb19f, 0xf350, 0x7790, 0x7027, 0x9528, 0x582f, 0x0, 0x0);
        gbc.writeMem(0xb19f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf350);
        EXPECT(gbc.pc(), 0xb1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19f), 0xcb);
        EXPECT(gbc.readMem(0xb1a0), 0xe1);
        // CB E1 03A7
        gbc.setState(0x9d09, 0x5fe2, 0xd420, 0x750b, 0xe34e, 0x2896, 0x0, 0x1);
        gbc.writeMem(0x9d09, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5fe2);
        EXPECT(gbc.pc(), 0x9d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d09), 0xcb);
        EXPECT(gbc.readMem(0x9d0a), 0xe1);
        // CB E1 03A8
        gbc.setState(0xdd5, 0xfcfb, 0xcac0, 0xab90, 0x5c1e, 0x2888, 0x0, 0x1);
        gbc.writeMem(0xdd5, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfcfb);
        EXPECT(gbc.pc(), 0xdd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03A9
        gbc.setState(0xb392, 0x29f3, 0x5d00, 0xa697, 0x9629, 0x6247, 0x0, 0x1);
        gbc.writeMem(0xb392, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x29f3);
        EXPECT(gbc.pc(), 0xb394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb392), 0xcb);
        EXPECT(gbc.readMem(0xb393), 0xe1);
        // CB E1 03AA
        gbc.setState(0x7b5a, 0xb143, 0x4600, 0x3298, 0x8db8, 0x3147, 0x1, 0x1);
        gbc.writeMem(0x7b5a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb143);
        EXPECT(gbc.pc(), 0x7b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03AB
        gbc.setState(0xc503, 0x8d28, 0xf3e0, 0x57b7, 0x5c2, 0xe1b7, 0x1, 0x0);
        gbc.writeMem(0xc503, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8d28);
        EXPECT(gbc.pc(), 0xc505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc503), 0xcb);
        EXPECT(gbc.readMem(0xc504), 0xe1);
        // CB E1 03AC
        gbc.setState(0x71ff, 0xdd2d, 0x9ae0, 0x59fd, 0xb87c, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0x71ff, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdd2d);
        EXPECT(gbc.pc(), 0x7201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03AD
        gbc.setState(0xd5d1, 0x6e85, 0x6350, 0x4af, 0x496d, 0xd15e, 0x1, 0x1);
        gbc.writeMem(0xd5d1, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6e85);
        EXPECT(gbc.pc(), 0xd5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d1), 0xcb);
        EXPECT(gbc.readMem(0xd5d2), 0xe1);
        // CB E1 03AE
        gbc.setState(0x6947, 0x4912, 0xe380, 0x2b6e, 0x4f51, 0x6bbf, 0x0, 0x1);
        gbc.writeMem(0x6947, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4912);
        EXPECT(gbc.pc(), 0x6949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03AF
        gbc.setState(0x9426, 0x985d, 0x0, 0x4ad7, 0x20e7, 0xf45c, 0x1, 0x1);
        gbc.writeMem(0x9426, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x985d);
        EXPECT(gbc.pc(), 0x9428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9426), 0xcb);
        EXPECT(gbc.readMem(0x9427), 0xe1);
        // CB E1 03B0
        gbc.setState(0xe156, 0x3de0, 0x2f00, 0x5967, 0x2e0b, 0x5b6b, 0x1, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3de0);
        EXPECT(gbc.pc(), 0xe158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe156), 0xcb);
        EXPECT(gbc.readMem(0xe157), 0xe1);
        // CB E1 03B1
        gbc.setState(0x3043, 0x64c5, 0xdc30, 0x3368, 0xa695, 0xaeff, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x64c5);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03B2
        gbc.setState(0xc119, 0xca83, 0xab00, 0x7e34, 0x11d8, 0x4757, 0x0, 0x1);
        gbc.writeMem(0xc119, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0xc11b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc119), 0xcb);
        EXPECT(gbc.readMem(0xc11a), 0xe1);
        // CB E1 03B3
        gbc.setState(0x14ce, 0x4db4, 0x5760, 0x24a8, 0x76c9, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0x14ce, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4db4);
        EXPECT(gbc.pc(), 0x14d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03B4
        gbc.setState(0xb55f, 0x97a7, 0xa0a0, 0x9a47, 0xa9db, 0x7fce, 0x0, 0x1);
        gbc.writeMem(0xb55f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x97a7);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55f), 0xcb);
        EXPECT(gbc.readMem(0xb560), 0xe1);
        // CB E1 03B5
        gbc.setState(0xc619, 0x72ef, 0x7200, 0x2dc3, 0xc229, 0x7fb0, 0x0, 0x0);
        gbc.writeMem(0xc619, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x72ef);
        EXPECT(gbc.pc(), 0xc61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc619), 0xcb);
        EXPECT(gbc.readMem(0xc61a), 0xe1);
        // CB E1 03B6
        gbc.setState(0x2332, 0x2524, 0x9240, 0xf195, 0x57de, 0xa6b0, 0x0, 0x1);
        gbc.writeMem(0x2332, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2524);
        EXPECT(gbc.pc(), 0x2334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03B7
        gbc.setState(0x6248, 0x70af, 0x540, 0x77, 0x7605, 0xfb14, 0x1, 0x1);
        gbc.writeMem(0x6248, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x70af);
        EXPECT(gbc.pc(), 0x624a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03B8
        gbc.setState(0x5d5e, 0xe3c8, 0xe000, 0xcddd, 0xbe4d, 0x3cdb, 0x0, 0x1);
        gbc.writeMem(0x5d5e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0x5d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03B9
        gbc.setState(0x859c, 0x633d, 0x79c0, 0x9b21, 0x5b0e, 0xdfc9, 0x0, 0x1);
        gbc.writeMem(0x859c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x633d);
        EXPECT(gbc.pc(), 0x859e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0xcb);
        EXPECT(gbc.readMem(0x859d), 0xe1);
        // CB E1 03BA
        gbc.setState(0xebdb, 0x4a21, 0x41d0, 0x6af2, 0xbe66, 0xa792, 0x1, 0x1);
        gbc.writeMem(0xebdb, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4a21);
        EXPECT(gbc.pc(), 0xebdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdb), 0xcb);
        EXPECT(gbc.readMem(0xebdc), 0xe1);
        // CB E1 03BB
        gbc.setState(0x10ac, 0x6f3b, 0xbfb0, 0x658b, 0xc01e, 0x203a, 0x1, 0x0);
        gbc.writeMem(0x10ac, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6f3b);
        EXPECT(gbc.pc(), 0x10ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03BC
        gbc.setState(0xb75, 0x9407, 0x8d00, 0x697f, 0xef33, 0x7519, 0x0, 0x1);
        gbc.writeMem(0xb75, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9407);
        EXPECT(gbc.pc(), 0xb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03BD
        gbc.setState(0x5211, 0x2ae1, 0xff80, 0xa9c8, 0x145f, 0x498b, 0x1, 0x1);
        gbc.writeMem(0x5211, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2ae1);
        EXPECT(gbc.pc(), 0x5213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03BE
        gbc.setState(0x6c2a, 0x47b5, 0xf420, 0xecc2, 0x42a9, 0xb643, 0x0, 0x0);
        gbc.writeMem(0x6c2a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x47b5);
        EXPECT(gbc.pc(), 0x6c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03BF
        gbc.setState(0xfd3, 0x5296, 0x46a0, 0x1352, 0x7643, 0x8500, 0x0, 0x1);
        gbc.writeMem(0xfd3, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5296);
        EXPECT(gbc.pc(), 0xfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03C0
        gbc.setState(0x685b, 0xe895, 0xa3b0, 0x9a42, 0x145f, 0x3083, 0x1, 0x1);
        gbc.writeMem(0x685b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe895);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03C2
        gbc.setState(0xd190, 0xf45c, 0x8d0, 0x4eb5, 0x2494, 0x9c7b, 0x0, 0x1);
        gbc.writeMem(0xd190, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf45c);
        EXPECT(gbc.pc(), 0xd192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd190), 0xcb);
        EXPECT(gbc.readMem(0xd191), 0xe1);
        // CB E1 03C3
        gbc.setState(0x8b89, 0x3308, 0xe0, 0x96f9, 0xb0d5, 0xbc54, 0x1, 0x0);
        gbc.writeMem(0x8b89, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0x8b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b89), 0xcb);
        EXPECT(gbc.readMem(0x8b8a), 0xe1);
        // CB E1 03C4
        gbc.setState(0xb7c4, 0xcaf5, 0x3380, 0x8102, 0xd030, 0x2381, 0x1, 0x0);
        gbc.writeMem(0xb7c4, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcaf5);
        EXPECT(gbc.pc(), 0xb7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c4), 0xcb);
        EXPECT(gbc.readMem(0xb7c5), 0xe1);
        // CB E1 03C5
        gbc.setState(0x8683, 0xe492, 0x1fc0, 0x8f83, 0x7bd6, 0x8a13, 0x0, 0x0);
        gbc.writeMem(0x8683, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe492);
        EXPECT(gbc.pc(), 0x8685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8683), 0xcb);
        EXPECT(gbc.readMem(0x8684), 0xe1);
        // CB E1 03C6
        gbc.setState(0x46f6, 0x322d, 0xdb40, 0xa891, 0x1e77, 0xf60f, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0x46f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03C7
        gbc.setState(0x377f, 0xb46a, 0xa710, 0x85a7, 0xa654, 0x6507, 0x0, 0x1);
        gbc.writeMem(0x377f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb46a);
        EXPECT(gbc.pc(), 0x3781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03C8
        gbc.setState(0x4238, 0x5935, 0xca50, 0x22b3, 0xce64, 0xb96b, 0x0, 0x1);
        gbc.writeMem(0x4238, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5935);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03C9
        gbc.setState(0x343b, 0x1fbb, 0x7e10, 0x68ab, 0x2be9, 0xfa09, 0x1, 0x0);
        gbc.writeMem(0x343b, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1fbb);
        EXPECT(gbc.pc(), 0x343d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03CA
        gbc.setState(0x6c06, 0x9f88, 0xba0, 0x960b, 0x9692, 0xa643, 0x0, 0x1);
        gbc.writeMem(0x6c06, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9f88);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03CB
        gbc.setState(0x7c4a, 0xaf54, 0x2a0, 0xf9e9, 0x8f59, 0xd526, 0x0, 0x0);
        gbc.writeMem(0x7c4a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaf54);
        EXPECT(gbc.pc(), 0x7c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03CC
        gbc.setState(0x85dc, 0x7aa8, 0x7eb0, 0x2b75, 0x77aa, 0x659b, 0x1, 0x0);
        gbc.writeMem(0x85dc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7aa8);
        EXPECT(gbc.pc(), 0x85de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85dc), 0xcb);
        EXPECT(gbc.readMem(0x85dd), 0xe1);
        // CB E1 03CD
        gbc.setState(0x81ce, 0x420b, 0x7820, 0xbdc2, 0x4d19, 0x8f, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0x81d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ce), 0xcb);
        EXPECT(gbc.readMem(0x81cf), 0xe1);
        // CB E1 03CE
        gbc.setState(0x4656, 0xd9e1, 0x2320, 0x3d2f, 0x58, 0xdcc, 0x0, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd9e1);
        EXPECT(gbc.pc(), 0x4658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03CF
        gbc.setState(0xba7a, 0x6926, 0xf3c0, 0xe8fe, 0x3d01, 0xde89, 0x1, 0x1);
        gbc.writeMem(0xba7a, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6926);
        EXPECT(gbc.pc(), 0xba7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7a), 0xcb);
        EXPECT(gbc.readMem(0xba7b), 0xe1);
        // CB E1 03D0
        gbc.setState(0x74cc, 0x7ca9, 0xd1b0, 0xd8a4, 0x4e77, 0x6fa1, 0x0, 0x1);
        gbc.writeMem(0x74cc, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7ca9);
        EXPECT(gbc.pc(), 0x74ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03D2
        gbc.setState(0x8859, 0xd424, 0x9f10, 0xb8d4, 0x9e07, 0xd36c, 0x0, 0x1);
        gbc.writeMem(0x8859, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd424);
        EXPECT(gbc.pc(), 0x885b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8859), 0xcb);
        EXPECT(gbc.readMem(0x885a), 0xe1);
        // CB E1 03D3
        gbc.setState(0x501, 0x2920, 0xeab0, 0x6b92, 0x83db, 0x9325, 0x1, 0x1);
        gbc.writeMem(0x501, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2920);
        EXPECT(gbc.pc(), 0x503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03D5
        gbc.setState(0xdfe, 0xd1b5, 0x4b70, 0x14db, 0xdec2, 0xa99e, 0x1, 0x1);
        gbc.writeMem(0xdfe, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd1b5);
        EXPECT(gbc.pc(), 0xe00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03D6
        gbc.setState(0x4b11, 0xa393, 0xc550, 0xb15a, 0x443b, 0xce2b, 0x0, 0x1);
        gbc.writeMem(0x4b11, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0x4b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03D8
        gbc.setState(0x4a77, 0xe322, 0x1750, 0x632e, 0x9a10, 0xcd98, 0x1, 0x0);
        gbc.writeMem(0x4a77, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0x4a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03D9
        gbc.setState(0x9260, 0x981f, 0xf530, 0xdbce, 0x7982, 0x12e, 0x0, 0x1);
        gbc.writeMem(0x9260, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x981f);
        EXPECT(gbc.pc(), 0x9262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9260), 0xcb);
        EXPECT(gbc.readMem(0x9261), 0xe1);
        // CB E1 03DA
        gbc.setState(0xdadf, 0x5a99, 0x5910, 0xd3e, 0x50f0, 0x9bbd, 0x0, 0x0);
        gbc.writeMem(0xdadf, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5a99);
        EXPECT(gbc.pc(), 0xdae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdadf), 0xcb);
        EXPECT(gbc.readMem(0xdae0), 0xe1);
        // CB E1 03DB
        gbc.setState(0x68d9, 0x204a, 0xc690, 0x7f62, 0xe1b6, 0x7fa3, 0x0, 0x1);
        gbc.writeMem(0x68d9, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x204a);
        EXPECT(gbc.pc(), 0x68db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03DC
        gbc.setState(0x8f1f, 0xc5e5, 0x5b90, 0xc5a1, 0xdcad, 0x8931, 0x1, 0x1);
        gbc.writeMem(0x8f1f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc5e5);
        EXPECT(gbc.pc(), 0x8f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1f), 0xcb);
        EXPECT(gbc.readMem(0x8f20), 0xe1);
        // CB E1 03DD
        gbc.setState(0xd656, 0x14ef, 0x69a0, 0x1d0d, 0xc8c8, 0x27ef, 0x0, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x14ef);
        EXPECT(gbc.pc(), 0xd658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd656), 0xcb);
        EXPECT(gbc.readMem(0xd657), 0xe1);
        // CB E1 03DE
        gbc.setState(0x1323, 0xc0b5, 0xe950, 0x822a, 0x53b5, 0x8c03, 0x0, 0x0);
        gbc.writeMem(0x1323, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc0b5);
        EXPECT(gbc.pc(), 0x1325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03E1
        gbc.setState(0x6bb0, 0x95a6, 0x4f60, 0x6992, 0x2a36, 0x6970, 0x0, 0x0);
        gbc.writeMem(0x6bb0, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x95a6);
        EXPECT(gbc.pc(), 0x6bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03E2
        gbc.setState(0xeb1f, 0x337e, 0x7d80, 0xaca2, 0x4336, 0x97ae, 0x1, 0x1);
        gbc.writeMem(0xeb1f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x337e);
        EXPECT(gbc.pc(), 0xeb21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1f), 0xcb);
        EXPECT(gbc.readMem(0xeb20), 0xe1);
        // CB E1 03E3
        gbc.setState(0xa1c2, 0x9c13, 0x6600, 0xc302, 0x9c37, 0xc1c1, 0x1, 0x1);
        gbc.writeMem(0xa1c2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9c13);
        EXPECT(gbc.pc(), 0xa1c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c2), 0xcb);
        EXPECT(gbc.readMem(0xa1c3), 0xe1);
        // CB E1 03E4
        gbc.setState(0x1da2, 0x8821, 0xc80, 0xa3c2, 0x8b93, 0xc73, 0x1, 0x0);
        gbc.writeMem(0x1da2, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8821);
        EXPECT(gbc.pc(), 0x1da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E1 03E5
        gbc.setState(0xcf3e, 0xf3a, 0xa460, 0x9514, 0xa6ee, 0x199, 0x1, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf3a);
        EXPECT(gbc.pc(), 0xcf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3e), 0xcb);
        EXPECT(gbc.readMem(0xcf3f), 0xe1);
        // CB E1 03E6
        gbc.setState(0x5e1f, 0xc2af, 0x1e50, 0x40c4, 0x5288, 0x56f4, 0x1, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc2af);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E1 03E7
        gbc.setState(0xe91c, 0x85b2, 0x6780, 0x8ff0, 0xa465, 0x758e, 0x1, 0x0);
        gbc.writeMem(0xe91c, { 0xcb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x85b2);
        EXPECT(gbc.pc(), 0xe91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91c), 0xcb);
        EXPECT(gbc.readMem(0xe91d), 0xe1);
    }
