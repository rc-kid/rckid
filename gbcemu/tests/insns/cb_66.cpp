#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_66)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_66) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 66 0000
        gbc.setState(0xef25, 0x9b3c, 0xb540, 0xf6ba, 0xca1, 0x9b24, 0x0, 0x0);
        gbc.writeMem(0x9b24, { 0xf3 });
        gbc.writeMem(0xef25, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9b3c);
        EXPECT(gbc.pc(), 0xef27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b24), 0xf3);
        EXPECT(gbc.readMem(0xef25), 0xcb);
        EXPECT(gbc.readMem(0xef26), 0x66);
        // CB 66 0001
        gbc.setState(0xa858, 0xa1a1, 0xf70, 0x79d1, 0x2cda, 0x728f, 0x0, 0x1);
        gbc.writeMem(0x728f, { 0x55 });
        gbc.writeMem(0xa858, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa1a1);
        EXPECT(gbc.pc(), 0xa85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa858), 0xcb);
        EXPECT(gbc.readMem(0xa859), 0x66);
        // CB 66 0002
        gbc.setState(0x7506, 0x5832, 0x94d0, 0xb9f0, 0x21b7, 0xc3a8, 0x0, 0x1);
        gbc.writeMem(0x7506, { 0xcb, 0x66 });
        gbc.writeMem(0xc3a8, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5832);
        EXPECT(gbc.pc(), 0x7508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a8), 0x11);
        // CB 66 0003
        gbc.setState(0x62a7, 0x7e2c, 0x33a0, 0xa9ca, 0xfa7e, 0x13a7, 0x0, 0x0);
        gbc.writeMem(0x13a7, { 0x36 });
        gbc.writeMem(0x62a7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7e2c);
        EXPECT(gbc.pc(), 0x62a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0004
        gbc.setState(0x8569, 0x76db, 0x50a0, 0x3479, 0x9f20, 0xee40, 0x1, 0x1);
        gbc.writeMem(0x8569, { 0xcb, 0x66 });
        gbc.writeMem(0xee40, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x76db);
        EXPECT(gbc.pc(), 0x856b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8569), 0xcb);
        EXPECT(gbc.readMem(0x856a), 0x66);
        EXPECT(gbc.readMem(0xee40), 0xf2);
        // CB 66 0005
        gbc.setState(0x27d, 0x82a7, 0x4d20, 0x2008, 0xdde0, 0x1919, 0x0, 0x0);
        gbc.writeMem(0x27d, { 0xcb, 0x66 });
        gbc.writeMem(0x1919, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x82a7);
        EXPECT(gbc.pc(), 0x27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0006
        gbc.setState(0x2889, 0xa2c2, 0x48b0, 0x7b62, 0x800f, 0xbaf3, 0x0, 0x1);
        gbc.writeMem(0x2889, { 0xcb, 0x66 });
        gbc.writeMem(0xbaf3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa2c2);
        EXPECT(gbc.pc(), 0x288b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf3), 0xb8);
        // CB 66 0007
        gbc.setState(0x9d73, 0xbfba, 0xbb40, 0x7160, 0x52d4, 0x404c, 0x0, 0x1);
        gbc.writeMem(0x404c, { 0xd7 });
        gbc.writeMem(0x9d73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbfba);
        EXPECT(gbc.pc(), 0x9d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d73), 0xcb);
        EXPECT(gbc.readMem(0x9d74), 0x66);
        // CB 66 0008
        gbc.setState(0x8002, 0x8fc2, 0x9e90, 0xe99f, 0x374f, 0x89a0, 0x1, 0x0);
        gbc.writeMem(0x8002, { 0xcb, 0x66 });
        gbc.writeMem(0x89a0, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8fc2);
        EXPECT(gbc.pc(), 0x8004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8002), 0xcb);
        EXPECT(gbc.readMem(0x8003), 0x66);
        EXPECT(gbc.readMem(0x89a0), 0x88);
        // CB 66 0009
        gbc.setState(0x16d7, 0xbf58, 0x1920, 0x421e, 0x747a, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0x16d7, { 0xcb, 0x66 });
        gbc.writeMem(0x2ac0, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x16d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 000A
        gbc.setState(0xa5df, 0x6651, 0x7de0, 0x46b6, 0xeeaa, 0xf8de, 0x1, 0x0);
        gbc.writeMem(0xa5df, { 0xcb, 0x66 });
        gbc.writeMem(0xf8de, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6651);
        EXPECT(gbc.pc(), 0xa5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5df), 0xcb);
        EXPECT(gbc.readMem(0xa5e0), 0x66);
        EXPECT(gbc.readMem(0xf8de), 0xed);
        // CB 66 000B
        gbc.setState(0x7b8c, 0xfc56, 0xe4d0, 0xab1d, 0x78cc, 0x62fe, 0x0, 0x1);
        gbc.writeMem(0x62fe, { 0x4f });
        gbc.writeMem(0x7b8c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfc56);
        EXPECT(gbc.pc(), 0x7b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 000C
        gbc.setState(0xb32b, 0x3c4b, 0x3290, 0xfe0b, 0x7649, 0x2e1f, 0x1, 0x1);
        gbc.writeMem(0x2e1f, { 0x86 });
        gbc.writeMem(0xb32b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3c4b);
        EXPECT(gbc.pc(), 0xb32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32b), 0xcb);
        EXPECT(gbc.readMem(0xb32c), 0x66);
        // CB 66 000D
        gbc.setState(0xada4, 0xf803, 0xfab0, 0x1178, 0x2936, 0xe4f, 0x1, 0x0);
        gbc.writeMem(0xe4f, { 0xca });
        gbc.writeMem(0xada4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf803);
        EXPECT(gbc.pc(), 0xada6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada4), 0xcb);
        EXPECT(gbc.readMem(0xada5), 0x66);
        // CB 66 000F
        gbc.setState(0x17ca, 0x1e2d, 0xe600, 0xd3fe, 0x3bac, 0xb098, 0x0, 0x0);
        gbc.writeMem(0x17ca, { 0xcb, 0x66 });
        gbc.writeMem(0xb098, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1e2d);
        EXPECT(gbc.pc(), 0x17cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb098), 0x8e);
        // CB 66 0010
        gbc.setState(0x8fd6, 0xba43, 0xf230, 0xc305, 0xa438, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0x8fd6, { 0xcb, 0x66 });
        gbc.writeMem(0xc26e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xba43);
        EXPECT(gbc.pc(), 0x8fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd6), 0xcb);
        EXPECT(gbc.readMem(0x8fd7), 0x66);
        EXPECT(gbc.readMem(0xc26e), 0x58);
        // CB 66 0011
        gbc.setState(0x9a49, 0xdc0a, 0xac30, 0xdcb1, 0x4a8a, 0xed51, 0x1, 0x1);
        gbc.writeMem(0x9a49, { 0xcb, 0x66 });
        gbc.writeMem(0xed51, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdc0a);
        EXPECT(gbc.pc(), 0x9a4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a49), 0xcb);
        EXPECT(gbc.readMem(0x9a4a), 0x66);
        EXPECT(gbc.readMem(0xed51), 0x6c);
        // CB 66 0012
        gbc.setState(0xddfd, 0xa1e5, 0xb600, 0xca94, 0xe780, 0x7e9f, 0x0, 0x0);
        gbc.writeMem(0x7e9f, { 0xcf });
        gbc.writeMem(0xddfd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa1e5);
        EXPECT(gbc.pc(), 0xddff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddfd), 0xcb);
        EXPECT(gbc.readMem(0xddfe), 0x66);
        // CB 66 0013
        gbc.setState(0x6268, 0x79b7, 0x5160, 0x5bec, 0x2735, 0xd5f3, 0x0, 0x0);
        gbc.writeMem(0x6268, { 0xcb, 0x66 });
        gbc.writeMem(0xd5f3, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x79b7);
        EXPECT(gbc.pc(), 0x626a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f3), 0xf);
        // CB 66 0014
        gbc.setState(0x51a3, 0x5, 0xe800, 0x378e, 0x9399, 0x108, 0x1, 0x0);
        gbc.writeMem(0x108, { 0x9f });
        gbc.writeMem(0x51a3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5);
        EXPECT(gbc.pc(), 0x51a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0015
        gbc.setState(0xe009, 0xf91f, 0x70, 0x31ce, 0x6b15, 0xf6ff, 0x1, 0x0);
        gbc.writeMem(0xe009, { 0xcb, 0x66 });
        gbc.writeMem(0xf6ff, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf91f);
        EXPECT(gbc.pc(), 0xe00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe009), 0xcb);
        EXPECT(gbc.readMem(0xe00a), 0x66);
        EXPECT(gbc.readMem(0xf6ff), 0x72);
        // CB 66 0016
        gbc.setState(0x6aa1, 0x98a9, 0x9810, 0x425, 0xb0f6, 0xbe4, 0x0, 0x1);
        gbc.writeMem(0xbe4, { 0xfc });
        gbc.writeMem(0x6aa1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x98a9);
        EXPECT(gbc.pc(), 0x6aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0017
        gbc.setState(0xe477, 0xa5f9, 0xf4b0, 0xf1cd, 0xaa9b, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0xc46e, { 0x42 });
        gbc.writeMem(0xe477, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa5f9);
        EXPECT(gbc.pc(), 0xe479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46e), 0x42);
        EXPECT(gbc.readMem(0xe477), 0xcb);
        EXPECT(gbc.readMem(0xe478), 0x66);
        // CB 66 0018
        gbc.setState(0x89d6, 0xa6f, 0x7550, 0x1868, 0x9a51, 0x70e4, 0x1, 0x0);
        gbc.writeMem(0x70e4, { 0xad });
        gbc.writeMem(0x89d6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa6f);
        EXPECT(gbc.pc(), 0x89d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d6), 0xcb);
        EXPECT(gbc.readMem(0x89d7), 0x66);
        // CB 66 0019
        gbc.setState(0x9083, 0xdbbb, 0x8160, 0x2f08, 0xcb7d, 0xa7ce, 0x1, 0x1);
        gbc.writeMem(0x9083, { 0xcb, 0x66 });
        gbc.writeMem(0xa7ce, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdbbb);
        EXPECT(gbc.pc(), 0x9085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9083), 0xcb);
        EXPECT(gbc.readMem(0x9084), 0x66);
        EXPECT(gbc.readMem(0xa7ce), 0x53);
        // CB 66 001A
        gbc.setState(0x8f9, 0x2177, 0x32b0, 0xea90, 0xc750, 0x4e39, 0x0, 0x0);
        gbc.writeMem(0x8f9, { 0xcb, 0x66 });
        gbc.writeMem(0x4e39, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2177);
        EXPECT(gbc.pc(), 0x8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 001B
        gbc.setState(0xfd1, 0xaf8, 0x8e0, 0x3f14, 0x79c0, 0x8b4b, 0x0, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0x66 });
        gbc.writeMem(0x8b4b, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xaf8);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4b), 0xe9);
        // CB 66 001C
        gbc.setState(0x59fd, 0x7727, 0x10f0, 0xb6a9, 0x2e3d, 0xf19, 0x1, 0x1);
        gbc.writeMem(0xf19, { 0x3d });
        gbc.writeMem(0x59fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7727);
        EXPECT(gbc.pc(), 0x59ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 001D
        gbc.setState(0x44aa, 0x697b, 0xc770, 0x38f, 0xdf0b, 0x805, 0x0, 0x1);
        gbc.writeMem(0x805, { 0xf5 });
        gbc.writeMem(0x44aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x697b);
        EXPECT(gbc.pc(), 0x44ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 001E
        gbc.setState(0x7700, 0x5b98, 0x59a0, 0x6809, 0xdbe5, 0xfab, 0x0, 0x1);
        gbc.writeMem(0xfab, { 0x24 });
        gbc.writeMem(0x7700, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5b98);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 001F
        gbc.setState(0x4133, 0xcb3e, 0x820, 0x9b4, 0x32f2, 0x2d35, 0x1, 0x1);
        gbc.writeMem(0x2d35, { 0x36 });
        gbc.writeMem(0x4133, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcb3e);
        EXPECT(gbc.pc(), 0x4135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0020
        gbc.setState(0xb75d, 0x5bd6, 0xc390, 0xda4d, 0x774, 0xefe7, 0x1, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x66 });
        gbc.writeMem(0xefe7, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5bd6);
        EXPECT(gbc.pc(), 0xb75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75d), 0xcb);
        EXPECT(gbc.readMem(0xb75e), 0x66);
        EXPECT(gbc.readMem(0xefe7), 0x1f);
        // CB 66 0021
        gbc.setState(0xcc90, 0x76e, 0xdcc0, 0x6216, 0xe041, 0x8ba6, 0x1, 0x1);
        gbc.writeMem(0x8ba6, { 0xf9 });
        gbc.writeMem(0xcc90, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x76e);
        EXPECT(gbc.pc(), 0xcc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba6), 0xf9);
        EXPECT(gbc.readMem(0xcc90), 0xcb);
        EXPECT(gbc.readMem(0xcc91), 0x66);
        // CB 66 0022
        gbc.setState(0x5e6a, 0x1b52, 0x1a30, 0xff5d, 0x2cb, 0x5554, 0x1, 0x1);
        gbc.writeMem(0x5554, { 0x5b });
        gbc.writeMem(0x5e6a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1b52);
        EXPECT(gbc.pc(), 0x5e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0023
        gbc.setState(0xb465, 0xbdea, 0xa950, 0x90de, 0x9b70, 0x31a9, 0x1, 0x0);
        gbc.writeMem(0x31a9, { 0x84 });
        gbc.writeMem(0xb465, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0xb467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb465), 0xcb);
        EXPECT(gbc.readMem(0xb466), 0x66);
        // CB 66 0024
        gbc.setState(0x7a71, 0x52bc, 0xfd0, 0xe75b, 0xb5b2, 0x1ad3, 0x0, 0x0);
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.writeMem(0x7a71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x52bc);
        EXPECT(gbc.pc(), 0x7a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0025
        gbc.setState(0x1b9c, 0xd41e, 0xde90, 0x3a30, 0x1bf2, 0xb584, 0x0, 0x0);
        gbc.writeMem(0x1b9c, { 0xcb, 0x66 });
        gbc.writeMem(0xb584, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd41e);
        EXPECT(gbc.pc(), 0x1b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb584), 0x36);
        // CB 66 0026
        gbc.setState(0xe92b, 0x9da5, 0x6390, 0xf61c, 0x8ecf, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x33a3, { 0x44 });
        gbc.writeMem(0xe92b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9da5);
        EXPECT(gbc.pc(), 0xe92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92b), 0xcb);
        EXPECT(gbc.readMem(0xe92c), 0x66);
        // CB 66 0027
        gbc.setState(0x5781, 0x113f, 0x1b20, 0x7d10, 0x46f, 0xfe63, 0x1, 0x1);
        gbc.writeMem(0x5781, { 0xcb, 0x66 });
        gbc.writeMem(0xfe63, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x113f);
        EXPECT(gbc.pc(), 0x5783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe63), 0x7d);
        // CB 66 0028
        gbc.setState(0x47a, 0x658, 0x5d10, 0xb98b, 0x388a, 0xd30d, 0x0, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0x66 });
        gbc.writeMem(0xd30d, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x658);
        EXPECT(gbc.pc(), 0x47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30d), 0x8);
        // CB 66 0029
        gbc.setState(0x6258, 0x1706, 0x30b0, 0x3390, 0x2461, 0xb1dc, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xcb, 0x66 });
        gbc.writeMem(0xb1dc, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1706);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dc), 0xd6);
        // CB 66 002A
        gbc.setState(0x3d3d, 0xf94a, 0x5c90, 0xf0c9, 0xedfe, 0xf4a5, 0x1, 0x1);
        gbc.writeMem(0x3d3d, { 0xcb, 0x66 });
        gbc.writeMem(0xf4a5, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf94a);
        EXPECT(gbc.pc(), 0x3d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4a5), 0x2b);
        // CB 66 002B
        gbc.setState(0xdc4b, 0xd1aa, 0x9180, 0x8ef8, 0x4543, 0x2a9c, 0x0, 0x1);
        gbc.writeMem(0x2a9c, { 0x7d });
        gbc.writeMem(0xdc4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd1aa);
        EXPECT(gbc.pc(), 0xdc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4b), 0xcb);
        EXPECT(gbc.readMem(0xdc4c), 0x66);
        // CB 66 002D
        gbc.setState(0xa6de, 0x4eea, 0xf310, 0xb8c7, 0xe793, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0xa6de, { 0xcb, 0x66 });
        gbc.writeMem(0xb50b, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0xa6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6de), 0xcb);
        EXPECT(gbc.readMem(0xa6df), 0x66);
        EXPECT(gbc.readMem(0xb50b), 0xd3);
        // CB 66 002E
        gbc.setState(0xd045, 0x453c, 0x4130, 0xf472, 0xa4ed, 0xeb01, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0xcb, 0x66 });
        gbc.writeMem(0xeb01, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd045), 0xcb);
        EXPECT(gbc.readMem(0xd046), 0x66);
        EXPECT(gbc.readMem(0xeb01), 0x4f);
        // CB 66 002F
        gbc.setState(0x7ec, 0x5396, 0x2b80, 0x6c11, 0x4d37, 0xa968, 0x0, 0x0);
        gbc.writeMem(0x7ec, { 0xcb, 0x66 });
        gbc.writeMem(0xa968, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5396);
        EXPECT(gbc.pc(), 0x7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa968), 0xd0);
        // CB 66 0030
        gbc.setState(0xde9d, 0xdf66, 0xd450, 0x13eb, 0x4edd, 0xaec8, 0x0, 0x0);
        gbc.writeMem(0xaec8, { 0x61 });
        gbc.writeMem(0xde9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdf66);
        EXPECT(gbc.pc(), 0xde9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec8), 0x61);
        EXPECT(gbc.readMem(0xde9d), 0xcb);
        EXPECT(gbc.readMem(0xde9e), 0x66);
        // CB 66 0031
        gbc.setState(0x59d8, 0xab08, 0xb1c0, 0x98ea, 0x2722, 0x3967, 0x0, 0x1);
        gbc.writeMem(0x3967, { 0x78 });
        gbc.writeMem(0x59d8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xab08);
        EXPECT(gbc.pc(), 0x59da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0032
        gbc.setState(0x9c52, 0xbd88, 0xed0, 0xaa24, 0x95cf, 0xa708, 0x1, 0x1);
        gbc.writeMem(0x9c52, { 0xcb, 0x66 });
        gbc.writeMem(0xa708, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbd88);
        EXPECT(gbc.pc(), 0x9c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c52), 0xcb);
        EXPECT(gbc.readMem(0x9c53), 0x66);
        EXPECT(gbc.readMem(0xa708), 0xaf);
        // CB 66 0033
        gbc.setState(0xb8f6, 0xe1be, 0x9950, 0xd018, 0x87d0, 0xe7ba, 0x1, 0x0);
        gbc.writeMem(0xb8f6, { 0xcb, 0x66 });
        gbc.writeMem(0xe7ba, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe1be);
        EXPECT(gbc.pc(), 0xb8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f6), 0xcb);
        EXPECT(gbc.readMem(0xb8f7), 0x66);
        EXPECT(gbc.readMem(0xe7ba), 0x50);
        // CB 66 0034
        gbc.setState(0x3052, 0xc3b2, 0x1120, 0x703, 0x2a55, 0xa722, 0x0, 0x1);
        gbc.writeMem(0x3052, { 0xcb, 0x66 });
        gbc.writeMem(0xa722, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc3b2);
        EXPECT(gbc.pc(), 0x3054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa722), 0x6c);
        // CB 66 0035
        gbc.setState(0xb5a, 0x604c, 0x73a0, 0x6e8d, 0xa887, 0x99d, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xf1 });
        gbc.writeMem(0xb5a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x604c);
        EXPECT(gbc.pc(), 0xb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0036
        gbc.setState(0xcc94, 0xf189, 0x3990, 0xeb9, 0xd90f, 0xedd1, 0x1, 0x0);
        gbc.writeMem(0xcc94, { 0xcb, 0x66 });
        gbc.writeMem(0xedd1, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf189);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc94), 0xcb);
        EXPECT(gbc.readMem(0xcc95), 0x66);
        EXPECT(gbc.readMem(0xedd1), 0xc7);
        // CB 66 0037
        gbc.setState(0x166c, 0xe592, 0xb2c0, 0x38e5, 0x14c2, 0x57c7, 0x0, 0x1);
        gbc.writeMem(0x166c, { 0xcb, 0x66 });
        gbc.writeMem(0x57c7, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0x166e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0038
        gbc.setState(0x4b00, 0x464c, 0x70a0, 0xbd72, 0xf5dd, 0xb0d8, 0x0, 0x1);
        gbc.writeMem(0x4b00, { 0xcb, 0x66 });
        gbc.writeMem(0xb0d8, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0x4b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d8), 0xad);
        // CB 66 0039
        gbc.setState(0xd519, 0xcc91, 0x4a00, 0xec85, 0x2067, 0x24fe, 0x0, 0x0);
        gbc.writeMem(0x24fe, { 0x9f });
        gbc.writeMem(0xd519, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcc91);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0x66);
        // CB 66 003A
        gbc.setState(0xb1ab, 0x3e3c, 0x97f0, 0x3b9a, 0xf386, 0x52fb, 0x0, 0x0);
        gbc.writeMem(0x52fb, { 0xcd });
        gbc.writeMem(0xb1ab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3e3c);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0x66);
        // CB 66 003B
        gbc.setState(0xbe51, 0x1574, 0x3700, 0xcab, 0xcdc1, 0x4424, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xa });
        gbc.writeMem(0xbe51, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1574);
        EXPECT(gbc.pc(), 0xbe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe51), 0xcb);
        EXPECT(gbc.readMem(0xbe52), 0x66);
        // CB 66 003C
        gbc.setState(0xd4f1, 0x9144, 0x9420, 0x817e, 0xd582, 0x6b53, 0x0, 0x1);
        gbc.writeMem(0x6b53, { 0x62 });
        gbc.writeMem(0xd4f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0xd4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f1), 0xcb);
        EXPECT(gbc.readMem(0xd4f2), 0x66);
        // CB 66 003D
        gbc.setState(0xd27, 0x344, 0x30c0, 0x3cab, 0x6162, 0x7625, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0x66 });
        gbc.writeMem(0x7625, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x344);
        EXPECT(gbc.pc(), 0xd29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 003E
        gbc.setState(0xa6a9, 0xe777, 0x6ae0, 0xcd85, 0x95bf, 0x81cf, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0x6b });
        gbc.writeMem(0xa6a9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe777);
        EXPECT(gbc.pc(), 0xa6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81cf), 0x6b);
        EXPECT(gbc.readMem(0xa6a9), 0xcb);
        EXPECT(gbc.readMem(0xa6aa), 0x66);
        // CB 66 003F
        gbc.setState(0xe169, 0x3184, 0x7920, 0x2fb4, 0xf11, 0xaf58, 0x1, 0x0);
        gbc.writeMem(0xaf58, { 0x7e });
        gbc.writeMem(0xe169, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3184);
        EXPECT(gbc.pc(), 0xe16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf58), 0x7e);
        EXPECT(gbc.readMem(0xe169), 0xcb);
        EXPECT(gbc.readMem(0xe16a), 0x66);
        // CB 66 0040
        gbc.setState(0xe2a4, 0x3bac, 0xea30, 0x71c5, 0xaf2e, 0xb40c, 0x1, 0x1);
        gbc.writeMem(0xb40c, { 0xb6 });
        gbc.writeMem(0xe2a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3bac);
        EXPECT(gbc.pc(), 0xe2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40c), 0xb6);
        EXPECT(gbc.readMem(0xe2a4), 0xcb);
        EXPECT(gbc.readMem(0xe2a5), 0x66);
        // CB 66 0041
        gbc.setState(0x9c9d, 0x939b, 0xf1c0, 0xba1f, 0x3689, 0x9130, 0x0, 0x1);
        gbc.writeMem(0x9130, { 0x82 });
        gbc.writeMem(0x9c9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x939b);
        EXPECT(gbc.pc(), 0x9c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9130), 0x82);
        EXPECT(gbc.readMem(0x9c9d), 0xcb);
        EXPECT(gbc.readMem(0x9c9e), 0x66);
        // CB 66 0042
        gbc.setState(0xfe0, 0xf6fa, 0xed00, 0xae99, 0x4c6c, 0xa772, 0x0, 0x1);
        gbc.writeMem(0xfe0, { 0xcb, 0x66 });
        gbc.writeMem(0xa772, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf6fa);
        EXPECT(gbc.pc(), 0xfe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa772), 0x4b);
        // CB 66 0043
        gbc.setState(0xb79, 0xb7a, 0x680, 0x4e20, 0xa5b6, 0x768e, 0x1, 0x1);
        gbc.writeMem(0xb79, { 0xcb, 0x66 });
        gbc.writeMem(0x768e, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb7a);
        EXPECT(gbc.pc(), 0xb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0044
        gbc.setState(0x61d3, 0xb83d, 0xcaa0, 0x489d, 0xc637, 0x3c10, 0x1, 0x0);
        gbc.writeMem(0x3c10, { 0x21 });
        gbc.writeMem(0x61d3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb83d);
        EXPECT(gbc.pc(), 0x61d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0045
        gbc.setState(0x607d, 0x3f53, 0xc10, 0x671b, 0x9862, 0x780d, 0x0, 0x0);
        gbc.writeMem(0x607d, { 0xcb, 0x66 });
        gbc.writeMem(0x780d, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3f53);
        EXPECT(gbc.pc(), 0x607f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0046
        gbc.setState(0xe77f, 0x3e7e, 0xc340, 0x1fb6, 0x2477, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x9066, { 0x66 });
        gbc.writeMem(0xe77f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3e7e);
        EXPECT(gbc.pc(), 0xe781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9066), 0x66);
        EXPECT(gbc.readMem(0xe77f), 0xcb);
        EXPECT(gbc.readMem(0xe780), 0x66);
        // CB 66 0047
        gbc.setState(0x85c0, 0x7125, 0xc590, 0x22be, 0x3e15, 0xc5c0, 0x0, 0x1);
        gbc.writeMem(0x85c0, { 0xcb, 0x66 });
        gbc.writeMem(0xc5c0, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x85c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c0), 0xcb);
        EXPECT(gbc.readMem(0x85c1), 0x66);
        EXPECT(gbc.readMem(0xc5c0), 0x4b);
        // CB 66 0048
        gbc.setState(0x436f, 0x469c, 0xe240, 0xddad, 0xbaed, 0xf371, 0x0, 0x1);
        gbc.writeMem(0x436f, { 0xcb, 0x66 });
        gbc.writeMem(0xf371, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0x4371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf371), 0xfb);
        // CB 66 0049
        gbc.setState(0x7f73, 0x30c2, 0x2910, 0x4c3c, 0xa40e, 0x3712, 0x0, 0x1);
        gbc.writeMem(0x3712, { 0x2b });
        gbc.writeMem(0x7f73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x30c2);
        EXPECT(gbc.pc(), 0x7f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 004A
        gbc.setState(0xe886, 0x1b32, 0xec90, 0xfadc, 0x79e3, 0xa8d4, 0x1, 0x0);
        gbc.writeMem(0xa8d4, { 0x4a });
        gbc.writeMem(0xe886, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1b32);
        EXPECT(gbc.pc(), 0xe888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d4), 0x4a);
        EXPECT(gbc.readMem(0xe886), 0xcb);
        EXPECT(gbc.readMem(0xe887), 0x66);
        // CB 66 004B
        gbc.setState(0x3b52, 0x3825, 0xe970, 0xbdf8, 0x9830, 0xc2d3, 0x1, 0x0);
        gbc.writeMem(0x3b52, { 0xcb, 0x66 });
        gbc.writeMem(0xc2d3, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3825);
        EXPECT(gbc.pc(), 0x3b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d3), 0x91);
        // CB 66 004C
        gbc.setState(0x94fc, 0x4116, 0xfc60, 0x1647, 0x9d29, 0x223f, 0x1, 0x1);
        gbc.writeMem(0x223f, { 0xf7 });
        gbc.writeMem(0x94fc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4116);
        EXPECT(gbc.pc(), 0x94fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fc), 0xcb);
        EXPECT(gbc.readMem(0x94fd), 0x66);
        // CB 66 004E
        gbc.setState(0xbf63, 0x72ed, 0x8810, 0x8cda, 0x4bd3, 0xb2d0, 0x1, 0x1);
        gbc.writeMem(0xb2d0, { 0x26 });
        gbc.writeMem(0xbf63, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x72ed);
        EXPECT(gbc.pc(), 0xbf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d0), 0x26);
        EXPECT(gbc.readMem(0xbf63), 0xcb);
        EXPECT(gbc.readMem(0xbf64), 0x66);
        // CB 66 004F
        gbc.setState(0xd93b, 0x4086, 0x82d0, 0x6517, 0x8e24, 0x9aef, 0x1, 0x0);
        gbc.writeMem(0x9aef, { 0xfb });
        gbc.writeMem(0xd93b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4086);
        EXPECT(gbc.pc(), 0xd93d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aef), 0xfb);
        EXPECT(gbc.readMem(0xd93b), 0xcb);
        EXPECT(gbc.readMem(0xd93c), 0x66);
        // CB 66 0050
        gbc.setState(0xa05, 0x2ae5, 0x4530, 0x5bf9, 0xddce, 0xe61d, 0x1, 0x0);
        gbc.writeMem(0xa05, { 0xcb, 0x66 });
        gbc.writeMem(0xe61d, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2ae5);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61d), 0xe5);
        // CB 66 0051
        gbc.setState(0x527e, 0x8d0e, 0x1950, 0x1c06, 0x622c, 0xd2ae, 0x1, 0x1);
        gbc.writeMem(0x527e, { 0xcb, 0x66 });
        gbc.writeMem(0xd2ae, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8d0e);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ae), 0xcf);
        // CB 66 0052
        gbc.setState(0x8ce7, 0x57c5, 0xc8c0, 0xbafc, 0x365c, 0x7f64, 0x0, 0x0);
        gbc.writeMem(0x7f64, { 0xd4 });
        gbc.writeMem(0x8ce7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x8ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce7), 0xcb);
        EXPECT(gbc.readMem(0x8ce8), 0x66);
        // CB 66 0053
        gbc.setState(0x8597, 0xeada, 0xbdc0, 0x7c32, 0x40aa, 0x99d6, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0xcb, 0x66 });
        gbc.writeMem(0x99d6, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xeada);
        EXPECT(gbc.pc(), 0x8599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8597), 0xcb);
        EXPECT(gbc.readMem(0x8598), 0x66);
        EXPECT(gbc.readMem(0x99d6), 0x2f);
        // CB 66 0054
        gbc.setState(0x85a0, 0x5a1e, 0x3840, 0xa11f, 0x54f, 0xdb3d, 0x1, 0x1);
        gbc.writeMem(0x85a0, { 0xcb, 0x66 });
        gbc.writeMem(0xdb3d, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5a1e);
        EXPECT(gbc.pc(), 0x85a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a0), 0xcb);
        EXPECT(gbc.readMem(0x85a1), 0x66);
        EXPECT(gbc.readMem(0xdb3d), 0x3);
        // CB 66 0055
        gbc.setState(0x1b0b, 0x24f5, 0x1320, 0x14fe, 0xc6c9, 0xcf6e, 0x1, 0x0);
        gbc.writeMem(0x1b0b, { 0xcb, 0x66 });
        gbc.writeMem(0xcf6e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x24f5);
        EXPECT(gbc.pc(), 0x1b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6e), 0x96);
        // CB 66 0056
        gbc.setState(0x71db, 0x6e4c, 0xb350, 0xe884, 0x1cac, 0xd718, 0x1, 0x0);
        gbc.writeMem(0x71db, { 0xcb, 0x66 });
        gbc.writeMem(0xd718, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6e4c);
        EXPECT(gbc.pc(), 0x71dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd718), 0xd8);
        // CB 66 0057
        gbc.setState(0xa23e, 0xc6f5, 0xdf80, 0x6207, 0x5027, 0x63c7, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0x98 });
        gbc.writeMem(0xa23e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc6f5);
        EXPECT(gbc.pc(), 0xa240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa23e), 0xcb);
        EXPECT(gbc.readMem(0xa23f), 0x66);
        // CB 66 0058
        gbc.setState(0x8d4c, 0x52b0, 0x7360, 0x84ee, 0xa490, 0x3a91, 0x0, 0x1);
        gbc.writeMem(0x3a91, { 0xda });
        gbc.writeMem(0x8d4c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x52b0);
        EXPECT(gbc.pc(), 0x8d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        EXPECT(gbc.readMem(0x8d4d), 0x66);
        // CB 66 0059
        gbc.setState(0xd390, 0x2906, 0x8010, 0xe920, 0xd20b, 0xc2bf, 0x1, 0x0);
        gbc.writeMem(0xc2bf, { 0xdd });
        gbc.writeMem(0xd390, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2906);
        EXPECT(gbc.pc(), 0xd392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bf), 0xdd);
        EXPECT(gbc.readMem(0xd390), 0xcb);
        EXPECT(gbc.readMem(0xd391), 0x66);
        // CB 66 005A
        gbc.setState(0x700a, 0x7e36, 0x1cc0, 0x1138, 0xcb85, 0x8cbe, 0x1, 0x1);
        gbc.writeMem(0x700a, { 0xcb, 0x66 });
        gbc.writeMem(0x8cbe, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7e36);
        EXPECT(gbc.pc(), 0x700c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cbe), 0x18);
        // CB 66 005B
        gbc.setState(0x6fc, 0x3d33, 0x86b0, 0xee6f, 0xa281, 0x9b63, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xcb, 0x66 });
        gbc.writeMem(0x9b63, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3d33);
        EXPECT(gbc.pc(), 0x6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b63), 0xbb);
        // CB 66 005C
        gbc.setState(0x7c71, 0xd147, 0x4aa0, 0x548e, 0x2c19, 0x1dbb, 0x0, 0x1);
        gbc.writeMem(0x1dbb, { 0xb4 });
        gbc.writeMem(0x7c71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd147);
        EXPECT(gbc.pc(), 0x7c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 005D
        gbc.setState(0x682c, 0xbd46, 0x66c0, 0x311a, 0xb980, 0x3fb3, 0x1, 0x1);
        gbc.writeMem(0x3fb3, { 0x77 });
        gbc.writeMem(0x682c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbd46);
        EXPECT(gbc.pc(), 0x682e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 005E
        gbc.setState(0x4a4, 0xcc1f, 0xe380, 0x9f4f, 0xaf40, 0xe03d, 0x0, 0x1);
        gbc.writeMem(0x4a4, { 0xcb, 0x66 });
        gbc.writeMem(0xe03d, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcc1f);
        EXPECT(gbc.pc(), 0x4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03d), 0xd7);
        // CB 66 005F
        gbc.setState(0xb16c, 0xbf99, 0xf3e0, 0x3edb, 0x8da7, 0x4e03, 0x1, 0x0);
        gbc.writeMem(0x4e03, { 0x8f });
        gbc.writeMem(0xb16c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbf99);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0x66);
        // CB 66 0060
        gbc.setState(0xbd1, 0x72cc, 0xb6a0, 0xaaec, 0xf4b8, 0x4218, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0xcb, 0x66 });
        gbc.writeMem(0x4218, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x72cc);
        EXPECT(gbc.pc(), 0xbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0061
        gbc.setState(0xcc46, 0x66dd, 0x80e0, 0xb951, 0x28e8, 0x2162, 0x1, 0x1);
        gbc.writeMem(0x2162, { 0xc });
        gbc.writeMem(0xcc46, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x66dd);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc46), 0xcb);
        EXPECT(gbc.readMem(0xcc47), 0x66);
        // CB 66 0062
        gbc.setState(0xeb89, 0x3ee2, 0x2d0, 0x7e0a, 0xac34, 0xa68c, 0x1, 0x1);
        gbc.writeMem(0xa68c, { 0xd7 });
        gbc.writeMem(0xeb89, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3ee2);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0xd7);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0x66);
        // CB 66 0063
        gbc.setState(0x3fa5, 0xd960, 0xcd40, 0xb1da, 0x941d, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0x3fa5, { 0xcb, 0x66 });
        gbc.writeMem(0xa2e4, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd960);
        EXPECT(gbc.pc(), 0x3fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e4), 0xf);
        // CB 66 0064
        gbc.setState(0x6498, 0xe1fc, 0x3320, 0x9a3c, 0xcda4, 0xb27c, 0x0, 0x1);
        gbc.writeMem(0x6498, { 0xcb, 0x66 });
        gbc.writeMem(0xb27c, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe1fc);
        EXPECT(gbc.pc(), 0x649a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27c), 0x45);
        // CB 66 0065
        gbc.setState(0x8fc2, 0xb289, 0x1b50, 0xea60, 0xf94d, 0x8f08, 0x0, 0x0);
        gbc.writeMem(0x8f08, { 0x82 });
        gbc.writeMem(0x8fc2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb289);
        EXPECT(gbc.pc(), 0x8fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f08), 0x82);
        EXPECT(gbc.readMem(0x8fc2), 0xcb);
        EXPECT(gbc.readMem(0x8fc3), 0x66);
        // CB 66 0066
        gbc.setState(0xdff3, 0xc64e, 0x1610, 0x6bb2, 0xd579, 0x97e5, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0x46 });
        gbc.writeMem(0xdff3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc64e);
        EXPECT(gbc.pc(), 0xdff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e5), 0x46);
        EXPECT(gbc.readMem(0xdff3), 0xcb);
        EXPECT(gbc.readMem(0xdff4), 0x66);
        // CB 66 0067
        gbc.setState(0x6a8f, 0xa3f9, 0xb0, 0xa1cc, 0x687d, 0x9038, 0x1, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x66 });
        gbc.writeMem(0x9038, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9038), 0xea);
        // CB 66 0069
        gbc.setState(0x15bd, 0x15f3, 0x45c0, 0x7519, 0x9897, 0xed5a, 0x0, 0x0);
        gbc.writeMem(0x15bd, { 0xcb, 0x66 });
        gbc.writeMem(0xed5a, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x15f3);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5a), 0x57);
        // CB 66 006A
        gbc.setState(0x1f3d, 0xa1f1, 0x3c30, 0xbcaa, 0x1667, 0xcf19, 0x0, 0x1);
        gbc.writeMem(0x1f3d, { 0xcb, 0x66 });
        gbc.writeMem(0xcf19, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa1f1);
        EXPECT(gbc.pc(), 0x1f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf19), 0x10);
        // CB 66 006B
        gbc.setState(0x46ec, 0x3765, 0x2220, 0x75d7, 0x4b55, 0x4867, 0x1, 0x1);
        gbc.writeMem(0x46ec, { 0xcb, 0x66 });
        gbc.writeMem(0x4867, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3765);
        EXPECT(gbc.pc(), 0x46ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 006C
        gbc.setState(0x1906, 0x326, 0x59c0, 0xb4fb, 0x2780, 0xc99d, 0x1, 0x1);
        gbc.writeMem(0x1906, { 0xcb, 0x66 });
        gbc.writeMem(0xc99d, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x326);
        EXPECT(gbc.pc(), 0x1908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99d), 0xda);
        // CB 66 006D
        gbc.setState(0xd36e, 0xb358, 0xe390, 0xbc71, 0x41e7, 0xe928, 0x0, 0x1);
        gbc.writeMem(0xd36e, { 0xcb, 0x66 });
        gbc.writeMem(0xe928, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb358);
        EXPECT(gbc.pc(), 0xd370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36e), 0xcb);
        EXPECT(gbc.readMem(0xd36f), 0x66);
        EXPECT(gbc.readMem(0xe928), 0x77);
        // CB 66 006E
        gbc.setState(0xe986, 0xfd4, 0xdee0, 0x9d57, 0x513b, 0xef17, 0x0, 0x0);
        gbc.writeMem(0xe986, { 0xcb, 0x66 });
        gbc.writeMem(0xef17, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfd4);
        EXPECT(gbc.pc(), 0xe988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe986), 0xcb);
        EXPECT(gbc.readMem(0xe987), 0x66);
        EXPECT(gbc.readMem(0xef17), 0x56);
        // CB 66 006F
        gbc.setState(0xb872, 0xce6a, 0xeb20, 0xe364, 0xc8f, 0xa08e, 0x1, 0x1);
        gbc.writeMem(0xa08e, { 0x8e });
        gbc.writeMem(0xb872, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xce6a);
        EXPECT(gbc.pc(), 0xb874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08e), 0x8e);
        EXPECT(gbc.readMem(0xb872), 0xcb);
        EXPECT(gbc.readMem(0xb873), 0x66);
        // CB 66 0070
        gbc.setState(0x2343, 0xc9ba, 0x6af0, 0xa71e, 0x5330, 0xe146, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0xcb, 0x66 });
        gbc.writeMem(0xe146, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc9ba);
        EXPECT(gbc.pc(), 0x2345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe146), 0xf0);
        // CB 66 0071
        gbc.setState(0x8c3a, 0xd5f8, 0xe0f0, 0x7fb4, 0x71a7, 0x8706, 0x1, 0x0);
        gbc.writeMem(0x8706, { 0x9 });
        gbc.writeMem(0x8c3a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd5f8);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8706), 0x9);
        EXPECT(gbc.readMem(0x8c3a), 0xcb);
        EXPECT(gbc.readMem(0x8c3b), 0x66);
        // CB 66 0072
        gbc.setState(0xb033, 0xb5fd, 0xe8f0, 0xe71d, 0x2bb7, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xcb, 0x66 });
        gbc.writeMem(0xb3d5, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb5fd);
        EXPECT(gbc.pc(), 0xb035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb033), 0xcb);
        EXPECT(gbc.readMem(0xb034), 0x66);
        EXPECT(gbc.readMem(0xb3d5), 0xe6);
        // CB 66 0073
        gbc.setState(0xddd, 0xc898, 0xee10, 0xa90a, 0xbb11, 0xb979, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0xcb, 0x66 });
        gbc.writeMem(0xb979, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc898);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb979), 0xec);
        // CB 66 0074
        gbc.setState(0x223f, 0x8e47, 0x2180, 0xf12d, 0x513f, 0x2f7d, 0x1, 0x0);
        gbc.writeMem(0x223f, { 0xcb, 0x66 });
        gbc.writeMem(0x2f7d, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8e47);
        EXPECT(gbc.pc(), 0x2241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0075
        gbc.setState(0xb20, 0xa7, 0x7270, 0x4f5d, 0xc3cf, 0x5db8, 0x1, 0x0);
        gbc.writeMem(0xb20, { 0xcb, 0x66 });
        gbc.writeMem(0x5db8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa7);
        EXPECT(gbc.pc(), 0xb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0077
        gbc.setState(0x7c7f, 0x16b6, 0xd3c0, 0xf1aa, 0x945a, 0x67d9, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0xff });
        gbc.writeMem(0x7c7f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x16b6);
        EXPECT(gbc.pc(), 0x7c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0078
        gbc.setState(0xeae9, 0xccb9, 0x4640, 0xb42d, 0xbafb, 0xf619, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0x66 });
        gbc.writeMem(0xf619, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xccb9);
        EXPECT(gbc.pc(), 0xeaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae9), 0xcb);
        EXPECT(gbc.readMem(0xeaea), 0x66);
        EXPECT(gbc.readMem(0xf619), 0x1f);
        // CB 66 0079
        gbc.setState(0x24a6, 0xc10b, 0x710, 0xe85c, 0x6f47, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0x24a6, { 0xcb, 0x66 });
        gbc.writeMem(0xaef4, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc10b);
        EXPECT(gbc.pc(), 0x24a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef4), 0xde);
        // CB 66 007A
        gbc.setState(0xa897, 0xf369, 0xe4c0, 0xebe3, 0x5acc, 0xb83f, 0x1, 0x1);
        gbc.writeMem(0xa897, { 0xcb, 0x66 });
        gbc.writeMem(0xb83f, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf369);
        EXPECT(gbc.pc(), 0xa899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa897), 0xcb);
        EXPECT(gbc.readMem(0xa898), 0x66);
        EXPECT(gbc.readMem(0xb83f), 0x91);
        // CB 66 007B
        gbc.setState(0xd1c9, 0xbc08, 0x8e60, 0x1985, 0x5d9d, 0xc849, 0x0, 0x1);
        gbc.writeMem(0xc849, { 0xfb });
        gbc.writeMem(0xd1c9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbc08);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0xfb);
        EXPECT(gbc.readMem(0xd1c9), 0xcb);
        EXPECT(gbc.readMem(0xd1ca), 0x66);
        // CB 66 007C
        gbc.setState(0xad52, 0xacda, 0xe920, 0xfdf5, 0x1b95, 0xa9d9, 0x1, 0x0);
        gbc.writeMem(0xa9d9, { 0x18 });
        gbc.writeMem(0xad52, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0xad54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d9), 0x18);
        EXPECT(gbc.readMem(0xad52), 0xcb);
        EXPECT(gbc.readMem(0xad53), 0x66);
        // CB 66 007D
        gbc.setState(0x7d41, 0xc5b1, 0xb120, 0x2ad0, 0x6b64, 0x6324, 0x0, 0x1);
        gbc.writeMem(0x6324, { 0xd7 });
        gbc.writeMem(0x7d41, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 007E
        gbc.setState(0x33f, 0x5ab1, 0x1e00, 0x2274, 0xe66, 0x36ab, 0x1, 0x0);
        gbc.writeMem(0x33f, { 0xcb, 0x66 });
        gbc.writeMem(0x36ab, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5ab1);
        EXPECT(gbc.pc(), 0x341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 007F
        gbc.setState(0x6cd4, 0x36d7, 0xfa00, 0x646b, 0x91ac, 0xb8ec, 0x1, 0x0);
        gbc.writeMem(0x6cd4, { 0xcb, 0x66 });
        gbc.writeMem(0xb8ec, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x6cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ec), 0x7f);
        // CB 66 0080
        gbc.setState(0x5194, 0xc049, 0xd610, 0xb6dd, 0x99cf, 0xb00c, 0x1, 0x1);
        gbc.writeMem(0x5194, { 0xcb, 0x66 });
        gbc.writeMem(0xb00c, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc049);
        EXPECT(gbc.pc(), 0x5196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00c), 0x32);
        // CB 66 0081
        gbc.setState(0xd9ba, 0x26d9, 0xba40, 0xf1e3, 0x5eb, 0x385b, 0x0, 0x0);
        gbc.writeMem(0x385b, { 0x70 });
        gbc.writeMem(0xd9ba, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x26d9);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0xcb);
        EXPECT(gbc.readMem(0xd9bb), 0x66);
        // CB 66 0082
        gbc.setState(0xdd38, 0xa94, 0x8650, 0x922c, 0x385e, 0x4e43, 0x1, 0x0);
        gbc.writeMem(0x4e43, { 0xde });
        gbc.writeMem(0xdd38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa94);
        EXPECT(gbc.pc(), 0xdd3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd38), 0xcb);
        EXPECT(gbc.readMem(0xdd39), 0x66);
        // CB 66 0083
        gbc.setState(0xd5bc, 0xfe1e, 0x5bd0, 0x4684, 0xe48f, 0xbc2a, 0x0, 0x0);
        gbc.writeMem(0xbc2a, { 0xe4 });
        gbc.writeMem(0xd5bc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfe1e);
        EXPECT(gbc.pc(), 0xd5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2a), 0xe4);
        EXPECT(gbc.readMem(0xd5bc), 0xcb);
        EXPECT(gbc.readMem(0xd5bd), 0x66);
        // CB 66 0084
        gbc.setState(0xeb9c, 0x8af5, 0x82b0, 0x47eb, 0xe65, 0xa580, 0x1, 0x1);
        gbc.writeMem(0xa580, { 0xc1 });
        gbc.writeMem(0xeb9c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8af5);
        EXPECT(gbc.pc(), 0xeb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0xc1);
        EXPECT(gbc.readMem(0xeb9c), 0xcb);
        EXPECT(gbc.readMem(0xeb9d), 0x66);
        // CB 66 0085
        gbc.setState(0x2a9b, 0x79a5, 0xd910, 0x114e, 0x3553, 0x14f2, 0x1, 0x0);
        gbc.writeMem(0x14f2, { 0x2c });
        gbc.writeMem(0x2a9b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x79a5);
        EXPECT(gbc.pc(), 0x2a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0086
        gbc.setState(0xe21e, 0x15b2, 0x9b0, 0x16af, 0x74d0, 0xc656, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xa0 });
        gbc.writeMem(0xe21e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x15b2);
        EXPECT(gbc.pc(), 0xe220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc656), 0xa0);
        EXPECT(gbc.readMem(0xe21e), 0xcb);
        EXPECT(gbc.readMem(0xe21f), 0x66);
        // CB 66 0087
        gbc.setState(0x7f3e, 0x2a83, 0x5c70, 0x68ed, 0x149b, 0x7e67, 0x1, 0x0);
        gbc.writeMem(0x7e67, { 0x59 });
        gbc.writeMem(0x7f3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2a83);
        EXPECT(gbc.pc(), 0x7f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0088
        gbc.setState(0x9ed1, 0xbf51, 0x610, 0x2cbc, 0x6d0f, 0x1613, 0x1, 0x0);
        gbc.writeMem(0x1613, { 0xba });
        gbc.writeMem(0x9ed1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbf51);
        EXPECT(gbc.pc(), 0x9ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed1), 0xcb);
        EXPECT(gbc.readMem(0x9ed2), 0x66);
        // CB 66 0089
        gbc.setState(0x1fee, 0xef1f, 0xf1e0, 0xff04, 0x18d3, 0x3b01, 0x1, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x66 });
        gbc.writeMem(0x3b01, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xef1f);
        EXPECT(gbc.pc(), 0x1ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 008A
        gbc.setState(0x55dc, 0x35f2, 0xa0c0, 0x1e81, 0x1c56, 0x34fe, 0x1, 0x0);
        gbc.writeMem(0x34fe, { 0x8f });
        gbc.writeMem(0x55dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x35f2);
        EXPECT(gbc.pc(), 0x55de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 008B
        gbc.setState(0xb14b, 0xa805, 0x9bc0, 0xb3b6, 0xb229, 0x6a54, 0x0, 0x1);
        gbc.writeMem(0x6a54, { 0x2d });
        gbc.writeMem(0xb14b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0xb14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb14b), 0xcb);
        EXPECT(gbc.readMem(0xb14c), 0x66);
        // CB 66 008C
        gbc.setState(0x45be, 0xbc73, 0x2870, 0xee5, 0x8ee5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x2b3, { 0xc4 });
        gbc.writeMem(0x45be, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbc73);
        EXPECT(gbc.pc(), 0x45c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 008D
        gbc.setState(0xdc84, 0x66b8, 0x1540, 0x4a20, 0xb2bf, 0x2897, 0x0, 0x1);
        gbc.writeMem(0x2897, { 0x88 });
        gbc.writeMem(0xdc84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x66b8);
        EXPECT(gbc.pc(), 0xdc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc84), 0xcb);
        EXPECT(gbc.readMem(0xdc85), 0x66);
        // CB 66 008E
        gbc.setState(0x6b58, 0x7762, 0xc010, 0x44da, 0xf1e4, 0x8325, 0x1, 0x1);
        gbc.writeMem(0x6b58, { 0xcb, 0x66 });
        gbc.writeMem(0x8325, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7762);
        EXPECT(gbc.pc(), 0x6b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8325), 0xf8);
        // CB 66 008F
        gbc.setState(0x566f, 0x1805, 0x3810, 0xea9, 0x3340, 0x307a, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xc7 });
        gbc.writeMem(0x566f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1805);
        EXPECT(gbc.pc(), 0x5671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0090
        gbc.setState(0x2eb3, 0x454b, 0xed00, 0x3c50, 0xf3e4, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0x66 });
        gbc.writeMem(0x6181, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x454b);
        EXPECT(gbc.pc(), 0x2eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0091
        gbc.setState(0x5297, 0xd334, 0x74e0, 0x838c, 0x6610, 0x99f8, 0x0, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0x66 });
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd334);
        EXPECT(gbc.pc(), 0x5299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f8), 0x4d);
        // CB 66 0092
        gbc.setState(0x1394, 0xea50, 0xb460, 0x8a4d, 0xa4a9, 0x7454, 0x0, 0x0);
        gbc.writeMem(0x1394, { 0xcb, 0x66 });
        gbc.writeMem(0x7454, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xea50);
        EXPECT(gbc.pc(), 0x1396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0093
        gbc.setState(0x7661, 0xa048, 0x8b30, 0x4ad3, 0xc55f, 0x6318, 0x0, 0x1);
        gbc.writeMem(0x6318, { 0x41 });
        gbc.writeMem(0x7661, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa048);
        EXPECT(gbc.pc(), 0x7663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0094
        gbc.setState(0x110f, 0x7d1f, 0xb990, 0x1a9a, 0x62a6, 0x9a78, 0x1, 0x0);
        gbc.writeMem(0x110f, { 0xcb, 0x66 });
        gbc.writeMem(0x9a78, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0x1111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a78), 0xd2);
        // CB 66 0095
        gbc.setState(0x43e7, 0xde33, 0x90d0, 0xd603, 0xc1b8, 0xf6ba, 0x0, 0x0);
        gbc.writeMem(0x43e7, { 0xcb, 0x66 });
        gbc.writeMem(0xf6ba, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xde33);
        EXPECT(gbc.pc(), 0x43e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6ba), 0x2f);
        // CB 66 0096
        gbc.setState(0xd7ca, 0x79b0, 0x6e10, 0x3ea7, 0x767e, 0xe239, 0x0, 0x1);
        gbc.writeMem(0xd7ca, { 0xcb, 0x66 });
        gbc.writeMem(0xe239, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x79b0);
        EXPECT(gbc.pc(), 0xd7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ca), 0xcb);
        EXPECT(gbc.readMem(0xd7cb), 0x66);
        EXPECT(gbc.readMem(0xe239), 0x1f);
        // CB 66 0097
        gbc.setState(0x50a6, 0xfddd, 0xc7f0, 0x3cfd, 0xf660, 0xde8b, 0x1, 0x0);
        gbc.writeMem(0x50a6, { 0xcb, 0x66 });
        gbc.writeMem(0xde8b, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfddd);
        EXPECT(gbc.pc(), 0x50a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8b), 0xc9);
        // CB 66 0098
        gbc.setState(0x5e4f, 0x3b9c, 0xca80, 0xdb82, 0x4b1, 0xe08c, 0x0, 0x1);
        gbc.writeMem(0x5e4f, { 0xcb, 0x66 });
        gbc.writeMem(0xe08c, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3b9c);
        EXPECT(gbc.pc(), 0x5e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08c), 0xad);
        // CB 66 009A
        gbc.setState(0x1baa, 0xa2c, 0xfb50, 0xfc43, 0x6f43, 0x81a7, 0x1, 0x0);
        gbc.writeMem(0x1baa, { 0xcb, 0x66 });
        gbc.writeMem(0x81a7, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa2c);
        EXPECT(gbc.pc(), 0x1bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a7), 0xe9);
        // CB 66 009B
        gbc.setState(0xb654, 0xda49, 0x530, 0x59cd, 0xd16f, 0x2c6b, 0x1, 0x1);
        gbc.writeMem(0x2c6b, { 0x10 });
        gbc.writeMem(0xb654, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xda49);
        EXPECT(gbc.pc(), 0xb656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb654), 0xcb);
        EXPECT(gbc.readMem(0xb655), 0x66);
        // CB 66 009C
        gbc.setState(0x9134, 0xfca7, 0xf130, 0x45fd, 0x46e5, 0x84d4, 0x0, 0x0);
        gbc.writeMem(0x84d4, { 0x7d });
        gbc.writeMem(0x9134, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfca7);
        EXPECT(gbc.pc(), 0x9136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d4), 0x7d);
        EXPECT(gbc.readMem(0x9134), 0xcb);
        EXPECT(gbc.readMem(0x9135), 0x66);
        // CB 66 009D
        gbc.setState(0x3dfb, 0xe4d, 0xbc60, 0x10c7, 0xbf27, 0x3803, 0x1, 0x0);
        gbc.writeMem(0x3803, { 0x85 });
        gbc.writeMem(0x3dfb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe4d);
        EXPECT(gbc.pc(), 0x3dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 009E
        gbc.setState(0x2d04, 0x25f5, 0x13d0, 0x4b90, 0x9bb3, 0xb6fe, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0x66 });
        gbc.writeMem(0xb6fe, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x25f5);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6fe), 0x66);
        // CB 66 009F
        gbc.setState(0xcf1c, 0x3c09, 0x4c30, 0x606e, 0x42b3, 0x6a39, 0x0, 0x1);
        gbc.writeMem(0x6a39, { 0x5f });
        gbc.writeMem(0xcf1c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3c09);
        EXPECT(gbc.pc(), 0xcf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1c), 0xcb);
        EXPECT(gbc.readMem(0xcf1d), 0x66);
        // CB 66 00A0
        gbc.setState(0xbff8, 0x910a, 0x4610, 0xb758, 0xb0f4, 0x17cb, 0x0, 0x1);
        gbc.writeMem(0x17cb, { 0x11 });
        gbc.writeMem(0xbff8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x910a);
        EXPECT(gbc.pc(), 0xbffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff8), 0xcb);
        EXPECT(gbc.readMem(0xbff9), 0x66);
        // CB 66 00A2
        gbc.setState(0x3cb5, 0xd306, 0x3840, 0xdd7b, 0xac0b, 0x2f69, 0x1, 0x0);
        gbc.writeMem(0x2f69, { 0x59 });
        gbc.writeMem(0x3cb5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd306);
        EXPECT(gbc.pc(), 0x3cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 00A3
        gbc.setState(0x8e58, 0xbfab, 0x5460, 0x3ba, 0xd08c, 0x1276, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0x6b });
        gbc.writeMem(0x8e58, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbfab);
        EXPECT(gbc.pc(), 0x8e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e58), 0xcb);
        EXPECT(gbc.readMem(0x8e59), 0x66);
        // CB 66 00A5
        gbc.setState(0x8dab, 0x5da8, 0x6c70, 0xc482, 0x125, 0x1696, 0x1, 0x1);
        gbc.writeMem(0x1696, { 0x6 });
        gbc.writeMem(0x8dab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5da8);
        EXPECT(gbc.pc(), 0x8dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dab), 0xcb);
        EXPECT(gbc.readMem(0x8dac), 0x66);
        // CB 66 00A6
        gbc.setState(0xfbf, 0x5159, 0x8890, 0x5b13, 0x2728, 0x3017, 0x1, 0x1);
        gbc.writeMem(0xfbf, { 0xcb, 0x66 });
        gbc.writeMem(0x3017, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0xfc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00A7
        gbc.setState(0xee26, 0x49c1, 0x8c0, 0xd0e9, 0xc954, 0x63f8, 0x0, 0x0);
        gbc.writeMem(0x63f8, { 0x3d });
        gbc.writeMem(0xee26, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x49c1);
        EXPECT(gbc.pc(), 0xee28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee26), 0xcb);
        EXPECT(gbc.readMem(0xee27), 0x66);
        // CB 66 00A8
        gbc.setState(0x156d, 0x1b91, 0x2600, 0x819a, 0xe13a, 0xd3cc, 0x0, 0x0);
        gbc.writeMem(0x156d, { 0xcb, 0x66 });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1b91);
        EXPECT(gbc.pc(), 0x156f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cc), 0xac);
        // CB 66 00A9
        gbc.setState(0x7826, 0x87ed, 0xf170, 0xaa29, 0x3ca8, 0xedde, 0x1, 0x0);
        gbc.writeMem(0x7826, { 0xcb, 0x66 });
        gbc.writeMem(0xedde, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x87ed);
        EXPECT(gbc.pc(), 0x7828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedde), 0x1e);
        // CB 66 00AA
        gbc.setState(0xef20, 0xe24, 0x6730, 0x6336, 0xf524, 0x1592, 0x1, 0x0);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0xef20, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0xef22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef20), 0xcb);
        EXPECT(gbc.readMem(0xef21), 0x66);
        // CB 66 00AB
        gbc.setState(0x6a65, 0xc9fb, 0x7930, 0x15a5, 0x3abc, 0x83d0, 0x1, 0x0);
        gbc.writeMem(0x6a65, { 0xcb, 0x66 });
        gbc.writeMem(0x83d0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc9fb);
        EXPECT(gbc.pc(), 0x6a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d0), 0x78);
        // CB 66 00AC
        gbc.setState(0x33a4, 0x2b7c, 0x59b0, 0xec97, 0xb28, 0xbdcf, 0x1, 0x0);
        gbc.writeMem(0x33a4, { 0xcb, 0x66 });
        gbc.writeMem(0xbdcf, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x33a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcf), 0xfb);
        // CB 66 00AD
        gbc.setState(0xa964, 0x3e9b, 0x3490, 0x8df8, 0x1149, 0xd73, 0x1, 0x1);
        gbc.writeMem(0xd73, { 0xa8 });
        gbc.writeMem(0xa964, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3e9b);
        EXPECT(gbc.pc(), 0xa966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa964), 0xcb);
        EXPECT(gbc.readMem(0xa965), 0x66);
        // CB 66 00AE
        gbc.setState(0xc569, 0x1bb9, 0xf3f0, 0x909, 0xf3ef, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0xbde8, { 0x33 });
        gbc.writeMem(0xc569, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1bb9);
        EXPECT(gbc.pc(), 0xc56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0x33);
        EXPECT(gbc.readMem(0xc569), 0xcb);
        EXPECT(gbc.readMem(0xc56a), 0x66);
        // CB 66 00AF
        gbc.setState(0x7345, 0xb72e, 0xa90, 0x375f, 0x8790, 0x6dbe, 0x0, 0x1);
        gbc.writeMem(0x6dbe, { 0xf2 });
        gbc.writeMem(0x7345, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb72e);
        EXPECT(gbc.pc(), 0x7347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00B0
        gbc.setState(0x6186, 0xd657, 0x9c0, 0xc0b2, 0xa6ad, 0x8aff, 0x1, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0x66 });
        gbc.writeMem(0x8aff, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd657);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aff), 0x57);
        // CB 66 00B1
        gbc.setState(0xb2f0, 0xec2b, 0xe480, 0x681e, 0xa89c, 0x86c2, 0x0, 0x1);
        gbc.writeMem(0x86c2, { 0xec });
        gbc.writeMem(0xb2f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xec2b);
        EXPECT(gbc.pc(), 0xb2f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c2), 0xec);
        EXPECT(gbc.readMem(0xb2f0), 0xcb);
        EXPECT(gbc.readMem(0xb2f1), 0x66);
        // CB 66 00B2
        gbc.setState(0x9118, 0x8123, 0xaf20, 0xbc5b, 0x1f1e, 0xb72, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xbc });
        gbc.writeMem(0x9118, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x911a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9118), 0xcb);
        EXPECT(gbc.readMem(0x9119), 0x66);
        // CB 66 00B3
        gbc.setState(0x1e8a, 0x5df8, 0x7ac0, 0xfb9e, 0xe448, 0x2626, 0x0, 0x0);
        gbc.writeMem(0x1e8a, { 0xcb, 0x66 });
        gbc.writeMem(0x2626, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5df8);
        EXPECT(gbc.pc(), 0x1e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 00B4
        gbc.setState(0xae38, 0xe4a9, 0x4c10, 0x28cf, 0xa08c, 0x1691, 0x1, 0x0);
        gbc.writeMem(0x1691, { 0x5 });
        gbc.writeMem(0xae38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe4a9);
        EXPECT(gbc.pc(), 0xae3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae38), 0xcb);
        EXPECT(gbc.readMem(0xae39), 0x66);
        // CB 66 00B5
        gbc.setState(0x3458, 0x589, 0x570, 0x10fe, 0xab00, 0x4b3b, 0x1, 0x0);
        gbc.writeMem(0x3458, { 0xcb, 0x66 });
        gbc.writeMem(0x4b3b, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x589);
        EXPECT(gbc.pc(), 0x345a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00B6
        gbc.setState(0xdd37, 0x94dc, 0x4380, 0x2315, 0xd03a, 0xdc79, 0x0, 0x1);
        gbc.writeMem(0xdc79, { 0x4f });
        gbc.writeMem(0xdd37, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x94dc);
        EXPECT(gbc.pc(), 0xdd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc79), 0x4f);
        EXPECT(gbc.readMem(0xdd37), 0xcb);
        EXPECT(gbc.readMem(0xdd38), 0x66);
        // CB 66 00B7
        gbc.setState(0x98aa, 0x527a, 0x5cf0, 0x6b4c, 0xacf3, 0x1c34, 0x1, 0x0);
        gbc.writeMem(0x1c34, { 0x54 });
        gbc.writeMem(0x98aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0x98ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98aa), 0xcb);
        EXPECT(gbc.readMem(0x98ab), 0x66);
        // CB 66 00B8
        gbc.setState(0x6a1, 0x75f5, 0xf200, 0x481d, 0x962b, 0x8b87, 0x0, 0x1);
        gbc.writeMem(0x6a1, { 0xcb, 0x66 });
        gbc.writeMem(0x8b87, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x75f5);
        EXPECT(gbc.pc(), 0x6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b87), 0x2f);
        // CB 66 00B9
        gbc.setState(0x4615, 0xcb9b, 0x6e50, 0x57f8, 0x5d15, 0x7aa5, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0x66 });
        gbc.writeMem(0x7aa5, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcb9b);
        EXPECT(gbc.pc(), 0x4617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00BA
        gbc.setState(0x243c, 0xe77b, 0x61f0, 0xfc97, 0x2fe5, 0x3677, 0x0, 0x0);
        gbc.writeMem(0x243c, { 0xcb, 0x66 });
        gbc.writeMem(0x3677, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe77b);
        EXPECT(gbc.pc(), 0x243e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00BB
        gbc.setState(0x4cdd, 0x2fbc, 0xbc70, 0x89d5, 0x6a39, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x4cdd, { 0xcb, 0x66 });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2fbc);
        EXPECT(gbc.pc(), 0x4cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd657), 0x96);
        // CB 66 00BC
        gbc.setState(0xa77b, 0x4065, 0x40d0, 0x5910, 0x19f6, 0xd41, 0x1, 0x0);
        gbc.writeMem(0xd41, { 0xdc });
        gbc.writeMem(0xa77b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4065);
        EXPECT(gbc.pc(), 0xa77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77b), 0xcb);
        EXPECT(gbc.readMem(0xa77c), 0x66);
        // CB 66 00BD
        gbc.setState(0xd321, 0x9fb7, 0x5170, 0xf405, 0xc434, 0x21ee, 0x1, 0x1);
        gbc.writeMem(0x21ee, { 0x75 });
        gbc.writeMem(0xd321, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9fb7);
        EXPECT(gbc.pc(), 0xd323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd321), 0xcb);
        EXPECT(gbc.readMem(0xd322), 0x66);
        // CB 66 00BE
        gbc.setState(0x3ff1, 0x3381, 0x1a30, 0x8de3, 0x7d33, 0x648b, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0x66 });
        gbc.writeMem(0x648b, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3381);
        EXPECT(gbc.pc(), 0x3ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00BF
        gbc.setState(0x3172, 0x5ea2, 0x6400, 0xfca5, 0xafb0, 0xbe7e, 0x0, 0x1);
        gbc.writeMem(0x3172, { 0xcb, 0x66 });
        gbc.writeMem(0xbe7e, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5ea2);
        EXPECT(gbc.pc(), 0x3174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7e), 0x8d);
        // CB 66 00C0
        gbc.setState(0x4ac8, 0x9ae9, 0x7130, 0xfabb, 0x2a9, 0xdc2, 0x0, 0x0);
        gbc.writeMem(0xdc2, { 0xc7 });
        gbc.writeMem(0x4ac8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9ae9);
        EXPECT(gbc.pc(), 0x4aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00C1
        gbc.setState(0x7dde, 0x5767, 0xa1c0, 0x61df, 0x6174, 0xfb06, 0x1, 0x1);
        gbc.writeMem(0x7dde, { 0xcb, 0x66 });
        gbc.writeMem(0xfb06, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5767);
        EXPECT(gbc.pc(), 0x7de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb06), 0x99);
        // CB 66 00C2
        gbc.setState(0x9e02, 0x7011, 0x79b0, 0xbcf, 0x806a, 0x408c, 0x0, 0x1);
        gbc.writeMem(0x408c, { 0x9c });
        gbc.writeMem(0x9e02, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7011);
        EXPECT(gbc.pc(), 0x9e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e02), 0xcb);
        EXPECT(gbc.readMem(0x9e03), 0x66);
        // CB 66 00C3
        gbc.setState(0x142d, 0xde9d, 0xaf50, 0x5610, 0x1033, 0xe676, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xcb, 0x66 });
        gbc.writeMem(0xe676, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xde9d);
        EXPECT(gbc.pc(), 0x142f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe676), 0x8c);
        // CB 66 00C4
        gbc.setState(0xbc28, 0x38b9, 0xc7f0, 0x28ce, 0x611f, 0x4579, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0xe0 });
        gbc.writeMem(0xbc28, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x38b9);
        EXPECT(gbc.pc(), 0xbc2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc28), 0xcb);
        EXPECT(gbc.readMem(0xbc29), 0x66);
        // CB 66 00C5
        gbc.setState(0x65fb, 0x46c1, 0xab40, 0xf069, 0x6d15, 0x8443, 0x0, 0x1);
        gbc.writeMem(0x65fb, { 0xcb, 0x66 });
        gbc.writeMem(0x8443, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x46c1);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8443), 0x6d);
        // CB 66 00C6
        gbc.setState(0x162f, 0xfd09, 0x5db0, 0xe802, 0xbfe8, 0x14d0, 0x1, 0x0);
        gbc.writeMem(0x14d0, { 0xf0 });
        gbc.writeMem(0x162f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfd09);
        EXPECT(gbc.pc(), 0x1631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00C7
        gbc.setState(0x3f4, 0x2e69, 0xc380, 0xf674, 0x17fb, 0x2185, 0x0, 0x0);
        gbc.writeMem(0x3f4, { 0xcb, 0x66 });
        gbc.writeMem(0x2185, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2e69);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 00C8
        gbc.setState(0xabda, 0xc09c, 0xbb30, 0x91dc, 0x272e, 0xcdcd, 0x0, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0x66 });
        gbc.writeMem(0xcdcd, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0xabdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabda), 0xcb);
        EXPECT(gbc.readMem(0xabdb), 0x66);
        EXPECT(gbc.readMem(0xcdcd), 0xc1);
        // CB 66 00C9
        gbc.setState(0xa18c, 0xea59, 0x9b20, 0xc22b, 0xf225, 0xf825, 0x1, 0x0);
        gbc.writeMem(0xa18c, { 0xcb, 0x66 });
        gbc.writeMem(0xf825, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xea59);
        EXPECT(gbc.pc(), 0xa18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18c), 0xcb);
        EXPECT(gbc.readMem(0xa18d), 0x66);
        EXPECT(gbc.readMem(0xf825), 0xf2);
        // CB 66 00CA
        gbc.setState(0x764c, 0x4589, 0x7f20, 0xf12d, 0x353a, 0x5483, 0x1, 0x0);
        gbc.writeMem(0x5483, { 0xa0 });
        gbc.writeMem(0x764c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4589);
        EXPECT(gbc.pc(), 0x764e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 00CB
        gbc.setState(0xdb8a, 0xbae5, 0x8940, 0x99d4, 0x40f5, 0x6e41, 0x1, 0x0);
        gbc.writeMem(0x6e41, { 0xbe });
        gbc.writeMem(0xdb8a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbae5);
        EXPECT(gbc.pc(), 0xdb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8a), 0xcb);
        EXPECT(gbc.readMem(0xdb8b), 0x66);
        // CB 66 00CC
        gbc.setState(0x6d53, 0xaa9f, 0x6950, 0xadd, 0x2191, 0x5dad, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0x64 });
        gbc.writeMem(0x6d53, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xaa9f);
        EXPECT(gbc.pc(), 0x6d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00CD
        gbc.setState(0xad98, 0xaa16, 0x6870, 0xf64a, 0x9b42, 0x3179, 0x0, 0x1);
        gbc.writeMem(0x3179, { 0x42 });
        gbc.writeMem(0xad98, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xaa16);
        EXPECT(gbc.pc(), 0xad9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad98), 0xcb);
        EXPECT(gbc.readMem(0xad99), 0x66);
        // CB 66 00CE
        gbc.setState(0x8efa, 0x6a1d, 0x3660, 0x6a3c, 0x71f2, 0x6a58, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0x6e });
        gbc.writeMem(0x8efa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6a1d);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x66);
        // CB 66 00CF
        gbc.setState(0x252a, 0x2ed1, 0x2d0, 0xdc8b, 0xd8fa, 0x70a8, 0x0, 0x0);
        gbc.writeMem(0x252a, { 0xcb, 0x66 });
        gbc.writeMem(0x70a8, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2ed1);
        EXPECT(gbc.pc(), 0x252c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00D0
        gbc.setState(0x5292, 0x1e70, 0x2c70, 0x1741, 0x5220, 0xa227, 0x1, 0x0);
        gbc.writeMem(0x5292, { 0xcb, 0x66 });
        gbc.writeMem(0xa227, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1e70);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa227), 0xd4);
        // CB 66 00D1
        gbc.setState(0x6ed0, 0x3208, 0xba70, 0x9cc, 0x5de0, 0x323f, 0x1, 0x0);
        gbc.writeMem(0x323f, { 0x93 });
        gbc.writeMem(0x6ed0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3208);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00D2
        gbc.setState(0xb460, 0x93ff, 0x2ec0, 0xec2c, 0x988d, 0x700f, 0x0, 0x0);
        gbc.writeMem(0x700f, { 0x1 });
        gbc.writeMem(0xb460, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x93ff);
        EXPECT(gbc.pc(), 0xb462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb460), 0xcb);
        EXPECT(gbc.readMem(0xb461), 0x66);
        // CB 66 00D3
        gbc.setState(0xdd55, 0x686a, 0x2540, 0x4f61, 0x4e4d, 0x577c, 0x0, 0x0);
        gbc.writeMem(0x577c, { 0xec });
        gbc.writeMem(0xdd55, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x686a);
        EXPECT(gbc.pc(), 0xdd57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd55), 0xcb);
        EXPECT(gbc.readMem(0xdd56), 0x66);
        // CB 66 00D4
        gbc.setState(0x8758, 0xd030, 0x0, 0xc60c, 0x8cea, 0x8985, 0x0, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0x66 });
        gbc.writeMem(0x8985, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0x875a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8758), 0xcb);
        EXPECT(gbc.readMem(0x8759), 0x66);
        EXPECT(gbc.readMem(0x8985), 0x3b);
        // CB 66 00D5
        gbc.setState(0xb35b, 0xc501, 0x82f0, 0xd9de, 0xbe60, 0x9e38, 0x1, 0x0);
        gbc.writeMem(0x9e38, { 0xef });
        gbc.writeMem(0xb35b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc501);
        EXPECT(gbc.pc(), 0xb35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e38), 0xef);
        EXPECT(gbc.readMem(0xb35b), 0xcb);
        EXPECT(gbc.readMem(0xb35c), 0x66);
        // CB 66 00D6
        gbc.setState(0xcaa4, 0x77b6, 0x1080, 0xd318, 0x9f97, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x405a, { 0x75 });
        gbc.writeMem(0xcaa4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x77b6);
        EXPECT(gbc.pc(), 0xcaa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa4), 0xcb);
        EXPECT(gbc.readMem(0xcaa5), 0x66);
        // CB 66 00D7
        gbc.setState(0x1c8f, 0x10b6, 0x3400, 0xb861, 0xc627, 0xd401, 0x0, 0x0);
        gbc.writeMem(0x1c8f, { 0xcb, 0x66 });
        gbc.writeMem(0xd401, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x10b6);
        EXPECT(gbc.pc(), 0x1c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd401), 0x1e);
        // CB 66 00D8
        gbc.setState(0xb553, 0xe937, 0x380, 0x9496, 0xa36c, 0x1888, 0x0, 0x0);
        gbc.writeMem(0x1888, { 0xa1 });
        gbc.writeMem(0xb553, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe937);
        EXPECT(gbc.pc(), 0xb555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb553), 0xcb);
        EXPECT(gbc.readMem(0xb554), 0x66);
        // CB 66 00D9
        gbc.setState(0x5a23, 0xae73, 0x37d0, 0x4653, 0xdd59, 0xbf00, 0x1, 0x0);
        gbc.writeMem(0x5a23, { 0xcb, 0x66 });
        gbc.writeMem(0xbf00, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xae73);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf00), 0xbb);
        // CB 66 00DA
        gbc.setState(0x3b09, 0xd83e, 0x4530, 0xa646, 0xff7a, 0xbc06, 0x1, 0x0);
        gbc.writeMem(0x3b09, { 0xcb, 0x66 });
        gbc.writeMem(0xbc06, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd83e);
        EXPECT(gbc.pc(), 0x3b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc06), 0x97);
        // CB 66 00DB
        gbc.setState(0x4a1f, 0xf540, 0x8310, 0x536b, 0xfcd1, 0x9dc7, 0x1, 0x1);
        gbc.writeMem(0x4a1f, { 0xcb, 0x66 });
        gbc.writeMem(0x9dc7, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0x4a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc7), 0x5e);
        // CB 66 00DC
        gbc.setState(0x34d7, 0x80e4, 0xaef0, 0x841e, 0x7a55, 0xbc75, 0x1, 0x0);
        gbc.writeMem(0x34d7, { 0xcb, 0x66 });
        gbc.writeMem(0xbc75, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0x34d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc75), 0x79);
        // CB 66 00DD
        gbc.setState(0xb9e3, 0xe3bd, 0xeee0, 0x66f7, 0xcbe5, 0xf9a7, 0x1, 0x0);
        gbc.writeMem(0xb9e3, { 0xcb, 0x66 });
        gbc.writeMem(0xf9a7, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe3bd);
        EXPECT(gbc.pc(), 0xb9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e3), 0xcb);
        EXPECT(gbc.readMem(0xb9e4), 0x66);
        EXPECT(gbc.readMem(0xf9a7), 0xc9);
        // CB 66 00DE
        gbc.setState(0xcf73, 0x9f41, 0x9e30, 0xe667, 0xf97c, 0x4587, 0x1, 0x1);
        gbc.writeMem(0x4587, { 0xaa });
        gbc.writeMem(0xcf73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9f41);
        EXPECT(gbc.pc(), 0xcf75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf73), 0xcb);
        EXPECT(gbc.readMem(0xcf74), 0x66);
        // CB 66 00DF
        gbc.setState(0x96dc, 0x17b5, 0x44d0, 0xd1bd, 0xd89a, 0x45, 0x1, 0x1);
        gbc.writeMem(0x45, { 0xaf });
        gbc.writeMem(0x96dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x17b5);
        EXPECT(gbc.pc(), 0x96de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96dc), 0xcb);
        EXPECT(gbc.readMem(0x96dd), 0x66);
        // CB 66 00E0
        gbc.setState(0x5c91, 0xf161, 0x40d0, 0x372c, 0xd9d7, 0x80c2, 0x1, 0x1);
        gbc.writeMem(0x5c91, { 0xcb, 0x66 });
        gbc.writeMem(0x80c2, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0x5c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c2), 0xef);
        // CB 66 00E1
        gbc.setState(0x8913, 0x3cd4, 0xbab0, 0x35ff, 0x98f9, 0xbc36, 0x1, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x66 });
        gbc.writeMem(0xbc36, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3cd4);
        EXPECT(gbc.pc(), 0x8915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8913), 0xcb);
        EXPECT(gbc.readMem(0x8914), 0x66);
        EXPECT(gbc.readMem(0xbc36), 0x15);
        // CB 66 00E2
        gbc.setState(0x51e4, 0x93a, 0xbdf0, 0x963a, 0x1fc2, 0x6192, 0x1, 0x0);
        gbc.writeMem(0x51e4, { 0xcb, 0x66 });
        gbc.writeMem(0x6192, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x93a);
        EXPECT(gbc.pc(), 0x51e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00E3
        gbc.setState(0x2947, 0x182c, 0xcb40, 0x2695, 0xd0de, 0xfb34, 0x0, 0x0);
        gbc.writeMem(0x2947, { 0xcb, 0x66 });
        gbc.writeMem(0xfb34, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x182c);
        EXPECT(gbc.pc(), 0x2949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb34), 0x41);
        // CB 66 00E4
        gbc.setState(0x555a, 0x7776, 0x19b0, 0xc077, 0xfca7, 0xfa42, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0x66 });
        gbc.writeMem(0xfa42, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7776);
        EXPECT(gbc.pc(), 0x555c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa42), 0x74);
        // CB 66 00E5
        gbc.setState(0x6730, 0x1234, 0x5490, 0x828a, 0xe10b, 0x411b, 0x0, 0x1);
        gbc.writeMem(0x411b, { 0x39 });
        gbc.writeMem(0x6730, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1234);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00E6
        gbc.setState(0xc23, 0x7ebf, 0x6690, 0xb89f, 0xa065, 0x58d, 0x1, 0x1);
        gbc.writeMem(0x58d, { 0xae });
        gbc.writeMem(0xc23, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7ebf);
        EXPECT(gbc.pc(), 0xc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00E7
        gbc.setState(0xc432, 0x748a, 0x17b0, 0xea11, 0x918f, 0xf8fb, 0x0, 0x0);
        gbc.writeMem(0xc432, { 0xcb, 0x66 });
        gbc.writeMem(0xf8fb, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x748a);
        EXPECT(gbc.pc(), 0xc434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc432), 0xcb);
        EXPECT(gbc.readMem(0xc433), 0x66);
        EXPECT(gbc.readMem(0xf8fb), 0x3f);
        // CB 66 00E8
        gbc.setState(0xaf4d, 0x449e, 0x7280, 0xc1cd, 0xc560, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0xaf4d, { 0xcb, 0x66 });
        gbc.writeMem(0xb15c, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x449e);
        EXPECT(gbc.pc(), 0xaf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4d), 0xcb);
        EXPECT(gbc.readMem(0xaf4e), 0x66);
        EXPECT(gbc.readMem(0xb15c), 0x24);
        // CB 66 00E9
        gbc.setState(0x2a10, 0x2ebf, 0xb100, 0xb99a, 0x9c0f, 0x62a0, 0x1, 0x1);
        gbc.writeMem(0x2a10, { 0xcb, 0x66 });
        gbc.writeMem(0x62a0, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2ebf);
        EXPECT(gbc.pc(), 0x2a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 00EA
        gbc.setState(0x1d6c, 0xb2ab, 0xcef0, 0xa1d, 0xc2c7, 0x6a29, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0x66 });
        gbc.writeMem(0x6a29, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb2ab);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00EB
        gbc.setState(0x8b0e, 0x1816, 0xbdd0, 0x34f, 0xb12e, 0x3cb4, 0x1, 0x1);
        gbc.writeMem(0x3cb4, { 0x8d });
        gbc.writeMem(0x8b0e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1816);
        EXPECT(gbc.pc(), 0x8b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0e), 0xcb);
        EXPECT(gbc.readMem(0x8b0f), 0x66);
        // CB 66 00EC
        gbc.setState(0xe9fa, 0x12f0, 0xc030, 0x70d9, 0x38c2, 0xc46, 0x1, 0x1);
        gbc.writeMem(0xc46, { 0x54 });
        gbc.writeMem(0xe9fa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x12f0);
        EXPECT(gbc.pc(), 0xe9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fa), 0xcb);
        EXPECT(gbc.readMem(0xe9fb), 0x66);
        // CB 66 00ED
        gbc.setState(0x61b3, 0x2cb9, 0x4430, 0x71ab, 0x90dd, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0x4e55, { 0xcb });
        gbc.writeMem(0x61b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2cb9);
        EXPECT(gbc.pc(), 0x61b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 00EE
        gbc.setState(0x6939, 0xd642, 0xb980, 0xedd9, 0x8025, 0xd581, 0x1, 0x1);
        gbc.writeMem(0x6939, { 0xcb, 0x66 });
        gbc.writeMem(0xd581, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd642);
        EXPECT(gbc.pc(), 0x693b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd581), 0xa5);
        // CB 66 00EF
        gbc.setState(0x225a, 0xd0bf, 0x32a0, 0xeb10, 0xa3a, 0xa370, 0x0, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x66 });
        gbc.writeMem(0xa370, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd0bf);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa370), 0x4f);
        // CB 66 00F0
        gbc.setState(0x9b12, 0x1fde, 0xbc10, 0xa656, 0x8a15, 0x28e7, 0x0, 0x1);
        gbc.writeMem(0x28e7, { 0xc9 });
        gbc.writeMem(0x9b12, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1fde);
        EXPECT(gbc.pc(), 0x9b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b12), 0xcb);
        EXPECT(gbc.readMem(0x9b13), 0x66);
        // CB 66 00F1
        gbc.setState(0xd1a2, 0xaa46, 0x2f80, 0xa2d1, 0x7210, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0x9b7f, { 0xec });
        gbc.writeMem(0xd1a2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaa46);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7f), 0xec);
        EXPECT(gbc.readMem(0xd1a2), 0xcb);
        EXPECT(gbc.readMem(0xd1a3), 0x66);
        // CB 66 00F2
        gbc.setState(0xbc68, 0xdb7d, 0xf380, 0x1c17, 0x3679, 0x17dd, 0x1, 0x0);
        gbc.writeMem(0x17dd, { 0x1e });
        gbc.writeMem(0xbc68, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdb7d);
        EXPECT(gbc.pc(), 0xbc6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc68), 0xcb);
        EXPECT(gbc.readMem(0xbc69), 0x66);
        // CB 66 00F3
        gbc.setState(0xece0, 0x527e, 0x4c90, 0x3d48, 0x7344, 0xab74, 0x1, 0x0);
        gbc.writeMem(0xab74, { 0x79 });
        gbc.writeMem(0xece0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x527e);
        EXPECT(gbc.pc(), 0xece2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab74), 0x79);
        EXPECT(gbc.readMem(0xece0), 0xcb);
        EXPECT(gbc.readMem(0xece1), 0x66);
        // CB 66 00F4
        gbc.setState(0x1c70, 0x2d38, 0x2fb0, 0x5626, 0x7c2a, 0x9ee1, 0x0, 0x1);
        gbc.writeMem(0x1c70, { 0xcb, 0x66 });
        gbc.writeMem(0x9ee1, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2d38);
        EXPECT(gbc.pc(), 0x1c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee1), 0x7b);
        // CB 66 00F5
        gbc.setState(0x7c5f, 0x1fd5, 0x6890, 0xf206, 0x2e7a, 0xeaf9, 0x1, 0x0);
        gbc.writeMem(0x7c5f, { 0xcb, 0x66 });
        gbc.writeMem(0xeaf9, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1fd5);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf9), 0x5a);
        // CB 66 00F7
        gbc.setState(0xdb4b, 0xb865, 0x6910, 0x262d, 0x67fe, 0xd93f, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0xae });
        gbc.writeMem(0xdb4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb865);
        EXPECT(gbc.pc(), 0xdb4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd93f), 0xae);
        EXPECT(gbc.readMem(0xdb4b), 0xcb);
        EXPECT(gbc.readMem(0xdb4c), 0x66);
        // CB 66 00F8
        gbc.setState(0xc31e, 0x4027, 0x9490, 0x60ac, 0x1ec4, 0xe9da, 0x0, 0x1);
        gbc.writeMem(0xc31e, { 0xcb, 0x66 });
        gbc.writeMem(0xe9da, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4027);
        EXPECT(gbc.pc(), 0xc320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc31e), 0xcb);
        EXPECT(gbc.readMem(0xc31f), 0x66);
        EXPECT(gbc.readMem(0xe9da), 0xb7);
        // CB 66 00F9
        gbc.setState(0xd866, 0x1dc1, 0x88e0, 0x3df1, 0x7035, 0x723e, 0x1, 0x1);
        gbc.writeMem(0x723e, { 0x26 });
        gbc.writeMem(0xd866, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1dc1);
        EXPECT(gbc.pc(), 0xd868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd866), 0xcb);
        EXPECT(gbc.readMem(0xd867), 0x66);
        // CB 66 00FA
        gbc.setState(0xb1cd, 0x7978, 0x9580, 0x46c9, 0xfe55, 0xee9, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xef });
        gbc.writeMem(0xb1cd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7978);
        EXPECT(gbc.pc(), 0xb1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cd), 0xcb);
        EXPECT(gbc.readMem(0xb1ce), 0x66);
        // CB 66 00FB
        gbc.setState(0x4dbe, 0x498e, 0x2000, 0xa241, 0x31d6, 0xe96b, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0x66 });
        gbc.writeMem(0xe96b, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x498e);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96b), 0x63);
        // CB 66 00FC
        gbc.setState(0x5e9f, 0x4dd3, 0x5930, 0x6b91, 0x1975, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x5e9f, { 0xcb, 0x66 });
        gbc.writeMem(0xa343, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4dd3);
        EXPECT(gbc.pc(), 0x5ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa343), 0xd);
        // CB 66 00FD
        gbc.setState(0xb3f5, 0x6e1e, 0x8310, 0x54a1, 0xef1, 0xec64, 0x1, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x66 });
        gbc.writeMem(0xec64, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6e1e);
        EXPECT(gbc.pc(), 0xb3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f5), 0xcb);
        EXPECT(gbc.readMem(0xb3f6), 0x66);
        EXPECT(gbc.readMem(0xec64), 0xbc);
        // CB 66 00FE
        gbc.setState(0xcbbf, 0x55ce, 0x7280, 0x7ec5, 0x4ba, 0x80e7, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0xb9 });
        gbc.writeMem(0xcbbf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x55ce);
        EXPECT(gbc.pc(), 0xcbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e7), 0xb9);
        EXPECT(gbc.readMem(0xcbbf), 0xcb);
        EXPECT(gbc.readMem(0xcbc0), 0x66);
        // CB 66 00FF
        gbc.setState(0x57af, 0x2d20, 0x1a60, 0xcf9c, 0x8d2d, 0xfbff, 0x1, 0x1);
        gbc.writeMem(0x57af, { 0xcb, 0x66 });
        gbc.writeMem(0xfbff, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2d20);
        EXPECT(gbc.pc(), 0x57b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbff), 0x88);
        // CB 66 0100
        gbc.setState(0x1c95, 0xc4b2, 0xd7d0, 0x3a28, 0x8ecc, 0xf6b4, 0x1, 0x0);
        gbc.writeMem(0x1c95, { 0xcb, 0x66 });
        gbc.writeMem(0xf6b4, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc4b2);
        EXPECT(gbc.pc(), 0x1c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6b4), 0x56);
        // CB 66 0101
        gbc.setState(0xd9d8, 0xcac9, 0x61f0, 0xd0fb, 0x22b2, 0x5f08, 0x1, 0x0);
        gbc.writeMem(0x5f08, { 0xa9 });
        gbc.writeMem(0xd9d8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcac9);
        EXPECT(gbc.pc(), 0xd9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d8), 0xcb);
        EXPECT(gbc.readMem(0xd9d9), 0x66);
        // CB 66 0102
        gbc.setState(0xbf75, 0x814d, 0x60d0, 0x2fa5, 0x2f44, 0x8a1c, 0x1, 0x1);
        gbc.writeMem(0x8a1c, { 0xcb });
        gbc.writeMem(0xbf75, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x814d);
        EXPECT(gbc.pc(), 0xbf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1c), 0xcb);
        EXPECT(gbc.readMem(0xbf75), 0xcb);
        EXPECT(gbc.readMem(0xbf76), 0x66);
        // CB 66 0103
        gbc.setState(0x2bc6, 0x5b84, 0x4970, 0xe2b4, 0x574b, 0x3d7f, 0x0, 0x0);
        gbc.writeMem(0x2bc6, { 0xcb, 0x66 });
        gbc.writeMem(0x3d7f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5b84);
        EXPECT(gbc.pc(), 0x2bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0104
        gbc.setState(0x5946, 0xecab, 0x9ed0, 0x6211, 0x97d3, 0x113f, 0x1, 0x0);
        gbc.writeMem(0x113f, { 0xc2 });
        gbc.writeMem(0x5946, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xecab);
        EXPECT(gbc.pc(), 0x5948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0105
        gbc.setState(0x3833, 0xd5c9, 0xc2e0, 0xe851, 0x7e7, 0x429d, 0x1, 0x0);
        gbc.writeMem(0x3833, { 0xcb, 0x66 });
        gbc.writeMem(0x429d, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd5c9);
        EXPECT(gbc.pc(), 0x3835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0106
        gbc.setState(0xd482, 0x6d2c, 0x6670, 0x137f, 0x54a3, 0xac46, 0x0, 0x1);
        gbc.writeMem(0xac46, { 0xca });
        gbc.writeMem(0xd482, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6d2c);
        EXPECT(gbc.pc(), 0xd484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac46), 0xca);
        EXPECT(gbc.readMem(0xd482), 0xcb);
        EXPECT(gbc.readMem(0xd483), 0x66);
        // CB 66 0107
        gbc.setState(0xb0bf, 0x380b, 0xad90, 0x609, 0x6ce3, 0x6e5e, 0x1, 0x0);
        gbc.writeMem(0x6e5e, { 0xb2 });
        gbc.writeMem(0xb0bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x380b);
        EXPECT(gbc.pc(), 0xb0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bf), 0xcb);
        EXPECT(gbc.readMem(0xb0c0), 0x66);
        // CB 66 0109
        gbc.setState(0x8de2, 0xd6d4, 0xf510, 0x4150, 0x3226, 0xbc7, 0x1, 0x1);
        gbc.writeMem(0xbc7, { 0x5e });
        gbc.writeMem(0x8de2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd6d4);
        EXPECT(gbc.pc(), 0x8de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de2), 0xcb);
        EXPECT(gbc.readMem(0x8de3), 0x66);
        // CB 66 010A
        gbc.setState(0x947f, 0xe30d, 0xf140, 0x9bfe, 0xa43a, 0x5efb, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0xad });
        gbc.writeMem(0x947f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe30d);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947f), 0xcb);
        EXPECT(gbc.readMem(0x9480), 0x66);
        // CB 66 010B
        gbc.setState(0x9397, 0xfee3, 0x73d0, 0xc90d, 0x1518, 0x9363, 0x0, 0x0);
        gbc.writeMem(0x9363, { 0xab });
        gbc.writeMem(0x9397, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0x9399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9363), 0xab);
        EXPECT(gbc.readMem(0x9397), 0xcb);
        EXPECT(gbc.readMem(0x9398), 0x66);
        // CB 66 010C
        gbc.setState(0x823b, 0xb2d0, 0x7460, 0x3d80, 0x9304, 0xfebc, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xcb, 0x66 });
        gbc.writeMem(0xfebc, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb2d0);
        EXPECT(gbc.pc(), 0x823d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823b), 0xcb);
        EXPECT(gbc.readMem(0x823c), 0x66);
        EXPECT(gbc.readMem(0xfebc), 0x6d);
        // CB 66 010D
        gbc.setState(0xcf6f, 0xa2fb, 0xe7c0, 0x17e4, 0x9935, 0x5fa, 0x1, 0x1);
        gbc.writeMem(0x5fa, { 0x9d });
        gbc.writeMem(0xcf6f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa2fb);
        EXPECT(gbc.pc(), 0xcf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6f), 0xcb);
        EXPECT(gbc.readMem(0xcf70), 0x66);
        // CB 66 010E
        gbc.setState(0xde35, 0x38cf, 0x5590, 0x9fc6, 0x5d6, 0x1c80, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0x8f });
        gbc.writeMem(0xde35, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x38cf);
        EXPECT(gbc.pc(), 0xde37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde35), 0xcb);
        EXPECT(gbc.readMem(0xde36), 0x66);
        // CB 66 010F
        gbc.setState(0xe2e2, 0xeb4a, 0x4f80, 0x17ec, 0xd16a, 0x1920, 0x1, 0x1);
        gbc.writeMem(0x1920, { 0x1e });
        gbc.writeMem(0xe2e2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeb4a);
        EXPECT(gbc.pc(), 0xe2e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e2), 0xcb);
        EXPECT(gbc.readMem(0xe2e3), 0x66);
        // CB 66 0110
        gbc.setState(0x4dc5, 0xcc79, 0x3c10, 0x1718, 0x4a24, 0xafab, 0x0, 0x1);
        gbc.writeMem(0x4dc5, { 0xcb, 0x66 });
        gbc.writeMem(0xafab, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcc79);
        EXPECT(gbc.pc(), 0x4dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafab), 0x4d);
        // CB 66 0111
        gbc.setState(0x63c2, 0x51a3, 0xe560, 0xfd4e, 0xf4ae, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x28e6, { 0xa8 });
        gbc.writeMem(0x63c2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x51a3);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0113
        gbc.setState(0x69e0, 0x2263, 0x6ff0, 0x8bda, 0x9760, 0xdf, 0x0, 0x1);
        gbc.writeMem(0xdf, { 0xa });
        gbc.writeMem(0x69e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2263);
        EXPECT(gbc.pc(), 0x69e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0114
        gbc.setState(0xa985, 0xca1, 0xb860, 0xe659, 0x38b1, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0x91dc, { 0xdc });
        gbc.writeMem(0xa985, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xca1);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91dc), 0xdc);
        EXPECT(gbc.readMem(0xa985), 0xcb);
        EXPECT(gbc.readMem(0xa986), 0x66);
        // CB 66 0115
        gbc.setState(0x12dc, 0xbbd, 0xf180, 0xf4db, 0x198a, 0xe4ec, 0x1, 0x0);
        gbc.writeMem(0x12dc, { 0xcb, 0x66 });
        gbc.writeMem(0xe4ec, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbbd);
        EXPECT(gbc.pc(), 0x12de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ec), 0xb5);
        // CB 66 0116
        gbc.setState(0xcff8, 0x628d, 0x1e50, 0xc06b, 0x293b, 0x75dd, 0x0, 0x1);
        gbc.writeMem(0x75dd, { 0x44 });
        gbc.writeMem(0xcff8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x628d);
        EXPECT(gbc.pc(), 0xcffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff8), 0xcb);
        EXPECT(gbc.readMem(0xcff9), 0x66);
        // CB 66 0117
        gbc.setState(0x5732, 0x42b6, 0x9200, 0xe9d8, 0xf1fa, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0x9a });
        gbc.writeMem(0x5732, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x42b6);
        EXPECT(gbc.pc(), 0x5734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0118
        gbc.setState(0x77a2, 0xa902, 0xa1e0, 0xaa28, 0x3e8f, 0x4a59, 0x0, 0x0);
        gbc.writeMem(0x4a59, { 0x5 });
        gbc.writeMem(0x77a2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0x77a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0119
        gbc.setState(0x86fa, 0x7f08, 0x7570, 0xd619, 0xa1d7, 0xb283, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0x66 });
        gbc.writeMem(0xb283, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7f08);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fa), 0xcb);
        EXPECT(gbc.readMem(0x86fb), 0x66);
        EXPECT(gbc.readMem(0xb283), 0x88);
        // CB 66 011A
        gbc.setState(0xac3e, 0xb779, 0x8f40, 0xf5db, 0x54a0, 0x49db, 0x0, 0x1);
        gbc.writeMem(0x49db, { 0x73 });
        gbc.writeMem(0xac3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0xac40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac3e), 0xcb);
        EXPECT(gbc.readMem(0xac3f), 0x66);
        // CB 66 011B
        gbc.setState(0xe985, 0xe024, 0x28f0, 0xa320, 0xd157, 0x1322, 0x0, 0x1);
        gbc.writeMem(0x1322, { 0xb5 });
        gbc.writeMem(0xe985, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe024);
        EXPECT(gbc.pc(), 0xe987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe985), 0xcb);
        EXPECT(gbc.readMem(0xe986), 0x66);
        // CB 66 011C
        gbc.setState(0x4bee, 0x6d69, 0x7510, 0x3735, 0xf745, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0x4bee, { 0xcb, 0x66 });
        gbc.writeMem(0xae1b, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6d69);
        EXPECT(gbc.pc(), 0x4bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1b), 0xaa);
        // CB 66 011D
        gbc.setState(0x60b1, 0x7e1, 0xa4a0, 0x8bcb, 0x8af1, 0x7031, 0x0, 0x1);
        gbc.writeMem(0x60b1, { 0xcb, 0x66 });
        gbc.writeMem(0x7031, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7e1);
        EXPECT(gbc.pc(), 0x60b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 011E
        gbc.setState(0x6a79, 0xc1c8, 0xbcf0, 0x6a3a, 0xda79, 0x312, 0x1, 0x0);
        gbc.writeMem(0x312, { 0xaf });
        gbc.writeMem(0x6a79, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc1c8);
        EXPECT(gbc.pc(), 0x6a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 011F
        gbc.setState(0x114, 0x87b2, 0x560, 0x38a1, 0x578b, 0xff4, 0x0, 0x1);
        gbc.writeMem(0x114, { 0xcb, 0x66 });
        gbc.writeMem(0xff4, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x87b2);
        EXPECT(gbc.pc(), 0x116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0120
        gbc.setState(0x3b74, 0x1996, 0x8a90, 0x3a4a, 0x1679, 0xe02a, 0x1, 0x0);
        gbc.writeMem(0x3b74, { 0xcb, 0x66 });
        gbc.writeMem(0xe02a, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1996);
        EXPECT(gbc.pc(), 0x3b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe02a), 0xfb);
        // CB 66 0121
        gbc.setState(0x8064, 0x7986, 0x4cb0, 0x6f75, 0x165f, 0x67c5, 0x0, 0x1);
        gbc.writeMem(0x67c5, { 0x7c });
        gbc.writeMem(0x8064, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7986);
        EXPECT(gbc.pc(), 0x8066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8064), 0xcb);
        EXPECT(gbc.readMem(0x8065), 0x66);
        // CB 66 0122
        gbc.setState(0xcca3, 0x30de, 0x1920, 0xe068, 0x885, 0x59c5, 0x1, 0x0);
        gbc.writeMem(0x59c5, { 0xcc });
        gbc.writeMem(0xcca3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x30de);
        EXPECT(gbc.pc(), 0xcca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca3), 0xcb);
        EXPECT(gbc.readMem(0xcca4), 0x66);
        // CB 66 0123
        gbc.setState(0x6371, 0x76be, 0xe690, 0x1cdd, 0xd117, 0xb066, 0x1, 0x0);
        gbc.writeMem(0x6371, { 0xcb, 0x66 });
        gbc.writeMem(0xb066, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x76be);
        EXPECT(gbc.pc(), 0x6373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb066), 0x76);
        // CB 66 0124
        gbc.setState(0xcb3f, 0x5650, 0xabf0, 0xed94, 0x60a3, 0xbb3b, 0x0, 0x1);
        gbc.writeMem(0xbb3b, { 0xde });
        gbc.writeMem(0xcb3f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5650);
        EXPECT(gbc.pc(), 0xcb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3b), 0xde);
        EXPECT(gbc.readMem(0xcb3f), 0xcb);
        EXPECT(gbc.readMem(0xcb40), 0x66);
        // CB 66 0125
        gbc.setState(0xa02a, 0x7d4c, 0x4a60, 0x9cfb, 0xe05d, 0xc7bb, 0x0, 0x1);
        gbc.writeMem(0xa02a, { 0xcb, 0x66 });
        gbc.writeMem(0xc7bb, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7d4c);
        EXPECT(gbc.pc(), 0xa02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02a), 0xcb);
        EXPECT(gbc.readMem(0xa02b), 0x66);
        EXPECT(gbc.readMem(0xc7bb), 0xf9);
        // CB 66 0126
        gbc.setState(0x8356, 0x8b2c, 0xf120, 0xc8f3, 0xb4f0, 0xf061, 0x0, 0x1);
        gbc.writeMem(0x8356, { 0xcb, 0x66 });
        gbc.writeMem(0xf061, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8b2c);
        EXPECT(gbc.pc(), 0x8358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8356), 0xcb);
        EXPECT(gbc.readMem(0x8357), 0x66);
        EXPECT(gbc.readMem(0xf061), 0x9f);
        // CB 66 0127
        gbc.setState(0xb2a1, 0x6e5d, 0x5ee0, 0x9713, 0xc2b, 0xe01a, 0x0, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0x66 });
        gbc.writeMem(0xe01a, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6e5d);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xcb);
        EXPECT(gbc.readMem(0xb2a2), 0x66);
        EXPECT(gbc.readMem(0xe01a), 0x9e);
        // CB 66 0128
        gbc.setState(0x9bdb, 0x8c7f, 0xe80, 0x69b6, 0xc626, 0x1352, 0x1, 0x0);
        gbc.writeMem(0x1352, { 0x7f });
        gbc.writeMem(0x9bdb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8c7f);
        EXPECT(gbc.pc(), 0x9bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdb), 0xcb);
        EXPECT(gbc.readMem(0x9bdc), 0x66);
        // CB 66 0129
        gbc.setState(0x951f, 0xb5f7, 0xae0, 0xefb2, 0xb340, 0x2cc1, 0x1, 0x1);
        gbc.writeMem(0x2cc1, { 0xbc });
        gbc.writeMem(0x951f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb5f7);
        EXPECT(gbc.pc(), 0x9521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951f), 0xcb);
        EXPECT(gbc.readMem(0x9520), 0x66);
        // CB 66 012A
        gbc.setState(0x7586, 0xe49a, 0xb300, 0x644f, 0x985f, 0xcacd, 0x1, 0x1);
        gbc.writeMem(0x7586, { 0xcb, 0x66 });
        gbc.writeMem(0xcacd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe49a);
        EXPECT(gbc.pc(), 0x7588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcacd), 0x4a);
        // CB 66 012B
        gbc.setState(0xdef7, 0x8abc, 0xa40, 0x7cde, 0x1f41, 0x1c7e, 0x0, 0x0);
        gbc.writeMem(0x1c7e, { 0xad });
        gbc.writeMem(0xdef7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8abc);
        EXPECT(gbc.pc(), 0xdef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef7), 0xcb);
        EXPECT(gbc.readMem(0xdef8), 0x66);
        // CB 66 012C
        gbc.setState(0x79a8, 0x15c4, 0xf290, 0xb617, 0x4e32, 0x58af, 0x0, 0x0);
        gbc.writeMem(0x58af, { 0xd1 });
        gbc.writeMem(0x79a8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x15c4);
        EXPECT(gbc.pc(), 0x79aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 012D
        gbc.setState(0xcef6, 0x8a5d, 0x88c0, 0x4ee9, 0x604f, 0xc194, 0x1, 0x0);
        gbc.writeMem(0xc194, { 0x33 });
        gbc.writeMem(0xcef6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8a5d);
        EXPECT(gbc.pc(), 0xcef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc194), 0x33);
        EXPECT(gbc.readMem(0xcef6), 0xcb);
        EXPECT(gbc.readMem(0xcef7), 0x66);
        // CB 66 012E
        gbc.setState(0x6235, 0x8687, 0x9350, 0x3c08, 0x8fb4, 0xb818, 0x1, 0x1);
        gbc.writeMem(0x6235, { 0xcb, 0x66 });
        gbc.writeMem(0xb818, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8687);
        EXPECT(gbc.pc(), 0x6237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb818), 0x90);
        // CB 66 012F
        gbc.setState(0x43fb, 0x636c, 0x7fa0, 0xf076, 0x7292, 0x6b75, 0x0, 0x1);
        gbc.writeMem(0x43fb, { 0xcb, 0x66 });
        gbc.writeMem(0x6b75, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x636c);
        EXPECT(gbc.pc(), 0x43fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0130
        gbc.setState(0x8f4d, 0xbf8a, 0x7ae0, 0xb866, 0x66d8, 0x5576, 0x0, 0x0);
        gbc.writeMem(0x5576, { 0x3c });
        gbc.writeMem(0x8f4d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbf8a);
        EXPECT(gbc.pc(), 0x8f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4d), 0xcb);
        EXPECT(gbc.readMem(0x8f4e), 0x66);
        // CB 66 0131
        gbc.setState(0xe4b8, 0x20a4, 0xaf50, 0xbb36, 0x8f55, 0x892c, 0x0, 0x1);
        gbc.writeMem(0x892c, { 0xf4 });
        gbc.writeMem(0xe4b8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0xe4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892c), 0xf4);
        EXPECT(gbc.readMem(0xe4b8), 0xcb);
        EXPECT(gbc.readMem(0xe4b9), 0x66);
        // CB 66 0132
        gbc.setState(0x7f51, 0xd98a, 0x60a0, 0x9d1e, 0x168f, 0x5bb8, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0x7 });
        gbc.writeMem(0x7f51, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x7f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0133
        gbc.setState(0xd3aa, 0xd855, 0x6480, 0x7993, 0x51, 0x43c4, 0x1, 0x0);
        gbc.writeMem(0x43c4, { 0x5a });
        gbc.writeMem(0xd3aa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd855);
        EXPECT(gbc.pc(), 0xd3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3aa), 0xcb);
        EXPECT(gbc.readMem(0xd3ab), 0x66);
        // CB 66 0134
        gbc.setState(0x213f, 0xee6d, 0xd6f0, 0xacf8, 0x877e, 0x5c79, 0x0, 0x0);
        gbc.writeMem(0x213f, { 0xcb, 0x66 });
        gbc.writeMem(0x5c79, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xee6d);
        EXPECT(gbc.pc(), 0x2141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0135
        gbc.setState(0x858, 0xce1e, 0xa6d0, 0xfecc, 0x6474, 0x1698, 0x1, 0x0);
        gbc.writeMem(0x858, { 0xcb, 0x66 });
        gbc.writeMem(0x1698, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xce1e);
        EXPECT(gbc.pc(), 0x85a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0136
        gbc.setState(0xe3e5, 0x5a69, 0x8cc0, 0xa73d, 0xbd03, 0x523f, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0x3b });
        gbc.writeMem(0xe3e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5a69);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e5), 0xcb);
        EXPECT(gbc.readMem(0xe3e6), 0x66);
        // CB 66 0137
        gbc.setState(0xdc2c, 0xc7d, 0x5510, 0x5eeb, 0x4370, 0x8f49, 0x1, 0x0);
        gbc.writeMem(0x8f49, { 0x5e });
        gbc.writeMem(0xdc2c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc7d);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f49), 0x5e);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0x66);
        // CB 66 0138
        gbc.setState(0xc29, 0x8770, 0x93f0, 0x5784, 0x41f9, 0x25a9, 0x1, 0x1);
        gbc.writeMem(0xc29, { 0xcb, 0x66 });
        gbc.writeMem(0x25a9, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8770);
        EXPECT(gbc.pc(), 0xc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0139
        gbc.setState(0x26c, 0x86c1, 0x9f50, 0xa3fc, 0xfab1, 0xd606, 0x0, 0x0);
        gbc.writeMem(0x26c, { 0xcb, 0x66 });
        gbc.writeMem(0xd606, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x86c1);
        EXPECT(gbc.pc(), 0x26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd606), 0x70);
        // CB 66 013A
        gbc.setState(0x2dbe, 0x7ac0, 0xd3f0, 0x3c1a, 0xf932, 0x1c4a, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xef });
        gbc.writeMem(0x2dbe, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0x2dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 013B
        gbc.setState(0xd1d, 0x3ed8, 0x4530, 0x220, 0x5134, 0xd4a8, 0x1, 0x1);
        gbc.writeMem(0xd1d, { 0xcb, 0x66 });
        gbc.writeMem(0xd4a8, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3ed8);
        EXPECT(gbc.pc(), 0xd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a8), 0xea);
        // CB 66 013C
        gbc.setState(0x3f25, 0xe9d8, 0xf250, 0xcfd3, 0x4bca, 0xc879, 0x1, 0x0);
        gbc.writeMem(0x3f25, { 0xcb, 0x66 });
        gbc.writeMem(0xc879, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe9d8);
        EXPECT(gbc.pc(), 0x3f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc879), 0x27);
        // CB 66 013D
        gbc.setState(0x9692, 0x7354, 0x9550, 0xb91e, 0xbb02, 0xd337, 0x1, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0x66 });
        gbc.writeMem(0xd337, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7354);
        EXPECT(gbc.pc(), 0x9694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9692), 0xcb);
        EXPECT(gbc.readMem(0x9693), 0x66);
        EXPECT(gbc.readMem(0xd337), 0x44);
        // CB 66 013E
        gbc.setState(0x4d48, 0x28c8, 0xe7c0, 0x57e1, 0xe4d3, 0xd288, 0x0, 0x0);
        gbc.writeMem(0x4d48, { 0xcb, 0x66 });
        gbc.writeMem(0xd288, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x28c8);
        EXPECT(gbc.pc(), 0x4d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd288), 0x84);
        // CB 66 013F
        gbc.setState(0xd800, 0x7467, 0x59b0, 0x6133, 0x9b1c, 0xd7d0, 0x0, 0x0);
        gbc.writeMem(0xd7d0, { 0x8 });
        gbc.writeMem(0xd800, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7467);
        EXPECT(gbc.pc(), 0xd802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d0), 0x8);
        EXPECT(gbc.readMem(0xd800), 0xcb);
        EXPECT(gbc.readMem(0xd801), 0x66);
        // CB 66 0140
        gbc.setState(0xab44, 0x37e4, 0xefc0, 0x484c, 0xe424, 0x51bc, 0x1, 0x1);
        gbc.writeMem(0x51bc, { 0x8b });
        gbc.writeMem(0xab44, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x37e4);
        EXPECT(gbc.pc(), 0xab46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab44), 0xcb);
        EXPECT(gbc.readMem(0xab45), 0x66);
        // CB 66 0141
        gbc.setState(0xec83, 0xa89d, 0xc020, 0x693c, 0xfc90, 0xd0a9, 0x1, 0x0);
        gbc.writeMem(0xd0a9, { 0x8b });
        gbc.writeMem(0xec83, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa89d);
        EXPECT(gbc.pc(), 0xec85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a9), 0x8b);
        EXPECT(gbc.readMem(0xec83), 0xcb);
        EXPECT(gbc.readMem(0xec84), 0x66);
        // CB 66 0142
        gbc.setState(0xd4fb, 0xa739, 0x8820, 0xf935, 0x93c2, 0x40ff, 0x1, 0x1);
        gbc.writeMem(0x40ff, { 0xb6 });
        gbc.writeMem(0xd4fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa739);
        EXPECT(gbc.pc(), 0xd4fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fb), 0xcb);
        EXPECT(gbc.readMem(0xd4fc), 0x66);
        // CB 66 0143
        gbc.setState(0x857d, 0xa5b7, 0x83b0, 0x653c, 0x310b, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x59a0, { 0x2d });
        gbc.writeMem(0x857d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa5b7);
        EXPECT(gbc.pc(), 0x857f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857d), 0xcb);
        EXPECT(gbc.readMem(0x857e), 0x66);
        // CB 66 0144
        gbc.setState(0x69f0, 0xc03c, 0x3260, 0x2570, 0x4b0, 0x4e8, 0x1, 0x1);
        gbc.writeMem(0x4e8, { 0x65 });
        gbc.writeMem(0x69f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc03c);
        EXPECT(gbc.pc(), 0x69f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0145
        gbc.setState(0x19bc, 0xe56b, 0xdc20, 0xbb61, 0x590b, 0x6b10, 0x0, 0x1);
        gbc.writeMem(0x19bc, { 0xcb, 0x66 });
        gbc.writeMem(0x6b10, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe56b);
        EXPECT(gbc.pc(), 0x19be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0146
        gbc.setState(0x8f4f, 0x4ee3, 0xc30, 0x2090, 0xb07f, 0x295a, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0x3b });
        gbc.writeMem(0x8f4f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4ee3);
        EXPECT(gbc.pc(), 0x8f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4f), 0xcb);
        EXPECT(gbc.readMem(0x8f50), 0x66);
        // CB 66 0147
        gbc.setState(0x552d, 0xeebe, 0xcad0, 0x4e6b, 0xcaad, 0x1f5, 0x1, 0x1);
        gbc.writeMem(0x1f5, { 0x2a });
        gbc.writeMem(0x552d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xeebe);
        EXPECT(gbc.pc(), 0x552f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0148
        gbc.setState(0xcb2b, 0xc82d, 0xf4c0, 0x827b, 0xfa5e, 0x9abc, 0x0, 0x1);
        gbc.writeMem(0x9abc, { 0xcb });
        gbc.writeMem(0xcb2b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc82d);
        EXPECT(gbc.pc(), 0xcb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abc), 0xcb);
        EXPECT(gbc.readMem(0xcb2b), 0xcb);
        EXPECT(gbc.readMem(0xcb2c), 0x66);
        // CB 66 0149
        gbc.setState(0x4e5a, 0x853e, 0x430, 0x6645, 0x2c2e, 0xe385, 0x0, 0x0);
        gbc.writeMem(0x4e5a, { 0xcb, 0x66 });
        gbc.writeMem(0xe385, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0x4e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe385), 0xa6);
        // CB 66 014A
        gbc.setState(0xd3d5, 0x4cfe, 0x4b90, 0x567b, 0x527e, 0x45ce, 0x1, 0x0);
        gbc.writeMem(0x45ce, { 0xc2 });
        gbc.writeMem(0xd3d5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0xd3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d5), 0xcb);
        EXPECT(gbc.readMem(0xd3d6), 0x66);
        // CB 66 014B
        gbc.setState(0xab1e, 0xab55, 0x58f0, 0xdd38, 0x1ae4, 0x78a7, 0x0, 0x0);
        gbc.writeMem(0x78a7, { 0xea });
        gbc.writeMem(0xab1e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xab55);
        EXPECT(gbc.pc(), 0xab20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1e), 0xcb);
        EXPECT(gbc.readMem(0xab1f), 0x66);
        // CB 66 014C
        gbc.setState(0x9dbd, 0x2a3c, 0x6be0, 0x95f9, 0x79eb, 0xdf8f, 0x1, 0x1);
        gbc.writeMem(0x9dbd, { 0xcb, 0x66 });
        gbc.writeMem(0xdf8f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2a3c);
        EXPECT(gbc.pc(), 0x9dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbd), 0xcb);
        EXPECT(gbc.readMem(0x9dbe), 0x66);
        EXPECT(gbc.readMem(0xdf8f), 0xab);
        // CB 66 014D
        gbc.setState(0xdcb0, 0xf40, 0x8e90, 0x96f5, 0x7887, 0x2dde, 0x1, 0x1);
        gbc.writeMem(0x2dde, { 0xe2 });
        gbc.writeMem(0xdcb0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf40);
        EXPECT(gbc.pc(), 0xdcb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb0), 0xcb);
        EXPECT(gbc.readMem(0xdcb1), 0x66);
        // CB 66 014E
        gbc.setState(0x9bff, 0xda9f, 0xb150, 0x4c78, 0xae22, 0x5982, 0x1, 0x0);
        gbc.writeMem(0x5982, { 0xa7 });
        gbc.writeMem(0x9bff, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xda9f);
        EXPECT(gbc.pc(), 0x9c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bff), 0xcb);
        EXPECT(gbc.readMem(0x9c00), 0x66);
        // CB 66 014F
        gbc.setState(0x9abe, 0xddb2, 0xb070, 0x7c40, 0xf759, 0x6ff0, 0x0, 0x1);
        gbc.writeMem(0x6ff0, { 0x89 });
        gbc.writeMem(0x9abe, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xddb2);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9abe), 0xcb);
        EXPECT(gbc.readMem(0x9abf), 0x66);
        // CB 66 0150
        gbc.setState(0x2fa, 0x9ecd, 0xc8f0, 0xaf5e, 0x6f6f, 0x953d, 0x1, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x66 });
        gbc.writeMem(0x953d, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9ecd);
        EXPECT(gbc.pc(), 0x2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x953d), 0xb);
        // CB 66 0151
        gbc.setState(0x8c7a, 0xa3b1, 0x82a0, 0xd4ec, 0xe9c0, 0x1954, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0x8c });
        gbc.writeMem(0x8c7a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa3b1);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7a), 0xcb);
        EXPECT(gbc.readMem(0x8c7b), 0x66);
        // CB 66 0152
        gbc.setState(0x2cf8, 0x4ed7, 0xee00, 0xf966, 0xfb3d, 0xff02, 0x0, 0x0);
        gbc.writeMem(0x2cf8, { 0xcb, 0x66 });
        gbc.writeMem(0xff02, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4ed7);
        EXPECT(gbc.pc(), 0x2cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff02), 0x37);
        // CB 66 0153
        gbc.setState(0x7fa7, 0x9766, 0xdb70, 0x1ddb, 0x316d, 0x3d92, 0x0, 0x0);
        gbc.writeMem(0x3d92, { 0xb1 });
        gbc.writeMem(0x7fa7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9766);
        EXPECT(gbc.pc(), 0x7fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0154
        gbc.setState(0x65f6, 0x7ae2, 0xce30, 0x39a3, 0x1beb, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0x3f60, { 0xe });
        gbc.writeMem(0x65f6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7ae2);
        EXPECT(gbc.pc(), 0x65f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0155
        gbc.setState(0x9075, 0x2772, 0x2f90, 0x3e98, 0x8aad, 0x61ca, 0x0, 0x0);
        gbc.writeMem(0x61ca, { 0x98 });
        gbc.writeMem(0x9075, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x9077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9075), 0xcb);
        EXPECT(gbc.readMem(0x9076), 0x66);
        // CB 66 0156
        gbc.setState(0x8fbe, 0x852c, 0xe8c0, 0xdf39, 0x64d8, 0xa83e, 0x1, 0x0);
        gbc.writeMem(0x8fbe, { 0xcb, 0x66 });
        gbc.writeMem(0xa83e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x852c);
        EXPECT(gbc.pc(), 0x8fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbe), 0xcb);
        EXPECT(gbc.readMem(0x8fbf), 0x66);
        EXPECT(gbc.readMem(0xa83e), 0xbe);
        // CB 66 0157
        gbc.setState(0x1f3e, 0x3a28, 0x41b0, 0x8da3, 0x25b8, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0x1f3e, { 0xcb, 0x66 });
        gbc.writeMem(0x58d9, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3a28);
        EXPECT(gbc.pc(), 0x1f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0158
        gbc.setState(0x463c, 0xb744, 0xa2d0, 0x5bde, 0xf1ea, 0x3c58, 0x1, 0x0);
        gbc.writeMem(0x3c58, { 0xde });
        gbc.writeMem(0x463c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb744);
        EXPECT(gbc.pc(), 0x463e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0159
        gbc.setState(0xef13, 0x21aa, 0xb00, 0xf7a3, 0xa1d9, 0x854d, 0x0, 0x0);
        gbc.writeMem(0x854d, { 0x3e });
        gbc.writeMem(0xef13, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x21aa);
        EXPECT(gbc.pc(), 0xef15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854d), 0x3e);
        EXPECT(gbc.readMem(0xef13), 0xcb);
        EXPECT(gbc.readMem(0xef14), 0x66);
        // CB 66 015A
        gbc.setState(0x1863, 0x825f, 0x9930, 0x6168, 0xdbe8, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x1863, { 0xcb, 0x66 });
        gbc.writeMem(0xfda9, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x825f);
        EXPECT(gbc.pc(), 0x1865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfda9), 0x68);
        // CB 66 015B
        gbc.setState(0xdd7c, 0x5897, 0x23b0, 0x7cfa, 0x69eb, 0xffa4, 0x1, 0x1);
        gbc.writeMem(0xdd7c, { 0xcb, 0x66 });
        gbc.writeMem(0xffa4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5897);
        EXPECT(gbc.pc(), 0xdd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7c), 0xcb);
        EXPECT(gbc.readMem(0xdd7d), 0x66);
        EXPECT(gbc.readMem(0xffa4), 0xb8);
        // CB 66 015C
        gbc.setState(0xe478, 0x4753, 0x4c60, 0x9526, 0xb986, 0x7154, 0x0, 0x1);
        gbc.writeMem(0x7154, { 0xd8 });
        gbc.writeMem(0xe478, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4753);
        EXPECT(gbc.pc(), 0xe47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe478), 0xcb);
        EXPECT(gbc.readMem(0xe479), 0x66);
        // CB 66 015D
        gbc.setState(0xbe0b, 0x662, 0x5ce0, 0xbc0e, 0xb16e, 0xed43, 0x1, 0x1);
        gbc.writeMem(0xbe0b, { 0xcb, 0x66 });
        gbc.writeMem(0xed43, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x662);
        EXPECT(gbc.pc(), 0xbe0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0b), 0xcb);
        EXPECT(gbc.readMem(0xbe0c), 0x66);
        EXPECT(gbc.readMem(0xed43), 0x1c);
        // CB 66 015E
        gbc.setState(0x461e, 0x2b76, 0xcc30, 0xa023, 0x612a, 0xdb94, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x66 });
        gbc.writeMem(0xdb94, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2b76);
        EXPECT(gbc.pc(), 0x4620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb94), 0x17);
        // CB 66 015F
        gbc.setState(0xebf0, 0x2e7b, 0x6860, 0xd588, 0x2833, 0x60c7, 0x0, 0x0);
        gbc.writeMem(0x60c7, { 0x8e });
        gbc.writeMem(0xebf0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2e7b);
        EXPECT(gbc.pc(), 0xebf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf0), 0xcb);
        EXPECT(gbc.readMem(0xebf1), 0x66);
        // CB 66 0160
        gbc.setState(0x6b6b, 0x84ba, 0x5de0, 0x99e9, 0x7daa, 0xb796, 0x1, 0x0);
        gbc.writeMem(0x6b6b, { 0xcb, 0x66 });
        gbc.writeMem(0xb796, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x84ba);
        EXPECT(gbc.pc(), 0x6b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb796), 0x13);
        // CB 66 0161
        gbc.setState(0x963f, 0xa838, 0x4be0, 0xbd20, 0x9cea, 0xc7c2, 0x0, 0x1);
        gbc.writeMem(0x963f, { 0xcb, 0x66 });
        gbc.writeMem(0xc7c2, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa838);
        EXPECT(gbc.pc(), 0x9641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963f), 0xcb);
        EXPECT(gbc.readMem(0x9640), 0x66);
        EXPECT(gbc.readMem(0xc7c2), 0x1f);
        // CB 66 0162
        gbc.setState(0x1542, 0xab47, 0xd5e0, 0xfe6a, 0x58db, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x1542, { 0xcb, 0x66 });
        gbc.writeMem(0xaf84, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xab47);
        EXPECT(gbc.pc(), 0x1544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf84), 0xf9);
        // CB 66 0163
        gbc.setState(0x95e0, 0xe763, 0xf4e0, 0xb97d, 0xe626, 0x1858, 0x1, 0x1);
        gbc.writeMem(0x1858, { 0x1f });
        gbc.writeMem(0x95e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe763);
        EXPECT(gbc.pc(), 0x95e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e0), 0xcb);
        EXPECT(gbc.readMem(0x95e1), 0x66);
        // CB 66 0164
        gbc.setState(0xcccf, 0xe4b9, 0xa550, 0x3cfd, 0x9e3a, 0xec97, 0x0, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0x66 });
        gbc.writeMem(0xec97, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe4b9);
        EXPECT(gbc.pc(), 0xccd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcccf), 0xcb);
        EXPECT(gbc.readMem(0xccd0), 0x66);
        EXPECT(gbc.readMem(0xec97), 0x67);
        // CB 66 0165
        gbc.setState(0x4e32, 0x1155, 0x7010, 0xc10b, 0xd88, 0xed1d, 0x1, 0x0);
        gbc.writeMem(0x4e32, { 0xcb, 0x66 });
        gbc.writeMem(0xed1d, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1155);
        EXPECT(gbc.pc(), 0x4e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1d), 0x2e);
        // CB 66 0166
        gbc.setState(0x1260, 0x21ad, 0x2c10, 0xb0b5, 0x55be, 0x128b, 0x0, 0x0);
        gbc.writeMem(0x1260, { 0xcb, 0x66 });
        gbc.writeMem(0x128b, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0x1262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0167
        gbc.setState(0x4c5f, 0x7b14, 0x7bd0, 0xb2bd, 0x29f9, 0xc586, 0x1, 0x0);
        gbc.writeMem(0x4c5f, { 0xcb, 0x66 });
        gbc.writeMem(0xc586, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7b14);
        EXPECT(gbc.pc(), 0x4c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc586), 0xea);
        // CB 66 0168
        gbc.setState(0xbcc8, 0x534b, 0xb740, 0x31fd, 0xe10f, 0xcffe, 0x0, 0x1);
        gbc.writeMem(0xbcc8, { 0xcb, 0x66 });
        gbc.writeMem(0xcffe, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x534b);
        EXPECT(gbc.pc(), 0xbcca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc8), 0xcb);
        EXPECT(gbc.readMem(0xbcc9), 0x66);
        EXPECT(gbc.readMem(0xcffe), 0x3b);
        // CB 66 0169
        gbc.setState(0xb75f, 0xd20a, 0x23a0, 0x56c, 0x8afa, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0x6d12, { 0xca });
        gbc.writeMem(0xb75f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd20a);
        EXPECT(gbc.pc(), 0xb761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75f), 0xcb);
        EXPECT(gbc.readMem(0xb760), 0x66);
        // CB 66 016A
        gbc.setState(0x2a99, 0xed56, 0xd10, 0xb9aa, 0x2a10, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x2a99, { 0xcb, 0x66 });
        gbc.writeMem(0x8727, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xed56);
        EXPECT(gbc.pc(), 0x2a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8727), 0x11);
        // CB 66 016B
        gbc.setState(0xb958, 0x7f51, 0xa330, 0x1461, 0x8d60, 0xc8b2, 0x1, 0x1);
        gbc.writeMem(0xb958, { 0xcb, 0x66 });
        gbc.writeMem(0xc8b2, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0xb95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb958), 0xcb);
        EXPECT(gbc.readMem(0xb959), 0x66);
        EXPECT(gbc.readMem(0xc8b2), 0xb2);
        // CB 66 016C
        gbc.setState(0x62a, 0xb20, 0x9eb0, 0x6175, 0xd373, 0x482c, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0x66 });
        gbc.writeMem(0x482c, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb20);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 016D
        gbc.setState(0x98e7, 0x937f, 0xcc60, 0x27b5, 0x4adc, 0x3ab5, 0x0, 0x0);
        gbc.writeMem(0x3ab5, { 0x33 });
        gbc.writeMem(0x98e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x937f);
        EXPECT(gbc.pc(), 0x98e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e7), 0xcb);
        EXPECT(gbc.readMem(0x98e8), 0x66);
        // CB 66 016E
        gbc.setState(0x2ab7, 0x7786, 0x37b0, 0x5cc3, 0x9481, 0xa02b, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0xcb, 0x66 });
        gbc.writeMem(0xa02b, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7786);
        EXPECT(gbc.pc(), 0x2ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02b), 0x2d);
        // CB 66 016F
        gbc.setState(0x53f0, 0x7cf6, 0x5a10, 0x5c17, 0xe4a7, 0x352c, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0xea });
        gbc.writeMem(0x53f0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7cf6);
        EXPECT(gbc.pc(), 0x53f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0170
        gbc.setState(0xb7bb, 0x69df, 0xba00, 0xb373, 0x6eb3, 0x583e, 0x1, 0x1);
        gbc.writeMem(0x583e, { 0xf2 });
        gbc.writeMem(0xb7bb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x69df);
        EXPECT(gbc.pc(), 0xb7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7bb), 0xcb);
        EXPECT(gbc.readMem(0xb7bc), 0x66);
        // CB 66 0171
        gbc.setState(0x42eb, 0xa0b6, 0x3fc0, 0x5085, 0x4773, 0x431c, 0x0, 0x0);
        gbc.writeMem(0x42eb, { 0xcb, 0x66 });
        gbc.writeMem(0x431c, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa0b6);
        EXPECT(gbc.pc(), 0x42ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0172
        gbc.setState(0xa18, 0x357f, 0xb6a0, 0x615f, 0x7ef4, 0x720, 0x1, 0x1);
        gbc.writeMem(0x720, { 0x8b });
        gbc.writeMem(0xa18, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x357f);
        EXPECT(gbc.pc(), 0xa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0173
        gbc.setState(0x41c3, 0xb3c3, 0x3e20, 0xa8af, 0x279, 0xa181, 0x1, 0x0);
        gbc.writeMem(0x41c3, { 0xcb, 0x66 });
        gbc.writeMem(0xa181, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb3c3);
        EXPECT(gbc.pc(), 0x41c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa181), 0xa7);
        // CB 66 0174
        gbc.setState(0x2d96, 0x2f23, 0x85e0, 0xb9c8, 0x67cb, 0x503f, 0x0, 0x1);
        gbc.writeMem(0x2d96, { 0xcb, 0x66 });
        gbc.writeMem(0x503f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2f23);
        EXPECT(gbc.pc(), 0x2d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0175
        gbc.setState(0x8257, 0xcb11, 0x5b20, 0x9596, 0xf85d, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x8257, { 0xcb, 0x66 });
        gbc.writeMem(0xde60, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcb11);
        EXPECT(gbc.pc(), 0x8259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8257), 0xcb);
        EXPECT(gbc.readMem(0x8258), 0x66);
        EXPECT(gbc.readMem(0xde60), 0x37);
        // CB 66 0176
        gbc.setState(0xaac, 0x61dc, 0x6840, 0x2405, 0xc929, 0x758c, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0x66 });
        gbc.writeMem(0x758c, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x61dc);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0177
        gbc.setState(0x8511, 0x3a5f, 0x64d0, 0xdd73, 0x3689, 0xc187, 0x1, 0x0);
        gbc.writeMem(0x8511, { 0xcb, 0x66 });
        gbc.writeMem(0xc187, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3a5f);
        EXPECT(gbc.pc(), 0x8513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8511), 0xcb);
        EXPECT(gbc.readMem(0x8512), 0x66);
        EXPECT(gbc.readMem(0xc187), 0xda);
        // CB 66 0178
        gbc.setState(0x476c, 0xf19a, 0xdf90, 0x42f6, 0x319, 0x5a35, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0xcb, 0x66 });
        gbc.writeMem(0x5a35, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf19a);
        EXPECT(gbc.pc(), 0x476e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0179
        gbc.setState(0x992, 0xf83b, 0x5b00, 0xf23, 0x9c4d, 0xbe5f, 0x0, 0x0);
        gbc.writeMem(0x992, { 0xcb, 0x66 });
        gbc.writeMem(0xbe5f, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0x994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5f), 0xe1);
        // CB 66 017A
        gbc.setState(0xd33, 0x7fa, 0x2430, 0x8611, 0x85cb, 0x1c3a, 0x0, 0x0);
        gbc.writeMem(0xd33, { 0xcb, 0x66 });
        gbc.writeMem(0x1c3a, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7fa);
        EXPECT(gbc.pc(), 0xd35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 017B
        gbc.setState(0x63f5, 0x9039, 0x7260, 0x1e7b, 0x348f, 0xd5c0, 0x0, 0x0);
        gbc.writeMem(0x63f5, { 0xcb, 0x66 });
        gbc.writeMem(0xd5c0, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9039);
        EXPECT(gbc.pc(), 0x63f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c0), 0x49);
        // CB 66 017C
        gbc.setState(0x1095, 0xe3f, 0xca90, 0x9e2c, 0xd9c6, 0x4fae, 0x1, 0x1);
        gbc.writeMem(0x1095, { 0xcb, 0x66 });
        gbc.writeMem(0x4fae, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe3f);
        EXPECT(gbc.pc(), 0x1097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 017D
        gbc.setState(0x7aac, 0xaefe, 0xeca0, 0x6b70, 0x7026, 0xcba6, 0x0, 0x0);
        gbc.writeMem(0x7aac, { 0xcb, 0x66 });
        gbc.writeMem(0xcba6, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaefe);
        EXPECT(gbc.pc(), 0x7aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba6), 0x6e);
        // CB 66 017E
        gbc.setState(0x98c4, 0x4d18, 0x1f60, 0xb28d, 0x3d7f, 0x4bf8, 0x0, 0x0);
        gbc.writeMem(0x4bf8, { 0xc });
        gbc.writeMem(0x98c4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4d18);
        EXPECT(gbc.pc(), 0x98c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c4), 0xcb);
        EXPECT(gbc.readMem(0x98c5), 0x66);
        // CB 66 017F
        gbc.setState(0x9116, 0x72a2, 0xb970, 0x2c64, 0xed60, 0x172d, 0x0, 0x0);
        gbc.writeMem(0x172d, { 0x29 });
        gbc.writeMem(0x9116, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x72a2);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9116), 0xcb);
        EXPECT(gbc.readMem(0x9117), 0x66);
        // CB 66 0180
        gbc.setState(0xaf16, 0xf9dd, 0xd90, 0xa85, 0x3c26, 0x8083, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0xb5 });
        gbc.writeMem(0xaf16, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf9dd);
        EXPECT(gbc.pc(), 0xaf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8083), 0xb5);
        EXPECT(gbc.readMem(0xaf16), 0xcb);
        EXPECT(gbc.readMem(0xaf17), 0x66);
        // CB 66 0182
        gbc.setState(0x4b0, 0x97cf, 0x9c70, 0xdc33, 0x72b4, 0x8feb, 0x0, 0x1);
        gbc.writeMem(0x4b0, { 0xcb, 0x66 });
        gbc.writeMem(0x8feb, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x97cf);
        EXPECT(gbc.pc(), 0x4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8feb), 0x99);
        // CB 66 0183
        gbc.setState(0x9aa, 0x9df0, 0xdea0, 0xc76a, 0xe8b, 0x34b8, 0x1, 0x1);
        gbc.writeMem(0x9aa, { 0xcb, 0x66 });
        gbc.writeMem(0x34b8, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9df0);
        EXPECT(gbc.pc(), 0x9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0184
        gbc.setState(0xa8d2, 0x2394, 0x5520, 0x98cc, 0x23b7, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0xa8d2, { 0xcb, 0x66 });
        gbc.writeMem(0xf1b0, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2394);
        EXPECT(gbc.pc(), 0xa8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d2), 0xcb);
        EXPECT(gbc.readMem(0xa8d3), 0x66);
        EXPECT(gbc.readMem(0xf1b0), 0x5d);
        // CB 66 0185
        gbc.setState(0xc55f, 0xf425, 0x4de0, 0xdcd3, 0xe989, 0xf3d3, 0x1, 0x1);
        gbc.writeMem(0xc55f, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d3, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf425);
        EXPECT(gbc.pc(), 0xc561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55f), 0xcb);
        EXPECT(gbc.readMem(0xc560), 0x66);
        EXPECT(gbc.readMem(0xf3d3), 0xbb);
        // CB 66 0186
        gbc.setState(0xd60a, 0xfcd7, 0x4cf0, 0x56b5, 0xa77, 0xadf4, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0xc0 });
        gbc.writeMem(0xd60a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfcd7);
        EXPECT(gbc.pc(), 0xd60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf4), 0xc0);
        EXPECT(gbc.readMem(0xd60a), 0xcb);
        EXPECT(gbc.readMem(0xd60b), 0x66);
        // CB 66 0187
        gbc.setState(0x40c6, 0xf344, 0xc250, 0xf026, 0xdffd, 0xc48, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0x57 });
        gbc.writeMem(0x40c6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf344);
        EXPECT(gbc.pc(), 0x40c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0188
        gbc.setState(0x9da4, 0x63b5, 0x6190, 0xba38, 0x328c, 0xeb76, 0x0, 0x1);
        gbc.writeMem(0x9da4, { 0xcb, 0x66 });
        gbc.writeMem(0xeb76, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x63b5);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0x66);
        EXPECT(gbc.readMem(0xeb76), 0x2f);
        // CB 66 0189
        gbc.setState(0x96e, 0xac63, 0x69a0, 0x730d, 0xbb69, 0xb8ef, 0x1, 0x1);
        gbc.writeMem(0x96e, { 0xcb, 0x66 });
        gbc.writeMem(0xb8ef, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xac63);
        EXPECT(gbc.pc(), 0x970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ef), 0xad);
        // CB 66 018A
        gbc.setState(0x309, 0x6c5f, 0x1d80, 0x1043, 0x9ca2, 0x1dbd, 0x0, 0x0);
        gbc.writeMem(0x309, { 0xcb, 0x66 });
        gbc.writeMem(0x1dbd, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6c5f);
        EXPECT(gbc.pc(), 0x30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 018B
        gbc.setState(0x3025, 0xb911, 0xfbb0, 0x25d8, 0x3ac, 0x9fd, 0x1, 0x0);
        gbc.writeMem(0x9fd, { 0x1d });
        gbc.writeMem(0x3025, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb911);
        EXPECT(gbc.pc(), 0x3027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 018C
        gbc.setState(0x1614, 0x55e5, 0x6910, 0x441c, 0x495d, 0xb073, 0x1, 0x0);
        gbc.writeMem(0x1614, { 0xcb, 0x66 });
        gbc.writeMem(0xb073, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x55e5);
        EXPECT(gbc.pc(), 0x1616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb073), 0xfb);
        // CB 66 018D
        gbc.setState(0xece2, 0xf777, 0xdd80, 0x393b, 0xcb6c, 0x90af, 0x1, 0x0);
        gbc.writeMem(0x90af, { 0x82 });
        gbc.writeMem(0xece2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf777);
        EXPECT(gbc.pc(), 0xece4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90af), 0x82);
        EXPECT(gbc.readMem(0xece2), 0xcb);
        EXPECT(gbc.readMem(0xece3), 0x66);
        // CB 66 018E
        gbc.setState(0xb9c0, 0xa46, 0x6cf0, 0x3639, 0x4375, 0x7c95, 0x1, 0x0);
        gbc.writeMem(0x7c95, { 0xeb });
        gbc.writeMem(0xb9c0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa46);
        EXPECT(gbc.pc(), 0xb9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c0), 0xcb);
        EXPECT(gbc.readMem(0xb9c1), 0x66);
        // CB 66 018F
        gbc.setState(0x34cb, 0xc294, 0x77e0, 0xa72b, 0x1342, 0x8d3, 0x1, 0x0);
        gbc.writeMem(0x8d3, { 0x4b });
        gbc.writeMem(0x34cb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc294);
        EXPECT(gbc.pc(), 0x34cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0190
        gbc.setState(0xb7c1, 0xa4a0, 0x9aa0, 0xb704, 0x9e47, 0x33ae, 0x1, 0x0);
        gbc.writeMem(0x33ae, { 0xc1 });
        gbc.writeMem(0xb7c1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa4a0);
        EXPECT(gbc.pc(), 0xb7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c1), 0xcb);
        EXPECT(gbc.readMem(0xb7c2), 0x66);
        // CB 66 0191
        gbc.setState(0x86a0, 0x710d, 0xa620, 0xd5a0, 0x3cf, 0xa4dd, 0x1, 0x1);
        gbc.writeMem(0x86a0, { 0xcb, 0x66 });
        gbc.writeMem(0xa4dd, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x710d);
        EXPECT(gbc.pc(), 0x86a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a0), 0xcb);
        EXPECT(gbc.readMem(0x86a1), 0x66);
        EXPECT(gbc.readMem(0xa4dd), 0x65);
        // CB 66 0192
        gbc.setState(0x714d, 0xa45b, 0xf4c0, 0x25d5, 0xcb32, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0x714d, { 0xcb, 0x66 });
        gbc.writeMem(0xd46f, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa45b);
        EXPECT(gbc.pc(), 0x714f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46f), 0x6e);
        // CB 66 0193
        gbc.setState(0xb54a, 0xab58, 0x6920, 0xd1fe, 0x884, 0xaef5, 0x0, 0x0);
        gbc.writeMem(0xaef5, { 0x42 });
        gbc.writeMem(0xb54a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xab58);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef5), 0x42);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x66);
        // CB 66 0194
        gbc.setState(0x45f8, 0xd938, 0xf500, 0xece1, 0xcba7, 0x92f3, 0x1, 0x0);
        gbc.writeMem(0x45f8, { 0xcb, 0x66 });
        gbc.writeMem(0x92f3, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd938);
        EXPECT(gbc.pc(), 0x45fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f3), 0x75);
        // CB 66 0195
        gbc.setState(0x2140, 0x7550, 0xd090, 0x6d1f, 0x603d, 0xbd97, 0x0, 0x0);
        gbc.writeMem(0x2140, { 0xcb, 0x66 });
        gbc.writeMem(0xbd97, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7550);
        EXPECT(gbc.pc(), 0x2142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd97), 0x52);
        // CB 66 0196
        gbc.setState(0xce14, 0x623a, 0x4140, 0xfd31, 0x3c7d, 0x2706, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0x1b });
        gbc.writeMem(0xce14, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x623a);
        EXPECT(gbc.pc(), 0xce16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce14), 0xcb);
        EXPECT(gbc.readMem(0xce15), 0x66);
        // CB 66 0197
        gbc.setState(0x177b, 0x86e, 0xe100, 0x39cb, 0x8165, 0x8e15, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0x66 });
        gbc.writeMem(0x8e15, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x86e);
        EXPECT(gbc.pc(), 0x177d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e15), 0x84);
        // CB 66 0198
        gbc.setState(0x4873, 0xdedd, 0x2fa0, 0x92ff, 0x84d4, 0x39ee, 0x0, 0x1);
        gbc.writeMem(0x39ee, { 0xa3 });
        gbc.writeMem(0x4873, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdedd);
        EXPECT(gbc.pc(), 0x4875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0199
        gbc.setState(0x3d84, 0x5f28, 0x5ef0, 0xe89c, 0x4ce, 0xb727, 0x1, 0x0);
        gbc.writeMem(0x3d84, { 0xcb, 0x66 });
        gbc.writeMem(0xb727, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5f28);
        EXPECT(gbc.pc(), 0x3d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb727), 0xd6);
        // CB 66 019A
        gbc.setState(0xd2e8, 0xe88e, 0x2230, 0x93a8, 0x23c, 0xc15c, 0x1, 0x1);
        gbc.writeMem(0xc15c, { 0xcb });
        gbc.writeMem(0xd2e8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe88e);
        EXPECT(gbc.pc(), 0xd2ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15c), 0xcb);
        EXPECT(gbc.readMem(0xd2e8), 0xcb);
        EXPECT(gbc.readMem(0xd2e9), 0x66);
        // CB 66 019B
        gbc.setState(0x34b0, 0x52d6, 0xbdf0, 0x5995, 0x133a, 0x7bf9, 0x1, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0x66 });
        gbc.writeMem(0x7bf9, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x52d6);
        EXPECT(gbc.pc(), 0x34b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 019C
        gbc.setState(0xe252, 0xf934, 0xa20, 0xe4ed, 0xe8b8, 0x6c09, 0x0, 0x0);
        gbc.writeMem(0x6c09, { 0xd2 });
        gbc.writeMem(0xe252, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf934);
        EXPECT(gbc.pc(), 0xe254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe252), 0xcb);
        EXPECT(gbc.readMem(0xe253), 0x66);
        // CB 66 019D
        gbc.setState(0xdc2f, 0x7ba6, 0x54b0, 0x97c9, 0x50ad, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x5a98, { 0xd9 });
        gbc.writeMem(0xdc2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7ba6);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2f), 0xcb);
        EXPECT(gbc.readMem(0xdc30), 0x66);
        // CB 66 019E
        gbc.setState(0x4faf, 0x3420, 0xc220, 0x86d7, 0x8005, 0xce8a, 0x1, 0x0);
        gbc.writeMem(0x4faf, { 0xcb, 0x66 });
        gbc.writeMem(0xce8a, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3420);
        EXPECT(gbc.pc(), 0x4fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8a), 0xd7);
        // CB 66 01A1
        gbc.setState(0xa9e0, 0x30f, 0x51a0, 0xfa16, 0xea71, 0x1c2c, 0x0, 0x1);
        gbc.writeMem(0x1c2c, { 0xe0 });
        gbc.writeMem(0xa9e0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x30f);
        EXPECT(gbc.pc(), 0xa9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e0), 0xcb);
        EXPECT(gbc.readMem(0xa9e1), 0x66);
        // CB 66 01A4
        gbc.setState(0x4fa9, 0x8514, 0x2f00, 0xe181, 0x431a, 0x319f, 0x1, 0x1);
        gbc.writeMem(0x319f, { 0x6d });
        gbc.writeMem(0x4fa9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8514);
        EXPECT(gbc.pc(), 0x4fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01A5
        gbc.setState(0xe31c, 0xd2ab, 0xa3f0, 0x5a4c, 0xe686, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x1d19, { 0xff });
        gbc.writeMem(0xe31c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd2ab);
        EXPECT(gbc.pc(), 0xe31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31c), 0xcb);
        EXPECT(gbc.readMem(0xe31d), 0x66);
        // CB 66 01A6
        gbc.setState(0x5257, 0xe6f3, 0x76b0, 0xcd98, 0xdd6f, 0xe75, 0x1, 0x1);
        gbc.writeMem(0xe75, { 0x1a });
        gbc.writeMem(0x5257, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe6f3);
        EXPECT(gbc.pc(), 0x5259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01A7
        gbc.setState(0xa4c6, 0xaf4a, 0xad50, 0x2f05, 0x4a55, 0xf190, 0x1, 0x1);
        gbc.writeMem(0xa4c6, { 0xcb, 0x66 });
        gbc.writeMem(0xf190, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaf4a);
        EXPECT(gbc.pc(), 0xa4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c6), 0xcb);
        EXPECT(gbc.readMem(0xa4c7), 0x66);
        EXPECT(gbc.readMem(0xf190), 0x2f);
        // CB 66 01A8
        gbc.setState(0x16a6, 0xfea5, 0x5700, 0x3682, 0xe755, 0x49d1, 0x1, 0x1);
        gbc.writeMem(0x16a6, { 0xcb, 0x66 });
        gbc.writeMem(0x49d1, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfea5);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01A9
        gbc.setState(0x2b4a, 0xd399, 0xa6e0, 0x13ad, 0xae5, 0x5cd1, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0x66 });
        gbc.writeMem(0x5cd1, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd399);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01AA
        gbc.setState(0x68, 0xbd76, 0x4360, 0xc86f, 0xe713, 0x1db8, 0x1, 0x0);
        gbc.writeMem(0x68, { 0xcb, 0x66 });
        gbc.writeMem(0x1db8, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd76);
        EXPECT(gbc.pc(), 0x6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01AB
        gbc.setState(0x8453, 0xcde7, 0x3240, 0xa5fc, 0x1470, 0xb47f, 0x0, 0x1);
        gbc.writeMem(0x8453, { 0xcb, 0x66 });
        gbc.writeMem(0xb47f, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcde7);
        EXPECT(gbc.pc(), 0x8455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8453), 0xcb);
        EXPECT(gbc.readMem(0x8454), 0x66);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        // CB 66 01AC
        gbc.setState(0x87ed, 0x52b7, 0xc0d0, 0x767d, 0xc14c, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x7353, { 0x62 });
        gbc.writeMem(0x87ed, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x52b7);
        EXPECT(gbc.pc(), 0x87ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ed), 0xcb);
        EXPECT(gbc.readMem(0x87ee), 0x66);
        // CB 66 01AD
        gbc.setState(0x41c3, 0xf83, 0x4ed0, 0xa64b, 0x9b97, 0x458a, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0xcb, 0x66 });
        gbc.writeMem(0x458a, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf83);
        EXPECT(gbc.pc(), 0x41c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01AE
        gbc.setState(0x3ad7, 0x5c0f, 0x9fb0, 0xe847, 0x570, 0x6aec, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0x66 });
        gbc.writeMem(0x6aec, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5c0f);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01AF
        gbc.setState(0xb6c1, 0x75f5, 0xe880, 0x1b0, 0xd507, 0xfe60, 0x0, 0x0);
        gbc.writeMem(0xb6c1, { 0xcb, 0x66 });
        gbc.writeMem(0xfe60, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x75f5);
        EXPECT(gbc.pc(), 0xb6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c1), 0xcb);
        EXPECT(gbc.readMem(0xb6c2), 0x66);
        EXPECT(gbc.readMem(0xfe60), 0xfb);
        // CB 66 01B0
        gbc.setState(0x8f7, 0x5ba2, 0xbf0, 0x81bb, 0x1eb4, 0x32d2, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x66 });
        gbc.writeMem(0x32d2, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5ba2);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01B1
        gbc.setState(0x5a99, 0x7382, 0x5eb0, 0x8d8e, 0xce72, 0xf61, 0x0, 0x1);
        gbc.writeMem(0xf61, { 0xe });
        gbc.writeMem(0x5a99, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7382);
        EXPECT(gbc.pc(), 0x5a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01B2
        gbc.setState(0x76b3, 0x388f, 0x12a0, 0x758d, 0xc4e1, 0xbe36, 0x0, 0x1);
        gbc.writeMem(0x76b3, { 0xcb, 0x66 });
        gbc.writeMem(0xbe36, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x388f);
        EXPECT(gbc.pc(), 0x76b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe36), 0x6e);
        // CB 66 01B3
        gbc.setState(0x13f3, 0x2c45, 0x1200, 0x5700, 0xb0b4, 0x3936, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x66 });
        gbc.writeMem(0x3936, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0x13f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01B4
        gbc.setState(0x92f8, 0xa89e, 0xb510, 0xa4dd, 0x84e3, 0x9f2b, 0x1, 0x0);
        gbc.writeMem(0x92f8, { 0xcb, 0x66 });
        gbc.writeMem(0x9f2b, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa89e);
        EXPECT(gbc.pc(), 0x92fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f8), 0xcb);
        EXPECT(gbc.readMem(0x92f9), 0x66);
        EXPECT(gbc.readMem(0x9f2b), 0xc2);
        // CB 66 01B5
        gbc.setState(0xdaaa, 0xe8ef, 0x1300, 0xae46, 0xea5d, 0xd819, 0x1, 0x0);
        gbc.writeMem(0xd819, { 0x33 });
        gbc.writeMem(0xdaaa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe8ef);
        EXPECT(gbc.pc(), 0xdaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd819), 0x33);
        EXPECT(gbc.readMem(0xdaaa), 0xcb);
        EXPECT(gbc.readMem(0xdaab), 0x66);
        // CB 66 01B6
        gbc.setState(0xa7f1, 0xe528, 0x6ba0, 0x1c86, 0xd23e, 0xee6d, 0x0, 0x1);
        gbc.writeMem(0xa7f1, { 0xcb, 0x66 });
        gbc.writeMem(0xee6d, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe528);
        EXPECT(gbc.pc(), 0xa7f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f1), 0xcb);
        EXPECT(gbc.readMem(0xa7f2), 0x66);
        EXPECT(gbc.readMem(0xee6d), 0xe3);
        // CB 66 01B7
        gbc.setState(0xa13f, 0x9e75, 0xe190, 0xe3fe, 0x177d, 0xa188, 0x0, 0x1);
        gbc.writeMem(0xa13f, { 0xcb, 0x66 });
        gbc.writeMem(0xa188, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9e75);
        EXPECT(gbc.pc(), 0xa141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13f), 0xcb);
        EXPECT(gbc.readMem(0xa140), 0x66);
        EXPECT(gbc.readMem(0xa188), 0x52);
        // CB 66 01B8
        gbc.setState(0x4285, 0x6ba1, 0x1500, 0xfe86, 0x58c6, 0x63e2, 0x1, 0x1);
        gbc.writeMem(0x4285, { 0xcb, 0x66 });
        gbc.writeMem(0x63e2, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6ba1);
        EXPECT(gbc.pc(), 0x4287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01B9
        gbc.setState(0xb104, 0x5b66, 0x8100, 0xa0f9, 0xa8f7, 0x2b49, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0xcf });
        gbc.writeMem(0xb104, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5b66);
        EXPECT(gbc.pc(), 0xb106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb104), 0xcb);
        EXPECT(gbc.readMem(0xb105), 0x66);
        // CB 66 01BA
        gbc.setState(0x1eca, 0xa128, 0xf5e0, 0x7fc7, 0x1262, 0x3405, 0x0, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0x66 });
        gbc.writeMem(0x3405, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa128);
        EXPECT(gbc.pc(), 0x1ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01BB
        gbc.setState(0x64a7, 0xd6a2, 0xf160, 0xf737, 0x3220, 0x43f0, 0x0, 0x0);
        gbc.writeMem(0x43f0, { 0x2 });
        gbc.writeMem(0x64a7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd6a2);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01BC
        gbc.setState(0x220f, 0x7a0c, 0x2480, 0xf3c9, 0x1d91, 0x1f29, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0x8f });
        gbc.writeMem(0x220f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7a0c);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01BD
        gbc.setState(0x1a69, 0xc4a9, 0x81b0, 0x782, 0xb2e3, 0x1eff, 0x0, 0x0);
        gbc.writeMem(0x1a69, { 0xcb, 0x66 });
        gbc.writeMem(0x1eff, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc4a9);
        EXPECT(gbc.pc(), 0x1a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01BE
        gbc.setState(0xd85c, 0xcd30, 0x9990, 0xba5, 0x3e8f, 0x506, 0x1, 0x0);
        gbc.writeMem(0x506, { 0x13 });
        gbc.writeMem(0xd85c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcd30);
        EXPECT(gbc.pc(), 0xd85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85c), 0xcb);
        EXPECT(gbc.readMem(0xd85d), 0x66);
        // CB 66 01BF
        gbc.setState(0x67e8, 0x71ae, 0xabd0, 0xfb5d, 0xce62, 0x9a3, 0x0, 0x1);
        gbc.writeMem(0x9a3, { 0xe });
        gbc.writeMem(0x67e8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x71ae);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01C0
        gbc.setState(0x992a, 0x3806, 0x6750, 0x15fe, 0x21f3, 0xc0d8, 0x1, 0x0);
        gbc.writeMem(0x992a, { 0xcb, 0x66 });
        gbc.writeMem(0xc0d8, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3806);
        EXPECT(gbc.pc(), 0x992c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992a), 0xcb);
        EXPECT(gbc.readMem(0x992b), 0x66);
        EXPECT(gbc.readMem(0xc0d8), 0x38);
        // CB 66 01C1
        gbc.setState(0xeb23, 0x68b3, 0x98e0, 0x790c, 0xef2f, 0xd2e7, 0x0, 0x1);
        gbc.writeMem(0xd2e7, { 0x58 });
        gbc.writeMem(0xeb23, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x68b3);
        EXPECT(gbc.pc(), 0xeb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e7), 0x58);
        EXPECT(gbc.readMem(0xeb23), 0xcb);
        EXPECT(gbc.readMem(0xeb24), 0x66);
        // CB 66 01C2
        gbc.setState(0x4230, 0x6de9, 0x4630, 0x8159, 0x6f1b, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x4230, { 0xcb, 0x66 });
        gbc.writeMem(0xacda, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6de9);
        EXPECT(gbc.pc(), 0x4232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacda), 0x50);
        // CB 66 01C3
        gbc.setState(0x705a, 0x83f7, 0x3fa0, 0x2f97, 0x1084, 0x86f6, 0x1, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0x66 });
        gbc.writeMem(0x86f6, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x83f7);
        EXPECT(gbc.pc(), 0x705c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f6), 0x6b);
        // CB 66 01C5
        gbc.setState(0x9040, 0xb7ef, 0x4000, 0xe93f, 0x81f9, 0x5254, 0x1, 0x0);
        gbc.writeMem(0x5254, { 0x61 });
        gbc.writeMem(0x9040, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb7ef);
        EXPECT(gbc.pc(), 0x9042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9040), 0xcb);
        EXPECT(gbc.readMem(0x9041), 0x66);
        // CB 66 01C6
        gbc.setState(0xe5e4, 0x5631, 0x6fb0, 0xee03, 0x55c1, 0xf539, 0x1, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0x66 });
        gbc.writeMem(0xf539, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5631);
        EXPECT(gbc.pc(), 0xe5e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e4), 0xcb);
        EXPECT(gbc.readMem(0xe5e5), 0x66);
        EXPECT(gbc.readMem(0xf539), 0x7b);
        // CB 66 01C8
        gbc.setState(0x7b4e, 0xb22d, 0x31b0, 0x9d11, 0xe112, 0xb1b8, 0x1, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x66 });
        gbc.writeMem(0xb1b8, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb22d);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b8), 0x5f);
        // CB 66 01C9
        gbc.setState(0x3e9d, 0x57fa, 0x940, 0xd8fd, 0x2b92, 0x2028, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0xd });
        gbc.writeMem(0x3e9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x57fa);
        EXPECT(gbc.pc(), 0x3e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01CA
        gbc.setState(0x9319, 0xad6e, 0x7510, 0x2130, 0x41f, 0x9002, 0x0, 0x0);
        gbc.writeMem(0x9002, { 0xd2 });
        gbc.writeMem(0x9319, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xad6e);
        EXPECT(gbc.pc(), 0x931b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9002), 0xd2);
        EXPECT(gbc.readMem(0x9319), 0xcb);
        EXPECT(gbc.readMem(0x931a), 0x66);
        // CB 66 01CB
        gbc.setState(0x62cf, 0x9c7e, 0x7260, 0x19ed, 0xa6e4, 0x2382, 0x0, 0x1);
        gbc.writeMem(0x2382, { 0x43 });
        gbc.writeMem(0x62cf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9c7e);
        EXPECT(gbc.pc(), 0x62d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01CC
        gbc.setState(0x6348, 0x4e26, 0xeef0, 0x6d82, 0x81d1, 0x1ecf, 0x0, 0x0);
        gbc.writeMem(0x1ecf, { 0x2e });
        gbc.writeMem(0x6348, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4e26);
        EXPECT(gbc.pc(), 0x634a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01CD
        gbc.setState(0xa4ef, 0xabc7, 0xf6e0, 0xf646, 0xd741, 0x77c8, 0x1, 0x0);
        gbc.writeMem(0x77c8, { 0xa2 });
        gbc.writeMem(0xa4ef, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xabc7);
        EXPECT(gbc.pc(), 0xa4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ef), 0xcb);
        EXPECT(gbc.readMem(0xa4f0), 0x66);
        // CB 66 01CE
        gbc.setState(0xdd8, 0xfc42, 0x20e0, 0xb96f, 0x9a2d, 0xa333, 0x1, 0x0);
        gbc.writeMem(0xdd8, { 0xcb, 0x66 });
        gbc.writeMem(0xa333, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfc42);
        EXPECT(gbc.pc(), 0xdda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa333), 0x28);
        // CB 66 01CF
        gbc.setState(0x8b43, 0x6e2e, 0xb3d0, 0x5c7b, 0xe3fe, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x3f3a, { 0xdf });
        gbc.writeMem(0x8b43, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6e2e);
        EXPECT(gbc.pc(), 0x8b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b43), 0xcb);
        EXPECT(gbc.readMem(0x8b44), 0x66);
        // CB 66 01D0
        gbc.setState(0xe779, 0xce55, 0x5320, 0x9dea, 0x9853, 0x196d, 0x0, 0x0);
        gbc.writeMem(0x196d, { 0xa3 });
        gbc.writeMem(0xe779, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xce55);
        EXPECT(gbc.pc(), 0xe77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe779), 0xcb);
        EXPECT(gbc.readMem(0xe77a), 0x66);
        // CB 66 01D1
        gbc.setState(0x5cdc, 0xd2ad, 0x6be0, 0x3d58, 0xccdf, 0xd418, 0x0, 0x1);
        gbc.writeMem(0x5cdc, { 0xcb, 0x66 });
        gbc.writeMem(0xd418, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0x5cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd418), 0x9c);
        // CB 66 01D2
        gbc.setState(0x69f6, 0xb42f, 0x59e0, 0x5793, 0x218f, 0x6552, 0x0, 0x0);
        gbc.writeMem(0x6552, { 0x0 });
        gbc.writeMem(0x69f6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb42f);
        EXPECT(gbc.pc(), 0x69f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01D3
        gbc.setState(0xb9bb, 0x1ac0, 0x8f20, 0xa167, 0x6220, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0x77 });
        gbc.writeMem(0xb9bb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1ac0);
        EXPECT(gbc.pc(), 0xb9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9bb), 0xcb);
        EXPECT(gbc.readMem(0xb9bc), 0x66);
        // CB 66 01D4
        gbc.setState(0xc086, 0xb529, 0x5f10, 0xac4a, 0xee5d, 0x5106, 0x0, 0x1);
        gbc.writeMem(0x5106, { 0xb5 });
        gbc.writeMem(0xc086, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb529);
        EXPECT(gbc.pc(), 0xc088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc086), 0xcb);
        EXPECT(gbc.readMem(0xc087), 0x66);
        // CB 66 01D5
        gbc.setState(0x55ba, 0x5dfa, 0x4560, 0x5aed, 0x4869, 0xfcb2, 0x1, 0x1);
        gbc.writeMem(0x55ba, { 0xcb, 0x66 });
        gbc.writeMem(0xfcb2, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5dfa);
        EXPECT(gbc.pc(), 0x55bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcb2), 0xc);
        // CB 66 01D6
        gbc.setState(0x4962, 0x6b56, 0x7ee0, 0xddbc, 0xee48, 0xd799, 0x1, 0x0);
        gbc.writeMem(0x4962, { 0xcb, 0x66 });
        gbc.writeMem(0xd799, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6b56);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd799), 0x68);
        // CB 66 01D7
        gbc.setState(0x1fa4, 0xbb87, 0x2d0, 0x81f2, 0x6d8d, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0x1fa4, { 0xcb, 0x66 });
        gbc.writeMem(0xf65d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbb87);
        EXPECT(gbc.pc(), 0x1fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf65d), 0x75);
        // CB 66 01D8
        gbc.setState(0xdd62, 0xeb24, 0xdd30, 0xa997, 0x1f9d, 0x92bd, 0x1, 0x0);
        gbc.writeMem(0x92bd, { 0x4a });
        gbc.writeMem(0xdd62, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xeb24);
        EXPECT(gbc.pc(), 0xdd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bd), 0x4a);
        EXPECT(gbc.readMem(0xdd62), 0xcb);
        EXPECT(gbc.readMem(0xdd63), 0x66);
        // CB 66 01D9
        gbc.setState(0xd06e, 0xc5d8, 0x7800, 0xd3ad, 0x2ad8, 0x5d85, 0x0, 0x1);
        gbc.writeMem(0x5d85, { 0x4 });
        gbc.writeMem(0xd06e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0xd070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd06e), 0xcb);
        EXPECT(gbc.readMem(0xd06f), 0x66);
        // CB 66 01DA
        gbc.setState(0x923c, 0x852, 0x6eb0, 0xad5, 0x9935, 0x9ad1, 0x1, 0x0);
        gbc.writeMem(0x923c, { 0xcb, 0x66 });
        gbc.writeMem(0x9ad1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x852);
        EXPECT(gbc.pc(), 0x923e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923c), 0xcb);
        EXPECT(gbc.readMem(0x923d), 0x66);
        EXPECT(gbc.readMem(0x9ad1), 0x58);
        // CB 66 01DB
        gbc.setState(0xb22b, 0x6bd0, 0x3830, 0x52fc, 0x8262, 0x9af9, 0x0, 0x0);
        gbc.writeMem(0x9af9, { 0x7 });
        gbc.writeMem(0xb22b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6bd0);
        EXPECT(gbc.pc(), 0xb22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af9), 0x7);
        EXPECT(gbc.readMem(0xb22b), 0xcb);
        EXPECT(gbc.readMem(0xb22c), 0x66);
        // CB 66 01DC
        gbc.setState(0x8034, 0xf97e, 0x1180, 0x2dfd, 0x753d, 0x7a2c, 0x1, 0x1);
        gbc.writeMem(0x7a2c, { 0xf1 });
        gbc.writeMem(0x8034, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf97e);
        EXPECT(gbc.pc(), 0x8036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8034), 0xcb);
        EXPECT(gbc.readMem(0x8035), 0x66);
        // CB 66 01DD
        gbc.setState(0xde, 0x3cf5, 0x19f0, 0x8887, 0x5b04, 0x9eb5, 0x0, 0x1);
        gbc.writeMem(0xde, { 0xcb, 0x66 });
        gbc.writeMem(0x9eb5, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3cf5);
        EXPECT(gbc.pc(), 0xe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb5), 0x7e);
        // CB 66 01DE
        gbc.setState(0xd6f3, 0x7528, 0xfab0, 0xf658, 0xb07c, 0xa65, 0x0, 0x0);
        gbc.writeMem(0xa65, { 0xa6 });
        gbc.writeMem(0xd6f3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0x66);
        // CB 66 01DF
        gbc.setState(0x9fc3, 0x69f0, 0x9bb0, 0x5171, 0xe3b7, 0xb9cd, 0x0, 0x1);
        gbc.writeMem(0x9fc3, { 0xcb, 0x66 });
        gbc.writeMem(0xb9cd, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc3), 0xcb);
        EXPECT(gbc.readMem(0x9fc4), 0x66);
        EXPECT(gbc.readMem(0xb9cd), 0xd);
        // CB 66 01E0
        gbc.setState(0xb0b3, 0x17b3, 0x19f0, 0x58c7, 0x78b4, 0x799f, 0x0, 0x0);
        gbc.writeMem(0x799f, { 0xab });
        gbc.writeMem(0xb0b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x17b3);
        EXPECT(gbc.pc(), 0xb0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b3), 0xcb);
        EXPECT(gbc.readMem(0xb0b4), 0x66);
        // CB 66 01E1
        gbc.setState(0xd2b1, 0xe61e, 0x8180, 0xdc20, 0xa122, 0x6dc9, 0x1, 0x1);
        gbc.writeMem(0x6dc9, { 0x1d });
        gbc.writeMem(0xd2b1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0xd2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b1), 0xcb);
        EXPECT(gbc.readMem(0xd2b2), 0x66);
        // CB 66 01E2
        gbc.setState(0xa812, 0x863, 0x6c20, 0xadd5, 0xeb0, 0xe260, 0x0, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0x66 });
        gbc.writeMem(0xe260, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x863);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0x66);
        EXPECT(gbc.readMem(0xe260), 0x2d);
        // CB 66 01E3
        gbc.setState(0x24ec, 0xe9d0, 0xf460, 0x4896, 0xe807, 0xa041, 0x0, 0x1);
        gbc.writeMem(0x24ec, { 0xcb, 0x66 });
        gbc.writeMem(0xa041, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe9d0);
        EXPECT(gbc.pc(), 0x24ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa041), 0x1d);
        // CB 66 01E5
        gbc.setState(0x5101, 0x889d, 0xb050, 0x36f6, 0x31f8, 0x3c6a, 0x0, 0x1);
        gbc.writeMem(0x3c6a, { 0x4c });
        gbc.writeMem(0x5101, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x889d);
        EXPECT(gbc.pc(), 0x5103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01E6
        gbc.setState(0xd398, 0x822a, 0x5310, 0x4fcb, 0x5d79, 0x6258, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xe0 });
        gbc.writeMem(0xd398, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x822a);
        EXPECT(gbc.pc(), 0xd39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd398), 0xcb);
        EXPECT(gbc.readMem(0xd399), 0x66);
        // CB 66 01E7
        gbc.setState(0xb8dc, 0x8388, 0xd380, 0xf551, 0xc816, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0x70b4, { 0xd6 });
        gbc.writeMem(0xb8dc, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8388);
        EXPECT(gbc.pc(), 0xb8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dc), 0xcb);
        EXPECT(gbc.readMem(0xb8dd), 0x66);
        // CB 66 01E8
        gbc.setState(0x467e, 0xd7dd, 0xef50, 0x80a9, 0xbdf3, 0x134c, 0x0, 0x0);
        gbc.writeMem(0x134c, { 0x46 });
        gbc.writeMem(0x467e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd7dd);
        EXPECT(gbc.pc(), 0x4680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01E9
        gbc.setState(0x527e, 0x3992, 0x8450, 0x44b8, 0x44f1, 0x15, 0x0, 0x0);
        gbc.writeMem(0x15, { 0x33 });
        gbc.writeMem(0x527e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3992);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01EA
        gbc.setState(0x522b, 0x5f42, 0x6990, 0x201b, 0x688c, 0x8e37, 0x1, 0x0);
        gbc.writeMem(0x522b, { 0xcb, 0x66 });
        gbc.writeMem(0x8e37, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5f42);
        EXPECT(gbc.pc(), 0x522d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e37), 0x47);
        // CB 66 01EB
        gbc.setState(0x1bb1, 0x7199, 0x2250, 0xfb1b, 0x88c6, 0x17aa, 0x1, 0x1);
        gbc.writeMem(0x17aa, { 0xca });
        gbc.writeMem(0x1bb1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7199);
        EXPECT(gbc.pc(), 0x1bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01EC
        gbc.setState(0xa658, 0x79ae, 0x800, 0x31b1, 0xaf26, 0x4d19, 0x0, 0x0);
        gbc.writeMem(0x4d19, { 0x5d });
        gbc.writeMem(0xa658, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x79ae);
        EXPECT(gbc.pc(), 0xa65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa658), 0xcb);
        EXPECT(gbc.readMem(0xa659), 0x66);
        // CB 66 01ED
        gbc.setState(0xc9e7, 0x7c87, 0xe30, 0xe22d, 0xcaad, 0x94ff, 0x0, 0x1);
        gbc.writeMem(0x94ff, { 0x8 });
        gbc.writeMem(0xc9e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7c87);
        EXPECT(gbc.pc(), 0xc9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0x8);
        EXPECT(gbc.readMem(0xc9e7), 0xcb);
        EXPECT(gbc.readMem(0xc9e8), 0x66);
        // CB 66 01EE
        gbc.setState(0x98ba, 0xba94, 0xa730, 0xcbae, 0xdf30, 0x2a4e, 0x1, 0x0);
        gbc.writeMem(0x2a4e, { 0xf7 });
        gbc.writeMem(0x98ba, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xba94);
        EXPECT(gbc.pc(), 0x98bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ba), 0xcb);
        EXPECT(gbc.readMem(0x98bb), 0x66);
        // CB 66 01EF
        gbc.setState(0x859c, 0x548d, 0x9160, 0x1d0d, 0xe066, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x859c, { 0xcb, 0x66 });
        gbc.writeMem(0xbd5d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x548d);
        EXPECT(gbc.pc(), 0x859e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0xcb);
        EXPECT(gbc.readMem(0x859d), 0x66);
        EXPECT(gbc.readMem(0xbd5d), 0x78);
        // CB 66 01F0
        gbc.setState(0xafc0, 0x9d8a, 0x760, 0xe57c, 0x1551, 0x38da, 0x1, 0x0);
        gbc.writeMem(0x38da, { 0xe2 });
        gbc.writeMem(0xafc0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9d8a);
        EXPECT(gbc.pc(), 0xafc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc0), 0xcb);
        EXPECT(gbc.readMem(0xafc1), 0x66);
        // CB 66 01F1
        gbc.setState(0xd492, 0xcac6, 0x22c0, 0xb75c, 0xc05e, 0xf831, 0x1, 0x0);
        gbc.writeMem(0xd492, { 0xcb, 0x66 });
        gbc.writeMem(0xf831, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0xd494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd492), 0xcb);
        EXPECT(gbc.readMem(0xd493), 0x66);
        EXPECT(gbc.readMem(0xf831), 0xc7);
        // CB 66 01F2
        gbc.setState(0x6225, 0xa07e, 0xb430, 0x1318, 0xaf86, 0x2321, 0x0, 0x0);
        gbc.writeMem(0x2321, { 0xe2 });
        gbc.writeMem(0x6225, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa07e);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01F3
        gbc.setState(0xe0cd, 0xe418, 0x5cd0, 0x36a3, 0x7516, 0x188c, 0x1, 0x1);
        gbc.writeMem(0x188c, { 0x91 });
        gbc.writeMem(0xe0cd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe418);
        EXPECT(gbc.pc(), 0xe0cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0cd), 0xcb);
        EXPECT(gbc.readMem(0xe0ce), 0x66);
        // CB 66 01F4
        gbc.setState(0xa211, 0xba5, 0x1ea0, 0xe2b5, 0xac8e, 0xfcd8, 0x1, 0x0);
        gbc.writeMem(0xa211, { 0xcb, 0x66 });
        gbc.writeMem(0xfcd8, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xba5);
        EXPECT(gbc.pc(), 0xa213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa211), 0xcb);
        EXPECT(gbc.readMem(0xa212), 0x66);
        EXPECT(gbc.readMem(0xfcd8), 0x9);
        // CB 66 01F5
        gbc.setState(0xdb9e, 0x4699, 0x8e50, 0xd180, 0x1027, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0x41c4, { 0x5e });
        gbc.writeMem(0xdb9e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4699);
        EXPECT(gbc.pc(), 0xdba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9e), 0xcb);
        EXPECT(gbc.readMem(0xdb9f), 0x66);
        // CB 66 01F6
        gbc.setState(0x4b5, 0x62c, 0xdc90, 0xffc3, 0x2b38, 0xf64f, 0x1, 0x1);
        gbc.writeMem(0x4b5, { 0xcb, 0x66 });
        gbc.writeMem(0xf64f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf64f), 0x55);
        // CB 66 01F7
        gbc.setState(0xaef8, 0xc334, 0x93b0, 0x55f3, 0xcca8, 0x90e8, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x67 });
        gbc.writeMem(0xaef8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc334);
        EXPECT(gbc.pc(), 0xaefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e8), 0x67);
        EXPECT(gbc.readMem(0xaef8), 0xcb);
        EXPECT(gbc.readMem(0xaef9), 0x66);
        // CB 66 01F8
        gbc.setState(0xb033, 0x1878, 0x2dd0, 0xfd55, 0x321f, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0xa10f, { 0xbe });
        gbc.writeMem(0xb033, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1878);
        EXPECT(gbc.pc(), 0xb035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10f), 0xbe);
        EXPECT(gbc.readMem(0xb033), 0xcb);
        EXPECT(gbc.readMem(0xb034), 0x66);
        // CB 66 01F9
        gbc.setState(0x5268, 0x3724, 0x8380, 0xbecc, 0x77fd, 0x1d1, 0x1, 0x0);
        gbc.writeMem(0x1d1, { 0xaa });
        gbc.writeMem(0x5268, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3724);
        EXPECT(gbc.pc(), 0x526a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 01FA
        gbc.setState(0xfe6, 0x11f5, 0x33f0, 0x2098, 0xa53d, 0xd590, 0x1, 0x1);
        gbc.writeMem(0xfe6, { 0xcb, 0x66 });
        gbc.writeMem(0xd590, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x11f5);
        EXPECT(gbc.pc(), 0xfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd590), 0xb7);
        // CB 66 01FB
        gbc.setState(0x696e, 0x6d6a, 0x450, 0xd115, 0x2125, 0x3bfe, 0x0, 0x1);
        gbc.writeMem(0x3bfe, { 0xc4 });
        gbc.writeMem(0x696e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d6a);
        EXPECT(gbc.pc(), 0x6970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 01FC
        gbc.setState(0xbf28, 0x93d7, 0xc650, 0xa819, 0x6d2, 0x760c, 0x0, 0x1);
        gbc.writeMem(0x760c, { 0x99 });
        gbc.writeMem(0xbf28, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0xbf2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf28), 0xcb);
        EXPECT(gbc.readMem(0xbf29), 0x66);
        // CB 66 01FD
        gbc.setState(0xcf06, 0xec79, 0x2e90, 0x4c8b, 0xcf52, 0xef06, 0x0, 0x1);
        gbc.writeMem(0xcf06, { 0xcb, 0x66 });
        gbc.writeMem(0xef06, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec79);
        EXPECT(gbc.pc(), 0xcf08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf06), 0xcb);
        EXPECT(gbc.readMem(0xcf07), 0x66);
        EXPECT(gbc.readMem(0xef06), 0x73);
        // CB 66 01FE
        gbc.setState(0xdd3e, 0x7ab1, 0xaad0, 0xe107, 0x4ad3, 0xb171, 0x0, 0x1);
        gbc.writeMem(0xb171, { 0x5f });
        gbc.writeMem(0xdd3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7ab1);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb171), 0x5f);
        EXPECT(gbc.readMem(0xdd3e), 0xcb);
        EXPECT(gbc.readMem(0xdd3f), 0x66);
        // CB 66 01FF
        gbc.setState(0x8eeb, 0x1526, 0x97c0, 0x56cc, 0x5a6a, 0x42c6, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0xea });
        gbc.writeMem(0x8eeb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1526);
        EXPECT(gbc.pc(), 0x8eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eeb), 0xcb);
        EXPECT(gbc.readMem(0x8eec), 0x66);
        // CB 66 0200
        gbc.setState(0x4f9f, 0x671c, 0xd1f0, 0x62a0, 0x6d16, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0xcb, 0x66 });
        gbc.writeMem(0xabc7, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x671c);
        EXPECT(gbc.pc(), 0x4fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc7), 0xc8);
        // CB 66 0202
        gbc.setState(0x96a5, 0xb746, 0xdfe0, 0x5ad5, 0xbdd7, 0x7cca, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0x1a });
        gbc.writeMem(0x96a5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb746);
        EXPECT(gbc.pc(), 0x96a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a5), 0xcb);
        EXPECT(gbc.readMem(0x96a6), 0x66);
        // CB 66 0203
        gbc.setState(0x46b9, 0xd9d5, 0xb320, 0x762f, 0x45eb, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0x46b9, { 0xcb, 0x66 });
        gbc.writeMem(0x54c5, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd9d5);
        EXPECT(gbc.pc(), 0x46bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0204
        gbc.setState(0xb2df, 0x1b69, 0xc70, 0x1a89, 0xc35a, 0xaee3, 0x1, 0x0);
        gbc.writeMem(0xaee3, { 0x64 });
        gbc.writeMem(0xb2df, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1b69);
        EXPECT(gbc.pc(), 0xb2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee3), 0x64);
        EXPECT(gbc.readMem(0xb2df), 0xcb);
        EXPECT(gbc.readMem(0xb2e0), 0x66);
        // CB 66 0205
        gbc.setState(0x9191, 0x8946, 0xe790, 0xa98e, 0xd667, 0xabe3, 0x1, 0x0);
        gbc.writeMem(0x9191, { 0xcb, 0x66 });
        gbc.writeMem(0xabe3, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8946);
        EXPECT(gbc.pc(), 0x9193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9191), 0xcb);
        EXPECT(gbc.readMem(0x9192), 0x66);
        EXPECT(gbc.readMem(0xabe3), 0x65);
        // CB 66 0206
        gbc.setState(0xd756, 0xf694, 0x6ef0, 0xe5ed, 0x102e, 0xd0a3, 0x1, 0x1);
        gbc.writeMem(0xd0a3, { 0x27 });
        gbc.writeMem(0xd756, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf694);
        EXPECT(gbc.pc(), 0xd758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a3), 0x27);
        EXPECT(gbc.readMem(0xd756), 0xcb);
        EXPECT(gbc.readMem(0xd757), 0x66);
        // CB 66 0207
        gbc.setState(0xc25f, 0x8145, 0xdd80, 0x768, 0x8e33, 0xa4ff, 0x1, 0x0);
        gbc.writeMem(0xa4ff, { 0x96 });
        gbc.writeMem(0xc25f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8145);
        EXPECT(gbc.pc(), 0xc261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ff), 0x96);
        EXPECT(gbc.readMem(0xc25f), 0xcb);
        EXPECT(gbc.readMem(0xc260), 0x66);
        // CB 66 0208
        gbc.setState(0xb8f7, 0xf88d, 0x7bf0, 0x5770, 0xef69, 0x9354, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xc4 });
        gbc.writeMem(0xb8f7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf88d);
        EXPECT(gbc.pc(), 0xb8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9354), 0xc4);
        EXPECT(gbc.readMem(0xb8f7), 0xcb);
        EXPECT(gbc.readMem(0xb8f8), 0x66);
        // CB 66 0209
        gbc.setState(0x290d, 0x36a9, 0xfe80, 0x1858, 0x7f0a, 0x7ff8, 0x1, 0x1);
        gbc.writeMem(0x290d, { 0xcb, 0x66 });
        gbc.writeMem(0x7ff8, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x36a9);
        EXPECT(gbc.pc(), 0x290f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 020A
        gbc.setState(0x82ec, 0x9b0c, 0x8b00, 0x7e13, 0xca46, 0x55d1, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xf8 });
        gbc.writeMem(0x82ec, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9b0c);
        EXPECT(gbc.pc(), 0x82ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ec), 0xcb);
        EXPECT(gbc.readMem(0x82ed), 0x66);
        // CB 66 020B
        gbc.setState(0x661a, 0x4407, 0x7530, 0x7c8d, 0xc337, 0x13ac, 0x1, 0x0);
        gbc.writeMem(0x13ac, { 0x58 });
        gbc.writeMem(0x661a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0x661c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 020C
        gbc.setState(0x335d, 0x43d6, 0xa310, 0xe06b, 0x516d, 0x93d5, 0x1, 0x1);
        gbc.writeMem(0x335d, { 0xcb, 0x66 });
        gbc.writeMem(0x93d5, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x43d6);
        EXPECT(gbc.pc(), 0x335f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d5), 0xa5);
        // CB 66 020D
        gbc.setState(0x1080, 0xa441, 0x98d0, 0x6f69, 0x4f1f, 0x5285, 0x1, 0x0);
        gbc.writeMem(0x1080, { 0xcb, 0x66 });
        gbc.writeMem(0x5285, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa441);
        EXPECT(gbc.pc(), 0x1082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 020E
        gbc.setState(0x5b70, 0x9b09, 0x400, 0xdf8c, 0x30cb, 0xdb3, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0x8d });
        gbc.writeMem(0x5b70, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9b09);
        EXPECT(gbc.pc(), 0x5b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 020F
        gbc.setState(0x7155, 0x7b93, 0x2860, 0xe91, 0x8e94, 0x535, 0x1, 0x1);
        gbc.writeMem(0x535, { 0x72 });
        gbc.writeMem(0x7155, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7b93);
        EXPECT(gbc.pc(), 0x7157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0210
        gbc.setState(0x21a6, 0x89a2, 0xc910, 0xf86, 0x12f1, 0xbac7, 0x1, 0x1);
        gbc.writeMem(0x21a6, { 0xcb, 0x66 });
        gbc.writeMem(0xbac7, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x89a2);
        EXPECT(gbc.pc(), 0x21a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac7), 0xfd);
        // CB 66 0211
        gbc.setState(0x8660, 0x5923, 0x9ce0, 0xe160, 0xcb27, 0x2298, 0x1, 0x0);
        gbc.writeMem(0x2298, { 0xb });
        gbc.writeMem(0x8660, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5923);
        EXPECT(gbc.pc(), 0x8662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8660), 0xcb);
        EXPECT(gbc.readMem(0x8661), 0x66);
        // CB 66 0212
        gbc.setState(0x3e85, 0xccb3, 0xc830, 0x9f19, 0xdb1d, 0x6c43, 0x0, 0x1);
        gbc.writeMem(0x3e85, { 0xcb, 0x66 });
        gbc.writeMem(0x6c43, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xccb3);
        EXPECT(gbc.pc(), 0x3e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0213
        gbc.setState(0xdb96, 0xe8ed, 0xd1d0, 0xec8e, 0xbb78, 0x1fd4, 0x0, 0x0);
        gbc.writeMem(0x1fd4, { 0xde });
        gbc.writeMem(0xdb96, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe8ed);
        EXPECT(gbc.pc(), 0xdb98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb96), 0xcb);
        EXPECT(gbc.readMem(0xdb97), 0x66);
        // CB 66 0214
        gbc.setState(0xbad3, 0x56eb, 0x1a0, 0xb34e, 0xeb05, 0xcc13, 0x0, 0x1);
        gbc.writeMem(0xbad3, { 0xcb, 0x66 });
        gbc.writeMem(0xcc13, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0xbad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad3), 0xcb);
        EXPECT(gbc.readMem(0xbad4), 0x66);
        EXPECT(gbc.readMem(0xcc13), 0xf0);
        // CB 66 0215
        gbc.setState(0xc3e5, 0x403a, 0x5600, 0x5f11, 0x4602, 0xc10a, 0x1, 0x1);
        gbc.writeMem(0xc10a, { 0x4d });
        gbc.writeMem(0xc3e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x403a);
        EXPECT(gbc.pc(), 0xc3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10a), 0x4d);
        EXPECT(gbc.readMem(0xc3e5), 0xcb);
        EXPECT(gbc.readMem(0xc3e6), 0x66);
        // CB 66 0216
        gbc.setState(0x4051, 0x62af, 0x2810, 0x6677, 0xa8a9, 0x836f, 0x1, 0x0);
        gbc.writeMem(0x4051, { 0xcb, 0x66 });
        gbc.writeMem(0x836f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x62af);
        EXPECT(gbc.pc(), 0x4053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836f), 0xd9);
        // CB 66 0217
        gbc.setState(0x9e9a, 0x6c12, 0xb6f0, 0xdf7c, 0x505c, 0x9931, 0x1, 0x1);
        gbc.writeMem(0x9931, { 0xa2 });
        gbc.writeMem(0x9e9a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6c12);
        EXPECT(gbc.pc(), 0x9e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0xa2);
        EXPECT(gbc.readMem(0x9e9a), 0xcb);
        EXPECT(gbc.readMem(0x9e9b), 0x66);
        // CB 66 0218
        gbc.setState(0xd1a1, 0xf887, 0x5ce0, 0xb40b, 0xc7f1, 0x7e30, 0x0, 0x1);
        gbc.writeMem(0x7e30, { 0x15 });
        gbc.writeMem(0xd1a1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf887);
        EXPECT(gbc.pc(), 0xd1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a1), 0xcb);
        EXPECT(gbc.readMem(0xd1a2), 0x66);
        // CB 66 0219
        gbc.setState(0x4665, 0x9770, 0xa830, 0x7ce1, 0x9900, 0x3464, 0x1, 0x0);
        gbc.writeMem(0x3464, { 0x85 });
        gbc.writeMem(0x4665, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9770);
        EXPECT(gbc.pc(), 0x4667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 021A
        gbc.setState(0x6d12, 0x8469, 0x2590, 0xa89b, 0x59d4, 0x49a1, 0x0, 0x1);
        gbc.writeMem(0x49a1, { 0x2f });
        gbc.writeMem(0x6d12, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8469);
        EXPECT(gbc.pc(), 0x6d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 021B
        gbc.setState(0x2b7e, 0x24ca, 0x8490, 0x9eb, 0xd583, 0x9fe8, 0x0, 0x1);
        gbc.writeMem(0x2b7e, { 0xcb, 0x66 });
        gbc.writeMem(0x9fe8, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x24ca);
        EXPECT(gbc.pc(), 0x2b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe8), 0x22);
        // CB 66 021D
        gbc.setState(0x7a84, 0xb8ca, 0xbb20, 0xccb1, 0xb4ca, 0x6c84, 0x1, 0x0);
        gbc.writeMem(0x6c84, { 0xe3 });
        gbc.writeMem(0x7a84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb8ca);
        EXPECT(gbc.pc(), 0x7a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 021F
        gbc.setState(0x3c7d, 0x7fba, 0xf980, 0xbe4b, 0x8550, 0x9c40, 0x1, 0x1);
        gbc.writeMem(0x3c7d, { 0xcb, 0x66 });
        gbc.writeMem(0x9c40, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7fba);
        EXPECT(gbc.pc(), 0x3c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c40), 0x7e);
        // CB 66 0220
        gbc.setState(0xac05, 0x39f9, 0x62a0, 0xbad7, 0x43a3, 0x7fbd, 0x0, 0x0);
        gbc.writeMem(0x7fbd, { 0x11 });
        gbc.writeMem(0xac05, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x39f9);
        EXPECT(gbc.pc(), 0xac07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac05), 0xcb);
        EXPECT(gbc.readMem(0xac06), 0x66);
        // CB 66 0221
        gbc.setState(0xa3c2, 0x225, 0x48a0, 0xd9e0, 0x5a14, 0xdca4, 0x0, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0x66 });
        gbc.writeMem(0xdca4, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x225);
        EXPECT(gbc.pc(), 0xa3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c2), 0xcb);
        EXPECT(gbc.readMem(0xa3c3), 0x66);
        EXPECT(gbc.readMem(0xdca4), 0x66);
        // CB 66 0222
        gbc.setState(0x11ea, 0x13ba, 0xc950, 0x4ed5, 0x4edf, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x11ea, { 0xcb, 0x66 });
        gbc.writeMem(0x3e47, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x13ba);
        EXPECT(gbc.pc(), 0x11ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0223
        gbc.setState(0x44d7, 0xd330, 0x6e60, 0x1120, 0xf61b, 0xad10, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x66 });
        gbc.writeMem(0xad10, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad10), 0xfd);
        // CB 66 0224
        gbc.setState(0x42e, 0x63b2, 0x1d80, 0x7a01, 0x8cc7, 0x4ecc, 0x1, 0x0);
        gbc.writeMem(0x42e, { 0xcb, 0x66 });
        gbc.writeMem(0x4ecc, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x63b2);
        EXPECT(gbc.pc(), 0x430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0225
        gbc.setState(0xd6af, 0x34d4, 0xf3a0, 0x4317, 0x42ec, 0x2069, 0x1, 0x0);
        gbc.writeMem(0x2069, { 0xec });
        gbc.writeMem(0xd6af, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x34d4);
        EXPECT(gbc.pc(), 0xd6b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6af), 0xcb);
        EXPECT(gbc.readMem(0xd6b0), 0x66);
        // CB 66 0227
        gbc.setState(0x4ba5, 0x28fa, 0x1c60, 0xf34c, 0xb361, 0x57bb, 0x1, 0x0);
        gbc.writeMem(0x4ba5, { 0xcb, 0x66 });
        gbc.writeMem(0x57bb, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x28fa);
        EXPECT(gbc.pc(), 0x4ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0228
        gbc.setState(0x4db2, 0xc7f7, 0x31b0, 0xbbe9, 0xac0e, 0xec49, 0x0, 0x1);
        gbc.writeMem(0x4db2, { 0xcb, 0x66 });
        gbc.writeMem(0xec49, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc7f7);
        EXPECT(gbc.pc(), 0x4db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec49), 0x10);
        // CB 66 0229
        gbc.setState(0x5358, 0x55e2, 0xc060, 0xcef5, 0x1ca1, 0xee38, 0x1, 0x0);
        gbc.writeMem(0x5358, { 0xcb, 0x66 });
        gbc.writeMem(0xee38, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x55e2);
        EXPECT(gbc.pc(), 0x535a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee38), 0xc4);
        // CB 66 022A
        gbc.setState(0xd388, 0xbc87, 0x5550, 0xb08, 0xe19e, 0x5f46, 0x1, 0x1);
        gbc.writeMem(0x5f46, { 0xbb });
        gbc.writeMem(0xd388, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbc87);
        EXPECT(gbc.pc(), 0xd38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd388), 0xcb);
        EXPECT(gbc.readMem(0xd389), 0x66);
        // CB 66 022B
        gbc.setState(0x3d48, 0x39c8, 0x1ea0, 0x651e, 0x75f9, 0x8da1, 0x1, 0x0);
        gbc.writeMem(0x3d48, { 0xcb, 0x66 });
        gbc.writeMem(0x8da1, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x39c8);
        EXPECT(gbc.pc(), 0x3d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da1), 0x27);
        // CB 66 022C
        gbc.setState(0x4c58, 0xd319, 0xe300, 0x2c61, 0xf243, 0x261a, 0x1, 0x1);
        gbc.writeMem(0x261a, { 0xc6 });
        gbc.writeMem(0x4c58, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd319);
        EXPECT(gbc.pc(), 0x4c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 022D
        gbc.setState(0xe819, 0x8d04, 0x2db0, 0xbc3c, 0x128d, 0xa155, 0x0, 0x0);
        gbc.writeMem(0xa155, { 0x5f });
        gbc.writeMem(0xe819, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8d04);
        EXPECT(gbc.pc(), 0xe81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa155), 0x5f);
        EXPECT(gbc.readMem(0xe819), 0xcb);
        EXPECT(gbc.readMem(0xe81a), 0x66);
        // CB 66 022E
        gbc.setState(0x1f7a, 0xc883, 0xc950, 0xa306, 0x2f42, 0x3fab, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0x66 });
        gbc.writeMem(0x3fab, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x1f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 022F
        gbc.setState(0x2cca, 0xaaf1, 0x67f0, 0xf303, 0xcc51, 0xea69, 0x1, 0x1);
        gbc.writeMem(0x2cca, { 0xcb, 0x66 });
        gbc.writeMem(0xea69, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaaf1);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea69), 0xe9);
        // CB 66 0230
        gbc.setState(0x9a6c, 0xae18, 0xea50, 0xacf2, 0x8435, 0x6811, 0x1, 0x0);
        gbc.writeMem(0x6811, { 0x0 });
        gbc.writeMem(0x9a6c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xae18);
        EXPECT(gbc.pc(), 0x9a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6c), 0xcb);
        EXPECT(gbc.readMem(0x9a6d), 0x66);
        // CB 66 0231
        gbc.setState(0x1730, 0xa608, 0x7a40, 0x2313, 0x98b1, 0x95cc, 0x0, 0x1);
        gbc.writeMem(0x1730, { 0xcb, 0x66 });
        gbc.writeMem(0x95cc, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa608);
        EXPECT(gbc.pc(), 0x1732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cc), 0x26);
        // CB 66 0232
        gbc.setState(0xac71, 0xd1a1, 0x43d0, 0x99ce, 0xb9b, 0xf48e, 0x0, 0x0);
        gbc.writeMem(0xac71, { 0xcb, 0x66 });
        gbc.writeMem(0xf48e, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd1a1);
        EXPECT(gbc.pc(), 0xac73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac71), 0xcb);
        EXPECT(gbc.readMem(0xac72), 0x66);
        EXPECT(gbc.readMem(0xf48e), 0x27);
        // CB 66 0233
        gbc.setState(0xc670, 0xc112, 0x6c90, 0xfe1a, 0x6332, 0xccdb, 0x0, 0x0);
        gbc.writeMem(0xc670, { 0xcb, 0x66 });
        gbc.writeMem(0xccdb, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc112);
        EXPECT(gbc.pc(), 0xc672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc670), 0xcb);
        EXPECT(gbc.readMem(0xc671), 0x66);
        EXPECT(gbc.readMem(0xccdb), 0x9b);
        // CB 66 0234
        gbc.setState(0x1769, 0xc242, 0x8fe0, 0x2236, 0xd7bb, 0x35ce, 0x0, 0x1);
        gbc.writeMem(0x1769, { 0xcb, 0x66 });
        gbc.writeMem(0x35ce, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc242);
        EXPECT(gbc.pc(), 0x176b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0235
        gbc.setState(0xa3ad, 0x709f, 0xaa20, 0x3b18, 0xf6a7, 0xb394, 0x0, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0x66 });
        gbc.writeMem(0xb394, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0x66);
        EXPECT(gbc.readMem(0xb394), 0xd6);
        // CB 66 0236
        gbc.setState(0x1a65, 0x4e73, 0x3d00, 0x5487, 0x1fd6, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x1a65, { 0xcb, 0x66 });
        gbc.writeMem(0x39ea, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4e73);
        EXPECT(gbc.pc(), 0x1a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0237
        gbc.setState(0x53ad, 0xd1df, 0x40f0, 0x9438, 0xc0eb, 0x6969, 0x0, 0x1);
        gbc.writeMem(0x53ad, { 0xcb, 0x66 });
        gbc.writeMem(0x6969, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd1df);
        EXPECT(gbc.pc(), 0x53af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0238
        gbc.setState(0x8a2f, 0x93a5, 0xfaf0, 0xdbd, 0xbda6, 0x1a41, 0x1, 0x1);
        gbc.writeMem(0x1a41, { 0x23 });
        gbc.writeMem(0x8a2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x93a5);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0x66);
        // CB 66 0239
        gbc.setState(0x11a, 0xb374, 0xbfc0, 0x6071, 0xabf2, 0x3332, 0x1, 0x1);
        gbc.writeMem(0x11a, { 0xcb, 0x66 });
        gbc.writeMem(0x3332, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb374);
        EXPECT(gbc.pc(), 0x11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 023A
        gbc.setState(0x5ae0, 0x7fa9, 0x1000, 0xe4ed, 0xc6df, 0xe5aa, 0x0, 0x0);
        gbc.writeMem(0x5ae0, { 0xcb, 0x66 });
        gbc.writeMem(0xe5aa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7fa9);
        EXPECT(gbc.pc(), 0x5ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5aa), 0x90);
        // CB 66 023B
        gbc.setState(0x43b5, 0x9fc1, 0x7870, 0x6e09, 0x9f34, 0x4703, 0x1, 0x1);
        gbc.writeMem(0x43b5, { 0xcb, 0x66 });
        gbc.writeMem(0x4703, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9fc1);
        EXPECT(gbc.pc(), 0x43b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 023C
        gbc.setState(0x52f4, 0xc365, 0x3dc0, 0x986d, 0x331b, 0x32e5, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0x7a });
        gbc.writeMem(0x52f4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc365);
        EXPECT(gbc.pc(), 0x52f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 023D
        gbc.setState(0x9d6e, 0xfa29, 0xd5d0, 0xf59d, 0x9e77, 0x2b29, 0x0, 0x1);
        gbc.writeMem(0x2b29, { 0x82 });
        gbc.writeMem(0x9d6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfa29);
        EXPECT(gbc.pc(), 0x9d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6e), 0xcb);
        EXPECT(gbc.readMem(0x9d6f), 0x66);
        // CB 66 023E
        gbc.setState(0x2489, 0x52f8, 0xaab0, 0xda5c, 0x645c, 0x3051, 0x1, 0x1);
        gbc.writeMem(0x2489, { 0xcb, 0x66 });
        gbc.writeMem(0x3051, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x52f8);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 023F
        gbc.setState(0xd36a, 0xc26d, 0xbed0, 0x1fc8, 0xe426, 0x5ead, 0x1, 0x1);
        gbc.writeMem(0x5ead, { 0x20 });
        gbc.writeMem(0xd36a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0xd36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36a), 0xcb);
        EXPECT(gbc.readMem(0xd36b), 0x66);
        // CB 66 0240
        gbc.setState(0xb055, 0x7e8d, 0x42b0, 0xce64, 0xb4cf, 0x6ab8, 0x1, 0x0);
        gbc.writeMem(0x6ab8, { 0xd7 });
        gbc.writeMem(0xb055, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0xb057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb055), 0xcb);
        EXPECT(gbc.readMem(0xb056), 0x66);
        // CB 66 0241
        gbc.setState(0x2238, 0x2c4f, 0x3d80, 0xc898, 0x4854, 0x4619, 0x1, 0x1);
        gbc.writeMem(0x2238, { 0xcb, 0x66 });
        gbc.writeMem(0x4619, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2c4f);
        EXPECT(gbc.pc(), 0x223a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0242
        gbc.setState(0x36d8, 0x6612, 0x8140, 0x46fa, 0x306f, 0x6857, 0x1, 0x1);
        gbc.writeMem(0x36d8, { 0xcb, 0x66 });
        gbc.writeMem(0x6857, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6612);
        EXPECT(gbc.pc(), 0x36da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0243
        gbc.setState(0xb6d4, 0xc0ea, 0x8a0, 0x2038, 0x3748, 0x991d, 0x0, 0x1);
        gbc.writeMem(0x991d, { 0xf8 });
        gbc.writeMem(0xb6d4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc0ea);
        EXPECT(gbc.pc(), 0xb6d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x991d), 0xf8);
        EXPECT(gbc.readMem(0xb6d4), 0xcb);
        EXPECT(gbc.readMem(0xb6d5), 0x66);
        // CB 66 0244
        gbc.setState(0xa140, 0x3ef6, 0x4c90, 0xabbe, 0x1c, 0xa298, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0x66 });
        gbc.writeMem(0xa298, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3ef6);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa140), 0xcb);
        EXPECT(gbc.readMem(0xa141), 0x66);
        EXPECT(gbc.readMem(0xa298), 0x46);
        // CB 66 0245
        gbc.setState(0x2f9e, 0x5ad0, 0x4920, 0x7948, 0xf3c0, 0xbd15, 0x1, 0x0);
        gbc.writeMem(0x2f9e, { 0xcb, 0x66 });
        gbc.writeMem(0xbd15, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5ad0);
        EXPECT(gbc.pc(), 0x2fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd15), 0x37);
        // CB 66 0246
        gbc.setState(0xb13f, 0xd299, 0xe1b0, 0x8e68, 0xeb9, 0xd066, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0xcb, 0x66 });
        gbc.writeMem(0xd066, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd299);
        EXPECT(gbc.pc(), 0xb141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13f), 0xcb);
        EXPECT(gbc.readMem(0xb140), 0x66);
        EXPECT(gbc.readMem(0xd066), 0x72);
        // CB 66 0247
        gbc.setState(0x5161, 0x2523, 0x5c60, 0xa0a9, 0xf616, 0xf6b2, 0x0, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0x66 });
        gbc.writeMem(0xf6b2, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2523);
        EXPECT(gbc.pc(), 0x5163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf6b2), 0xb9);
        // CB 66 0248
        gbc.setState(0x50bb, 0xa04d, 0x2bd0, 0x8dcf, 0x6fe0, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0x66 });
        gbc.writeMem(0xcdba, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa04d);
        EXPECT(gbc.pc(), 0x50bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdba), 0xfe);
        // CB 66 0249
        gbc.setState(0x53b7, 0x4fd, 0xbe60, 0x9e79, 0xbccd, 0x5333, 0x1, 0x1);
        gbc.writeMem(0x5333, { 0x68 });
        gbc.writeMem(0x53b7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4fd);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 024A
        gbc.setState(0x683e, 0x9e63, 0xa6b0, 0xe1d, 0xea08, 0xe375, 0x0, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x66 });
        gbc.writeMem(0xe375, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9e63);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe375), 0xe6);
        // CB 66 024B
        gbc.setState(0x61f1, 0xa8e7, 0xde90, 0x8575, 0x2c39, 0x618f, 0x1, 0x0);
        gbc.writeMem(0x618f, { 0x88 });
        gbc.writeMem(0x61f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa8e7);
        EXPECT(gbc.pc(), 0x61f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 024C
        gbc.setState(0xa8bf, 0x876e, 0x6390, 0xefe6, 0x9316, 0xbebf, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0x66 });
        gbc.writeMem(0xbebf, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x876e);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bf), 0xcb);
        EXPECT(gbc.readMem(0xa8c0), 0x66);
        EXPECT(gbc.readMem(0xbebf), 0x23);
        // CB 66 024D
        gbc.setState(0x33e4, 0xe180, 0xb450, 0xedf7, 0x4206, 0xed50, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x66 });
        gbc.writeMem(0xed50, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0xa5);
        // CB 66 024E
        gbc.setState(0x1460, 0x99f5, 0xb1f0, 0x897c, 0xfbbe, 0x3fee, 0x1, 0x1);
        gbc.writeMem(0x1460, { 0xcb, 0x66 });
        gbc.writeMem(0x3fee, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99f5);
        EXPECT(gbc.pc(), 0x1462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 024F
        gbc.setState(0x98c9, 0x8375, 0x3980, 0x9384, 0x1908, 0x19fe, 0x1, 0x1);
        gbc.writeMem(0x19fe, { 0x13 });
        gbc.writeMem(0x98c9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8375);
        EXPECT(gbc.pc(), 0x98cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c9), 0xcb);
        EXPECT(gbc.readMem(0x98ca), 0x66);
        // CB 66 0250
        gbc.setState(0xd3c2, 0xc4b, 0xc660, 0x4826, 0xb0ea, 0xa09a, 0x0, 0x0);
        gbc.writeMem(0xa09a, { 0xa5 });
        gbc.writeMem(0xd3c2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc4b);
        EXPECT(gbc.pc(), 0xd3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09a), 0xa5);
        EXPECT(gbc.readMem(0xd3c2), 0xcb);
        EXPECT(gbc.readMem(0xd3c3), 0x66);
        // CB 66 0252
        gbc.setState(0xf0b, 0xfb0, 0xdd50, 0x9482, 0xe0b, 0xa4b7, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xcb, 0x66 });
        gbc.writeMem(0xa4b7, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfb0);
        EXPECT(gbc.pc(), 0xf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b7), 0xf4);
        // CB 66 0253
        gbc.setState(0x5f06, 0x980c, 0xe0f0, 0x23cd, 0x249f, 0xf10c, 0x1, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x66 });
        gbc.writeMem(0xf10c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x980c);
        EXPECT(gbc.pc(), 0x5f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf10c), 0xbe);
        // CB 66 0254
        gbc.setState(0x88c3, 0xf0e6, 0x1330, 0x682, 0xa513, 0x735d, 0x1, 0x0);
        gbc.writeMem(0x735d, { 0x51 });
        gbc.writeMem(0x88c3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf0e6);
        EXPECT(gbc.pc(), 0x88c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c3), 0xcb);
        EXPECT(gbc.readMem(0x88c4), 0x66);
        // CB 66 0255
        gbc.setState(0x8267, 0x9858, 0xd580, 0x1155, 0x736e, 0x9303, 0x0, 0x1);
        gbc.writeMem(0x8267, { 0xcb, 0x66 });
        gbc.writeMem(0x9303, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9858);
        EXPECT(gbc.pc(), 0x8269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8267), 0xcb);
        EXPECT(gbc.readMem(0x8268), 0x66);
        EXPECT(gbc.readMem(0x9303), 0x3e);
        // CB 66 0256
        gbc.setState(0x6630, 0x4f12, 0xd370, 0x506e, 0x60f9, 0x5040, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0x98 });
        gbc.writeMem(0x6630, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4f12);
        EXPECT(gbc.pc(), 0x6632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0257
        gbc.setState(0x6733, 0xadc4, 0x6d70, 0xf517, 0x344, 0xc357, 0x1, 0x0);
        gbc.writeMem(0x6733, { 0xcb, 0x66 });
        gbc.writeMem(0xc357, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xadc4);
        EXPECT(gbc.pc(), 0x6735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc357), 0x4a);
        // CB 66 0258
        gbc.setState(0xce9d, 0x5959, 0x17c0, 0x1615, 0xdad9, 0x3fc9, 0x0, 0x1);
        gbc.writeMem(0x3fc9, { 0x72 });
        gbc.writeMem(0xce9d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5959);
        EXPECT(gbc.pc(), 0xce9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9d), 0xcb);
        EXPECT(gbc.readMem(0xce9e), 0x66);
        // CB 66 0259
        gbc.setState(0xa6b4, 0x77ba, 0x89e0, 0x8d4e, 0x5ef5, 0xc810, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0x66 });
        gbc.writeMem(0xc810, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x77ba);
        EXPECT(gbc.pc(), 0xa6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b4), 0xcb);
        EXPECT(gbc.readMem(0xa6b5), 0x66);
        EXPECT(gbc.readMem(0xc810), 0x6f);
        // CB 66 025A
        gbc.setState(0x2253, 0xa061, 0x4130, 0x27e5, 0x4523, 0x617, 0x0, 0x0);
        gbc.writeMem(0x617, { 0x1b });
        gbc.writeMem(0x2253, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa061);
        EXPECT(gbc.pc(), 0x2255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 025B
        gbc.setState(0x2c40, 0xa2ad, 0x8910, 0x62a0, 0x53fd, 0x8a80, 0x0, 0x1);
        gbc.writeMem(0x2c40, { 0xcb, 0x66 });
        gbc.writeMem(0x8a80, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa2ad);
        EXPECT(gbc.pc(), 0x2c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a80), 0x9a);
        // CB 66 025C
        gbc.setState(0x454f, 0x6cc, 0x9080, 0x3383, 0xe061, 0x90ab, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0x66 });
        gbc.writeMem(0x90ab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6cc);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ab), 0x59);
        // CB 66 025D
        gbc.setState(0x8f90, 0x3038, 0x5390, 0x9523, 0x99a2, 0x8538, 0x0, 0x0);
        gbc.writeMem(0x8538, { 0xdb });
        gbc.writeMem(0x8f90, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0x8f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8538), 0xdb);
        EXPECT(gbc.readMem(0x8f90), 0xcb);
        EXPECT(gbc.readMem(0x8f91), 0x66);
        // CB 66 025E
        gbc.setState(0xddd6, 0x7cab, 0x82f0, 0x45, 0xd533, 0x1360, 0x1, 0x0);
        gbc.writeMem(0x1360, { 0xfc });
        gbc.writeMem(0xddd6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7cab);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd6), 0xcb);
        EXPECT(gbc.readMem(0xddd7), 0x66);
        // CB 66 025F
        gbc.setState(0x8f3, 0x6c3f, 0x2e00, 0xb3d, 0x800, 0xb909, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x66 });
        gbc.writeMem(0xb909, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6c3f);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb909), 0xea);
        // CB 66 0260
        gbc.setState(0xc542, 0x3baf, 0xb060, 0x4d01, 0x3ca4, 0x8f7c, 0x0, 0x1);
        gbc.writeMem(0x8f7c, { 0x6 });
        gbc.writeMem(0xc542, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7c), 0x6);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0x66);
        // CB 66 0261
        gbc.setState(0x5f3c, 0x7427, 0x3ea0, 0xd488, 0xdd8a, 0xfb8e, 0x0, 0x0);
        gbc.writeMem(0x5f3c, { 0xcb, 0x66 });
        gbc.writeMem(0xfb8e, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7427);
        EXPECT(gbc.pc(), 0x5f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb8e), 0xd0);
        // CB 66 0262
        gbc.setState(0x2c6b, 0xe844, 0x8890, 0x2a41, 0xdc0b, 0x3787, 0x1, 0x0);
        gbc.writeMem(0x2c6b, { 0xcb, 0x66 });
        gbc.writeMem(0x3787, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe844);
        EXPECT(gbc.pc(), 0x2c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0263
        gbc.setState(0xb153, 0x845f, 0x4980, 0xafa5, 0x793f, 0xa665, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0x86 });
        gbc.writeMem(0xb153, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x845f);
        EXPECT(gbc.pc(), 0xb155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa665), 0x86);
        EXPECT(gbc.readMem(0xb153), 0xcb);
        EXPECT(gbc.readMem(0xb154), 0x66);
        // CB 66 0264
        gbc.setState(0xebc7, 0xb53d, 0xf730, 0x8d73, 0x967f, 0x8683, 0x0, 0x1);
        gbc.writeMem(0x8683, { 0x81 });
        gbc.writeMem(0xebc7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb53d);
        EXPECT(gbc.pc(), 0xebc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8683), 0x81);
        EXPECT(gbc.readMem(0xebc7), 0xcb);
        EXPECT(gbc.readMem(0xebc8), 0x66);
        // CB 66 0265
        gbc.setState(0xb063, 0xd399, 0x3410, 0xda3e, 0x1a17, 0xdcb2, 0x0, 0x0);
        gbc.writeMem(0xb063, { 0xcb, 0x66 });
        gbc.writeMem(0xdcb2, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd399);
        EXPECT(gbc.pc(), 0xb065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb063), 0xcb);
        EXPECT(gbc.readMem(0xb064), 0x66);
        EXPECT(gbc.readMem(0xdcb2), 0x4f);
        // CB 66 0266
        gbc.setState(0x2931, 0xb23e, 0x5dc0, 0xac74, 0xbf73, 0xc071, 0x1, 0x1);
        gbc.writeMem(0x2931, { 0xcb, 0x66 });
        gbc.writeMem(0xc071, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb23e);
        EXPECT(gbc.pc(), 0x2933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc071), 0x5d);
        // CB 66 0267
        gbc.setState(0x61bb, 0x2a83, 0x5c50, 0x782, 0x125, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x61bb, { 0xcb, 0x66 });
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2a83);
        EXPECT(gbc.pc(), 0x61bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e6), 0x2f);
        // CB 66 0268
        gbc.setState(0x58e8, 0x4fd9, 0x16d0, 0xc0ad, 0x19e6, 0x8329, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0xcb, 0x66 });
        gbc.writeMem(0x8329, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4fd9);
        EXPECT(gbc.pc(), 0x58ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8329), 0xd1);
        // CB 66 0269
        gbc.setState(0x5a8d, 0xbdb8, 0x7c70, 0x5452, 0x9cb8, 0x2d73, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xc });
        gbc.writeMem(0x5a8d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbdb8);
        EXPECT(gbc.pc(), 0x5a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 026A
        gbc.setState(0x1d59, 0x31d1, 0x7300, 0x466b, 0x2a09, 0xbf3f, 0x1, 0x0);
        gbc.writeMem(0x1d59, { 0xcb, 0x66 });
        gbc.writeMem(0xbf3f, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x31d1);
        EXPECT(gbc.pc(), 0x1d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3f), 0x31);
        // CB 66 026B
        gbc.setState(0x448, 0x9abb, 0x11a0, 0x5dd3, 0x19fd, 0x7cb3, 0x0, 0x0);
        gbc.writeMem(0x448, { 0xcb, 0x66 });
        gbc.writeMem(0x7cb3, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9abb);
        EXPECT(gbc.pc(), 0x44a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 026C
        gbc.setState(0x267b, 0x4b22, 0xd950, 0x3654, 0xd59b, 0x94ca, 0x0, 0x0);
        gbc.writeMem(0x267b, { 0xcb, 0x66 });
        gbc.writeMem(0x94ca, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4b22);
        EXPECT(gbc.pc(), 0x267d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ca), 0x1e);
        // CB 66 026E
        gbc.setState(0xd67c, 0x976, 0xc7b0, 0x878a, 0xbab5, 0xd3fd, 0x0, 0x0);
        gbc.writeMem(0xd3fd, { 0x50 });
        gbc.writeMem(0xd67c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x976);
        EXPECT(gbc.pc(), 0xd67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fd), 0x50);
        EXPECT(gbc.readMem(0xd67c), 0xcb);
        EXPECT(gbc.readMem(0xd67d), 0x66);
        // CB 66 026F
        gbc.setState(0x88fd, 0xf7ac, 0x4190, 0x4c50, 0x47ba, 0xacdd, 0x0, 0x0);
        gbc.writeMem(0x88fd, { 0xcb, 0x66 });
        gbc.writeMem(0xacdd, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf7ac);
        EXPECT(gbc.pc(), 0x88ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fd), 0xcb);
        EXPECT(gbc.readMem(0x88fe), 0x66);
        EXPECT(gbc.readMem(0xacdd), 0x23);
        // CB 66 0270
        gbc.setState(0x494f, 0xfbc7, 0x7c0, 0x8ea9, 0x8470, 0x5eab, 0x0, 0x0);
        gbc.writeMem(0x494f, { 0xcb, 0x66 });
        gbc.writeMem(0x5eab, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfbc7);
        EXPECT(gbc.pc(), 0x4951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0271
        gbc.setState(0x6f7a, 0xc07e, 0xd660, 0x6c93, 0x1dc1, 0x53f, 0x1, 0x1);
        gbc.writeMem(0x53f, { 0xb3 });
        gbc.writeMem(0x6f7a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc07e);
        EXPECT(gbc.pc(), 0x6f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0272
        gbc.setState(0x98a4, 0x7230, 0xae00, 0x1376, 0x5c0b, 0x8e67, 0x0, 0x1);
        gbc.writeMem(0x8e67, { 0x79 });
        gbc.writeMem(0x98a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7230);
        EXPECT(gbc.pc(), 0x98a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e67), 0x79);
        EXPECT(gbc.readMem(0x98a4), 0xcb);
        EXPECT(gbc.readMem(0x98a5), 0x66);
        // CB 66 0273
        gbc.setState(0x1b7d, 0x3117, 0xc820, 0xcca1, 0xf437, 0xc16f, 0x1, 0x1);
        gbc.writeMem(0x1b7d, { 0xcb, 0x66 });
        gbc.writeMem(0xc16f, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3117);
        EXPECT(gbc.pc(), 0x1b7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16f), 0xfa);
        // CB 66 0274
        gbc.setState(0xc526, 0x34c3, 0x380, 0xcbd4, 0x99de, 0x5bed, 0x1, 0x1);
        gbc.writeMem(0x5bed, { 0x28 });
        gbc.writeMem(0xc526, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x34c3);
        EXPECT(gbc.pc(), 0xc528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc526), 0xcb);
        EXPECT(gbc.readMem(0xc527), 0x66);
        // CB 66 0275
        gbc.setState(0x4dd2, 0x7242, 0xc110, 0xf6a, 0xc622, 0x56de, 0x1, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0x66 });
        gbc.writeMem(0x56de, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0x4dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0276
        gbc.setState(0x1b31, 0xf86f, 0xa570, 0x6fde, 0x2c0b, 0x30d, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0x32 });
        gbc.writeMem(0x1b31, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf86f);
        EXPECT(gbc.pc(), 0x1b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0277
        gbc.setState(0xba0d, 0xf499, 0x9610, 0xe206, 0x7fb5, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0xba0d, { 0xcb, 0x66 });
        gbc.writeMem(0xc2b7, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf499);
        EXPECT(gbc.pc(), 0xba0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0d), 0xcb);
        EXPECT(gbc.readMem(0xba0e), 0x66);
        EXPECT(gbc.readMem(0xc2b7), 0x66);
        // CB 66 0278
        gbc.setState(0xd41, 0x75b6, 0x4400, 0xfafa, 0x92b0, 0xd721, 0x0, 0x1);
        gbc.writeMem(0xd41, { 0xcb, 0x66 });
        gbc.writeMem(0xd721, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x75b6);
        EXPECT(gbc.pc(), 0xd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd721), 0x83);
        // CB 66 0279
        gbc.setState(0x9b0c, 0xca10, 0x3e30, 0x1b0d, 0xc41c, 0x736f, 0x0, 0x0);
        gbc.writeMem(0x736f, { 0xf3 });
        gbc.writeMem(0x9b0c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0x9b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0c), 0xcb);
        EXPECT(gbc.readMem(0x9b0d), 0x66);
        // CB 66 027A
        gbc.setState(0x67e2, 0x9cf8, 0xd750, 0x1f77, 0xaae6, 0x90d1, 0x0, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x66 });
        gbc.writeMem(0x90d1, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9cf8);
        EXPECT(gbc.pc(), 0x67e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d1), 0xed);
        // CB 66 027B
        gbc.setState(0x98da, 0x36ad, 0xd330, 0x5483, 0xa976, 0x7098, 0x1, 0x0);
        gbc.writeMem(0x7098, { 0xe9 });
        gbc.writeMem(0x98da, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x36ad);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98da), 0xcb);
        EXPECT(gbc.readMem(0x98db), 0x66);
        // CB 66 027C
        gbc.setState(0x131c, 0x7f4f, 0x8b20, 0xb976, 0x8a4, 0x728c, 0x0, 0x0);
        gbc.writeMem(0x131c, { 0xcb, 0x66 });
        gbc.writeMem(0x728c, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7f4f);
        EXPECT(gbc.pc(), 0x131e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 027D
        gbc.setState(0x37d9, 0x35bb, 0xe0f0, 0xf988, 0xd8f7, 0x9e53, 0x1, 0x1);
        gbc.writeMem(0x37d9, { 0xcb, 0x66 });
        gbc.writeMem(0x9e53, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x35bb);
        EXPECT(gbc.pc(), 0x37db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e53), 0xb1);
        // CB 66 027E
        gbc.setState(0x6bb3, 0xedd1, 0x43a0, 0x427, 0x5b00, 0x3b51, 0x1, 0x0);
        gbc.writeMem(0x3b51, { 0xf1 });
        gbc.writeMem(0x6bb3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xedd1);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 027F
        gbc.setState(0x2f15, 0xfb89, 0x35e0, 0xafc6, 0x24fa, 0xd326, 0x0, 0x1);
        gbc.writeMem(0x2f15, { 0xcb, 0x66 });
        gbc.writeMem(0xd326, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0x2f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd326), 0xad);
        // CB 66 0280
        gbc.setState(0x70fc, 0x1cf8, 0x8e10, 0xebf7, 0x441b, 0xedac, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0xcb, 0x66 });
        gbc.writeMem(0xedac, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1cf8);
        EXPECT(gbc.pc(), 0x70fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedac), 0xd5);
        // CB 66 0281
        gbc.setState(0xc520, 0xf9b, 0xfe90, 0x9fbf, 0x5caf, 0x8098, 0x0, 0x1);
        gbc.writeMem(0x8098, { 0x76 });
        gbc.writeMem(0xc520, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf9b);
        EXPECT(gbc.pc(), 0xc522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8098), 0x76);
        EXPECT(gbc.readMem(0xc520), 0xcb);
        EXPECT(gbc.readMem(0xc521), 0x66);
        // CB 66 0282
        gbc.setState(0x428b, 0x6bd1, 0x99f0, 0xe15e, 0x66f5, 0x2583, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xb2 });
        gbc.writeMem(0x428b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6bd1);
        EXPECT(gbc.pc(), 0x428d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0283
        gbc.setState(0xddf5, 0x6baf, 0x1100, 0x590f, 0x292b, 0x3b1a, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xaa });
        gbc.writeMem(0xddf5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6baf);
        EXPECT(gbc.pc(), 0xddf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf5), 0xcb);
        EXPECT(gbc.readMem(0xddf6), 0x66);
        // CB 66 0284
        gbc.setState(0x75d7, 0xa24, 0x4130, 0xf9d8, 0xaecc, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xd });
        gbc.writeMem(0x75d7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0x75d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0285
        gbc.setState(0xabfa, 0xa0a0, 0x32c0, 0xcf99, 0x4992, 0xc62, 0x0, 0x1);
        gbc.writeMem(0xc62, { 0x82 });
        gbc.writeMem(0xabfa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa0a0);
        EXPECT(gbc.pc(), 0xabfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfa), 0xcb);
        EXPECT(gbc.readMem(0xabfb), 0x66);
        // CB 66 0286
        gbc.setState(0x67b2, 0x4b79, 0x5910, 0x530f, 0xb3ea, 0x7f58, 0x1, 0x0);
        gbc.writeMem(0x67b2, { 0xcb, 0x66 });
        gbc.writeMem(0x7f58, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4b79);
        EXPECT(gbc.pc(), 0x67b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0287
        gbc.setState(0x40b1, 0x6dbb, 0x4350, 0xb3d0, 0xb0f9, 0xa07a, 0x0, 0x1);
        gbc.writeMem(0x40b1, { 0xcb, 0x66 });
        gbc.writeMem(0xa07a, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6dbb);
        EXPECT(gbc.pc(), 0x40b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07a), 0xa7);
        // CB 66 0288
        gbc.setState(0x3fff, 0x399c, 0x12a0, 0xaeea, 0xa1ce, 0x85eb, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xcb, 0x66 });
        gbc.writeMem(0x85eb, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x399c);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85eb), 0x98);
        // CB 66 0289
        gbc.setState(0xdc1c, 0xa425, 0xdc40, 0x471f, 0xf6e1, 0xfe35, 0x1, 0x0);
        gbc.writeMem(0xdc1c, { 0xcb, 0x66 });
        gbc.writeMem(0xfe35, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa425);
        EXPECT(gbc.pc(), 0xdc1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1c), 0xcb);
        EXPECT(gbc.readMem(0xdc1d), 0x66);
        EXPECT(gbc.readMem(0xfe35), 0x12);
        // CB 66 028A
        gbc.setState(0xe399, 0x8fec, 0xb810, 0x391f, 0x871f, 0x5b8b, 0x1, 0x0);
        gbc.writeMem(0x5b8b, { 0x8b });
        gbc.writeMem(0xe399, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8fec);
        EXPECT(gbc.pc(), 0xe39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe399), 0xcb);
        EXPECT(gbc.readMem(0xe39a), 0x66);
        // CB 66 028C
        gbc.setState(0x29dd, 0x224e, 0x3320, 0x5dc2, 0xbeb7, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x29dd, { 0xcb, 0x66 });
        gbc.writeMem(0x3d50, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x224e);
        EXPECT(gbc.pc(), 0x29df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 028D
        gbc.setState(0x8fc, 0x5def, 0x8420, 0x3fa9, 0xa97, 0xab13, 0x1, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0x66 });
        gbc.writeMem(0xab13, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5def);
        EXPECT(gbc.pc(), 0x8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab13), 0x3b);
        // CB 66 028E
        gbc.setState(0x498b, 0xf798, 0xe620, 0x64e8, 0x40ed, 0xfd68, 0x1, 0x1);
        gbc.writeMem(0x498b, { 0xcb, 0x66 });
        gbc.writeMem(0xfd68, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf798);
        EXPECT(gbc.pc(), 0x498d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd68), 0xfe);
        // CB 66 0290
        gbc.setState(0x1081, 0x90f7, 0x7ad0, 0x64ba, 0x96a8, 0x3772, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xcb, 0x66 });
        gbc.writeMem(0x3772, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x90f7);
        EXPECT(gbc.pc(), 0x1083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0291
        gbc.setState(0x113f, 0x4c75, 0x1290, 0x4cac, 0x8bec, 0x361, 0x1, 0x0);
        gbc.writeMem(0x361, { 0xac });
        gbc.writeMem(0x113f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4c75);
        EXPECT(gbc.pc(), 0x1141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0292
        gbc.setState(0x19b0, 0xdf6f, 0x5170, 0x78f3, 0x3e73, 0x31e3, 0x1, 0x0);
        gbc.writeMem(0x19b0, { 0xcb, 0x66 });
        gbc.writeMem(0x31e3, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdf6f);
        EXPECT(gbc.pc(), 0x19b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0293
        gbc.setState(0x863a, 0x81ce, 0x2020, 0x87dd, 0xa4eb, 0xa250, 0x1, 0x0);
        gbc.writeMem(0x863a, { 0xcb, 0x66 });
        gbc.writeMem(0xa250, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x81ce);
        EXPECT(gbc.pc(), 0x863c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863a), 0xcb);
        EXPECT(gbc.readMem(0x863b), 0x66);
        EXPECT(gbc.readMem(0xa250), 0x61);
        // CB 66 0294
        gbc.setState(0xd88c, 0xc523, 0x23c0, 0x83b8, 0x308b, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x7411, { 0x9a });
        gbc.writeMem(0xd88c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc523);
        EXPECT(gbc.pc(), 0xd88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88c), 0xcb);
        EXPECT(gbc.readMem(0xd88d), 0x66);
        // CB 66 0295
        gbc.setState(0xe15, 0x9dd2, 0xe3e0, 0x5652, 0x570f, 0xe8fd, 0x1, 0x0);
        gbc.writeMem(0xe15, { 0xcb, 0x66 });
        gbc.writeMem(0xe8fd, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9dd2);
        EXPECT(gbc.pc(), 0xe17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fd), 0xb);
        // CB 66 0296
        gbc.setState(0x6049, 0x613e, 0xfd00, 0xf70d, 0x7fd8, 0x3958, 0x0, 0x0);
        gbc.writeMem(0x3958, { 0x1d });
        gbc.writeMem(0x6049, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0x604b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0297
        gbc.setState(0xee4e, 0xea5f, 0xa3e0, 0x6754, 0x38b7, 0xa7c, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0x58 });
        gbc.writeMem(0xee4e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xea5f);
        EXPECT(gbc.pc(), 0xee50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4e), 0xcb);
        EXPECT(gbc.readMem(0xee4f), 0x66);
        // CB 66 0298
        gbc.setState(0xe79d, 0x411, 0x910, 0xd412, 0xc94, 0x7938, 0x0, 0x0);
        gbc.writeMem(0x7938, { 0x84 });
        gbc.writeMem(0xe79d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x411);
        EXPECT(gbc.pc(), 0xe79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79d), 0xcb);
        EXPECT(gbc.readMem(0xe79e), 0x66);
        // CB 66 0299
        gbc.setState(0x484e, 0xf141, 0x9cc0, 0x7930, 0x4174, 0x454e, 0x1, 0x1);
        gbc.writeMem(0x454e, { 0xaa });
        gbc.writeMem(0x484e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf141);
        EXPECT(gbc.pc(), 0x4850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 029A
        gbc.setState(0x3663, 0x503, 0xdf00, 0x1645, 0x7592, 0x796a, 0x1, 0x1);
        gbc.writeMem(0x3663, { 0xcb, 0x66 });
        gbc.writeMem(0x796a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x503);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 029B
        gbc.setState(0x4474, 0xe3ed, 0x2ba0, 0x934b, 0x989a, 0x2972, 0x0, 0x0);
        gbc.writeMem(0x2972, { 0x2 });
        gbc.writeMem(0x4474, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe3ed);
        EXPECT(gbc.pc(), 0x4476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 029C
        gbc.setState(0xbf08, 0xdb24, 0xfad0, 0x3e7, 0xe908, 0x9c9e, 0x0, 0x0);
        gbc.writeMem(0x9c9e, { 0x21 });
        gbc.writeMem(0xbf08, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdb24);
        EXPECT(gbc.pc(), 0xbf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9e), 0x21);
        EXPECT(gbc.readMem(0xbf08), 0xcb);
        EXPECT(gbc.readMem(0xbf09), 0x66);
        // CB 66 029D
        gbc.setState(0x3c4b, 0x23a1, 0x1c50, 0x3f82, 0xd2b4, 0x3582, 0x1, 0x1);
        gbc.writeMem(0x3582, { 0xd5 });
        gbc.writeMem(0x3c4b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x23a1);
        EXPECT(gbc.pc(), 0x3c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 029E
        gbc.setState(0x8357, 0x9194, 0x2d90, 0x535c, 0xdffe, 0x9d1, 0x0, 0x0);
        gbc.writeMem(0x9d1, { 0x9a });
        gbc.writeMem(0x8357, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9194);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8357), 0xcb);
        EXPECT(gbc.readMem(0x8358), 0x66);
        // CB 66 029F
        gbc.setState(0x56d9, 0x872d, 0xf390, 0x88e7, 0xc154, 0x42e6, 0x1, 0x1);
        gbc.writeMem(0x42e6, { 0x5e });
        gbc.writeMem(0x56d9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x872d);
        EXPECT(gbc.pc(), 0x56db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02A0
        gbc.setState(0x5da3, 0x8a63, 0xe230, 0xede7, 0x9d0f, 0x97b0, 0x0, 0x1);
        gbc.writeMem(0x5da3, { 0xcb, 0x66 });
        gbc.writeMem(0x97b0, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8a63);
        EXPECT(gbc.pc(), 0x5da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b0), 0xc);
        // CB 66 02A1
        gbc.setState(0xc6fb, 0x2abb, 0x67a0, 0x1b12, 0xd8f2, 0x5657, 0x1, 0x1);
        gbc.writeMem(0x5657, { 0x15 });
        gbc.writeMem(0xc6fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0xc6fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fb), 0xcb);
        EXPECT(gbc.readMem(0xc6fc), 0x66);
        // CB 66 02A2
        gbc.setState(0x2615, 0xa23d, 0x59a0, 0x525e, 0x93c3, 0x962, 0x1, 0x0);
        gbc.writeMem(0x962, { 0x59 });
        gbc.writeMem(0x2615, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa23d);
        EXPECT(gbc.pc(), 0x2617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02A3
        gbc.setState(0x1605, 0x7bc, 0x9bd0, 0x2f3d, 0x7582, 0x467b, 0x0, 0x0);
        gbc.writeMem(0x1605, { 0xcb, 0x66 });
        gbc.writeMem(0x467b, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7bc);
        EXPECT(gbc.pc(), 0x1607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02A4
        gbc.setState(0x24ec, 0xbf8f, 0x80c0, 0x48f0, 0x46fe, 0x2456, 0x1, 0x1);
        gbc.writeMem(0x2456, { 0x83 });
        gbc.writeMem(0x24ec, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbf8f);
        EXPECT(gbc.pc(), 0x24ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02A5
        gbc.setState(0x3daa, 0x27d9, 0x6ef0, 0xc119, 0xd11d, 0xa34b, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xcb, 0x66 });
        gbc.writeMem(0xa34b, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x27d9);
        EXPECT(gbc.pc(), 0x3dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa34b), 0x42);
        // CB 66 02A6
        gbc.setState(0xf6f, 0xde0d, 0xa790, 0x1ce, 0x1107, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0xf6f, { 0xcb, 0x66 });
        gbc.writeMem(0x9ca8, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xde0d);
        EXPECT(gbc.pc(), 0xf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca8), 0xb);
        // CB 66 02A8
        gbc.setState(0xb882, 0x337c, 0x4190, 0xa18b, 0xefcd, 0x82a0, 0x1, 0x0);
        gbc.writeMem(0x82a0, { 0xd3 });
        gbc.writeMem(0xb882, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x337c);
        EXPECT(gbc.pc(), 0xb884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a0), 0xd3);
        EXPECT(gbc.readMem(0xb882), 0xcb);
        EXPECT(gbc.readMem(0xb883), 0x66);
        // CB 66 02A9
        gbc.setState(0xb5bf, 0xf530, 0x6610, 0xcb8f, 0x3b6f, 0x9ddf, 0x0, 0x1);
        gbc.writeMem(0x9ddf, { 0x78 });
        gbc.writeMem(0xb5bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0xb5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ddf), 0x78);
        EXPECT(gbc.readMem(0xb5bf), 0xcb);
        EXPECT(gbc.readMem(0xb5c0), 0x66);
        // CB 66 02AA
        gbc.setState(0x3792, 0xe29, 0x7a60, 0x336d, 0x338e, 0x2090, 0x1, 0x0);
        gbc.writeMem(0x2090, { 0xc2 });
        gbc.writeMem(0x3792, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe29);
        EXPECT(gbc.pc(), 0x3794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02AB
        gbc.setState(0xd54f, 0xbfbe, 0xb70, 0x321e, 0x6e17, 0xd90e, 0x1, 0x0);
        gbc.writeMem(0xd54f, { 0xcb, 0x66 });
        gbc.writeMem(0xd90e, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbfbe);
        EXPECT(gbc.pc(), 0xd551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54f), 0xcb);
        EXPECT(gbc.readMem(0xd550), 0x66);
        EXPECT(gbc.readMem(0xd90e), 0x11);
        // CB 66 02AC
        gbc.setState(0xb2fd, 0xda04, 0xba90, 0xc0ae, 0x457f, 0x490f, 0x0, 0x1);
        gbc.writeMem(0x490f, { 0x4a });
        gbc.writeMem(0xb2fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0xb2ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fd), 0xcb);
        EXPECT(gbc.readMem(0xb2fe), 0x66);
        // CB 66 02AD
        gbc.setState(0xd8e7, 0xfdbc, 0x8700, 0xcb36, 0x46dc, 0x7d0, 0x0, 0x1);
        gbc.writeMem(0x7d0, { 0x8e });
        gbc.writeMem(0xd8e7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfdbc);
        EXPECT(gbc.pc(), 0xd8e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e7), 0xcb);
        EXPECT(gbc.readMem(0xd8e8), 0x66);
        // CB 66 02AE
        gbc.setState(0x5aa6, 0x8ef3, 0xf7b0, 0x79c3, 0x730d, 0x368e, 0x0, 0x1);
        gbc.writeMem(0x368e, { 0xe2 });
        gbc.writeMem(0x5aa6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8ef3);
        EXPECT(gbc.pc(), 0x5aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02AF
        gbc.setState(0x9ae4, 0x262a, 0xdbd0, 0xeab6, 0x1fec, 0x5cc6, 0x1, 0x1);
        gbc.writeMem(0x5cc6, { 0x5f });
        gbc.writeMem(0x9ae4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0xcb);
        EXPECT(gbc.readMem(0x9ae5), 0x66);
        // CB 66 02B0
        gbc.setState(0xd127, 0x9b51, 0x25d0, 0xe00a, 0x8bc3, 0x104b, 0x0, 0x1);
        gbc.writeMem(0x104b, { 0xeb });
        gbc.writeMem(0xd127, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0xd129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd127), 0xcb);
        EXPECT(gbc.readMem(0xd128), 0x66);
        // CB 66 02B1
        gbc.setState(0x6d6e, 0x7f14, 0x1c90, 0x37fd, 0x9d54, 0x4204, 0x1, 0x0);
        gbc.writeMem(0x4204, { 0x5c });
        gbc.writeMem(0x6d6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7f14);
        EXPECT(gbc.pc(), 0x6d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02B2
        gbc.setState(0x1aa6, 0xad44, 0x1c30, 0x83eb, 0x73b1, 0xc44, 0x0, 0x0);
        gbc.writeMem(0xc44, { 0x38 });
        gbc.writeMem(0x1aa6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xad44);
        EXPECT(gbc.pc(), 0x1aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02B3
        gbc.setState(0x6185, 0xf19, 0xc20, 0xac97, 0xa1ae, 0x9b06, 0x1, 0x1);
        gbc.writeMem(0x6185, { 0xcb, 0x66 });
        gbc.writeMem(0x9b06, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf19);
        EXPECT(gbc.pc(), 0x6187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b06), 0x21);
        // CB 66 02B4
        gbc.setState(0x5bd8, 0x8569, 0x420, 0x3ae4, 0x7a61, 0xfb59, 0x1, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x66 });
        gbc.writeMem(0xfb59, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8569);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb59), 0xba);
        // CB 66 02B5
        gbc.setState(0x6a5c, 0xc4cb, 0xa270, 0x4e83, 0x90b5, 0xf0d, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0x18 });
        gbc.writeMem(0x6a5c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc4cb);
        EXPECT(gbc.pc(), 0x6a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02B6
        gbc.setState(0x489, 0xd9b4, 0x99e0, 0x25f8, 0xf0b3, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0x489, { 0xcb, 0x66 });
        gbc.writeMem(0x8b9f, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd9b4);
        EXPECT(gbc.pc(), 0x48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9f), 0x65);
        // CB 66 02B7
        gbc.setState(0x8f14, 0xc82a, 0x4370, 0x7c4c, 0xda43, 0xed9d, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0xcb, 0x66 });
        gbc.writeMem(0xed9d, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc82a);
        EXPECT(gbc.pc(), 0x8f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f14), 0xcb);
        EXPECT(gbc.readMem(0x8f15), 0x66);
        EXPECT(gbc.readMem(0xed9d), 0x49);
        // CB 66 02B8
        gbc.setState(0xceac, 0xa622, 0x5b00, 0x9d51, 0x3ea1, 0xcab3, 0x0, 0x1);
        gbc.writeMem(0xcab3, { 0x4b });
        gbc.writeMem(0xceac, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0xceae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab3), 0x4b);
        EXPECT(gbc.readMem(0xceac), 0xcb);
        EXPECT(gbc.readMem(0xcead), 0x66);
        // CB 66 02B9
        gbc.setState(0x43dd, 0x5f28, 0x5ac0, 0x48aa, 0x7f3a, 0x91f5, 0x0, 0x0);
        gbc.writeMem(0x43dd, { 0xcb, 0x66 });
        gbc.writeMem(0x91f5, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5f28);
        EXPECT(gbc.pc(), 0x43df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f5), 0xed);
        // CB 66 02BA
        gbc.setState(0x5e4f, 0x748e, 0x55f0, 0xa600, 0xc0b0, 0xddb3, 0x1, 0x0);
        gbc.writeMem(0x5e4f, { 0xcb, 0x66 });
        gbc.writeMem(0xddb3, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x748e);
        EXPECT(gbc.pc(), 0x5e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb3), 0x1d);
        // CB 66 02BB
        gbc.setState(0x33a, 0x6a7f, 0xdb0, 0x7746, 0x93d8, 0xa621, 0x0, 0x1);
        gbc.writeMem(0x33a, { 0xcb, 0x66 });
        gbc.writeMem(0xa621, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6a7f);
        EXPECT(gbc.pc(), 0x33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa621), 0xc);
        // CB 66 02BD
        gbc.setState(0x768d, 0x46a4, 0x8980, 0x6b00, 0x8ebb, 0xc9a5, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xcb, 0x66 });
        gbc.writeMem(0xc9a5, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x46a4);
        EXPECT(gbc.pc(), 0x768f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a5), 0x8f);
        // CB 66 02BE
        gbc.setState(0xde55, 0xf465, 0x3e00, 0xb0e5, 0xb093, 0x91e2, 0x0, 0x0);
        gbc.writeMem(0x91e2, { 0x86 });
        gbc.writeMem(0xde55, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e2), 0x86);
        EXPECT(gbc.readMem(0xde55), 0xcb);
        EXPECT(gbc.readMem(0xde56), 0x66);
        // CB 66 02BF
        gbc.setState(0x76fd, 0xf445, 0x1b60, 0xd22f, 0xbf70, 0x55ad, 0x0, 0x0);
        gbc.writeMem(0x55ad, { 0x49 });
        gbc.writeMem(0x76fd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf445);
        EXPECT(gbc.pc(), 0x76ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02C0
        gbc.setState(0x858e, 0x62dd, 0xbdf0, 0x66c2, 0x56f4, 0xbc0d, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0x66 });
        gbc.writeMem(0xbc0d, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x62dd);
        EXPECT(gbc.pc(), 0x8590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858e), 0xcb);
        EXPECT(gbc.readMem(0x858f), 0x66);
        EXPECT(gbc.readMem(0xbc0d), 0xb5);
        // CB 66 02C1
        gbc.setState(0xdafd, 0x2172, 0x8640, 0x2c16, 0x11f6, 0xba6a, 0x1, 0x1);
        gbc.writeMem(0xba6a, { 0x8b });
        gbc.writeMem(0xdafd, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2172);
        EXPECT(gbc.pc(), 0xdaff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6a), 0x8b);
        EXPECT(gbc.readMem(0xdafd), 0xcb);
        EXPECT(gbc.readMem(0xdafe), 0x66);
        // CB 66 02C2
        gbc.setState(0x135e, 0x6dea, 0xa080, 0x50f8, 0xc2e7, 0x9e13, 0x0, 0x0);
        gbc.writeMem(0x135e, { 0xcb, 0x66 });
        gbc.writeMem(0x9e13, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0x1360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e13), 0x23);
        // CB 66 02C3
        gbc.setState(0x8163, 0x1b7d, 0x7c10, 0xb232, 0x49f1, 0xa9a, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0xbe });
        gbc.writeMem(0x8163, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1b7d);
        EXPECT(gbc.pc(), 0x8165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8163), 0xcb);
        EXPECT(gbc.readMem(0x8164), 0x66);
        // CB 66 02C4
        gbc.setState(0x2724, 0xb7b9, 0x6f60, 0x41ea, 0x4a2e, 0x140b, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0x8e });
        gbc.writeMem(0x2724, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb7b9);
        EXPECT(gbc.pc(), 0x2726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02C5
        gbc.setState(0xb309, 0x87ac, 0x8c50, 0x329f, 0xf783, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x66 });
        gbc.writeMem(0xd208, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x87ac);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0x66);
        EXPECT(gbc.readMem(0xd208), 0xdd);
        // CB 66 02C6
        gbc.setState(0xa21e, 0x69a, 0x7990, 0x8b92, 0xe593, 0x3b6a, 0x0, 0x1);
        gbc.writeMem(0x3b6a, { 0x3e });
        gbc.writeMem(0xa21e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x69a);
        EXPECT(gbc.pc(), 0xa220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21e), 0xcb);
        EXPECT(gbc.readMem(0xa21f), 0x66);
        // CB 66 02C7
        gbc.setState(0x8b24, 0x4e11, 0x10e0, 0x494f, 0x6837, 0xd4c1, 0x0, 0x0);
        gbc.writeMem(0x8b24, { 0xcb, 0x66 });
        gbc.writeMem(0xd4c1, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4e11);
        EXPECT(gbc.pc(), 0x8b26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b24), 0xcb);
        EXPECT(gbc.readMem(0x8b25), 0x66);
        EXPECT(gbc.readMem(0xd4c1), 0xae);
        // CB 66 02C8
        gbc.setState(0x82ed, 0xfbe6, 0x1380, 0x5b85, 0xabf8, 0xb7ce, 0x1, 0x1);
        gbc.writeMem(0x82ed, { 0xcb, 0x66 });
        gbc.writeMem(0xb7ce, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfbe6);
        EXPECT(gbc.pc(), 0x82ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ed), 0xcb);
        EXPECT(gbc.readMem(0x82ee), 0x66);
        EXPECT(gbc.readMem(0xb7ce), 0x53);
        // CB 66 02C9
        gbc.setState(0xa7f4, 0x14a3, 0x3e30, 0xcc5d, 0xf1b1, 0xc06c, 0x0, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0x66 });
        gbc.writeMem(0xc06c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x14a3);
        EXPECT(gbc.pc(), 0xa7f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f4), 0xcb);
        EXPECT(gbc.readMem(0xa7f5), 0x66);
        EXPECT(gbc.readMem(0xc06c), 0x10);
        // CB 66 02CA
        gbc.setState(0xe925, 0x51ba, 0x2470, 0x85e, 0x536a, 0xe4d8, 0x0, 0x1);
        gbc.writeMem(0xe4d8, { 0xa });
        gbc.writeMem(0xe925, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x51ba);
        EXPECT(gbc.pc(), 0xe927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d8), 0xa);
        EXPECT(gbc.readMem(0xe925), 0xcb);
        EXPECT(gbc.readMem(0xe926), 0x66);
        // CB 66 02CB
        gbc.setState(0xe2f, 0x2e77, 0x3c00, 0xc862, 0x755a, 0x8ab8, 0x1, 0x0);
        gbc.writeMem(0xe2f, { 0xcb, 0x66 });
        gbc.writeMem(0x8ab8, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2e77);
        EXPECT(gbc.pc(), 0xe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab8), 0x8b);
        // CB 66 02CC
        gbc.setState(0xbf5a, 0x7a5b, 0x3ab0, 0x47a1, 0x3480, 0x77d9, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0x24 });
        gbc.writeMem(0xbf5a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7a5b);
        EXPECT(gbc.pc(), 0xbf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5a), 0xcb);
        EXPECT(gbc.readMem(0xbf5b), 0x66);
        // CB 66 02CD
        gbc.setState(0x404d, 0x41bf, 0xc1e0, 0x1a17, 0x71d1, 0xb0, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0x9 });
        gbc.writeMem(0x404d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x41bf);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02CE
        gbc.setState(0xc02c, 0xe34f, 0xf010, 0x8244, 0x228e, 0x8539, 0x1, 0x1);
        gbc.writeMem(0x8539, { 0x79 });
        gbc.writeMem(0xc02c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0xc02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8539), 0x79);
        EXPECT(gbc.readMem(0xc02c), 0xcb);
        EXPECT(gbc.readMem(0xc02d), 0x66);
        // CB 66 02CF
        gbc.setState(0xca3e, 0x1a6a, 0x4920, 0x3bb4, 0x6470, 0xa78a, 0x0, 0x0);
        gbc.writeMem(0xa78a, { 0x3e });
        gbc.writeMem(0xca3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1a6a);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78a), 0x3e);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0x66);
        // CB 66 02D0
        gbc.setState(0x8f66, 0xa7a0, 0x2f10, 0x5e8b, 0x66bd, 0x2140, 0x1, 0x1);
        gbc.writeMem(0x2140, { 0x90 });
        gbc.writeMem(0x8f66, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa7a0);
        EXPECT(gbc.pc(), 0x8f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f66), 0xcb);
        EXPECT(gbc.readMem(0x8f67), 0x66);
        // CB 66 02D1
        gbc.setState(0x2955, 0x7f37, 0xc1b0, 0x1132, 0x6555, 0xbbf5, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x66 });
        gbc.writeMem(0xbbf5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7f37);
        EXPECT(gbc.pc(), 0x2957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf5), 0x58);
        // CB 66 02D2
        gbc.setState(0xba0e, 0x1731, 0xf4f0, 0xd66f, 0x8ffb, 0x21a, 0x1, 0x0);
        gbc.writeMem(0x21a, { 0x66 });
        gbc.writeMem(0xba0e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1731);
        EXPECT(gbc.pc(), 0xba10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0e), 0xcb);
        EXPECT(gbc.readMem(0xba0f), 0x66);
        // CB 66 02D3
        gbc.setState(0xb7f6, 0x155b, 0xe60, 0xeceb, 0xbc0b, 0xc511, 0x0, 0x1);
        gbc.writeMem(0xb7f6, { 0xcb, 0x66 });
        gbc.writeMem(0xc511, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x155b);
        EXPECT(gbc.pc(), 0xb7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f6), 0xcb);
        EXPECT(gbc.readMem(0xb7f7), 0x66);
        EXPECT(gbc.readMem(0xc511), 0xad);
        // CB 66 02D4
        gbc.setState(0x63d6, 0x8947, 0xaaf0, 0x8e30, 0x1226, 0xa539, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0xcb, 0x66 });
        gbc.writeMem(0xa539, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8947);
        EXPECT(gbc.pc(), 0x63d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa539), 0x7a);
        // CB 66 02D5
        gbc.setState(0x8dd9, 0x2ba8, 0xce10, 0xddca, 0x6433, 0xe5a, 0x0, 0x0);
        gbc.writeMem(0xe5a, { 0xa6 });
        gbc.writeMem(0x8dd9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2ba8);
        EXPECT(gbc.pc(), 0x8ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd9), 0xcb);
        EXPECT(gbc.readMem(0x8dda), 0x66);
        // CB 66 02D6
        gbc.setState(0x1903, 0x8a9, 0xce20, 0xdf3c, 0xe3da, 0xf74, 0x1, 0x0);
        gbc.writeMem(0xf74, { 0xe3 });
        gbc.writeMem(0x1903, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8a9);
        EXPECT(gbc.pc(), 0x1905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02D7
        gbc.setState(0x1132, 0xf5fa, 0xfa10, 0xe7f5, 0xf98c, 0xb740, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0x66 });
        gbc.writeMem(0xb740, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf5fa);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb740), 0xe9);
        // CB 66 02D8
        gbc.setState(0xe07a, 0x696d, 0xd6e0, 0x7056, 0xba68, 0xbb18, 0x0, 0x1);
        gbc.writeMem(0xbb18, { 0x53 });
        gbc.writeMem(0xe07a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x696d);
        EXPECT(gbc.pc(), 0xe07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb18), 0x53);
        EXPECT(gbc.readMem(0xe07a), 0xcb);
        EXPECT(gbc.readMem(0xe07b), 0x66);
        // CB 66 02D9
        gbc.setState(0x6c72, 0xaff6, 0xb50, 0xea7, 0x1714, 0x5c45, 0x0, 0x1);
        gbc.writeMem(0x5c45, { 0x81 });
        gbc.writeMem(0x6c72, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaff6);
        EXPECT(gbc.pc(), 0x6c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02DA
        gbc.setState(0x2392, 0xbb7b, 0x6be0, 0xf2fb, 0x82ab, 0xf579, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0xcb, 0x66 });
        gbc.writeMem(0xf579, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf579), 0x2);
        // CB 66 02DC
        gbc.setState(0x2a41, 0x9264, 0x7ef0, 0xbf42, 0xa5cf, 0xb530, 0x0, 0x0);
        gbc.writeMem(0x2a41, { 0xcb, 0x66 });
        gbc.writeMem(0xb530, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9264);
        EXPECT(gbc.pc(), 0x2a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb530), 0x5f);
        // CB 66 02DD
        gbc.setState(0xeb8d, 0x5819, 0x9e90, 0x93ad, 0x6f64, 0xff5c, 0x0, 0x0);
        gbc.writeMem(0xeb8d, { 0xcb, 0x66 });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5819);
        EXPECT(gbc.pc(), 0xeb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8d), 0xcb);
        EXPECT(gbc.readMem(0xeb8e), 0x66);
        EXPECT(gbc.readMem(0xff5c), 0xc3);
        // CB 66 02DE
        gbc.setState(0xb74c, 0x5e78, 0x6180, 0xde48, 0xd4e3, 0x4ad, 0x0, 0x1);
        gbc.writeMem(0x4ad, { 0x86 });
        gbc.writeMem(0xb74c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0xb74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74c), 0xcb);
        EXPECT(gbc.readMem(0xb74d), 0x66);
        // CB 66 02DF
        gbc.setState(0xe7e, 0xc084, 0xfce0, 0xb7d9, 0xbd75, 0xb5c9, 0x0, 0x1);
        gbc.writeMem(0xe7e, { 0xcb, 0x66 });
        gbc.writeMem(0xb5c9, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc084);
        EXPECT(gbc.pc(), 0xe80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c9), 0xf0);
        // CB 66 02E0
        gbc.setState(0x6eaa, 0x4dab, 0x4410, 0x29c6, 0xbf81, 0x2e1f, 0x0, 0x1);
        gbc.writeMem(0x2e1f, { 0x86 });
        gbc.writeMem(0x6eaa, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4dab);
        EXPECT(gbc.pc(), 0x6eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 02E1
        gbc.setState(0x6ba8, 0x493b, 0xcb50, 0x3a64, 0xd38d, 0x8b34, 0x1, 0x0);
        gbc.writeMem(0x6ba8, { 0xcb, 0x66 });
        gbc.writeMem(0x8b34, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x493b);
        EXPECT(gbc.pc(), 0x6baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b34), 0x34);
        // CB 66 02E2
        gbc.setState(0xe1bf, 0xbb73, 0xcb0, 0x7e97, 0xf5f3, 0xd24b, 0x1, 0x1);
        gbc.writeMem(0xd24b, { 0x26 });
        gbc.writeMem(0xe1bf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbb73);
        EXPECT(gbc.pc(), 0xe1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24b), 0x26);
        EXPECT(gbc.readMem(0xe1bf), 0xcb);
        EXPECT(gbc.readMem(0xe1c0), 0x66);
        // CB 66 02E3
        gbc.setState(0x9451, 0xc35, 0x9770, 0xf5c6, 0x3fa5, 0x7def, 0x1, 0x0);
        gbc.writeMem(0x7def, { 0x35 });
        gbc.writeMem(0x9451, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x9453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9451), 0xcb);
        EXPECT(gbc.readMem(0x9452), 0x66);
        // CB 66 02E4
        gbc.setState(0xdcf8, 0x8ca5, 0x1360, 0x1561, 0xcfd8, 0x361c, 0x1, 0x1);
        gbc.writeMem(0x361c, { 0xf2 });
        gbc.writeMem(0xdcf8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8ca5);
        EXPECT(gbc.pc(), 0xdcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf8), 0xcb);
        EXPECT(gbc.readMem(0xdcf9), 0x66);
        // CB 66 02E5
        gbc.setState(0xbaab, 0xd164, 0xb780, 0x5e7e, 0xc0cd, 0xb4b9, 0x1, 0x1);
        gbc.writeMem(0xb4b9, { 0x2e });
        gbc.writeMem(0xbaab, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd164);
        EXPECT(gbc.pc(), 0xbaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b9), 0x2e);
        EXPECT(gbc.readMem(0xbaab), 0xcb);
        EXPECT(gbc.readMem(0xbaac), 0x66);
        // CB 66 02E6
        gbc.setState(0x7cbe, 0xefcc, 0x4430, 0xa310, 0x8ea3, 0xab08, 0x0, 0x1);
        gbc.writeMem(0x7cbe, { 0xcb, 0x66 });
        gbc.writeMem(0xab08, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xefcc);
        EXPECT(gbc.pc(), 0x7cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab08), 0x65);
        // CB 66 02E7
        gbc.setState(0x2a28, 0xa46e, 0xe200, 0xdd54, 0x8877, 0x7a65, 0x0, 0x0);
        gbc.writeMem(0x2a28, { 0xcb, 0x66 });
        gbc.writeMem(0x7a65, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa46e);
        EXPECT(gbc.pc(), 0x2a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02E8
        gbc.setState(0x91d2, 0x7fab, 0x5160, 0x3e51, 0x7a29, 0x31df, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0xeb });
        gbc.writeMem(0x91d2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7fab);
        EXPECT(gbc.pc(), 0x91d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d2), 0xcb);
        EXPECT(gbc.readMem(0x91d3), 0x66);
        // CB 66 02E9
        gbc.setState(0x400e, 0xb713, 0xea60, 0x173b, 0x7cdf, 0x7c10, 0x0, 0x1);
        gbc.writeMem(0x400e, { 0xcb, 0x66 });
        gbc.writeMem(0x7c10, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb713);
        EXPECT(gbc.pc(), 0x4010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02EA
        gbc.setState(0xdcfb, 0x6b62, 0xcc0, 0x420, 0xb8c6, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x13fd, { 0xa5 });
        gbc.writeMem(0xdcfb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6b62);
        EXPECT(gbc.pc(), 0xdcfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfb), 0xcb);
        EXPECT(gbc.readMem(0xdcfc), 0x66);
        // CB 66 02EB
        gbc.setState(0x4336, 0x7e69, 0x7dc0, 0xf1d, 0x445f, 0xc207, 0x1, 0x1);
        gbc.writeMem(0x4336, { 0xcb, 0x66 });
        gbc.writeMem(0xc207, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7e69);
        EXPECT(gbc.pc(), 0x4338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc207), 0xca);
        // CB 66 02EC
        gbc.setState(0xd7e5, 0x9373, 0xed30, 0xd906, 0x653b, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0x23 });
        gbc.writeMem(0xd7e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0xd7e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebf), 0x23);
        EXPECT(gbc.readMem(0xd7e5), 0xcb);
        EXPECT(gbc.readMem(0xd7e6), 0x66);
        // CB 66 02ED
        gbc.setState(0x496d, 0xfc24, 0x65c0, 0xc772, 0x6455, 0x7468, 0x1, 0x1);
        gbc.writeMem(0x496d, { 0xcb, 0x66 });
        gbc.writeMem(0x7468, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfc24);
        EXPECT(gbc.pc(), 0x496f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02EE
        gbc.setState(0xdb1, 0x7fa2, 0xf910, 0xa197, 0x3e70, 0xe763, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0x66 });
        gbc.writeMem(0xe763, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7fa2);
        EXPECT(gbc.pc(), 0xdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe763), 0xfa);
        // CB 66 02EF
        gbc.setState(0x5679, 0xb615, 0x7680, 0xd9b1, 0xce4c, 0xe3f4, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0x66 });
        gbc.writeMem(0xe3f4, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb615);
        EXPECT(gbc.pc(), 0x567b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f4), 0x62);
        // CB 66 02F0
        gbc.setState(0xdc7c, 0xdc2b, 0x2cd0, 0xaba6, 0x6676, 0x7e6d, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xbb });
        gbc.writeMem(0xdc7c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdc2b);
        EXPECT(gbc.pc(), 0xdc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7c), 0xcb);
        EXPECT(gbc.readMem(0xdc7d), 0x66);
        // CB 66 02F1
        gbc.setState(0x9bf9, 0xf9b, 0x3b70, 0x8e2b, 0x7cb1, 0xee7d, 0x0, 0x1);
        gbc.writeMem(0x9bf9, { 0xcb, 0x66 });
        gbc.writeMem(0xee7d, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf9b);
        EXPECT(gbc.pc(), 0x9bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf9), 0xcb);
        EXPECT(gbc.readMem(0x9bfa), 0x66);
        EXPECT(gbc.readMem(0xee7d), 0x8d);
        // CB 66 02F2
        gbc.setState(0x984c, 0xe029, 0x9dc0, 0xc7fc, 0xf6ff, 0x76f1, 0x0, 0x1);
        gbc.writeMem(0x76f1, { 0x94 });
        gbc.writeMem(0x984c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe029);
        EXPECT(gbc.pc(), 0x984e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984c), 0xcb);
        EXPECT(gbc.readMem(0x984d), 0x66);
        // CB 66 02F3
        gbc.setState(0xba9f, 0xdc6f, 0x4ae0, 0x9311, 0xacac, 0xe0b7, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xcb, 0x66 });
        gbc.writeMem(0xe0b7, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdc6f);
        EXPECT(gbc.pc(), 0xbaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba9f), 0xcb);
        EXPECT(gbc.readMem(0xbaa0), 0x66);
        EXPECT(gbc.readMem(0xe0b7), 0x2f);
        // CB 66 02F4
        gbc.setState(0xe49c, 0x782b, 0x2150, 0x319e, 0x76e7, 0xf289, 0x1, 0x0);
        gbc.writeMem(0xe49c, { 0xcb, 0x66 });
        gbc.writeMem(0xf289, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x782b);
        EXPECT(gbc.pc(), 0xe49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49c), 0xcb);
        EXPECT(gbc.readMem(0xe49d), 0x66);
        EXPECT(gbc.readMem(0xf289), 0xd4);
        // CB 66 02F5
        gbc.setState(0xa08a, 0x5e06, 0x8c00, 0x6269, 0x86f1, 0xd42e, 0x1, 0x0);
        gbc.writeMem(0xa08a, { 0xcb, 0x66 });
        gbc.writeMem(0xd42e, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5e06);
        EXPECT(gbc.pc(), 0xa08c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08a), 0xcb);
        EXPECT(gbc.readMem(0xa08b), 0x66);
        EXPECT(gbc.readMem(0xd42e), 0x88);
        // CB 66 02F6
        gbc.setState(0xdb11, 0x93d5, 0x140, 0x1160, 0xb161, 0xb255, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0x1e });
        gbc.writeMem(0xdb11, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0xdb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb255), 0x1e);
        EXPECT(gbc.readMem(0xdb11), 0xcb);
        EXPECT(gbc.readMem(0xdb12), 0x66);
        // CB 66 02F7
        gbc.setState(0xceb1, 0x3c5b, 0x5dd0, 0x5adf, 0x342a, 0x74d8, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0x90 });
        gbc.writeMem(0xceb1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3c5b);
        EXPECT(gbc.pc(), 0xceb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb1), 0xcb);
        EXPECT(gbc.readMem(0xceb2), 0x66);
        // CB 66 02F8
        gbc.setState(0xbb13, 0x5fd2, 0x3240, 0x91a6, 0xf8a2, 0x1a39, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xd });
        gbc.writeMem(0xbb13, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5fd2);
        EXPECT(gbc.pc(), 0xbb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb13), 0xcb);
        EXPECT(gbc.readMem(0xbb14), 0x66);
        // CB 66 02F9
        gbc.setState(0xa9df, 0x857d, 0xa3a0, 0x575c, 0x7059, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0xa9df, { 0xcb, 0x66 });
        gbc.writeMem(0xec1c, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x857d);
        EXPECT(gbc.pc(), 0xa9e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9df), 0xcb);
        EXPECT(gbc.readMem(0xa9e0), 0x66);
        EXPECT(gbc.readMem(0xec1c), 0xef);
        // CB 66 02FB
        gbc.setState(0xe38, 0xeab3, 0x5b40, 0xab2e, 0xb2e7, 0x4200, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x66 });
        gbc.writeMem(0x4200, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xeab3);
        EXPECT(gbc.pc(), 0xe3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 02FC
        gbc.setState(0x8b35, 0x6774, 0xe9b0, 0x1986, 0x55c6, 0x4892, 0x0, 0x1);
        gbc.writeMem(0x4892, { 0x73 });
        gbc.writeMem(0x8b35, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6774);
        EXPECT(gbc.pc(), 0x8b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b35), 0xcb);
        EXPECT(gbc.readMem(0x8b36), 0x66);
        // CB 66 02FD
        gbc.setState(0xb1cb, 0xc80d, 0x5570, 0x76e, 0xc666, 0xbdda, 0x0, 0x1);
        gbc.writeMem(0xb1cb, { 0xcb, 0x66 });
        gbc.writeMem(0xbdda, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc80d);
        EXPECT(gbc.pc(), 0xb1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cb), 0xcb);
        EXPECT(gbc.readMem(0xb1cc), 0x66);
        EXPECT(gbc.readMem(0xbdda), 0xa6);
        // CB 66 02FE
        gbc.setState(0xbc24, 0x9233, 0xb090, 0x1799, 0x22a7, 0xe260, 0x1, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0x66 });
        gbc.writeMem(0xe260, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9233);
        EXPECT(gbc.pc(), 0xbc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc24), 0xcb);
        EXPECT(gbc.readMem(0xbc25), 0x66);
        EXPECT(gbc.readMem(0xe260), 0x2d);
        // CB 66 02FF
        gbc.setState(0x36a7, 0x7f02, 0x1760, 0x3545, 0xc8a1, 0x3cde, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x66 });
        gbc.writeMem(0x3cde, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7f02);
        EXPECT(gbc.pc(), 0x36a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0300
        gbc.setState(0xbbbf, 0xe9bd, 0x1550, 0xb98c, 0xab79, 0x4788, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0xbb });
        gbc.writeMem(0xbbbf, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9bd);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbf), 0xcb);
        EXPECT(gbc.readMem(0xbbc0), 0x66);
        // CB 66 0301
        gbc.setState(0x6ff4, 0x892e, 0xd5e0, 0x1222, 0xe0f5, 0x7f4, 0x0, 0x1);
        gbc.writeMem(0x7f4, { 0xec });
        gbc.writeMem(0x6ff4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x892e);
        EXPECT(gbc.pc(), 0x6ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0302
        gbc.setState(0x4236, 0x757e, 0xe700, 0x4f87, 0x87f1, 0x13b8, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0x6b });
        gbc.writeMem(0x4236, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x757e);
        EXPECT(gbc.pc(), 0x4238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0303
        gbc.setState(0xdd02, 0x458c, 0xb220, 0x4f9d, 0xe25, 0x3779, 0x1, 0x1);
        gbc.writeMem(0x3779, { 0xec });
        gbc.writeMem(0xdd02, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x458c);
        EXPECT(gbc.pc(), 0xdd04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd02), 0xcb);
        EXPECT(gbc.readMem(0xdd03), 0x66);
        // CB 66 0304
        gbc.setState(0x43bb, 0x2119, 0x2a0, 0x12dc, 0xb292, 0xc8a0, 0x0, 0x0);
        gbc.writeMem(0x43bb, { 0xcb, 0x66 });
        gbc.writeMem(0xc8a0, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2119);
        EXPECT(gbc.pc(), 0x43bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a0), 0x28);
        // CB 66 0305
        gbc.setState(0x9948, 0xafe8, 0x23f0, 0xc654, 0x5bce, 0x467f, 0x0, 0x0);
        gbc.writeMem(0x467f, { 0x8a });
        gbc.writeMem(0x9948, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0x994a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9948), 0xcb);
        EXPECT(gbc.readMem(0x9949), 0x66);
        // CB 66 0306
        gbc.setState(0xbf3b, 0xb64e, 0x3030, 0xc2b7, 0x8fc5, 0xa3b, 0x1, 0x0);
        gbc.writeMem(0xa3b, { 0x73 });
        gbc.writeMem(0xbf3b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb64e);
        EXPECT(gbc.pc(), 0xbf3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3b), 0xcb);
        EXPECT(gbc.readMem(0xbf3c), 0x66);
        // CB 66 0307
        gbc.setState(0xb571, 0xa055, 0x6480, 0xf926, 0xa104, 0x3374, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0x53 });
        gbc.writeMem(0xb571, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa055);
        EXPECT(gbc.pc(), 0xb573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb571), 0xcb);
        EXPECT(gbc.readMem(0xb572), 0x66);
        // CB 66 0308
        gbc.setState(0x9229, 0xce4e, 0x6070, 0x8943, 0xb57e, 0xcb0c, 0x0, 0x0);
        gbc.writeMem(0x9229, { 0xcb, 0x66 });
        gbc.writeMem(0xcb0c, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce4e);
        EXPECT(gbc.pc(), 0x922b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9229), 0xcb);
        EXPECT(gbc.readMem(0x922a), 0x66);
        EXPECT(gbc.readMem(0xcb0c), 0x37);
        // CB 66 0309
        gbc.setState(0x2952, 0x1100, 0x2370, 0x3ee2, 0x37d1, 0x5d23, 0x0, 0x0);
        gbc.writeMem(0x2952, { 0xcb, 0x66 });
        gbc.writeMem(0x5d23, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1100);
        EXPECT(gbc.pc(), 0x2954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 030A
        gbc.setState(0x3f81, 0xed23, 0xb200, 0xf6dd, 0x8e32, 0xa4ca, 0x0, 0x1);
        gbc.writeMem(0x3f81, { 0xcb, 0x66 });
        gbc.writeMem(0xa4ca, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xed23);
        EXPECT(gbc.pc(), 0x3f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ca), 0x80);
        // CB 66 030B
        gbc.setState(0x2152, 0x8695, 0x3f0, 0xc9f1, 0x8633, 0x3226, 0x1, 0x1);
        gbc.writeMem(0x2152, { 0xcb, 0x66 });
        gbc.writeMem(0x3226, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8695);
        EXPECT(gbc.pc(), 0x2154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 030C
        gbc.setState(0x27dd, 0xbf16, 0x3720, 0x52e7, 0x8f34, 0x627c, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xcb, 0x66 });
        gbc.writeMem(0x627c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbf16);
        EXPECT(gbc.pc(), 0x27df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 030D
        gbc.setState(0xe1ef, 0x221f, 0x50, 0x2a24, 0xed1, 0xd2ce, 0x0, 0x1);
        gbc.writeMem(0xd2ce, { 0xfb });
        gbc.writeMem(0xe1ef, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x221f);
        EXPECT(gbc.pc(), 0xe1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ce), 0xfb);
        EXPECT(gbc.readMem(0xe1ef), 0xcb);
        EXPECT(gbc.readMem(0xe1f0), 0x66);
        // CB 66 030E
        gbc.setState(0xc01f, 0x6153, 0xdb10, 0x50d4, 0xea17, 0x1c55, 0x1, 0x0);
        gbc.writeMem(0x1c55, { 0x9f });
        gbc.writeMem(0xc01f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6153);
        EXPECT(gbc.pc(), 0xc021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01f), 0xcb);
        EXPECT(gbc.readMem(0xc020), 0x66);
        // CB 66 030F
        gbc.setState(0x3c33, 0x28b8, 0xc9a0, 0x9aab, 0x5ca1, 0xd5e2, 0x0, 0x0);
        gbc.writeMem(0x3c33, { 0xcb, 0x66 });
        gbc.writeMem(0xd5e2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x28b8);
        EXPECT(gbc.pc(), 0x3c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e2), 0x96);
        // CB 66 0311
        gbc.setState(0x8808, 0x3525, 0xa800, 0x9c1f, 0xe5fe, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0x8808, { 0xcb, 0x66 });
        gbc.writeMem(0xf1e4, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3525);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8808), 0xcb);
        EXPECT(gbc.readMem(0x8809), 0x66);
        EXPECT(gbc.readMem(0xf1e4), 0x82);
        // CB 66 0312
        gbc.setState(0x68fb, 0xac8a, 0xb7c0, 0xc2a, 0x70cc, 0x524b, 0x0, 0x0);
        gbc.writeMem(0x524b, { 0x8f });
        gbc.writeMem(0x68fb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xac8a);
        EXPECT(gbc.pc(), 0x68fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0314
        gbc.setState(0xe398, 0xb8a0, 0x5af0, 0x591e, 0x7a9, 0x3969, 0x0, 0x0);
        gbc.writeMem(0x3969, { 0xb0 });
        gbc.writeMem(0xe398, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb8a0);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe398), 0xcb);
        EXPECT(gbc.readMem(0xe399), 0x66);
        // CB 66 0315
        gbc.setState(0x1bc8, 0xac14, 0x1280, 0xf07c, 0xd24d, 0x73b7, 0x1, 0x0);
        gbc.writeMem(0x1bc8, { 0xcb, 0x66 });
        gbc.writeMem(0x73b7, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xac14);
        EXPECT(gbc.pc(), 0x1bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0316
        gbc.setState(0x85e9, 0xab0c, 0xe60, 0x995, 0xbef8, 0xf830, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0xcb, 0x66 });
        gbc.writeMem(0xf830, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xab0c);
        EXPECT(gbc.pc(), 0x85eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0xcb);
        EXPECT(gbc.readMem(0x85ea), 0x66);
        EXPECT(gbc.readMem(0xf830), 0x86);
        // CB 66 0317
        gbc.setState(0x2407, 0xc328, 0x31e0, 0xbd59, 0xa8f3, 0x7ba2, 0x1, 0x0);
        gbc.writeMem(0x2407, { 0xcb, 0x66 });
        gbc.writeMem(0x7ba2, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc328);
        EXPECT(gbc.pc(), 0x2409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0318
        gbc.setState(0xca95, 0xa42, 0x8c40, 0x686c, 0x4205, 0xe7ed, 0x1, 0x0);
        gbc.writeMem(0xca95, { 0xcb, 0x66 });
        gbc.writeMem(0xe7ed, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa42);
        EXPECT(gbc.pc(), 0xca97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca95), 0xcb);
        EXPECT(gbc.readMem(0xca96), 0x66);
        EXPECT(gbc.readMem(0xe7ed), 0x5b);
        // CB 66 0319
        gbc.setState(0x52c1, 0x4d06, 0x58f0, 0xc2e0, 0x6daa, 0xf3d8, 0x0, 0x1);
        gbc.writeMem(0x52c1, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4d06);
        EXPECT(gbc.pc(), 0x52c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3d8), 0x10);
        // CB 66 031A
        gbc.setState(0x51b2, 0xd6cc, 0xb60, 0x1fe3, 0xd989, 0x2d60, 0x0, 0x1);
        gbc.writeMem(0x2d60, { 0x32 });
        gbc.writeMem(0x51b2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd6cc);
        EXPECT(gbc.pc(), 0x51b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 031B
        gbc.setState(0xd22f, 0xa309, 0xf4f0, 0xe528, 0xa47f, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0x6ab9, { 0x3f });
        gbc.writeMem(0xd22f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa309);
        EXPECT(gbc.pc(), 0xd231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22f), 0xcb);
        EXPECT(gbc.readMem(0xd230), 0x66);
        // CB 66 031C
        gbc.setState(0xca2f, 0xf457, 0x67f0, 0xd601, 0x1b9f, 0xf5eb, 0x0, 0x1);
        gbc.writeMem(0xca2f, { 0xcb, 0x66 });
        gbc.writeMem(0xf5eb, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf457);
        EXPECT(gbc.pc(), 0xca31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2f), 0xcb);
        EXPECT(gbc.readMem(0xca30), 0x66);
        EXPECT(gbc.readMem(0xf5eb), 0xf3);
        // CB 66 031D
        gbc.setState(0x400f, 0x7de5, 0x9200, 0xa298, 0xd5a3, 0xc287, 0x1, 0x0);
        gbc.writeMem(0x400f, { 0xcb, 0x66 });
        gbc.writeMem(0xc287, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7de5);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc287), 0x71);
        // CB 66 031E
        gbc.setState(0x8a6e, 0xaa28, 0xe4b0, 0xb0a4, 0x4e53, 0x3890, 0x1, 0x0);
        gbc.writeMem(0x3890, { 0x7a });
        gbc.writeMem(0x8a6e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaa28);
        EXPECT(gbc.pc(), 0x8a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6e), 0xcb);
        EXPECT(gbc.readMem(0x8a6f), 0x66);
        // CB 66 0320
        gbc.setState(0x9751, 0x37cd, 0x980, 0x1801, 0x31c8, 0x9b87, 0x1, 0x0);
        gbc.writeMem(0x9751, { 0xcb, 0x66 });
        gbc.writeMem(0x9b87, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0x9753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9751), 0xcb);
        EXPECT(gbc.readMem(0x9752), 0x66);
        EXPECT(gbc.readMem(0x9b87), 0x1f);
        // CB 66 0321
        gbc.setState(0x70b8, 0x166c, 0x82f0, 0x1a77, 0x2b3e, 0x82aa, 0x0, 0x1);
        gbc.writeMem(0x70b8, { 0xcb, 0x66 });
        gbc.writeMem(0x82aa, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x166c);
        EXPECT(gbc.pc(), 0x70ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82aa), 0x39);
        // CB 66 0322
        gbc.setState(0x1e49, 0x4c60, 0x6600, 0x2f5f, 0xd74c, 0xfe13, 0x1, 0x1);
        gbc.writeMem(0x1e49, { 0xcb, 0x66 });
        gbc.writeMem(0xfe13, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4c60);
        EXPECT(gbc.pc(), 0x1e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe13), 0xf1);
        // CB 66 0323
        gbc.setState(0xb770, 0xdfee, 0xb5e0, 0x2c10, 0x61c3, 0x2dda, 0x0, 0x1);
        gbc.writeMem(0x2dda, { 0xa });
        gbc.writeMem(0xb770, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdfee);
        EXPECT(gbc.pc(), 0xb772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb770), 0xcb);
        EXPECT(gbc.readMem(0xb771), 0x66);
        // CB 66 0324
        gbc.setState(0x8e84, 0xa9f, 0xe790, 0xc5de, 0x8a26, 0x721b, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0x90 });
        gbc.writeMem(0x8e84, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa9f);
        EXPECT(gbc.pc(), 0x8e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e84), 0xcb);
        EXPECT(gbc.readMem(0x8e85), 0x66);
        // CB 66 0325
        gbc.setState(0xa689, 0x90d4, 0xdb00, 0xae5d, 0x9315, 0xf910, 0x0, 0x1);
        gbc.writeMem(0xa689, { 0xcb, 0x66 });
        gbc.writeMem(0xf910, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x90d4);
        EXPECT(gbc.pc(), 0xa68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa689), 0xcb);
        EXPECT(gbc.readMem(0xa68a), 0x66);
        EXPECT(gbc.readMem(0xf910), 0x66);
        // CB 66 0326
        gbc.setState(0xdee8, 0x1b4e, 0xfa0, 0xe89e, 0xde41, 0xd0da, 0x1, 0x0);
        gbc.writeMem(0xd0da, { 0x7f });
        gbc.writeMem(0xdee8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0xdeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0da), 0x7f);
        EXPECT(gbc.readMem(0xdee8), 0xcb);
        EXPECT(gbc.readMem(0xdee9), 0x66);
        // CB 66 0327
        gbc.setState(0xca1f, 0x2714, 0x3d70, 0x8d26, 0x5588, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0xc9de, { 0x75 });
        gbc.writeMem(0xca1f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2714);
        EXPECT(gbc.pc(), 0xca21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9de), 0x75);
        EXPECT(gbc.readMem(0xca1f), 0xcb);
        EXPECT(gbc.readMem(0xca20), 0x66);
        // CB 66 0328
        gbc.setState(0x5ba1, 0xbe0c, 0x6f0, 0xd43f, 0xfd0f, 0xdf23, 0x1, 0x0);
        gbc.writeMem(0x5ba1, { 0xcb, 0x66 });
        gbc.writeMem(0xdf23, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbe0c);
        EXPECT(gbc.pc(), 0x5ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf23), 0x1f);
        // CB 66 0329
        gbc.setState(0x6532, 0x225e, 0xed30, 0x20f6, 0x9d55, 0xbc81, 0x1, 0x1);
        gbc.writeMem(0x6532, { 0xcb, 0x66 });
        gbc.writeMem(0xbc81, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x225e);
        EXPECT(gbc.pc(), 0x6534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc81), 0xae);
        // CB 66 032C
        gbc.setState(0x55ae, 0xc92f, 0x2950, 0xdac4, 0xc5ad, 0x99d1, 0x0, 0x1);
        gbc.writeMem(0x55ae, { 0xcb, 0x66 });
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc92f);
        EXPECT(gbc.pc(), 0x55b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d1), 0x2);
        // CB 66 032D
        gbc.setState(0xa95b, 0x164c, 0x3820, 0x27bf, 0x7a0c, 0xfc2c, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x66 });
        gbc.writeMem(0xfc2c, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0xa95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95b), 0xcb);
        EXPECT(gbc.readMem(0xa95c), 0x66);
        EXPECT(gbc.readMem(0xfc2c), 0x67);
        // CB 66 032E
        gbc.setState(0xcd08, 0xfa04, 0xab0, 0xb05d, 0x5bbe, 0x4233, 0x0, 0x1);
        gbc.writeMem(0x4233, { 0x86 });
        gbc.writeMem(0xcd08, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfa04);
        EXPECT(gbc.pc(), 0xcd0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd08), 0xcb);
        EXPECT(gbc.readMem(0xcd09), 0x66);
        // CB 66 032F
        gbc.setState(0x6f6d, 0x9d98, 0xab30, 0xa3da, 0x79d3, 0xe949, 0x1, 0x1);
        gbc.writeMem(0x6f6d, { 0xcb, 0x66 });
        gbc.writeMem(0xe949, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0x6f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe949), 0x9f);
        // CB 66 0330
        gbc.setState(0x2c60, 0xfefe, 0x1a00, 0x930b, 0x600b, 0xa387, 0x1, 0x0);
        gbc.writeMem(0x2c60, { 0xcb, 0x66 });
        gbc.writeMem(0xa387, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfefe);
        EXPECT(gbc.pc(), 0x2c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa387), 0x82);
        // CB 66 0331
        gbc.setState(0x6cd1, 0xbecd, 0x5ce0, 0xecd7, 0x3535, 0x7018, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0x66 });
        gbc.writeMem(0x7018, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbecd);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0332
        gbc.setState(0x1415, 0x99d9, 0x3710, 0x8245, 0x119, 0xe94a, 0x0, 0x1);
        gbc.writeMem(0x1415, { 0xcb, 0x66 });
        gbc.writeMem(0xe94a, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x99d9);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94a), 0x4f);
        // CB 66 0333
        gbc.setState(0xc4eb, 0x72d, 0x5f0, 0xf4bd, 0x6cda, 0x94a, 0x0, 0x0);
        gbc.writeMem(0x94a, { 0xb1 });
        gbc.writeMem(0xc4eb, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x72d);
        EXPECT(gbc.pc(), 0xc4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4eb), 0xcb);
        EXPECT(gbc.readMem(0xc4ec), 0x66);
        // CB 66 0334
        gbc.setState(0xeb76, 0x93b2, 0xfe80, 0x8b95, 0x4b60, 0xea34, 0x0, 0x1);
        gbc.writeMem(0xea34, { 0x28 });
        gbc.writeMem(0xeb76, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x93b2);
        EXPECT(gbc.pc(), 0xeb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea34), 0x28);
        EXPECT(gbc.readMem(0xeb76), 0xcb);
        EXPECT(gbc.readMem(0xeb77), 0x66);
        // CB 66 0335
        gbc.setState(0x1c9, 0xacfb, 0xd720, 0x1f62, 0xd2e4, 0xceb2, 0x0, 0x0);
        gbc.writeMem(0x1c9, { 0xcb, 0x66 });
        gbc.writeMem(0xceb2, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0x1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb2), 0x11);
        // CB 66 0337
        gbc.setState(0xb270, 0x5ba6, 0x4010, 0x96f7, 0xb3e7, 0xc709, 0x0, 0x1);
        gbc.writeMem(0xb270, { 0xcb, 0x66 });
        gbc.writeMem(0xc709, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5ba6);
        EXPECT(gbc.pc(), 0xb272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb270), 0xcb);
        EXPECT(gbc.readMem(0xb271), 0x66);
        EXPECT(gbc.readMem(0xc709), 0x44);
        // CB 66 0338
        gbc.setState(0x9e6a, 0x137f, 0x2ed0, 0x5d3c, 0xf53d, 0x5f2c, 0x0, 0x0);
        gbc.writeMem(0x5f2c, { 0xc5 });
        gbc.writeMem(0x9e6a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x137f);
        EXPECT(gbc.pc(), 0x9e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6a), 0xcb);
        EXPECT(gbc.readMem(0x9e6b), 0x66);
        // CB 66 0339
        gbc.setState(0x8e6f, 0x830d, 0xc550, 0x6f2b, 0xd3ce, 0x818a, 0x0, 0x0);
        gbc.writeMem(0x818a, { 0x53 });
        gbc.writeMem(0x8e6f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x830d);
        EXPECT(gbc.pc(), 0x8e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818a), 0x53);
        EXPECT(gbc.readMem(0x8e6f), 0xcb);
        EXPECT(gbc.readMem(0x8e70), 0x66);
        // CB 66 033A
        gbc.setState(0xea4e, 0x5116, 0xae80, 0xd384, 0xa52e, 0x2206, 0x1, 0x0);
        gbc.writeMem(0x2206, { 0xc0 });
        gbc.writeMem(0xea4e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5116);
        EXPECT(gbc.pc(), 0xea50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4e), 0xcb);
        EXPECT(gbc.readMem(0xea4f), 0x66);
        // CB 66 033B
        gbc.setState(0x751d, 0xa6f6, 0xaf30, 0x87d0, 0xa18c, 0x8760, 0x0, 0x1);
        gbc.writeMem(0x751d, { 0xcb, 0x66 });
        gbc.writeMem(0x8760, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa6f6);
        EXPECT(gbc.pc(), 0x751f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8760), 0xc4);
        // CB 66 033C
        gbc.setState(0x78b7, 0xf664, 0x7d40, 0x6c5d, 0xeb40, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0xcb, 0x66 });
        gbc.writeMem(0xb57c, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf664);
        EXPECT(gbc.pc(), 0x78b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb57c), 0xa6);
        // CB 66 033D
        gbc.setState(0xc341, 0x9e93, 0x3130, 0xcc88, 0x693d, 0x46b9, 0x1, 0x1);
        gbc.writeMem(0x46b9, { 0x97 });
        gbc.writeMem(0xc341, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9e93);
        EXPECT(gbc.pc(), 0xc343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc341), 0xcb);
        EXPECT(gbc.readMem(0xc342), 0x66);
        // CB 66 033E
        gbc.setState(0x3996, 0xc890, 0x440, 0xb3e, 0xd87, 0xe07f, 0x1, 0x1);
        gbc.writeMem(0x3996, { 0xcb, 0x66 });
        gbc.writeMem(0xe07f, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc890);
        EXPECT(gbc.pc(), 0x3998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07f), 0x64);
        // CB 66 033F
        gbc.setState(0x7b2, 0xd2ac, 0xf810, 0xbbb4, 0x27cc, 0x611f, 0x1, 0x1);
        gbc.writeMem(0x7b2, { 0xcb, 0x66 });
        gbc.writeMem(0x611f, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd2ac);
        EXPECT(gbc.pc(), 0x7b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0340
        gbc.setState(0xc7a8, 0x4b13, 0x19f0, 0xb17c, 0x260c, 0xb79d, 0x1, 0x1);
        gbc.writeMem(0xb79d, { 0xcf });
        gbc.writeMem(0xc7a8, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4b13);
        EXPECT(gbc.pc(), 0xc7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79d), 0xcf);
        EXPECT(gbc.readMem(0xc7a8), 0xcb);
        EXPECT(gbc.readMem(0xc7a9), 0x66);
        // CB 66 0341
        gbc.setState(0x75c2, 0x45f0, 0x8c40, 0x66b3, 0x9c14, 0x9290, 0x1, 0x0);
        gbc.writeMem(0x75c2, { 0xcb, 0x66 });
        gbc.writeMem(0x9290, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x45f0);
        EXPECT(gbc.pc(), 0x75c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9290), 0x24);
        // CB 66 0342
        gbc.setState(0x55e0, 0xce21, 0x9890, 0x205c, 0xe776, 0x7e55, 0x1, 0x0);
        gbc.writeMem(0x55e0, { 0xcb, 0x66 });
        gbc.writeMem(0x7e55, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xce21);
        EXPECT(gbc.pc(), 0x55e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0343
        gbc.setState(0xd159, 0xedf1, 0xe480, 0x3865, 0x9fd3, 0x1f2c, 0x0, 0x1);
        gbc.writeMem(0x1f2c, { 0xd7 });
        gbc.writeMem(0xd159, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xedf1);
        EXPECT(gbc.pc(), 0xd15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd159), 0xcb);
        EXPECT(gbc.readMem(0xd15a), 0x66);
        // CB 66 0344
        gbc.setState(0x1f42, 0x6168, 0xdd60, 0x4604, 0x5dd, 0x10f5, 0x0, 0x1);
        gbc.writeMem(0x10f5, { 0xee });
        gbc.writeMem(0x1f42, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0x1f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0345
        gbc.setState(0xef15, 0xcf74, 0x91c0, 0x65c, 0xec4, 0x8895, 0x0, 0x1);
        gbc.writeMem(0x8895, { 0x58 });
        gbc.writeMem(0xef15, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xcf74);
        EXPECT(gbc.pc(), 0xef17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8895), 0x58);
        EXPECT(gbc.readMem(0xef15), 0xcb);
        EXPECT(gbc.readMem(0xef16), 0x66);
        // CB 66 0346
        gbc.setState(0x7b2f, 0x3294, 0x4f50, 0x2d1c, 0xa942, 0x619a, 0x1, 0x1);
        gbc.writeMem(0x619a, { 0x98 });
        gbc.writeMem(0x7b2f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3294);
        EXPECT(gbc.pc(), 0x7b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0347
        gbc.setState(0xe2ee, 0x1794, 0x9800, 0x6f59, 0x6e8c, 0x1956, 0x1, 0x0);
        gbc.writeMem(0x1956, { 0x10 });
        gbc.writeMem(0xe2ee, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1794);
        EXPECT(gbc.pc(), 0xe2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ee), 0xcb);
        EXPECT(gbc.readMem(0xe2ef), 0x66);
        // CB 66 0348
        gbc.setState(0x73f5, 0xd8b4, 0x6130, 0x6a2c, 0x1c1d, 0x2234, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0x1e });
        gbc.writeMem(0x73f5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd8b4);
        EXPECT(gbc.pc(), 0x73f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0349
        gbc.setState(0x6996, 0x8745, 0xede0, 0x7021, 0xc2d4, 0xbcdf, 0x0, 0x0);
        gbc.writeMem(0x6996, { 0xcb, 0x66 });
        gbc.writeMem(0xbcdf, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8745);
        EXPECT(gbc.pc(), 0x6998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcdf), 0xb5);
        // CB 66 034B
        gbc.setState(0xe53e, 0xa0ae, 0x3a00, 0x259a, 0xf182, 0x7931, 0x0, 0x0);
        gbc.writeMem(0x7931, { 0xdd });
        gbc.writeMem(0xe53e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa0ae);
        EXPECT(gbc.pc(), 0xe540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53e), 0xcb);
        EXPECT(gbc.readMem(0xe53f), 0x66);
        // CB 66 034C
        gbc.setState(0x875c, 0x668d, 0x27c0, 0x5703, 0xf15d, 0x64d8, 0x0, 0x1);
        gbc.writeMem(0x64d8, { 0xff });
        gbc.writeMem(0x875c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x668d);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875c), 0xcb);
        EXPECT(gbc.readMem(0x875d), 0x66);
        // CB 66 034D
        gbc.setState(0x6cc0, 0xb199, 0xcc00, 0x9419, 0xec7d, 0x3317, 0x1, 0x0);
        gbc.writeMem(0x3317, { 0x59 });
        gbc.writeMem(0x6cc0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb199);
        EXPECT(gbc.pc(), 0x6cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 034E
        gbc.setState(0x2f4b, 0x45ff, 0x4500, 0x853d, 0xe259, 0xb0e1, 0x1, 0x1);
        gbc.writeMem(0x2f4b, { 0xcb, 0x66 });
        gbc.writeMem(0xb0e1, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x45ff);
        EXPECT(gbc.pc(), 0x2f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e1), 0x30);
        // CB 66 034F
        gbc.setState(0x79d2, 0x7a, 0x8a60, 0x7f01, 0x5402, 0x9745, 0x1, 0x0);
        gbc.writeMem(0x79d2, { 0xcb, 0x66 });
        gbc.writeMem(0x9745, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7a);
        EXPECT(gbc.pc(), 0x79d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9745), 0x9a);
        // CB 66 0350
        gbc.setState(0x3175, 0xe410, 0xd730, 0xe1d0, 0x1851, 0xed13, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x66 });
        gbc.writeMem(0xed13, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed13), 0x27);
        // CB 66 0351
        gbc.setState(0xd39, 0xee50, 0xce20, 0xb61e, 0x787, 0x8063, 0x1, 0x1);
        gbc.writeMem(0xd39, { 0xcb, 0x66 });
        gbc.writeMem(0x8063, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xee50);
        EXPECT(gbc.pc(), 0xd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8063), 0x5a);
        // CB 66 0353
        gbc.setState(0xed10, 0x9abd, 0x2350, 0x210, 0xda94, 0xd8d7, 0x0, 0x0);
        gbc.writeMem(0xd8d7, { 0x4b });
        gbc.writeMem(0xed10, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9abd);
        EXPECT(gbc.pc(), 0xed12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d7), 0x4b);
        EXPECT(gbc.readMem(0xed10), 0xcb);
        EXPECT(gbc.readMem(0xed11), 0x66);
        // CB 66 0354
        gbc.setState(0x7d99, 0x46ca, 0x2360, 0x9ae6, 0x1750, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0x5e });
        gbc.writeMem(0x7d99, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x46ca);
        EXPECT(gbc.pc(), 0x7d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0355
        gbc.setState(0xd606, 0x7d35, 0x4400, 0x3d8c, 0x27b, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x8d7d, { 0xa4 });
        gbc.writeMem(0xd606, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0xd608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7d), 0xa4);
        EXPECT(gbc.readMem(0xd606), 0xcb);
        EXPECT(gbc.readMem(0xd607), 0x66);
        // CB 66 0356
        gbc.setState(0xcf66, 0x4596, 0x7c30, 0xf087, 0x789b, 0x96c, 0x1, 0x1);
        gbc.writeMem(0x96c, { 0xb5 });
        gbc.writeMem(0xcf66, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4596);
        EXPECT(gbc.pc(), 0xcf68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf66), 0xcb);
        EXPECT(gbc.readMem(0xcf67), 0x66);
        // CB 66 0357
        gbc.setState(0x924d, 0x8d29, 0x13d0, 0x3233, 0x1a93, 0x41fa, 0x1, 0x1);
        gbc.writeMem(0x41fa, { 0xed });
        gbc.writeMem(0x924d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8d29);
        EXPECT(gbc.pc(), 0x924f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924d), 0xcb);
        EXPECT(gbc.readMem(0x924e), 0x66);
        // CB 66 0358
        gbc.setState(0x5c1a, 0xf772, 0x6660, 0xd957, 0xf42c, 0x88fd, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0xcb, 0x66 });
        gbc.writeMem(0x88fd, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf772);
        EXPECT(gbc.pc(), 0x5c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fd), 0x3b);
        // CB 66 0359
        gbc.setState(0x4c2d, 0x4abe, 0x67a0, 0xd7e, 0x2c3d, 0x934e, 0x0, 0x0);
        gbc.writeMem(0x4c2d, { 0xcb, 0x66 });
        gbc.writeMem(0x934e, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4abe);
        EXPECT(gbc.pc(), 0x4c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934e), 0xa5);
        // CB 66 035A
        gbc.setState(0x65e3, 0xb579, 0xa8c0, 0xe697, 0x5bdb, 0x1e83, 0x1, 0x0);
        gbc.writeMem(0x1e83, { 0x8f });
        gbc.writeMem(0x65e3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb579);
        EXPECT(gbc.pc(), 0x65e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 035B
        gbc.setState(0x5b31, 0x9fe9, 0x8a10, 0xd0b6, 0xfae0, 0x30a6, 0x1, 0x0);
        gbc.writeMem(0x30a6, { 0x75 });
        gbc.writeMem(0x5b31, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9fe9);
        EXPECT(gbc.pc(), 0x5b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 035C
        gbc.setState(0x613, 0x17dd, 0x45e0, 0x318, 0xab82, 0x6655, 0x0, 0x0);
        gbc.writeMem(0x613, { 0xcb, 0x66 });
        gbc.writeMem(0x6655, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x17dd);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 035D
        gbc.setState(0x469b, 0x14a5, 0x7d90, 0xe68a, 0x69a9, 0x296d, 0x0, 0x1);
        gbc.writeMem(0x296d, { 0xbf });
        gbc.writeMem(0x469b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x14a5);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 035E
        gbc.setState(0x780c, 0xc31a, 0x8d70, 0xc7c6, 0x6b12, 0x3426, 0x1, 0x1);
        gbc.writeMem(0x3426, { 0xa9 });
        gbc.writeMem(0x780c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc31a);
        EXPECT(gbc.pc(), 0x780e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 035F
        gbc.setState(0xaa9a, 0x91f3, 0xca10, 0x8c05, 0xbef5, 0x29e9, 0x1, 0x1);
        gbc.writeMem(0x29e9, { 0x13 });
        gbc.writeMem(0xaa9a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x91f3);
        EXPECT(gbc.pc(), 0xaa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9a), 0xcb);
        EXPECT(gbc.readMem(0xaa9b), 0x66);
        // CB 66 0360
        gbc.setState(0xe7a, 0x2b64, 0xcff0, 0x4357, 0x1431, 0x31cc, 0x0, 0x0);
        gbc.writeMem(0xe7a, { 0xcb, 0x66 });
        gbc.writeMem(0x31cc, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2b64);
        EXPECT(gbc.pc(), 0xe7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0361
        gbc.setState(0xc188, 0x6010, 0xb160, 0x35ba, 0x419e, 0xba63, 0x1, 0x0);
        gbc.writeMem(0xba63, { 0xae });
        gbc.writeMem(0xc188, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0xc18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba63), 0xae);
        EXPECT(gbc.readMem(0xc188), 0xcb);
        EXPECT(gbc.readMem(0xc189), 0x66);
        // CB 66 0362
        gbc.setState(0x973e, 0x36e1, 0xb8e0, 0x4d7d, 0xb479, 0x5957, 0x1, 0x0);
        gbc.writeMem(0x5957, { 0x42 });
        gbc.writeMem(0x973e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x36e1);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973e), 0xcb);
        EXPECT(gbc.readMem(0x973f), 0x66);
        // CB 66 0363
        gbc.setState(0xbfd, 0x2473, 0xbd30, 0x7574, 0x27f6, 0xd57, 0x0, 0x0);
        gbc.writeMem(0xbfd, { 0xcb, 0x66 });
        gbc.writeMem(0xd57, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0xbff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0364
        gbc.setState(0xd0d1, 0x8d8d, 0xeda0, 0x5768, 0xf731, 0x6a45, 0x0, 0x0);
        gbc.writeMem(0x6a45, { 0x1d });
        gbc.writeMem(0xd0d1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8d8d);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0x66);
        // CB 66 0365
        gbc.setState(0xde38, 0xbf3d, 0x9ae0, 0x3987, 0xb911, 0x572c, 0x1, 0x0);
        gbc.writeMem(0x572c, { 0xdc });
        gbc.writeMem(0xde38, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbf3d);
        EXPECT(gbc.pc(), 0xde3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde38), 0xcb);
        EXPECT(gbc.readMem(0xde39), 0x66);
        // CB 66 0366
        gbc.setState(0x6a39, 0x8af0, 0xe1c0, 0x8614, 0xc634, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x6a39, { 0xcb, 0x66 });
        gbc.writeMem(0xf76d, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8af0);
        EXPECT(gbc.pc(), 0x6a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf76d), 0x9b);
        // CB 66 0367
        gbc.setState(0xdce2, 0x2e4b, 0x2000, 0x143, 0x7234, 0x1f48, 0x0, 0x0);
        gbc.writeMem(0x1f48, { 0xc5 });
        gbc.writeMem(0xdce2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2e4b);
        EXPECT(gbc.pc(), 0xdce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce2), 0xcb);
        EXPECT(gbc.readMem(0xdce3), 0x66);
        // CB 66 0368
        gbc.setState(0x34c6, 0x3a93, 0x5560, 0xa42f, 0xed08, 0x5909, 0x0, 0x1);
        gbc.writeMem(0x34c6, { 0xcb, 0x66 });
        gbc.writeMem(0x5909, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3a93);
        EXPECT(gbc.pc(), 0x34c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0369
        gbc.setState(0x2241, 0x374a, 0xde40, 0x80aa, 0x5e99, 0xf1ed, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0xcb, 0x66 });
        gbc.writeMem(0xf1ed, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x374a);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1ed), 0xd);
        // CB 66 036A
        gbc.setState(0xfba, 0x9482, 0xf200, 0xbed3, 0x94f, 0xe296, 0x0, 0x0);
        gbc.writeMem(0xfba, { 0xcb, 0x66 });
        gbc.writeMem(0xe296, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9482);
        EXPECT(gbc.pc(), 0xfbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe296), 0xd8);
        // CB 66 036B
        gbc.setState(0x682c, 0xf12b, 0x55c0, 0x4efb, 0xd053, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x19e5, { 0x7 });
        gbc.writeMem(0x682c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf12b);
        EXPECT(gbc.pc(), 0x682e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 036C
        gbc.setState(0xe3e, 0xb132, 0x7ba0, 0xb0da, 0xc288, 0xb294, 0x1, 0x1);
        gbc.writeMem(0xe3e, { 0xcb, 0x66 });
        gbc.writeMem(0xb294, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb132);
        EXPECT(gbc.pc(), 0xe40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb294), 0x93);
        // CB 66 036D
        gbc.setState(0xef2c, 0xdc0b, 0xe8d0, 0xd169, 0x5ee5, 0x4917, 0x0, 0x1);
        gbc.writeMem(0x4917, { 0x6b });
        gbc.writeMem(0xef2c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdc0b);
        EXPECT(gbc.pc(), 0xef2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2c), 0xcb);
        EXPECT(gbc.readMem(0xef2d), 0x66);
        // CB 66 036E
        gbc.setState(0xbf72, 0x20be, 0x590, 0x78e3, 0x6a5e, 0xa9ee, 0x1, 0x0);
        gbc.writeMem(0xa9ee, { 0x8e });
        gbc.writeMem(0xbf72, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x20be);
        EXPECT(gbc.pc(), 0xbf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ee), 0x8e);
        EXPECT(gbc.readMem(0xbf72), 0xcb);
        EXPECT(gbc.readMem(0xbf73), 0x66);
        // CB 66 036F
        gbc.setState(0x5f96, 0xa88, 0xf680, 0xf176, 0x8d2f, 0xf3d2, 0x1, 0x0);
        gbc.writeMem(0x5f96, { 0xcb, 0x66 });
        gbc.writeMem(0xf3d2, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa88);
        EXPECT(gbc.pc(), 0x5f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3d2), 0x6e);
        // CB 66 0370
        gbc.setState(0xcc3e, 0xec5, 0x2660, 0x2600, 0xbd06, 0xab0, 0x1, 0x1);
        gbc.writeMem(0xab0, { 0x75 });
        gbc.writeMem(0xcc3e, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xec5);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0x66);
        // CB 66 0371
        gbc.setState(0x5d89, 0x3154, 0x4270, 0x927a, 0xda18, 0xfecb, 0x0, 0x1);
        gbc.writeMem(0x5d89, { 0xcb, 0x66 });
        gbc.writeMem(0xfecb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3154);
        EXPECT(gbc.pc(), 0x5d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfecb), 0xbe);
        // CB 66 0372
        gbc.setState(0xbdb7, 0x4a7b, 0x7080, 0x1de8, 0xc0cd, 0x1190, 0x1, 0x1);
        gbc.writeMem(0x1190, { 0x93 });
        gbc.writeMem(0xbdb7, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4a7b);
        EXPECT(gbc.pc(), 0xbdb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb7), 0xcb);
        EXPECT(gbc.readMem(0xbdb8), 0x66);
        // CB 66 0373
        gbc.setState(0xbb4f, 0xbb67, 0x13c0, 0x261d, 0x2054, 0xcae7, 0x0, 0x0);
        gbc.writeMem(0xbb4f, { 0xcb, 0x66 });
        gbc.writeMem(0xcae7, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbb67);
        EXPECT(gbc.pc(), 0xbb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4f), 0xcb);
        EXPECT(gbc.readMem(0xbb50), 0x66);
        EXPECT(gbc.readMem(0xcae7), 0x18);
        // CB 66 0374
        gbc.setState(0x646f, 0x3e4a, 0x5db0, 0x73b7, 0xc03e, 0x41cd, 0x0, 0x0);
        gbc.writeMem(0x41cd, { 0x27 });
        gbc.writeMem(0x646f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3e4a);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0375
        gbc.setState(0xd987, 0xd9c7, 0x76b0, 0x9933, 0xbf8, 0x98f, 0x1, 0x0);
        gbc.writeMem(0x98f, { 0x40 });
        gbc.writeMem(0xd987, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd9c7);
        EXPECT(gbc.pc(), 0xd989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd987), 0xcb);
        EXPECT(gbc.readMem(0xd988), 0x66);
        // CB 66 0376
        gbc.setState(0x9d1d, 0x95bc, 0x2310, 0x1dc8, 0x7095, 0xeb47, 0x1, 0x0);
        gbc.writeMem(0x9d1d, { 0xcb, 0x66 });
        gbc.writeMem(0xeb47, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x95bc);
        EXPECT(gbc.pc(), 0x9d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d1d), 0xcb);
        EXPECT(gbc.readMem(0x9d1e), 0x66);
        EXPECT(gbc.readMem(0xeb47), 0x12);
        // CB 66 0377
        gbc.setState(0x130, 0xecf8, 0x92e0, 0xc98f, 0x279d, 0x20ad, 0x0, 0x1);
        gbc.writeMem(0x130, { 0xcb, 0x66 });
        gbc.writeMem(0x20ad, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xecf8);
        EXPECT(gbc.pc(), 0x132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0378
        gbc.setState(0x811f, 0x6869, 0xce20, 0x9902, 0xcf74, 0x8127, 0x1, 0x1);
        gbc.writeMem(0x811f, { 0xcb, 0x66 });
        gbc.writeMem(0x8127, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6869);
        EXPECT(gbc.pc(), 0x8121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811f), 0xcb);
        EXPECT(gbc.readMem(0x8120), 0x66);
        EXPECT(gbc.readMem(0x8127), 0xed);
        // CB 66 0379
        gbc.setState(0x71d6, 0xaca0, 0x1b10, 0xff9f, 0xd2da, 0x2daf, 0x0, 0x0);
        gbc.writeMem(0x2daf, { 0xda });
        gbc.writeMem(0x71d6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaca0);
        EXPECT(gbc.pc(), 0x71d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 037A
        gbc.setState(0x8fb4, 0x9ea1, 0xfc40, 0xd76b, 0x534f, 0xff9a, 0x1, 0x1);
        gbc.writeMem(0x8fb4, { 0xcb, 0x66 });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9ea1);
        EXPECT(gbc.pc(), 0x8fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb4), 0xcb);
        EXPECT(gbc.readMem(0x8fb5), 0x66);
        EXPECT(gbc.readMem(0xff9a), 0x2f);
        // CB 66 037C
        gbc.setState(0x61e6, 0x8983, 0x3430, 0xba78, 0x88e2, 0x7493, 0x0, 0x1);
        gbc.writeMem(0x61e6, { 0xcb, 0x66 });
        gbc.writeMem(0x7493, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8983);
        EXPECT(gbc.pc(), 0x61e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 037E
        gbc.setState(0x33a1, 0x5c4f, 0xe510, 0x138b, 0x10a9, 0x5d5c, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xcb, 0x66 });
        gbc.writeMem(0x5d5c, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5c4f);
        EXPECT(gbc.pc(), 0x33a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 037F
        gbc.setState(0x2ca0, 0x4b99, 0xba80, 0xdbe5, 0x4256, 0x1d2f, 0x1, 0x0);
        gbc.writeMem(0x1d2f, { 0xce });
        gbc.writeMem(0x2ca0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4b99);
        EXPECT(gbc.pc(), 0x2ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0380
        gbc.setState(0x73b9, 0x6e45, 0x1670, 0x9f28, 0x4a33, 0x33d1, 0x0, 0x1);
        gbc.writeMem(0x33d1, { 0xd8 });
        gbc.writeMem(0x73b9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6e45);
        EXPECT(gbc.pc(), 0x73bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0381
        gbc.setState(0x7b1, 0x848f, 0xd470, 0x3743, 0x361d, 0xcd76, 0x1, 0x1);
        gbc.writeMem(0x7b1, { 0xcb, 0x66 });
        gbc.writeMem(0xcd76, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd76), 0x53);
        // CB 66 0382
        gbc.setState(0xb6a4, 0x90b8, 0x94b0, 0xe8d3, 0x9155, 0x61ba, 0x0, 0x1);
        gbc.writeMem(0x61ba, { 0xeb });
        gbc.writeMem(0xb6a4, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x90b8);
        EXPECT(gbc.pc(), 0xb6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a4), 0xcb);
        EXPECT(gbc.readMem(0xb6a5), 0x66);
        // CB 66 0383
        gbc.setState(0xdc86, 0xc788, 0xde0, 0x4a62, 0xcac5, 0x1ee6, 0x0, 0x0);
        gbc.writeMem(0x1ee6, { 0x3d });
        gbc.writeMem(0xdc86, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc788);
        EXPECT(gbc.pc(), 0xdc88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc86), 0xcb);
        EXPECT(gbc.readMem(0xdc87), 0x66);
        // CB 66 0384
        gbc.setState(0x7afe, 0xd50b, 0xcb40, 0x58f, 0xe1bb, 0xcf0c, 0x0, 0x1);
        gbc.writeMem(0x7afe, { 0xcb, 0x66 });
        gbc.writeMem(0xcf0c, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd50b);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf0c), 0x2b);
        // CB 66 0385
        gbc.setState(0x22d8, 0x937, 0x6bb0, 0x964f, 0xd268, 0x7755, 0x0, 0x0);
        gbc.writeMem(0x22d8, { 0xcb, 0x66 });
        gbc.writeMem(0x7755, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x937);
        EXPECT(gbc.pc(), 0x22da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0386
        gbc.setState(0x9955, 0x266a, 0xf930, 0x547d, 0x2854, 0x9bf5, 0x0, 0x0);
        gbc.writeMem(0x9955, { 0xcb, 0x66 });
        gbc.writeMem(0x9bf5, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0x9957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9955), 0xcb);
        EXPECT(gbc.readMem(0x9956), 0x66);
        EXPECT(gbc.readMem(0x9bf5), 0x17);
        // CB 66 0387
        gbc.setState(0xa734, 0x8ac1, 0x9180, 0x8e74, 0x96c3, 0x8f6c, 0x0, 0x0);
        gbc.writeMem(0x8f6c, { 0x4e });
        gbc.writeMem(0xa734, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0xa736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6c), 0x4e);
        EXPECT(gbc.readMem(0xa734), 0xcb);
        EXPECT(gbc.readMem(0xa735), 0x66);
        // CB 66 0388
        gbc.setState(0x11dd, 0x4b4c, 0x6e30, 0xf688, 0xac2f, 0x2d35, 0x0, 0x1);
        gbc.writeMem(0x11dd, { 0xcb, 0x66 });
        gbc.writeMem(0x2d35, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4b4c);
        EXPECT(gbc.pc(), 0x11df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 0389
        gbc.setState(0x56b3, 0x30b3, 0x6070, 0x1983, 0xed8e, 0x41d1, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0x6f });
        gbc.writeMem(0x56b3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x30b3);
        EXPECT(gbc.pc(), 0x56b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 038A
        gbc.setState(0xbd49, 0x4841, 0xc370, 0xb9c2, 0x1c0, 0x1b9e, 0x1, 0x1);
        gbc.writeMem(0x1b9e, { 0xb3 });
        gbc.writeMem(0xbd49, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4841);
        EXPECT(gbc.pc(), 0xbd4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd49), 0xcb);
        EXPECT(gbc.readMem(0xbd4a), 0x66);
        // CB 66 038B
        gbc.setState(0x4b4c, 0x8fed, 0xfbf0, 0x9493, 0x8b49, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x4b4c, { 0xcb, 0x66 });
        gbc.writeMem(0x6024, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8fed);
        EXPECT(gbc.pc(), 0x4b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 038C
        gbc.setState(0x261f, 0x8173, 0xb460, 0x1fd2, 0xf1a8, 0x1ba4, 0x0, 0x1);
        gbc.writeMem(0x1ba4, { 0x75 });
        gbc.writeMem(0x261f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8173);
        EXPECT(gbc.pc(), 0x2621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 038D
        gbc.setState(0x7f0a, 0xeb7f, 0xa0, 0x8ddf, 0xc7e0, 0x9b0b, 0x1, 0x1);
        gbc.writeMem(0x7f0a, { 0xcb, 0x66 });
        gbc.writeMem(0x9b0b, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xeb7f);
        EXPECT(gbc.pc(), 0x7f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0b), 0x8f);
        // CB 66 038F
        gbc.setState(0xe511, 0xfbe1, 0x9430, 0x9406, 0x553e, 0x5840, 0x0, 0x0);
        gbc.writeMem(0x5840, { 0x76 });
        gbc.writeMem(0xe511, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfbe1);
        EXPECT(gbc.pc(), 0xe513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe511), 0xcb);
        EXPECT(gbc.readMem(0xe512), 0x66);
        // CB 66 0390
        gbc.setState(0x3b95, 0x875a, 0x61a0, 0x435e, 0x9187, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x3b95, { 0xcb, 0x66 });
        gbc.writeMem(0x7874, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x875a);
        EXPECT(gbc.pc(), 0x3b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0391
        gbc.setState(0x4a50, 0xdf0d, 0x5340, 0x25f9, 0x58e7, 0x7190, 0x1, 0x0);
        gbc.writeMem(0x4a50, { 0xcb, 0x66 });
        gbc.writeMem(0x7190, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdf0d);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0392
        gbc.setState(0x59d0, 0x4fab, 0x81a0, 0xd567, 0xa440, 0x320f, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xc6 });
        gbc.writeMem(0x59d0, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4fab);
        EXPECT(gbc.pc(), 0x59d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0393
        gbc.setState(0xd179, 0xf81b, 0xfac0, 0x7ac5, 0x8790, 0x34c6, 0x0, 0x1);
        gbc.writeMem(0x34c6, { 0xe7 });
        gbc.writeMem(0xd179, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf81b);
        EXPECT(gbc.pc(), 0xd17b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd179), 0xcb);
        EXPECT(gbc.readMem(0xd17a), 0x66);
        // CB 66 0394
        gbc.setState(0xae4a, 0xe02b, 0x4bb0, 0xd11c, 0x413a, 0xf3b9, 0x1, 0x1);
        gbc.writeMem(0xae4a, { 0xcb, 0x66 });
        gbc.writeMem(0xf3b9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe02b);
        EXPECT(gbc.pc(), 0xae4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4a), 0xcb);
        EXPECT(gbc.readMem(0xae4b), 0x66);
        EXPECT(gbc.readMem(0xf3b9), 0xbf);
        // CB 66 0396
        gbc.setState(0x4b93, 0x75c2, 0x6d60, 0x56a, 0xd24a, 0x6265, 0x0, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x66 });
        gbc.writeMem(0x6265, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x75c2);
        EXPECT(gbc.pc(), 0x4b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 0397
        gbc.setState(0xe2a6, 0x5c, 0xbed0, 0x4e4d, 0x802e, 0x6fc, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xf9 });
        gbc.writeMem(0xe2a6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5c);
        EXPECT(gbc.pc(), 0xe2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a6), 0xcb);
        EXPECT(gbc.readMem(0xe2a7), 0x66);
        // CB 66 0398
        gbc.setState(0x6e3, 0x20de, 0x26b0, 0x3d58, 0x16b7, 0x8d6e, 0x0, 0x0);
        gbc.writeMem(0x6e3, { 0xcb, 0x66 });
        gbc.writeMem(0x8d6e, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x20de);
        EXPECT(gbc.pc(), 0x6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6e), 0x57);
        // CB 66 0399
        gbc.setState(0x967e, 0x3434, 0xe790, 0x208a, 0xe15f, 0xc9f7, 0x1, 0x0);
        gbc.writeMem(0x967e, { 0xcb, 0x66 });
        gbc.writeMem(0xc9f7, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3434);
        EXPECT(gbc.pc(), 0x9680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x967e), 0xcb);
        EXPECT(gbc.readMem(0x967f), 0x66);
        EXPECT(gbc.readMem(0xc9f7), 0x73);
        // CB 66 039A
        gbc.setState(0x6174, 0xbf7b, 0x9d0, 0xc27d, 0xca23, 0xb905, 0x0, 0x1);
        gbc.writeMem(0x6174, { 0xcb, 0x66 });
        gbc.writeMem(0xb905, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbf7b);
        EXPECT(gbc.pc(), 0x6176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb905), 0x7a);
        // CB 66 039B
        gbc.setState(0xb81a, 0x6cad, 0xb5a0, 0xccdb, 0xee95, 0x70cd, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0x1d });
        gbc.writeMem(0xb81a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6cad);
        EXPECT(gbc.pc(), 0xb81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81a), 0xcb);
        EXPECT(gbc.readMem(0xb81b), 0x66);
        // CB 66 039C
        gbc.setState(0xc873, 0xc1a2, 0xe530, 0xd378, 0x5ac1, 0xf537, 0x1, 0x0);
        gbc.writeMem(0xc873, { 0xcb, 0x66 });
        gbc.writeMem(0xf537, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc1a2);
        EXPECT(gbc.pc(), 0xc875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc873), 0xcb);
        EXPECT(gbc.readMem(0xc874), 0x66);
        EXPECT(gbc.readMem(0xf537), 0x9c);
        // CB 66 039D
        gbc.setState(0x1896, 0x60ad, 0x1ff0, 0x3d81, 0x2e42, 0x2f5e, 0x1, 0x0);
        gbc.writeMem(0x1896, { 0xcb, 0x66 });
        gbc.writeMem(0x2f5e, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x60ad);
        EXPECT(gbc.pc(), 0x1898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 039E
        gbc.setState(0xb45c, 0xd1cd, 0x6d90, 0xdd11, 0x441e, 0x4fc7, 0x0, 0x1);
        gbc.writeMem(0x4fc7, { 0xfd });
        gbc.writeMem(0xb45c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd1cd);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45c), 0xcb);
        EXPECT(gbc.readMem(0xb45d), 0x66);
        // CB 66 039F
        gbc.setState(0xcab9, 0xc076, 0x6c30, 0x8a39, 0x569d, 0xc6c2, 0x0, 0x1);
        gbc.writeMem(0xc6c2, { 0xd1 });
        gbc.writeMem(0xcab9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc076);
        EXPECT(gbc.pc(), 0xcabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c2), 0xd1);
        EXPECT(gbc.readMem(0xcab9), 0xcb);
        EXPECT(gbc.readMem(0xcaba), 0x66);
        // CB 66 03A0
        gbc.setState(0x8f13, 0xa84b, 0xf2d0, 0x5c20, 0xff64, 0xdc7d, 0x1, 0x0);
        gbc.writeMem(0x8f13, { 0xcb, 0x66 });
        gbc.writeMem(0xdc7d, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa84b);
        EXPECT(gbc.pc(), 0x8f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f13), 0xcb);
        EXPECT(gbc.readMem(0x8f14), 0x66);
        EXPECT(gbc.readMem(0xdc7d), 0xa1);
        // CB 66 03A1
        gbc.setState(0xa849, 0x1419, 0x580, 0x6fc4, 0x40cf, 0x675b, 0x0, 0x0);
        gbc.writeMem(0x675b, { 0x3d });
        gbc.writeMem(0xa849, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1419);
        EXPECT(gbc.pc(), 0xa84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa849), 0xcb);
        EXPECT(gbc.readMem(0xa84a), 0x66);
        // CB 66 03A2
        gbc.setState(0x5984, 0x2106, 0xea30, 0xa8c2, 0x8b23, 0xa063, 0x1, 0x1);
        gbc.writeMem(0x5984, { 0xcb, 0x66 });
        gbc.writeMem(0xa063, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2106);
        EXPECT(gbc.pc(), 0x5986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa063), 0xeb);
        // CB 66 03A3
        gbc.setState(0x4630, 0xc11, 0x9e80, 0xc106, 0xff42, 0x79af, 0x0, 0x1);
        gbc.writeMem(0x4630, { 0xcb, 0x66 });
        gbc.writeMem(0x79af, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc11);
        EXPECT(gbc.pc(), 0x4632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03A4
        gbc.setState(0x9a17, 0xed4c, 0x5820, 0x4609, 0x65c6, 0xe303, 0x0, 0x0);
        gbc.writeMem(0x9a17, { 0xcb, 0x66 });
        gbc.writeMem(0xe303, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xed4c);
        EXPECT(gbc.pc(), 0x9a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a17), 0xcb);
        EXPECT(gbc.readMem(0x9a18), 0x66);
        EXPECT(gbc.readMem(0xe303), 0x62);
        // CB 66 03A5
        gbc.setState(0x63e0, 0xca1d, 0x1030, 0x72a6, 0x495b, 0xd38f, 0x0, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0x66 });
        gbc.writeMem(0xd38f, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xca1d);
        EXPECT(gbc.pc(), 0x63e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38f), 0x91);
        // CB 66 03A6
        gbc.setState(0x2bf2, 0x73e3, 0x6210, 0xa49, 0xa2f0, 0x12ba, 0x0, 0x0);
        gbc.writeMem(0x12ba, { 0x65 });
        gbc.writeMem(0x2bf2, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x73e3);
        EXPECT(gbc.pc(), 0x2bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03A7
        gbc.setState(0x5c03, 0xd3ed, 0x53c0, 0xdf3e, 0xf548, 0x72aa, 0x1, 0x1);
        gbc.writeMem(0x5c03, { 0xcb, 0x66 });
        gbc.writeMem(0x72aa, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd3ed);
        EXPECT(gbc.pc(), 0x5c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03A8
        gbc.setState(0xcd56, 0x9692, 0x6a50, 0xdb58, 0xf5f9, 0x9f48, 0x1, 0x0);
        gbc.writeMem(0x9f48, { 0xb });
        gbc.writeMem(0xcd56, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9692);
        EXPECT(gbc.pc(), 0xcd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f48), 0xb);
        EXPECT(gbc.readMem(0xcd56), 0xcb);
        EXPECT(gbc.readMem(0xcd57), 0x66);
        // CB 66 03A9
        gbc.setState(0xef56, 0x6164, 0x5cd0, 0x5756, 0x4571, 0x84f3, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xc1 });
        gbc.writeMem(0xef56, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6164);
        EXPECT(gbc.pc(), 0xef58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f3), 0xc1);
        EXPECT(gbc.readMem(0xef56), 0xcb);
        EXPECT(gbc.readMem(0xef57), 0x66);
        // CB 66 03AA
        gbc.setState(0x50c5, 0x7511, 0x3700, 0x1454, 0x156a, 0x45a4, 0x1, 0x1);
        gbc.writeMem(0x45a4, { 0x6 });
        gbc.writeMem(0x50c5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0x50c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03AB
        gbc.setState(0x2645, 0xb7bb, 0x1760, 0x58a9, 0x784, 0xcd7a, 0x0, 0x1);
        gbc.writeMem(0x2645, { 0xcb, 0x66 });
        gbc.writeMem(0xcd7a, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb7bb);
        EXPECT(gbc.pc(), 0x2647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7a), 0xa5);
        // CB 66 03AC
        gbc.setState(0x4e73, 0xadf8, 0xad30, 0xea84, 0xad64, 0x363f, 0x0, 0x1);
        gbc.writeMem(0x363f, { 0xcb });
        gbc.writeMem(0x4e73, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xadf8);
        EXPECT(gbc.pc(), 0x4e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03AE
        gbc.setState(0xe60, 0x9523, 0x1920, 0x5bc3, 0x64e3, 0x8276, 0x0, 0x0);
        gbc.writeMem(0xe60, { 0xcb, 0x66 });
        gbc.writeMem(0x8276, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9523);
        EXPECT(gbc.pc(), 0xe62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8276), 0x44);
        // CB 66 03AF
        gbc.setState(0xa0f3, 0xe8b3, 0x30, 0x180d, 0xddec, 0xd4b5, 0x1, 0x1);
        gbc.writeMem(0xa0f3, { 0xcb, 0x66 });
        gbc.writeMem(0xd4b5, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe8b3);
        EXPECT(gbc.pc(), 0xa0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f3), 0xcb);
        EXPECT(gbc.readMem(0xa0f4), 0x66);
        EXPECT(gbc.readMem(0xd4b5), 0x57);
        // CB 66 03B0
        gbc.setState(0xd3ff, 0x2fd1, 0x1150, 0x8f27, 0xf585, 0x90f6, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x48 });
        gbc.writeMem(0xd3ff, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2fd1);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f6), 0x48);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0x66);
        // CB 66 03B1
        gbc.setState(0x637d, 0xff31, 0x5150, 0xb921, 0xd943, 0x3444, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0x46 });
        gbc.writeMem(0x637d, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xff31);
        EXPECT(gbc.pc(), 0x637f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03B2
        gbc.setState(0x841c, 0x328c, 0xbee0, 0xa3d0, 0x4133, 0xd6fb, 0x1, 0x0);
        gbc.writeMem(0x841c, { 0xcb, 0x66 });
        gbc.writeMem(0xd6fb, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x328c);
        EXPECT(gbc.pc(), 0x841e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841c), 0xcb);
        EXPECT(gbc.readMem(0x841d), 0x66);
        EXPECT(gbc.readMem(0xd6fb), 0x47);
        // CB 66 03B3
        gbc.setState(0x344d, 0xf344, 0xb660, 0x3c73, 0x422b, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0x344d, { 0xcb, 0x66 });
        gbc.writeMem(0xaa80, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf344);
        EXPECT(gbc.pc(), 0x344f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa80), 0xc6);
        // CB 66 03B4
        gbc.setState(0xc150, 0xc6e4, 0x5f90, 0x61ce, 0xca06, 0xafa7, 0x1, 0x0);
        gbc.writeMem(0xafa7, { 0x23 });
        gbc.writeMem(0xc150, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc6e4);
        EXPECT(gbc.pc(), 0xc152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa7), 0x23);
        EXPECT(gbc.readMem(0xc150), 0xcb);
        EXPECT(gbc.readMem(0xc151), 0x66);
        // CB 66 03B5
        gbc.setState(0x7d26, 0x782b, 0x900, 0xaf7, 0x31b0, 0x69c4, 0x1, 0x0);
        gbc.writeMem(0x69c4, { 0x35 });
        gbc.writeMem(0x7d26, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x782b);
        EXPECT(gbc.pc(), 0x7d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03B6
        gbc.setState(0x88d4, 0x8bb0, 0x98c0, 0x3cbf, 0xcdb8, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0x88d4, { 0xcb, 0x66 });
        gbc.writeMem(0x9b3f, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8bb0);
        EXPECT(gbc.pc(), 0x88d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d4), 0xcb);
        EXPECT(gbc.readMem(0x88d5), 0x66);
        EXPECT(gbc.readMem(0x9b3f), 0x82);
        // CB 66 03B7
        gbc.setState(0x75f1, 0xa11f, 0xa3d0, 0x2d55, 0x60ea, 0x45a9, 0x0, 0x0);
        gbc.writeMem(0x45a9, { 0xab });
        gbc.writeMem(0x75f1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa11f);
        EXPECT(gbc.pc(), 0x75f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03B8
        gbc.setState(0xabd3, 0x6cfb, 0x80d0, 0xc7be, 0x9c9d, 0x2461, 0x1, 0x0);
        gbc.writeMem(0x2461, { 0xc7 });
        gbc.writeMem(0xabd3, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6cfb);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd3), 0xcb);
        EXPECT(gbc.readMem(0xabd4), 0x66);
        // CB 66 03B9
        gbc.setState(0xe472, 0x199a, 0x4400, 0xcd27, 0x7628, 0x603c, 0x1, 0x0);
        gbc.writeMem(0x603c, { 0xd2 });
        gbc.writeMem(0xe472, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x199a);
        EXPECT(gbc.pc(), 0xe474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe472), 0xcb);
        EXPECT(gbc.readMem(0xe473), 0x66);
        // CB 66 03BA
        gbc.setState(0xcea1, 0xe524, 0xd660, 0x13ff, 0x302f, 0x7d96, 0x1, 0x0);
        gbc.writeMem(0x7d96, { 0xda });
        gbc.writeMem(0xcea1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe524);
        EXPECT(gbc.pc(), 0xcea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea1), 0xcb);
        EXPECT(gbc.readMem(0xcea2), 0x66);
        // CB 66 03BB
        gbc.setState(0xd88, 0x8d12, 0x8c20, 0xc1b5, 0xad51, 0x1435, 0x1, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0x66 });
        gbc.writeMem(0x1435, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8d12);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03BC
        gbc.setState(0xb81c, 0x4a2f, 0x8040, 0x9c12, 0x8d90, 0x4b9d, 0x0, 0x0);
        gbc.writeMem(0x4b9d, { 0x23 });
        gbc.writeMem(0xb81c, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4a2f);
        EXPECT(gbc.pc(), 0xb81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81c), 0xcb);
        EXPECT(gbc.readMem(0xb81d), 0x66);
        // CB 66 03BD
        gbc.setState(0xd4e5, 0x4e23, 0x75e0, 0xa8ae, 0xfb6b, 0x9c7, 0x0, 0x1);
        gbc.writeMem(0x9c7, { 0x7 });
        gbc.writeMem(0xd4e5, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4e23);
        EXPECT(gbc.pc(), 0xd4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e5), 0xcb);
        EXPECT(gbc.readMem(0xd4e6), 0x66);
        // CB 66 03BE
        gbc.setState(0xcbf9, 0x8cb0, 0xb860, 0xac11, 0xc236, 0x186a, 0x0, 0x0);
        gbc.writeMem(0x186a, { 0x27 });
        gbc.writeMem(0xcbf9, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8cb0);
        EXPECT(gbc.pc(), 0xcbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf9), 0xcb);
        EXPECT(gbc.readMem(0xcbfa), 0x66);
        // CB 66 03BF
        gbc.setState(0x9540, 0x9408, 0x7780, 0x24dd, 0xff20, 0x4325, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0x8f });
        gbc.writeMem(0x9540, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9408);
        EXPECT(gbc.pc(), 0x9542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9540), 0xcb);
        EXPECT(gbc.readMem(0x9541), 0x66);
        // CB 66 03C0
        gbc.setState(0xd984, 0xfa5c, 0x8e80, 0x7e14, 0x58a8, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x9ac9, { 0xc8 });
        gbc.writeMem(0xd984, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfa5c);
        EXPECT(gbc.pc(), 0xd986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac9), 0xc8);
        EXPECT(gbc.readMem(0xd984), 0xcb);
        EXPECT(gbc.readMem(0xd985), 0x66);
        // CB 66 03C1
        gbc.setState(0x35c6, 0x6733, 0xbe20, 0x8752, 0x6df9, 0xfe8f, 0x1, 0x1);
        gbc.writeMem(0x35c6, { 0xcb, 0x66 });
        gbc.writeMem(0xfe8f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6733);
        EXPECT(gbc.pc(), 0x35c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe8f), 0x29);
        // CB 66 03C2
        gbc.setState(0x5a46, 0xff18, 0xb9e0, 0x5cba, 0xe4d3, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0x1d43, { 0x2f });
        gbc.writeMem(0x5a46, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xff18);
        EXPECT(gbc.pc(), 0x5a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03C3
        gbc.setState(0x7b03, 0xefb5, 0x1500, 0xf3c4, 0xdeaf, 0x4f4c, 0x0, 0x1);
        gbc.writeMem(0x4f4c, { 0xce });
        gbc.writeMem(0x7b03, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xefb5);
        EXPECT(gbc.pc(), 0x7b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03C4
        gbc.setState(0xa2e6, 0x59ea, 0xb190, 0x4795, 0x2b9c, 0xadf, 0x1, 0x0);
        gbc.writeMem(0xadf, { 0xe4 });
        gbc.writeMem(0xa2e6, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x59ea);
        EXPECT(gbc.pc(), 0xa2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e6), 0xcb);
        EXPECT(gbc.readMem(0xa2e7), 0x66);
        // CB 66 03C5
        gbc.setState(0xb491, 0x1482, 0x7b10, 0xd41d, 0x10ff, 0x6ef7, 0x1, 0x1);
        gbc.writeMem(0x6ef7, { 0x6a });
        gbc.writeMem(0xb491, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1482);
        EXPECT(gbc.pc(), 0xb493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb491), 0xcb);
        EXPECT(gbc.readMem(0xb492), 0x66);
        // CB 66 03C6
        gbc.setState(0xca94, 0x204f, 0x3860, 0x4e6d, 0xb028, 0x4e96, 0x0, 0x1);
        gbc.writeMem(0x4e96, { 0xdc });
        gbc.writeMem(0xca94, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x204f);
        EXPECT(gbc.pc(), 0xca96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca94), 0xcb);
        EXPECT(gbc.readMem(0xca95), 0x66);
        // CB 66 03C7
        gbc.setState(0x7c5f, 0x5da6, 0x5600, 0x8c2, 0x7d2b, 0x370f, 0x0, 0x0);
        gbc.writeMem(0x370f, { 0xb });
        gbc.writeMem(0x7c5f, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5da6);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03C8
        gbc.setState(0x7107, 0x96b0, 0xcc30, 0x2ad0, 0xfffe, 0x72e6, 0x0, 0x0);
        gbc.writeMem(0x7107, { 0xcb, 0x66 });
        gbc.writeMem(0x72e6, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0x7109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03C9
        gbc.setState(0x7a43, 0x28c1, 0xe3e0, 0xe2ee, 0x57df, 0xad40, 0x1, 0x0);
        gbc.writeMem(0x7a43, { 0xcb, 0x66 });
        gbc.writeMem(0xad40, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x28c1);
        EXPECT(gbc.pc(), 0x7a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad40), 0x93);
        // CB 66 03CA
        gbc.setState(0xeb2a, 0xb71b, 0x1b10, 0xdd77, 0xd4db, 0x5fe, 0x0, 0x0);
        gbc.writeMem(0x5fe, { 0x17 });
        gbc.writeMem(0xeb2a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb71b);
        EXPECT(gbc.pc(), 0xeb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2a), 0xcb);
        EXPECT(gbc.readMem(0xeb2b), 0x66);
        // CB 66 03CB
        gbc.setState(0x9b57, 0x834a, 0x58a0, 0x3063, 0x5f61, 0xfb2f, 0x0, 0x1);
        gbc.writeMem(0x9b57, { 0xcb, 0x66 });
        gbc.writeMem(0xfb2f, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x834a);
        EXPECT(gbc.pc(), 0x9b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b57), 0xcb);
        EXPECT(gbc.readMem(0x9b58), 0x66);
        EXPECT(gbc.readMem(0xfb2f), 0x53);
        // CB 66 03CC
        gbc.setState(0xc316, 0x3efe, 0xfac0, 0x43ff, 0x4347, 0x9bfb, 0x0, 0x0);
        gbc.writeMem(0x9bfb, { 0x4 });
        gbc.writeMem(0xc316, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3efe);
        EXPECT(gbc.pc(), 0xc318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfb), 0x4);
        EXPECT(gbc.readMem(0xc316), 0xcb);
        EXPECT(gbc.readMem(0xc317), 0x66);
        // CB 66 03CD
        gbc.setState(0xe490, 0x1768, 0xbc90, 0x9947, 0xec4c, 0x79eb, 0x0, 0x1);
        gbc.writeMem(0x79eb, { 0x6e });
        gbc.writeMem(0xe490, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1768);
        EXPECT(gbc.pc(), 0xe492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe490), 0xcb);
        EXPECT(gbc.readMem(0xe491), 0x66);
        // CB 66 03CE
        gbc.setState(0x426d, 0x361a, 0xe620, 0xb395, 0x785a, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x426d, { 0xcb, 0x66 });
        gbc.writeMem(0xbb8b, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x361a);
        EXPECT(gbc.pc(), 0x426f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8b), 0x41);
        // CB 66 03D0
        gbc.setState(0x1208, 0x44de, 0xa060, 0x8a17, 0xe610, 0x651, 0x1, 0x1);
        gbc.writeMem(0x651, { 0x5b });
        gbc.writeMem(0x1208, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x44de);
        EXPECT(gbc.pc(), 0x120a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03D1
        gbc.setState(0xb934, 0x8ef2, 0x6ec0, 0x86a4, 0x45bc, 0xc7ae, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x66 });
        gbc.writeMem(0xc7ae, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8ef2);
        EXPECT(gbc.pc(), 0xb936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb934), 0xcb);
        EXPECT(gbc.readMem(0xb935), 0x66);
        EXPECT(gbc.readMem(0xc7ae), 0x6d);
        // CB 66 03D2
        gbc.setState(0x56b5, 0x74ad, 0xfc30, 0x9a03, 0x2ea9, 0xe9a7, 0x0, 0x0);
        gbc.writeMem(0x56b5, { 0xcb, 0x66 });
        gbc.writeMem(0xe9a7, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x74ad);
        EXPECT(gbc.pc(), 0x56b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a7), 0x23);
        // CB 66 03D3
        gbc.setState(0xebda, 0x3cfb, 0xafb0, 0xba25, 0x44c8, 0x58be, 0x1, 0x0);
        gbc.writeMem(0x58be, { 0x4c });
        gbc.writeMem(0xebda, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0xebdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebda), 0xcb);
        EXPECT(gbc.readMem(0xebdb), 0x66);
        // CB 66 03D4
        gbc.setState(0xe650, 0x5bce, 0x6770, 0x2a5e, 0x573e, 0x6fa0, 0x1, 0x1);
        gbc.writeMem(0x6fa0, { 0x2b });
        gbc.writeMem(0xe650, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5bce);
        EXPECT(gbc.pc(), 0xe652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe650), 0xcb);
        EXPECT(gbc.readMem(0xe651), 0x66);
        // CB 66 03D6
        gbc.setState(0xb2b6, 0x2ffa, 0xa260, 0x79e8, 0x5c3c, 0xc819, 0x1, 0x1);
        gbc.writeMem(0xb2b6, { 0xcb, 0x66 });
        gbc.writeMem(0xc819, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2ffa);
        EXPECT(gbc.pc(), 0xb2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b6), 0xcb);
        EXPECT(gbc.readMem(0xb2b7), 0x66);
        EXPECT(gbc.readMem(0xc819), 0x4);
        // CB 66 03D7
        gbc.setState(0xd838, 0x845, 0x6890, 0x1548, 0x19f1, 0xb12, 0x0, 0x1);
        gbc.writeMem(0xb12, { 0x3 });
        gbc.writeMem(0xd838, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x845);
        EXPECT(gbc.pc(), 0xd83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd838), 0xcb);
        EXPECT(gbc.readMem(0xd839), 0x66);
        // CB 66 03D8
        gbc.setState(0x3ca, 0x9a98, 0x3f40, 0x7935, 0x8bce, 0xdaf6, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0xcb, 0x66 });
        gbc.writeMem(0xdaf6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9a98);
        EXPECT(gbc.pc(), 0x3cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf6), 0x90);
        // CB 66 03D9
        gbc.setState(0x5e39, 0x16b4, 0x6600, 0x61ef, 0x1600, 0x2d04, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0x74 });
        gbc.writeMem(0x5e39, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x16b4);
        EXPECT(gbc.pc(), 0x5e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03DA
        gbc.setState(0x8aa7, 0xe210, 0x2460, 0x38f8, 0x31f9, 0xa378, 0x1, 0x0);
        gbc.writeMem(0x8aa7, { 0xcb, 0x66 });
        gbc.writeMem(0xa378, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe210);
        EXPECT(gbc.pc(), 0x8aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa7), 0xcb);
        EXPECT(gbc.readMem(0x8aa8), 0x66);
        EXPECT(gbc.readMem(0xa378), 0xd9);
        // CB 66 03DB
        gbc.setState(0x77a0, 0x17fb, 0x3aa0, 0x475a, 0xffbd, 0x8f90, 0x0, 0x0);
        gbc.writeMem(0x77a0, { 0xcb, 0x66 });
        gbc.writeMem(0x8f90, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x17fb);
        EXPECT(gbc.pc(), 0x77a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f90), 0xfc);
        // CB 66 03DC
        gbc.setState(0x6ded, 0xdd72, 0x630, 0xe552, 0xe8f8, 0x8974, 0x0, 0x1);
        gbc.writeMem(0x6ded, { 0xcb, 0x66 });
        gbc.writeMem(0x8974, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdd72);
        EXPECT(gbc.pc(), 0x6def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8974), 0x9);
        // CB 66 03DD
        gbc.setState(0x795a, 0x8830, 0xd760, 0x5cf0, 0xf60d, 0x76a7, 0x1, 0x0);
        gbc.writeMem(0x76a7, { 0xff });
        gbc.writeMem(0x795a, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8830);
        EXPECT(gbc.pc(), 0x795c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 66 03DE
        gbc.setState(0xa533, 0xd574, 0x2a00, 0x4376, 0xee1b, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0xa533, { 0xcb, 0x66 });
        gbc.writeMem(0xf2ca, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0xa535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa533), 0xcb);
        EXPECT(gbc.readMem(0xa534), 0x66);
        EXPECT(gbc.readMem(0xf2ca), 0x7);
        // CB 66 03DF
        gbc.setState(0xced1, 0xfd77, 0x5fa0, 0xf043, 0x5467, 0x33e3, 0x0, 0x0);
        gbc.writeMem(0x33e3, { 0x6d });
        gbc.writeMem(0xced1, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfd77);
        EXPECT(gbc.pc(), 0xced3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced1), 0xcb);
        EXPECT(gbc.readMem(0xced2), 0x66);
        // CB 66 03E0
        gbc.setState(0xe01, 0x6c6d, 0xa6d0, 0x199b, 0x70b9, 0x41ab, 0x1, 0x1);
        gbc.writeMem(0xe01, { 0xcb, 0x66 });
        gbc.writeMem(0x41ab, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6c6d);
        EXPECT(gbc.pc(), 0xe03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 66 03E1
        gbc.setState(0xd40b, 0x2841, 0x9420, 0x8f98, 0xb406, 0x40cd, 0x0, 0x0);
        gbc.writeMem(0x40cd, { 0xf4 });
        gbc.writeMem(0xd40b, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2841);
        EXPECT(gbc.pc(), 0xd40d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40b), 0xcb);
        EXPECT(gbc.readMem(0xd40c), 0x66);
        // CB 66 03E2
        gbc.setState(0x83f4, 0x8e58, 0x36c0, 0xd0d5, 0xf967, 0x917f, 0x1, 0x0);
        gbc.writeMem(0x83f4, { 0xcb, 0x66 });
        gbc.writeMem(0x917f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8e58);
        EXPECT(gbc.pc(), 0x83f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f4), 0xcb);
        EXPECT(gbc.readMem(0x83f5), 0x66);
        EXPECT(gbc.readMem(0x917f), 0xba);
        // CB 66 03E3
        gbc.setState(0x659, 0xae4, 0xe60, 0x9a8d, 0x6a9d, 0x88cb, 0x0, 0x0);
        gbc.writeMem(0x659, { 0xcb, 0x66 });
        gbc.writeMem(0x88cb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xae4);
        EXPECT(gbc.pc(), 0x65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cb), 0x2a);
        // CB 66 03E4
        gbc.setState(0x1350, 0x9c5f, 0x81d0, 0x8812, 0xfb49, 0x8ce1, 0x0, 0x0);
        gbc.writeMem(0x1350, { 0xcb, 0x66 });
        gbc.writeMem(0x8ce1, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x1352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce1), 0xa9);
        // CB 66 03E6
        gbc.setState(0x20f0, 0xc56a, 0x6390, 0x13a, 0xa211, 0xa8d1, 0x0, 0x0);
        gbc.writeMem(0x20f0, { 0xcb, 0x66 });
        gbc.writeMem(0xa8d1, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0x20f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d1), 0x85);
        // CB 66 03E7
        gbc.setState(0xaa71, 0x3248, 0x9ff0, 0x80df, 0xa5cd, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0xed });
        gbc.writeMem(0xaa71, { 0xcb, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3248);
        EXPECT(gbc.pc(), 0xaa73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75d), 0xed);
        EXPECT(gbc.readMem(0xaa71), 0xcb);
        EXPECT(gbc.readMem(0xaa72), 0x66);
    }
}
#endif
