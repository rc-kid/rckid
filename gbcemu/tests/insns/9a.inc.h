    TEST(gbcemu, opcode_9a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9A 0000
        gbc.setState(0xa0c1, 0x6d24, 0x3530, 0xd51b, 0x4590, 0xdaf5, 0x1, 0x1);
        gbc.writeMem(0xa0c1, { 0x9a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6d24, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa0c1));
        // 9A 0001
        gbc.setState(0x51e1, 0xc673, 0x2a20, 0x7f4d, 0xd61, 0x395d, 0x0, 0x0);
        gbc.writeMem(0x51e1, { 0x9a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0x51e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0002
        gbc.setState(0x5118, 0xe7bf, 0x9600, 0x355f, 0x9474, 0x8b8, 0x1, 0x1);
        gbc.writeMem(0x5118, { 0x9a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0003
        gbc.setState(0xb358, 0xbd1f, 0x3b20, 0xdbc7, 0x118d, 0x842b, 0x0, 0x1);
        gbc.writeMem(0xb358, { 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb358));
        // 9A 0004
        gbc.setState(0x327e, 0x7741, 0x3900, 0x97a1, 0x2f0b, 0x2d82, 0x0, 0x1);
        gbc.writeMem(0x327e, { 0x9a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x327f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0005
        gbc.setState(0x8ff6, 0x9291, 0x3980, 0x4481, 0x4de9, 0x23c8, 0x0, 0x0);
        gbc.writeMem(0x8ff6, { 0x9a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0x8ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ff6));
        // 9A 0006
        gbc.setState(0xe609, 0x8a85, 0x7c20, 0x9c9e, 0x402e, 0x5f55, 0x0, 0x1);
        gbc.writeMem(0xe609, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8a85, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe609));
        // 9A 0007
        gbc.setState(0xad75, 0xee73, 0x2530, 0x70af, 0x9c0, 0x6ea5, 0x0, 0x0);
        gbc.writeMem(0xad75, { 0x9a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xee73, gbc.sp());
        EXPECT(0xad76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xad75));
        // 9A 0008
        gbc.setState(0xcc0a, 0xa374, 0x6440, 0x29b2, 0x6638, 0xe66e, 0x0, 0x0);
        gbc.writeMem(0xcc0a, { 0x9a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa374, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcc0a));
        // 9A 0009
        gbc.setState(0x76d7, 0xe45e, 0x5430, 0x7dee, 0x47b8, 0x239a, 0x0, 0x1);
        gbc.writeMem(0x76d7, { 0x9a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 000A
        gbc.setState(0x32e, 0x301b, 0xc340, 0x592f, 0x3805, 0x160b, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x301b, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 000B
        gbc.setState(0x13e4, 0x16bf, 0x43e0, 0xbc1a, 0xfb34, 0x925e, 0x0, 0x1);
        gbc.writeMem(0x13e4, { 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x16bf, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 000C
        gbc.setState(0x321, 0x6144, 0x2dd0, 0x75f3, 0xe4eb, 0x9d0, 0x0, 0x1);
        gbc.writeMem(0x321, { 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 000D
        gbc.setState(0x80cf, 0x9a7d, 0xe050, 0xddb2, 0xd328, 0xa052, 0x0, 0x1);
        gbc.writeMem(0x80cf, { 0x9a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9a7d, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x80cf));
        // 9A 000F
        gbc.setState(0x2514, 0xef2c, 0x8e20, 0x9ea9, 0xf655, 0x5bca, 0x0, 0x1);
        gbc.writeMem(0x2514, { 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xef2c, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0010
        gbc.setState(0x877b, 0xc66e, 0x5900, 0x6681, 0x53e3, 0xcd7e, 0x1, 0x0);
        gbc.writeMem(0x877b, { 0x9a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc66e, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x877b));
        // 9A 0011
        gbc.setState(0x8e05, 0xb862, 0xa550, 0x7f22, 0x5d29, 0x8f33, 0x0, 0x0);
        gbc.writeMem(0x8e05, { 0x9a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb862, gbc.sp());
        EXPECT(0x8e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8e05));
        // 9A 0012
        gbc.setState(0xe7d9, 0xe351, 0xcc40, 0x63b8, 0xf0c1, 0x8141, 0x1, 0x0);
        gbc.writeMem(0xe7d9, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe351, gbc.sp());
        EXPECT(0xe7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe7d9));
        // 9A 0013
        gbc.setState(0x193c, 0x4f5c, 0x2ac0, 0x9daa, 0xac51, 0x72d, 0x1, 0x0);
        gbc.writeMem(0x193c, { 0x9a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0x193d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0014
        gbc.setState(0x1579, 0x10eb, 0xf6e0, 0x4390, 0x1aa6, 0xf012, 0x0, 0x0);
        gbc.writeMem(0x1579, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x10eb, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0016
        gbc.setState(0x2f0b, 0xfa5d, 0x4590, 0xb19, 0xf9d8, 0x39de, 0x1, 0x0);
        gbc.writeMem(0x2f0b, { 0x9a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfa5d, gbc.sp());
        EXPECT(0x2f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0017
        gbc.setState(0xc0f2, 0x8a33, 0xb80, 0x2eea, 0xf597, 0xfab7, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc0f2));
        // 9A 0018
        gbc.setState(0x737, 0x2129, 0xe030, 0xd029, 0xbd10, 0x73d9, 0x1, 0x0);
        gbc.writeMem(0x737, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0x738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0019
        gbc.setState(0xc119, 0xeb9b, 0x51b0, 0x2b15, 0x6f31, 0xb6cc, 0x1, 0x0);
        gbc.writeMem(0xc119, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeb9b, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc119));
        // 9A 001A
        gbc.setState(0xaf56, 0x4d97, 0x1da0, 0xcf6f, 0x7c6e, 0x1f37, 0x1, 0x0);
        gbc.writeMem(0xaf56, { 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaf56));
        // 9A 001B
        gbc.setState(0x1abf, 0xd6e2, 0x31f0, 0xadfd, 0xf3c0, 0x7919, 0x0, 0x1);
        gbc.writeMem(0x1abf, { 0x9a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd6e2, gbc.sp());
        EXPECT(0x1ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 001C
        gbc.setState(0x6203, 0xbf03, 0xb3d0, 0xe76d, 0x285a, 0x958b, 0x0, 0x1);
        gbc.writeMem(0x6203, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbf03, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 001D
        gbc.setState(0xeec4, 0xb229, 0xb2b0, 0x700b, 0xc8d4, 0xe519, 0x0, 0x1);
        gbc.writeMem(0xeec4, { 0x9a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb229, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeec4));
        // 9A 001E
        gbc.setState(0xe5fe, 0x833c, 0xc710, 0x726e, 0x383f, 0x8df1, 0x1, 0x0);
        gbc.writeMem(0xe5fe, { 0x9a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x833c, gbc.sp());
        EXPECT(0xe5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe5fe));
        // 9A 001F
        gbc.setState(0x6ff7, 0xd4b8, 0xaf0, 0x3d72, 0xc4e2, 0xa10b, 0x1, 0x1);
        gbc.writeMem(0x6ff7, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd4b8, gbc.sp());
        EXPECT(0x6ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0020
        gbc.setState(0xe129, 0x25e3, 0x7c10, 0xff0b, 0x8275, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0xe129, { 0x9a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0xe12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe129));
        // 9A 0021
        gbc.setState(0x9b28, 0xc04a, 0x27a0, 0x8e63, 0xd903, 0x25dc, 0x1, 0x0);
        gbc.writeMem(0x9b28, { 0x9a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc04a, gbc.sp());
        EXPECT(0x9b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9b28));
        // 9A 0022
        gbc.setState(0xcb2d, 0x6b91, 0x4110, 0x4c36, 0xdb14, 0xc420, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6b91, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcb2d));
        // 9A 0023
        gbc.setState(0xa1e9, 0x59e9, 0x91e0, 0x5c2, 0x53a6, 0xfbae, 0x1, 0x0);
        gbc.writeMem(0xa1e9, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0xa1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa1e9));
        // 9A 0025
        gbc.setState(0x2ae4, 0x7c1a, 0xd1d0, 0x477f, 0xd840, 0xedf6, 0x0, 0x0);
        gbc.writeMem(0x2ae4, { 0x9a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0026
        gbc.setState(0x8a99, 0xbde, 0x6610, 0xb62e, 0x1e9b, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0x8a99, { 0x9a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbde, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8a99));
        // 9A 0027
        gbc.setState(0x1291, 0x8b0c, 0x4860, 0xa7f6, 0x3fa7, 0x1dc3, 0x1, 0x1);
        gbc.writeMem(0x1291, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8b0c, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0028
        gbc.setState(0x8fe2, 0xc48b, 0xfd90, 0xfc1c, 0xa5c2, 0xab95, 0x0, 0x1);
        gbc.writeMem(0x8fe2, { 0x9a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc48b, gbc.sp());
        EXPECT(0x8fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8fe2));
        // 9A 0029
        gbc.setState(0x731a, 0xc557, 0xba90, 0xb2a2, 0xbbdf, 0xdd6f, 0x0, 0x1);
        gbc.writeMem(0x731a, { 0x9a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0x731b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 002A
        gbc.setState(0x4995, 0x8cb9, 0x4910, 0x9a0b, 0x4ed7, 0xca19, 0x1, 0x0);
        gbc.writeMem(0x4995, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8cb9, gbc.sp());
        EXPECT(0x4996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 002B
        gbc.setState(0x6270, 0x2f2c, 0xdcb0, 0x2d62, 0x7a8e, 0xb482, 0x0, 0x0);
        gbc.writeMem(0x6270, { 0x9a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2f2c, gbc.sp());
        EXPECT(0x6271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 002C
        gbc.setState(0x28ea, 0xbd05, 0xd3f0, 0xa0d3, 0x2469, 0x3cc, 0x0, 0x0);
        gbc.writeMem(0x28ea, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd05, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 002D
        gbc.setState(0x1115, 0x539a, 0xa880, 0xad3b, 0x2451, 0xe43c, 0x0, 0x1);
        gbc.writeMem(0x1115, { 0x9a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x539a, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 002E
        gbc.setState(0xbd3c, 0x2728, 0xd1b0, 0xeaa6, 0x65c2, 0xffc3, 0x1, 0x0);
        gbc.writeMem(0xbd3c, { 0x9a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2728, gbc.sp());
        EXPECT(0xbd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbd3c));
        // 9A 002F
        gbc.setState(0x6d8b, 0xde2f, 0xe380, 0xee0, 0x35, 0xc15, 0x1, 0x0);
        gbc.writeMem(0x6d8b, { 0x9a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xde2f, gbc.sp());
        EXPECT(0x6d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0030
        gbc.setState(0x2f2d, 0x10d, 0x5890, 0xfa41, 0x87f2, 0x332, 0x1, 0x0);
        gbc.writeMem(0x2f2d, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x10d, gbc.sp());
        EXPECT(0x2f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0031
        gbc.setState(0xbcfb, 0xd608, 0x45f0, 0x184, 0x1042, 0x6cb1, 0x1, 0x1);
        gbc.writeMem(0xbcfb, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd608, gbc.sp());
        EXPECT(0xbcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbcfb));
        // 9A 0032
        gbc.setState(0xebe8, 0x369a, 0x8c40, 0x2d57, 0x768c, 0x45d4, 0x0, 0x1);
        gbc.writeMem(0xebe8, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x369a, gbc.sp());
        EXPECT(0xebe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xebe8));
        // 9A 0033
        gbc.setState(0xa457, 0xe18f, 0x44b0, 0xaa25, 0x108a, 0x8820, 0x1, 0x0);
        gbc.writeMem(0xa457, { 0x9a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0xa458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa457));
        // 9A 0034
        gbc.setState(0x3cb3, 0x99e0, 0x3290, 0x92f9, 0x7900, 0x7d74, 0x1, 0x0);
        gbc.writeMem(0x3cb3, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0x3cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0035
        gbc.setState(0xdf88, 0xe2d6, 0x5060, 0xf6df, 0x99f4, 0x390e, 0x1, 0x0);
        gbc.writeMem(0xdf88, { 0x9a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0xdf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf88));
        // 9A 0036
        gbc.setState(0x6339, 0x8bd7, 0xb350, 0xf9a9, 0x66c3, 0x5a68, 0x0, 0x1);
        gbc.writeMem(0x6339, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8bd7, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0037
        gbc.setState(0x8c29, 0xd754, 0xef90, 0x8cfd, 0xd732, 0x267, 0x0, 0x0);
        gbc.writeMem(0x8c29, { 0x9a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0x8c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8c29));
        // 9A 0038
        gbc.setState(0x57e7, 0x216c, 0xee00, 0x95bc, 0x5412, 0x82be, 0x0, 0x0);
        gbc.writeMem(0x57e7, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x216c, gbc.sp());
        EXPECT(0x57e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0039
        gbc.setState(0x674a, 0xe507, 0xfaf0, 0x4241, 0xeff1, 0x4c0c, 0x0, 0x0);
        gbc.writeMem(0x674a, { 0x9a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe507, gbc.sp());
        EXPECT(0x674b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 003A
        gbc.setState(0x2965, 0xe67a, 0xbd30, 0xfb0f, 0x9a46, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0x2965, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 003B
        gbc.setState(0x772b, 0x5673, 0x55a0, 0x8299, 0x8f02, 0x516b, 0x0, 0x1);
        gbc.writeMem(0x772b, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5673, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 003C
        gbc.setState(0xefcc, 0x4c4d, 0xe2f0, 0x3029, 0xad2, 0x499c, 0x0, 0x0);
        gbc.writeMem(0xefcc, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4c4d, gbc.sp());
        EXPECT(0xefcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xefcc));
        // 9A 003D
        gbc.setState(0xdb70, 0xc8, 0x59c0, 0x1ed1, 0x7ec, 0x8f34, 0x1, 0x0);
        gbc.writeMem(0xdb70, { 0x9a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xdb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb70));
        // 9A 003E
        gbc.setState(0x3793, 0xb6c5, 0xbb10, 0xef6c, 0xb049, 0x7a87, 0x1, 0x1);
        gbc.writeMem(0x3793, { 0x9a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb6c5, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 003F
        gbc.setState(0x71cd, 0xbcc0, 0xfde0, 0x44ac, 0xd51e, 0x2de9, 0x1, 0x1);
        gbc.writeMem(0x71cd, { 0x9a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbcc0, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0040
        gbc.setState(0x204e, 0x6c39, 0x2df0, 0xeebe, 0x5194, 0xd475, 0x1, 0x0);
        gbc.writeMem(0x204e, { 0x9a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6c39, gbc.sp());
        EXPECT(0x204f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0041
        gbc.setState(0x7e42, 0x6b83, 0xd7b0, 0x176, 0x9cc7, 0xceb7, 0x1, 0x0);
        gbc.writeMem(0x7e42, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0042
        gbc.setState(0x58bd, 0x2ff3, 0xd010, 0x48ed, 0x754a, 0x61db, 0x0, 0x1);
        gbc.writeMem(0x58bd, { 0x9a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0x58be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0043
        gbc.setState(0x1042, 0x2d32, 0x4f50, 0xf045, 0x563d, 0x8397, 0x1, 0x1);
        gbc.writeMem(0x1042, { 0x9a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2d32, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0044
        gbc.setState(0xdf1b, 0xc1d9, 0x9340, 0x8ef8, 0x8693, 0x581d, 0x0, 0x1);
        gbc.writeMem(0xdf1b, { 0x9a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xdf1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf1b));
        // 9A 0045
        gbc.setState(0x47d7, 0xf5b4, 0x2c20, 0xba75, 0xaedc, 0x2b7e, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0x9a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0046
        gbc.setState(0x8ee6, 0x56d4, 0x40e0, 0x721a, 0x4ac, 0x5a8e, 0x1, 0x1);
        gbc.writeMem(0x8ee6, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x56d4, gbc.sp());
        EXPECT(0x8ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ee6));
        // 9A 0047
        gbc.setState(0xef1f, 0x40c0, 0xe4c0, 0xe24c, 0x645, 0xc2d4, 0x0, 0x1);
        gbc.writeMem(0xef1f, { 0x9a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0xef20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xef1f));
        // 9A 0048
        gbc.setState(0x4339, 0xdf87, 0x97d0, 0xf495, 0x899a, 0x247d, 0x0, 0x0);
        gbc.writeMem(0x4339, { 0x9a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0049
        gbc.setState(0xb772, 0x6114, 0xf100, 0xd915, 0x4768, 0x54e7, 0x0, 0x1);
        gbc.writeMem(0xb772, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6114, gbc.sp());
        EXPECT(0xb773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb772));
        // 9A 004A
        gbc.setState(0x372a, 0xdbb9, 0x1b30, 0x6583, 0xbc8e, 0xba72, 0x1, 0x0);
        gbc.writeMem(0x372a, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0x372b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 004B
        gbc.setState(0x4999, 0x336e, 0x8fc0, 0xf7f8, 0xe7bc, 0xfaaf, 0x0, 0x1);
        gbc.writeMem(0x4999, { 0x9a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x336e, gbc.sp());
        EXPECT(0x499a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 004C
        gbc.setState(0xe49a, 0x1169, 0xef90, 0x874b, 0xc04a, 0xed65, 0x0, 0x1);
        gbc.writeMem(0xe49a, { 0x9a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1169, gbc.sp());
        EXPECT(0xe49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe49a));
        // 9A 004E
        gbc.setState(0xe109, 0x4ab8, 0xaed0, 0x10bb, 0x8fc6, 0x1756, 0x0, 0x0);
        gbc.writeMem(0xe109, { 0x9a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4ab8, gbc.sp());
        EXPECT(0xe10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe109));
        // 9A 004F
        gbc.setState(0x13c7, 0xd167, 0x89a0, 0x18f3, 0xefc4, 0x2fee, 0x1, 0x1);
        gbc.writeMem(0x13c7, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd167, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0050
        gbc.setState(0x3eff, 0xbcea, 0x4d80, 0xb262, 0x5606, 0x8a7d, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbcea, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0051
        gbc.setState(0x5c14, 0xaf21, 0x4430, 0xc087, 0x2c2, 0xee12, 0x1, 0x1);
        gbc.writeMem(0x5c14, { 0x9a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0052
        gbc.setState(0x780f, 0x5e67, 0xe000, 0x3f35, 0x2ba, 0x9a22, 0x0, 0x0);
        gbc.writeMem(0x780f, { 0x9a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0x7810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0053
        gbc.setState(0xaf97, 0x8ea6, 0x610, 0xbac0, 0xb09a, 0xf770, 0x1, 0x0);
        gbc.writeMem(0xaf97, { 0x9a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8ea6, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaf97));
        // 9A 0054
        gbc.setState(0xc9f, 0xae44, 0x85b0, 0x37c, 0x5071, 0x7fcf, 0x1, 0x0);
        gbc.writeMem(0xc9f, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0055
        gbc.setState(0x711e, 0xe890, 0xac60, 0xfe94, 0x5521, 0x5552, 0x0, 0x0);
        gbc.writeMem(0x711e, { 0x9a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe890, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0056
        gbc.setState(0xc7a6, 0xde4e, 0x9b40, 0xb753, 0x248a, 0xfd34, 0x1, 0x1);
        gbc.writeMem(0xc7a6, { 0x9a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc7a6));
        // 9A 0057
        gbc.setState(0xa891, 0x31e, 0x8810, 0x70, 0x1e4f, 0xce38, 0x0, 0x0);
        gbc.writeMem(0xa891, { 0x9a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0xa892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa891));
        // 9A 0058
        gbc.setState(0xd315, 0x4124, 0x2820, 0x259a, 0x6787, 0x7e54, 0x1, 0x1);
        gbc.writeMem(0xd315, { 0x9a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4124, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd315));
        // 9A 0059
        gbc.setState(0x8756, 0x9a69, 0xe030, 0xf178, 0x1ba7, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0x8756, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9a69, gbc.sp());
        EXPECT(0x8757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8756));
        // 9A 005B
        gbc.setState(0x8d43, 0x32f7, 0x3790, 0xe722, 0x5579, 0x44eb, 0x0, 0x0);
        gbc.writeMem(0x8d43, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0x8d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d43));
        // 9A 005C
        gbc.setState(0x2bb3, 0x6703, 0xa170, 0x5366, 0x75de, 0x9518, 0x0, 0x1);
        gbc.writeMem(0x2bb3, { 0x9a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6703, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 005D
        gbc.setState(0xaf14, 0x4c4b, 0xcc90, 0x828b, 0x17ee, 0xd341, 0x0, 0x0);
        gbc.writeMem(0xaf14, { 0x9a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaf14));
        // 9A 005E
        gbc.setState(0xb1ea, 0x7cd9, 0x1120, 0x577a, 0x3337, 0x21c1, 0x0, 0x0);
        gbc.writeMem(0xb1ea, { 0x9a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7cd9, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb1ea));
        // 9A 005F
        gbc.setState(0x4574, 0xa41e, 0x1ef0, 0x6201, 0xf107, 0xca35, 0x0, 0x1);
        gbc.writeMem(0x4574, { 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa41e, gbc.sp());
        EXPECT(0x4575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0060
        gbc.setState(0x5c65, 0x7ef, 0x5870, 0xcdc0, 0xb179, 0xa2d6, 0x0, 0x1);
        gbc.writeMem(0x5c65, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0x5c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0061
        gbc.setState(0xe785, 0xac49, 0xba50, 0x56e5, 0xfb53, 0x799e, 0x1, 0x1);
        gbc.writeMem(0xe785, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xac49, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe785));
        // 9A 0062
        gbc.setState(0x5da1, 0xf795, 0x37b0, 0xf1f6, 0x2fef, 0xe924, 0x0, 0x1);
        gbc.writeMem(0x5da1, { 0x9a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf795, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0063
        gbc.setState(0xd29e, 0xce7, 0x46c0, 0x13f7, 0x41f8, 0x548c, 0x0, 0x1);
        gbc.writeMem(0xd29e, { 0x9a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xd29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd29e));
        // 9A 0064
        gbc.setState(0x26fd, 0x4b72, 0x6fe0, 0x9090, 0xbf94, 0xa883, 0x1, 0x0);
        gbc.writeMem(0x26fd, { 0x9a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4b72, gbc.sp());
        EXPECT(0x26fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0065
        gbc.setState(0xa330, 0xef0a, 0xd080, 0xf2b0, 0x268e, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0xa330, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0xa331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa330));
        // 9A 0066
        gbc.setState(0xa2a, 0x60d8, 0x7b20, 0x1d2c, 0x9767, 0xc18d, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0x9a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0067
        gbc.setState(0x3a60, 0xf7de, 0x3ff0, 0x92a8, 0xc945, 0x1db8, 0x0, 0x1);
        gbc.writeMem(0x3a60, { 0x9a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf7de, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0068
        gbc.setState(0x8a21, 0xb07d, 0xfcb0, 0xe546, 0xc154, 0x221b, 0x1, 0x1);
        gbc.writeMem(0x8a21, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0x8a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8a21));
        // 9A 0069
        gbc.setState(0xabf5, 0x3e79, 0xb600, 0x4688, 0xfe34, 0xe44d, 0x1, 0x1);
        gbc.writeMem(0xabf5, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3e79, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xabf5));
        // 9A 006A
        gbc.setState(0x96d4, 0x8a1a, 0x9470, 0x6c52, 0x88bf, 0xff7a, 0x1, 0x0);
        gbc.writeMem(0x96d4, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8a1a, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x96d4));
        // 9A 006C
        gbc.setState(0x1f0f, 0x3104, 0x1170, 0xd080, 0x4a54, 0xe6d4, 0x1, 0x1);
        gbc.writeMem(0x1f0f, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3104, gbc.sp());
        EXPECT(0x1f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 006D
        gbc.setState(0xbeb5, 0xeb18, 0xf500, 0x4ca, 0xba3f, 0xeabd, 0x0, 0x0);
        gbc.writeMem(0xbeb5, { 0x9a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeb18, gbc.sp());
        EXPECT(0xbeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbeb5));
        // 9A 006E
        gbc.setState(0x3926, 0xda3, 0x4f90, 0x8cc5, 0xd0af, 0xad49, 0x1, 0x1);
        gbc.writeMem(0x3926, { 0x9a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xda3, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 006F
        gbc.setState(0x3f9e, 0x8a87, 0xd980, 0xbc93, 0xcbd0, 0xaa6e, 0x0, 0x0);
        gbc.writeMem(0x3f9e, { 0x9a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0070
        gbc.setState(0x2fda, 0x725, 0x3550, 0xa071, 0xbe3d, 0x2a07, 0x1, 0x1);
        gbc.writeMem(0x2fda, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x725, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0071
        gbc.setState(0xa4af, 0xdedb, 0x570, 0xfe69, 0x379a, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0xa4af, { 0x9a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdedb, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa4af));
        // 9A 0072
        gbc.setState(0x3249, 0x284b, 0x140, 0xa7c3, 0xdf62, 0x4b22, 0x1, 0x1);
        gbc.writeMem(0x3249, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x284b, gbc.sp());
        EXPECT(0x324a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0073
        gbc.setState(0xbc12, 0x6760, 0xb400, 0xb511, 0x9551, 0x3113, 0x0, 0x0);
        gbc.writeMem(0xbc12, { 0x9a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6760, gbc.sp());
        EXPECT(0xbc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbc12));
        // 9A 0074
        gbc.setState(0x7b12, 0x8f2a, 0xcf00, 0x5e47, 0xfa8a, 0xcdb9, 0x0, 0x0);
        gbc.writeMem(0x7b12, { 0x9a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0075
        gbc.setState(0xc11c, 0x62b4, 0xd060, 0xcdb7, 0x7700, 0x6e6b, 0x1, 0x1);
        gbc.writeMem(0xc11c, { 0x9a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc11c));
        // 9A 0077
        gbc.setState(0x3db3, 0xdf2b, 0x1020, 0xfd5d, 0xccc3, 0x77f1, 0x1, 0x0);
        gbc.writeMem(0x3db3, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf2b, gbc.sp());
        EXPECT(0x3db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0078
        gbc.setState(0x798c, 0x5102, 0x2360, 0x8e21, 0xe966, 0xaa65, 0x0, 0x0);
        gbc.writeMem(0x798c, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5102, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0079
        gbc.setState(0xa61a, 0x43f4, 0xedc0, 0x8d15, 0x62f9, 0xe928, 0x0, 0x1);
        gbc.writeMem(0xa61a, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x43f4, gbc.sp());
        EXPECT(0xa61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa61a));
        // 9A 007C
        gbc.setState(0xae59, 0xc716, 0x80e0, 0xba7e, 0x83af, 0xe79f, 0x1, 0x0);
        gbc.writeMem(0xae59, { 0x9a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc716, gbc.sp());
        EXPECT(0xae5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xae59));
        // 9A 007D
        gbc.setState(0x3937, 0x85cd, 0xe90, 0xe5ec, 0xfce0, 0x1d3, 0x0, 0x0);
        gbc.writeMem(0x3937, { 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x85cd, gbc.sp());
        EXPECT(0x3938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 007E
        gbc.setState(0xa12e, 0x3700, 0xa270, 0xb617, 0x6c50, 0x549, 0x1, 0x0);
        gbc.writeMem(0xa12e, { 0x9a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3700, gbc.sp());
        EXPECT(0xa12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa12e));
        // 9A 007F
        gbc.setState(0x3536, 0x7dcd, 0x2c10, 0x51b9, 0xa086, 0x955b, 0x0, 0x0);
        gbc.writeMem(0x3536, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7dcd, gbc.sp());
        EXPECT(0x3537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0080
        gbc.setState(0x58e6, 0x847, 0x2df0, 0x8b36, 0xdb09, 0x5019, 0x1, 0x0);
        gbc.writeMem(0x58e6, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x847, gbc.sp());
        EXPECT(0x58e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0081
        gbc.setState(0xc83, 0xb495, 0x30, 0xac68, 0xfa12, 0xc420, 0x0, 0x1);
        gbc.writeMem(0xc83, { 0x9a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0082
        gbc.setState(0x7f15, 0x949b, 0xaba0, 0xebf3, 0xa8d7, 0x1f20, 0x0, 0x0);
        gbc.writeMem(0x7f15, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0x7f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0083
        gbc.setState(0x43da, 0x84c8, 0x6840, 0x323d, 0x9c66, 0x9d7d, 0x1, 0x0);
        gbc.writeMem(0x43da, { 0x9a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0084
        gbc.setState(0x4d4f, 0xb8b1, 0x2030, 0x2b7f, 0x481b, 0x90cb, 0x0, 0x0);
        gbc.writeMem(0x4d4f, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0085
        gbc.setState(0xc0c6, 0x5aa3, 0xfff0, 0x3162, 0x75b7, 0x921b, 0x0, 0x0);
        gbc.writeMem(0xc0c6, { 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc0c6));
        // 9A 0086
        gbc.setState(0x5450, 0x1a11, 0x62c0, 0x68a1, 0xe387, 0x5416, 0x1, 0x1);
        gbc.writeMem(0x5450, { 0x9a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1a11, gbc.sp());
        EXPECT(0x5451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0087
        gbc.setState(0x6f99, 0xdd3e, 0xe8b0, 0xf8c2, 0x8251, 0xec3d, 0x1, 0x0);
        gbc.writeMem(0x6f99, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdd3e, gbc.sp());
        EXPECT(0x6f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0088
        gbc.setState(0x756f, 0xba5d, 0xfc10, 0xdd20, 0x271d, 0xf2b6, 0x0, 0x0);
        gbc.writeMem(0x756f, { 0x9a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x7570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0089
        gbc.setState(0x8f87, 0xec6a, 0x3540, 0xc2b, 0xe97c, 0x4ce8, 0x1, 0x0);
        gbc.writeMem(0x8f87, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x8f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8f87));
        // 9A 008B
        gbc.setState(0x3bd8, 0x38b6, 0x3400, 0x1cb0, 0xecff, 0x46fb, 0x1, 0x0);
        gbc.writeMem(0x3bd8, { 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0x3bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 008C
        gbc.setState(0xcf71, 0x931, 0x4c40, 0x1af7, 0x5b76, 0x5ffc, 0x0, 0x0);
        gbc.writeMem(0xcf71, { 0x9a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcf71));
        // 9A 008F
        gbc.setState(0x47d5, 0xd81a, 0xf690, 0xd81f, 0xcf7b, 0xbc0e, 0x1, 0x1);
        gbc.writeMem(0x47d5, { 0x9a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0090
        gbc.setState(0x1d82, 0x3751, 0x23b0, 0xfab0, 0xac3, 0x2693, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0x9a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3751, gbc.sp());
        EXPECT(0x1d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0092
        gbc.setState(0x3605, 0xed8e, 0xeff0, 0xdf23, 0xb52f, 0x8b5c, 0x0, 0x0);
        gbc.writeMem(0x3605, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0093
        gbc.setState(0xb094, 0x9b13, 0xa10, 0x571c, 0x8ee9, 0xd450, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0x9a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9b13, gbc.sp());
        EXPECT(0xb095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb094));
        // 9A 0094
        gbc.setState(0x232d, 0x767e, 0x760, 0xe239, 0x3575, 0x6cb2, 0x1, 0x1);
        gbc.writeMem(0x232d, { 0x9a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x767e, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0095
        gbc.setState(0x1e8c, 0xf811, 0x7b50, 0x8c75, 0xbc05, 0xb70, 0x1, 0x1);
        gbc.writeMem(0x1e8c, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x1e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0096
        gbc.setState(0xa7c0, 0xcf7, 0x8b90, 0xccfd, 0xae3d, 0xc3bf, 0x0, 0x1);
        gbc.writeMem(0xa7c0, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa7c0));
        // 9A 0097
        gbc.setState(0x661, 0xf1e6, 0x6950, 0xdff8, 0x864a, 0x7fa7, 0x0, 0x0);
        gbc.writeMem(0x661, { 0x9a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf1e6, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0098
        gbc.setState(0x2ee, 0x5b03, 0xd890, 0xcf32, 0xf04, 0x37c0, 0x0, 0x0);
        gbc.writeMem(0x2ee, { 0x9a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0x2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0099
        gbc.setState(0x4294, 0x4e83, 0x4c50, 0xaa18, 0xfac5, 0xcfde, 0x0, 0x0);
        gbc.writeMem(0x4294, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 009A
        gbc.setState(0xdf11, 0xcafa, 0x2970, 0xe1b5, 0x37b5, 0x491, 0x0, 0x0);
        gbc.writeMem(0xdf11, { 0x9a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf11));
        // 9A 009B
        gbc.setState(0xcf53, 0xb11f, 0x8330, 0xe5fe, 0xb55d, 0x1f6b, 0x1, 0x1);
        gbc.writeMem(0xcf53, { 0x9a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb11f, gbc.sp());
        EXPECT(0xcf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcf53));
        // 9A 009C
        gbc.setState(0x7f77, 0x9f08, 0x2a30, 0xda9e, 0x7b88, 0xd8ad, 0x1, 0x0);
        gbc.writeMem(0x7f77, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9f08, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 009D
        gbc.setState(0xd06d, 0x7ff1, 0xc350, 0x8b40, 0x88dc, 0x5b1f, 0x1, 0x1);
        gbc.writeMem(0xd06d, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7ff1, gbc.sp());
        EXPECT(0xd06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd06d));
        // 9A 009F
        gbc.setState(0xc48d, 0x7204, 0x25f0, 0xa95e, 0xe1f5, 0xfce8, 0x0, 0x1);
        gbc.writeMem(0xc48d, { 0x9a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7204, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc48d));
        // 9A 00A0
        gbc.setState(0xdd3d, 0xd9f3, 0x92c0, 0x54ef, 0x83c3, 0x7ed7, 0x0, 0x1);
        gbc.writeMem(0xdd3d, { 0x9a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd9f3, gbc.sp());
        EXPECT(0xdd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdd3d));
        // 9A 00A1
        gbc.setState(0xa215, 0x34d5, 0xf800, 0x7390, 0x611b, 0xdb1b, 0x1, 0x1);
        gbc.writeMem(0xa215, { 0x9a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0xa216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa215));
        // 9A 00A2
        gbc.setState(0x2aa1, 0xd014, 0x9ad0, 0xd963, 0x3eda, 0x5b24, 0x0, 0x0);
        gbc.writeMem(0x2aa1, { 0x9a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00A3
        gbc.setState(0x17fa, 0x30dc, 0x66a0, 0x3e21, 0x96f6, 0x32c6, 0x0, 0x1);
        gbc.writeMem(0x17fa, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x17fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00A4
        gbc.setState(0xbd1, 0x224d, 0x82b0, 0x1ab6, 0x6c15, 0x82f1, 0x0, 0x0);
        gbc.writeMem(0xbd1, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x224d, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00A5
        gbc.setState(0x72c, 0x9b24, 0xbb00, 0x4418, 0x7fc5, 0x5cab, 0x0, 0x1);
        gbc.writeMem(0x72c, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9b24, gbc.sp());
        EXPECT(0x72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00A6
        gbc.setState(0x2b84, 0x7098, 0x3330, 0xd4f, 0x6896, 0x731d, 0x1, 0x0);
        gbc.writeMem(0x2b84, { 0x9a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7098, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00A7
        gbc.setState(0xdb3f, 0xd044, 0x5ba0, 0xc6e0, 0xc0d7, 0xedef, 0x0, 0x0);
        gbc.writeMem(0xdb3f, { 0x9a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd044, gbc.sp());
        EXPECT(0xdb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb3f));
        // 9A 00A8
        gbc.setState(0xaf8e, 0xd613, 0x77d0, 0x1631, 0x1c9d, 0xa004, 0x0, 0x0);
        gbc.writeMem(0xaf8e, { 0x9a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd613, gbc.sp());
        EXPECT(0xaf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaf8e));
        // 9A 00A9
        gbc.setState(0x2a80, 0x96a8, 0xf2b0, 0xf69d, 0xdd9d, 0xa1f5, 0x1, 0x1);
        gbc.writeMem(0x2a80, { 0x9a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00AA
        gbc.setState(0xc5f8, 0x173b, 0x12c0, 0xca0e, 0x50df, 0x8f87, 0x1, 0x0);
        gbc.writeMem(0xc5f8, { 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x173b, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc5f8));
        // 9A 00AB
        gbc.setState(0x1c65, 0xc61a, 0x5b70, 0x3fef, 0x1cc0, 0x283b, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00AC
        gbc.setState(0xfbc, 0x79f, 0x5a60, 0x359f, 0x4ac4, 0xcaca, 0x0, 0x0);
        gbc.writeMem(0xfbc, { 0x9a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79f, gbc.sp());
        EXPECT(0xfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00AD
        gbc.setState(0x1490, 0xe9cc, 0xc8d0, 0x4b8d, 0x94b, 0x37a4, 0x1, 0x1);
        gbc.writeMem(0x1490, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00AE
        gbc.setState(0xcd8a, 0xdc3c, 0x4670, 0x3413, 0x2f21, 0x8b24, 0x1, 0x0);
        gbc.writeMem(0xcd8a, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcd8a));
        // 9A 00AF
        gbc.setState(0x322d, 0x8c92, 0xb70, 0xda51, 0xaa9f, 0x1dba, 0x0, 0x1);
        gbc.writeMem(0x322d, { 0x9a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8c92, gbc.sp());
        EXPECT(0x322e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00B0
        gbc.setState(0x1f3, 0xdc15, 0x8170, 0x6901, 0x15f7, 0xaf74, 0x0, 0x1);
        gbc.writeMem(0x1f3, { 0x9a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0x1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00B1
        gbc.setState(0x5ee5, 0xe9, 0xe710, 0xc08b, 0xd5b3, 0xb2bb, 0x0, 0x0);
        gbc.writeMem(0x5ee5, { 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe9, gbc.sp());
        EXPECT(0x5ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00B2
        gbc.setState(0xb2f1, 0x78da, 0x3db0, 0x2496, 0x1d8d, 0xe034, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0x9a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x78da, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb2f1));
        // 9A 00B3
        gbc.setState(0x5a9a, 0x344a, 0xf6f0, 0x1e23, 0x2348, 0x1eaa, 0x1, 0x0);
        gbc.writeMem(0x5a9a, { 0x9a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x344a, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00B4
        gbc.setState(0x7529, 0xdea5, 0xa8f0, 0xd7d1, 0x772c, 0x3e69, 0x0, 0x1);
        gbc.writeMem(0x7529, { 0x9a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0x752a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00B5
        gbc.setState(0xa728, 0xa613, 0xf9f0, 0x3b22, 0x5a30, 0x4a0, 0x0, 0x1);
        gbc.writeMem(0xa728, { 0x9a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa613, gbc.sp());
        EXPECT(0xa729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa728));
        // 9A 00B6
        gbc.setState(0xb7c9, 0xfc0d, 0x7640, 0x74f5, 0xcb5c, 0x3806, 0x0, 0x0);
        gbc.writeMem(0xb7c9, { 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0xb7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb7c9));
        // 9A 00B7
        gbc.setState(0xaaf0, 0x2799, 0xf700, 0xfbc9, 0xb7d5, 0x465c, 0x0, 0x0);
        gbc.writeMem(0xaaf0, { 0x9a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaaf0));
        // 9A 00B8
        gbc.setState(0xd63f, 0xfa0d, 0xf30, 0x6d56, 0x852f, 0x3d3e, 0x0, 0x1);
        gbc.writeMem(0xd63f, { 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfa0d, gbc.sp());
        EXPECT(0xd640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd63f));
        // 9A 00B9
        gbc.setState(0xa8ce, 0xbb88, 0x4170, 0xfea6, 0xa841, 0xe7ac, 0x1, 0x0);
        gbc.writeMem(0xa8ce, { 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb88, gbc.sp());
        EXPECT(0xa8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa8ce));
        // 9A 00BA
        gbc.setState(0xca0a, 0xc885, 0x8520, 0x7de3, 0x8ee6, 0xda1b, 0x0, 0x0);
        gbc.writeMem(0xca0a, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc885, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca0a));
        // 9A 00BB
        gbc.setState(0x8c63, 0x2d48, 0xbf10, 0xfdc1, 0xe9c9, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x8c63, { 0x9a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0x8c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8c63));
        // 9A 00BC
        gbc.setState(0xa200, 0x5bcf, 0xec10, 0x2b65, 0x336f, 0x3efd, 0x1, 0x1);
        gbc.writeMem(0xa200, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa200));
        // 9A 00BD
        gbc.setState(0xa7fe, 0x2775, 0xf160, 0x62ce, 0x48eb, 0x1d0d, 0x1, 0x1);
        gbc.writeMem(0xa7fe, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2775, gbc.sp());
        EXPECT(0xa7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa7fe));
        // 9A 00BE
        gbc.setState(0x9f53, 0x2918, 0xfb0, 0xb7fe, 0xddf2, 0x1229, 0x0, 0x1);
        gbc.writeMem(0x9f53, { 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2918, gbc.sp());
        EXPECT(0x9f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9f53));
        // 9A 00BF
        gbc.setState(0x8673, 0x79c4, 0xa360, 0xa2f4, 0x11e2, 0x7087, 0x1, 0x1);
        gbc.writeMem(0x8673, { 0x9a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x79c4, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8673));
        // 9A 00C0
        gbc.setState(0xb720, 0xd577, 0x58c0, 0xc705, 0x20db, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0xb720, { 0x9a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd577, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb720));
        // 9A 00C1
        gbc.setState(0xd72b, 0x8759, 0x38d0, 0x7b1b, 0x79a0, 0x3cb7, 0x0, 0x1);
        gbc.writeMem(0xd72b, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8759, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd72b));
        // 9A 00C2
        gbc.setState(0x2c1f, 0xe225, 0xc8b0, 0x265, 0x664e, 0xdece, 0x1, 0x0);
        gbc.writeMem(0x2c1f, { 0x9a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x2c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00C3
        gbc.setState(0xa5f2, 0x87a3, 0x7130, 0x763, 0x24dd, 0xa728, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa5f2));
        // 9A 00C4
        gbc.setState(0x173e, 0xbf95, 0xe530, 0x5658, 0xc18e, 0x2438, 0x0, 0x1);
        gbc.writeMem(0x173e, { 0x9a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00C5
        gbc.setState(0x74be, 0x4898, 0x830, 0x9fef, 0x95c9, 0xba43, 0x1, 0x0);
        gbc.writeMem(0x74be, { 0x9a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00C6
        gbc.setState(0x4188, 0xf926, 0x460, 0xc150, 0xf31e, 0x2009, 0x0, 0x0);
        gbc.writeMem(0x4188, { 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf926, gbc.sp());
        EXPECT(0x4189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00C7
        gbc.setState(0x202d, 0xf3ad, 0x8780, 0x79c, 0x519d, 0x26b4, 0x0, 0x0);
        gbc.writeMem(0x202d, { 0x9a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf3ad, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00C8
        gbc.setState(0x3e6f, 0x71e7, 0xf200, 0x6e81, 0x76dd, 0x9a5, 0x0, 0x1);
        gbc.writeMem(0x3e6f, { 0x9a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x71e7, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00C9
        gbc.setState(0x852, 0x928d, 0x2f20, 0x6cc4, 0x82bc, 0xd91, 0x1, 0x0);
        gbc.writeMem(0x852, { 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00CA
        gbc.setState(0x1adc, 0xf5f2, 0x5710, 0x40e, 0xa767, 0xc140, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf5f2, gbc.sp());
        EXPECT(0x1add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00CB
        gbc.setState(0x4d86, 0x881, 0x8590, 0x4822, 0x9f4a, 0x51fe, 0x0, 0x0);
        gbc.writeMem(0x4d86, { 0x9a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x881, gbc.sp());
        EXPECT(0x4d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00CC
        gbc.setState(0xdf30, 0xb990, 0x3480, 0x31b1, 0xd2da, 0x1a54, 0x0, 0x0);
        gbc.writeMem(0xdf30, { 0x9a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0xdf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf30));
        // 9A 00CD
        gbc.setState(0x2263, 0xdb50, 0x8b50, 0xf03e, 0xbc87, 0x896e, 0x1, 0x0);
        gbc.writeMem(0x2263, { 0x9a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x2264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00CE
        gbc.setState(0x3c29, 0xde1f, 0x7170, 0xc089, 0xc83b, 0xce8b, 0x0, 0x0);
        gbc.writeMem(0x3c29, { 0x9a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0x3c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00CF
        gbc.setState(0xa31c, 0x913f, 0x7420, 0x6ca9, 0xea29, 0xcd94, 0x1, 0x0);
        gbc.writeMem(0xa31c, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0xa31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa31c));
        // 9A 00D0
        gbc.setState(0x74a5, 0xc019, 0x5a00, 0x778c, 0x18c6, 0x8f0b, 0x1, 0x0);
        gbc.writeMem(0x74a5, { 0x9a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00D1
        gbc.setState(0x1e0f, 0xf38, 0x3bd0, 0x9f2d, 0xf9c, 0xe824, 0x1, 0x1);
        gbc.writeMem(0x1e0f, { 0x9a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf38, gbc.sp());
        EXPECT(0x1e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00D2
        gbc.setState(0x1e5d, 0xedb4, 0x9d10, 0x12c6, 0xc9e8, 0x66e9, 0x0, 0x1);
        gbc.writeMem(0x1e5d, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xedb4, gbc.sp());
        EXPECT(0x1e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00D3
        gbc.setState(0xa1ae, 0x26c1, 0xe1c0, 0x7985, 0xbc4c, 0x6e51, 0x1, 0x1);
        gbc.writeMem(0xa1ae, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x26c1, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa1ae));
        // 9A 00D4
        gbc.setState(0xed6f, 0xdd31, 0x110, 0x5a31, 0x30d4, 0x268a, 0x1, 0x1);
        gbc.writeMem(0xed6f, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdd31, gbc.sp());
        EXPECT(0xed70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed6f));
        // 9A 00D5
        gbc.setState(0x3200, 0xc204, 0x3110, 0xfa81, 0xf82b, 0xb230, 0x0, 0x1);
        gbc.writeMem(0x3200, { 0x9a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc204, gbc.sp());
        EXPECT(0x3201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00D6
        gbc.setState(0xae9b, 0x2231, 0xe910, 0xbf4f, 0x8962, 0xa2fa, 0x1, 0x1);
        gbc.writeMem(0xae9b, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2231, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xae9b));
        // 9A 00D7
        gbc.setState(0x6248, 0x82b0, 0xa8e0, 0x727a, 0x49d6, 0xe115, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00D8
        gbc.setState(0xb398, 0x60bf, 0xc120, 0x65a, 0x4314, 0x26a9, 0x1, 0x1);
        gbc.writeMem(0xb398, { 0x9a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb398));
        // 9A 00D9
        gbc.setState(0x8748, 0x1cc3, 0x4d30, 0x3279, 0x9659, 0x298d, 0x1, 0x1);
        gbc.writeMem(0x8748, { 0x9a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1cc3, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8748));
        // 9A 00DA
        gbc.setState(0xb2e8, 0xc650, 0xfa70, 0x82f9, 0x43f8, 0x6a0f, 0x0, 0x1);
        gbc.writeMem(0xb2e8, { 0x9a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc650, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb2e8));
        // 9A 00DB
        gbc.setState(0x58da, 0xb3f4, 0x5a90, 0x14c, 0xa02e, 0x7a6a, 0x0, 0x0);
        gbc.writeMem(0x58da, { 0x9a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb3f4, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00DC
        gbc.setState(0x74c6, 0x74d6, 0xce60, 0x3c29, 0xeae3, 0xc430, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0x9a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x74d6, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00DD
        gbc.setState(0xe52, 0x246c, 0x3700, 0xc774, 0x9317, 0xb7d6, 0x0, 0x1);
        gbc.writeMem(0xe52, { 0x9a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x246c, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00DE
        gbc.setState(0x50e8, 0x6fe4, 0xd00, 0xa91e, 0xa1c9, 0x94d8, 0x1, 0x1);
        gbc.writeMem(0x50e8, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6fe4, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00DF
        gbc.setState(0x2a21, 0x8b9d, 0x28e0, 0x31f3, 0x6638, 0x665b, 0x0, 0x0);
        gbc.writeMem(0x2a21, { 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b9d, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00E0
        gbc.setState(0xe1f0, 0x9f93, 0x6c70, 0xd965, 0xcc1e, 0x413, 0x0, 0x1);
        gbc.writeMem(0xe1f0, { 0x9a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f93, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe1f0));
        // 9A 00E1
        gbc.setState(0xdd3a, 0x50a9, 0xc170, 0xb9d7, 0x2892, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xdd3a, { 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdd3a));
        // 9A 00E2
        gbc.setState(0x4ef3, 0x5471, 0xbc0, 0x43b0, 0x7289, 0xd9a4, 0x0, 0x0);
        gbc.writeMem(0x4ef3, { 0x9a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5471, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00E3
        gbc.setState(0xb192, 0x714f, 0x2af0, 0x6ab4, 0x805c, 0x6823, 0x0, 0x0);
        gbc.writeMem(0xb192, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x714f, gbc.sp());
        EXPECT(0xb193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb192));
        // 9A 00E4
        gbc.setState(0x2474, 0x3f14, 0x10e0, 0x9514, 0x6a67, 0x42a5, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f14, gbc.sp());
        EXPECT(0x2475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00E5
        gbc.setState(0x8697, 0xc50c, 0xab70, 0x1fb3, 0x9b7e, 0x28f3, 0x0, 0x1);
        gbc.writeMem(0x8697, { 0x9a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0x8698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8697));
        // 9A 00E6
        gbc.setState(0x9879, 0x9f8e, 0xa8c0, 0xa2fd, 0x35f1, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0x9879, { 0x9a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9879));
        // 9A 00E7
        gbc.setState(0xb7d3, 0x7e8e, 0xf420, 0xe5e0, 0xa61c, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0x9a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0xb7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb7d3));
        // 9A 00E8
        gbc.setState(0xac30, 0x35a9, 0xac00, 0x7bb0, 0x948b, 0xbe, 0x0, 0x1);
        gbc.writeMem(0xac30, { 0x9a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x35a9, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xac30));
        // 9A 00E9
        gbc.setState(0x14d4, 0x531e, 0x6720, 0x9e2f, 0x20a9, 0xa2ab, 0x0, 0x0);
        gbc.writeMem(0x14d4, { 0x9a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x531e, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00EA
        gbc.setState(0xdd31, 0x7758, 0x3d20, 0x2724, 0x110, 0xcfa5, 0x0, 0x0);
        gbc.writeMem(0xdd31, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0xdd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdd31));
        // 9A 00EB
        gbc.setState(0xaf19, 0x3dbe, 0x12e0, 0xa6a2, 0x5258, 0x32a7, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0x9a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaf19));
        // 9A 00EC
        gbc.setState(0xec26, 0xd82d, 0xe4a0, 0xc44b, 0x5ceb, 0x726b, 0x1, 0x0);
        gbc.writeMem(0xec26, { 0x9a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd82d, gbc.sp());
        EXPECT(0xec27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xec26));
        // 9A 00ED
        gbc.setState(0x1250, 0x874e, 0xcf20, 0x29c8, 0xe842, 0x1368, 0x0, 0x1);
        gbc.writeMem(0x1250, { 0x9a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x874e, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00EE
        gbc.setState(0x6cb7, 0x4682, 0xd890, 0x389b, 0xf7ac, 0x39d, 0x0, 0x1);
        gbc.writeMem(0x6cb7, { 0x9a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4682, gbc.sp());
        EXPECT(0x6cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00EF
        gbc.setState(0xbc47, 0x74bc, 0xf990, 0x7ac1, 0xd822, 0xa0da, 0x0, 0x0);
        gbc.writeMem(0xbc47, { 0x9a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0xbc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbc47));
        // 9A 00F1
        gbc.setState(0xb783, 0x887c, 0xb450, 0xa5bf, 0xd14f, 0x62ee, 0x1, 0x1);
        gbc.writeMem(0xb783, { 0x9a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x887c, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb783));
        // 9A 00F2
        gbc.setState(0xa1cf, 0xc59c, 0xbc0, 0x54bf, 0x49b8, 0x3586, 0x0, 0x1);
        gbc.writeMem(0xa1cf, { 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0xa1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa1cf));
        // 9A 00F4
        gbc.setState(0xb9b4, 0xdb08, 0xf3e0, 0x3922, 0xe7ce, 0x2512, 0x1, 0x0);
        gbc.writeMem(0xb9b4, { 0x9a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0xb9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb9b4));
        // 9A 00F5
        gbc.setState(0x5053, 0x2975, 0xb130, 0xea7e, 0x223, 0x8400, 0x0, 0x1);
        gbc.writeMem(0x5053, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2975, gbc.sp());
        EXPECT(0x5054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00F7
        gbc.setState(0x53c6, 0xdc76, 0x65c0, 0xb4b4, 0xe98d, 0x1289, 0x0, 0x1);
        gbc.writeMem(0x53c6, { 0x9a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdc76, gbc.sp());
        EXPECT(0x53c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00F8
        gbc.setState(0xc2f9, 0xa449, 0x7150, 0x1b85, 0x38ca, 0x22c5, 0x0, 0x1);
        gbc.writeMem(0xc2f9, { 0x9a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa449, gbc.sp());
        EXPECT(0xc2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc2f9));
        // 9A 00F9
        gbc.setState(0xddaf, 0xddad, 0xbca0, 0x23c8, 0x1b88, 0x6d58, 0x1, 0x1);
        gbc.writeMem(0xddaf, { 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0xddb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xddaf));
        // 9A 00FA
        gbc.setState(0xae78, 0x43c0, 0xce70, 0x1924, 0xaddb, 0x485d, 0x1, 0x1);
        gbc.writeMem(0xae78, { 0x9a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xae78));
        // 9A 00FB
        gbc.setState(0x4c1b, 0xe60d, 0x2910, 0x70f, 0x173f, 0x7c21, 0x1, 0x1);
        gbc.writeMem(0x4c1b, { 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe60d, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 00FC
        gbc.setState(0x84b7, 0x6c62, 0x1280, 0x56d5, 0x4330, 0x798b, 0x0, 0x0);
        gbc.writeMem(0x84b7, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6c62, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x84b7));
        // 9A 00FD
        gbc.setState(0x6ba4, 0x406a, 0x1820, 0x8386, 0x9524, 0x5cbc, 0x1, 0x0);
        gbc.writeMem(0x6ba4, { 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0x6ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 00FE
        gbc.setState(0x9666, 0x87d4, 0x4c30, 0x7f7f, 0x7270, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0x9666, { 0x9a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x87d4, gbc.sp());
        EXPECT(0x9667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9666));
        // 9A 00FF
        gbc.setState(0x1551, 0xba1e, 0x9da0, 0x4e35, 0x2588, 0x2713, 0x1, 0x1);
        gbc.writeMem(0x1551, { 0x9a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0100
        gbc.setState(0x9dd4, 0x71cf, 0xb670, 0x7542, 0xd62a, 0xbd47, 0x0, 0x0);
        gbc.writeMem(0x9dd4, { 0x9a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x71cf, gbc.sp());
        EXPECT(0x9dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9dd4));
        // 9A 0101
        gbc.setState(0x1516, 0x8d19, 0xe9a0, 0x954a, 0xd766, 0x7f08, 0x0, 0x0);
        gbc.writeMem(0x1516, { 0x9a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x1517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0102
        gbc.setState(0x9df0, 0x859, 0xf7f0, 0x6c07, 0x250b, 0xeb1e, 0x1, 0x0);
        gbc.writeMem(0x9df0, { 0x9a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x859, gbc.sp());
        EXPECT(0x9df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9df0));
        // 9A 0103
        gbc.setState(0x554, 0xf91f, 0xb9e0, 0xcae2, 0xa38, 0xa686, 0x0, 0x0);
        gbc.writeMem(0x554, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf91f, gbc.sp());
        EXPECT(0x555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0104
        gbc.setState(0x3c88, 0x689a, 0x5820, 0xd84f, 0x4f6e, 0xc43a, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x689a, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0105
        gbc.setState(0x246c, 0x2707, 0x3d00, 0xccd9, 0xb8bd, 0x3330, 0x1, 0x0);
        gbc.writeMem(0x246c, { 0x9a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0x246d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0106
        gbc.setState(0x31d7, 0x63e9, 0x4070, 0x7f0f, 0x985c, 0xde73, 0x0, 0x0);
        gbc.writeMem(0x31d7, { 0x9a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x63e9, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0107
        gbc.setState(0xa64a, 0x1fc3, 0x99e0, 0x5b9a, 0x61c0, 0xe537, 0x1, 0x0);
        gbc.writeMem(0xa64a, { 0x9a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa64a));
        // 9A 0108
        gbc.setState(0x5c45, 0xbf2c, 0x8180, 0xb0be, 0x4cd, 0x819d, 0x1, 0x1);
        gbc.writeMem(0x5c45, { 0x9a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0x5c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0109
        gbc.setState(0xdcf2, 0xa561, 0x2cb0, 0xd94e, 0x1072, 0x789a, 0x1, 0x0);
        gbc.writeMem(0xdcf2, { 0x9a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdcf2));
        // 9A 010A
        gbc.setState(0x23a9, 0x2a12, 0xc620, 0x471c, 0x3c28, 0x5b5c, 0x0, 0x0);
        gbc.writeMem(0x23a9, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2a12, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 010C
        gbc.setState(0x9d99, 0xd642, 0x7140, 0x1576, 0xa16f, 0x4665, 0x0, 0x1);
        gbc.writeMem(0x9d99, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x9d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d99));
        // 9A 010D
        gbc.setState(0xd153, 0x91f7, 0x7c00, 0x7cbd, 0xe3b2, 0x56b9, 0x1, 0x0);
        gbc.writeMem(0xd153, { 0x9a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x91f7, gbc.sp());
        EXPECT(0xd154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd153));
        // 9A 010E
        gbc.setState(0x9001, 0x2c85, 0x8250, 0x1354, 0x76ae, 0x794, 0x0, 0x0);
        gbc.writeMem(0x9001, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2c85, gbc.sp());
        EXPECT(0x9002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9001));
        // 9A 010F
        gbc.setState(0x1d05, 0x338d, 0xa4a0, 0x361b, 0x63b7, 0xa2fb, 0x0, 0x1);
        gbc.writeMem(0x1d05, { 0x9a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x338d, gbc.sp());
        EXPECT(0x1d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0110
        gbc.setState(0xdd8a, 0xc61d, 0x7a50, 0x9b8e, 0x5776, 0xbcb7, 0x1, 0x0);
        gbc.writeMem(0xdd8a, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc61d, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdd8a));
        // 9A 0111
        gbc.setState(0x47fc, 0xa1f4, 0x55d0, 0xa782, 0x9ee9, 0x12c2, 0x0, 0x1);
        gbc.writeMem(0x47fc, { 0x9a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa1f4, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0113
        gbc.setState(0x344b, 0x9727, 0x8dd0, 0x712a, 0xa943, 0xc6e0, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0x9a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0114
        gbc.setState(0x12a8, 0xf7ff, 0xbb10, 0x1904, 0xf337, 0x65ca, 0x1, 0x1);
        gbc.writeMem(0x12a8, { 0x9a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7ff, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0115
        gbc.setState(0x4222, 0x677, 0x16e0, 0x37b2, 0x78be, 0xd401, 0x0, 0x0);
        gbc.writeMem(0x4222, { 0x9a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x677, gbc.sp());
        EXPECT(0x4223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0116
        gbc.setState(0xa104, 0x3a8, 0xe7d0, 0x110f, 0xef82, 0xca05, 0x0, 0x0);
        gbc.writeMem(0xa104, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xa105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa104));
        // 9A 0117
        gbc.setState(0x9954, 0x9f1f, 0x5920, 0x4a44, 0x4e1d, 0x6219, 0x1, 0x0);
        gbc.writeMem(0x9954, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f1f, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9954));
        // 9A 0118
        gbc.setState(0x5932, 0x375, 0x3910, 0x6f2b, 0xf6d, 0xe52b, 0x1, 0x1);
        gbc.writeMem(0x5932, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0x5933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0119
        gbc.setState(0x8d78, 0x9e11, 0x5270, 0xe340, 0xf263, 0x2e53, 0x1, 0x1);
        gbc.writeMem(0x8d78, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d78));
        // 9A 011A
        gbc.setState(0xd9d5, 0x5836, 0x2560, 0x9355, 0x33e4, 0x584e, 0x0, 0x0);
        gbc.writeMem(0xd9d5, { 0x9a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5836, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd9d5));
        // 9A 011B
        gbc.setState(0x229, 0xf0aa, 0x3a80, 0x51ab, 0xf653, 0xef08, 0x1, 0x1);
        gbc.writeMem(0x229, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 011C
        gbc.setState(0xb259, 0x5509, 0xd220, 0x9033, 0xf6ea, 0x494c, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5509, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb259));
        // 9A 011D
        gbc.setState(0xa9d5, 0xabc3, 0xcc90, 0x9ab3, 0x425b, 0x7807, 0x1, 0x0);
        gbc.writeMem(0xa9d5, { 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0xa9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa9d5));
        // 9A 011E
        gbc.setState(0xd1e5, 0xe337, 0xd400, 0x9db3, 0x9aaa, 0x680, 0x0, 0x0);
        gbc.writeMem(0xd1e5, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd1e5));
        // 9A 011F
        gbc.setState(0x9c6f, 0x21f, 0x57c0, 0xa578, 0x714c, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0x9c6f, { 0x9a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x21f, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9c6f));
        // 9A 0120
        gbc.setState(0x671d, 0x68c3, 0xb9f0, 0xdd23, 0xfac1, 0xa198, 0x0, 0x1);
        gbc.writeMem(0x671d, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0121
        gbc.setState(0x1329, 0x3659, 0xaa80, 0xf629, 0x6385, 0xf1c5, 0x1, 0x0);
        gbc.writeMem(0x1329, { 0x9a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0x132a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0122
        gbc.setState(0xdca2, 0xac7f, 0x4b00, 0x2206, 0x5a51, 0x62cf, 0x0, 0x0);
        gbc.writeMem(0xdca2, { 0x9a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdca2));
        // 9A 0123
        gbc.setState(0x8ad4, 0x1777, 0x2cd0, 0x1f96, 0x4c03, 0x5486, 0x0, 0x0);
        gbc.writeMem(0x8ad4, { 0x9a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1777, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ad4));
        // 9A 0124
        gbc.setState(0xce24, 0x85c2, 0xb9a0, 0xa260, 0xa796, 0xb6ba, 0x1, 0x1);
        gbc.writeMem(0xce24, { 0x9a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x85c2, gbc.sp());
        EXPECT(0xce25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xce24));
        // 9A 0125
        gbc.setState(0x82d8, 0x3f50, 0x8ea0, 0x57c6, 0xc843, 0xde95, 0x1, 0x0);
        gbc.writeMem(0x82d8, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3f50, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x82d8));
        // 9A 0126
        gbc.setState(0x28c6, 0xcbf2, 0xeee0, 0xfd27, 0x4f7f, 0xbe9a, 0x1, 0x1);
        gbc.writeMem(0x28c6, { 0x9a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0127
        gbc.setState(0xc952, 0xa253, 0xc620, 0xab0, 0xa2dd, 0xacb8, 0x1, 0x0);
        gbc.writeMem(0xc952, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0xc953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc952));
        // 9A 0128
        gbc.setState(0x1acc, 0x1d25, 0x6f50, 0x4c22, 0xbf5d, 0xe9b0, 0x0, 0x1);
        gbc.writeMem(0x1acc, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0129
        gbc.setState(0xa8d3, 0x8426, 0x1f30, 0xb1c8, 0x1ae2, 0xc685, 0x0, 0x0);
        gbc.writeMem(0xa8d3, { 0x9a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0xa8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa8d3));
        // 9A 012A
        gbc.setState(0x4b58, 0x1978, 0x7d60, 0x9656, 0x11a4, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x4b58, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 012B
        gbc.setState(0x8cbe, 0x8829, 0xdca0, 0x2f9f, 0x92b9, 0x21d5, 0x0, 0x1);
        gbc.writeMem(0x8cbe, { 0x9a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0x8cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8cbe));
        // 9A 012C
        gbc.setState(0x96b7, 0x8964, 0x4230, 0x384c, 0x47c3, 0xb2b4, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8964, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x96b7));
        // 9A 012D
        gbc.setState(0xb2c7, 0x555d, 0x410, 0x5555, 0x55b0, 0x203c, 0x0, 0x0);
        gbc.writeMem(0xb2c7, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0xb2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb2c7));
        // 9A 012E
        gbc.setState(0xc0c4, 0x1057, 0x6500, 0x5a6f, 0x1c3a, 0x724, 0x0, 0x1);
        gbc.writeMem(0xc0c4, { 0x9a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc0c4));
        // 9A 012F
        gbc.setState(0x9c9a, 0x3388, 0x9a60, 0x4295, 0xe17b, 0x9a1a, 0x1, 0x0);
        gbc.writeMem(0x9c9a, { 0x9a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9c9a));
        // 9A 0130
        gbc.setState(0xc98, 0x481d, 0x1750, 0x8482, 0x32, 0xd0b4, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0131
        gbc.setState(0xdba5, 0x2ec6, 0x3d80, 0x35c4, 0xfeda, 0x1dff, 0x1, 0x1);
        gbc.writeMem(0xdba5, { 0x9a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0xdba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdba5));
        // 9A 0132
        gbc.setState(0x7b57, 0x8b52, 0xb300, 0x3041, 0x4bf5, 0x3290, 0x0, 0x0);
        gbc.writeMem(0x7b57, { 0x9a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8b52, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0133
        gbc.setState(0xa9a0, 0x2d84, 0xa0d0, 0xf36a, 0xf27e, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0xa9a0, { 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa9a0));
        // 9A 0134
        gbc.setState(0x621, 0xf5e3, 0xf130, 0x63f3, 0xdbb1, 0x61fb, 0x0, 0x0);
        gbc.writeMem(0x621, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf5e3, gbc.sp());
        EXPECT(0x622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0135
        gbc.setState(0xc835, 0x10c0, 0x6c80, 0x121b, 0xf462, 0x86ad, 0x1, 0x0);
        gbc.writeMem(0xc835, { 0x9a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0xc836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc835));
        // 9A 0136
        gbc.setState(0x4d12, 0x406a, 0xdda0, 0xa94d, 0x2d40, 0x1648, 0x0, 0x0);
        gbc.writeMem(0x4d12, { 0x9a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0138
        gbc.setState(0x621b, 0x4ce3, 0xe2a0, 0xd9be, 0x1e1b, 0x12ff, 0x0, 0x0);
        gbc.writeMem(0x621b, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x621c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0139
        gbc.setState(0x1c4a, 0x9834, 0x2820, 0xb8e, 0xd1e9, 0x7c8c, 0x0, 0x0);
        gbc.writeMem(0x1c4a, { 0x9a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9834, gbc.sp());
        EXPECT(0x1c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 013A
        gbc.setState(0xe852, 0xc6b2, 0xf910, 0x5aea, 0xac03, 0x511a, 0x1, 0x0);
        gbc.writeMem(0xe852, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe852));
        // 9A 013B
        gbc.setState(0x89bc, 0x8e90, 0xe0a0, 0x245b, 0xd78f, 0x53d0, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0x89bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x89bc));
        // 9A 013C
        gbc.setState(0x9a9e, 0xd64b, 0xa970, 0x52c, 0x7ae6, 0x9ba7, 0x0, 0x1);
        gbc.writeMem(0x9a9e, { 0x9a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd64b, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a9e));
        // 9A 013D
        gbc.setState(0x7cbb, 0x96e4, 0xfa10, 0x6019, 0xf37f, 0x323b, 0x0, 0x1);
        gbc.writeMem(0x7cbb, { 0x9a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0x7cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 013F
        gbc.setState(0xa0f8, 0x8812, 0xb9a0, 0x216, 0x4b0e, 0xc7fe, 0x0, 0x1);
        gbc.writeMem(0xa0f8, { 0x9a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa0f8));
        // 9A 0141
        gbc.setState(0x4401, 0xfc85, 0x9f40, 0x4d4b, 0xf068, 0xce64, 0x0, 0x0);
        gbc.writeMem(0x4401, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0142
        gbc.setState(0x6d70, 0x6f28, 0x4a20, 0xdb7e, 0x28a1, 0x36af, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f28, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0143
        gbc.setState(0x51d1, 0x3e28, 0xef00, 0x502b, 0x75a4, 0x1013, 0x0, 0x1);
        gbc.writeMem(0x51d1, { 0x9a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3e28, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0144
        gbc.setState(0x479c, 0x5ec5, 0x1230, 0xe342, 0xeceb, 0x28c5, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0145
        gbc.setState(0x4ba5, 0x379e, 0x8230, 0x9543, 0x1aed, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0x4ba5, { 0x9a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x379e, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0146
        gbc.setState(0x540b, 0xb34c, 0x4d60, 0x8d18, 0x62d0, 0x1945, 0x1, 0x1);
        gbc.writeMem(0x540b, { 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb34c, gbc.sp());
        EXPECT(0x540c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0147
        gbc.setState(0x22fc, 0x7a83, 0xba10, 0xb0b7, 0xa462, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0x22fc, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7a83, gbc.sp());
        EXPECT(0x22fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0148
        gbc.setState(0xa5c, 0x6de, 0x5f00, 0x65f8, 0x2a21, 0xa611, 0x0, 0x1);
        gbc.writeMem(0xa5c, { 0x9a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6de, gbc.sp());
        EXPECT(0xa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0149
        gbc.setState(0x816a, 0xcc69, 0xde70, 0x5cf5, 0x61bc, 0x48f, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x9a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcc69, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x816a));
        // 9A 014A
        gbc.setState(0x58b9, 0xb9e0, 0x34c0, 0x79fc, 0x35d6, 0xc014, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0x9a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x58ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 014B
        gbc.setState(0x753, 0x655a, 0x460, 0x3ed1, 0xf90a, 0x200f, 0x0, 0x0);
        gbc.writeMem(0x753, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x655a, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 014C
        gbc.setState(0xef85, 0x1bb0, 0x1ff0, 0x5052, 0xf230, 0x30d, 0x1, 0x1);
        gbc.writeMem(0xef85, { 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xef85));
        // 9A 014D
        gbc.setState(0x6dc9, 0x66e0, 0x6110, 0x260d, 0x458, 0x4cfd, 0x0, 0x1);
        gbc.writeMem(0x6dc9, { 0x9a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x66e0, gbc.sp());
        EXPECT(0x6dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 014E
        gbc.setState(0x8dc7, 0x131f, 0x4b90, 0x86d5, 0xd78, 0xc6cb, 0x1, 0x0);
        gbc.writeMem(0x8dc7, { 0x9a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x131f, gbc.sp());
        EXPECT(0x8dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8dc7));
        // 9A 014F
        gbc.setState(0x1cda, 0x84c8, 0x3c50, 0xf43d, 0x7697, 0x96de, 0x1, 0x1);
        gbc.writeMem(0x1cda, { 0x9a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0x1cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0150
        gbc.setState(0x7133, 0xf3e4, 0xe2f0, 0xeeb0, 0x36fd, 0xa0c1, 0x1, 0x0);
        gbc.writeMem(0x7133, { 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0151
        gbc.setState(0x3e02, 0xef92, 0x1670, 0x1bf5, 0x926b, 0xb9b7, 0x1, 0x1);
        gbc.writeMem(0x3e02, { 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0x3e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0152
        gbc.setState(0xc2de, 0xf057, 0xf070, 0xa6a6, 0xe4b4, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0xc2de, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc2de));
        // 9A 0153
        gbc.setState(0xc988, 0x6805, 0x95b0, 0x478, 0x9c86, 0xd9fb, 0x1, 0x1);
        gbc.writeMem(0xc988, { 0x9a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0xc989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc988));
        // 9A 0155
        gbc.setState(0x95ca, 0xd34b, 0xf220, 0x158d, 0x8b56, 0x964c, 0x1, 0x0);
        gbc.writeMem(0x95ca, { 0x9a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd34b, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x95ca));
        // 9A 0156
        gbc.setState(0xacab, 0x50b, 0xedc0, 0x39c4, 0x38d0, 0x36db, 0x1, 0x1);
        gbc.writeMem(0xacab, { 0x9a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x50b, gbc.sp());
        EXPECT(0xacac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xacab));
        // 9A 0157
        gbc.setState(0xe885, 0xa688, 0x6c50, 0xd40c, 0x2394, 0xd814, 0x0, 0x0);
        gbc.writeMem(0xe885, { 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0xe886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe885));
        // 9A 0158
        gbc.setState(0x1616, 0xbff3, 0x6510, 0x6f6b, 0xf70, 0x53dc, 0x0, 0x0);
        gbc.writeMem(0x1616, { 0x9a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbff3, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0159
        gbc.setState(0xdb14, 0xfba9, 0x6640, 0x7ff7, 0x7e16, 0x28c5, 0x1, 0x0);
        gbc.writeMem(0xdb14, { 0x9a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb14));
        // 9A 015A
        gbc.setState(0x3b13, 0x301c, 0x8a90, 0x33cb, 0x7912, 0x9f2c, 0x1, 0x1);
        gbc.writeMem(0x3b13, { 0x9a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 015B
        gbc.setState(0xcefb, 0x3749, 0x2400, 0x3c88, 0x60a0, 0xe869, 0x1, 0x1);
        gbc.writeMem(0xcefb, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3749, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcefb));
        // 9A 015C
        gbc.setState(0x59fc, 0x4119, 0x2be0, 0x4ecf, 0x296d, 0xff7c, 0x0, 0x1);
        gbc.writeMem(0x59fc, { 0x9a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4119, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 015D
        gbc.setState(0xb4e5, 0x2cc, 0x5090, 0xf80d, 0x9a00, 0xe60c, 0x0, 0x1);
        gbc.writeMem(0xb4e5, { 0x9a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2cc, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb4e5));
        // 9A 015E
        gbc.setState(0xa618, 0x50ff, 0xd7b0, 0x2914, 0x8b6b, 0xa2f, 0x1, 0x0);
        gbc.writeMem(0xa618, { 0x9a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa618));
        // 9A 015F
        gbc.setState(0x275, 0xc117, 0x5a0, 0x1af5, 0x9422, 0x545b, 0x0, 0x0);
        gbc.writeMem(0x275, { 0x9a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0160
        gbc.setState(0x7681, 0x85ed, 0x2350, 0x5229, 0x2b67, 0xc834, 0x0, 0x1);
        gbc.writeMem(0x7681, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x85ed, gbc.sp());
        EXPECT(0x7682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0161
        gbc.setState(0x5093, 0x9618, 0xa790, 0x9398, 0xffcd, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0x5093, { 0x9a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0162
        gbc.setState(0xe6c, 0x403a, 0xe600, 0x833f, 0x34f3, 0x98e3, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0x9a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0163
        gbc.setState(0xde64, 0x2432, 0x7180, 0xca22, 0x2721, 0x580b, 0x0, 0x1);
        gbc.writeMem(0xde64, { 0x9a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2432, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xde64));
        // 9A 0164
        gbc.setState(0xc1f4, 0x2fd, 0x9c50, 0x73b9, 0xd1fa, 0x2d1b, 0x1, 0x1);
        gbc.writeMem(0xc1f4, { 0x9a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2fd, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc1f4));
        // 9A 0165
        gbc.setState(0x2016, 0x819, 0xf530, 0xee65, 0x8554, 0xe9a4, 0x1, 0x0);
        gbc.writeMem(0x2016, { 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0x2017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0166
        gbc.setState(0x567b, 0xc0ff, 0xb270, 0x5727, 0xbdb, 0xffef, 0x1, 0x1);
        gbc.writeMem(0x567b, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0167
        gbc.setState(0xb03e, 0x407, 0x2de0, 0x5486, 0x4dc0, 0x1703, 0x1, 0x1);
        gbc.writeMem(0xb03e, { 0x9a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x407, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb03e));
        // 9A 0168
        gbc.setState(0xe04, 0x7ea5, 0x4da0, 0xbedb, 0x3a69, 0x16e2, 0x0, 0x0);
        gbc.writeMem(0xe04, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0169
        gbc.setState(0xcb59, 0x49be, 0x13e0, 0x949c, 0x618f, 0xb759, 0x1, 0x0);
        gbc.writeMem(0xcb59, { 0x9a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x49be, gbc.sp());
        EXPECT(0xcb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcb59));
        // 9A 016B
        gbc.setState(0xda0c, 0xa756, 0x3fa0, 0x990e, 0xdf25, 0xb0df, 0x1, 0x0);
        gbc.writeMem(0xda0c, { 0x9a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa756, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xda0c));
        // 9A 016C
        gbc.setState(0xad12, 0xb6a7, 0x9350, 0x538b, 0xccf1, 0x84f1, 0x1, 0x1);
        gbc.writeMem(0xad12, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xad12));
        // 9A 016D
        gbc.setState(0x936e, 0xf611, 0x40e0, 0x5bba, 0x8be2, 0x4b3b, 0x0, 0x1);
        gbc.writeMem(0x936e, { 0x9a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf611, gbc.sp());
        EXPECT(0x936f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x936e));
        // 9A 016E
        gbc.setState(0x33c7, 0x91f6, 0x7e10, 0xf0ef, 0x7e54, 0xc46d, 0x1, 0x0);
        gbc.writeMem(0x33c7, { 0x9a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x91f6, gbc.sp());
        EXPECT(0x33c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 016F
        gbc.setState(0xa9a7, 0x6f08, 0x7fe0, 0xe3a3, 0xf3af, 0x85f, 0x1, 0x0);
        gbc.writeMem(0xa9a7, { 0x9a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0xa9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa9a7));
        // 9A 0170
        gbc.setState(0xb9a8, 0x1592, 0x2200, 0x3153, 0xaeba, 0x7422, 0x0, 0x1);
        gbc.writeMem(0xb9a8, { 0x9a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1592, gbc.sp());
        EXPECT(0xb9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb9a8));
        // 9A 0172
        gbc.setState(0x6952, 0x3dc0, 0xe170, 0x4ba9, 0xadb8, 0xe7c3, 0x1, 0x1);
        gbc.writeMem(0x6952, { 0x9a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3dc0, gbc.sp());
        EXPECT(0x6953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0173
        gbc.setState(0xd909, 0xa906, 0x81f0, 0xb8f7, 0x8dae, 0x4a95, 0x0, 0x1);
        gbc.writeMem(0xd909, { 0x9a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd909));
        // 9A 0174
        gbc.setState(0x13dd, 0x8da, 0xc920, 0x296, 0x6cf1, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x13dd, { 0x9a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0x13de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0175
        gbc.setState(0x3b66, 0xd5e6, 0x2160, 0x4d0c, 0x7b03, 0xd76d, 0x1, 0x1);
        gbc.writeMem(0x3b66, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0176
        gbc.setState(0xc493, 0xe724, 0x1ae0, 0xa02d, 0x116d, 0xdebc, 0x1, 0x0);
        gbc.writeMem(0xc493, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0xc494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc493));
        // 9A 0178
        gbc.setState(0xa55, 0xcc20, 0x7dd0, 0x9ecc, 0x1e69, 0x2fa3, 0x1, 0x1);
        gbc.writeMem(0xa55, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcc20, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0179
        gbc.setState(0xcbdf, 0x7581, 0x8a70, 0x8e87, 0xb427, 0x40ff, 0x0, 0x1);
        gbc.writeMem(0xcbdf, { 0x9a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcbdf));
        // 9A 017A
        gbc.setState(0xb7b8, 0xad1, 0x19d0, 0x85e3, 0x6ce6, 0xd389, 0x1, 0x1);
        gbc.writeMem(0xb7b8, { 0x9a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xad1, gbc.sp());
        EXPECT(0xb7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb7b8));
        // 9A 017C
        gbc.setState(0xeadc, 0x78a6, 0x5460, 0xe2b0, 0x3d63, 0xdac0, 0x0, 0x1);
        gbc.writeMem(0xeadc, { 0x9a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeadc));
        // 9A 017D
        gbc.setState(0xad2f, 0x15e, 0x9390, 0x6ec3, 0x8ffb, 0x4831, 0x0, 0x1);
        gbc.writeMem(0xad2f, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xad2f));
        // 9A 017E
        gbc.setState(0xcc02, 0xf094, 0x4040, 0xc4a4, 0x6da6, 0xd97a, 0x0, 0x1);
        gbc.writeMem(0xcc02, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0xcc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcc02));
        // 9A 017F
        gbc.setState(0x37f5, 0x94f0, 0x7db0, 0x1c0e, 0x56a3, 0x7151, 0x0, 0x1);
        gbc.writeMem(0x37f5, { 0x9a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x94f0, gbc.sp());
        EXPECT(0x37f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0180
        gbc.setState(0x4a67, 0x41d, 0xdef0, 0xf289, 0x2ea8, 0xf1ac, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0x9a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x41d, gbc.sp());
        EXPECT(0x4a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0181
        gbc.setState(0xe638, 0x8aa0, 0x9a10, 0x5e88, 0xfede, 0x7ad7, 0x1, 0x0);
        gbc.writeMem(0xe638, { 0x9a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe638));
        // 9A 0182
        gbc.setState(0x9d0b, 0x754d, 0x52b0, 0xb673, 0xd6f3, 0x4155, 0x0, 0x1);
        gbc.writeMem(0x9d0b, { 0x9a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0x9d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d0b));
        // 9A 0183
        gbc.setState(0x4841, 0x1d4d, 0x5be0, 0xad6, 0x721f, 0xe986, 0x1, 0x1);
        gbc.writeMem(0x4841, { 0x9a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0184
        gbc.setState(0xb4c0, 0x1438, 0x2620, 0xfef2, 0xd20b, 0x323f, 0x1, 0x1);
        gbc.writeMem(0xb4c0, { 0x9a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb4c0));
        // 9A 0185
        gbc.setState(0xbe79, 0xf221, 0x3500, 0xd0da, 0x515a, 0xa9e5, 0x0, 0x1);
        gbc.writeMem(0xbe79, { 0x9a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf221, gbc.sp());
        EXPECT(0xbe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbe79));
        // 9A 0186
        gbc.setState(0x47d7, 0x64e9, 0x8550, 0xa1ea, 0xbefa, 0x5e6a, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x64e9, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0187
        gbc.setState(0x9a28, 0xa736, 0xe1b0, 0x34b3, 0xce4e, 0x8c1e, 0x1, 0x0);
        gbc.writeMem(0x9a28, { 0x9a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa736, gbc.sp());
        EXPECT(0x9a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a28));
        // 9A 0188
        gbc.setState(0x41eb, 0x8fcf, 0xcdc0, 0x8d50, 0x1f7b, 0xbb99, 0x1, 0x1);
        gbc.writeMem(0x41eb, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8fcf, gbc.sp());
        EXPECT(0x41ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0189
        gbc.setState(0x970b, 0x76cc, 0xc890, 0xc6af, 0x2113, 0x75ec, 0x1, 0x1);
        gbc.writeMem(0x970b, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x76cc, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x970b));
        // 9A 018A
        gbc.setState(0xdf21, 0x5707, 0xdf50, 0x639a, 0x5380, 0x210e, 0x1, 0x1);
        gbc.writeMem(0xdf21, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0xdf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf21));
        // 9A 018B
        gbc.setState(0x70fa, 0xcf54, 0x7020, 0x9465, 0x72b0, 0xca16, 0x0, 0x1);
        gbc.writeMem(0x70fa, { 0x9a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcf54, gbc.sp());
        EXPECT(0x70fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 018C
        gbc.setState(0x4e42, 0xc1ce, 0x1990, 0x99e0, 0x510f, 0x2233, 0x0, 0x1);
        gbc.writeMem(0x4e42, { 0x9a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 018D
        gbc.setState(0x5b3e, 0xb92, 0xffc0, 0x55d8, 0xbe8a, 0x1737, 0x1, 0x0);
        gbc.writeMem(0x5b3e, { 0x9a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb92, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 018E
        gbc.setState(0x17c6, 0x5355, 0x8be0, 0x2be, 0xa367, 0xda1f, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0x9a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5355, gbc.sp());
        EXPECT(0x17c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 018F
        gbc.setState(0xa7f9, 0xb0cb, 0x39b0, 0x8d64, 0x237d, 0xa895, 0x1, 0x1);
        gbc.writeMem(0xa7f9, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb0cb, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa7f9));
        // 9A 0190
        gbc.setState(0x9866, 0x4e03, 0xf6f0, 0x927f, 0x27bb, 0xfddf, 0x0, 0x1);
        gbc.writeMem(0x9866, { 0x9a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4e03, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9866));
        // 9A 0191
        gbc.setState(0x6d6b, 0x507c, 0xd340, 0xd3a9, 0x7f2c, 0x108f, 0x1, 0x0);
        gbc.writeMem(0x6d6b, { 0x9a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x507c, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0192
        gbc.setState(0x1529, 0x74fc, 0x3910, 0x8501, 0x884, 0x9ebb, 0x0, 0x1);
        gbc.writeMem(0x1529, { 0x9a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x74fc, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0193
        gbc.setState(0x70e2, 0x8aca, 0xb8b0, 0xfa06, 0x625d, 0x6238, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0x9a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0x70e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0194
        gbc.setState(0x5773, 0x5e63, 0xbb70, 0x6bf6, 0x7c80, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x5773, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5e63, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0195
        gbc.setState(0x94c5, 0xfb97, 0x33e0, 0xc1f7, 0xcbf, 0x818c, 0x0, 0x0);
        gbc.writeMem(0x94c5, { 0x9a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfb97, gbc.sp());
        EXPECT(0x94c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x94c5));
        // 9A 0196
        gbc.setState(0x7cbf, 0xf3c8, 0x75f0, 0x7d67, 0xb4e5, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0x7cbf, { 0x9a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf3c8, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0197
        gbc.setState(0x4e6e, 0xee16, 0xda50, 0x4df3, 0x3d0e, 0x37f8, 0x0, 0x1);
        gbc.writeMem(0x4e6e, { 0x9a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xee16, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0199
        gbc.setState(0xc227, 0x303f, 0x8c40, 0xdcf4, 0xe60, 0x1078, 0x0, 0x0);
        gbc.writeMem(0xc227, { 0x9a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0xc228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc227));
        // 9A 019A
        gbc.setState(0xe54d, 0xa287, 0x39b0, 0x7c62, 0x4c6b, 0x20fa, 0x0, 0x0);
        gbc.writeMem(0xe54d, { 0x9a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa287, gbc.sp());
        EXPECT(0xe54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe54d));
        // 9A 019B
        gbc.setState(0x71e5, 0x63b5, 0x80c0, 0xbcb2, 0xce4a, 0xadcd, 0x1, 0x0);
        gbc.writeMem(0x71e5, { 0x9a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 019C
        gbc.setState(0xe330, 0x53d3, 0x8850, 0x3ab2, 0xf64f, 0x26c7, 0x0, 0x1);
        gbc.writeMem(0xe330, { 0x9a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0xe331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe330));
        // 9A 019D
        gbc.setState(0x170f, 0x40a0, 0x5f60, 0xd357, 0x4591, 0xb7ba, 0x1, 0x0);
        gbc.writeMem(0x170f, { 0x9a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x40a0, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 019E
        gbc.setState(0x5829, 0x6efe, 0xd7a0, 0x2eb4, 0xc7a8, 0x5a5b, 0x1, 0x1);
        gbc.writeMem(0x5829, { 0x9a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6efe, gbc.sp());
        EXPECT(0x582a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 019F
        gbc.setState(0xdbd1, 0x4a7d, 0xa9f0, 0xef20, 0xad1e, 0xccb2, 0x1, 0x0);
        gbc.writeMem(0xdbd1, { 0x9a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4a7d, gbc.sp());
        EXPECT(0xdbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdbd1));
        // 9A 01A0
        gbc.setState(0x6f48, 0x1b0d, 0x3210, 0x4590, 0xbc13, 0x98f7, 0x0, 0x1);
        gbc.writeMem(0x6f48, { 0x9a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1b0d, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01A1
        gbc.setState(0x8c7c, 0x4469, 0x45e0, 0x841, 0x86ba, 0xb6d7, 0x0, 0x0);
        gbc.writeMem(0x8c7c, { 0x9a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0x8c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8c7c));
        // 9A 01A2
        gbc.setState(0xde3c, 0x9651, 0x8b60, 0xaf67, 0xf79f, 0xce8e, 0x0, 0x0);
        gbc.writeMem(0xde3c, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9651, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xde3c));
        // 9A 01A3
        gbc.setState(0x5afd, 0x824, 0xd810, 0xafd5, 0xd977, 0xdf9c, 0x1, 0x0);
        gbc.writeMem(0x5afd, { 0x9a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x824, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01A4
        gbc.setState(0x4712, 0x29d9, 0xe4d0, 0xcdf9, 0x616, 0xfe93, 0x0, 0x0);
        gbc.writeMem(0x4712, { 0x9a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01A5
        gbc.setState(0x79c5, 0xae53, 0x2c10, 0x7daa, 0x9b17, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x79c5, { 0x9a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae53, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01A6
        gbc.setState(0x8e74, 0xa966, 0xc6c0, 0x585e, 0x4ae4, 0xb5e, 0x1, 0x0);
        gbc.writeMem(0x8e74, { 0x9a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa966, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8e74));
        // 9A 01A7
        gbc.setState(0x6a, 0x3172, 0x3030, 0x2e54, 0x1917, 0xd095, 0x0, 0x0);
        gbc.writeMem(0x6a, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3172, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01A8
        gbc.setState(0x34a3, 0xa9c9, 0x6f40, 0x3028, 0x82ce, 0xac7b, 0x1, 0x0);
        gbc.writeMem(0x34a3, { 0x9a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa9c9, gbc.sp());
        EXPECT(0x34a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01A9
        gbc.setState(0x214c, 0x3f10, 0xdd90, 0x234c, 0xcae4, 0x1c4e, 0x0, 0x1);
        gbc.writeMem(0x214c, { 0x9a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3f10, gbc.sp());
        EXPECT(0x214d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01AB
        gbc.setState(0x8d5f, 0xe1a0, 0x3020, 0x1174, 0x1bc3, 0x7147, 0x0, 0x0);
        gbc.writeMem(0x8d5f, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe1a0, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d5f));
        // 9A 01AC
        gbc.setState(0x40e0, 0xd8f4, 0x9d0, 0x92c0, 0xf524, 0x699f, 0x1, 0x1);
        gbc.writeMem(0x40e0, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd8f4, gbc.sp());
        EXPECT(0x40e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01AD
        gbc.setState(0x83d2, 0x7f7c, 0x12c0, 0xd3aa, 0x7159, 0x118f, 0x1, 0x1);
        gbc.writeMem(0x83d2, { 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7f7c, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x83d2));
        // 9A 01AE
        gbc.setState(0xc5ef, 0x7d45, 0xa930, 0x6f6b, 0xbbc7, 0xef1f, 0x0, 0x1);
        gbc.writeMem(0xc5ef, { 0x9a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0xc5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc5ef));
        // 9A 01AF
        gbc.setState(0xc2e2, 0xece2, 0x11e0, 0xaa7, 0x7eb8, 0xfdd6, 0x1, 0x0);
        gbc.writeMem(0xc2e2, { 0x9a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc2e2));
        // 9A 01B0
        gbc.setState(0x22d0, 0xa1f6, 0x4260, 0x97df, 0x39b8, 0xc030, 0x0, 0x0);
        gbc.writeMem(0x22d0, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x22d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01B1
        gbc.setState(0x6bbb, 0xd1ba, 0x6d00, 0xf8f9, 0xf94c, 0xb6df, 0x1, 0x1);
        gbc.writeMem(0x6bbb, { 0x9a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd1ba, gbc.sp());
        EXPECT(0x6bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01B2
        gbc.setState(0x72c5, 0xebd8, 0xe120, 0x4e99, 0xce51, 0x1473, 0x1, 0x1);
        gbc.writeMem(0x72c5, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xebd8, gbc.sp());
        EXPECT(0x72c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01B3
        gbc.setState(0xe8fa, 0xdef2, 0x49b0, 0x6fad, 0xc196, 0x4e33, 0x0, 0x1);
        gbc.writeMem(0xe8fa, { 0x9a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdef2, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe8fa));
        // 9A 01B4
        gbc.setState(0xdc4b, 0x1d16, 0x8d0, 0x1ebf, 0xfe76, 0x69db, 0x1, 0x0);
        gbc.writeMem(0xdc4b, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0xdc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdc4b));
        // 9A 01B5
        gbc.setState(0xac30, 0xc97, 0x7cb0, 0xfc2e, 0xd9ef, 0x88f4, 0x0, 0x0);
        gbc.writeMem(0xac30, { 0x9a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xac30));
        // 9A 01B6
        gbc.setState(0x32e1, 0x218c, 0xab60, 0x8751, 0xa5fd, 0x8fa5, 0x0, 0x1);
        gbc.writeMem(0x32e1, { 0x9a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x218c, gbc.sp());
        EXPECT(0x32e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01B7
        gbc.setState(0xa412, 0xa0a1, 0xc050, 0x7423, 0x753, 0xb144, 0x1, 0x1);
        gbc.writeMem(0xa412, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0xa413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa412));
        // 9A 01B8
        gbc.setState(0x3bcf, 0x2bb2, 0x2d30, 0x9723, 0xab5b, 0xd948, 0x0, 0x1);
        gbc.writeMem(0x3bcf, { 0x9a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0x3bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01B9
        gbc.setState(0x7710, 0x85d8, 0xd580, 0xd996, 0x84d5, 0xd92a, 0x0, 0x0);
        gbc.writeMem(0x7710, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x85d8, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01BA
        gbc.setState(0xe2c4, 0xeba0, 0x4030, 0xa68, 0x1b80, 0xa55f, 0x0, 0x0);
        gbc.writeMem(0xe2c4, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe2c4));
        // 9A 01BB
        gbc.setState(0xcd60, 0xfd56, 0xc770, 0xeaf1, 0xcaec, 0x431, 0x1, 0x1);
        gbc.writeMem(0xcd60, { 0x9a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd56, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcd60));
        // 9A 01BD
        gbc.setState(0xbd6d, 0x2a1c, 0xe830, 0x9d9, 0x6631, 0xdb8c, 0x0, 0x0);
        gbc.writeMem(0xbd6d, { 0x9a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbd6d));
        // 9A 01BF
        gbc.setState(0xd2e6, 0x362b, 0x57e0, 0x69b1, 0xf230, 0xf4cb, 0x0, 0x1);
        gbc.writeMem(0xd2e6, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x362b, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd2e6));
        // 9A 01C0
        gbc.setState(0x4f0c, 0x5482, 0x5020, 0x3551, 0x6d61, 0xa123, 0x0, 0x1);
        gbc.writeMem(0x4f0c, { 0x9a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01C1
        gbc.setState(0xc622, 0x8769, 0x7120, 0x6b7d, 0x4eab, 0x1c29, 0x1, 0x1);
        gbc.writeMem(0xc622, { 0x9a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8769, gbc.sp());
        EXPECT(0xc623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc622));
        // 9A 01C2
        gbc.setState(0x68cd, 0x62c7, 0x1c60, 0x9647, 0x13b8, 0xd014, 0x1, 0x0);
        gbc.writeMem(0x68cd, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x62c7, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01C3
        gbc.setState(0x218c, 0x16d6, 0xc640, 0x9c88, 0x836a, 0x1e10, 0x1, 0x0);
        gbc.writeMem(0x218c, { 0x9a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16d6, gbc.sp());
        EXPECT(0x218d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01C4
        gbc.setState(0x6bb6, 0x1c8f, 0x2af0, 0xa5d8, 0x9f01, 0xf761, 0x1, 0x1);
        gbc.writeMem(0x6bb6, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1c8f, gbc.sp());
        EXPECT(0x6bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01C5
        gbc.setState(0xbdda, 0x96bd, 0x1fa0, 0xcef4, 0xf268, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0xbdda, { 0x9a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0xbddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbdda));
        // 9A 01C6
        gbc.setState(0x507f, 0x9df7, 0x2730, 0x502c, 0xc855, 0x5e3d, 0x1, 0x0);
        gbc.writeMem(0x507f, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01C7
        gbc.setState(0x10eb, 0x1317, 0x3a30, 0x6fb4, 0xc3a6, 0x2733, 0x1, 0x0);
        gbc.writeMem(0x10eb, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0x10ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01C8
        gbc.setState(0x7df2, 0x7bf9, 0x1310, 0x7249, 0xaf7c, 0x7522, 0x0, 0x0);
        gbc.writeMem(0x7df2, { 0x9a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7bf9, gbc.sp());
        EXPECT(0x7df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01C9
        gbc.setState(0xa271, 0x842b, 0xfe40, 0x7113, 0x7251, 0x231d, 0x0, 0x1);
        gbc.writeMem(0xa271, { 0x9a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x842b, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa271));
        // 9A 01CA
        gbc.setState(0x9693, 0xfe00, 0x1a70, 0x6729, 0x2e99, 0xb9f9, 0x1, 0x0);
        gbc.writeMem(0x9693, { 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9693));
        // 9A 01CB
        gbc.setState(0xa311, 0x435, 0xe470, 0x2304, 0xa79f, 0x6e7a, 0x0, 0x0);
        gbc.writeMem(0xa311, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x435, gbc.sp());
        EXPECT(0xa312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa311));
        // 9A 01CC
        gbc.setState(0xe897, 0x8121, 0xb6d0, 0x275d, 0x4fd8, 0x2e65, 0x1, 0x0);
        gbc.writeMem(0xe897, { 0x9a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe897));
        // 9A 01CD
        gbc.setState(0xa7e7, 0xbb95, 0x1030, 0xcfe1, 0x4673, 0xa1ee, 0x1, 0x0);
        gbc.writeMem(0xa7e7, { 0x9a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbb95, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa7e7));
        // 9A 01CE
        gbc.setState(0x37ae, 0xb3a3, 0x8c70, 0xd31b, 0x23c5, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0x37ae, { 0x9a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb3a3, gbc.sp());
        EXPECT(0x37af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01CF
        gbc.setState(0xa2f1, 0xc810, 0x9f80, 0xfac7, 0x856e, 0xfa49, 0x0, 0x1);
        gbc.writeMem(0xa2f1, { 0x9a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc810, gbc.sp());
        EXPECT(0xa2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa2f1));
        // 9A 01D0
        gbc.setState(0x74de, 0xf32b, 0x9c60, 0xd906, 0x266c, 0x2e12, 0x1, 0x1);
        gbc.writeMem(0x74de, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf32b, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01D1
        gbc.setState(0x1333, 0x656b, 0x24b0, 0x2cdd, 0xf6af, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0x1333, { 0x9a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x656b, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01D2
        gbc.setState(0xb1f9, 0x9594, 0x8360, 0xe8af, 0xc429, 0xb321, 0x0, 0x1);
        gbc.writeMem(0xb1f9, { 0x9a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb1f9));
        // 9A 01D3
        gbc.setState(0xc62a, 0x45bb, 0x92e0, 0x2b76, 0x7269, 0x6f, 0x0, 0x1);
        gbc.writeMem(0xc62a, { 0x9a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x45bb, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc62a));
        // 9A 01D4
        gbc.setState(0x6a52, 0xd096, 0xc160, 0xf89b, 0xac45, 0x3002, 0x1, 0x1);
        gbc.writeMem(0x6a52, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd096, gbc.sp());
        EXPECT(0x6a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01D5
        gbc.setState(0xc1ac, 0xe5c4, 0x7390, 0x9f17, 0xd52f, 0x2e34, 0x0, 0x1);
        gbc.writeMem(0xc1ac, { 0x9a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0xc1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc1ac));
        // 9A 01D6
        gbc.setState(0x8d2f, 0x465e, 0xeaa0, 0x96f5, 0xd7e7, 0x541e, 0x0, 0x1);
        gbc.writeMem(0x8d2f, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x465e, gbc.sp());
        EXPECT(0x8d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d2f));
        // 9A 01D7
        gbc.setState(0xe648, 0x8d4, 0x83a0, 0xb1cc, 0xc72c, 0xb458, 0x1, 0x0);
        gbc.writeMem(0xe648, { 0x9a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe648));
        // 9A 01D8
        gbc.setState(0x41ae, 0x14ee, 0x3fe0, 0x6fa8, 0x8285, 0x18e1, 0x0, 0x1);
        gbc.writeMem(0x41ae, { 0x9a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x14ee, gbc.sp());
        EXPECT(0x41af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01DA
        gbc.setState(0x1945, 0x2b58, 0x76a0, 0x1a4d, 0x187f, 0x3259, 0x1, 0x1);
        gbc.writeMem(0x1945, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2b58, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01DB
        gbc.setState(0x42, 0xb8b7, 0x2cc0, 0xbca5, 0xee17, 0x92be, 0x0, 0x1);
        gbc.writeMem(0x42, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01DC
        gbc.setState(0x39d0, 0x575e, 0x82f0, 0xd395, 0x9d38, 0x8029, 0x0, 0x1);
        gbc.writeMem(0x39d0, { 0x9a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01DD
        gbc.setState(0x59cc, 0x9589, 0xf1b0, 0x87c4, 0x542d, 0xd35b, 0x0, 0x0);
        gbc.writeMem(0x59cc, { 0x9a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01DE
        gbc.setState(0xa5d5, 0x1b0b, 0x8e90, 0x8874, 0x4831, 0xb0dc, 0x0, 0x1);
        gbc.writeMem(0xa5d5, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0xa5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa5d5));
        // 9A 01DF
        gbc.setState(0xb3c3, 0xa728, 0x90c0, 0xd18, 0x697e, 0x340a, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0x9a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb3c3));
        // 9A 01E0
        gbc.setState(0xc5a3, 0xfb3d, 0x79e0, 0xb69a, 0x40d9, 0xb705, 0x1, 0x1);
        gbc.writeMem(0xc5a3, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc5a3));
        // 9A 01E1
        gbc.setState(0xc313, 0x9826, 0xf2b0, 0x4838, 0xac36, 0x8ea, 0x1, 0x1);
        gbc.writeMem(0xc313, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9826, gbc.sp());
        EXPECT(0xc314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc313));
        // 9A 01E2
        gbc.setState(0x6caa, 0xbd4a, 0xc6f0, 0xc820, 0x5465, 0x63ad, 0x0, 0x0);
        gbc.writeMem(0x6caa, { 0x9a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01E3
        gbc.setState(0x9e04, 0x26ac, 0x52a0, 0x8c33, 0xde85, 0xb3f1, 0x1, 0x0);
        gbc.writeMem(0x9e04, { 0x9a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x26ac, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9e04));
        // 9A 01E4
        gbc.setState(0xafa1, 0x75b8, 0x2340, 0x5517, 0xd5c3, 0xe787, 0x0, 0x0);
        gbc.writeMem(0xafa1, { 0x9a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x75b8, gbc.sp());
        EXPECT(0xafa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xafa1));
        // 9A 01E5
        gbc.setState(0xddfa, 0x8f53, 0xcad0, 0xf990, 0x77fc, 0xa152, 0x1, 0x0);
        gbc.writeMem(0xddfa, { 0x9a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0xddfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xddfa));
        // 9A 01E6
        gbc.setState(0x9c08, 0x2230, 0xf500, 0xf59f, 0xfc4c, 0xe5f3, 0x0, 0x1);
        gbc.writeMem(0x9c08, { 0x9a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2230, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9c08));
        // 9A 01E7
        gbc.setState(0x34f8, 0x465c, 0xa8f0, 0xe0b0, 0x491f, 0x932e, 0x0, 0x0);
        gbc.writeMem(0x34f8, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x34f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01E8
        gbc.setState(0xbd61, 0xdfed, 0x6ab0, 0x28ba, 0x6235, 0x44c, 0x1, 0x0);
        gbc.writeMem(0xbd61, { 0x9a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdfed, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbd61));
        // 9A 01E9
        gbc.setState(0xb14c, 0x1132, 0x4500, 0x1ad9, 0xd6af, 0xbd2a, 0x0, 0x0);
        gbc.writeMem(0xb14c, { 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1132, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb14c));
        // 9A 01EA
        gbc.setState(0x5b49, 0xdcb7, 0x3de0, 0x4ad7, 0x36d6, 0xd440, 0x0, 0x0);
        gbc.writeMem(0x5b49, { 0x9a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01EB
        gbc.setState(0x1291, 0x916, 0x9910, 0x2343, 0xbca2, 0x4a62, 0x0, 0x0);
        gbc.writeMem(0x1291, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x916, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01EC
        gbc.setState(0x6e7a, 0x2410, 0x52d0, 0x9dd, 0xcc2, 0x7f6d, 0x0, 0x0);
        gbc.writeMem(0x6e7a, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0x6e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01ED
        gbc.setState(0x591d, 0xf569, 0x2050, 0xd5ef, 0x48d3, 0xb1bc, 0x1, 0x1);
        gbc.writeMem(0x591d, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf569, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01EE
        gbc.setState(0x4969, 0x486c, 0xf6e0, 0x1d11, 0x3199, 0x66fd, 0x0, 0x1);
        gbc.writeMem(0x4969, { 0x9a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01EF
        gbc.setState(0xcdfb, 0xed32, 0xda50, 0x4f08, 0x9d69, 0xe561, 0x1, 0x0);
        gbc.writeMem(0xcdfb, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcdfb));
        // 9A 01F0
        gbc.setState(0x1a8, 0xcb18, 0x9240, 0xd820, 0x348a, 0x4482, 0x0, 0x1);
        gbc.writeMem(0x1a8, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0x1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F1
        gbc.setState(0x77c8, 0xdfc5, 0x77d0, 0x6a3e, 0x483e, 0xcf85, 0x0, 0x0);
        gbc.writeMem(0x77c8, { 0x9a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdfc5, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F2
        gbc.setState(0x6769, 0x3dd9, 0xe130, 0x844d, 0x558a, 0xfd34, 0x1, 0x0);
        gbc.writeMem(0x6769, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3dd9, gbc.sp());
        EXPECT(0x676a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F3
        gbc.setState(0x3bf3, 0x9d29, 0x79a0, 0xb5ec, 0xe550, 0xaf31, 0x1, 0x1);
        gbc.writeMem(0x3bf3, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9d29, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01F4
        gbc.setState(0x5214, 0xf06c, 0x79d0, 0x4a69, 0x4748, 0xc131, 0x0, 0x0);
        gbc.writeMem(0x5214, { 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf06c, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F5
        gbc.setState(0x4205, 0xbadd, 0xcda0, 0x36ea, 0x287e, 0xd903, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0x9a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F6
        gbc.setState(0x7fe4, 0x5634, 0xe900, 0xe452, 0x986c, 0xd230, 0x0, 0x0);
        gbc.writeMem(0x7fe4, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5634, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01F7
        gbc.setState(0x32bb, 0xcdca, 0x2630, 0x792f, 0x2b31, 0x9eb8, 0x1, 0x0);
        gbc.writeMem(0x32bb, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0x32bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01F8
        gbc.setState(0x6e8c, 0x9d14, 0x2df0, 0xc92c, 0xc506, 0x5a84, 0x1, 0x1);
        gbc.writeMem(0x6e8c, { 0x9a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01F9
        gbc.setState(0x919c, 0xdde0, 0x1c30, 0xf968, 0xb361, 0xd182, 0x0, 0x1);
        gbc.writeMem(0x919c, { 0x9a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdde0, gbc.sp());
        EXPECT(0x919d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x919c));
        // 9A 01FA
        gbc.setState(0x6771, 0x465a, 0xf010, 0xf9c7, 0x47c3, 0xc0df, 0x0, 0x1);
        gbc.writeMem(0x6771, { 0x9a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0x6772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01FB
        gbc.setState(0x94c7, 0x4727, 0xa710, 0xcf3f, 0x10b6, 0xb4ab, 0x0, 0x1);
        gbc.writeMem(0x94c7, { 0x9a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x94c7));
        // 9A 01FC
        gbc.setState(0x32e9, 0x9878, 0x7a50, 0xb28b, 0x3517, 0x33eb, 0x0, 0x0);
        gbc.writeMem(0x32e9, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 01FD
        gbc.setState(0x1555, 0x4b2, 0x7d50, 0x8fe5, 0xa439, 0x5d1c, 0x1, 0x0);
        gbc.writeMem(0x1555, { 0x9a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 01FE
        gbc.setState(0x83da, 0x9fe8, 0x6b30, 0xd042, 0xf326, 0xf8ee, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0x9a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9fe8, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x83da));
        // 9A 01FF
        gbc.setState(0x13db, 0x7227, 0x1f20, 0x5b8e, 0x766e, 0xf48a, 0x1, 0x0);
        gbc.writeMem(0x13db, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7227, gbc.sp());
        EXPECT(0x13dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0201
        gbc.setState(0x48e4, 0x4958, 0x95d0, 0x126c, 0x90c4, 0x64fd, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0x9a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4958, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0203
        gbc.setState(0x7d35, 0xb9f6, 0x96b0, 0xec2, 0xa4b5, 0x6713, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0x9a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb9f6, gbc.sp());
        EXPECT(0x7d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0204
        gbc.setState(0x187a, 0x5559, 0xa920, 0x5057, 0xbf9f, 0x7825, 0x1, 0x1);
        gbc.writeMem(0x187a, { 0x9a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x187b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0205
        gbc.setState(0x65b5, 0xf01, 0xfc00, 0x1eed, 0xc60c, 0x6cc0, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0x9a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf01, gbc.sp());
        EXPECT(0x65b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0206
        gbc.setState(0xb26e, 0xc036, 0xb0b0, 0xf5b0, 0xa5d5, 0x3e84, 0x0, 0x0);
        gbc.writeMem(0xb26e, { 0x9a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc036, gbc.sp());
        EXPECT(0xb26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb26e));
        // 9A 0207
        gbc.setState(0xd6ce, 0x4b18, 0x9040, 0x1a23, 0xbe55, 0xb1d1, 0x0, 0x1);
        gbc.writeMem(0xd6ce, { 0x9a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd6ce));
        // 9A 0209
        gbc.setState(0x1c37, 0x19ac, 0x4a20, 0x8a8e, 0x83e2, 0x6f45, 0x0, 0x1);
        gbc.writeMem(0x1c37, { 0x9a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x19ac, gbc.sp());
        EXPECT(0x1c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 020A
        gbc.setState(0x2ed6, 0x9ad, 0x93a0, 0xed85, 0xabb7, 0x35ab, 0x1, 0x1);
        gbc.writeMem(0x2ed6, { 0x9a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9ad, gbc.sp());
        EXPECT(0x2ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 020B
        gbc.setState(0xa4d2, 0xdbf5, 0xf2e0, 0x9843, 0xd0c, 0x45d2, 0x1, 0x0);
        gbc.writeMem(0xa4d2, { 0x9a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0xa4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa4d2));
        // 9A 020C
        gbc.setState(0x2954, 0x8132, 0xe090, 0x99db, 0x7aac, 0xa177, 0x1, 0x0);
        gbc.writeMem(0x2954, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8132, gbc.sp());
        EXPECT(0x2955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 020E
        gbc.setState(0xd37a, 0x3316, 0xe3d0, 0x541e, 0x7dec, 0x4c14, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd37a));
        // 9A 020F
        gbc.setState(0xeb5d, 0xa2d, 0x3e90, 0xc9b3, 0xfe40, 0x51b1, 0x1, 0x1);
        gbc.writeMem(0xeb5d, { 0x9a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeb5d));
        // 9A 0210
        gbc.setState(0xa909, 0xe7d6, 0x9fb0, 0xcb4d, 0x6bed, 0x6909, 0x1, 0x1);
        gbc.writeMem(0xa909, { 0x9a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0xa90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa909));
        // 9A 0211
        gbc.setState(0x7334, 0x95df, 0x2c0, 0x16ed, 0xc34e, 0x4332, 0x0, 0x0);
        gbc.writeMem(0x7334, { 0x9a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x95df, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0212
        gbc.setState(0xdcc6, 0x18, 0x71b0, 0x280e, 0x2e9d, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0xdcc6, { 0x9a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x18, gbc.sp());
        EXPECT(0xdcc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdcc6));
        // 9A 0213
        gbc.setState(0xa2f2, 0x2b15, 0x22c0, 0xc0a, 0xc868, 0x69f1, 0x0, 0x0);
        gbc.writeMem(0xa2f2, { 0x9a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2b15, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa2f2));
        // 9A 0215
        gbc.setState(0xa252, 0xe448, 0x52c0, 0xe605, 0x98a0, 0x75f9, 0x1, 0x0);
        gbc.writeMem(0xa252, { 0x9a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe448, gbc.sp());
        EXPECT(0xa253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa252));
        // 9A 0217
        gbc.setState(0xc016, 0x26a0, 0xf060, 0x8b7b, 0x7550, 0x2e78, 0x0, 0x0);
        gbc.writeMem(0xc016, { 0x9a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x26a0, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc016));
        // 9A 0219
        gbc.setState(0x4f17, 0xf7df, 0x2250, 0x926c, 0xdd84, 0x3789, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf7df, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 021A
        gbc.setState(0x7f2c, 0xf01d, 0xa020, 0xc86d, 0x3fe, 0x4d81, 0x1, 0x1);
        gbc.writeMem(0x7f2c, { 0x9a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf01d, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 021B
        gbc.setState(0xac26, 0x977b, 0xa070, 0x84b1, 0x5fe6, 0x438e, 0x0, 0x1);
        gbc.writeMem(0xac26, { 0x9a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0xac27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xac26));
        // 9A 021C
        gbc.setState(0x7ef3, 0x58a7, 0x610, 0x7e04, 0x3b0b, 0xbfa7, 0x1, 0x0);
        gbc.writeMem(0x7ef3, { 0x9a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x58a7, gbc.sp());
        EXPECT(0x7ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 021E
        gbc.setState(0xed3f, 0xf868, 0xbe20, 0x6ad2, 0xf0a0, 0x301f, 0x1, 0x0);
        gbc.writeMem(0xed3f, { 0x9a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed3f));
        // 9A 021F
        gbc.setState(0x68f2, 0xcfa0, 0x2190, 0x384f, 0x86a7, 0x4f37, 0x0, 0x1);
        gbc.writeMem(0x68f2, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcfa0, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0221
        gbc.setState(0xab45, 0x3709, 0x8040, 0xa3a9, 0xfaee, 0xbae, 0x1, 0x1);
        gbc.writeMem(0xab45, { 0x9a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3709, gbc.sp());
        EXPECT(0xab46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xab45));
        // 9A 0222
        gbc.setState(0x692d, 0xa778, 0x8b30, 0xb78a, 0x1874, 0xfe0f, 0x1, 0x1);
        gbc.writeMem(0x692d, { 0x9a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa778, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0223
        gbc.setState(0x27fd, 0xd11c, 0x66a0, 0xdfbf, 0x1c6e, 0xa0f6, 0x1, 0x0);
        gbc.writeMem(0x27fd, { 0x9a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0224
        gbc.setState(0xbc6f, 0x35bd, 0x650, 0xf751, 0x4dbf, 0x5843, 0x1, 0x0);
        gbc.writeMem(0xbc6f, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x35bd, gbc.sp());
        EXPECT(0xbc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbc6f));
        // 9A 0225
        gbc.setState(0x7a1, 0xbf93, 0x2830, 0x6c6f, 0x4d29, 0x743c, 0x0, 0x0);
        gbc.writeMem(0x7a1, { 0x9a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0226
        gbc.setState(0x1d5e, 0x6b00, 0xb2f0, 0xa484, 0x8c3d, 0x4572, 0x1, 0x0);
        gbc.writeMem(0x1d5e, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6b00, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0227
        gbc.setState(0x1c2a, 0xc2dc, 0xebb0, 0x3ac8, 0xa89, 0xd6a5, 0x1, 0x0);
        gbc.writeMem(0x1c2a, { 0x9a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0x1c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0228
        gbc.setState(0x9442, 0x2961, 0x5310, 0xb106, 0xfb39, 0x8488, 0x1, 0x1);
        gbc.writeMem(0x9442, { 0x9a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9442));
        // 9A 0229
        gbc.setState(0xd42c, 0xa0b2, 0x4a0, 0xa71e, 0xee33, 0x2247, 0x1, 0x1);
        gbc.writeMem(0xd42c, { 0x9a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa0b2, gbc.sp());
        EXPECT(0xd42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd42c));
        // 9A 022A
        gbc.setState(0x2447, 0x62de, 0x3760, 0xf50c, 0x3d6a, 0x7c2, 0x0, 0x1);
        gbc.writeMem(0x2447, { 0x9a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0x2448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 022B
        gbc.setState(0x4af1, 0x619e, 0x2f80, 0x416d, 0x5cd9, 0xd75d, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 022C
        gbc.setState(0x3ad6, 0x72db, 0x7880, 0x3b, 0xb4ba, 0x17b9, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x72db, gbc.sp());
        EXPECT(0x3ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 022D
        gbc.setState(0x8d9c, 0x6bcf, 0xba10, 0x523b, 0xa688, 0xe000, 0x1, 0x0);
        gbc.writeMem(0x8d9c, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0x8d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d9c));
        // 9A 022E
        gbc.setState(0xaab7, 0xe5ba, 0x1cc0, 0x28b5, 0xbda6, 0xa369, 0x1, 0x0);
        gbc.writeMem(0xaab7, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaab7));
        // 9A 022F
        gbc.setState(0x8b36, 0xb240, 0xa320, 0xced6, 0x3474, 0x593c, 0x1, 0x0);
        gbc.writeMem(0x8b36, { 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8b36));
        // 9A 0230
        gbc.setState(0x45a1, 0x5900, 0xcbc0, 0x3161, 0xa153, 0x6e65, 0x1, 0x0);
        gbc.writeMem(0x45a1, { 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0231
        gbc.setState(0xec75, 0xf006, 0x1070, 0x2002, 0xeb0d, 0x99d2, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf006, gbc.sp());
        EXPECT(0xec76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xec75));
        // 9A 0232
        gbc.setState(0xc8ed, 0xe950, 0xd330, 0xbf1b, 0xb7c4, 0xd51b, 0x0, 0x1);
        gbc.writeMem(0xc8ed, { 0x9a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe950, gbc.sp());
        EXPECT(0xc8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc8ed));
        // 9A 0233
        gbc.setState(0x7cbc, 0x6a6d, 0x6920, 0xd0f8, 0xb2b7, 0x2a8b, 0x1, 0x1);
        gbc.writeMem(0x7cbc, { 0x9a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6a6d, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0234
        gbc.setState(0x5b95, 0x625, 0x20a0, 0x5e96, 0x3fcc, 0xc05e, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0235
        gbc.setState(0xb03a, 0x9560, 0xfe40, 0x60ee, 0xe7d1, 0x2dd9, 0x0, 0x0);
        gbc.writeMem(0xb03a, { 0x9a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0xb03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb03a));
        // 9A 0236
        gbc.setState(0x7c94, 0x31de, 0x4b30, 0x72ca, 0x5e7, 0xf8cb, 0x1, 0x0);
        gbc.writeMem(0x7c94, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x31de, gbc.sp());
        EXPECT(0x7c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0237
        gbc.setState(0x9b6f, 0xa46b, 0x1190, 0x481a, 0x182c, 0xf765, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0x9a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9b6f));
        // 9A 0238
        gbc.setState(0x88e2, 0xec97, 0x770, 0x1e40, 0xd69c, 0x4eeb, 0x1, 0x0);
        gbc.writeMem(0x88e2, { 0x9a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xec97, gbc.sp());
        EXPECT(0x88e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x88e2));
        // 9A 0239
        gbc.setState(0xa9ec, 0x49ec, 0xfdb0, 0xe3b, 0x76d9, 0x94a8, 0x1, 0x1);
        gbc.writeMem(0xa9ec, { 0x9a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x49ec, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa9ec));
        // 9A 023A
        gbc.setState(0x5dc5, 0xb4b5, 0xaf70, 0xe59b, 0xab27, 0x2ec9, 0x1, 0x0);
        gbc.writeMem(0x5dc5, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0x5dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 023B
        gbc.setState(0x972, 0x88, 0xa420, 0x4195, 0xf9e9, 0x3ff8, 0x0, 0x0);
        gbc.writeMem(0x972, { 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x88, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 023C
        gbc.setState(0xfd7, 0x38ed, 0x5950, 0x5033, 0x1f39, 0x629, 0x0, 0x0);
        gbc.writeMem(0xfd7, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0xfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 023D
        gbc.setState(0x6b, 0x28c5, 0xce70, 0xfc85, 0xc9b4, 0xfb59, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0x9a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 023E
        gbc.setState(0x49fe, 0x94da, 0xf590, 0xaa8b, 0xa351, 0x3e7a, 0x1, 0x0);
        gbc.writeMem(0x49fe, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 023F
        gbc.setState(0xa99b, 0x762b, 0xe8d0, 0x9f20, 0xcc6e, 0xaaea, 0x1, 0x0);
        gbc.writeMem(0xa99b, { 0x9a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa99b));
        // 9A 0240
        gbc.setState(0xe499, 0xba1f, 0xb530, 0x3567, 0x2d4e, 0x4088, 0x0, 0x0);
        gbc.writeMem(0xe499, { 0x9a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0xe49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe499));
        // 9A 0241
        gbc.setState(0x1f18, 0xd170, 0xea60, 0x80f9, 0x2fea, 0xe5eb, 0x0, 0x1);
        gbc.writeMem(0x1f18, { 0x9a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd170, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0243
        gbc.setState(0x8f53, 0xaff9, 0xcad0, 0xf080, 0x6689, 0x4f, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0x9a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaff9, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8f53));
        // 9A 0244
        gbc.setState(0x24f2, 0x6246, 0x27e0, 0xb6, 0x60ad, 0x9cb0, 0x0, 0x0);
        gbc.writeMem(0x24f2, { 0x9a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6246, gbc.sp());
        EXPECT(0x24f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0246
        gbc.setState(0x8103, 0x84ef, 0x4410, 0x9635, 0xe65a, 0x9e9b, 0x0, 0x0);
        gbc.writeMem(0x8103, { 0x9a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x84ef, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8103));
        // 9A 0248
        gbc.setState(0xe2f0, 0xff78, 0x8a00, 0x3368, 0x9abd, 0x58b8, 0x1, 0x1);
        gbc.writeMem(0xe2f0, { 0x9a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe2f0));
        // 9A 0249
        gbc.setState(0x9479, 0xd002, 0x15f0, 0x146c, 0x75, 0xb599, 0x1, 0x1);
        gbc.writeMem(0x9479, { 0x9a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd002, gbc.sp());
        EXPECT(0x947a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9479));
        // 9A 024A
        gbc.setState(0x47b7, 0x860f, 0x6640, 0xb1be, 0xbb88, 0xaf50, 0x1, 0x0);
        gbc.writeMem(0x47b7, { 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x47b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 024B
        gbc.setState(0x99c8, 0x5fc8, 0x4f60, 0x8b89, 0x58c1, 0x54df, 0x0, 0x0);
        gbc.writeMem(0x99c8, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5fc8, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x99c8));
        // 9A 024C
        gbc.setState(0xef76, 0xccf, 0xd170, 0x3e7f, 0xc29d, 0x14b1, 0x1, 0x0);
        gbc.writeMem(0xef76, { 0x9a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xef76));
        // 9A 024E
        gbc.setState(0x8b02, 0xf03b, 0xf390, 0xa3f7, 0x16d8, 0xda4e, 0x0, 0x1);
        gbc.writeMem(0x8b02, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf03b, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8b02));
        // 9A 024F
        gbc.setState(0x2262, 0xdc6a, 0xefd0, 0xda98, 0xcce8, 0x8dbe, 0x1, 0x1);
        gbc.writeMem(0x2262, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdc6a, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0251
        gbc.setState(0x9ba7, 0x92c4, 0x4e40, 0x128d, 0x95d2, 0xf511, 0x1, 0x1);
        gbc.writeMem(0x9ba7, { 0x9a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x92c4, gbc.sp());
        EXPECT(0x9ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9ba7));
        // 9A 0252
        gbc.setState(0x4173, 0xa490, 0xaa30, 0x54c, 0xa0c7, 0x872a, 0x0, 0x1);
        gbc.writeMem(0x4173, { 0x9a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa490, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0253
        gbc.setState(0x8bce, 0x3c9f, 0x75d0, 0x2287, 0x405d, 0x4047, 0x0, 0x1);
        gbc.writeMem(0x8bce, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3c9f, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8bce));
        // 9A 0254
        gbc.setState(0x3d39, 0xff3e, 0x1c90, 0xb90e, 0x5d54, 0x77b6, 0x0, 0x1);
        gbc.writeMem(0x3d39, { 0x9a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0255
        gbc.setState(0x62de, 0x5503, 0x1760, 0xf5ae, 0xf2da, 0x6d61, 0x0, 0x1);
        gbc.writeMem(0x62de, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5503, gbc.sp());
        EXPECT(0x62df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0257
        gbc.setState(0xb3e7, 0x12eb, 0x58d0, 0xa5a4, 0x876e, 0x23b, 0x1, 0x0);
        gbc.writeMem(0xb3e7, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb3e7));
        // 9A 0258
        gbc.setState(0x569b, 0x83d5, 0x61a0, 0xadbf, 0x559d, 0x8d92, 0x1, 0x1);
        gbc.writeMem(0x569b, { 0x9a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x569c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0259
        gbc.setState(0xb838, 0x1e6a, 0x8e60, 0x1f71, 0x832d, 0xe82b, 0x1, 0x1);
        gbc.writeMem(0xb838, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1e6a, gbc.sp());
        EXPECT(0xb839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb838));
        // 9A 025A
        gbc.setState(0x15d1, 0x72f0, 0x3360, 0xa023, 0x8e3, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x15d1, { 0x9a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x15d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 025B
        gbc.setState(0xdb98, 0x8ca9, 0xfc10, 0xe7eb, 0x2773, 0x3c21, 0x1, 0x0);
        gbc.writeMem(0xdb98, { 0x9a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8ca9, gbc.sp());
        EXPECT(0xdb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb98));
        // 9A 025C
        gbc.setState(0x7ef5, 0x8d0f, 0xf850, 0xa0c5, 0xe12, 0xa143, 0x1, 0x1);
        gbc.writeMem(0x7ef5, { 0x9a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8d0f, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 025D
        gbc.setState(0x9e80, 0xd7c, 0x74b0, 0x6157, 0x85b3, 0x1a4f, 0x0, 0x0);
        gbc.writeMem(0x9e80, { 0x9a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9e80));
        // 9A 025E
        gbc.setState(0x78fd, 0x5d6a, 0x8190, 0x9c3a, 0x9209, 0x943d, 0x1, 0x1);
        gbc.writeMem(0x78fd, { 0x9a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0x78fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 025F
        gbc.setState(0x402d, 0xaa6a, 0xcbd0, 0x5a61, 0xd6fc, 0x769, 0x1, 0x0);
        gbc.writeMem(0x402d, { 0x9a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaa6a, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0261
        gbc.setState(0x25fb, 0x2777, 0x2170, 0xc496, 0x8328, 0x5305, 0x1, 0x0);
        gbc.writeMem(0x25fb, { 0x9a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2777, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0262
        gbc.setState(0x3d87, 0x9068, 0xc1d0, 0x5277, 0xd4c9, 0x5d43, 0x1, 0x1);
        gbc.writeMem(0x3d87, { 0x9a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9068, gbc.sp());
        EXPECT(0x3d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0263
        gbc.setState(0xd819, 0xc347, 0x63f0, 0xc06d, 0xe513, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0xd819, { 0x9a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc347, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd819));
        // 9A 0264
        gbc.setState(0x48eb, 0x2d28, 0x2a00, 0x4757, 0x9da8, 0xc97c, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0x9a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0265
        gbc.setState(0x5364, 0x79e2, 0x6450, 0xc9, 0x90f7, 0xbc27, 0x0, 0x0);
        gbc.writeMem(0x5364, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x79e2, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0266
        gbc.setState(0xd639, 0x8eb6, 0xc20, 0x78a6, 0x3287, 0xfa73, 0x1, 0x0);
        gbc.writeMem(0xd639, { 0x9a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd639));
        // 9A 0267
        gbc.setState(0x5835, 0xdfa7, 0x4d00, 0x5d27, 0xdaf0, 0xb28a, 0x1, 0x0);
        gbc.writeMem(0x5835, { 0x9a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdfa7, gbc.sp());
        EXPECT(0x5836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0268
        gbc.setState(0x61ff, 0xe2d, 0x1ee0, 0xa651, 0xbdd5, 0xe93c, 0x1, 0x0);
        gbc.writeMem(0x61ff, { 0x9a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x6200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0269
        gbc.setState(0x8ee8, 0x1e69, 0x1790, 0x4f1, 0x8642, 0x4905, 0x1, 0x0);
        gbc.writeMem(0x8ee8, { 0x9a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1e69, gbc.sp());
        EXPECT(0x8ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ee8));
        // 9A 026A
        gbc.setState(0x68cf, 0x5340, 0x6ee0, 0xc70a, 0xd677, 0x7ebb, 0x1, 0x1);
        gbc.writeMem(0x68cf, { 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5340, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 026B
        gbc.setState(0x6640, 0xff23, 0xd700, 0x486f, 0xb05, 0xe5d1, 0x0, 0x0);
        gbc.writeMem(0x6640, { 0x9a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xff23, gbc.sp());
        EXPECT(0x6641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 026C
        gbc.setState(0xc952, 0x1044, 0xb580, 0x5ce4, 0x57cc, 0x576e, 0x1, 0x0);
        gbc.writeMem(0xc952, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0xc953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc952));
        // 9A 026D
        gbc.setState(0x8480, 0x304f, 0xf560, 0xc771, 0xe4f, 0x9ab, 0x0, 0x1);
        gbc.writeMem(0x8480, { 0x9a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x304f, gbc.sp());
        EXPECT(0x8481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8480));
        // 9A 026E
        gbc.setState(0x1ce7, 0x4507, 0x82e0, 0x5178, 0x4be1, 0x2d8, 0x1, 0x1);
        gbc.writeMem(0x1ce7, { 0x9a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 026F
        gbc.setState(0xdb69, 0x7d85, 0x2cb0, 0x9101, 0xe2a8, 0x906d, 0x0, 0x1);
        gbc.writeMem(0xdb69, { 0x9a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xdb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb69));
        // 9A 0270
        gbc.setState(0xdde8, 0x632b, 0xfd0, 0x6832, 0x1fa3, 0x386a, 0x1, 0x0);
        gbc.writeMem(0xdde8, { 0x9a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x632b, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdde8));
        // 9A 0271
        gbc.setState(0x67d2, 0x689a, 0xe710, 0xa010, 0x3208, 0xdd39, 0x1, 0x1);
        gbc.writeMem(0x67d2, { 0x9a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x689a, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0272
        gbc.setState(0x5374, 0x9bc9, 0x3ab0, 0x97a9, 0x79bd, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0x5374, { 0x9a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9bc9, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0273
        gbc.setState(0x89c1, 0x349c, 0x3510, 0x5f7, 0x6370, 0x6cda, 0x1, 0x1);
        gbc.writeMem(0x89c1, { 0x9a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x349c, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x89c1));
        // 9A 0274
        gbc.setState(0xd851, 0x916, 0xa0, 0x4210, 0xf58f, 0xc356, 0x0, 0x0);
        gbc.writeMem(0xd851, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x916, gbc.sp());
        EXPECT(0xd852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd851));
        // 9A 0276
        gbc.setState(0x820, 0xf6af, 0xa5a0, 0x63aa, 0xc29f, 0x539c, 0x1, 0x0);
        gbc.writeMem(0x820, { 0x9a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf6af, gbc.sp());
        EXPECT(0x821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0277
        gbc.setState(0x724a, 0xfc8b, 0xd270, 0xa109, 0x47c5, 0xe0a4, 0x1, 0x0);
        gbc.writeMem(0x724a, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfc8b, gbc.sp());
        EXPECT(0x724b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0278
        gbc.setState(0xbbd, 0x7b92, 0xb2a0, 0xaf27, 0x21d1, 0xa9b5, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0x9a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0279
        gbc.setState(0xb831, 0x95ab, 0x19c0, 0x9788, 0xbfbd, 0xc594, 0x0, 0x0);
        gbc.writeMem(0xb831, { 0x9a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0xb832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb831));
        // 9A 027A
        gbc.setState(0x29b1, 0xf026, 0xa6f0, 0x7955, 0xe122, 0xaaa9, 0x0, 0x1);
        gbc.writeMem(0x29b1, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf026, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 027B
        gbc.setState(0xc3b, 0xbf0, 0xc920, 0x7a7b, 0xfa3f, 0x2dd5, 0x1, 0x1);
        gbc.writeMem(0xc3b, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf0, gbc.sp());
        EXPECT(0xc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 027C
        gbc.setState(0x572d, 0xd5d9, 0x9920, 0x61f2, 0xcad0, 0x4c0e, 0x1, 0x1);
        gbc.writeMem(0x572d, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd5d9, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 027D
        gbc.setState(0x2de, 0xd029, 0xef40, 0xa98c, 0x8672, 0x27fa, 0x0, 0x0);
        gbc.writeMem(0x2de, { 0x9a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 027E
        gbc.setState(0xab4d, 0xad49, 0xcf10, 0x7f31, 0x2438, 0x8e6f, 0x1, 0x1);
        gbc.writeMem(0xab4d, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0xab4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xab4d));
        // 9A 027F
        gbc.setState(0xc732, 0xb56e, 0xf410, 0xbc00, 0xc2db, 0x6701, 0x1, 0x1);
        gbc.writeMem(0xc732, { 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0xc733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc732));
        // 9A 0280
        gbc.setState(0x4446, 0xbcad, 0xe930, 0x13c5, 0x9ec9, 0xe89a, 0x1, 0x1);
        gbc.writeMem(0x4446, { 0x9a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbcad, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0282
        gbc.setState(0x3be, 0x5df, 0xeb80, 0x467e, 0xec6, 0xe391, 0x0, 0x0);
        gbc.writeMem(0x3be, { 0x9a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0x3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0283
        gbc.setState(0x9f4a, 0xe447, 0x67c0, 0xf155, 0xc08e, 0x18e9, 0x1, 0x0);
        gbc.writeMem(0x9f4a, { 0x9a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x9f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9f4a));
        // 9A 0284
        gbc.setState(0x79dc, 0xcee, 0xeef0, 0x1460, 0x7e21, 0x8238, 0x1, 0x0);
        gbc.writeMem(0x79dc, { 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcee, gbc.sp());
        EXPECT(0x79dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0285
        gbc.setState(0xcc87, 0x8a87, 0x9960, 0x59b, 0xf77f, 0x28e0, 0x0, 0x0);
        gbc.writeMem(0xcc87, { 0x9a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcc87));
        // 9A 0286
        gbc.setState(0x81f4, 0xf7d8, 0x6ef0, 0x2217, 0x390, 0xa30d, 0x0, 0x1);
        gbc.writeMem(0x81f4, { 0x9a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf7d8, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x81f4));
        // 9A 0287
        gbc.setState(0x47f9, 0x7d15, 0x5ea0, 0x7f66, 0x72d2, 0x7ac2, 0x1, 0x0);
        gbc.writeMem(0x47f9, { 0x9a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7d15, gbc.sp());
        EXPECT(0x47fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0288
        gbc.setState(0xee9b, 0xda00, 0x8440, 0x60f0, 0x8974, 0x4491, 0x1, 0x0);
        gbc.writeMem(0xee9b, { 0x9a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xda00, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xee9b));
        // 9A 028A
        gbc.setState(0x54d6, 0x8e66, 0x63d0, 0xb96, 0x2427, 0x7065, 0x1, 0x0);
        gbc.writeMem(0x54d6, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 028B
        gbc.setState(0x8482, 0x3247, 0x5a50, 0x1c8e, 0x3113, 0x1409, 0x0, 0x1);
        gbc.writeMem(0x8482, { 0x9a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3247, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8482));
        // 9A 028C
        gbc.setState(0x6ec9, 0x6bec, 0xa640, 0xc406, 0x80a6, 0x537d, 0x1, 0x0);
        gbc.writeMem(0x6ec9, { 0x9a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6bec, gbc.sp());
        EXPECT(0x6eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 028D
        gbc.setState(0x2235, 0xc491, 0x1730, 0x1670, 0x4639, 0x1b4b, 0x0, 0x0);
        gbc.writeMem(0x2235, { 0x9a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 028E
        gbc.setState(0x7156, 0xb04b, 0x590, 0xced, 0x98df, 0x3aa0, 0x0, 0x0);
        gbc.writeMem(0x7156, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb04b, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 028F
        gbc.setState(0xe12d, 0xf9a9, 0xb120, 0x6520, 0x5faa, 0xfd43, 0x1, 0x1);
        gbc.writeMem(0xe12d, { 0x9a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf9a9, gbc.sp());
        EXPECT(0xe12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe12d));
        // 9A 0290
        gbc.setState(0x4bdd, 0xa117, 0xd8f0, 0x1985, 0x4caf, 0x3ed5, 0x0, 0x0);
        gbc.writeMem(0x4bdd, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0x4bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0291
        gbc.setState(0xac3a, 0xa147, 0x4a20, 0xd07c, 0x1b34, 0xfb2d, 0x1, 0x1);
        gbc.writeMem(0xac3a, { 0x9a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa147, gbc.sp());
        EXPECT(0xac3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xac3a));
        // 9A 0292
        gbc.setState(0xe5ef, 0x565c, 0xcac0, 0x1c4a, 0xf2d2, 0xf8d3, 0x1, 0x1);
        gbc.writeMem(0xe5ef, { 0x9a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0xe5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe5ef));
        // 9A 0293
        gbc.setState(0x51df, 0x2838, 0x2920, 0x81d6, 0xeffe, 0x7b65, 0x0, 0x0);
        gbc.writeMem(0x51df, { 0x9a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2838, gbc.sp());
        EXPECT(0x51e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0294
        gbc.setState(0x2260, 0x4b20, 0xb330, 0x3cf7, 0x2172, 0x1554, 0x1, 0x1);
        gbc.writeMem(0x2260, { 0x9a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0x2261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0295
        gbc.setState(0x909b, 0xa308, 0x3410, 0x4dd8, 0x8d8, 0x4561, 0x0, 0x1);
        gbc.writeMem(0x909b, { 0x9a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x909b));
        // 9A 0296
        gbc.setState(0x663c, 0x81, 0xa320, 0x501b, 0x4355, 0x40e2, 0x1, 0x0);
        gbc.writeMem(0x663c, { 0x9a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0297
        gbc.setState(0xed77, 0xffa6, 0xf9e0, 0xacb6, 0xa9e3, 0xea58, 0x0, 0x0);
        gbc.writeMem(0xed77, { 0x9a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0xed78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed77));
        // 9A 0298
        gbc.setState(0x97dc, 0x4b7d, 0xb570, 0xf16d, 0xc26c, 0xc497, 0x0, 0x0);
        gbc.writeMem(0x97dc, { 0x9a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x97dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x97dc));
        // 9A 0299
        gbc.setState(0x51fc, 0x3e22, 0x2f10, 0x1e56, 0xa9e, 0x9fb8, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3e22, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 029A
        gbc.setState(0xc100, 0x690c, 0x23b0, 0x5e0b, 0x79dd, 0x1f67, 0x1, 0x1);
        gbc.writeMem(0xc100, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc100));
        // 9A 029B
        gbc.setState(0xa3ab, 0xf21, 0x9390, 0x37ba, 0x59df, 0x5bd8, 0x1, 0x0);
        gbc.writeMem(0xa3ab, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf21, gbc.sp());
        EXPECT(0xa3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa3ab));
        // 9A 029C
        gbc.setState(0x80ce, 0x785, 0xd1b0, 0x750e, 0x3c0f, 0xe963, 0x0, 0x0);
        gbc.writeMem(0x80ce, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x785, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x80ce));
        // 9A 029D
        gbc.setState(0x311f, 0x9dd7, 0xa610, 0x8b26, 0x8d31, 0xb057, 0x0, 0x1);
        gbc.writeMem(0x311f, { 0x9a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 029E
        gbc.setState(0x9df, 0x60c0, 0xf90, 0x829a, 0x3f78, 0x96b6, 0x0, 0x0);
        gbc.writeMem(0x9df, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x60c0, gbc.sp());
        EXPECT(0x9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 029F
        gbc.setState(0x3e3f, 0xf1f9, 0xad30, 0xc401, 0x2868, 0x96be, 0x0, 0x0);
        gbc.writeMem(0x3e3f, { 0x9a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf1f9, gbc.sp());
        EXPECT(0x3e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02A0
        gbc.setState(0x833, 0xabf2, 0x51c0, 0x1129, 0xab0c, 0x7d6f, 0x1, 0x0);
        gbc.writeMem(0x833, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02A2
        gbc.setState(0x7356, 0x18e4, 0x7f10, 0x881f, 0xc2bc, 0x2d7b, 0x1, 0x0);
        gbc.writeMem(0x7356, { 0x9a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x18e4, gbc.sp());
        EXPECT(0x7357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02A3
        gbc.setState(0xb605, 0x76ab, 0x6600, 0xa04, 0xfadb, 0x92b6, 0x0, 0x0);
        gbc.writeMem(0xb605, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x76ab, gbc.sp());
        EXPECT(0xb606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb605));
        // 9A 02A4
        gbc.setState(0x8714, 0xdaa4, 0x64a0, 0x1ef4, 0x7036, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0x8714, { 0x9a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdaa4, gbc.sp());
        EXPECT(0x8715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8714));
        // 9A 02A5
        gbc.setState(0x1c92, 0x1612, 0x8e10, 0xfe35, 0xa3e, 0x28df, 0x1, 0x1);
        gbc.writeMem(0x1c92, { 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1612, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02A6
        gbc.setState(0x2839, 0xda97, 0x4fc0, 0x192f, 0xd4f4, 0xff09, 0x1, 0x0);
        gbc.writeMem(0x2839, { 0x9a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02A7
        gbc.setState(0x578a, 0x7de7, 0x3030, 0x47b5, 0xa84e, 0xd368, 0x1, 0x1);
        gbc.writeMem(0x578a, { 0x9a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7de7, gbc.sp());
        EXPECT(0x578b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02A8
        gbc.setState(0x1a81, 0x8427, 0x6d60, 0xd7f6, 0x50d2, 0xeef2, 0x0, 0x0);
        gbc.writeMem(0x1a81, { 0x9a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x1a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02A9
        gbc.setState(0x76e0, 0x1bd, 0xf2e0, 0x52f6, 0x3fec, 0xaf50, 0x0, 0x0);
        gbc.writeMem(0x76e0, { 0x9a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02AA
        gbc.setState(0x5ab3, 0x1a03, 0x9070, 0xa476, 0x123, 0xf7a2, 0x0, 0x1);
        gbc.writeMem(0x5ab3, { 0x9a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1a03, gbc.sp());
        EXPECT(0x5ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02AC
        gbc.setState(0x25ed, 0x1ebc, 0x8360, 0xb22f, 0xdd5c, 0x7a79, 0x1, 0x0);
        gbc.writeMem(0x25ed, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1ebc, gbc.sp());
        EXPECT(0x25ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02AD
        gbc.setState(0xdb77, 0x5dea, 0x1940, 0xeff3, 0xc516, 0xf72f, 0x0, 0x1);
        gbc.writeMem(0xdb77, { 0x9a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5dea, gbc.sp());
        EXPECT(0xdb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdb77));
        // 9A 02AE
        gbc.setState(0x4ee4, 0xa2, 0xbaa0, 0x7b21, 0xca6e, 0xfebe, 0x1, 0x0);
        gbc.writeMem(0x4ee4, { 0x9a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa2, gbc.sp());
        EXPECT(0x4ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02AF
        gbc.setState(0x84b1, 0x3511, 0x5b50, 0x8a74, 0xcad4, 0x9632, 0x1, 0x0);
        gbc.writeMem(0x84b1, { 0x9a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3511, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x84b1));
        // 9A 02B0
        gbc.setState(0x2a44, 0x3e3f, 0xc9c0, 0x94fb, 0x7de6, 0x4c83, 0x1, 0x1);
        gbc.writeMem(0x2a44, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3e3f, gbc.sp());
        EXPECT(0x2a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02B1
        gbc.setState(0x81dc, 0xfca5, 0xb4e0, 0xcc83, 0xf2f3, 0xfd0, 0x1, 0x0);
        gbc.writeMem(0x81dc, { 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfca5, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x81dc));
        // 9A 02B2
        gbc.setState(0xe994, 0xfd30, 0xcfb0, 0xadda, 0x4349, 0x771a, 0x1, 0x0);
        gbc.writeMem(0xe994, { 0x9a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfd30, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe994));
        // 9A 02B3
        gbc.setState(0x298b, 0x6526, 0x950, 0xd793, 0x68c4, 0x8e0e, 0x0, 0x1);
        gbc.writeMem(0x298b, { 0x9a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02B4
        gbc.setState(0x3469, 0x2d42, 0xe670, 0x9ebf, 0xe4e6, 0xf959, 0x0, 0x0);
        gbc.writeMem(0x3469, { 0x9a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2d42, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02B5
        gbc.setState(0xe691, 0xefd6, 0xd730, 0x6975, 0xc883, 0xf9f7, 0x1, 0x1);
        gbc.writeMem(0xe691, { 0x9a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xefd6, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe691));
        // 9A 02B6
        gbc.setState(0x718a, 0x9a9e, 0xc120, 0x3f5e, 0xd966, 0xdd5d, 0x1, 0x1);
        gbc.writeMem(0x718a, { 0x9a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0x718b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02B7
        gbc.setState(0x1f4c, 0xfda8, 0x5da0, 0xd53e, 0xb01b, 0x694, 0x0, 0x0);
        gbc.writeMem(0x1f4c, { 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfda8, gbc.sp());
        EXPECT(0x1f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02B8
        gbc.setState(0x9194, 0xa45c, 0xfd60, 0x3c9c, 0xb290, 0x8e04, 0x0, 0x1);
        gbc.writeMem(0x9194, { 0x9a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9194));
        // 9A 02B9
        gbc.setState(0xa715, 0x48b, 0xe020, 0x7046, 0x3f05, 0xddda, 0x0, 0x1);
        gbc.writeMem(0xa715, { 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x48b, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa715));
        // 9A 02BA
        gbc.setState(0x8e4e, 0xfb9b, 0x5390, 0xb49b, 0x8f9, 0xd9cd, 0x1, 0x1);
        gbc.writeMem(0x8e4e, { 0x9a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfb9b, gbc.sp());
        EXPECT(0x8e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8e4e));
        // 9A 02BB
        gbc.setState(0xd4d6, 0xb538, 0xfab0, 0x48fc, 0x4bfa, 0x4198, 0x0, 0x0);
        gbc.writeMem(0xd4d6, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd4d6));
        // 9A 02BC
        gbc.setState(0x98e3, 0x2f86, 0x6300, 0xef61, 0x1650, 0x9570, 0x1, 0x1);
        gbc.writeMem(0x98e3, { 0x9a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2f86, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x98e3));
        // 9A 02BD
        gbc.setState(0x607b, 0xadfe, 0xa2d0, 0xeae4, 0xfb40, 0x1bd6, 0x0, 0x0);
        gbc.writeMem(0x607b, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xadfe, gbc.sp());
        EXPECT(0x607c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02BE
        gbc.setState(0x3f14, 0xc6a6, 0x1e30, 0x5a65, 0x6da1, 0x9c64, 0x0, 0x1);
        gbc.writeMem(0x3f14, { 0x9a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x3f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02BF
        gbc.setState(0x3f9a, 0xcc44, 0x1970, 0x5f55, 0xd6ee, 0x3da, 0x0, 0x1);
        gbc.writeMem(0x3f9a, { 0x9a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcc44, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02C0
        gbc.setState(0x92d6, 0xc560, 0x76e0, 0x94fe, 0x31b6, 0x417e, 0x0, 0x0);
        gbc.writeMem(0x92d6, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc560, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x92d6));
        // 9A 02C1
        gbc.setState(0xafd0, 0x8eb8, 0x9c60, 0x5421, 0x3e42, 0x82fa, 0x1, 0x1);
        gbc.writeMem(0xafd0, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xafd0));
        // 9A 02C2
        gbc.setState(0x2799, 0xf0f3, 0x9250, 0x170b, 0x823a, 0x1625, 0x1, 0x0);
        gbc.writeMem(0x2799, { 0x9a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0x279a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02C3
        gbc.setState(0x9d8a, 0x2964, 0xcee0, 0x4820, 0x63da, 0x84fd, 0x1, 0x0);
        gbc.writeMem(0x9d8a, { 0x9a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2964, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d8a));
        // 9A 02C5
        gbc.setState(0x58d3, 0xb7f8, 0xb520, 0x9e23, 0x2386, 0x7073, 0x1, 0x1);
        gbc.writeMem(0x58d3, { 0x9a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb7f8, gbc.sp());
        EXPECT(0x58d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02C6
        gbc.setState(0x9ac, 0x450f, 0xfa10, 0x70d0, 0xe90, 0x38f3, 0x0, 0x0);
        gbc.writeMem(0x9ac, { 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02C7
        gbc.setState(0xa6cb, 0x364e, 0x83c0, 0x798, 0x5aab, 0xf64a, 0x1, 0x1);
        gbc.writeMem(0xa6cb, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0xa6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa6cb));
        // 9A 02C8
        gbc.setState(0xd529, 0xda6c, 0x4250, 0x307c, 0xf0ba, 0xf4d3, 0x1, 0x0);
        gbc.writeMem(0xd529, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xda6c, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd529));
        // 9A 02CA
        gbc.setState(0xb3ea, 0x1409, 0xb1a0, 0x85d, 0x45d9, 0x4671, 0x0, 0x0);
        gbc.writeMem(0xb3ea, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb3ea));
        // 9A 02CB
        gbc.setState(0x5c11, 0x76cb, 0x9fa0, 0x807d, 0x1b58, 0xd6f2, 0x1, 0x0);
        gbc.writeMem(0x5c11, { 0x9a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0x5c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02CC
        gbc.setState(0x23cb, 0x7d1e, 0x9260, 0xf85c, 0x7df6, 0xb5f0, 0x0, 0x0);
        gbc.writeMem(0x23cb, { 0x9a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7d1e, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02CD
        gbc.setState(0x95f1, 0x95bd, 0x9e30, 0xe9e6, 0x6b49, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0x95f1, { 0x9a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x95bd, gbc.sp());
        EXPECT(0x95f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x95f1));
        // 9A 02CE
        gbc.setState(0x420f, 0x937e, 0x3be0, 0xf82e, 0xa47, 0x3e5c, 0x0, 0x1);
        gbc.writeMem(0x420f, { 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x937e, gbc.sp());
        EXPECT(0x4210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02CF
        gbc.setState(0x5bfc, 0x89fb, 0x6620, 0xa50e, 0x8cf8, 0xabf, 0x0, 0x1);
        gbc.writeMem(0x5bfc, { 0x9a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x89fb, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02D1
        gbc.setState(0xbb5a, 0x6a48, 0x8560, 0x5d78, 0x5ac, 0x7873, 0x1, 0x0);
        gbc.writeMem(0xbb5a, { 0x9a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0xbb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbb5a));
        // 9A 02D2
        gbc.setState(0x34ea, 0xae61, 0xadb0, 0x3729, 0x9e3e, 0xb1af, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0x9a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02D3
        gbc.setState(0xb471, 0xea75, 0xff40, 0x1241, 0xbd87, 0x5e72, 0x1, 0x0);
        gbc.writeMem(0xb471, { 0x9a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0xb472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb471));
        // 9A 02D4
        gbc.setState(0x6bf8, 0xfc52, 0xd6c0, 0xa2a7, 0x6608, 0xf75, 0x0, 0x1);
        gbc.writeMem(0x6bf8, { 0x9a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0x6bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02D5
        gbc.setState(0xbe34, 0xad6e, 0xd370, 0x7947, 0xb3ba, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0xbe34, { 0x9a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbe34));
        // 9A 02D6
        gbc.setState(0x6e5e, 0x9328, 0x30a0, 0x4ac5, 0x1089, 0x7e0b, 0x1, 0x1);
        gbc.writeMem(0x6e5e, { 0x9a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9328, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02D7
        gbc.setState(0x5d32, 0x628b, 0xcd50, 0x17da, 0xf103, 0xcd0d, 0x0, 0x1);
        gbc.writeMem(0x5d32, { 0x9a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0x5d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02D8
        gbc.setState(0x1ba9, 0x88c6, 0xe4a0, 0x155e, 0xc406, 0x4fd0, 0x1, 0x1);
        gbc.writeMem(0x1ba9, { 0x9a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02D9
        gbc.setState(0xd901, 0xa551, 0x6bc0, 0x78b4, 0xc65f, 0x6b6e, 0x1, 0x0);
        gbc.writeMem(0xd901, { 0x9a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa551, gbc.sp());
        EXPECT(0xd902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd901));
        // 9A 02DA
        gbc.setState(0xd267, 0xa439, 0xfe10, 0xe2a6, 0xe208, 0xe773, 0x0, 0x0);
        gbc.writeMem(0xd267, { 0x9a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa439, gbc.sp());
        EXPECT(0xd268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd267));
        // 9A 02DB
        gbc.setState(0x2294, 0x532d, 0xb7d0, 0x831b, 0x97af, 0xb3d5, 0x1, 0x1);
        gbc.writeMem(0x2294, { 0x9a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x532d, gbc.sp());
        EXPECT(0x2295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02DD
        gbc.setState(0x9622, 0xc558, 0x19f0, 0xacbe, 0xf7c8, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0x9622, { 0x9a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc558, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9622));
        // 9A 02DE
        gbc.setState(0xcb81, 0xf051, 0xa6b0, 0x6159, 0x8275, 0x714f, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0x9a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf051, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcb81));
        // 9A 02E1
        gbc.setState(0x7a7f, 0xff99, 0x2540, 0x25e1, 0x792b, 0x1ca5, 0x1, 0x1);
        gbc.writeMem(0x7a7f, { 0x9a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff99, gbc.sp());
        EXPECT(0x7a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02E2
        gbc.setState(0xbaeb, 0xd18c, 0xb380, 0xf615, 0xd1f3, 0x7b58, 0x1, 0x0);
        gbc.writeMem(0xbaeb, { 0x9a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbaeb));
        // 9A 02E3
        gbc.setState(0xb259, 0x6ad, 0x7e30, 0xf37f, 0x3d1f, 0x9e06, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0x9a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6ad, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb259));
        // 9A 02E4
        gbc.setState(0x3cea, 0xa441, 0xd9d0, 0xb995, 0x1dc1, 0x71d7, 0x1, 0x0);
        gbc.writeMem(0x3cea, { 0x9a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa441, gbc.sp());
        EXPECT(0x3ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02E5
        gbc.setState(0x1fcb, 0x7ac, 0x4920, 0x6f90, 0x7bb6, 0x5190, 0x0, 0x0);
        gbc.writeMem(0x1fcb, { 0x9a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02E6
        gbc.setState(0x1a7d, 0x7b88, 0x32f0, 0x97f6, 0x6951, 0xf66, 0x0, 0x0);
        gbc.writeMem(0x1a7d, { 0x9a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7b88, gbc.sp());
        EXPECT(0x1a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02E7
        gbc.setState(0x2701, 0x68a0, 0x8af0, 0xfd01, 0x4aae, 0x1cd3, 0x1, 0x0);
        gbc.writeMem(0x2701, { 0x9a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0x2702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02E8
        gbc.setState(0xb820, 0xe332, 0xc870, 0x87f5, 0xff9, 0x8cf5, 0x1, 0x0);
        gbc.writeMem(0xb820, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb820));
        // 9A 02E9
        gbc.setState(0x7914, 0x24c7, 0xfd70, 0x20e9, 0x3864, 0x704d, 0x1, 0x0);
        gbc.writeMem(0x7914, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02EA
        gbc.setState(0x8d84, 0x3270, 0x3b50, 0xf50d, 0x2717, 0xb6c2, 0x1, 0x1);
        gbc.writeMem(0x8d84, { 0x9a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d84));
        // 9A 02EB
        gbc.setState(0x7476, 0x3cee, 0x16b0, 0x798a, 0x6882, 0xa731, 0x0, 0x0);
        gbc.writeMem(0x7476, { 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3cee, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02EC
        gbc.setState(0x9b58, 0x42c1, 0x75b0, 0x2636, 0xffad, 0x89c, 0x0, 0x0);
        gbc.writeMem(0x9b58, { 0x9a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x42c1, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9b58));
        // 9A 02ED
        gbc.setState(0x944e, 0xe09, 0x740, 0x2e2d, 0x5e33, 0x2e22, 0x1, 0x1);
        gbc.writeMem(0x944e, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe09, gbc.sp());
        EXPECT(0x944f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x944e));
        // 9A 02EE
        gbc.setState(0x2fd6, 0x5adc, 0xa050, 0x2076, 0x554, 0xaaa1, 0x1, 0x1);
        gbc.writeMem(0x2fd6, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02EF
        gbc.setState(0x67e9, 0xbb63, 0x500, 0xafeb, 0x1891, 0xd7e5, 0x0, 0x0);
        gbc.writeMem(0x67e9, { 0x9a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02F0
        gbc.setState(0xc287, 0xbebb, 0x4040, 0xb5d5, 0x8f01, 0xf2da, 0x0, 0x0);
        gbc.writeMem(0xc287, { 0x9a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0xc288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc287));
        // 9A 02F1
        gbc.setState(0x9873, 0x1601, 0xf810, 0x73a5, 0x3d09, 0x6c3a, 0x1, 0x1);
        gbc.writeMem(0x9873, { 0x9a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x9874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9873));
        // 9A 02F2
        gbc.setState(0x9242, 0xfe74, 0x6010, 0x6d39, 0x5a52, 0x2f57, 0x0, 0x0);
        gbc.writeMem(0x9242, { 0x9a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0x9243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9242));
        // 9A 02F3
        gbc.setState(0x4817, 0xf6e9, 0x1320, 0x9319, 0xa3d4, 0x4454, 0x0, 0x1);
        gbc.writeMem(0x4817, { 0x9a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0x4818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02F4
        gbc.setState(0x8050, 0x68cc, 0xfa90, 0x396d, 0xca6e, 0x44e5, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0x9a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x68cc, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8050));
        // 9A 02F5
        gbc.setState(0x1d16, 0x7fde, 0x5df0, 0x33f5, 0xc8db, 0x4dbb, 0x0, 0x0);
        gbc.writeMem(0x1d16, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02F6
        gbc.setState(0x85a7, 0xdefd, 0x6610, 0xc830, 0x5a39, 0x9f86, 0x0, 0x0);
        gbc.writeMem(0x85a7, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdefd, gbc.sp());
        EXPECT(0x85a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x85a7));
        // 9A 02F7
        gbc.setState(0x276, 0x5bcc, 0x8e0, 0xc707, 0x2342, 0x34e9, 0x0, 0x0);
        gbc.writeMem(0x276, { 0x9a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0x277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02F8
        gbc.setState(0xed5c, 0x38b7, 0x3af0, 0x2bb6, 0x3dd5, 0x52be, 0x0, 0x1);
        gbc.writeMem(0xed5c, { 0x9a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x38b7, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed5c));
        // 9A 02F9
        gbc.setState(0x77f5, 0x48c4, 0x8c90, 0xaca0, 0xc488, 0x3aa8, 0x0, 0x0);
        gbc.writeMem(0x77f5, { 0x9a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0x77f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02FA
        gbc.setState(0xb73b, 0x274d, 0xeba0, 0xe308, 0xf2c0, 0x6917, 0x0, 0x0);
        gbc.writeMem(0xb73b, { 0x9a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x274d, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb73b));
        // 9A 02FB
        gbc.setState(0x45b4, 0x5420, 0x8ab0, 0x7b24, 0x13a7, 0x3c26, 0x0, 0x0);
        gbc.writeMem(0x45b4, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5420, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02FC
        gbc.setState(0x1df2, 0xb876, 0xa3a0, 0xf1ce, 0xd9ac, 0xcad3, 0x0, 0x1);
        gbc.writeMem(0x1df2, { 0x9a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb876, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 02FD
        gbc.setState(0xd2b8, 0xf859, 0x1110, 0xd69, 0x7c98, 0x8e6a, 0x1, 0x1);
        gbc.writeMem(0xd2b8, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf859, gbc.sp());
        EXPECT(0xd2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd2b8));
        // 9A 02FE
        gbc.setState(0x116f, 0x2278, 0x2370, 0x5a05, 0xa3c, 0x83b6, 0x0, 0x0);
        gbc.writeMem(0x116f, { 0x9a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2278, gbc.sp());
        EXPECT(0x1170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 02FF
        gbc.setState(0x3d52, 0x231c, 0xa60, 0xfcbf, 0x55a8, 0x32c3, 0x1, 0x1);
        gbc.writeMem(0x3d52, { 0x9a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x231c, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0300
        gbc.setState(0x61b6, 0xf69b, 0x4550, 0x4fab, 0xa876, 0x85fa, 0x1, 0x0);
        gbc.writeMem(0x61b6, { 0x9a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf69b, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0301
        gbc.setState(0xecf1, 0x7537, 0xbe80, 0x8bda, 0x198c, 0xc810, 0x0, 0x1);
        gbc.writeMem(0xecf1, { 0x9a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7537, gbc.sp());
        EXPECT(0xecf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xecf1));
        // 9A 0302
        gbc.setState(0x9160, 0xeef3, 0x6b30, 0xbf7d, 0x1e84, 0xea2a, 0x0, 0x0);
        gbc.writeMem(0x9160, { 0x9a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9160));
        // 9A 0304
        gbc.setState(0x5ed, 0x20dc, 0x41b0, 0x2d5c, 0xbbbc, 0x8a6e, 0x0, 0x1);
        gbc.writeMem(0x5ed, { 0x9a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0x5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0305
        gbc.setState(0x42eb, 0xde33, 0xc6e0, 0x76f0, 0x1802, 0x8d9e, 0x1, 0x0);
        gbc.writeMem(0x42eb, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xde33, gbc.sp());
        EXPECT(0x42ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0306
        gbc.setState(0xda5f, 0x8711, 0xd430, 0x49e6, 0x4ea2, 0x3fb1, 0x1, 0x0);
        gbc.writeMem(0xda5f, { 0x9a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8711, gbc.sp());
        EXPECT(0xda60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xda5f));
        // 9A 0307
        gbc.setState(0x683f, 0x1002, 0x4120, 0xc5eb, 0x7b69, 0xeb41, 0x1, 0x0);
        gbc.writeMem(0x683f, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0308
        gbc.setState(0x9665, 0x3986, 0x4ba0, 0xa68a, 0x874b, 0x52e0, 0x0, 0x1);
        gbc.writeMem(0x9665, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3986, gbc.sp());
        EXPECT(0x9666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9665));
        // 9A 0309
        gbc.setState(0x8b64, 0x2182, 0xf540, 0x9ac8, 0x2a7b, 0x5d1f, 0x0, 0x1);
        gbc.writeMem(0x8b64, { 0x9a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x8b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8b64));
        // 9A 030A
        gbc.setState(0x6161, 0xe8f3, 0x6ba0, 0x3029, 0x3e65, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0x6161, { 0x9a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe8f3, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 030B
        gbc.setState(0x7710, 0xc621, 0x27e0, 0xbf5c, 0xa357, 0xda88, 0x1, 0x1);
        gbc.writeMem(0x7710, { 0x9a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 030C
        gbc.setState(0xe83a, 0x636a, 0x1ad0, 0x8906, 0x1154, 0x15da, 0x1, 0x1);
        gbc.writeMem(0xe83a, { 0x9a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x636a, gbc.sp());
        EXPECT(0xe83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe83a));
        // 9A 030D
        gbc.setState(0x5171, 0x3115, 0x8380, 0xa6cb, 0xf066, 0xd2dc, 0x0, 0x1);
        gbc.writeMem(0x5171, { 0x9a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 030E
        gbc.setState(0x62cc, 0x7a37, 0x11c0, 0x2739, 0x4da9, 0x2b8e, 0x1, 0x1);
        gbc.writeMem(0x62cc, { 0x9a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7a37, gbc.sp());
        EXPECT(0x62cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 030F
        gbc.setState(0x4ce5, 0xfb88, 0x37d0, 0x9fae, 0xd984, 0xdc3f, 0x1, 0x1);
        gbc.writeMem(0x4ce5, { 0x9a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x4ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0310
        gbc.setState(0xe09e, 0x8d12, 0xed40, 0x64cc, 0x144d, 0x3f6, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0x9a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe09e));
        // 9A 0311
        gbc.setState(0x907d, 0xf0e0, 0x1b60, 0x8bc9, 0x52ee, 0x64f0, 0x0, 0x0);
        gbc.writeMem(0x907d, { 0x9a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0x907e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x907d));
        // 9A 0312
        gbc.setState(0xc3da, 0x42e0, 0xcec0, 0xd8a7, 0x24f4, 0xf5f7, 0x1, 0x0);
        gbc.writeMem(0xc3da, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0xc3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc3da));
        // 9A 0313
        gbc.setState(0x2a4, 0x9dc8, 0x9990, 0x7555, 0x5b25, 0x562a, 0x1, 0x0);
        gbc.writeMem(0x2a4, { 0x9a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9dc8, gbc.sp());
        EXPECT(0x2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0314
        gbc.setState(0xcf3d, 0x2538, 0xa320, 0x6765, 0x3272, 0xe853, 0x0, 0x1);
        gbc.writeMem(0xcf3d, { 0x9a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2538, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcf3d));
        // 9A 0315
        gbc.setState(0x598c, 0x7b36, 0x5970, 0x707f, 0xc101, 0x4ef7, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0x9a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x598d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0316
        gbc.setState(0x547, 0x524a, 0x6fc0, 0xe74d, 0x661, 0xc5cf, 0x0, 0x1);
        gbc.writeMem(0x547, { 0x9a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0x548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0318
        gbc.setState(0xa5f, 0x8642, 0x9320, 0x9833, 0x3f21, 0x91b2, 0x0, 0x0);
        gbc.writeMem(0xa5f, { 0x9a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8642, gbc.sp());
        EXPECT(0xa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0319
        gbc.setState(0x3fc8, 0x3458, 0xcc50, 0x286d, 0x33ec, 0xe438, 0x0, 0x0);
        gbc.writeMem(0x3fc8, { 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3458, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 031A
        gbc.setState(0xb72c, 0x4e0b, 0x83d0, 0xe015, 0x940c, 0xbaee, 0x0, 0x0);
        gbc.writeMem(0xb72c, { 0x9a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0xb72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb72c));
        // 9A 031B
        gbc.setState(0xea2f, 0x8c9, 0xaf60, 0xf600, 0x86f0, 0x8979, 0x1, 0x0);
        gbc.writeMem(0xea2f, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xea2f));
        // 9A 031C
        gbc.setState(0x2c72, 0xd93d, 0xdd00, 0xe347, 0x89cd, 0x8315, 0x1, 0x1);
        gbc.writeMem(0x2c72, { 0x9a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 031E
        gbc.setState(0xe5f6, 0x8c3, 0x8660, 0x6102, 0x2776, 0x7c1f, 0x0, 0x1);
        gbc.writeMem(0xe5f6, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8c3, gbc.sp());
        EXPECT(0xe5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe5f6));
        // 9A 031F
        gbc.setState(0x5bfd, 0x6ed0, 0x1f80, 0xfd9e, 0x7731, 0x4125, 0x1, 0x0);
        gbc.writeMem(0x5bfd, { 0x9a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6ed0, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0320
        gbc.setState(0xb741, 0x1dea, 0x9af0, 0x4d74, 0x4cf4, 0xf439, 0x1, 0x1);
        gbc.writeMem(0xb741, { 0x9a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb741));
        // 9A 0321
        gbc.setState(0x8d1b, 0x1404, 0xe670, 0xfa5f, 0x771b, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x8d1b, { 0x9a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1404, gbc.sp());
        EXPECT(0x8d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8d1b));
        // 9A 0322
        gbc.setState(0xea46, 0xe05f, 0x5cc0, 0x92bb, 0x336d, 0x6776, 0x1, 0x1);
        gbc.writeMem(0xea46, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe05f, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xea46));
        // 9A 0323
        gbc.setState(0x446e, 0xfedd, 0x55d0, 0x9dcb, 0xfcc, 0x94f, 0x1, 0x1);
        gbc.writeMem(0x446e, { 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfedd, gbc.sp());
        EXPECT(0x446f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0324
        gbc.setState(0x16ae, 0x8698, 0x16b0, 0xa17d, 0xdab6, 0x4d5a, 0x1, 0x1);
        gbc.writeMem(0x16ae, { 0x9a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8698, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0326
        gbc.setState(0x9476, 0xb921, 0xd0f0, 0x8709, 0x97d8, 0x5892, 0x1, 0x1);
        gbc.writeMem(0x9476, { 0x9a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x9477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9476));
        // 9A 0327
        gbc.setState(0x812a, 0x8c63, 0x6bc0, 0xc140, 0xec79, 0x84d5, 0x1, 0x0);
        gbc.writeMem(0x812a, { 0x9a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8c63, gbc.sp());
        EXPECT(0x812b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x812a));
        // 9A 0328
        gbc.setState(0xba77, 0xe795, 0x6c50, 0x7944, 0x578f, 0xcdc6, 0x1, 0x0);
        gbc.writeMem(0xba77, { 0x9a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe795, gbc.sp());
        EXPECT(0xba78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xba77));
        // 9A 0329
        gbc.setState(0x9a34, 0x38b3, 0x34c0, 0xec73, 0x3cb2, 0x3fd3, 0x0, 0x1);
        gbc.writeMem(0x9a34, { 0x9a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0x9a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a34));
        // 9A 032A
        gbc.setState(0x2d03, 0xcd8c, 0xc940, 0xb2b0, 0x3b11, 0x7ab, 0x0, 0x0);
        gbc.writeMem(0x2d03, { 0x9a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcd8c, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 032B
        gbc.setState(0xc771, 0x580f, 0x8fb0, 0x7a65, 0x3623, 0x1955, 0x0, 0x0);
        gbc.writeMem(0xc771, { 0x9a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0xc772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc771));
        // 9A 032C
        gbc.setState(0x3182, 0xb0e1, 0xc250, 0x8bc5, 0x86ee, 0x227d, 0x1, 0x0);
        gbc.writeMem(0x3182, { 0x9a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb0e1, gbc.sp());
        EXPECT(0x3183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 032D
        gbc.setState(0xb092, 0x334f, 0x3750, 0x2b5e, 0x5a4c, 0xdd2f, 0x0, 0x0);
        gbc.writeMem(0xb092, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb092));
        // 9A 032F
        gbc.setState(0xf47, 0x522f, 0xfe90, 0xaa8, 0x1bc9, 0x45e5, 0x0, 0x0);
        gbc.writeMem(0xf47, { 0x9a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0xf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0330
        gbc.setState(0x3c52, 0xafaf, 0x1100, 0xc441, 0xd5db, 0xc7cf, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0x9a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x3c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0332
        gbc.setState(0x291f, 0x16fa, 0x3910, 0xc68f, 0x73b9, 0x96e8, 0x1, 0x1);
        gbc.writeMem(0x291f, { 0x9a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x16fa, gbc.sp());
        EXPECT(0x2920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0333
        gbc.setState(0x65b3, 0xac2e, 0xe3a0, 0xc9b4, 0xb79, 0xac2b, 0x0, 0x0);
        gbc.writeMem(0x65b3, { 0x9a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0x65b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0334
        gbc.setState(0xab48, 0x100e, 0x4c30, 0x69d, 0x1253, 0x8486, 0x1, 0x1);
        gbc.writeMem(0xab48, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x100e, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xab48));
        // 9A 0336
        gbc.setState(0x9638, 0x8c22, 0xd350, 0x1735, 0xeb2a, 0x39dc, 0x1, 0x0);
        gbc.writeMem(0x9638, { 0x9a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x9639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9638));
        // 9A 0337
        gbc.setState(0xaa52, 0x67af, 0x9f20, 0xf99, 0xc80c, 0x3115, 0x0, 0x0);
        gbc.writeMem(0xaa52, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x67af, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaa52));
        // 9A 0338
        gbc.setState(0x6e41, 0x7284, 0x47e0, 0x8864, 0xef28, 0xc7ec, 0x1, 0x1);
        gbc.writeMem(0x6e41, { 0x9a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7284, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0339
        gbc.setState(0x7b63, 0x1331, 0x6d80, 0x2423, 0x3f72, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x7b63, { 0x9a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 033A
        gbc.setState(0xdf28, 0x5fdf, 0xd0d0, 0x4cd4, 0x5ec, 0x5cf2, 0x1, 0x0);
        gbc.writeMem(0xdf28, { 0x9a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5fdf, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdf28));
        // 9A 033B
        gbc.setState(0xedce, 0x2421, 0x3330, 0xe9, 0xd3ab, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0xedce, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xedce));
        // 9A 033C
        gbc.setState(0xd89e, 0xe7b, 0x5690, 0x1ba6, 0xb2f1, 0x2a9f, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0x9a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd89e));
        // 9A 033D
        gbc.setState(0x18c1, 0x28a9, 0x29b0, 0x3273, 0xd8aa, 0xeaf3, 0x0, 0x0);
        gbc.writeMem(0x18c1, { 0x9a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x28a9, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 033E
        gbc.setState(0xca99, 0x36aa, 0x7880, 0x4acf, 0xab99, 0xb207, 0x1, 0x1);
        gbc.writeMem(0xca99, { 0x9a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x36aa, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca99));
        // 9A 033F
        gbc.setState(0x8ad5, 0x658c, 0x6480, 0xb895, 0x3a4c, 0x31d1, 0x1, 0x1);
        gbc.writeMem(0x8ad5, { 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x658c, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ad5));
        // 9A 0340
        gbc.setState(0x2757, 0xb9fb, 0xfb90, 0x9fec, 0xc120, 0x27f2, 0x1, 0x0);
        gbc.writeMem(0x2757, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0341
        gbc.setState(0x6f6f, 0xa38, 0x9f0, 0xca73, 0xca34, 0x1bbf, 0x0, 0x0);
        gbc.writeMem(0x6f6f, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa38, gbc.sp());
        EXPECT(0x6f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0342
        gbc.setState(0x9f4, 0x57f5, 0x2020, 0xd7ca, 0x5abb, 0x869f, 0x1, 0x0);
        gbc.writeMem(0x9f4, { 0x9a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0343
        gbc.setState(0xda67, 0xfa99, 0x85a0, 0xb1df, 0x160b, 0x972a, 0x0, 0x1);
        gbc.writeMem(0xda67, { 0x9a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xda67));
        // 9A 0344
        gbc.setState(0x8b9e, 0xb071, 0x66c0, 0x339b, 0x8feb, 0x4338, 0x0, 0x1);
        gbc.writeMem(0x8b9e, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8b9e));
        // 9A 0345
        gbc.setState(0x6d3a, 0x7ceb, 0xd590, 0x9ba9, 0xdd7d, 0x2fa6, 0x1, 0x1);
        gbc.writeMem(0x6d3a, { 0x9a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0346
        gbc.setState(0x8ccd, 0x3a3, 0x4c10, 0x8ed1, 0xc422, 0xaad8, 0x1, 0x1);
        gbc.writeMem(0x8ccd, { 0x9a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a3, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8ccd));
        // 9A 0347
        gbc.setState(0x1949, 0xfd78, 0x1100, 0x5c9d, 0x4281, 0x4d59, 0x1, 0x1);
        gbc.writeMem(0x1949, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfd78, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0349
        gbc.setState(0xd91e, 0x5019, 0x4050, 0x9790, 0x54b7, 0xab51, 0x0, 0x1);
        gbc.writeMem(0xd91e, { 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5019, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd91e));
        // 9A 034A
        gbc.setState(0x543b, 0x3774, 0x75d0, 0x1df2, 0x93dc, 0x5251, 0x1, 0x1);
        gbc.writeMem(0x543b, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3774, gbc.sp());
        EXPECT(0x543c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 034B
        gbc.setState(0x7d59, 0x6495, 0x41e0, 0x7b33, 0xe948, 0xc429, 0x1, 0x1);
        gbc.writeMem(0x7d59, { 0x9a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6495, gbc.sp());
        EXPECT(0x7d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 034C
        gbc.setState(0xe693, 0x889e, 0x2570, 0x2e45, 0xe0f9, 0x955b, 0x0, 0x1);
        gbc.writeMem(0xe693, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe693));
        // 9A 034D
        gbc.setState(0xd353, 0x6d00, 0x8fa0, 0x7e25, 0x928e, 0x8f28, 0x1, 0x0);
        gbc.writeMem(0xd353, { 0x9a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6d00, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd353));
        // 9A 034E
        gbc.setState(0xec81, 0x83e0, 0xdc80, 0xa83f, 0x43a0, 0x2ccd, 0x1, 0x0);
        gbc.writeMem(0xec81, { 0x9a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x83e0, gbc.sp());
        EXPECT(0xec82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xec81));
        // 9A 034F
        gbc.setState(0xa15b, 0x9822, 0x88c0, 0x6acc, 0x404f, 0xc2b8, 0x1, 0x0);
        gbc.writeMem(0xa15b, { 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9822, gbc.sp());
        EXPECT(0xa15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa15b));
        // 9A 0350
        gbc.setState(0x3b1c, 0x2132, 0xd2d0, 0x7ce, 0xa561, 0xf4c5, 0x0, 0x1);
        gbc.writeMem(0x3b1c, { 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2132, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0351
        gbc.setState(0xcf4e, 0xa88b, 0xcad0, 0x64cf, 0xc55c, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0xcf4e, { 0x9a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa88b, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcf4e));
        // 9A 0353
        gbc.setState(0x89ed, 0xebb5, 0x4550, 0x197c, 0x9a5a, 0xe57e, 0x0, 0x1);
        gbc.writeMem(0x89ed, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0x89ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x89ed));
        // 9A 0354
        gbc.setState(0xe0a2, 0x82d6, 0x27f0, 0xe6f0, 0x3369, 0x38cf, 0x1, 0x0);
        gbc.writeMem(0xe0a2, { 0x9a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x82d6, gbc.sp());
        EXPECT(0xe0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe0a2));
        // 9A 0355
        gbc.setState(0x9fe0, 0xaddd, 0x3950, 0xa369, 0xb278, 0x72bd, 0x1, 0x0);
        gbc.writeMem(0x9fe0, { 0x9a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaddd, gbc.sp());
        EXPECT(0x9fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9fe0));
        // 9A 0356
        gbc.setState(0x6452, 0xd99a, 0xb950, 0xce19, 0x413f, 0x74c9, 0x0, 0x1);
        gbc.writeMem(0x6452, { 0x9a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0357
        gbc.setState(0xa4da, 0x5740, 0x5b30, 0xd4c3, 0xef32, 0x3ab6, 0x0, 0x1);
        gbc.writeMem(0xa4da, { 0x9a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5740, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa4da));
        // 9A 0358
        gbc.setState(0x6a9f, 0x1346, 0x60, 0x48a8, 0x7e1a, 0x98c5, 0x0, 0x1);
        gbc.writeMem(0x6a9f, { 0x9a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1346, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0359
        gbc.setState(0xa327, 0x7062, 0x29e0, 0xdac, 0x1cff, 0x1721, 0x1, 0x0);
        gbc.writeMem(0xa327, { 0x9a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0xa328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa327));
        // 9A 035B
        gbc.setState(0xa3c4, 0x5f69, 0x8830, 0x81df, 0x7fd1, 0x6b79, 0x1, 0x1);
        gbc.writeMem(0xa3c4, { 0x9a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5f69, gbc.sp());
        EXPECT(0xa3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa3c4));
        // 9A 035C
        gbc.setState(0xeba6, 0xff1e, 0xf0d0, 0x939c, 0x268e, 0x4516, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0x9a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeba6));
        // 9A 035D
        gbc.setState(0x7c4d, 0xfb59, 0x6920, 0x2d44, 0x1e9f, 0x6e62, 0x0, 0x1);
        gbc.writeMem(0x7c4d, { 0x9a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 035E
        gbc.setState(0x5833, 0x8abe, 0x3340, 0x55cc, 0xa9d5, 0xaccc, 0x0, 0x1);
        gbc.writeMem(0x5833, { 0x9a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8abe, gbc.sp());
        EXPECT(0x5834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 035F
        gbc.setState(0xeff6, 0x24fa, 0xa660, 0x32c6, 0x6b4b, 0x223b, 0x1, 0x1);
        gbc.writeMem(0xeff6, { 0x9a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x24fa, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeff6));
        // 9A 0360
        gbc.setState(0x85c8, 0xa4eb, 0xe7e0, 0x4b77, 0xba76, 0xd91b, 0x1, 0x1);
        gbc.writeMem(0x85c8, { 0x9a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa4eb, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x85c8));
        // 9A 0361
        gbc.setState(0x8c47, 0x40c0, 0x3670, 0xa491, 0x549c, 0x1af2, 0x0, 0x1);
        gbc.writeMem(0x8c47, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x8c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8c47));
        // 9A 0362
        gbc.setState(0x7c52, 0xd665, 0x5ba0, 0x4eb1, 0xb20b, 0x2b52, 0x1, 0x0);
        gbc.writeMem(0x7c52, { 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd665, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0364
        gbc.setState(0x7438, 0x3368, 0x92c0, 0x74ff, 0x16d, 0xbd00, 0x1, 0x0);
        gbc.writeMem(0x7438, { 0x9a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0365
        gbc.setState(0xa280, 0x49fd, 0x1160, 0xe87e, 0x3ad9, 0xe2f4, 0x1, 0x0);
        gbc.writeMem(0xa280, { 0x9a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0xa281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa280));
        // 9A 0366
        gbc.setState(0x2519, 0xf613, 0x4740, 0x3c57, 0xacb3, 0xc8a8, 0x1, 0x1);
        gbc.writeMem(0x2519, { 0x9a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf613, gbc.sp());
        EXPECT(0x251a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0367
        gbc.setState(0x6c02, 0xbebd, 0xf3d0, 0x600b, 0xbbcb, 0xc90b, 0x1, 0x0);
        gbc.writeMem(0x6c02, { 0x9a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x6c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0368
        gbc.setState(0xea6e, 0xc97f, 0x2a50, 0xe8f3, 0x6155, 0xb71d, 0x1, 0x1);
        gbc.writeMem(0xea6e, { 0x9a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc97f, gbc.sp());
        EXPECT(0xea6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xea6e));
        // 9A 0369
        gbc.setState(0x34fb, 0xe256, 0x9220, 0xe097, 0x71fa, 0x484f, 0x1, 0x0);
        gbc.writeMem(0x34fb, { 0x9a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe256, gbc.sp());
        EXPECT(0x34fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 036A
        gbc.setState(0xe6fc, 0x5b82, 0xb720, 0xb60a, 0xd46f, 0xab4a, 0x0, 0x0);
        gbc.writeMem(0xe6fc, { 0x9a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5b82, gbc.sp());
        EXPECT(0xe6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe6fc));
        // 9A 036B
        gbc.setState(0x7161, 0x8e89, 0xf6d0, 0xf3b6, 0x14f7, 0xd97f, 0x0, 0x0);
        gbc.writeMem(0x7161, { 0x9a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e89, gbc.sp());
        EXPECT(0x7162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 036C
        gbc.setState(0xa5c1, 0x98f6, 0x6c60, 0xf7e8, 0x613a, 0x75ab, 0x0, 0x0);
        gbc.writeMem(0xa5c1, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa5c1));
        // 9A 036D
        gbc.setState(0x32a5, 0xb971, 0xe910, 0xcfed, 0xf249, 0x90e0, 0x1, 0x1);
        gbc.writeMem(0x32a5, { 0x9a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0x32a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 036F
        gbc.setState(0x90da, 0xcf48, 0x6210, 0x42f0, 0xfc03, 0xe7ff, 0x1, 0x1);
        gbc.writeMem(0x90da, { 0x9a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcf48, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x90da));
        // 9A 0370
        gbc.setState(0xbfad, 0xf1bd, 0x7bb0, 0x6853, 0x368c, 0xd7e3, 0x1, 0x0);
        gbc.writeMem(0xbfad, { 0x9a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0xbfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbfad));
        // 9A 0371
        gbc.setState(0x5574, 0x568c, 0x8300, 0x4391, 0x1a4f, 0x1cc7, 0x0, 0x0);
        gbc.writeMem(0x5574, { 0x9a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0x5575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0372
        gbc.setState(0xbb15, 0x958, 0xafa0, 0xac30, 0x4979, 0xbd2d, 0x0, 0x1);
        gbc.writeMem(0xbb15, { 0x9a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0xbb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbb15));
        // 9A 0373
        gbc.setState(0xb36b, 0xdd41, 0x9940, 0x75f1, 0x3577, 0xfe9c, 0x0, 0x0);
        gbc.writeMem(0xb36b, { 0x9a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb36b));
        // 9A 0374
        gbc.setState(0x6be4, 0x7dd0, 0xa140, 0x792f, 0x2410, 0xe58c, 0x1, 0x1);
        gbc.writeMem(0x6be4, { 0x9a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7dd0, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0375
        gbc.setState(0x629c, 0x7462, 0xc620, 0x5ea9, 0x9c59, 0x8907, 0x1, 0x1);
        gbc.writeMem(0x629c, { 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7462, gbc.sp());
        EXPECT(0x629d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0376
        gbc.setState(0x7e9b, 0x9896, 0x6700, 0x2be1, 0x8b5f, 0xd5b7, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0x9a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9896, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0377
        gbc.setState(0xbe03, 0x8b9f, 0x200, 0x16e8, 0x2e2b, 0x8b53, 0x0, 0x1);
        gbc.writeMem(0xbe03, { 0x9a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbe03));
        // 9A 0378
        gbc.setState(0x8cf3, 0xbcd, 0xe500, 0xf036, 0x9591, 0x5dc1, 0x0, 0x1);
        gbc.writeMem(0x8cf3, { 0x9a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8cf3));
        // 9A 037A
        gbc.setState(0x79a7, 0x7ed4, 0x2650, 0x462c, 0x819e, 0xf1bf, 0x0, 0x1);
        gbc.writeMem(0x79a7, { 0x9a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0x79a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 037B
        gbc.setState(0x392c, 0xc422, 0x4ef0, 0x358e, 0xbda4, 0xb81, 0x0, 0x1);
        gbc.writeMem(0x392c, { 0x9a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 037C
        gbc.setState(0x5849, 0xb943, 0x5d60, 0xe61e, 0xd560, 0xe78e, 0x1, 0x0);
        gbc.writeMem(0x5849, { 0x9a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb943, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 037D
        gbc.setState(0xed1b, 0x84c5, 0x6230, 0xfae9, 0xa5a1, 0x90a5, 0x0, 0x0);
        gbc.writeMem(0xed1b, { 0x9a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x84c5, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed1b));
        // 9A 037E
        gbc.setState(0x2d9e, 0xfe69, 0x2d30, 0x2298, 0x70be, 0x8f8a, 0x1, 0x1);
        gbc.writeMem(0x2d9e, { 0x9a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfe69, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 037F
        gbc.setState(0x61a3, 0x5144, 0x6630, 0x8cc1, 0x48c1, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0x61a3, { 0x9a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5144, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0380
        gbc.setState(0x2511, 0x1f, 0x2e60, 0x16c5, 0xcf11, 0xe261, 0x0, 0x0);
        gbc.writeMem(0x2511, { 0x9a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1f, gbc.sp());
        EXPECT(0x2512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0381
        gbc.setState(0xba1f, 0x781b, 0xf3b0, 0x242c, 0x64aa, 0xfdd2, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0x9a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x781b, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xba1f));
        // 9A 0382
        gbc.setState(0x917f, 0x3435, 0xaa70, 0x5ca7, 0x80d1, 0x67b2, 0x1, 0x0);
        gbc.writeMem(0x917f, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x917f));
        // 9A 0383
        gbc.setState(0x9d13, 0xb296, 0xdfd0, 0x7713, 0x3d88, 0xa0e4, 0x0, 0x1);
        gbc.writeMem(0x9d13, { 0x9a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb296, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d13));
        // 9A 0384
        gbc.setState(0x4ab4, 0x111e, 0x5600, 0x5dae, 0xb365, 0x1f5d, 0x1, 0x0);
        gbc.writeMem(0x4ab4, { 0x9a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x4ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0385
        gbc.setState(0x46a3, 0x40a1, 0x540, 0xd5f3, 0xc59e, 0x1310, 0x1, 0x1);
        gbc.writeMem(0x46a3, { 0x9a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x40a1, gbc.sp());
        EXPECT(0x46a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0386
        gbc.setState(0x3ce1, 0xcfa4, 0x70f0, 0x247c, 0x4fd, 0x71da, 0x0, 0x0);
        gbc.writeMem(0x3ce1, { 0x9a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcfa4, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0387
        gbc.setState(0xc463, 0x8f0e, 0x3a0, 0x69b4, 0x401e, 0xe064, 0x1, 0x0);
        gbc.writeMem(0xc463, { 0x9a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8f0e, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc463));
        // 9A 0388
        gbc.setState(0x28a4, 0x74a2, 0x86e0, 0xca4, 0x505, 0x12d4, 0x1, 0x1);
        gbc.writeMem(0x28a4, { 0x9a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x74a2, gbc.sp());
        EXPECT(0x28a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0389
        gbc.setState(0x4d9f, 0x3bfd, 0x5640, 0xde18, 0xe025, 0x58f5, 0x1, 0x1);
        gbc.writeMem(0x4d9f, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0x4da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 038A
        gbc.setState(0x3ceb, 0x25ac, 0x4f30, 0x8cc1, 0x327b, 0x3b93, 0x1, 0x1);
        gbc.writeMem(0x3ceb, { 0x9a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 038B
        gbc.setState(0xcbb8, 0xb414, 0x15f0, 0xc890, 0x9c95, 0xd753, 0x0, 0x0);
        gbc.writeMem(0xcbb8, { 0x9a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcbb8));
        // 9A 038C
        gbc.setState(0x5530, 0x7538, 0xdb80, 0xea74, 0x6844, 0x92b1, 0x1, 0x0);
        gbc.writeMem(0x5530, { 0x9a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7538, gbc.sp());
        EXPECT(0x5531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 038D
        gbc.setState(0x9d47, 0xd56a, 0x21a0, 0x457e, 0xcbc6, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0x9d47, { 0x9a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd56a, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d47));
        // 9A 038E
        gbc.setState(0x1315, 0xfe50, 0xa0, 0x7077, 0x8864, 0x24b7, 0x0, 0x1);
        gbc.writeMem(0x1315, { 0x9a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfe50, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 038F
        gbc.setState(0xe8f9, 0x22ef, 0xf050, 0xccdb, 0x7d8a, 0x86a7, 0x1, 0x0);
        gbc.writeMem(0xe8f9, { 0x9a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x22ef, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe8f9));
        // 9A 0390
        gbc.setState(0x1a24, 0x5bc5, 0x67a0, 0x9c59, 0xfa81, 0xe5e, 0x0, 0x1);
        gbc.writeMem(0x1a24, { 0x9a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5bc5, gbc.sp());
        EXPECT(0x1a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0391
        gbc.setState(0xdd60, 0x6e32, 0x6b60, 0x2777, 0xf51e, 0x4416, 0x1, 0x1);
        gbc.writeMem(0xdd60, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6e32, gbc.sp());
        EXPECT(0xdd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xdd60));
        // 9A 0392
        gbc.setState(0xb34e, 0x7348, 0x5880, 0x6902, 0xd098, 0xe08f, 0x0, 0x0);
        gbc.writeMem(0xb34e, { 0x9a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0xb34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb34e));
        // 9A 0393
        gbc.setState(0x6a24, 0x79bc, 0x4ad0, 0xaded, 0x71ea, 0x3444, 0x1, 0x0);
        gbc.writeMem(0x6a24, { 0x9a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x79bc, gbc.sp());
        EXPECT(0x6a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0394
        gbc.setState(0x65aa, 0x7a22, 0xa950, 0xd654, 0xa54e, 0x919e, 0x1, 0x0);
        gbc.writeMem(0x65aa, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7a22, gbc.sp());
        EXPECT(0x65ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0395
        gbc.setState(0x3e62, 0xc876, 0x8f90, 0x156, 0x5fbf, 0x148e, 0x1, 0x0);
        gbc.writeMem(0x3e62, { 0x9a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc876, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0396
        gbc.setState(0x7388, 0x780b, 0xf760, 0x327c, 0xa5dd, 0x2030, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0x9a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x780b, gbc.sp());
        EXPECT(0x7389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 0397
        gbc.setState(0xd946, 0x685e, 0x6210, 0x80dd, 0xa4a2, 0x6474, 0x1, 0x0);
        gbc.writeMem(0xd946, { 0x9a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0xd947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd946));
        // 9A 0398
        gbc.setState(0x2d9c, 0x8da, 0x9330, 0x61de, 0xf3a2, 0x18af, 0x1, 0x0);
        gbc.writeMem(0x2d9c, { 0x9a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0x2d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 0399
        gbc.setState(0x40b8, 0x72eb, 0x5f90, 0x3633, 0x3007, 0xa95, 0x1, 0x0);
        gbc.writeMem(0x40b8, { 0x9a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x72eb, gbc.sp());
        EXPECT(0x40b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 039A
        gbc.setState(0x5855, 0x71ed, 0xbd50, 0x53a1, 0xc735, 0xf876, 0x0, 0x0);
        gbc.writeMem(0x5855, { 0x9a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x71ed, gbc.sp());
        EXPECT(0x5856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 039B
        gbc.setState(0x7838, 0xc5d, 0x4e70, 0x7db6, 0x3d84, 0x9a18, 0x0, 0x1);
        gbc.writeMem(0x7838, { 0x9a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc5d, gbc.sp());
        EXPECT(0x7839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 039C
        gbc.setState(0x214a, 0x85a8, 0xea60, 0xdd28, 0x7eba, 0xa45, 0x0, 0x0);
        gbc.writeMem(0x214a, { 0x9a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x85a8, gbc.sp());
        EXPECT(0x214b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 039D
        gbc.setState(0x1bee, 0xf158, 0x3b30, 0x9b46, 0x795, 0xe199, 0x1, 0x0);
        gbc.writeMem(0x1bee, { 0x9a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0x1bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 039E
        gbc.setState(0x195e, 0xb154, 0xbfe0, 0x8ba9, 0xcbc5, 0x7de7, 0x0, 0x0);
        gbc.writeMem(0x195e, { 0x9a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0x195f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 039F
        gbc.setState(0x1368, 0x5ca3, 0xdc80, 0x4853, 0x9f06, 0xd836, 0x0, 0x0);
        gbc.writeMem(0x1368, { 0x9a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0x1369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A0
        gbc.setState(0x1869, 0x4b44, 0x7d00, 0x23e8, 0x95d2, 0x2530, 0x1, 0x0);
        gbc.writeMem(0x1869, { 0x9a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0x186a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03A1
        gbc.setState(0xd4d0, 0x48be, 0x7030, 0x4d40, 0x6241, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0xd4d0, { 0x9a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd4d0));
        // 9A 03A2
        gbc.setState(0x65b0, 0xf4c1, 0x98d0, 0xecea, 0x1d5d, 0x881, 0x0, 0x1);
        gbc.writeMem(0x65b0, { 0x9a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf4c1, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A4
        gbc.setState(0x2c59, 0x50f5, 0x5600, 0x1a01, 0x486f, 0x34a4, 0x1, 0x0);
        gbc.writeMem(0x2c59, { 0x9a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50f5, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A5
        gbc.setState(0x2c8e, 0x7fb9, 0xe440, 0x2463, 0xb27e, 0x8de0, 0x0, 0x0);
        gbc.writeMem(0x2c8e, { 0x9a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7fb9, gbc.sp());
        EXPECT(0x2c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A7
        gbc.setState(0x30fc, 0x8129, 0x7640, 0x78d5, 0x20b, 0xea4c, 0x0, 0x1);
        gbc.writeMem(0x30fc, { 0x9a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A8
        gbc.setState(0x15a, 0xea58, 0xa950, 0xa5ef, 0x8287, 0xf3a9, 0x0, 0x1);
        gbc.writeMem(0x15a, { 0x9a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0x15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03A9
        gbc.setState(0xbff0, 0x1040, 0x460, 0x4570, 0x857a, 0x180d, 0x1, 0x0);
        gbc.writeMem(0xbff0, { 0x9a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0xbff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbff0));
        // 9A 03AA
        gbc.setState(0x33c6, 0xd8c4, 0x4210, 0xde67, 0x89b2, 0xc175, 0x1, 0x1);
        gbc.writeMem(0x33c6, { 0x9a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd8c4, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03AB
        gbc.setState(0x64f7, 0x6539, 0x53a0, 0x38e0, 0xf3a7, 0x3063, 0x1, 0x1);
        gbc.writeMem(0x64f7, { 0x9a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6539, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03AC
        gbc.setState(0x147b, 0xbbe6, 0xd020, 0x91a0, 0x2a32, 0x703c, 0x0, 0x1);
        gbc.writeMem(0x147b, { 0x9a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbbe6, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03AD
        gbc.setState(0x3a41, 0x94d3, 0xa4f0, 0xcbf6, 0x8120, 0x5278, 0x1, 0x1);
        gbc.writeMem(0x3a41, { 0x9a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x94d3, gbc.sp());
        EXPECT(0x3a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03AE
        gbc.setState(0x12ce, 0x46f3, 0x5310, 0x4515, 0xd85c, 0xaf0, 0x0, 0x1);
        gbc.writeMem(0x12ce, { 0x9a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x12cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03AF
        gbc.setState(0x5dd3, 0x5828, 0x3210, 0x8fdc, 0x1f5a, 0x9f90, 0x0, 0x1);
        gbc.writeMem(0x5dd3, { 0x9a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x5dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03B0
        gbc.setState(0xd9e0, 0xd8e7, 0x49d0, 0xe36d, 0xb4c3, 0x3071, 0x1, 0x0);
        gbc.writeMem(0xd9e0, { 0x9a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0xd9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd9e0));
        // 9A 03B1
        gbc.setState(0x6e68, 0xe2f2, 0xd820, 0xc024, 0x8089, 0x5b70, 0x1, 0x1);
        gbc.writeMem(0x6e68, { 0x9a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe2f2, gbc.sp());
        EXPECT(0x6e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03B2
        gbc.setState(0xe1d8, 0x7148, 0xb9a0, 0xadee, 0x52ee, 0x9daa, 0x0, 0x1);
        gbc.writeMem(0xe1d8, { 0x9a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe1d8));
        // 9A 03B3
        gbc.setState(0x6196, 0x6520, 0xfcc0, 0x91b1, 0x820d, 0x3171, 0x1, 0x0);
        gbc.writeMem(0x6196, { 0x9a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03B4
        gbc.setState(0x8a75, 0x9fe2, 0x86f0, 0x30e2, 0xe356, 0x2648, 0x0, 0x1);
        gbc.writeMem(0x8a75, { 0x9a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8a75));
        // 9A 03B5
        gbc.setState(0x4fbf, 0x7f, 0xed70, 0x26b3, 0x19ff, 0xd208, 0x1, 0x0);
        gbc.writeMem(0x4fbf, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f, gbc.sp());
        EXPECT(0x4fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03B6
        gbc.setState(0xbcb8, 0x5185, 0x3390, 0xb5cd, 0xb2f0, 0xc36b, 0x0, 0x1);
        gbc.writeMem(0xbcb8, { 0x9a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbcb8));
        // 9A 03B7
        gbc.setState(0xeee8, 0xa33f, 0xaa60, 0x580c, 0x1ba1, 0x8935, 0x0, 0x1);
        gbc.writeMem(0xeee8, { 0x9a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa33f, gbc.sp());
        EXPECT(0xeee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xeee8));
        // 9A 03B8
        gbc.setState(0xbaa3, 0x15fc, 0x1f30, 0xaaa9, 0xf284, 0x36c6, 0x0, 0x0);
        gbc.writeMem(0xbaa3, { 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbaa3));
        // 9A 03B9
        gbc.setState(0xea3, 0x2a6b, 0xcae0, 0xac3, 0x4dfe, 0x8650, 0x1, 0x0);
        gbc.writeMem(0xea3, { 0x9a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03BA
        gbc.setState(0xec2e, 0xdce2, 0x4730, 0xb746, 0xa837, 0xe3a6, 0x1, 0x0);
        gbc.writeMem(0xec2e, { 0x9a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdce2, gbc.sp());
        EXPECT(0xec2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xec2e));
        // 9A 03BB
        gbc.setState(0x537d, 0xf530, 0x2600, 0x9c01, 0xfcf1, 0x76d6, 0x0, 0x1);
        gbc.writeMem(0x537d, { 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0x537e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03BC
        gbc.setState(0xb50d, 0xd139, 0xf2e0, 0x5047, 0xefca, 0xd778, 0x1, 0x1);
        gbc.writeMem(0xb50d, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0xb50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb50d));
        // 9A 03BD
        gbc.setState(0x86d9, 0xf87e, 0xf140, 0x4555, 0x4303, 0xe0ed, 0x0, 0x1);
        gbc.writeMem(0x86d9, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0x86da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x86d9));
        // 9A 03BF
        gbc.setState(0xa01f, 0x83f4, 0xe1b0, 0x6caf, 0x40e7, 0x8c28, 0x0, 0x1);
        gbc.writeMem(0xa01f, { 0x9a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x83f4, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa01f));
        // 9A 03C0
        gbc.setState(0xea60, 0x3b4f, 0x9f20, 0xc818, 0x7b91, 0x3f55, 0x1, 0x0);
        gbc.writeMem(0xea60, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0xea61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xea60));
        // 9A 03C1
        gbc.setState(0x7997, 0xf59f, 0x8d60, 0xa695, 0x294f, 0x3755, 0x0, 0x1);
        gbc.writeMem(0x7997, { 0x9a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf59f, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03C2
        gbc.setState(0x5c1e, 0xaea, 0x4380, 0x15cf, 0x32e2, 0xc930, 0x1, 0x1);
        gbc.writeMem(0x5c1e, { 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaea, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03C3
        gbc.setState(0xe9d3, 0xf13f, 0x20e0, 0x364b, 0x423, 0x974, 0x1, 0x0);
        gbc.writeMem(0xe9d3, { 0x9a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf13f, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe9d3));
        // 9A 03C4
        gbc.setState(0x9849, 0xa564, 0xfb20, 0xf938, 0xf019, 0xb866, 0x0, 0x1);
        gbc.writeMem(0x9849, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa564, gbc.sp());
        EXPECT(0x984a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9849));
        // 9A 03C5
        gbc.setState(0x3930, 0x8328, 0x6b20, 0x89c1, 0x86a3, 0xf287, 0x1, 0x1);
        gbc.writeMem(0x3930, { 0x9a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03C6
        gbc.setState(0x422b, 0x1619, 0xd870, 0x8de1, 0xab13, 0x5591, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1619, gbc.sp());
        EXPECT(0x422c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03C7
        gbc.setState(0x7bfc, 0x8eaf, 0xef90, 0x97ce, 0x78b8, 0x4ac9, 0x0, 0x0);
        gbc.writeMem(0x7bfc, { 0x9a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03C8
        gbc.setState(0xc24e, 0x476a, 0x2490, 0xf043, 0x4eef, 0xa520, 0x0, 0x1);
        gbc.writeMem(0xc24e, { 0x9a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x476a, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc24e));
        // 9A 03CA
        gbc.setState(0xa98a, 0xe49d, 0x5a20, 0x88c5, 0xb0fb, 0xceca, 0x1, 0x0);
        gbc.writeMem(0xa98a, { 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa98a));
        // 9A 03CB
        gbc.setState(0xc3a6, 0x901f, 0xfe90, 0x90a1, 0x1675, 0xa09, 0x1, 0x0);
        gbc.writeMem(0xc3a6, { 0x9a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x901f, gbc.sp());
        EXPECT(0xc3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc3a6));
        // 9A 03CC
        gbc.setState(0x5183, 0x3386, 0x2290, 0x78d6, 0x1fe7, 0x8191, 0x0, 0x0);
        gbc.writeMem(0x5183, { 0x9a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3386, gbc.sp());
        EXPECT(0x5184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03CD
        gbc.setState(0xbf54, 0xdade, 0xef00, 0xa0da, 0x419e, 0x82dc, 0x0, 0x1);
        gbc.writeMem(0xbf54, { 0x9a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdade, gbc.sp());
        EXPECT(0xbf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbf54));
        // 9A 03CE
        gbc.setState(0xa2a0, 0x2881, 0xfe20, 0x22f7, 0x98dd, 0x17e3, 0x1, 0x1);
        gbc.writeMem(0xa2a0, { 0x9a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa2a0));
        // 9A 03CF
        gbc.setState(0x32f9, 0x986a, 0x51d0, 0x2165, 0xe6ce, 0xcb0, 0x1, 0x1);
        gbc.writeMem(0x32f9, { 0x9a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0x32fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03D0
        gbc.setState(0xce40, 0xd12a, 0x6a80, 0x19b7, 0x7415, 0xe784, 0x1, 0x1);
        gbc.writeMem(0xce40, { 0x9a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xce40));
        // 9A 03D1
        gbc.setState(0x9368, 0x8385, 0x6530, 0xaedf, 0x6e13, 0x8736, 0x0, 0x0);
        gbc.writeMem(0x9368, { 0x9a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8385, gbc.sp());
        EXPECT(0x9369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9368));
        // 9A 03D2
        gbc.setState(0x9293, 0xa8fe, 0x79a0, 0xbe3b, 0x36ca, 0x494b, 0x0, 0x1);
        gbc.writeMem(0x9293, { 0x9a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x9294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9293));
        // 9A 03D3
        gbc.setState(0x741a, 0xfd43, 0x5940, 0xae89, 0x4d6d, 0x99f0, 0x1, 0x0);
        gbc.writeMem(0x741a, { 0x9a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03D4
        gbc.setState(0x3c57, 0x642c, 0x7c30, 0x47c7, 0x42a7, 0xf045, 0x1, 0x1);
        gbc.writeMem(0x3c57, { 0x9a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0x3c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03D5
        gbc.setState(0x57c0, 0x3832, 0xca60, 0x1be6, 0xe3fd, 0x5cc7, 0x0, 0x0);
        gbc.writeMem(0x57c0, { 0x9a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3832, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03D6
        gbc.setState(0xca89, 0x7f35, 0x5100, 0x69e1, 0x90a4, 0x95cd, 0x1, 0x0);
        gbc.writeMem(0xca89, { 0x9a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca89));
        // 9A 03D7
        gbc.setState(0x8307, 0xd200, 0x6860, 0x619a, 0xcce3, 0x134d, 0x0, 0x0);
        gbc.writeMem(0x8307, { 0x9a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0x8308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8307));
        // 9A 03D8
        gbc.setState(0x2317, 0xa5bb, 0x5be0, 0x5bbc, 0x9e05, 0x46aa, 0x1, 0x1);
        gbc.writeMem(0x2317, { 0x9a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa5bb, gbc.sp());
        EXPECT(0x2318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03D9
        gbc.setState(0xef6c, 0xa40, 0x88c0, 0x6f9e, 0xce8, 0x14ba, 0x1, 0x0);
        gbc.writeMem(0xef6c, { 0x9a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa40, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xef6c));
        // 9A 03DA
        gbc.setState(0x60ca, 0x7baa, 0x3ba0, 0xfe36, 0xd311, 0xcd63, 0x1, 0x1);
        gbc.writeMem(0x60ca, { 0x9a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03DB
        gbc.setState(0xc895, 0x36b7, 0x4cb0, 0xb28, 0x4ffb, 0x82fb, 0x0, 0x1);
        gbc.writeMem(0xc895, { 0x9a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc895));
        // 9A 03DC
        gbc.setState(0xae6a, 0x8de2, 0x5940, 0x3d44, 0x89a, 0x4b0d, 0x1, 0x1);
        gbc.writeMem(0xae6a, { 0x9a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8de2, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xae6a));
        // 9A 03DD
        gbc.setState(0x262f, 0x630a, 0xef30, 0x54ea, 0x8464, 0x292e, 0x0, 0x1);
        gbc.writeMem(0x262f, { 0x9a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x630a, gbc.sp());
        EXPECT(0x2630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9A 03DE
        gbc.setState(0x87a3, 0x988, 0xc010, 0xc605, 0xbcd5, 0xbed3, 0x0, 0x0);
        gbc.writeMem(0x87a3, { 0x9a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0x87a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x87a3));
        // 9A 03E0
        gbc.setState(0x72dd, 0x9037, 0xf60, 0x4a03, 0xe7aa, 0xaff9, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0x9a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9037, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03E1
        gbc.setState(0xa1e4, 0xc98f, 0x5170, 0x623, 0x81c6, 0xccf5, 0x1, 0x1);
        gbc.writeMem(0xa1e4, { 0x9a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc98f, gbc.sp());
        EXPECT(0xa1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa1e4));
        // 9A 03E2
        gbc.setState(0xe74c, 0xeb9, 0x5540, 0xb800, 0x3177, 0xe4c, 0x1, 0x1);
        gbc.writeMem(0xe74c, { 0x9a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeb9, gbc.sp());
        EXPECT(0xe74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe74c));
        // 9A 03E3
        gbc.setState(0x5da2, 0x5613, 0xa030, 0xfacb, 0xba22, 0xa625, 0x1, 0x0);
        gbc.writeMem(0x5da2, { 0x9a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5613, gbc.sp());
        EXPECT(0x5da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03E4
        gbc.setState(0x9c59, 0x361c, 0xca00, 0xbf5a, 0xc3b7, 0xce24, 0x1, 0x1);
        gbc.writeMem(0x9c59, { 0x9a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9c59));
        // 9A 03E5
        gbc.setState(0x81a4, 0x91c1, 0x5780, 0x3583, 0xa48b, 0x6b26, 0x0, 0x1);
        gbc.writeMem(0x81a4, { 0x9a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x91c1, gbc.sp());
        EXPECT(0x81a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x81a4));
        // 9A 03E6
        gbc.setState(0x5cdb, 0x6b36, 0x2390, 0xa0b3, 0xee89, 0xc9db, 0x0, 0x0);
        gbc.writeMem(0x5cdb, { 0x9a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b36, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9A 03E7
        gbc.setState(0xd8a7, 0x107d, 0xc5e0, 0xac12, 0x4c99, 0x29fa, 0x0, 0x0);
        gbc.writeMem(0xd8a7, { 0x9a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0xd8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd8a7));
    }
