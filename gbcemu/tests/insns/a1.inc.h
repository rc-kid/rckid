    TEST(gbcemu, opcode_a1) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A1 0000
        gbc.setState(0xe230, 0x3c2e, 0xa590, 0xbdcd, 0x5d1f, 0xca19, 0x1, 0x1);
        gbc.writeMem(0xe230, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe230));
        // A1 0001
        gbc.setState(0xa012, 0xfe2a, 0xe970, 0x94ee, 0xf664, 0x3400, 0x0, 0x0);
        gbc.writeMem(0xa012, { 0xa1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0xa013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa012));
        // A1 0002
        gbc.setState(0x2e3d, 0x306d, 0x4f30, 0x3017, 0x5b6b, 0xbc0d, 0x0, 0x1);
        gbc.writeMem(0x2e3d, { 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x306d, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0003
        gbc.setState(0x4a0e, 0x58ef, 0x3090, 0xba4b, 0x2802, 0x6047, 0x0, 0x1);
        gbc.writeMem(0x4a0e, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x58ef, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0004
        gbc.setState(0x8822, 0x728a, 0xe8a0, 0x40fa, 0x8127, 0xc231, 0x1, 0x1);
        gbc.writeMem(0x8822, { 0xa1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x728a, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8822));
        // A1 0005
        gbc.setState(0xdc74, 0x1ad2, 0xd120, 0x60a4, 0x40b8, 0x8c01, 0x0, 0x0);
        gbc.writeMem(0xdc74, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdc74));
        // A1 0006
        gbc.setState(0x13bc, 0x827a, 0x71c0, 0x391c, 0xd546, 0x8a67, 0x0, 0x0);
        gbc.writeMem(0x13bc, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x827a, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0007
        gbc.setState(0x70bf, 0xd850, 0x10d0, 0xdebb, 0x3be7, 0x40ed, 0x1, 0x0);
        gbc.writeMem(0x70bf, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0x70c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0008
        gbc.setState(0x16ec, 0x17f3, 0x1e40, 0xfa3b, 0x445e, 0xb1be, 0x0, 0x0);
        gbc.writeMem(0x16ec, { 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x17f3, gbc.sp());
        EXPECT(0x16ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0009
        gbc.setState(0x60de, 0x74a1, 0xf690, 0xd575, 0xbeaa, 0x1ad4, 0x0, 0x1);
        gbc.writeMem(0x60de, { 0xa1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 000A
        gbc.setState(0xa78d, 0x9f82, 0xda90, 0xd305, 0x6e27, 0xcc4a, 0x1, 0x1);
        gbc.writeMem(0xa78d, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9f82, gbc.sp());
        EXPECT(0xa78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa78d));
        // A1 000B
        gbc.setState(0x947a, 0xccac, 0x50c0, 0xac33, 0xa376, 0x9972, 0x1, 0x0);
        gbc.writeMem(0x947a, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0x947b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x947a));
        // A1 000C
        gbc.setState(0x94f2, 0x1f91, 0x5b80, 0x8749, 0xfb33, 0x71ba, 0x0, 0x1);
        gbc.writeMem(0x94f2, { 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1f91, gbc.sp());
        EXPECT(0x94f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x94f2));
        // A1 000D
        gbc.setState(0x6fca, 0x7d60, 0xb9c0, 0xa243, 0xfe84, 0xb856, 0x0, 0x1);
        gbc.writeMem(0x6fca, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d60, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 000E
        gbc.setState(0xbd99, 0x5714, 0x1af0, 0xa8f5, 0x114d, 0x8574, 0x1, 0x0);
        gbc.writeMem(0xbd99, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbd99));
        // A1 000F
        gbc.setState(0x1d96, 0x14b3, 0xc420, 0xd027, 0x8b53, 0x7a23, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0010
        gbc.setState(0x4062, 0xbfe3, 0xa920, 0x1ee6, 0xe3d5, 0xf56c, 0x1, 0x0);
        gbc.writeMem(0x4062, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x4063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0011
        gbc.setState(0xbe9f, 0x39d, 0xc520, 0xbbd1, 0xcab2, 0xe4a7, 0x1, 0x0);
        gbc.writeMem(0xbe9f, { 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0xbea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe9f));
        // A1 0012
        gbc.setState(0x244c, 0xe87e, 0xcbf0, 0x8a25, 0xedcd, 0x8d02, 0x1, 0x0);
        gbc.writeMem(0x244c, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x244d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0013
        gbc.setState(0x5ae5, 0xa5e5, 0x1420, 0xcd09, 0x3337, 0xf3a1, 0x0, 0x0);
        gbc.writeMem(0x5ae5, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa5e5, gbc.sp());
        EXPECT(0x5ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0014
        gbc.setState(0x25e1, 0xc2d4, 0x9a20, 0xa3f7, 0xadd1, 0xb997, 0x1, 0x1);
        gbc.writeMem(0x25e1, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x25e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0015
        gbc.setState(0xb7c, 0x7d64, 0x6970, 0xdec4, 0xb042, 0x3c26, 0x1, 0x1);
        gbc.writeMem(0xb7c, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7d64, gbc.sp());
        EXPECT(0xb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0016
        gbc.setState(0x76e7, 0x819a, 0x4f20, 0x2b2b, 0xf632, 0x7905, 0x1, 0x1);
        gbc.writeMem(0x76e7, { 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0x76e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0017
        gbc.setState(0xb435, 0xc3d7, 0x8aa0, 0x334b, 0x5b1f, 0x2c64, 0x1, 0x1);
        gbc.writeMem(0xb435, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc3d7, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb435));
        // A1 0018
        gbc.setState(0xebe7, 0x472c, 0x93f0, 0x33eb, 0xb0d0, 0xee9, 0x0, 0x1);
        gbc.writeMem(0xebe7, { 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x472c, gbc.sp());
        EXPECT(0xebe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xebe7));
        // A1 0019
        gbc.setState(0x7148, 0xa54a, 0x6db0, 0x89ab, 0xa9a7, 0x4e74, 0x1, 0x1);
        gbc.writeMem(0x7148, { 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa54a, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 001A
        gbc.setState(0x90bf, 0x74c8, 0x90b0, 0xd033, 0x841d, 0x661c, 0x1, 0x0);
        gbc.writeMem(0x90bf, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x90bf));
        // A1 001B
        gbc.setState(0x54db, 0x5f2f, 0xae00, 0x4137, 0x7243, 0x6299, 0x1, 0x0);
        gbc.writeMem(0x54db, { 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5f2f, gbc.sp());
        EXPECT(0x54dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 001C
        gbc.setState(0xda05, 0x70db, 0x78b0, 0x1a5b, 0xaab2, 0x31f6, 0x1, 0x0);
        gbc.writeMem(0xda05, { 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda05));
        // A1 001D
        gbc.setState(0xe74, 0xba7f, 0xd030, 0xe026, 0x4189, 0x59d0, 0x1, 0x0);
        gbc.writeMem(0xe74, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0xe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 001E
        gbc.setState(0xd216, 0x20c3, 0x66e0, 0x8cd1, 0x55b8, 0x599, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd216));
        // A1 001F
        gbc.setState(0x278f, 0x9cca, 0xaef0, 0xcb7, 0xd95c, 0x7ee0, 0x0, 0x0);
        gbc.writeMem(0x278f, { 0xa1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9cca, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0020
        gbc.setState(0x658a, 0x635, 0x570, 0x8b15, 0xaeed, 0xa381, 0x0, 0x0);
        gbc.writeMem(0x658a, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x635, gbc.sp());
        EXPECT(0x658b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0021
        gbc.setState(0x689e, 0xcf7d, 0xd2f0, 0x3374, 0xc3cc, 0xa3b2, 0x0, 0x1);
        gbc.writeMem(0x689e, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcf7d, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0022
        gbc.setState(0x4767, 0xd8a6, 0x39c0, 0x7567, 0xa3b4, 0xe8ef, 0x1, 0x1);
        gbc.writeMem(0x4767, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd8a6, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0023
        gbc.setState(0x71cf, 0x3208, 0x4c40, 0xf974, 0x4d35, 0xa9d1, 0x1, 0x0);
        gbc.writeMem(0x71cf, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3208, gbc.sp());
        EXPECT(0x71d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0024
        gbc.setState(0x650a, 0x27a, 0xe40, 0x8fb4, 0xec16, 0x61bd, 0x1, 0x0);
        gbc.writeMem(0x650a, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x27a, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0025
        gbc.setState(0x99c2, 0xd37d, 0x5e0, 0xcd07, 0xf357, 0x4852, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd37d, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x99c2));
        // A1 0026
        gbc.setState(0x3002, 0x1160, 0x99e0, 0x48ac, 0x7aed, 0x87c7, 0x0, 0x0);
        gbc.writeMem(0x3002, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1160, gbc.sp());
        EXPECT(0x3003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0027
        gbc.setState(0x848b, 0xbf9e, 0x8730, 0xedf0, 0x5d6e, 0x8e25, 0x0, 0x1);
        gbc.writeMem(0x848b, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbf9e, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x848b));
        // A1 0029
        gbc.setState(0x7d5d, 0x4bb9, 0x3fb0, 0x4daa, 0x885b, 0x67ea, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4bb9, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 002A
        gbc.setState(0x2cac, 0x88ae, 0x8770, 0x76d8, 0xdeea, 0x5b22, 0x0, 0x0);
        gbc.writeMem(0x2cac, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 002B
        gbc.setState(0xc66a, 0x3bad, 0x40a0, 0x8406, 0xcba7, 0xe462, 0x0, 0x0);
        gbc.writeMem(0xc66a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0xc66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc66a));
        // A1 002C
        gbc.setState(0x31dc, 0xe624, 0x700, 0x5b25, 0xe591, 0x161b, 0x0, 0x1);
        gbc.writeMem(0x31dc, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 002D
        gbc.setState(0x5aca, 0xb0b5, 0xf040, 0x4a12, 0x8192, 0xf2db, 0x1, 0x0);
        gbc.writeMem(0x5aca, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb0b5, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 002E
        gbc.setState(0xdb3b, 0x675a, 0xb2f0, 0xf181, 0x98d0, 0x177c, 0x1, 0x1);
        gbc.writeMem(0xdb3b, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdb3b));
        // A1 0031
        gbc.setState(0xbbeb, 0xcdaa, 0xfec0, 0x22e8, 0xf483, 0xd4ec, 0x0, 0x1);
        gbc.writeMem(0xbbeb, { 0xa1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcdaa, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbbeb));
        // A1 0033
        gbc.setState(0x367, 0x68c0, 0xbe50, 0xae3c, 0x7f7e, 0x375b, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x68c0, gbc.sp());
        EXPECT(0x368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0034
        gbc.setState(0x7d8a, 0xf9c8, 0xbce0, 0x3340, 0x29c4, 0xf2f9, 0x1, 0x0);
        gbc.writeMem(0x7d8a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf9c8, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0035
        gbc.setState(0x6f88, 0xb1ac, 0xbf60, 0x6b9e, 0x1432, 0x5bb4, 0x1, 0x1);
        gbc.writeMem(0x6f88, { 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb1ac, gbc.sp());
        EXPECT(0x6f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0036
        gbc.setState(0x7a90, 0x47d8, 0x7b10, 0xa338, 0x7190, 0x6c7d, 0x0, 0x1);
        gbc.writeMem(0x7a90, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x47d8, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0037
        gbc.setState(0x13f1, 0xdfcf, 0xbc60, 0x678f, 0xe5a7, 0xadef, 0x1, 0x1);
        gbc.writeMem(0x13f1, { 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0x13f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0038
        gbc.setState(0xe3e2, 0x74af, 0x2650, 0xc85d, 0xbc3f, 0xbb21, 0x0, 0x1);
        gbc.writeMem(0xe3e2, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x74af, gbc.sp());
        EXPECT(0xe3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe3e2));
        // A1 0039
        gbc.setState(0x5876, 0x9f59, 0x5c70, 0xdd47, 0x719, 0x1602, 0x1, 0x1);
        gbc.writeMem(0x5876, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9f59, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 003A
        gbc.setState(0xe57f, 0x617, 0x2990, 0xb35c, 0x547a, 0x539e, 0x0, 0x1);
        gbc.writeMem(0xe57f, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe57f));
        // A1 003B
        gbc.setState(0x861, 0x2b82, 0xbb20, 0xd3d4, 0x895b, 0xebd0, 0x0, 0x1);
        gbc.writeMem(0x861, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 003C
        gbc.setState(0x971e, 0x1b1e, 0xf5e0, 0xd666, 0x1e27, 0xa067, 0x1, 0x0);
        gbc.writeMem(0x971e, { 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0x971f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x971e));
        // A1 003D
        gbc.setState(0xc6a4, 0xb97c, 0x4dc0, 0xa82d, 0x886a, 0x5ab4, 0x0, 0x1);
        gbc.writeMem(0xc6a4, { 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb97c, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc6a4));
        // A1 003E
        gbc.setState(0xe2ce, 0xf89f, 0x29a0, 0xeb19, 0x1143, 0x4a9, 0x1, 0x0);
        gbc.writeMem(0xe2ce, { 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0xe2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe2ce));
        // A1 003F
        gbc.setState(0xeaad, 0xb73d, 0x1790, 0x1e17, 0xed07, 0x252f, 0x0, 0x0);
        gbc.writeMem(0xeaad, { 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0xeaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xeaad));
        // A1 0041
        gbc.setState(0x47b7, 0xb599, 0x6950, 0xe8c5, 0x6359, 0x2892, 0x1, 0x0);
        gbc.writeMem(0x47b7, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x47b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0042
        gbc.setState(0x3223, 0x93db, 0x5850, 0x52f8, 0x3540, 0x3f48, 0x0, 0x1);
        gbc.writeMem(0x3223, { 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x3224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0043
        gbc.setState(0x7f60, 0x4665, 0x6d0, 0x2406, 0x5abb, 0x84c0, 0x0, 0x0);
        gbc.writeMem(0x7f60, { 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4665, gbc.sp());
        EXPECT(0x7f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0044
        gbc.setState(0x20d3, 0xbe43, 0x2c90, 0x368e, 0x6649, 0x3e6b, 0x1, 0x1);
        gbc.writeMem(0x20d3, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbe43, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0045
        gbc.setState(0x14ef, 0xaf1e, 0x24c0, 0xc3e1, 0x6873, 0x6ea8, 0x0, 0x0);
        gbc.writeMem(0x14ef, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaf1e, gbc.sp());
        EXPECT(0x14f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0046
        gbc.setState(0x51ae, 0x9b4f, 0xd990, 0x2068, 0x8b8e, 0x7ead, 0x0, 0x1);
        gbc.writeMem(0x51ae, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b4f, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0047
        gbc.setState(0xe483, 0xf309, 0xced0, 0xa71e, 0xd464, 0x477f, 0x1, 0x1);
        gbc.writeMem(0xe483, { 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0xe484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe483));
        // A1 0048
        gbc.setState(0x6826, 0x174d, 0x83a0, 0xc3e1, 0xec76, 0xcfc3, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x6827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0049
        gbc.setState(0x5b96, 0xf303, 0x6c40, 0xa698, 0xa935, 0xc211, 0x1, 0x1);
        gbc.writeMem(0x5b96, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf303, gbc.sp());
        EXPECT(0x5b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004A
        gbc.setState(0x398b, 0x3f6b, 0xcd10, 0xc911, 0xf0c5, 0xecdd, 0x1, 0x0);
        gbc.writeMem(0x398b, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3f6b, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004B
        gbc.setState(0x7a4a, 0xa96a, 0x1290, 0xeb04, 0x9a95, 0xc76e, 0x0, 0x0);
        gbc.writeMem(0x7a4a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa96a, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004C
        gbc.setState(0x2489, 0xfd89, 0xaed0, 0x4f38, 0x9feb, 0x34d6, 0x1, 0x0);
        gbc.writeMem(0x2489, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfd89, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004D
        gbc.setState(0x72e4, 0x5d82, 0xe190, 0xfff1, 0x2907, 0xeb86, 0x1, 0x0);
        gbc.writeMem(0x72e4, { 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0x72e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004E
        gbc.setState(0x541f, 0x18ab, 0x6cc0, 0xdc62, 0xaa96, 0x4145, 0x1, 0x1);
        gbc.writeMem(0x541f, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x18ab, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 004F
        gbc.setState(0x3691, 0x4cae, 0x28b0, 0xe7fe, 0xaae, 0xa71, 0x1, 0x1);
        gbc.writeMem(0x3691, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x3692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0050
        gbc.setState(0xe45d, 0x3482, 0x550, 0xd5d4, 0xf0df, 0x6962, 0x1, 0x0);
        gbc.writeMem(0xe45d, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3482, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe45d));
        // A1 0051
        gbc.setState(0x6568, 0xbbe1, 0x44b0, 0x5bc4, 0xc395, 0xf611, 0x1, 0x0);
        gbc.writeMem(0x6568, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbbe1, gbc.sp());
        EXPECT(0x6569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0052
        gbc.setState(0xcf0a, 0x5d8c, 0x3150, 0x5e39, 0xb6b4, 0x8d8, 0x0, 0x1);
        gbc.writeMem(0xcf0a, { 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xcf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf0a));
        // A1 0053
        gbc.setState(0x1719, 0xdc87, 0x17e0, 0x16c3, 0xe63f, 0x2c68, 0x0, 0x1);
        gbc.writeMem(0x1719, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdc87, gbc.sp());
        EXPECT(0x171a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0054
        gbc.setState(0x46a5, 0x9a63, 0xa760, 0x2263, 0x92b0, 0x5e02, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9a63, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0055
        gbc.setState(0xeba2, 0xb08d, 0x20, 0x656f, 0x8941, 0xa4ca, 0x1, 0x0);
        gbc.writeMem(0xeba2, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xeba2));
        // A1 0056
        gbc.setState(0x99e1, 0xf259, 0x60c0, 0xb0f2, 0xfadb, 0x275f, 0x0, 0x1);
        gbc.writeMem(0x99e1, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x99e1));
        // A1 0057
        gbc.setState(0x1077, 0xa594, 0x9770, 0x6e37, 0x13b, 0x2ea0, 0x0, 0x1);
        gbc.writeMem(0x1077, { 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0058
        gbc.setState(0x3e74, 0xab3c, 0x70, 0xb1ba, 0xeb52, 0x1973, 0x1, 0x1);
        gbc.writeMem(0x3e74, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xab3c, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0059
        gbc.setState(0x51cb, 0x70d5, 0xc050, 0x7e2a, 0x9495, 0x600b, 0x1, 0x0);
        gbc.writeMem(0x51cb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x70d5, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 005A
        gbc.setState(0x7798, 0x94da, 0x5880, 0xecd1, 0x46b9, 0xdc29, 0x0, 0x0);
        gbc.writeMem(0x7798, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 005B
        gbc.setState(0x9e5c, 0x3f15, 0x69c0, 0xcf0, 0x7065, 0x3f27, 0x1, 0x1);
        gbc.writeMem(0x9e5c, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x9e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9e5c));
        // A1 005C
        gbc.setState(0x3970, 0xdb55, 0x7060, 0x1525, 0x821d, 0xd234, 0x1, 0x0);
        gbc.writeMem(0x3970, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 005D
        gbc.setState(0x4169, 0xb26e, 0x5420, 0x344d, 0x57a0, 0x3119, 0x0, 0x1);
        gbc.writeMem(0x4169, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb26e, gbc.sp());
        EXPECT(0x416a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 005E
        gbc.setState(0x369f, 0xa959, 0x96f0, 0x88d, 0xf4f9, 0xdc20, 0x0, 0x1);
        gbc.writeMem(0x369f, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa959, gbc.sp());
        EXPECT(0x36a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 005F
        gbc.setState(0xb61e, 0x7060, 0xe920, 0x56f1, 0x9136, 0xd0b0, 0x1, 0x0);
        gbc.writeMem(0xb61e, { 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7060, gbc.sp());
        EXPECT(0xb61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb61e));
        // A1 0060
        gbc.setState(0x17db, 0x42be, 0x8ca0, 0xbf47, 0x2d9c, 0xb35, 0x0, 0x1);
        gbc.writeMem(0x17db, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x42be, gbc.sp());
        EXPECT(0x17dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0062
        gbc.setState(0x4be3, 0x841d, 0xc5c0, 0xf445, 0x9602, 0xf8b3, 0x0, 0x1);
        gbc.writeMem(0x4be3, { 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0063
        gbc.setState(0x627b, 0x3a59, 0x4f40, 0xd9b6, 0xfe4b, 0x24f, 0x1, 0x0);
        gbc.writeMem(0x627b, { 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3a59, gbc.sp());
        EXPECT(0x627c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0064
        gbc.setState(0xea2, 0x3679, 0x1f20, 0x7bad, 0x7a66, 0xeb5, 0x1, 0x1);
        gbc.writeMem(0xea2, { 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3679, gbc.sp());
        EXPECT(0xea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0066
        gbc.setState(0x9404, 0xc692, 0x19f0, 0x63b9, 0x600a, 0x860c, 0x1, 0x1);
        gbc.writeMem(0x9404, { 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x9405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9404));
        // A1 0067
        gbc.setState(0x3fa4, 0x8d8, 0x1b90, 0xb6d2, 0x7eab, 0x8bef, 0x1, 0x1);
        gbc.writeMem(0x3fa4, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8d8, gbc.sp());
        EXPECT(0x3fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0068
        gbc.setState(0x55ac, 0x8c19, 0xaa30, 0xad65, 0x6b0c, 0xa403, 0x0, 0x0);
        gbc.writeMem(0x55ac, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8c19, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0069
        gbc.setState(0x11fe, 0x4b4, 0x77a0, 0x9e15, 0xe624, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0x11fe, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4b4, gbc.sp());
        EXPECT(0x11ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 006A
        gbc.setState(0xd024, 0x51c3, 0x1a10, 0x33e3, 0x384a, 0x6e58, 0x0, 0x0);
        gbc.writeMem(0xd024, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x51c3, gbc.sp());
        EXPECT(0xd025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd024));
        // A1 006B
        gbc.setState(0x1798, 0x7225, 0x10f0, 0x28f4, 0x8b73, 0xa188, 0x1, 0x1);
        gbc.writeMem(0x1798, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7225, gbc.sp());
        EXPECT(0x1799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 006C
        gbc.setState(0xc6ea, 0x10cb, 0xb000, 0xf41f, 0x6af8, 0x4541, 0x1, 0x0);
        gbc.writeMem(0xc6ea, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0xc6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc6ea));
        // A1 006D
        gbc.setState(0x4ccd, 0x3fd1, 0x74f0, 0x9b59, 0xf909, 0xede9, 0x1, 0x1);
        gbc.writeMem(0x4ccd, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3fd1, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 006E
        gbc.setState(0x59b6, 0x4555, 0xcd20, 0x7a4a, 0xef5d, 0x9f98, 0x0, 0x1);
        gbc.writeMem(0x59b6, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4555, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 006F
        gbc.setState(0xc172, 0xaa92, 0x4a60, 0x8faf, 0x2713, 0x6a7d, 0x0, 0x0);
        gbc.writeMem(0xc172, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc172));
        // A1 0070
        gbc.setState(0xdbee, 0x7342, 0x40e0, 0x452a, 0x2812, 0x47da, 0x1, 0x0);
        gbc.writeMem(0xdbee, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7342, gbc.sp());
        EXPECT(0xdbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdbee));
        // A1 0071
        gbc.setState(0x7ad1, 0x3343, 0x5580, 0x77e, 0x91ff, 0xc5bd, 0x0, 0x1);
        gbc.writeMem(0x7ad1, { 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0072
        gbc.setState(0x2de0, 0x23c0, 0x8590, 0x19d3, 0xf558, 0xbaf0, 0x1, 0x1);
        gbc.writeMem(0x2de0, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x23c0, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0073
        gbc.setState(0x85c0, 0x857c, 0x11d0, 0xae82, 0x42c2, 0x257d, 0x1, 0x1);
        gbc.writeMem(0x85c0, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0x85c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x85c0));
        // A1 0074
        gbc.setState(0xbe64, 0x541d, 0x1110, 0x9068, 0x9c59, 0x26ed, 0x0, 0x0);
        gbc.writeMem(0xbe64, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x541d, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe64));
        // A1 0075
        gbc.setState(0x30fb, 0x316a, 0x8340, 0x697a, 0xea70, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0077
        gbc.setState(0x8c2b, 0xe63e, 0xb1c0, 0x298f, 0x962d, 0xd197, 0x1, 0x0);
        gbc.writeMem(0x8c2b, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe63e, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8c2b));
        // A1 0078
        gbc.setState(0x64d, 0x4e5, 0xdaf0, 0x3ac4, 0xc5ee, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0x64d, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4e5, gbc.sp());
        EXPECT(0x64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0079
        gbc.setState(0x6867, 0x1277, 0x2a70, 0xeb38, 0x942, 0xe16, 0x0, 0x0);
        gbc.writeMem(0x6867, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 007A
        gbc.setState(0x18b5, 0xbcb4, 0x5dc0, 0x7150, 0x9464, 0x587d, 0x1, 0x0);
        gbc.writeMem(0x18b5, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbcb4, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 007B
        gbc.setState(0xd7d7, 0xdf8e, 0x2f0, 0xc9cc, 0x15e1, 0xbe4, 0x0, 0x0);
        gbc.writeMem(0xd7d7, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdf8e, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd7d7));
        // A1 007C
        gbc.setState(0x382f, 0xcdd5, 0x6ea0, 0x8783, 0x42ca, 0xdbbf, 0x0, 0x0);
        gbc.writeMem(0x382f, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x3830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 007E
        gbc.setState(0xc8f2, 0x1113, 0xdfd0, 0x65c4, 0xbf96, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0xc8f2, { 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1113, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8f2));
        // A1 007F
        gbc.setState(0x8250, 0x6733, 0x7490, 0xc67d, 0xa0b2, 0x8665, 0x1, 0x0);
        gbc.writeMem(0x8250, { 0xa1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0x8251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8250));
        // A1 0080
        gbc.setState(0x480, 0xc81, 0xb990, 0xe571, 0x199b, 0x4c18, 0x0, 0x0);
        gbc.writeMem(0x480, { 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0x481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0081
        gbc.setState(0x6398, 0x919d, 0x5b50, 0xc80a, 0x7e08, 0x5284, 0x0, 0x1);
        gbc.writeMem(0x6398, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x919d, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0082
        gbc.setState(0xd477, 0xafdc, 0x280, 0x3c94, 0x1d03, 0xe778, 0x0, 0x1);
        gbc.writeMem(0xd477, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd477));
        // A1 0083
        gbc.setState(0xcba5, 0x9749, 0xc340, 0x40fb, 0x6707, 0xe76e, 0x1, 0x1);
        gbc.writeMem(0xcba5, { 0xa1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9749, gbc.sp());
        EXPECT(0xcba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcba5));
        // A1 0084
        gbc.setState(0x5eb5, 0xe5e4, 0x98b0, 0xa78e, 0x2b1b, 0x6264, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0085
        gbc.setState(0xe6e1, 0x4da6, 0xd640, 0x4ef9, 0xb904, 0xa633, 0x1, 0x1);
        gbc.writeMem(0xe6e1, { 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe6e1));
        // A1 0087
        gbc.setState(0xe83b, 0xcd2c, 0xfd00, 0xcf00, 0x673c, 0x66cc, 0x0, 0x1);
        gbc.writeMem(0xe83b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcd2c, gbc.sp());
        EXPECT(0xe83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe83b));
        // A1 0088
        gbc.setState(0xcf2c, 0x2c16, 0x4d10, 0x1077, 0xa087, 0xd43e, 0x0, 0x0);
        gbc.writeMem(0xcf2c, { 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c16, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf2c));
        // A1 0089
        gbc.setState(0x7b09, 0x1265, 0xe560, 0x1239, 0xfe6f, 0x98d4, 0x1, 0x0);
        gbc.writeMem(0x7b09, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1265, gbc.sp());
        EXPECT(0x7b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 008A
        gbc.setState(0xa99d, 0x928b, 0xab60, 0x8b58, 0xf5ef, 0x1119, 0x0, 0x1);
        gbc.writeMem(0xa99d, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x928b, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa99d));
        // A1 008B
        gbc.setState(0x3874, 0xe6fc, 0x1640, 0x1f43, 0x2ed2, 0xc757, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe6fc, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 008C
        gbc.setState(0x7914, 0xceb4, 0xd8a0, 0xbddb, 0xb7b5, 0x4bbe, 0x1, 0x1);
        gbc.writeMem(0x7914, { 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 008D
        gbc.setState(0x76dd, 0x35c0, 0x50d0, 0xacfe, 0x4108, 0x2d77, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 008E
        gbc.setState(0x348a, 0x7084, 0x470, 0x54c6, 0x12bd, 0xaa7a, 0x1, 0x0);
        gbc.writeMem(0x348a, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7084, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 008F
        gbc.setState(0xc389, 0x1383, 0xe240, 0xa89f, 0xd301, 0x8b2d, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1383, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc389));
        // A1 0090
        gbc.setState(0xd713, 0x5550, 0xe430, 0x449c, 0x4200, 0xdb10, 0x1, 0x0);
        gbc.writeMem(0xd713, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd713));
        // A1 0091
        gbc.setState(0x1b5e, 0x9d3f, 0x12a0, 0xe039, 0x5305, 0x828b, 0x1, 0x1);
        gbc.writeMem(0x1b5e, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9d3f, gbc.sp());
        EXPECT(0x1b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0092
        gbc.setState(0xd945, 0x19ac, 0x6ec0, 0x1fe7, 0x3450, 0x6190, 0x0, 0x0);
        gbc.writeMem(0xd945, { 0xa1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x19ac, gbc.sp());
        EXPECT(0xd946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd945));
        // A1 0093
        gbc.setState(0x639d, 0x89e8, 0x7550, 0xa068, 0xc8bb, 0xc6a2, 0x1, 0x1);
        gbc.writeMem(0x639d, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0094
        gbc.setState(0xdb6c, 0xdccc, 0x5fa0, 0xa70b, 0x3bd, 0xf4fa, 0x0, 0x1);
        gbc.writeMem(0xdb6c, { 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdccc, gbc.sp());
        EXPECT(0xdb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdb6c));
        // A1 0095
        gbc.setState(0xb63c, 0xa3c1, 0x8cf0, 0xac0e, 0xd633, 0x14da, 0x0, 0x0);
        gbc.writeMem(0xb63c, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb63c));
        // A1 0096
        gbc.setState(0x1545, 0x910d, 0xbb70, 0xd482, 0x430b, 0x3dc5, 0x1, 0x0);
        gbc.writeMem(0x1545, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x910d, gbc.sp());
        EXPECT(0x1546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0097
        gbc.setState(0x3d73, 0x6b85, 0xa3d0, 0xc52c, 0xe6e8, 0xd0f0, 0x1, 0x1);
        gbc.writeMem(0x3d73, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b85, gbc.sp());
        EXPECT(0x3d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0098
        gbc.setState(0xe011, 0xc26c, 0x1330, 0xf846, 0xfa89, 0x8cf9, 0x1, 0x1);
        gbc.writeMem(0xe011, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc26c, gbc.sp());
        EXPECT(0xe012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe011));
        // A1 0099
        gbc.setState(0xabf0, 0x6856, 0xe150, 0xa666, 0x829a, 0x50f6, 0x0, 0x0);
        gbc.writeMem(0xabf0, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6856, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xabf0));
        // A1 009A
        gbc.setState(0x58be, 0xe11d, 0x1540, 0x1ffd, 0xd65b, 0x8620, 0x0, 0x0);
        gbc.writeMem(0x58be, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 009B
        gbc.setState(0x34ea, 0x8f0e, 0x2210, 0x5764, 0x7c2b, 0x888c, 0x1, 0x0);
        gbc.writeMem(0x34ea, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8f0e, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 009C
        gbc.setState(0x9f0a, 0x1b5e, 0xd060, 0x8dda, 0x6841, 0xd681, 0x0, 0x1);
        gbc.writeMem(0x9f0a, { 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x9f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9f0a));
        // A1 009D
        gbc.setState(0xdb5, 0xddee, 0xd520, 0x5ae5, 0x4161, 0xd3f2, 0x1, 0x0);
        gbc.writeMem(0xdb5, { 0xa1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xddee, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 009E
        gbc.setState(0x1f00, 0x5e0a, 0x7cf0, 0xdf8a, 0x2d17, 0x9d49, 0x0, 0x1);
        gbc.writeMem(0x1f00, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x1f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 009F
        gbc.setState(0x1c3d, 0xfb1b, 0xf040, 0x50f1, 0x2558, 0xc46f, 0x0, 0x0);
        gbc.writeMem(0x1c3d, { 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0x1c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00A0
        gbc.setState(0x4b2, 0x867a, 0xbad0, 0x75d6, 0xa675, 0xd335, 0x0, 0x1);
        gbc.writeMem(0x4b2, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x867a, gbc.sp());
        EXPECT(0x4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00A1
        gbc.setState(0x3016, 0x4692, 0xc150, 0x588d, 0xb35a, 0xf712, 0x0, 0x1);
        gbc.writeMem(0x3016, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0x3017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00A3
        gbc.setState(0xe1d3, 0x41e9, 0x8f80, 0x62e5, 0xa42b, 0xc334, 0x0, 0x1);
        gbc.writeMem(0xe1d3, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x41e9, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe1d3));
        // A1 00A4
        gbc.setState(0xa57, 0xe3ca, 0xc240, 0x6cff, 0xa944, 0x118a, 0x0, 0x0);
        gbc.writeMem(0xa57, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe3ca, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00A5
        gbc.setState(0xd792, 0xc12a, 0x52a0, 0x3f56, 0xff4f, 0x4d86, 0x0, 0x0);
        gbc.writeMem(0xd792, { 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0xd793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd792));
        // A1 00A6
        gbc.setState(0xe7b3, 0xc80d, 0x98e0, 0x2f55, 0xe468, 0x32e5, 0x0, 0x1);
        gbc.writeMem(0xe7b3, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0xe7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe7b3));
        // A1 00A7
        gbc.setState(0x691f, 0xc58e, 0x87e0, 0x34cd, 0x818c, 0xeae5, 0x0, 0x1);
        gbc.writeMem(0x691f, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x6920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00A8
        gbc.setState(0x98f3, 0xaf79, 0x4d60, 0xe469, 0xa850, 0xf416, 0x0, 0x0);
        gbc.writeMem(0x98f3, { 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x98f3));
        // A1 00A9
        gbc.setState(0x9974, 0xb8b5, 0xbf70, 0x7eeb, 0x9351, 0x78c6, 0x1, 0x0);
        gbc.writeMem(0x9974, { 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0x9975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9974));
        // A1 00AA
        gbc.setState(0xda1d, 0x8c1b, 0xb1f0, 0x11b3, 0x577, 0xd1b8, 0x1, 0x0);
        gbc.writeMem(0xda1d, { 0xa1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda1d));
        // A1 00AB
        gbc.setState(0xcf5b, 0xc670, 0x1970, 0xa2f1, 0xf8d1, 0x98d2, 0x0, 0x0);
        gbc.writeMem(0xcf5b, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc670, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf5b));
        // A1 00AC
        gbc.setState(0x9de4, 0xb400, 0xf0d0, 0x6e91, 0x3896, 0x89c1, 0x1, 0x1);
        gbc.writeMem(0x9de4, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb400, gbc.sp());
        EXPECT(0x9de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9de4));
        // A1 00AD
        gbc.setState(0xe8d9, 0x3b80, 0xe060, 0xb37d, 0xd099, 0xa685, 0x0, 0x0);
        gbc.writeMem(0xe8d9, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe8d9));
        // A1 00AE
        gbc.setState(0x57ca, 0xc463, 0x4c90, 0xdc28, 0xb88e, 0x821, 0x0, 0x1);
        gbc.writeMem(0x57ca, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0x57cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00AF
        gbc.setState(0x4b23, 0x1508, 0x170, 0x7434, 0x7c74, 0x5d52, 0x0, 0x0);
        gbc.writeMem(0x4b23, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1508, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B0
        gbc.setState(0x926c, 0xf17b, 0x6740, 0x9229, 0xb651, 0xbc8c, 0x1, 0x0);
        gbc.writeMem(0x926c, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x926c));
        // A1 00B1
        gbc.setState(0xbc1c, 0x3dc8, 0x5060, 0x97bf, 0x5d36, 0xe00b, 0x0, 0x1);
        gbc.writeMem(0xbc1c, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0xbc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbc1c));
        // A1 00B2
        gbc.setState(0xeeba, 0x5006, 0x6290, 0x2832, 0xc646, 0x4eb7, 0x0, 0x0);
        gbc.writeMem(0xeeba, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xeeba));
        // A1 00B3
        gbc.setState(0x1022, 0x1439, 0xf8d0, 0x1488, 0x98b9, 0x186c, 0x0, 0x1);
        gbc.writeMem(0x1022, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1439, gbc.sp());
        EXPECT(0x1023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B4
        gbc.setState(0x25e3, 0x1e2f, 0x63a0, 0x14a, 0xca6f, 0x854e, 0x0, 0x1);
        gbc.writeMem(0x25e3, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0x25e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B5
        gbc.setState(0x8fd6, 0x84f0, 0xea60, 0x7feb, 0xa554, 0xc5e6, 0x0, 0x1);
        gbc.writeMem(0x8fd6, { 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8fd6));
        // A1 00B6
        gbc.setState(0x50c0, 0x5202, 0xa3a0, 0xc636, 0x48f3, 0x8bb7, 0x1, 0x0);
        gbc.writeMem(0x50c0, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5202, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B7
        gbc.setState(0x63d9, 0xb98a, 0x320, 0xe4ba, 0x13d0, 0xc4a3, 0x1, 0x1);
        gbc.writeMem(0x63d9, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb98a, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B8
        gbc.setState(0x17a8, 0x4050, 0x1eb0, 0x1a5c, 0xe199, 0x9139, 0x1, 0x1);
        gbc.writeMem(0x17a8, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0x17a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00B9
        gbc.setState(0x654f, 0x55b8, 0x83f0, 0xa025, 0x12a4, 0x2f75, 0x0, 0x1);
        gbc.writeMem(0x654f, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x55b8, gbc.sp());
        EXPECT(0x6550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00BA
        gbc.setState(0xaa07, 0x4212, 0xa7e0, 0xa0b4, 0x1732, 0xb2b0, 0x1, 0x0);
        gbc.writeMem(0xaa07, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4212, gbc.sp());
        EXPECT(0xaa08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaa07));
        // A1 00BB
        gbc.setState(0x998d, 0x42d0, 0x1fc0, 0xe823, 0xebf2, 0x9875, 0x0, 0x0);
        gbc.writeMem(0x998d, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x42d0, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x998d));
        // A1 00BC
        gbc.setState(0x8fb7, 0xb0b1, 0x7ad0, 0xc7d5, 0xe41, 0x58fd, 0x0, 0x1);
        gbc.writeMem(0x8fb7, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb0b1, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8fb7));
        // A1 00BD
        gbc.setState(0x110c, 0x6b1b, 0xeab0, 0x7ff, 0x8dbc, 0xca56, 0x0, 0x0);
        gbc.writeMem(0x110c, { 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6b1b, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00BE
        gbc.setState(0x725d, 0xd5f9, 0x9680, 0x3191, 0x9fdb, 0x7834, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd5f9, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00BF
        gbc.setState(0xb556, 0xac7e, 0xb540, 0x2c74, 0xf69b, 0xb471, 0x0, 0x0);
        gbc.writeMem(0xb556, { 0xa1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xac7e, gbc.sp());
        EXPECT(0xb557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb556));
        // A1 00C0
        gbc.setState(0x49ed, 0x2d71, 0xf720, 0x2d84, 0x8ffd, 0xcaf5, 0x0, 0x0);
        gbc.writeMem(0x49ed, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0x49ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C1
        gbc.setState(0x6539, 0x6cdb, 0x4040, 0x416f, 0x6146, 0x4746, 0x0, 0x1);
        gbc.writeMem(0x6539, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0x653a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C2
        gbc.setState(0x32a4, 0x511e, 0xba90, 0xa1ba, 0x5e25, 0x654e, 0x1, 0x1);
        gbc.writeMem(0x32a4, { 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x511e, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C3
        gbc.setState(0xcc1e, 0xe54a, 0x12d0, 0x7855, 0x325e, 0x3d11, 0x1, 0x1);
        gbc.writeMem(0xcc1e, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0xcc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcc1e));
        // A1 00C4
        gbc.setState(0x5b4c, 0xd369, 0xa520, 0x7a16, 0x2701, 0xa6f, 0x1, 0x0);
        gbc.writeMem(0x5b4c, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd369, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C5
        gbc.setState(0x5957, 0x60fa, 0xa140, 0xc834, 0x14ed, 0x2b8a, 0x0, 0x0);
        gbc.writeMem(0x5957, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x60fa, gbc.sp());
        EXPECT(0x5958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C6
        gbc.setState(0xb40f, 0x8e0c, 0x7520, 0x8d98, 0xd7ca, 0x1be, 0x1, 0x1);
        gbc.writeMem(0xb40f, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8e0c, gbc.sp());
        EXPECT(0xb410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb40f));
        // A1 00C7
        gbc.setState(0x5cd1, 0xeb27, 0xb8b0, 0x94bf, 0x3036, 0xfbe6, 0x0, 0x0);
        gbc.writeMem(0x5cd1, { 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb27, gbc.sp());
        EXPECT(0x5cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00C8
        gbc.setState(0xe242, 0xffac, 0xbcd0, 0xf67c, 0x73c8, 0xba95, 0x1, 0x0);
        gbc.writeMem(0xe242, { 0xa1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe242));
        // A1 00C9
        gbc.setState(0x15bb, 0x5e7f, 0x4320, 0x7265, 0x56d1, 0x1e10, 0x1, 0x1);
        gbc.writeMem(0x15bb, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5e7f, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00CA
        gbc.setState(0x1f5, 0x7378, 0x7e60, 0x8573, 0x8616, 0x485d, 0x1, 0x0);
        gbc.writeMem(0x1f5, { 0xa1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7378, gbc.sp());
        EXPECT(0x1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00CB
        gbc.setState(0xa86a, 0xedf3, 0xff0, 0xeb0c, 0x22ab, 0x5f69, 0x1, 0x1);
        gbc.writeMem(0xa86a, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xedf3, gbc.sp());
        EXPECT(0xa86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa86a));
        // A1 00CC
        gbc.setState(0xea53, 0x392f, 0xf2a0, 0x796f, 0x8c44, 0x3c3b, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0xea54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xea53));
        // A1 00CD
        gbc.setState(0x97b1, 0x2b44, 0xd620, 0x3e64, 0xa829, 0xe3e5, 0x1, 0x1);
        gbc.writeMem(0x97b1, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0x97b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x97b1));
        // A1 00CE
        gbc.setState(0x26b0, 0x5ab2, 0x7cc0, 0x5cee, 0xc51c, 0x834c, 0x1, 0x1);
        gbc.writeMem(0x26b0, { 0xa1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5ab2, gbc.sp());
        EXPECT(0x26b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D0
        gbc.setState(0xa17d, 0xf085, 0x6300, 0xc9fb, 0xe363, 0x9dea, 0x0, 0x1);
        gbc.writeMem(0xa17d, { 0xa1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0xa17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa17d));
        // A1 00D1
        gbc.setState(0x1fe4, 0xbc1b, 0xa3f0, 0x6a73, 0x8320, 0x2f59, 0x0, 0x0);
        gbc.writeMem(0x1fe4, { 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc1b, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D2
        gbc.setState(0x1f1f, 0x6816, 0x3640, 0xd37b, 0x65da, 0x2d73, 0x1, 0x0);
        gbc.writeMem(0x1f1f, { 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6816, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D3
        gbc.setState(0xa917, 0x96b0, 0xc8e0, 0x437b, 0xea1b, 0x151, 0x1, 0x0);
        gbc.writeMem(0xa917, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0xa918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa917));
        // A1 00D4
        gbc.setState(0x364, 0xc954, 0xf330, 0x8827, 0x4f00, 0xb128, 0x0, 0x0);
        gbc.writeMem(0x364, { 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D5
        gbc.setState(0xea22, 0x72fd, 0x2c50, 0x335e, 0xc336, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0xea22, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x72fd, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xea22));
        // A1 00D6
        gbc.setState(0x8efe, 0x4b1, 0x6dd0, 0xbfcb, 0xf4f1, 0xde02, 0x1, 0x0);
        gbc.writeMem(0x8efe, { 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4b1, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8efe));
        // A1 00D7
        gbc.setState(0x33cb, 0xa8d3, 0x60, 0x8a86, 0x925d, 0x1ff7, 0x0, 0x0);
        gbc.writeMem(0x33cb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa8d3, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D8
        gbc.setState(0x62e8, 0x77e8, 0xae20, 0x17ac, 0xac36, 0x9f6c, 0x1, 0x0);
        gbc.writeMem(0x62e8, { 0xa1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00D9
        gbc.setState(0x33c8, 0x5eb1, 0xaf00, 0xe3f0, 0x9e6d, 0x7284, 0x1, 0x1);
        gbc.writeMem(0x33c8, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5eb1, gbc.sp());
        EXPECT(0x33c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00DA
        gbc.setState(0x4b1a, 0xb64f, 0x1a30, 0xfde6, 0xa34b, 0x5b61, 0x0, 0x0);
        gbc.writeMem(0x4b1a, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb64f, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00DB
        gbc.setState(0xe8b1, 0xab9a, 0x33f0, 0xb173, 0x6208, 0xc498, 0x0, 0x1);
        gbc.writeMem(0xe8b1, { 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xe8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe8b1));
        // A1 00DC
        gbc.setState(0x7fa5, 0x19aa, 0x7a50, 0xd98, 0x176d, 0x755c, 0x0, 0x0);
        gbc.writeMem(0x7fa5, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x7fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00DD
        gbc.setState(0x67ea, 0x2c69, 0x6b00, 0xbffa, 0x1f1e, 0x1e4b, 0x0, 0x1);
        gbc.writeMem(0x67ea, { 0xa1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2c69, gbc.sp());
        EXPECT(0x67eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00DE
        gbc.setState(0xca29, 0x4c28, 0x2950, 0x71ca, 0x9ed3, 0xeedf, 0x0, 0x0);
        gbc.writeMem(0xca29, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4c28, gbc.sp());
        EXPECT(0xca2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xca29));
        // A1 00DF
        gbc.setState(0x9759, 0xc311, 0x7d60, 0x5804, 0xb7a4, 0x86ea, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc311, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9759));
        // A1 00E0
        gbc.setState(0xd501, 0x450f, 0x5420, 0xd1df, 0x3763, 0xc37d, 0x1, 0x0);
        gbc.writeMem(0xd501, { 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd501));
        // A1 00E1
        gbc.setState(0x9aa5, 0x8a20, 0x9380, 0x7274, 0x8c5f, 0x9022, 0x1, 0x1);
        gbc.writeMem(0x9aa5, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a20, gbc.sp());
        EXPECT(0x9aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9aa5));
        // A1 00E2
        gbc.setState(0x5ab1, 0xb2d, 0x5740, 0x5012, 0x3cdc, 0x406d, 0x1, 0x1);
        gbc.writeMem(0x5ab1, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb2d, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00E3
        gbc.setState(0x485c, 0x47ae, 0x5240, 0xe3, 0x44d4, 0x9777, 0x0, 0x1);
        gbc.writeMem(0x485c, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0x485d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00E4
        gbc.setState(0xdc27, 0x73b5, 0xeec0, 0xa46d, 0x53e6, 0xdb41, 0x1, 0x1);
        gbc.writeMem(0xdc27, { 0xa1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x73b5, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdc27));
        // A1 00E5
        gbc.setState(0xe4fc, 0x6d62, 0xd800, 0xf50e, 0x9bef, 0xabe2, 0x0, 0x1);
        gbc.writeMem(0xe4fc, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0xe4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe4fc));
        // A1 00E6
        gbc.setState(0x94fb, 0x9939, 0x65c0, 0x6b11, 0x4b1a, 0x95f2, 0x1, 0x1);
        gbc.writeMem(0x94fb, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x94fb));
        // A1 00E7
        gbc.setState(0xa86b, 0xdb0f, 0xe240, 0x1433, 0x6428, 0x6aa1, 0x1, 0x0);
        gbc.writeMem(0xa86b, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa86b));
        // A1 00E8
        gbc.setState(0xc521, 0x3ccc, 0x6d0, 0x9e3, 0xfc44, 0x15f5, 0x0, 0x0);
        gbc.writeMem(0xc521, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0xc522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc521));
        // A1 00EA
        gbc.setState(0xd711, 0xc91, 0xd220, 0xd44e, 0xb96a, 0x840b, 0x0, 0x0);
        gbc.writeMem(0xd711, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc91, gbc.sp());
        EXPECT(0xd712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd711));
        // A1 00EB
        gbc.setState(0x27ad, 0x177a, 0x83a0, 0xfc59, 0x1054, 0xeffe, 0x1, 0x1);
        gbc.writeMem(0x27ad, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x177a, gbc.sp());
        EXPECT(0x27ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00EC
        gbc.setState(0xc10, 0xb296, 0x1f80, 0x87b1, 0xc4f6, 0xd22c, 0x1, 0x1);
        gbc.writeMem(0xc10, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb296, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00ED
        gbc.setState(0x8aed, 0xa9f4, 0x6e30, 0x1c9a, 0x996e, 0x9304, 0x0, 0x1);
        gbc.writeMem(0x8aed, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x8aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8aed));
        // A1 00EE
        gbc.setState(0x8502, 0xfff1, 0x9120, 0xf28b, 0x4d, 0x8517, 0x1, 0x0);
        gbc.writeMem(0x8502, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfff1, gbc.sp());
        EXPECT(0x8503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8502));
        // A1 00EF
        gbc.setState(0xc25d, 0xebe5, 0x4dd0, 0x9150, 0xb5d3, 0xfb04, 0x0, 0x1);
        gbc.writeMem(0xc25d, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xebe5, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc25d));
        // A1 00F0
        gbc.setState(0xa179, 0x7e5b, 0x4840, 0xd2d2, 0x771b, 0xfbe3, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e5b, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa179));
        // A1 00F1
        gbc.setState(0x44fe, 0xf812, 0x9090, 0x6bf5, 0x8ae0, 0xcce1, 0x0, 0x1);
        gbc.writeMem(0x44fe, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf812, gbc.sp());
        EXPECT(0x44ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00F2
        gbc.setState(0xb6c2, 0x47ce, 0xa9a0, 0x4bf, 0xa49b, 0x4648, 0x1, 0x0);
        gbc.writeMem(0xb6c2, { 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x47ce, gbc.sp());
        EXPECT(0xb6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb6c2));
        // A1 00F3
        gbc.setState(0x7272, 0x8bc5, 0xf080, 0xc3fb, 0x386, 0xf28a, 0x1, 0x0);
        gbc.writeMem(0x7272, { 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0x7273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00F4
        gbc.setState(0x7db0, 0xb48c, 0x3040, 0x9b41, 0x4e9c, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0x7db0, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00F5
        gbc.setState(0x3d35, 0x7667, 0x8750, 0x579d, 0x25db, 0xab90, 0x0, 0x1);
        gbc.writeMem(0x3d35, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7667, gbc.sp());
        EXPECT(0x3d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00F6
        gbc.setState(0x3159, 0xa162, 0xb940, 0x6538, 0x6b43, 0xf338, 0x1, 0x1);
        gbc.writeMem(0x3159, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa162, gbc.sp());
        EXPECT(0x315a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00F7
        gbc.setState(0x8544, 0xdad1, 0x2980, 0x2c08, 0x3651, 0xe3cd, 0x0, 0x0);
        gbc.writeMem(0x8544, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8544));
        // A1 00F8
        gbc.setState(0x8b6c, 0x8d57, 0x7a50, 0x36b4, 0xc4b9, 0xb168, 0x0, 0x0);
        gbc.writeMem(0x8b6c, { 0xa1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8d57, gbc.sp());
        EXPECT(0x8b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8b6c));
        // A1 00F9
        gbc.setState(0x1322, 0x8c8c, 0x6e70, 0x2de, 0xbf43, 0x82dd, 0x0, 0x0);
        gbc.writeMem(0x1322, { 0xa1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00FA
        gbc.setState(0x6aa6, 0xb55b, 0xbd0, 0xa408, 0x8a20, 0xe25d, 0x1, 0x0);
        gbc.writeMem(0x6aa6, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb55b, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00FB
        gbc.setState(0x95e, 0xf9a8, 0x9240, 0x8754, 0x5384, 0xaca7, 0x1, 0x1);
        gbc.writeMem(0x95e, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 00FC
        gbc.setState(0x9ec5, 0x26ce, 0xdab0, 0x32b5, 0x8d6a, 0xc220, 0x0, 0x1);
        gbc.writeMem(0x9ec5, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9ec5));
        // A1 00FD
        gbc.setState(0xe96a, 0x800b, 0x2790, 0xb4b2, 0xce51, 0xe5a2, 0x0, 0x1);
        gbc.writeMem(0xe96a, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe96a));
        // A1 00FE
        gbc.setState(0x9fab, 0x1103, 0xe470, 0x223e, 0x63d5, 0x2e6d, 0x0, 0x1);
        gbc.writeMem(0x9fab, { 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1103, gbc.sp());
        EXPECT(0x9fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9fab));
        // A1 00FF
        gbc.setState(0x4757, 0xcdcb, 0xc330, 0x8935, 0x6667, 0x1d, 0x0, 0x1);
        gbc.writeMem(0x4757, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdcb, gbc.sp());
        EXPECT(0x4758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0100
        gbc.setState(0xe42d, 0xd598, 0x3920, 0x7479, 0xe90e, 0x8fea, 0x0, 0x1);
        gbc.writeMem(0xe42d, { 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd598, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe42d));
        // A1 0101
        gbc.setState(0x1168, 0x7309, 0xaec0, 0x3090, 0x8476, 0x839f, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7309, gbc.sp());
        EXPECT(0x1169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0102
        gbc.setState(0x6148, 0x6080, 0xdc90, 0x9ee5, 0x86dc, 0xf4e0, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0103
        gbc.setState(0xd113, 0x5fc2, 0xf390, 0x9c59, 0x100b, 0x705b, 0x0, 0x1);
        gbc.writeMem(0xd113, { 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5fc2, gbc.sp());
        EXPECT(0xd114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd113));
        // A1 0104
        gbc.setState(0xcb23, 0xb68f, 0x5ff0, 0x3785, 0xffd2, 0x7ca8, 0x0, 0x0);
        gbc.writeMem(0xcb23, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb68f, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcb23));
        // A1 0105
        gbc.setState(0xa116, 0x2058, 0x5e30, 0x3327, 0xc77, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0xa116, { 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0xa117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa116));
        // A1 0106
        gbc.setState(0x9fe, 0xc101, 0xd70, 0xdd38, 0x2a93, 0xc306, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc101, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0107
        gbc.setState(0x2d06, 0x504, 0xe800, 0x77b4, 0x55fb, 0xebee, 0x1, 0x1);
        gbc.writeMem(0x2d06, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0x2d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0108
        gbc.setState(0x95db, 0x6a10, 0x2630, 0xc620, 0xc2f5, 0xa9de, 0x1, 0x1);
        gbc.writeMem(0x95db, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0x95dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x95db));
        // A1 0109
        gbc.setState(0x4c9a, 0xd350, 0x14f0, 0x5fcf, 0xf7ac, 0x1d31, 0x1, 0x0);
        gbc.writeMem(0x4c9a, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0x4c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 010A
        gbc.setState(0xafc3, 0xe62c, 0x7d90, 0x677a, 0x2e9b, 0x81a1, 0x1, 0x0);
        gbc.writeMem(0xafc3, { 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe62c, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xafc3));
        // A1 010B
        gbc.setState(0x957c, 0xc9a, 0xefa0, 0xaa98, 0x758a, 0x6064, 0x0, 0x1);
        gbc.writeMem(0x957c, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0x957d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x957c));
        // A1 010C
        gbc.setState(0x23d0, 0xb2aa, 0x8260, 0x7c72, 0x55d0, 0x9213, 0x1, 0x0);
        gbc.writeMem(0x23d0, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb2aa, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 010D
        gbc.setState(0xbe8c, 0x49f5, 0xeec0, 0x9b64, 0xd0ab, 0x1d0f, 0x1, 0x1);
        gbc.writeMem(0xbe8c, { 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x49f5, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe8c));
        // A1 010E
        gbc.setState(0x4e83, 0xf341, 0x60c0, 0x49d3, 0xa171, 0x6afb, 0x0, 0x0);
        gbc.writeMem(0x4e83, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 010F
        gbc.setState(0xdfc7, 0xc8f5, 0x6ad0, 0x6fc7, 0x5e27, 0x10da, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc8f5, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdfc7));
        // A1 0110
        gbc.setState(0x48ca, 0xb95d, 0x7650, 0x8f45, 0xaf78, 0x1e9c, 0x1, 0x0);
        gbc.writeMem(0x48ca, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0x48cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0111
        gbc.setState(0x57dd, 0x29fe, 0x6b30, 0x9cf2, 0x6447, 0xef53, 0x1, 0x1);
        gbc.writeMem(0x57dd, { 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x57de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0112
        gbc.setState(0x90c, 0xab92, 0x6be0, 0xb074, 0xfb65, 0x3c1d, 0x1, 0x1);
        gbc.writeMem(0x90c, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab92, gbc.sp());
        EXPECT(0x90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0113
        gbc.setState(0x98ff, 0xfb9c, 0xdfc0, 0x905c, 0xc29d, 0x37ec, 0x1, 0x0);
        gbc.writeMem(0x98ff, { 0xa1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x98ff));
        // A1 0114
        gbc.setState(0xe2ca, 0xdc78, 0x4aa0, 0x60e4, 0xead7, 0xfc38, 0x1, 0x0);
        gbc.writeMem(0xe2ca, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe2ca));
        // A1 0115
        gbc.setState(0x4fc, 0x7f24, 0xb3b0, 0xd90f, 0xda, 0x673, 0x0, 0x1);
        gbc.writeMem(0x4fc, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0117
        gbc.setState(0x6f48, 0x1840, 0xbb90, 0x532c, 0xdb8c, 0x3b10, 0x1, 0x1);
        gbc.writeMem(0x6f48, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0118
        gbc.setState(0x24c6, 0xa087, 0x1e50, 0x531d, 0xa9c5, 0x9cd0, 0x0, 0x1);
        gbc.writeMem(0x24c6, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0x24c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0119
        gbc.setState(0xe3c1, 0xc1a5, 0xbc20, 0xffdd, 0xd321, 0xe73e, 0x1, 0x1);
        gbc.writeMem(0xe3c1, { 0xa1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc1a5, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe3c1));
        // A1 011A
        gbc.setState(0x158, 0xc44, 0x8de0, 0xd68b, 0x880a, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0x158, { 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0x159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 011B
        gbc.setState(0x231f, 0x2043, 0x2cf0, 0xc5d, 0x9b3e, 0x766d, 0x0, 0x1);
        gbc.writeMem(0x231f, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x2320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 011C
        gbc.setState(0x431b, 0x2ded, 0x770, 0xc0fd, 0x4504, 0xd194, 0x1, 0x1);
        gbc.writeMem(0x431b, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 011D
        gbc.setState(0x8271, 0x5119, 0x62e0, 0x83c, 0x4239, 0x51de, 0x1, 0x1);
        gbc.writeMem(0x8271, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5119, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8271));
        // A1 011E
        gbc.setState(0xcfe0, 0x85af, 0xd580, 0xaa8f, 0x64bf, 0x5ae7, 0x1, 0x0);
        gbc.writeMem(0xcfe0, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcfe0));
        // A1 011F
        gbc.setState(0xb711, 0x540a, 0xc660, 0xeddb, 0x5d8d, 0xfb3f, 0x0, 0x1);
        gbc.writeMem(0xb711, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0xb712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb711));
        // A1 0120
        gbc.setState(0xef5a, 0xdb14, 0x16b0, 0xb504, 0x405c, 0x2d4b, 0x0, 0x0);
        gbc.writeMem(0xef5a, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdb14, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xef5a));
        // A1 0121
        gbc.setState(0x643a, 0x8f7b, 0x6ae0, 0xc032, 0x48a, 0xcb70, 0x1, 0x0);
        gbc.writeMem(0x643a, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8f7b, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0122
        gbc.setState(0xa715, 0x56c6, 0xee30, 0xdd58, 0x8d26, 0x3be1, 0x0, 0x0);
        gbc.writeMem(0xa715, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x56c6, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa715));
        // A1 0123
        gbc.setState(0xec1d, 0x2203, 0xe3a0, 0xde48, 0x5190, 0x90eb, 0x1, 0x1);
        gbc.writeMem(0xec1d, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2203, gbc.sp());
        EXPECT(0xec1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xec1d));
        // A1 0124
        gbc.setState(0x2991, 0x896e, 0x3a00, 0xfa25, 0xf3ad, 0x6156, 0x0, 0x1);
        gbc.writeMem(0x2991, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0125
        gbc.setState(0x77e5, 0x4aa0, 0x5ca0, 0x2903, 0x512b, 0xee67, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0x77e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0126
        gbc.setState(0xac8f, 0x7d89, 0xb060, 0xe22d, 0xe0f5, 0x6f54, 0x1, 0x1);
        gbc.writeMem(0xac8f, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xac8f));
        // A1 0127
        gbc.setState(0xb636, 0x11b2, 0xb270, 0x58b2, 0x1a95, 0xd587, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb636));
        // A1 0128
        gbc.setState(0x3031, 0x892b, 0x9880, 0x4911, 0xb9b6, 0xa9b6, 0x1, 0x1);
        gbc.writeMem(0x3031, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x892b, gbc.sp());
        EXPECT(0x3032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0129
        gbc.setState(0x2c8c, 0xf4eb, 0xed60, 0x69fc, 0x3569, 0x49f7, 0x1, 0x0);
        gbc.writeMem(0x2c8c, { 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf4eb, gbc.sp());
        EXPECT(0x2c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 012A
        gbc.setState(0xc471, 0x31ea, 0xc200, 0xe1ee, 0x5ccb, 0x9b48, 0x0, 0x0);
        gbc.writeMem(0xc471, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc471));
        // A1 012B
        gbc.setState(0x3c42, 0xbb36, 0xfc90, 0xa8a8, 0x14f1, 0x3a50, 0x1, 0x1);
        gbc.writeMem(0x3c42, { 0xa1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbb36, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 012C
        gbc.setState(0x2476, 0xb05c, 0x3d10, 0xe77b, 0x8a3, 0x7456, 0x0, 0x1);
        gbc.writeMem(0x2476, { 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb05c, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 012D
        gbc.setState(0x3657, 0xb11a, 0x6e80, 0x9589, 0xffdf, 0x58c3, 0x1, 0x1);
        gbc.writeMem(0x3657, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb11a, gbc.sp());
        EXPECT(0x3658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 012E
        gbc.setState(0x4073, 0x500d, 0x6700, 0xe50f, 0x8536, 0x7b01, 0x1, 0x1);
        gbc.writeMem(0x4073, { 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x500d, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 012F
        gbc.setState(0x5085, 0xda54, 0x6690, 0xd299, 0xec14, 0xbc40, 0x0, 0x0);
        gbc.writeMem(0x5085, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xda54, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0130
        gbc.setState(0xa922, 0x13eb, 0xb950, 0x32cf, 0x6d1d, 0xe126, 0x0, 0x0);
        gbc.writeMem(0xa922, { 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x13eb, gbc.sp());
        EXPECT(0xa923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa922));
        // A1 0131
        gbc.setState(0x771f, 0x67fd, 0x3f80, 0xc70b, 0x798, 0xcecf, 0x1, 0x0);
        gbc.writeMem(0x771f, { 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0x7720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0132
        gbc.setState(0xbdab, 0xe03c, 0x1e80, 0x3cfc, 0x447e, 0x690f, 0x0, 0x0);
        gbc.writeMem(0xbdab, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe03c, gbc.sp());
        EXPECT(0xbdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbdab));
        // A1 0133
        gbc.setState(0x698e, 0x37f1, 0x44b0, 0x83d2, 0xcefa, 0xce82, 0x1, 0x1);
        gbc.writeMem(0x698e, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x37f1, gbc.sp());
        EXPECT(0x698f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0134
        gbc.setState(0xbe4d, 0x2b13, 0x7030, 0xfcd0, 0x460c, 0x2e2d, 0x1, 0x0);
        gbc.writeMem(0xbe4d, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2b13, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe4d));
        // A1 0136
        gbc.setState(0x6217, 0x385f, 0xfd90, 0xbba0, 0x9430, 0xd0f, 0x0, 0x0);
        gbc.writeMem(0x6217, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x6218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0137
        gbc.setState(0x60dd, 0x231c, 0x1800, 0x3aa4, 0x90bf, 0x5ffd, 0x0, 0x0);
        gbc.writeMem(0x60dd, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x231c, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0138
        gbc.setState(0x4f1c, 0xe5d1, 0x17e0, 0x707f, 0x8198, 0x9633, 0x0, 0x1);
        gbc.writeMem(0x4f1c, { 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe5d1, gbc.sp());
        EXPECT(0x4f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0139
        gbc.setState(0x1a69, 0xc5d1, 0x4ad0, 0x2843, 0xc77, 0xb0c5, 0x0, 0x0);
        gbc.writeMem(0x1a69, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 013A
        gbc.setState(0x8d52, 0x48ed, 0x3090, 0x9453, 0x3bfe, 0x5dfb, 0x1, 0x1);
        gbc.writeMem(0x8d52, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x48ed, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8d52));
        // A1 013B
        gbc.setState(0xac20, 0x4c09, 0xd690, 0xe8d0, 0x1f88, 0x4310, 0x0, 0x1);
        gbc.writeMem(0xac20, { 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xac20));
        // A1 013C
        gbc.setState(0x9e3, 0xe36e, 0xff40, 0x96a4, 0x5500, 0x65bd, 0x1, 0x0);
        gbc.writeMem(0x9e3, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe36e, gbc.sp());
        EXPECT(0x9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 013D
        gbc.setState(0xe38, 0x5e15, 0xff70, 0x103a, 0xdab7, 0x2cb3, 0x1, 0x0);
        gbc.writeMem(0xe38, { 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5e15, gbc.sp());
        EXPECT(0xe39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 013F
        gbc.setState(0x8d26, 0xdc85, 0x7c90, 0xfb15, 0x11b6, 0xc960, 0x0, 0x1);
        gbc.writeMem(0x8d26, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdc85, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8d26));
        // A1 0141
        gbc.setState(0xd266, 0xbbf5, 0xa7a0, 0x7669, 0xdfc4, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0xd266, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0xd267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd266));
        // A1 0142
        gbc.setState(0x8e50, 0xaf40, 0xff70, 0x38fd, 0x74fd, 0x7512, 0x0, 0x1);
        gbc.writeMem(0x8e50, { 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8e50));
        // A1 0143
        gbc.setState(0xbcf3, 0x9164, 0x2ea0, 0x8c8b, 0x30f3, 0x8f08, 0x0, 0x1);
        gbc.writeMem(0xbcf3, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0xbcf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbcf3));
        // A1 0144
        gbc.setState(0x50ab, 0x4d97, 0x2b30, 0x6b04, 0x94e5, 0xa820, 0x0, 0x0);
        gbc.writeMem(0x50ab, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0146
        gbc.setState(0x15e8, 0x393a, 0xff0, 0x1de0, 0x608b, 0xe2d3, 0x1, 0x0);
        gbc.writeMem(0x15e8, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0147
        gbc.setState(0x5cbe, 0x3d8a, 0x19d0, 0x8b65, 0xfb18, 0xbfd5, 0x1, 0x1);
        gbc.writeMem(0x5cbe, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3d8a, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0148
        gbc.setState(0x3486, 0xa361, 0x9dc0, 0xf8ce, 0xaf85, 0x1cbc, 0x0, 0x1);
        gbc.writeMem(0x3486, { 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa361, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0149
        gbc.setState(0x5598, 0x28b0, 0x1f0, 0x831, 0x1bc4, 0x6f63, 0x0, 0x1);
        gbc.writeMem(0x5598, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x5599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 014A
        gbc.setState(0xcb81, 0xf725, 0x3620, 0x4ade, 0x2933, 0xeed7, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcb81));
        // A1 014B
        gbc.setState(0x8742, 0xf370, 0xb710, 0x8bd, 0x3c61, 0x4691, 0x1, 0x0);
        gbc.writeMem(0x8742, { 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf370, gbc.sp());
        EXPECT(0x8743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8742));
        // A1 014C
        gbc.setState(0x6e7b, 0xa568, 0xf6d0, 0xab2, 0x2d72, 0x21af, 0x0, 0x1);
        gbc.writeMem(0x6e7b, { 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0x6e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 014D
        gbc.setState(0xce74, 0x1179, 0x5fe0, 0x4683, 0x29eb, 0x4f03, 0x0, 0x1);
        gbc.writeMem(0xce74, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xce74));
        // A1 014E
        gbc.setState(0xc5a6, 0x706c, 0x3dc0, 0xe3a, 0xae8c, 0x587a, 0x0, 0x1);
        gbc.writeMem(0xc5a6, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x706c, gbc.sp());
        EXPECT(0xc5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc5a6));
        // A1 014F
        gbc.setState(0x4ece, 0xd3, 0xc5c0, 0x444, 0xd050, 0x371d, 0x1, 0x0);
        gbc.writeMem(0x4ece, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd3, gbc.sp());
        EXPECT(0x4ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0150
        gbc.setState(0x89fa, 0x2ed7, 0x23e0, 0x3a16, 0x6926, 0x3af8, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x89fa));
        // A1 0151
        gbc.setState(0x4adb, 0x1cd4, 0xadd0, 0x232b, 0x8a75, 0xdb4, 0x0, 0x1);
        gbc.writeMem(0x4adb, { 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1cd4, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0152
        gbc.setState(0x70e5, 0xcab6, 0xa0d0, 0xf076, 0xc26e, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0153
        gbc.setState(0x4a51, 0x5ff6, 0x9600, 0xedfe, 0x5955, 0x61d7, 0x0, 0x0);
        gbc.writeMem(0x4a51, { 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0154
        gbc.setState(0x9449, 0xbc24, 0x2ff0, 0xa4c8, 0xe37a, 0x894e, 0x0, 0x0);
        gbc.writeMem(0x9449, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9449));
        // A1 0155
        gbc.setState(0xd30, 0xfaa2, 0xc910, 0x71ef, 0xcd98, 0x4cfc, 0x0, 0x0);
        gbc.writeMem(0xd30, { 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0156
        gbc.setState(0x25af, 0xcd6b, 0x8e30, 0xf025, 0xc431, 0xaa94, 0x1, 0x1);
        gbc.writeMem(0x25af, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcd6b, gbc.sp());
        EXPECT(0x25b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0157
        gbc.setState(0x1f7d, 0x5878, 0x6ec0, 0xc4ec, 0xdb87, 0xc1cb, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xa1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0158
        gbc.setState(0x1f56, 0x5a3a, 0xb770, 0xa65e, 0xd348, 0x282f, 0x0, 0x1);
        gbc.writeMem(0x1f56, { 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5a3a, gbc.sp());
        EXPECT(0x1f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0159
        gbc.setState(0x2097, 0x5843, 0x5c80, 0xfea4, 0xe8c2, 0x40eb, 0x0, 0x0);
        gbc.writeMem(0x2097, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 015A
        gbc.setState(0xbecf, 0xa4c1, 0xafa0, 0x7780, 0xad4f, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0xbecf, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa4c1, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbecf));
        // A1 015B
        gbc.setState(0x9729, 0x818a, 0x2d60, 0x6d02, 0xc3e4, 0x1b69, 0x1, 0x0);
        gbc.writeMem(0x9729, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x972a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9729));
        // A1 015C
        gbc.setState(0x856, 0xead8, 0x3cf0, 0x8acc, 0xa852, 0x334e, 0x0, 0x0);
        gbc.writeMem(0x856, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xead8, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 015D
        gbc.setState(0xbb41, 0xfd81, 0xa6b0, 0xabcf, 0xd072, 0xde5e, 0x0, 0x0);
        gbc.writeMem(0xbb41, { 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb41));
        // A1 015E
        gbc.setState(0x314c, 0xe3ee, 0x6740, 0xb43a, 0x3cbb, 0xe0d1, 0x0, 0x1);
        gbc.writeMem(0x314c, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe3ee, gbc.sp());
        EXPECT(0x314d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 015F
        gbc.setState(0xa433, 0x41c1, 0xf3b0, 0xb7c1, 0xc312, 0x3bc6, 0x1, 0x1);
        gbc.writeMem(0xa433, { 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x41c1, gbc.sp());
        EXPECT(0xa434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa433));
        // A1 0160
        gbc.setState(0x4e13, 0x245c, 0x1120, 0xec44, 0x4a88, 0x8e91, 0x0, 0x1);
        gbc.writeMem(0x4e13, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0x4e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0161
        gbc.setState(0xd35c, 0x1d8c, 0xa3f0, 0x27f0, 0x472, 0x85ed, 0x0, 0x0);
        gbc.writeMem(0xd35c, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1d8c, gbc.sp());
        EXPECT(0xd35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd35c));
        // A1 0162
        gbc.setState(0x9f9e, 0xb3c0, 0xd5b0, 0x45fc, 0xbee0, 0xa4b, 0x1, 0x0);
        gbc.writeMem(0x9f9e, { 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb3c0, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9f9e));
        // A1 0163
        gbc.setState(0xb99a, 0xe540, 0x4270, 0x5561, 0xbd3d, 0x902d, 0x0, 0x0);
        gbc.writeMem(0xb99a, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe540, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb99a));
        // A1 0165
        gbc.setState(0x9ebd, 0x7a91, 0x9750, 0xdf49, 0xd264, 0xaad4, 0x1, 0x1);
        gbc.writeMem(0x9ebd, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0x9ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9ebd));
        // A1 0166
        gbc.setState(0xed15, 0x71b5, 0x5c10, 0xa94c, 0x679e, 0x8d26, 0x0, 0x0);
        gbc.writeMem(0xed15, { 0xa1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x71b5, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xed15));
        // A1 0167
        gbc.setState(0x9b3e, 0x7361, 0xe390, 0x71f, 0x4c09, 0xe87, 0x1, 0x1);
        gbc.writeMem(0x9b3e, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7361, gbc.sp());
        EXPECT(0x9b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9b3e));
        // A1 0168
        gbc.setState(0xd4a5, 0xb0e0, 0x26a0, 0x821d, 0x4d47, 0x1799, 0x1, 0x1);
        gbc.writeMem(0xd4a5, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb0e0, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd4a5));
        // A1 0169
        gbc.setState(0x6ebf, 0xfe34, 0x440, 0x908e, 0x6e51, 0x4079, 0x1, 0x1);
        gbc.writeMem(0x6ebf, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfe34, gbc.sp());
        EXPECT(0x6ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 016A
        gbc.setState(0x86f6, 0x8b83, 0x9380, 0x9f07, 0xf9d1, 0x8513, 0x0, 0x0);
        gbc.writeMem(0x86f6, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x86f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x86f6));
        // A1 016B
        gbc.setState(0x71bd, 0x129d, 0x19d0, 0x99f8, 0xf3ee, 0xe52e, 0x1, 0x0);
        gbc.writeMem(0x71bd, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x129d, gbc.sp());
        EXPECT(0x71be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 016C
        gbc.setState(0x6792, 0x8640, 0xd1d0, 0x8851, 0xeb27, 0x6134, 0x1, 0x1);
        gbc.writeMem(0x6792, { 0xa1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8640, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 016D
        gbc.setState(0xa231, 0xbf6c, 0xd470, 0x8482, 0x35a2, 0x745b, 0x1, 0x1);
        gbc.writeMem(0xa231, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf6c, gbc.sp());
        EXPECT(0xa232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa231));
        // A1 016F
        gbc.setState(0x2e3f, 0x38c8, 0x3b70, 0xa879, 0xcab9, 0x91d5, 0x1, 0x0);
        gbc.writeMem(0x2e3f, { 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x38c8, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0170
        gbc.setState(0x7601, 0xa450, 0xadd0, 0xb030, 0x818, 0x9f62, 0x1, 0x1);
        gbc.writeMem(0x7601, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa450, gbc.sp());
        EXPECT(0x7602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0171
        gbc.setState(0xcfce, 0x669b, 0xe410, 0xacf9, 0xf4df, 0x435c, 0x1, 0x0);
        gbc.writeMem(0xcfce, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcfce));
        // A1 0172
        gbc.setState(0xa52f, 0x6534, 0x2a60, 0xf225, 0x221, 0xf6f8, 0x1, 0x1);
        gbc.writeMem(0xa52f, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6534, gbc.sp());
        EXPECT(0xa530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa52f));
        // A1 0173
        gbc.setState(0x563b, 0x5d71, 0x5e10, 0xa20c, 0xb54b, 0xcdba, 0x1, 0x0);
        gbc.writeMem(0x563b, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0x563c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0174
        gbc.setState(0x5b81, 0xfb29, 0x9a60, 0x25f7, 0x4ae2, 0x2e85, 0x0, 0x0);
        gbc.writeMem(0x5b81, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0x5b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0175
        gbc.setState(0x5369, 0x993b, 0x1b50, 0xfdb1, 0x5694, 0x5d2, 0x1, 0x0);
        gbc.writeMem(0x5369, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x993b, gbc.sp());
        EXPECT(0x536a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0176
        gbc.setState(0x33a2, 0xf9ae, 0x210, 0xec54, 0xd40d, 0x522b, 0x0, 0x0);
        gbc.writeMem(0x33a2, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf9ae, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0178
        gbc.setState(0x2300, 0x6b44, 0x3ee0, 0x8b47, 0xc252, 0xe395, 0x1, 0x0);
        gbc.writeMem(0x2300, { 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6b44, gbc.sp());
        EXPECT(0x2301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0179
        gbc.setState(0xc050, 0xb3b1, 0x47d0, 0x378d, 0x7623, 0x8cfc, 0x0, 0x0);
        gbc.writeMem(0xc050, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb3b1, gbc.sp());
        EXPECT(0xc051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc050));
        // A1 017A
        gbc.setState(0x624e, 0xd812, 0x10a0, 0x450e, 0x460b, 0xdc2d, 0x0, 0x0);
        gbc.writeMem(0x624e, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd812, gbc.sp());
        EXPECT(0x624f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 017B
        gbc.setState(0x65eb, 0xc5bd, 0x5e0, 0x9e17, 0xaeca, 0xb1ad, 0x1, 0x0);
        gbc.writeMem(0x65eb, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0x65ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 017C
        gbc.setState(0xaeb9, 0xebd0, 0x24c0, 0x9e5c, 0x2a97, 0xeabc, 0x1, 0x0);
        gbc.writeMem(0xaeb9, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0xaeba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaeb9));
        // A1 017D
        gbc.setState(0xb585, 0x35fc, 0x7890, 0x9442, 0x1e3f, 0x903a, 0x1, 0x1);
        gbc.writeMem(0xb585, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x35fc, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb585));
        // A1 017E
        gbc.setState(0x199a, 0x3c78, 0x8900, 0xfe42, 0xc31, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0x199a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0x199b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 017F
        gbc.setState(0x7463, 0xf98f, 0xf840, 0x9168, 0xd00e, 0xaa17, 0x1, 0x0);
        gbc.writeMem(0x7463, { 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf98f, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0180
        gbc.setState(0x36fa, 0x106e, 0x16d0, 0x6453, 0x888f, 0x2c9d, 0x0, 0x0);
        gbc.writeMem(0x36fa, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x106e, gbc.sp());
        EXPECT(0x36fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0181
        gbc.setState(0x5b1f, 0x9ff5, 0x2130, 0xa9ff, 0x7408, 0x7310, 0x1, 0x1);
        gbc.writeMem(0x5b1f, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9ff5, gbc.sp());
        EXPECT(0x5b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0182
        gbc.setState(0xe0bf, 0x6303, 0x3540, 0x8ac7, 0x5059, 0x89dd, 0x0, 0x1);
        gbc.writeMem(0xe0bf, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6303, gbc.sp());
        EXPECT(0xe0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe0bf));
        // A1 0183
        gbc.setState(0x7eba, 0xeeb, 0xf710, 0xb7fd, 0xabcb, 0xead9, 0x1, 0x0);
        gbc.writeMem(0x7eba, { 0xa1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0184
        gbc.setState(0x1616, 0x84be, 0xbb10, 0xf5e3, 0x6fc0, 0x573c, 0x1, 0x0);
        gbc.writeMem(0x1616, { 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0185
        gbc.setState(0xaf4a, 0x6dc2, 0xe340, 0x3766, 0x3da1, 0xe1b, 0x1, 0x0);
        gbc.writeMem(0xaf4a, { 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0xaf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaf4a));
        // A1 0186
        gbc.setState(0x26a, 0x2027, 0x92b0, 0x81f, 0x1781, 0x9fc8, 0x1, 0x0);
        gbc.writeMem(0x26a, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2027, gbc.sp());
        EXPECT(0x26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0187
        gbc.setState(0x60b1, 0x3855, 0x48e0, 0x17a7, 0x5919, 0x15a3, 0x0, 0x0);
        gbc.writeMem(0x60b1, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0x60b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0188
        gbc.setState(0xa7e1, 0x155b, 0xda70, 0xf37, 0x51cb, 0xf973, 0x1, 0x0);
        gbc.writeMem(0xa7e1, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0xa7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa7e1));
        // A1 0189
        gbc.setState(0xe883, 0x6292, 0x5490, 0x6af, 0xd2fc, 0xf709, 0x1, 0x0);
        gbc.writeMem(0xe883, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6292, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe883));
        // A1 018B
        gbc.setState(0x37d4, 0x29c0, 0xbe90, 0x44df, 0xd39c, 0x915a, 0x1, 0x0);
        gbc.writeMem(0x37d4, { 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x29c0, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 018C
        gbc.setState(0x594, 0x23e, 0x2d0, 0x34fa, 0xe893, 0x7e71, 0x1, 0x1);
        gbc.writeMem(0x594, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0x595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 018D
        gbc.setState(0xb1d5, 0x69bb, 0x7db0, 0xea80, 0xed8b, 0xd565, 0x1, 0x1);
        gbc.writeMem(0xb1d5, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x69bb, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb1d5));
        // A1 018E
        gbc.setState(0x2a64, 0xbe32, 0x1440, 0xd756, 0x8e5d, 0xf905, 0x0, 0x1);
        gbc.writeMem(0x2a64, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 018F
        gbc.setState(0xea46, 0x8636, 0x5f60, 0x2404, 0xb68c, 0x40f5, 0x0, 0x0);
        gbc.writeMem(0xea46, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xea46));
        // A1 0190
        gbc.setState(0xce27, 0xdf41, 0xeb90, 0xc515, 0x16f5, 0x3d1b, 0x0, 0x0);
        gbc.writeMem(0xce27, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xce27));
        // A1 0191
        gbc.setState(0xb11a, 0xcdc2, 0x87c0, 0x29ba, 0xe9c3, 0xd8f7, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcdc2, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb11a));
        // A1 0192
        gbc.setState(0x4a05, 0x522b, 0xbb20, 0xfa5f, 0xb31f, 0x4bee, 0x0, 0x0);
        gbc.writeMem(0x4a05, { 0xa1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0x4a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0193
        gbc.setState(0x2956, 0xe8c1, 0x8240, 0x4211, 0x6f03, 0x388f, 0x0, 0x1);
        gbc.writeMem(0x2956, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8c1, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0194
        gbc.setState(0xcda, 0x554, 0x41d0, 0x9b18, 0x6959, 0x2f67, 0x0, 0x1);
        gbc.writeMem(0xcda, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x554, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0195
        gbc.setState(0xae8d, 0xf46b, 0xd450, 0x66d1, 0xd2e1, 0x16c, 0x1, 0x1);
        gbc.writeMem(0xae8d, { 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0xae8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xae8d));
        // A1 0196
        gbc.setState(0xb80e, 0x1cd0, 0x8540, 0xaa63, 0x9cbb, 0xb266, 0x0, 0x0);
        gbc.writeMem(0xb80e, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1cd0, gbc.sp());
        EXPECT(0xb80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb80e));
        // A1 0197
        gbc.setState(0x2977, 0xcb24, 0x43b0, 0x2529, 0xf90c, 0x6fa7, 0x0, 0x1);
        gbc.writeMem(0x2977, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x2978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0198
        gbc.setState(0x4e1f, 0x7713, 0x1c40, 0x2753, 0x6047, 0xecdb, 0x0, 0x0);
        gbc.writeMem(0x4e1f, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7713, gbc.sp());
        EXPECT(0x4e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0199
        gbc.setState(0xd0f0, 0xfb25, 0xb770, 0x9437, 0x7de6, 0x11a3, 0x1, 0x0);
        gbc.writeMem(0xd0f0, { 0xa1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfb25, gbc.sp());
        EXPECT(0xd0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd0f0));
        // A1 019A
        gbc.setState(0x431b, 0xde74, 0x78c0, 0xa284, 0xb41, 0xacd2, 0x0, 0x0);
        gbc.writeMem(0x431b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 019B
        gbc.setState(0xacc5, 0xd159, 0x4a00, 0xedda, 0xd1ac, 0x7864, 0x0, 0x1);
        gbc.writeMem(0xacc5, { 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd159, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xacc5));
        // A1 019C
        gbc.setState(0x3554, 0xd0a7, 0x5240, 0x6b73, 0xfcfb, 0xa0d5, 0x1, 0x1);
        gbc.writeMem(0x3554, { 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 019D
        gbc.setState(0x2e96, 0x8b7c, 0xfa40, 0x3cae, 0xfbb1, 0x1cb2, 0x0, 0x1);
        gbc.writeMem(0x2e96, { 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8b7c, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 019E
        gbc.setState(0xa417, 0x5b81, 0xc2f0, 0xd015, 0x8c7b, 0xfce0, 0x1, 0x1);
        gbc.writeMem(0xa417, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5b81, gbc.sp());
        EXPECT(0xa418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa417));
        // A1 019F
        gbc.setState(0x8acc, 0x8fa7, 0xf2e0, 0xce63, 0xbe4c, 0x6382, 0x0, 0x0);
        gbc.writeMem(0x8acc, { 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8fa7, gbc.sp());
        EXPECT(0x8acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8acc));
        // A1 01A0
        gbc.setState(0xded0, 0x9b8c, 0x2830, 0xe768, 0xd608, 0x141c, 0x0, 0x0);
        gbc.writeMem(0xded0, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xded0));
        // A1 01A1
        gbc.setState(0xde6c, 0x682b, 0x19f0, 0x85f1, 0xb3, 0x6bf7, 0x1, 0x0);
        gbc.writeMem(0xde6c, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x682b, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xde6c));
        // A1 01A3
        gbc.setState(0x5d33, 0x461a, 0xcb00, 0xd9ee, 0x8aca, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0xa1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A4
        gbc.setState(0x5e4a, 0x80e0, 0xa0, 0x74a2, 0xaa13, 0x807, 0x0, 0x0);
        gbc.writeMem(0x5e4a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0x5e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A5
        gbc.setState(0x16c6, 0x364f, 0xf9d0, 0x898e, 0x842e, 0x7bb8, 0x1, 0x1);
        gbc.writeMem(0x16c6, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0x16c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A6
        gbc.setState(0x63e1, 0xe845, 0xc500, 0xc685, 0x42af, 0xa900, 0x0, 0x1);
        gbc.writeMem(0x63e1, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A7
        gbc.setState(0x497, 0x6e18, 0xe940, 0x1f0e, 0x3bba, 0x8e24, 0x0, 0x0);
        gbc.writeMem(0x497, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A8
        gbc.setState(0x11a4, 0x7a44, 0x6130, 0x1bd7, 0x567a, 0x45bb, 0x0, 0x1);
        gbc.writeMem(0x11a4, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7a44, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01A9
        gbc.setState(0x3ac1, 0x9093, 0x610, 0xef81, 0xd433, 0x9816, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9093, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01AA
        gbc.setState(0x84f9, 0xf142, 0x42a0, 0xb737, 0x5a85, 0x1ed7, 0x1, 0x1);
        gbc.writeMem(0x84f9, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf142, gbc.sp());
        EXPECT(0x84fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x84f9));
        // A1 01AB
        gbc.setState(0xb5c1, 0x11ea, 0x2930, 0xf1c1, 0xcf24, 0xd9dd, 0x1, 0x0);
        gbc.writeMem(0xb5c1, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0xb5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb5c1));
        // A1 01AC
        gbc.setState(0x6780, 0x7754, 0xf4a0, 0xd67, 0xa535, 0x17c3, 0x0, 0x0);
        gbc.writeMem(0x6780, { 0xa1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7754, gbc.sp());
        EXPECT(0x6781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01AD
        gbc.setState(0x4955, 0xf48c, 0xeb70, 0x84dc, 0x4ea1, 0x834a, 0x0, 0x1);
        gbc.writeMem(0x4955, { 0xa1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf48c, gbc.sp());
        EXPECT(0x4956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01AE
        gbc.setState(0xb137, 0x471f, 0xba0, 0xe01d, 0x6d5c, 0x832, 0x0, 0x1);
        gbc.writeMem(0xb137, { 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x471f, gbc.sp());
        EXPECT(0xb138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb137));
        // A1 01AF
        gbc.setState(0x2318, 0x7b52, 0x5220, 0x3c95, 0x9cfe, 0x3fae, 0x1, 0x0);
        gbc.writeMem(0x2318, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7b52, gbc.sp());
        EXPECT(0x2319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01B0
        gbc.setState(0x43ea, 0x805, 0xb430, 0x44f0, 0x61be, 0x6d37, 0x0, 0x1);
        gbc.writeMem(0x43ea, { 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x43eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01B1
        gbc.setState(0xbef5, 0x2ede, 0x88d0, 0x6c34, 0x74d2, 0xa2b2, 0x1, 0x1);
        gbc.writeMem(0xbef5, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2ede, gbc.sp());
        EXPECT(0xbef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbef5));
        // A1 01B2
        gbc.setState(0xa290, 0x4ee5, 0x3f40, 0x2520, 0x289d, 0xbb27, 0x0, 0x1);
        gbc.writeMem(0xa290, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0xa291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa290));
        // A1 01B3
        gbc.setState(0x1133, 0xf66c, 0x4b10, 0x67c1, 0xee32, 0x2826, 0x1, 0x1);
        gbc.writeMem(0x1133, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf66c, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01B5
        gbc.setState(0x2e9b, 0x2012, 0x98f0, 0xe27c, 0x4130, 0x6ffb, 0x1, 0x1);
        gbc.writeMem(0x2e9b, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2012, gbc.sp());
        EXPECT(0x2e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01B6
        gbc.setState(0xd811, 0x9c9d, 0xc330, 0xa7f6, 0x1b86, 0x74fb, 0x0, 0x0);
        gbc.writeMem(0xd811, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd811));
        // A1 01B8
        gbc.setState(0x2d20, 0xf234, 0xa360, 0xbfb1, 0x1beb, 0x738, 0x1, 0x0);
        gbc.writeMem(0x2d20, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0x2d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01B9
        gbc.setState(0x7525, 0x75c6, 0xfb80, 0xd17b, 0x7203, 0x6477, 0x0, 0x1);
        gbc.writeMem(0x7525, { 0xa1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01BA
        gbc.setState(0x380b, 0x171c, 0x3f70, 0x4c0c, 0x50d, 0x40da, 0x1, 0x1);
        gbc.writeMem(0x380b, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x171c, gbc.sp());
        EXPECT(0x380c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01BB
        gbc.setState(0xaefc, 0x8d8e, 0x1fe0, 0x325a, 0xf441, 0xfac4, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d8e, gbc.sp());
        EXPECT(0xaefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaefc));
        // A1 01BC
        gbc.setState(0xadca, 0x6a1a, 0x20c0, 0x22eb, 0x6583, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0xadca, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xadca));
        // A1 01BE
        gbc.setState(0x8267, 0xb1d2, 0xd660, 0xab18, 0xe125, 0x613, 0x1, 0x1);
        gbc.writeMem(0x8267, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x8268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8267));
        // A1 01C0
        gbc.setState(0x667, 0xb961, 0x5460, 0xd35b, 0x1218, 0x9d3b, 0x0, 0x1);
        gbc.writeMem(0x667, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C1
        gbc.setState(0x68c8, 0x4723, 0xaba0, 0x2228, 0x1741, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x68c8, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C2
        gbc.setState(0xbd14, 0xace, 0x1330, 0x8696, 0x3df4, 0xf142, 0x0, 0x1);
        gbc.writeMem(0xbd14, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0xbd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbd14));
        // A1 01C3
        gbc.setState(0x3384, 0x8de6, 0x24a0, 0xf19c, 0xdf49, 0xc215, 0x0, 0x1);
        gbc.writeMem(0x3384, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8de6, gbc.sp());
        EXPECT(0x3385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C4
        gbc.setState(0x4c53, 0x18dc, 0x84e0, 0x8b64, 0x34b, 0xa419, 0x1, 0x1);
        gbc.writeMem(0x4c53, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18dc, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C5
        gbc.setState(0xd41f, 0xf4, 0xed00, 0xdce8, 0x9588, 0xbcfd, 0x0, 0x0);
        gbc.writeMem(0xd41f, { 0xa1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd41f));
        // A1 01C6
        gbc.setState(0x1002, 0x2fa2, 0xec0, 0x6edf, 0x9ceb, 0x6aa2, 0x1, 0x0);
        gbc.writeMem(0x1002, { 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C7
        gbc.setState(0xc3d7, 0x11f, 0xbb10, 0x2e5f, 0xcf6d, 0x9f, 0x0, 0x0);
        gbc.writeMem(0xc3d7, { 0xa1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x11f, gbc.sp());
        EXPECT(0xc3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc3d7));
        // A1 01C8
        gbc.setState(0x3432, 0x9ae8, 0xf7b0, 0x68a2, 0xef27, 0xd061, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01C9
        gbc.setState(0xb267, 0xefb6, 0xbd80, 0x44a2, 0x672a, 0x49fc, 0x0, 0x0);
        gbc.writeMem(0xb267, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb267));
        // A1 01CA
        gbc.setState(0xe6dc, 0xb301, 0xb2d0, 0x10db, 0xf69a, 0x297a, 0x1, 0x1);
        gbc.writeMem(0xe6dc, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb301, gbc.sp());
        EXPECT(0xe6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe6dc));
        // A1 01CB
        gbc.setState(0x5eba, 0x213d, 0xd500, 0x39a0, 0x483b, 0x4216, 0x1, 0x1);
        gbc.writeMem(0x5eba, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01CC
        gbc.setState(0x4c46, 0x3ec6, 0x95c0, 0x6227, 0x15aa, 0x840a, 0x1, 0x1);
        gbc.writeMem(0x4c46, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01CD
        gbc.setState(0x3a78, 0x4f3d, 0x23a0, 0xcdc0, 0xcdfa, 0x7ade, 0x1, 0x1);
        gbc.writeMem(0x3a78, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4f3d, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01CE
        gbc.setState(0x2e44, 0xfb3d, 0x40e0, 0x4a42, 0x1d0d, 0x7878, 0x1, 0x1);
        gbc.writeMem(0x2e44, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0x2e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01CF
        gbc.setState(0x8654, 0x38d7, 0x6f50, 0xa09d, 0x19c8, 0xa9f, 0x0, 0x1);
        gbc.writeMem(0x8654, { 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8654));
        // A1 01D0
        gbc.setState(0xa01e, 0xe4b6, 0xa420, 0xef31, 0x3804, 0x923, 0x1, 0x0);
        gbc.writeMem(0xa01e, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0xa01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa01e));
        // A1 01D1
        gbc.setState(0x102, 0xed3c, 0xd960, 0x8e3a, 0x58c7, 0x8a2d, 0x1, 0x0);
        gbc.writeMem(0x102, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01D2
        gbc.setState(0xda3b, 0xef4d, 0xe880, 0x5815, 0xcb9e, 0xcfe2, 0x1, 0x0);
        gbc.writeMem(0xda3b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xef4d, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda3b));
        // A1 01D3
        gbc.setState(0x108e, 0xa3cc, 0x5490, 0x1211, 0xff49, 0x7170, 0x1, 0x0);
        gbc.writeMem(0x108e, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa3cc, gbc.sp());
        EXPECT(0x108f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01D5
        gbc.setState(0xd489, 0x1528, 0x9e70, 0x7ce4, 0x80b5, 0xa529, 0x0, 0x1);
        gbc.writeMem(0xd489, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd489));
        // A1 01D6
        gbc.setState(0x7156, 0x8900, 0xfd80, 0x4cc7, 0xda5, 0x8710, 0x1, 0x0);
        gbc.writeMem(0x7156, { 0xa1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01D7
        gbc.setState(0x3024, 0x844b, 0xcb70, 0xbd2c, 0x8a20, 0x35c6, 0x1, 0x1);
        gbc.writeMem(0x3024, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x844b, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01D8
        gbc.setState(0xe45d, 0x75d8, 0x3fa0, 0xd904, 0x887a, 0x8566, 0x0, 0x0);
        gbc.writeMem(0xe45d, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe45d));
        // A1 01D9
        gbc.setState(0xe957, 0x48d6, 0xbf0, 0x6621, 0x2e4d, 0x40c7, 0x0, 0x0);
        gbc.writeMem(0xe957, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x48d6, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe957));
        // A1 01DA
        gbc.setState(0xc3b0, 0xb1ce, 0xa70, 0xe4f3, 0x1772, 0xb1a2, 0x0, 0x0);
        gbc.writeMem(0xc3b0, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb1ce, gbc.sp());
        EXPECT(0xc3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc3b0));
        // A1 01DC
        gbc.setState(0xb63f, 0x161f, 0xe90, 0xd092, 0x2518, 0x761c, 0x1, 0x0);
        gbc.writeMem(0xb63f, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x161f, gbc.sp());
        EXPECT(0xb640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb63f));
        // A1 01DD
        gbc.setState(0x77d5, 0x468e, 0xe8e0, 0xbb68, 0xaf7d, 0xe64d, 0x1, 0x0);
        gbc.writeMem(0x77d5, { 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01DE
        gbc.setState(0xcf5b, 0xbcb4, 0x2f40, 0xfa89, 0xf7eb, 0x57f8, 0x1, 0x0);
        gbc.writeMem(0xcf5b, { 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbcb4, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf5b));
        // A1 01DF
        gbc.setState(0x5b30, 0xad65, 0xc920, 0x5322, 0x7058, 0x5c0c, 0x1, 0x0);
        gbc.writeMem(0x5b30, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0x5b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01E0
        gbc.setState(0xc68e, 0x1c4d, 0xa270, 0xee5b, 0x430c, 0x9add, 0x0, 0x1);
        gbc.writeMem(0xc68e, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1c4d, gbc.sp());
        EXPECT(0xc68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc68e));
        // A1 01E1
        gbc.setState(0x255b, 0xeb8b, 0x5900, 0x9ea2, 0x5ee2, 0xcc7, 0x1, 0x0);
        gbc.writeMem(0x255b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeb8b, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01E2
        gbc.setState(0x86d6, 0xc32e, 0xc390, 0x5f74, 0xaa23, 0xd0d2, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x86d6));
        // A1 01E3
        gbc.setState(0x35a2, 0x76ba, 0x9650, 0xfb63, 0xc70b, 0xe5e4, 0x0, 0x0);
        gbc.writeMem(0x35a2, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x76ba, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01E5
        gbc.setState(0x8d7f, 0x6807, 0x6040, 0x85a3, 0x4065, 0xa69a, 0x0, 0x1);
        gbc.writeMem(0x8d7f, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6807, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8d7f));
        // A1 01E6
        gbc.setState(0x3d81, 0xaabb, 0xc720, 0x199c, 0xea21, 0xf2e9, 0x0, 0x0);
        gbc.writeMem(0x3d81, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaabb, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01E7
        gbc.setState(0x8ec9, 0x8db, 0x7830, 0x9472, 0x761c, 0x5e34, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8db, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8ec9));
        // A1 01E8
        gbc.setState(0xe2ab, 0x2cd5, 0x81a0, 0x32be, 0x3f23, 0xf226, 0x1, 0x0);
        gbc.writeMem(0xe2ab, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0xe2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe2ab));
        // A1 01E9
        gbc.setState(0x5871, 0xc869, 0x7ef0, 0xd017, 0x32bd, 0x233e, 0x1, 0x0);
        gbc.writeMem(0x5871, { 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0x5872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01EA
        gbc.setState(0xb112, 0x4124, 0x9ed0, 0x798b, 0x5163, 0x8ed3, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4124, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb112));
        // A1 01EB
        gbc.setState(0xe8c9, 0xe976, 0x4270, 0x5ba6, 0xa11d, 0x5bb6, 0x1, 0x1);
        gbc.writeMem(0xe8c9, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe976, gbc.sp());
        EXPECT(0xe8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe8c9));
        // A1 01EC
        gbc.setState(0xc44e, 0x9e0b, 0x8e40, 0x78d6, 0xd7e6, 0x56e8, 0x0, 0x0);
        gbc.writeMem(0xc44e, { 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9e0b, gbc.sp());
        EXPECT(0xc44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc44e));
        // A1 01EE
        gbc.setState(0x5996, 0x4253, 0xc3c0, 0x48c4, 0x3138, 0x2e61, 0x1, 0x1);
        gbc.writeMem(0x5996, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4253, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01EF
        gbc.setState(0xcbda, 0xf0f3, 0x5e60, 0x79db, 0xb5d2, 0xc14a, 0x0, 0x1);
        gbc.writeMem(0xcbda, { 0xa1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcbda));
        // A1 01F0
        gbc.setState(0xc259, 0x1917, 0x9890, 0x6443, 0xc906, 0xf663, 0x1, 0x0);
        gbc.writeMem(0xc259, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc259));
        // A1 01F1
        gbc.setState(0xd588, 0xd47b, 0x1270, 0x7988, 0xa5e, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0xd588, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd47b, gbc.sp());
        EXPECT(0xd589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd588));
        // A1 01F2
        gbc.setState(0x6b65, 0x975f, 0xf3a0, 0x4507, 0x183, 0xd107, 0x0, 0x1);
        gbc.writeMem(0x6b65, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x975f, gbc.sp());
        EXPECT(0x6b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01F3
        gbc.setState(0x6506, 0x4694, 0xea40, 0x7dbf, 0x2d13, 0x4168, 0x1, 0x1);
        gbc.writeMem(0x6506, { 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4694, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01F4
        gbc.setState(0x876c, 0xb797, 0x55a0, 0x3726, 0xe33e, 0x851, 0x0, 0x0);
        gbc.writeMem(0x876c, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x876d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x876c));
        // A1 01F5
        gbc.setState(0x10e6, 0x40d3, 0x3150, 0x2d43, 0x6cdc, 0x29ab, 0x1, 0x0);
        gbc.writeMem(0x10e6, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x40d3, gbc.sp());
        EXPECT(0x10e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01F7
        gbc.setState(0x674c, 0x1ef1, 0x8820, 0x8017, 0x9caa, 0x7f2, 0x0, 0x1);
        gbc.writeMem(0x674c, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01F9
        gbc.setState(0xc8ef, 0xa4db, 0x8ce0, 0x1ee4, 0x3d8e, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0xc8ef, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0xc8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8ef));
        // A1 01FA
        gbc.setState(0xb1, 0x510e, 0x83d0, 0xd261, 0x5c1e, 0x2019, 0x1, 0x1);
        gbc.writeMem(0xb1, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01FB
        gbc.setState(0x442f, 0xbca5, 0x5910, 0x1552, 0xe974, 0x7c83, 0x1, 0x0);
        gbc.writeMem(0x442f, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbca5, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01FC
        gbc.setState(0xd8f4, 0x566, 0x32b0, 0x7e6e, 0x6c00, 0x2ced, 0x0, 0x0);
        gbc.writeMem(0xd8f4, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x566, gbc.sp());
        EXPECT(0xd8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd8f4));
        // A1 01FD
        gbc.setState(0x1510, 0x89c, 0xd5d0, 0xe57a, 0x260e, 0x54fc, 0x0, 0x0);
        gbc.writeMem(0x1510, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 01FE
        gbc.setState(0x88f0, 0x89fc, 0x7d60, 0xa99b, 0x4ed9, 0xe11e, 0x0, 0x0);
        gbc.writeMem(0x88f0, { 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0x88f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x88f0));
        // A1 0200
        gbc.setState(0xd91e, 0xb4bd, 0x4840, 0x8ca7, 0x6707, 0x6797, 0x1, 0x0);
        gbc.writeMem(0xd91e, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd91e));
        // A1 0201
        gbc.setState(0x2aa0, 0xc8a7, 0xa90, 0x43d8, 0x2b11, 0xf545, 0x1, 0x0);
        gbc.writeMem(0x2aa0, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc8a7, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0202
        gbc.setState(0xc66c, 0x81d, 0x97d0, 0xe7bf, 0xcd2a, 0xdd32, 0x0, 0x0);
        gbc.writeMem(0xc66c, { 0xa1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0xc66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc66c));
        // A1 0203
        gbc.setState(0x79de, 0x2e22, 0xd6f0, 0xce30, 0x8b52, 0xa564, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0204
        gbc.setState(0xef0f, 0xb0a7, 0x8b40, 0x9803, 0x6f6d, 0x87e4, 0x0, 0x0);
        gbc.writeMem(0xef0f, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb0a7, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xef0f));
        // A1 0205
        gbc.setState(0x8e34, 0xfbb3, 0xdaf0, 0x8bf9, 0xe461, 0x3b75, 0x0, 0x1);
        gbc.writeMem(0x8e34, { 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfbb3, gbc.sp());
        EXPECT(0x8e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8e34));
        // A1 0206
        gbc.setState(0x532c, 0xb335, 0xac80, 0x9590, 0x23be, 0x5c8e, 0x0, 0x1);
        gbc.writeMem(0x532c, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0207
        gbc.setState(0x4a9b, 0xd818, 0xda80, 0xeb5f, 0x3833, 0x1965, 0x1, 0x0);
        gbc.writeMem(0x4a9b, { 0xa1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd818, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0208
        gbc.setState(0x462f, 0x9e60, 0x70f0, 0x427f, 0xbe9a, 0x290f, 0x0, 0x0);
        gbc.writeMem(0x462f, { 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0209
        gbc.setState(0xbfb1, 0x987, 0x5540, 0x9034, 0x7e21, 0xc9bb, 0x1, 0x1);
        gbc.writeMem(0xbfb1, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x987, gbc.sp());
        EXPECT(0xbfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbfb1));
        // A1 020A
        gbc.setState(0xcd6b, 0x3687, 0xe510, 0x6ac9, 0x8ca9, 0xc97a, 0x1, 0x0);
        gbc.writeMem(0xcd6b, { 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0xcd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcd6b));
        // A1 020B
        gbc.setState(0x224c, 0x8da0, 0xbf20, 0x84fc, 0x4c32, 0x43a, 0x0, 0x0);
        gbc.writeMem(0x224c, { 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8da0, gbc.sp());
        EXPECT(0x224d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 020C
        gbc.setState(0xcc32, 0x47b5, 0xa680, 0xa5eb, 0xa7a1, 0x8a, 0x1, 0x0);
        gbc.writeMem(0xcc32, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x47b5, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcc32));
        // A1 020D
        gbc.setState(0xde1f, 0x2b72, 0xcaf0, 0x8916, 0x6e2, 0x98ef, 0x1, 0x0);
        gbc.writeMem(0xde1f, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b72, gbc.sp());
        EXPECT(0xde20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xde1f));
        // A1 020E
        gbc.setState(0xd7a9, 0x2fed, 0x4f80, 0xfc1, 0xbe56, 0xf732, 0x0, 0x1);
        gbc.writeMem(0xd7a9, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2fed, gbc.sp());
        EXPECT(0xd7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd7a9));
        // A1 020F
        gbc.setState(0xc030, 0x61ab, 0xa0, 0xe53d, 0x4e45, 0x3bc9, 0x1, 0x0);
        gbc.writeMem(0xc030, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xc031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc030));
        // A1 0210
        gbc.setState(0x45f0, 0xeade, 0x4150, 0xb78f, 0xd729, 0x681d, 0x0, 0x0);
        gbc.writeMem(0x45f0, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeade, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0211
        gbc.setState(0x545e, 0x49a1, 0xad80, 0x4dff, 0x5524, 0xd726, 0x1, 0x1);
        gbc.writeMem(0x545e, { 0xa1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x49a1, gbc.sp());
        EXPECT(0x545f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0212
        gbc.setState(0x90df, 0x67df, 0xaaa0, 0x2abf, 0x680e, 0x4092, 0x1, 0x1);
        gbc.writeMem(0x90df, { 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x67df, gbc.sp());
        EXPECT(0x90e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x90df));
        // A1 0213
        gbc.setState(0x21e9, 0x6760, 0xf70, 0xd01b, 0x9f7e, 0x12c5, 0x0, 0x1);
        gbc.writeMem(0x21e9, { 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6760, gbc.sp());
        EXPECT(0x21ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0214
        gbc.setState(0x800a, 0x1cf1, 0xc300, 0xb0cc, 0x8ed1, 0xd36d, 0x0, 0x1);
        gbc.writeMem(0x800a, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1cf1, gbc.sp());
        EXPECT(0x800b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x800a));
        // A1 0215
        gbc.setState(0x5a7c, 0x69a0, 0x20, 0x5bd6, 0x54bd, 0x4304, 0x0, 0x1);
        gbc.writeMem(0x5a7c, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x69a0, gbc.sp());
        EXPECT(0x5a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0216
        gbc.setState(0xa6fc, 0x85e7, 0x1ed0, 0xa14, 0x77c1, 0xa0a0, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x85e7, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa6fc));
        // A1 0217
        gbc.setState(0x6b74, 0xc757, 0xfff0, 0xc8bb, 0x6d3d, 0xed28, 0x1, 0x0);
        gbc.writeMem(0x6b74, { 0xa1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0218
        gbc.setState(0x2b87, 0x6c0b, 0xbec0, 0x8a40, 0x3775, 0xdd1c, 0x1, 0x1);
        gbc.writeMem(0x2b87, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6c0b, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0219
        gbc.setState(0xb5b4, 0x1f99, 0xd3a0, 0xb972, 0xe87e, 0xfa9b, 0x1, 0x1);
        gbc.writeMem(0xb5b4, { 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1f99, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb5b4));
        // A1 021A
        gbc.setState(0x4cc4, 0xb664, 0x29b0, 0xb903, 0xae25, 0xaaff, 0x0, 0x1);
        gbc.writeMem(0x4cc4, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb664, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 021B
        gbc.setState(0x32d3, 0xe10d, 0x96d0, 0x148d, 0x5be6, 0xb4a7, 0x1, 0x0);
        gbc.writeMem(0x32d3, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0x32d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 021D
        gbc.setState(0x6165, 0x3f29, 0xfca0, 0x32b2, 0xa7d6, 0x2e07, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3f29, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 021E
        gbc.setState(0x47e8, 0xb47d, 0xb3f0, 0xd685, 0xac31, 0xa37c, 0x1, 0x0);
        gbc.writeMem(0x47e8, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb47d, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 021F
        gbc.setState(0x50d1, 0xc0e5, 0xd1f0, 0xe666, 0xcdfc, 0x734e, 0x1, 0x0);
        gbc.writeMem(0x50d1, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x50d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0220
        gbc.setState(0x6f1d, 0x9081, 0x9b30, 0x379e, 0x3116, 0x36a1, 0x1, 0x1);
        gbc.writeMem(0x6f1d, { 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0222
        gbc.setState(0xc7a8, 0x2c35, 0x20e0, 0x455b, 0x356c, 0xe6b2, 0x1, 0x1);
        gbc.writeMem(0xc7a8, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc7a8));
        // A1 0223
        gbc.setState(0x389d, 0x750, 0x39d0, 0x88f7, 0x30a1, 0xe173, 0x1, 0x0);
        gbc.writeMem(0x389d, { 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0x389e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0224
        gbc.setState(0xa59d, 0x1216, 0x68c0, 0x3c5e, 0xf98, 0x9feb, 0x0, 0x0);
        gbc.writeMem(0xa59d, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1216, gbc.sp());
        EXPECT(0xa59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa59d));
        // A1 0225
        gbc.setState(0x8d04, 0xe395, 0x17b0, 0x5d3a, 0x4e56, 0xfad1, 0x1, 0x1);
        gbc.writeMem(0x8d04, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0x8d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8d04));
        // A1 0226
        gbc.setState(0x303c, 0x3154, 0x6640, 0x15e2, 0x6206, 0xf4b2, 0x0, 0x1);
        gbc.writeMem(0x303c, { 0xa1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3154, gbc.sp());
        EXPECT(0x303d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0227
        gbc.setState(0x9eb9, 0xd877, 0x3aa0, 0xeb41, 0x5ff9, 0xd201, 0x0, 0x1);
        gbc.writeMem(0x9eb9, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9eb9));
        // A1 0228
        gbc.setState(0xb076, 0x142c, 0x7270, 0x8206, 0x3c61, 0x8539, 0x1, 0x1);
        gbc.writeMem(0xb076, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb076));
        // A1 0229
        gbc.setState(0xa2e6, 0x95e, 0xec80, 0xa521, 0xc37a, 0x601d, 0x1, 0x0);
        gbc.writeMem(0xa2e6, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x95e, gbc.sp());
        EXPECT(0xa2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa2e6));
        // A1 022A
        gbc.setState(0x9da0, 0xb45a, 0x33c0, 0xbce7, 0xe345, 0x5ef8, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb45a, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9da0));
        // A1 022B
        gbc.setState(0xa41b, 0xc53b, 0x1590, 0x904e, 0x78ac, 0x8371, 0x0, 0x0);
        gbc.writeMem(0xa41b, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc53b, gbc.sp());
        EXPECT(0xa41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa41b));
        // A1 022C
        gbc.setState(0x7f9b, 0xca45, 0xa610, 0x9e08, 0x711e, 0x483, 0x1, 0x0);
        gbc.writeMem(0x7f9b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 022D
        gbc.setState(0xd6bb, 0xb3e0, 0x47a0, 0xc90, 0xf343, 0xef29, 0x1, 0x0);
        gbc.writeMem(0xd6bb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0xd6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd6bb));
        // A1 022E
        gbc.setState(0x7808, 0x7593, 0xe0a0, 0xf4, 0xd579, 0x1938, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7593, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 022F
        gbc.setState(0x5ed8, 0x1fce, 0xbe80, 0x4095, 0xf87c, 0xcc37, 0x1, 0x0);
        gbc.writeMem(0x5ed8, { 0xa1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0230
        gbc.setState(0x8886, 0x5c64, 0xcb00, 0x607a, 0x161, 0x1419, 0x0, 0x0);
        gbc.writeMem(0x8886, { 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0x8887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8886));
        // A1 0231
        gbc.setState(0x780d, 0x1815, 0x4410, 0x5cb3, 0xe6ff, 0xc438, 0x1, 0x0);
        gbc.writeMem(0x780d, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0232
        gbc.setState(0x12c6, 0xb1c, 0x5e80, 0x764b, 0xf7ad, 0x123, 0x0, 0x1);
        gbc.writeMem(0x12c6, { 0xa1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0x12c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0233
        gbc.setState(0x7c02, 0x6960, 0xb470, 0xbc54, 0x542d, 0x844f, 0x0, 0x1);
        gbc.writeMem(0x7c02, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0x7c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0235
        gbc.setState(0x69ff, 0xc650, 0x8e0, 0x8ade, 0x8809, 0xf680, 0x1, 0x0);
        gbc.writeMem(0x69ff, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc650, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0236
        gbc.setState(0x73bb, 0x91b6, 0x5030, 0x2888, 0xf2e7, 0xc34d, 0x1, 0x0);
        gbc.writeMem(0x73bb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0237
        gbc.setState(0x98d8, 0x7d8f, 0xd650, 0xcc35, 0x1e88, 0x8202, 0x1, 0x1);
        gbc.writeMem(0x98d8, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7d8f, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x98d8));
        // A1 0238
        gbc.setState(0x8b88, 0x5076, 0x72d0, 0xa30c, 0x2ed4, 0xa985, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5076, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8b88));
        // A1 0239
        gbc.setState(0x44ee, 0x71f9, 0xaf00, 0x8e22, 0x9e68, 0x1399, 0x0, 0x0);
        gbc.writeMem(0x44ee, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x71f9, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 023A
        gbc.setState(0x3b8f, 0xf3e1, 0xd290, 0x899f, 0xdb97, 0xf80d, 0x1, 0x0);
        gbc.writeMem(0x3b8f, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x3b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 023B
        gbc.setState(0x33b, 0x2bb0, 0x2bd0, 0x9ad8, 0x3873, 0x3394, 0x0, 0x1);
        gbc.writeMem(0x33b, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2bb0, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 023C
        gbc.setState(0xa1d, 0xcbd9, 0x9b00, 0x148b, 0xd394, 0x859c, 0x0, 0x1);
        gbc.writeMem(0xa1d, { 0xa1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0xa1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 023D
        gbc.setState(0x8172, 0xf493, 0xf3f0, 0x7b31, 0x6d9, 0x8fb, 0x1, 0x1);
        gbc.writeMem(0x8172, { 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8172));
        // A1 023E
        gbc.setState(0x14a4, 0xa9da, 0x6080, 0x3ecb, 0x639d, 0xec42, 0x1, 0x1);
        gbc.writeMem(0x14a4, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa9da, gbc.sp());
        EXPECT(0x14a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 023F
        gbc.setState(0x741e, 0x732, 0xfff0, 0x2e6e, 0x2faa, 0x4c0, 0x1, 0x1);
        gbc.writeMem(0x741e, { 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0240
        gbc.setState(0xb0c3, 0x3c3a, 0xafd0, 0x216c, 0x1a4f, 0x4ea3, 0x0, 0x1);
        gbc.writeMem(0xb0c3, { 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3c3a, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb0c3));
        // A1 0241
        gbc.setState(0x80f6, 0xffaf, 0x8cd0, 0x3d84, 0x9a56, 0xd4ec, 0x1, 0x1);
        gbc.writeMem(0x80f6, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xffaf, gbc.sp());
        EXPECT(0x80f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x80f6));
        // A1 0242
        gbc.setState(0x1d7e, 0x6c66, 0x7b20, 0x3642, 0x2281, 0x9c76, 0x1, 0x0);
        gbc.writeMem(0x1d7e, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0x1d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0243
        gbc.setState(0xb5d0, 0xd39e, 0x4730, 0xe971, 0x487c, 0x7bbd, 0x1, 0x1);
        gbc.writeMem(0xb5d0, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb5d0));
        // A1 0244
        gbc.setState(0x5dff, 0x5c24, 0x5730, 0x392b, 0x772, 0x5727, 0x0, 0x1);
        gbc.writeMem(0x5dff, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0245
        gbc.setState(0x48d7, 0x5d8c, 0xcf70, 0x20a8, 0xe497, 0x5c84, 0x0, 0x1);
        gbc.writeMem(0x48d7, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0246
        gbc.setState(0x4094, 0xa87c, 0x6d30, 0x6c04, 0xd154, 0xd719, 0x1, 0x0);
        gbc.writeMem(0x4094, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0247
        gbc.setState(0xa477, 0x7595, 0xa4c0, 0x40bc, 0xaa73, 0x631, 0x1, 0x1);
        gbc.writeMem(0xa477, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7595, gbc.sp());
        EXPECT(0xa478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa477));
        // A1 0248
        gbc.setState(0xd121, 0x7872, 0x56d0, 0x333b, 0xa48, 0xf0d0, 0x0, 0x0);
        gbc.writeMem(0xd121, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7872, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd121));
        // A1 0249
        gbc.setState(0x374a, 0x1b62, 0x1620, 0xf323, 0x2979, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0x374a, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 024A
        gbc.setState(0x8f6c, 0xd5cd, 0xc6c0, 0x4e49, 0xc5c0, 0xd8e9, 0x1, 0x0);
        gbc.writeMem(0x8f6c, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd5cd, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8f6c));
        // A1 024B
        gbc.setState(0xedff, 0x6d54, 0xcee0, 0x3304, 0x3cdb, 0x1ac4, 0x1, 0x1);
        gbc.writeMem(0xedff, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xedff));
        // A1 024C
        gbc.setState(0xae2b, 0xb600, 0x2250, 0x6a88, 0xcd9b, 0xf025, 0x0, 0x0);
        gbc.writeMem(0xae2b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb600, gbc.sp());
        EXPECT(0xae2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xae2b));
        // A1 024D
        gbc.setState(0x5d55, 0x33, 0x7f80, 0xe56d, 0xb9b5, 0x2440, 0x1, 0x0);
        gbc.writeMem(0x5d55, { 0xa1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x33, gbc.sp());
        EXPECT(0x5d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 024E
        gbc.setState(0xe463, 0xd5d4, 0x8b70, 0x1444, 0xf06f, 0xc6d6, 0x0, 0x0);
        gbc.writeMem(0xe463, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd5d4, gbc.sp());
        EXPECT(0xe464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe463));
        // A1 024F
        gbc.setState(0x153, 0x80f3, 0x13c0, 0x6f3a, 0xa6aa, 0xad1d, 0x0, 0x1);
        gbc.writeMem(0x153, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x80f3, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0250
        gbc.setState(0xa9c, 0xb111, 0x33f0, 0xf6c4, 0x8823, 0xb947, 0x0, 0x0);
        gbc.writeMem(0xa9c, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb111, gbc.sp());
        EXPECT(0xa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0251
        gbc.setState(0x3d38, 0xa84f, 0x53c0, 0xf7f4, 0x55cb, 0x5974, 0x1, 0x0);
        gbc.writeMem(0x3d38, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa84f, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0252
        gbc.setState(0xebda, 0x2844, 0x4250, 0xf136, 0x3df6, 0x7000, 0x1, 0x0);
        gbc.writeMem(0xebda, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2844, gbc.sp());
        EXPECT(0xebdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xebda));
        // A1 0253
        gbc.setState(0xd412, 0x1d25, 0xa7e0, 0xe3db, 0xc8d5, 0xcead, 0x0, 0x1);
        gbc.writeMem(0xd412, { 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0xd413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd412));
        // A1 0254
        gbc.setState(0xb1d5, 0xbc81, 0x2710, 0xcff4, 0x8a28, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0xb1d5, { 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbc81, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb1d5));
        // A1 0255
        gbc.setState(0xbe3b, 0xc05, 0x9930, 0xa23d, 0xdf65, 0x6f45, 0x1, 0x0);
        gbc.writeMem(0xbe3b, { 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc05, gbc.sp());
        EXPECT(0xbe3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe3b));
        // A1 0256
        gbc.setState(0xdf82, 0xf931, 0x84a0, 0xd451, 0x33c7, 0xc37e, 0x1, 0x0);
        gbc.writeMem(0xdf82, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf931, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdf82));
        // A1 0257
        gbc.setState(0x1d88, 0x8f17, 0x2ac0, 0x5cc5, 0x91b0, 0xd1eb, 0x0, 0x1);
        gbc.writeMem(0x1d88, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8f17, gbc.sp());
        EXPECT(0x1d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0258
        gbc.setState(0x2fe4, 0xccaf, 0xda70, 0xc454, 0xf7af, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0x2fe4, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xccaf, gbc.sp());
        EXPECT(0x2fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0259
        gbc.setState(0x3fac, 0x8145, 0xb1a0, 0x10b0, 0x148d, 0x8bd3, 0x0, 0x1);
        gbc.writeMem(0x3fac, { 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0x3fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 025A
        gbc.setState(0x1eb9, 0xec06, 0xbc0, 0x630e, 0x4327, 0x5f9b, 0x0, 0x0);
        gbc.writeMem(0x1eb9, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xec06, gbc.sp());
        EXPECT(0x1eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 025B
        gbc.setState(0xa31, 0x5ce4, 0xcd30, 0xbe51, 0x68c8, 0xa552, 0x1, 0x1);
        gbc.writeMem(0xa31, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ce4, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 025C
        gbc.setState(0x7159, 0xe6c4, 0xcfe0, 0x2dbb, 0xcd24, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x7159, { 0xa1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 025D
        gbc.setState(0xcacc, 0x5b3b, 0x3710, 0xad72, 0xfea7, 0x71d6, 0x1, 0x1);
        gbc.writeMem(0xcacc, { 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5b3b, gbc.sp());
        EXPECT(0xcacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcacc));
        // A1 025E
        gbc.setState(0x3896, 0xc39c, 0x5750, 0xe87, 0xb182, 0x98dd, 0x0, 0x1);
        gbc.writeMem(0x3896, { 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x3897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 025F
        gbc.setState(0x7605, 0x718d, 0xc600, 0xa7b6, 0xab78, 0xc359, 0x0, 0x0);
        gbc.writeMem(0x7605, { 0xa1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0x7606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0260
        gbc.setState(0xa818, 0xc7e1, 0x9ad0, 0xabbc, 0xfca5, 0xe1f0, 0x1, 0x1);
        gbc.writeMem(0xa818, { 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0xa819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa818));
        // A1 0262
        gbc.setState(0x40, 0x79ad, 0xedf0, 0xe9f4, 0xd420, 0x6cae, 0x0, 0x0);
        gbc.writeMem(0x40, { 0xa1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x79ad, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0263
        gbc.setState(0xd543, 0x2af, 0x8a80, 0x24c7, 0xf042, 0xe55f, 0x1, 0x1);
        gbc.writeMem(0xd543, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd543));
        // A1 0264
        gbc.setState(0x6d5d, 0xd366, 0x65b0, 0xde00, 0x242c, 0xbd73, 0x0, 0x0);
        gbc.writeMem(0x6d5d, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd366, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0266
        gbc.setState(0xc53c, 0x3b33, 0x90c0, 0xe310, 0x8c48, 0xee89, 0x0, 0x1);
        gbc.writeMem(0xc53c, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b33, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc53c));
        // A1 0267
        gbc.setState(0x2251, 0x9ffc, 0xbbf0, 0x82f9, 0xa009, 0x7506, 0x1, 0x0);
        gbc.writeMem(0x2251, { 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9ffc, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0268
        gbc.setState(0x7009, 0x1917, 0x6b40, 0x9e3, 0xb32a, 0x592c, 0x0, 0x1);
        gbc.writeMem(0x7009, { 0xa1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0x700a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0269
        gbc.setState(0x49d5, 0x63fa, 0x7d40, 0x8217, 0x6372, 0x2133, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x63fa, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 026A
        gbc.setState(0xce64, 0xf2e6, 0xae70, 0x64e4, 0x8dda, 0x40f9, 0x1, 0x1);
        gbc.writeMem(0xce64, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0xce65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xce64));
        // A1 026B
        gbc.setState(0x6d84, 0x6257, 0xd240, 0x6095, 0x49c0, 0x3596, 0x1, 0x0);
        gbc.writeMem(0x6d84, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6257, gbc.sp());
        EXPECT(0x6d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 026D
        gbc.setState(0x2c89, 0x3e39, 0x3640, 0x15d0, 0xfb91, 0xc5, 0x1, 0x1);
        gbc.writeMem(0x2c89, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 026E
        gbc.setState(0xd25c, 0x7664, 0xf670, 0x2698, 0x80fd, 0xeede, 0x0, 0x1);
        gbc.writeMem(0xd25c, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7664, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd25c));
        // A1 0270
        gbc.setState(0xe43f, 0x8ba9, 0x6020, 0x3abc, 0x30bd, 0xc7dd, 0x1, 0x1);
        gbc.writeMem(0xe43f, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe43f));
        // A1 0271
        gbc.setState(0x75a8, 0xa51a, 0x7980, 0x3d11, 0x768f, 0xd0f1, 0x1, 0x1);
        gbc.writeMem(0x75a8, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x75a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0272
        gbc.setState(0xd641, 0x9fe2, 0x5050, 0x7091, 0xe0b7, 0xdf8, 0x0, 0x0);
        gbc.writeMem(0xd641, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0xd642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd641));
        // A1 0274
        gbc.setState(0xee66, 0x1387, 0x6e10, 0xb02a, 0x266c, 0xd51e, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1387, gbc.sp());
        EXPECT(0xee67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xee66));
        // A1 0275
        gbc.setState(0x4fa, 0xa4fa, 0xb710, 0x5998, 0x38b5, 0xaef8, 0x0, 0x0);
        gbc.writeMem(0x4fa, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa4fa, gbc.sp());
        EXPECT(0x4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0276
        gbc.setState(0x496c, 0xe531, 0x5b10, 0x8fb9, 0xb0a6, 0x1a88, 0x0, 0x0);
        gbc.writeMem(0x496c, { 0xa1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0x496d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0277
        gbc.setState(0xb984, 0xb8c3, 0x68d0, 0x7af9, 0xec80, 0x59f4, 0x0, 0x0);
        gbc.writeMem(0xb984, { 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb8c3, gbc.sp());
        EXPECT(0xb985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb984));
        // A1 0278
        gbc.setState(0xd6, 0x9f94, 0x8f30, 0x7b04, 0x812f, 0x9519, 0x0, 0x0);
        gbc.writeMem(0xd6, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0xd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0279
        gbc.setState(0x6bdf, 0xfe9c, 0x4250, 0x71e0, 0x38a8, 0x444d, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x6be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 027A
        gbc.setState(0xea27, 0x6c12, 0xa820, 0x5afc, 0x1938, 0x380b, 0x0, 0x1);
        gbc.writeMem(0xea27, { 0xa1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xea27));
        // A1 027B
        gbc.setState(0xe610, 0xc93d, 0xbb40, 0x9c27, 0xca55, 0xc0b6, 0x0, 0x0);
        gbc.writeMem(0xe610, { 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc93d, gbc.sp());
        EXPECT(0xe611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe610));
        // A1 027C
        gbc.setState(0x3723, 0xeb58, 0x1720, 0x3931, 0x4fcb, 0xc4ff, 0x0, 0x1);
        gbc.writeMem(0x3723, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeb58, gbc.sp());
        EXPECT(0x3724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 027D
        gbc.setState(0x3460, 0xabfe, 0xc350, 0xa8f6, 0xccb6, 0x9a39, 0x0, 0x0);
        gbc.writeMem(0x3460, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xabfe, gbc.sp());
        EXPECT(0x3461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 027E
        gbc.setState(0x3d7c, 0xa0a6, 0x6b50, 0xa295, 0xb1f7, 0xce65, 0x0, 0x1);
        gbc.writeMem(0x3d7c, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa0a6, gbc.sp());
        EXPECT(0x3d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 027F
        gbc.setState(0xd387, 0xabe3, 0x8e70, 0x6881, 0x915d, 0x65cf, 0x0, 0x1);
        gbc.writeMem(0xd387, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd387));
        // A1 0280
        gbc.setState(0xbb6a, 0x5869, 0x7010, 0xd6d, 0x1ecb, 0x612b, 0x1, 0x1);
        gbc.writeMem(0xbb6a, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb6a));
        // A1 0281
        gbc.setState(0x77ef, 0xcf7c, 0x9220, 0x3609, 0x43b8, 0xb2dc, 0x1, 0x0);
        gbc.writeMem(0x77ef, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0x77f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0282
        gbc.setState(0x5a0a, 0x8253, 0x32a0, 0xe2eb, 0x33a7, 0x3ffe, 0x1, 0x1);
        gbc.writeMem(0x5a0a, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0x5a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0283
        gbc.setState(0xb692, 0x8884, 0xbbd0, 0xfef7, 0xb33e, 0xb0f4, 0x0, 0x0);
        gbc.writeMem(0xb692, { 0xa1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0xb693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb692));
        // A1 0284
        gbc.setState(0xae19, 0x8fc6, 0x12f0, 0x2352, 0x4b78, 0x2de1, 0x0, 0x0);
        gbc.writeMem(0xae19, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8fc6, gbc.sp());
        EXPECT(0xae1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xae19));
        // A1 0285
        gbc.setState(0xd8e, 0xc171, 0x90b0, 0x6c69, 0x4778, 0x8c66, 0x0, 0x1);
        gbc.writeMem(0xd8e, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc171, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0286
        gbc.setState(0xc581, 0x3a11, 0x9da0, 0x3b17, 0xfc43, 0x51fa, 0x1, 0x0);
        gbc.writeMem(0xc581, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0xc582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc581));
        // A1 0287
        gbc.setState(0x9a7d, 0x1598, 0xdf30, 0x3363, 0xa857, 0x8785, 0x1, 0x0);
        gbc.writeMem(0x9a7d, { 0xa1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1598, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9a7d));
        // A1 0288
        gbc.setState(0x3ec7, 0x1ac3, 0x6d20, 0x65ed, 0xe4b2, 0xe7ea, 0x1, 0x0);
        gbc.writeMem(0x3ec7, { 0xa1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1ac3, gbc.sp());
        EXPECT(0x3ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0289
        gbc.setState(0x6ea8, 0x7cf0, 0xc060, 0x56f4, 0xaf4f, 0xa7a0, 0x0, 0x0);
        gbc.writeMem(0x6ea8, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7cf0, gbc.sp());
        EXPECT(0x6ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 028A
        gbc.setState(0xd289, 0xf37d, 0x3790, 0xba1a, 0xffb6, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0xd289, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd289));
        // A1 028B
        gbc.setState(0x48b6, 0x437f, 0x8840, 0xf893, 0x904, 0x6233, 0x1, 0x1);
        gbc.writeMem(0x48b6, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 028C
        gbc.setState(0x609a, 0xda1f, 0x13a0, 0xc68c, 0x9f0f, 0xd626, 0x1, 0x0);
        gbc.writeMem(0x609a, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xda1f, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 028D
        gbc.setState(0x275, 0xf41a, 0x1590, 0x5438, 0x68a6, 0x3caf, 0x0, 0x0);
        gbc.writeMem(0x275, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 028E
        gbc.setState(0x6622, 0xb702, 0x9690, 0x2389, 0x99d2, 0x5c69, 0x0, 0x1);
        gbc.writeMem(0x6622, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb702, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 028F
        gbc.setState(0x57d5, 0x4268, 0x9ec0, 0x2995, 0x8687, 0x2d5, 0x1, 0x1);
        gbc.writeMem(0x57d5, { 0xa1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x57d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0290
        gbc.setState(0x41d6, 0xd531, 0x6ea0, 0xf405, 0x9695, 0x639c, 0x1, 0x1);
        gbc.writeMem(0x41d6, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd531, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0291
        gbc.setState(0x145b, 0x54ea, 0x9e00, 0x7b42, 0x77e3, 0xc60a, 0x1, 0x0);
        gbc.writeMem(0x145b, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x54ea, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0292
        gbc.setState(0xa0e4, 0xcb72, 0xd8f0, 0xfaa, 0x1aed, 0x741, 0x1, 0x0);
        gbc.writeMem(0xa0e4, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa0e4));
        // A1 0293
        gbc.setState(0xd39f, 0xa9e7, 0x8200, 0xca42, 0xd1ea, 0xfd6b, 0x1, 0x1);
        gbc.writeMem(0xd39f, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa9e7, gbc.sp());
        EXPECT(0xd3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd39f));
        // A1 0294
        gbc.setState(0xcfeb, 0x808a, 0xc8c0, 0x8382, 0xec7d, 0x3ab6, 0x0, 0x0);
        gbc.writeMem(0xcfeb, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0xcfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcfeb));
        // A1 0295
        gbc.setState(0x248a, 0x93ab, 0x2870, 0xfcdc, 0x3e74, 0xe70e, 0x1, 0x0);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0296
        gbc.setState(0xdc58, 0x7d3, 0x4200, 0xa9af, 0x53ad, 0x278, 0x0, 0x1);
        gbc.writeMem(0xdc58, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d3, gbc.sp());
        EXPECT(0xdc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdc58));
        // A1 0298
        gbc.setState(0x748c, 0x7909, 0xb8b0, 0x2ef1, 0xb77e, 0x77a7, 0x1, 0x0);
        gbc.writeMem(0x748c, { 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0x748d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0299
        gbc.setState(0x10a3, 0x1b37, 0xf950, 0xbc9d, 0x3531, 0x6940, 0x1, 0x1);
        gbc.writeMem(0x10a3, { 0xa1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 029A
        gbc.setState(0x60a9, 0x6fbe, 0x6ce0, 0x3536, 0xd0e6, 0x2d1f, 0x1, 0x1);
        gbc.writeMem(0x60a9, { 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 029B
        gbc.setState(0xd1cb, 0x14ba, 0xbad0, 0x7086, 0x9acc, 0x133d, 0x0, 0x0);
        gbc.writeMem(0xd1cb, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x14ba, gbc.sp());
        EXPECT(0xd1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd1cb));
        // A1 029C
        gbc.setState(0x29dd, 0x269e, 0xa270, 0x58e4, 0x7ab3, 0x84ab, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 029D
        gbc.setState(0x7e2f, 0xb371, 0x16b0, 0x9085, 0xa853, 0xbb9a, 0x1, 0x1);
        gbc.writeMem(0x7e2f, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb371, gbc.sp());
        EXPECT(0x7e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 029E
        gbc.setState(0xe950, 0xf2ba, 0xc10, 0x860a, 0xb98f, 0xfb7a, 0x0, 0x0);
        gbc.writeMem(0xe950, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0xe951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe950));
        // A1 029F
        gbc.setState(0xb3a2, 0xb142, 0x4690, 0xf183, 0x4e9e, 0x7a8f, 0x0, 0x1);
        gbc.writeMem(0xb3a2, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0xb3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb3a2));
        // A1 02A1
        gbc.setState(0xdba, 0xf6e3, 0xbac0, 0x4598, 0x4980, 0x4c1d, 0x0, 0x0);
        gbc.writeMem(0xdba, { 0xa1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02A2
        gbc.setState(0xa459, 0x90ad, 0x7870, 0xa8d8, 0xe94d, 0xed33, 0x1, 0x0);
        gbc.writeMem(0xa459, { 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x90ad, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa459));
        // A1 02A4
        gbc.setState(0xa00b, 0x8fde, 0x1530, 0xa685, 0xcd1e, 0x3654, 0x0, 0x1);
        gbc.writeMem(0xa00b, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8fde, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa00b));
        // A1 02A5
        gbc.setState(0xd7f0, 0x3adc, 0x62b0, 0x2b24, 0xa4c2, 0xde27, 0x1, 0x0);
        gbc.writeMem(0xd7f0, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3adc, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd7f0));
        // A1 02A6
        gbc.setState(0x7606, 0x2eb0, 0x8af0, 0x7854, 0x8bf1, 0x4fea, 0x0, 0x1);
        gbc.writeMem(0x7606, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2eb0, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02A7
        gbc.setState(0x6b58, 0xb21, 0xad80, 0x83f3, 0x1681, 0x7384, 0x1, 0x1);
        gbc.writeMem(0x6b58, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb21, gbc.sp());
        EXPECT(0x6b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02A8
        gbc.setState(0x931c, 0x4c1b, 0xcee0, 0xae52, 0x5028, 0xd61a, 0x0, 0x1);
        gbc.writeMem(0x931c, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c1b, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x931c));
        // A1 02AA
        gbc.setState(0x2b32, 0x16de, 0x9230, 0x32ca, 0x2c4d, 0x5d5d, 0x0, 0x0);
        gbc.writeMem(0x2b32, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x16de, gbc.sp());
        EXPECT(0x2b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02AB
        gbc.setState(0x8b0d, 0xa38, 0xe4a0, 0x5980, 0x15e7, 0x3e76, 0x1, 0x0);
        gbc.writeMem(0x8b0d, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa38, gbc.sp());
        EXPECT(0x8b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8b0d));
        // A1 02AC
        gbc.setState(0x98dd, 0x9e7b, 0x17c0, 0xc9c5, 0x35c2, 0x20ee, 0x1, 0x1);
        gbc.writeMem(0x98dd, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x98dd));
        // A1 02AD
        gbc.setState(0x9931, 0x3515, 0x5230, 0x790a, 0xb41a, 0x9d21, 0x0, 0x1);
        gbc.writeMem(0x9931, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3515, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9931));
        // A1 02AE
        gbc.setState(0x159b, 0xf33c, 0x75f0, 0x1df, 0xef91, 0xb14f, 0x0, 0x0);
        gbc.writeMem(0x159b, { 0xa1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf33c, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02AF
        gbc.setState(0x2004, 0x6943, 0x4f30, 0x4c44, 0x5ed3, 0x3f82, 0x1, 0x1);
        gbc.writeMem(0x2004, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02B0
        gbc.setState(0xd070, 0x962a, 0x88b0, 0xbb77, 0x2916, 0x9e19, 0x1, 0x0);
        gbc.writeMem(0xd070, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x962a, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd070));
        // A1 02B1
        gbc.setState(0x5d4e, 0xfe11, 0xa590, 0x8209, 0x6f62, 0x8a7b, 0x1, 0x1);
        gbc.writeMem(0x5d4e, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe11, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02B2
        gbc.setState(0x6b44, 0x910c, 0xf3d0, 0xfeec, 0x1c2b, 0xe8a6, 0x1, 0x1);
        gbc.writeMem(0x6b44, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x910c, gbc.sp());
        EXPECT(0x6b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02B3
        gbc.setState(0x4ee, 0xafef, 0xcbe0, 0xa9a9, 0xb09, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0x4ee, { 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xafef, gbc.sp());
        EXPECT(0x4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02B4
        gbc.setState(0xdb1c, 0x7948, 0xe320, 0xd626, 0x3a14, 0xf52d, 0x0, 0x1);
        gbc.writeMem(0xdb1c, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0xdb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdb1c));
        // A1 02B5
        gbc.setState(0xa175, 0xa5a8, 0x44f0, 0xd413, 0xbadb, 0x6758, 0x0, 0x0);
        gbc.writeMem(0xa175, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa5a8, gbc.sp());
        EXPECT(0xa176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa175));
        // A1 02B6
        gbc.setState(0xcdaf, 0x6a64, 0xeae0, 0xbfe4, 0x7a7d, 0x2372, 0x1, 0x1);
        gbc.writeMem(0xcdaf, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6a64, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcdaf));
        // A1 02B7
        gbc.setState(0x6018, 0xb785, 0x1ca0, 0x1a59, 0x5989, 0xeb8d, 0x0, 0x1);
        gbc.writeMem(0x6018, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0x6019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02B8
        gbc.setState(0x741, 0x4f1a, 0x5aa0, 0x8151, 0xe66b, 0x76a8, 0x0, 0x0);
        gbc.writeMem(0x741, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4f1a, gbc.sp());
        EXPECT(0x742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02BA
        gbc.setState(0x7992, 0xab4, 0xe1b0, 0xe41d, 0x7862, 0xc4fd, 0x0, 0x0);
        gbc.writeMem(0x7992, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xab4, gbc.sp());
        EXPECT(0x7993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02BB
        gbc.setState(0x6fd6, 0xee90, 0x4460, 0x8a40, 0xf26f, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0x6fd6, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xee90, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02BC
        gbc.setState(0x2cdc, 0x997d, 0x9f90, 0x9025, 0x144d, 0xedad, 0x1, 0x1);
        gbc.writeMem(0x2cdc, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x997d, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02BE
        gbc.setState(0x6043, 0xa588, 0xf850, 0x515a, 0x5cad, 0xf79c, 0x1, 0x0);
        gbc.writeMem(0x6043, { 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa588, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02BF
        gbc.setState(0x6cf0, 0x418c, 0x8a30, 0xd69b, 0xfd62, 0xcde, 0x1, 0x1);
        gbc.writeMem(0x6cf0, { 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02C0
        gbc.setState(0xcc20, 0xf144, 0xa6e0, 0xebaa, 0xb486, 0x22a5, 0x1, 0x0);
        gbc.writeMem(0xcc20, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0xcc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcc20));
        // A1 02C1
        gbc.setState(0x1b4c, 0x20af, 0xce10, 0x41fa, 0xbd98, 0x9cb0, 0x1, 0x1);
        gbc.writeMem(0x1b4c, { 0xa1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0x1b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02C2
        gbc.setState(0xd2d3, 0x6f79, 0xd400, 0xbab, 0x9d08, 0x56a3, 0x1, 0x1);
        gbc.writeMem(0xd2d3, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd2d3));
        // A1 02C3
        gbc.setState(0x9f21, 0xc012, 0xe200, 0xa71d, 0x116d, 0x7772, 0x0, 0x0);
        gbc.writeMem(0x9f21, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc012, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9f21));
        // A1 02C4
        gbc.setState(0x6be5, 0xdd53, 0x7f90, 0xca91, 0x83bc, 0x8f01, 0x1, 0x0);
        gbc.writeMem(0x6be5, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdd53, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02C5
        gbc.setState(0x3eb4, 0xd005, 0xceb0, 0x3c71, 0x5b64, 0x13af, 0x0, 0x0);
        gbc.writeMem(0x3eb4, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd005, gbc.sp());
        EXPECT(0x3eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02C7
        gbc.setState(0x19bc, 0xf8ce, 0x84d0, 0x438, 0x4e48, 0x6a3b, 0x0, 0x1);
        gbc.writeMem(0x19bc, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf8ce, gbc.sp());
        EXPECT(0x19bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02C8
        gbc.setState(0xbb2c, 0x9d5c, 0x5fc0, 0x2516, 0x4048, 0x549, 0x1, 0x1);
        gbc.writeMem(0xbb2c, { 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9d5c, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb2c));
        // A1 02C9
        gbc.setState(0x4289, 0xf57a, 0x6660, 0x2277, 0xca0e, 0xad8b, 0x0, 0x0);
        gbc.writeMem(0x4289, { 0xa1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0x428a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02CA
        gbc.setState(0x3b7e, 0xcc3c, 0x5000, 0x9cb8, 0x431d, 0xe24, 0x1, 0x0);
        gbc.writeMem(0x3b7e, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0x3b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02CB
        gbc.setState(0xe54e, 0xde89, 0x6720, 0x2da5, 0x3808, 0xce4e, 0x0, 0x1);
        gbc.writeMem(0xe54e, { 0xa1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0xe54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe54e));
        // A1 02CC
        gbc.setState(0xf1d, 0x86a6, 0xf900, 0x3901, 0x7d00, 0x16fd, 0x0, 0x0);
        gbc.writeMem(0xf1d, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0xf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02CD
        gbc.setState(0x4c89, 0x4a70, 0xe910, 0xb070, 0x7d3d, 0xd7f8, 0x1, 0x0);
        gbc.writeMem(0x4c89, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0x4c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02CE
        gbc.setState(0x6d6f, 0xf2fc, 0xac90, 0x7b7b, 0x9aea, 0x6f4f, 0x0, 0x1);
        gbc.writeMem(0x6d6f, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02CF
        gbc.setState(0x9f78, 0xa1ef, 0x8700, 0x78ba, 0x8d3c, 0xed9a, 0x0, 0x1);
        gbc.writeMem(0x9f78, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9f78));
        // A1 02D0
        gbc.setState(0x725f, 0x1a01, 0x890, 0x5bf4, 0xc327, 0xebf2, 0x1, 0x0);
        gbc.writeMem(0x725f, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02D1
        gbc.setState(0x2c64, 0xa88e, 0x8530, 0xc1b8, 0xebf7, 0xc693, 0x0, 0x0);
        gbc.writeMem(0x2c64, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa88e, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02D2
        gbc.setState(0xb640, 0x8746, 0x3b20, 0xa108, 0x7fb8, 0xd05c, 0x0, 0x1);
        gbc.writeMem(0xb640, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0xb641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb640));
        // A1 02D3
        gbc.setState(0x93f9, 0xb0e7, 0xc7c0, 0xb4d1, 0x9e09, 0x4d33, 0x1, 0x1);
        gbc.writeMem(0x93f9, { 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb0e7, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x93f9));
        // A1 02D4
        gbc.setState(0xc5ca, 0x36f0, 0x7400, 0x5959, 0xd639, 0xf6c7, 0x0, 0x0);
        gbc.writeMem(0xc5ca, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x36f0, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc5ca));
        // A1 02D5
        gbc.setState(0x5f84, 0x940a, 0xebf0, 0x7065, 0x9c6d, 0xd79f, 0x0, 0x1);
        gbc.writeMem(0x5f84, { 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0x5f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02D6
        gbc.setState(0xaccc, 0x89ad, 0xf530, 0xb0b, 0xe53d, 0x35ec, 0x1, 0x1);
        gbc.writeMem(0xaccc, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x89ad, gbc.sp());
        EXPECT(0xaccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaccc));
        // A1 02D7
        gbc.setState(0x62b6, 0x3fc0, 0x25c0, 0xbf20, 0x709d, 0x3134, 0x0, 0x0);
        gbc.writeMem(0x62b6, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3fc0, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02D8
        gbc.setState(0x59a1, 0xe287, 0xd9b0, 0xeefe, 0x57db, 0x3b7e, 0x1, 0x0);
        gbc.writeMem(0x59a1, { 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe287, gbc.sp());
        EXPECT(0x59a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02D9
        gbc.setState(0x6983, 0x786a, 0xd810, 0x88fb, 0x3064, 0x8bd9, 0x1, 0x1);
        gbc.writeMem(0x6983, { 0xa1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x786a, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02DA
        gbc.setState(0x9abc, 0x9baa, 0xb5e0, 0x5d4a, 0x5716, 0xe591, 0x0, 0x0);
        gbc.writeMem(0x9abc, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9abc));
        // A1 02DB
        gbc.setState(0x2d1f, 0x525, 0x7c00, 0x3f99, 0xb8a8, 0x4737, 0x0, 0x1);
        gbc.writeMem(0x2d1f, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0x2d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02DD
        gbc.setState(0xb5a5, 0xa1e8, 0xb9f0, 0x8542, 0x332d, 0x47df, 0x1, 0x1);
        gbc.writeMem(0xb5a5, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa1e8, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb5a5));
        // A1 02DE
        gbc.setState(0x26fe, 0x3ec, 0x5f70, 0x3f2c, 0x9a6d, 0x1d34, 0x1, 0x1);
        gbc.writeMem(0x26fe, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3ec, gbc.sp());
        EXPECT(0x26ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02DF
        gbc.setState(0x5285, 0x342b, 0xce00, 0xfdba, 0x42b9, 0xdb56, 0x0, 0x0);
        gbc.writeMem(0x5285, { 0xa1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x342b, gbc.sp());
        EXPECT(0x5286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02E0
        gbc.setState(0x6bbc, 0xe24f, 0x5360, 0x70b1, 0x6da5, 0x2b91, 0x0, 0x1);
        gbc.writeMem(0x6bbc, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0x6bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02E1
        gbc.setState(0xe0da, 0x2083, 0x11f0, 0x295f, 0x8b8c, 0xe677, 0x1, 0x1);
        gbc.writeMem(0xe0da, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2083, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe0da));
        // A1 02E2
        gbc.setState(0xe41f, 0x690e, 0x3af0, 0x4e45, 0x9564, 0xcde0, 0x0, 0x1);
        gbc.writeMem(0xe41f, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x690e, gbc.sp());
        EXPECT(0xe420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe41f));
        // A1 02E3
        gbc.setState(0x300b, 0x53ac, 0xa030, 0xbd26, 0x7deb, 0x3ee3, 0x1, 0x0);
        gbc.writeMem(0x300b, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x300c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02E4
        gbc.setState(0xe91a, 0x8be8, 0x5d10, 0x4ab3, 0x2695, 0xb03a, 0x0, 0x1);
        gbc.writeMem(0xe91a, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0xe91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe91a));
        // A1 02E5
        gbc.setState(0xcefb, 0xc0ed, 0x37a0, 0x1f29, 0x1a79, 0xf43, 0x1, 0x1);
        gbc.writeMem(0xcefb, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc0ed, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcefb));
        // A1 02E6
        gbc.setState(0xd6cc, 0x3039, 0x7d70, 0xcd45, 0x5f35, 0x228f, 0x1, 0x0);
        gbc.writeMem(0xd6cc, { 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd6cc));
        // A1 02E7
        gbc.setState(0x3d94, 0x668e, 0x3f10, 0x67ea, 0x17a5, 0x6313, 0x0, 0x1);
        gbc.writeMem(0x3d94, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02E8
        gbc.setState(0xd5a0, 0x434, 0x1830, 0x609b, 0x73fa, 0xdeb, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x434, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd5a0));
        // A1 02E9
        gbc.setState(0x1bbc, 0x32a1, 0xd3b0, 0xeab2, 0x4f30, 0x52ab, 0x0, 0x0);
        gbc.writeMem(0x1bbc, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x32a1, gbc.sp());
        EXPECT(0x1bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02EA
        gbc.setState(0xe3c8, 0x559, 0x8a50, 0x9c5d, 0x6d87, 0x7ad3, 0x0, 0x0);
        gbc.writeMem(0xe3c8, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x559, gbc.sp());
        EXPECT(0xe3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe3c8));
        // A1 02EB
        gbc.setState(0xd704, 0xb8a9, 0xdb20, 0xd104, 0x400f, 0x2e6a, 0x1, 0x0);
        gbc.writeMem(0xd704, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb8a9, gbc.sp());
        EXPECT(0xd705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd704));
        // A1 02EC
        gbc.setState(0x4de0, 0x3d2c, 0x9180, 0x8c0f, 0x5a48, 0x1503, 0x1, 0x0);
        gbc.writeMem(0x4de0, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02ED
        gbc.setState(0xa24, 0xc27c, 0x60a0, 0xe47b, 0x79d4, 0xee8a, 0x1, 0x1);
        gbc.writeMem(0xa24, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02EE
        gbc.setState(0x67d4, 0x317e, 0x87d0, 0x356f, 0xf49f, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x67d4, { 0xa1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x317e, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02EF
        gbc.setState(0xcf6f, 0xa759, 0x5ce0, 0xb9dc, 0x3a55, 0xd6b9, 0x0, 0x1);
        gbc.writeMem(0xcf6f, { 0xa1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa759, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf6f));
        // A1 02F0
        gbc.setState(0x5cbc, 0x4779, 0xbcf0, 0xebe4, 0x7a20, 0xe095, 0x1, 0x1);
        gbc.writeMem(0x5cbc, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0x5cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02F2
        gbc.setState(0xe80c, 0x9b26, 0x84e0, 0x89cf, 0xd145, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0xe80c, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9b26, gbc.sp());
        EXPECT(0xe80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe80c));
        // A1 02F3
        gbc.setState(0xefc6, 0xc3b0, 0x55b0, 0x18ff, 0xd301, 0x475f, 0x1, 0x0);
        gbc.writeMem(0xefc6, { 0xa1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xefc6));
        // A1 02F4
        gbc.setState(0xa272, 0x41d7, 0xdee0, 0xcf9d, 0x331d, 0x7acd, 0x0, 0x1);
        gbc.writeMem(0xa272, { 0xa1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x41d7, gbc.sp());
        EXPECT(0xa273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa272));
        // A1 02F5
        gbc.setState(0xbb14, 0xcb56, 0xb2e0, 0xff57, 0x6e64, 0x9d80, 0x0, 0x0);
        gbc.writeMem(0xbb14, { 0xa1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0xbb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb14));
        // A1 02F6
        gbc.setState(0xa0f2, 0xb1a, 0xab30, 0xd6a0, 0x4e8f, 0x8e45, 0x1, 0x1);
        gbc.writeMem(0xa0f2, { 0xa1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb1a, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa0f2));
        // A1 02F7
        gbc.setState(0xd417, 0x15bf, 0xb320, 0x88c3, 0x8287, 0x8675, 0x0, 0x1);
        gbc.writeMem(0xd417, { 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0xd418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd417));
        // A1 02F8
        gbc.setState(0x91f5, 0x416a, 0xf920, 0xa5bd, 0x1737, 0xd5c1, 0x1, 0x0);
        gbc.writeMem(0x91f5, { 0xa1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x91f5));
        // A1 02F9
        gbc.setState(0x3c7e, 0xb482, 0xfeb0, 0x9346, 0x5d83, 0x7892, 0x0, 0x1);
        gbc.writeMem(0x3c7e, { 0xa1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02FA
        gbc.setState(0x174d, 0x6a27, 0x7100, 0x7acd, 0xb552, 0x12a8, 0x1, 0x1);
        gbc.writeMem(0x174d, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a27, gbc.sp());
        EXPECT(0x174e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02FB
        gbc.setState(0x6040, 0xcc80, 0xf2b0, 0xb1c0, 0x97e1, 0xc04, 0x1, 0x0);
        gbc.writeMem(0x6040, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02FC
        gbc.setState(0x3904, 0x7c79, 0x480, 0xfd3c, 0x9fa4, 0xbec8, 0x1, 0x1);
        gbc.writeMem(0x3904, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7c79, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 02FD
        gbc.setState(0xe044, 0xb5db, 0xd9f0, 0x7e6, 0x3258, 0x24ca, 0x1, 0x1);
        gbc.writeMem(0xe044, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xe045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe044));
        // A1 02FE
        gbc.setState(0xbfe9, 0xa4f5, 0x7880, 0xe70e, 0x7e8b, 0x1697, 0x1, 0x0);
        gbc.writeMem(0xbfe9, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa4f5, gbc.sp());
        EXPECT(0xbfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbfe9));
        // A1 02FF
        gbc.setState(0xa86c, 0xa5ef, 0xca30, 0xcb16, 0xf674, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0xa86c, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa5ef, gbc.sp());
        EXPECT(0xa86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa86c));
        // A1 0300
        gbc.setState(0x2848, 0x38ca, 0x5d50, 0x693f, 0xd528, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x2848, { 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x38ca, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0301
        gbc.setState(0xbb38, 0x2b44, 0xf1d0, 0xd921, 0xad4a, 0xbb81, 0x1, 0x1);
        gbc.writeMem(0xbb38, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb38));
        // A1 0302
        gbc.setState(0x2ff8, 0x476b, 0xef20, 0x50b2, 0xfd43, 0xb432, 0x0, 0x0);
        gbc.writeMem(0x2ff8, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0x2ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0303
        gbc.setState(0x4078, 0xab70, 0x4600, 0x8850, 0xf4cd, 0x3d5b, 0x0, 0x1);
        gbc.writeMem(0x4078, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x4079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0304
        gbc.setState(0xed92, 0x821, 0xfc20, 0x8e3, 0xeed2, 0x49bc, 0x1, 0x0);
        gbc.writeMem(0xed92, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xed92));
        // A1 0305
        gbc.setState(0x96f7, 0xe994, 0x2040, 0xe171, 0x44c7, 0xa425, 0x0, 0x0);
        gbc.writeMem(0x96f7, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe994, gbc.sp());
        EXPECT(0x96f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x96f7));
        // A1 0306
        gbc.setState(0x596b, 0x2a21, 0x2160, 0xa19e, 0x382a, 0x6756, 0x1, 0x0);
        gbc.writeMem(0x596b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2a21, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0307
        gbc.setState(0x5031, 0xe75a, 0x1670, 0xbe80, 0x2ff0, 0xf9c4, 0x0, 0x0);
        gbc.writeMem(0x5031, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x5032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0308
        gbc.setState(0x98dc, 0x9918, 0xfd30, 0xf015, 0x445d, 0x46b2, 0x1, 0x1);
        gbc.writeMem(0x98dc, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0x98dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x98dc));
        // A1 0309
        gbc.setState(0x663c, 0xdc59, 0x7210, 0x9431, 0x953a, 0xcc6e, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xa1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 030A
        gbc.setState(0xcee0, 0x7bc8, 0x9e50, 0x4090, 0x42bf, 0x9893, 0x0, 0x1);
        gbc.writeMem(0xcee0, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7bc8, gbc.sp());
        EXPECT(0xcee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcee0));
        // A1 030B
        gbc.setState(0x2c9f, 0x8547, 0xcec0, 0xe5c6, 0x262a, 0x499d, 0x1, 0x0);
        gbc.writeMem(0x2c9f, { 0xa1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 030C
        gbc.setState(0xdcf7, 0x2c8f, 0xe510, 0x506b, 0x622a, 0xd12d, 0x0, 0x1);
        gbc.writeMem(0xdcf7, { 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdcf7));
        // A1 030E
        gbc.setState(0xb2cd, 0xa0db, 0xccd0, 0x89fe, 0xf44c, 0x91a3, 0x1, 0x0);
        gbc.writeMem(0xb2cd, { 0xa1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0xb2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb2cd));
        // A1 030F
        gbc.setState(0xece8, 0x8a1b, 0xcd40, 0xb126, 0x6416, 0xb1cd, 0x0, 0x1);
        gbc.writeMem(0xece8, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0xece9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xece8));
        // A1 0310
        gbc.setState(0xefd3, 0xc6c0, 0x8880, 0x9d08, 0x5084, 0xbde1, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc6c0, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xefd3));
        // A1 0311
        gbc.setState(0x57d2, 0x13d, 0xe890, 0x7221, 0xac06, 0x1aff, 0x1, 0x0);
        gbc.writeMem(0x57d2, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0312
        gbc.setState(0xc880, 0xa22e, 0xebc0, 0xa941, 0xe7c6, 0x9ac3, 0x0, 0x1);
        gbc.writeMem(0xc880, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc880));
        // A1 0313
        gbc.setState(0x9eb0, 0x3d42, 0xb5b0, 0xdb3d, 0x7664, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0x9eb0, { 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3d42, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9eb0));
        // A1 0314
        gbc.setState(0xb247, 0x92fa, 0x3440, 0x70eb, 0xcdd5, 0x5ea8, 0x0, 0x0);
        gbc.writeMem(0xb247, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x92fa, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb247));
        // A1 0315
        gbc.setState(0x7bd7, 0x924c, 0x2ea0, 0xff88, 0xccee, 0xa422, 0x0, 0x1);
        gbc.writeMem(0x7bd7, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x924c, gbc.sp());
        EXPECT(0x7bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0316
        gbc.setState(0xb940, 0x6ea, 0x1cd0, 0xd50f, 0x5ba7, 0x41f3, 0x1, 0x1);
        gbc.writeMem(0xb940, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb940));
        // A1 0318
        gbc.setState(0x1cd4, 0x1355, 0x48d0, 0xe42, 0x298f, 0xa3eb, 0x1, 0x0);
        gbc.writeMem(0x1cd4, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1355, gbc.sp());
        EXPECT(0x1cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0319
        gbc.setState(0x2ddf, 0x898c, 0xf6c0, 0x6521, 0x905, 0x7157, 0x1, 0x0);
        gbc.writeMem(0x2ddf, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x898c, gbc.sp());
        EXPECT(0x2de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 031A
        gbc.setState(0x40c8, 0xb2c9, 0xc200, 0x3e16, 0xe615, 0xfadd, 0x0, 0x0);
        gbc.writeMem(0x40c8, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb2c9, gbc.sp());
        EXPECT(0x40c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 031B
        gbc.setState(0xb1f1, 0x13e2, 0x7030, 0x9501, 0x935f, 0x8a8c, 0x1, 0x0);
        gbc.writeMem(0xb1f1, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb1f1));
        // A1 031C
        gbc.setState(0xc2f6, 0x7e08, 0x99c0, 0xd064, 0xc90e, 0xba09, 0x1, 0x1);
        gbc.writeMem(0xc2f6, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e08, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc2f6));
        // A1 031D
        gbc.setState(0xdefd, 0x8fee, 0x9770, 0x54be, 0x347, 0xa4e8, 0x1, 0x1);
        gbc.writeMem(0xdefd, { 0xa1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0xdefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdefd));
        // A1 031E
        gbc.setState(0xc594, 0x952f, 0x8b80, 0x96e5, 0x296a, 0xcfb, 0x0, 0x0);
        gbc.writeMem(0xc594, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x952f, gbc.sp());
        EXPECT(0xc595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc594));
        // A1 031F
        gbc.setState(0x48ef, 0x85c0, 0x5e0, 0xbacd, 0xf793, 0x66c9, 0x1, 0x1);
        gbc.writeMem(0x48ef, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0320
        gbc.setState(0xaf1c, 0xd165, 0xfb50, 0x6253, 0x2240, 0xd642, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xa1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd165, gbc.sp());
        EXPECT(0xaf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaf1c));
        // A1 0322
        gbc.setState(0x3556, 0x2573, 0x1770, 0xe06c, 0x1f58, 0x37a6, 0x0, 0x0);
        gbc.writeMem(0x3556, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2573, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0323
        gbc.setState(0x6fde, 0x18ac, 0xe110, 0xd9b1, 0xd76f, 0xbbd6, 0x0, 0x1);
        gbc.writeMem(0x6fde, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x18ac, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0324
        gbc.setState(0x87c7, 0x2092, 0xf8a0, 0xa5c, 0x5377, 0x500e, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0xa1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x87c7));
        // A1 0325
        gbc.setState(0xc366, 0x4ea5, 0x3cf0, 0x4c37, 0xc9a8, 0x9d9e, 0x0, 0x0);
        gbc.writeMem(0xc366, { 0xa1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4ea5, gbc.sp());
        EXPECT(0xc367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc366));
        // A1 0326
        gbc.setState(0x5e45, 0xec23, 0xc9d0, 0x13b6, 0xa9ef, 0x1760, 0x1, 0x1);
        gbc.writeMem(0x5e45, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec23, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0327
        gbc.setState(0x4a9f, 0xf707, 0x2f00, 0x97b5, 0xb89f, 0xd09e, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0xa1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0x4aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0328
        gbc.setState(0xdec3, 0x5426, 0xc980, 0x295e, 0x3a13, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0xdec3, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5426, gbc.sp());
        EXPECT(0xdec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdec3));
        // A1 0329
        gbc.setState(0xd342, 0x356d, 0xabf0, 0x2fb8, 0xdacd, 0x151c, 0x1, 0x1);
        gbc.writeMem(0xd342, { 0xa1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd342));
        // A1 032A
        gbc.setState(0xbbdf, 0xebe4, 0xcef0, 0x54b2, 0xee67, 0x17ce, 0x0, 0x0);
        gbc.writeMem(0xbbdf, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xebe4, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbbdf));
        // A1 032B
        gbc.setState(0xbec8, 0x7b72, 0x4fb0, 0x4a0f, 0x5c4a, 0x76ed, 0x0, 0x1);
        gbc.writeMem(0xbec8, { 0xa1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbec8));
        // A1 032C
        gbc.setState(0x8cdf, 0x9f91, 0x9600, 0xaf94, 0x5ce3, 0xa873, 0x0, 0x0);
        gbc.writeMem(0x8cdf, { 0xa1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f91, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8cdf));
        // A1 032D
        gbc.setState(0x5d1, 0xe2c6, 0xc6c0, 0x1b80, 0x1981, 0x7a3b, 0x0, 0x1);
        gbc.writeMem(0x5d1, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 032E
        gbc.setState(0x6cb9, 0x58aa, 0xccd0, 0x2dd3, 0x431, 0x5b1, 0x1, 0x0);
        gbc.writeMem(0x6cb9, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x58aa, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 032F
        gbc.setState(0xc7ab, 0xce29, 0xc1d0, 0x3765, 0x335, 0x2f8b, 0x1, 0x1);
        gbc.writeMem(0xc7ab, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xce29, gbc.sp());
        EXPECT(0xc7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc7ab));
        // A1 0330
        gbc.setState(0xa7ec, 0x30e2, 0x2b00, 0x2afc, 0xdcb4, 0x6acf, 0x1, 0x0);
        gbc.writeMem(0xa7ec, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x30e2, gbc.sp());
        EXPECT(0xa7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa7ec));
        // A1 0331
        gbc.setState(0x147b, 0xcde0, 0x8230, 0xbcc6, 0xfb34, 0x1fd7, 0x1, 0x1);
        gbc.writeMem(0x147b, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0332
        gbc.setState(0xd1fb, 0x60d6, 0x3310, 0x8bae, 0xeaba, 0xf19c, 0x0, 0x0);
        gbc.writeMem(0xd1fb, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x60d6, gbc.sp());
        EXPECT(0xd1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd1fb));
        // A1 0333
        gbc.setState(0x1e41, 0x97dd, 0xd4c0, 0x3f80, 0xc7d, 0x283f, 0x1, 0x0);
        gbc.writeMem(0x1e41, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0x1e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0334
        gbc.setState(0x18f8, 0xf634, 0x64f0, 0xbedf, 0x28f6, 0x79e2, 0x0, 0x1);
        gbc.writeMem(0x18f8, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf634, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0335
        gbc.setState(0xc70e, 0xd184, 0x6cf0, 0x8f4e, 0x498a, 0xbaec, 0x0, 0x0);
        gbc.writeMem(0xc70e, { 0xa1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd184, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc70e));
        // A1 0336
        gbc.setState(0xbd61, 0x2bad, 0x6900, 0x3e96, 0x7f00, 0xd48f, 0x0, 0x1);
        gbc.writeMem(0xbd61, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbd61));
        // A1 0337
        gbc.setState(0x3379, 0xb798, 0x71f0, 0x8bd6, 0xc42c, 0xa6d2, 0x0, 0x1);
        gbc.writeMem(0x3379, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0339
        gbc.setState(0xd9f, 0x685, 0xe90, 0xab2a, 0x461d, 0xecf3, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 033A
        gbc.setState(0xebd8, 0x7b63, 0x5e50, 0xbdbc, 0xd869, 0x2488, 0x0, 0x0);
        gbc.writeMem(0xebd8, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0xebd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xebd8));
        // A1 033B
        gbc.setState(0xe5c5, 0xc52c, 0xe00, 0xb0dc, 0xfa47, 0xadb2, 0x0, 0x0);
        gbc.writeMem(0xe5c5, { 0xa1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc52c, gbc.sp());
        EXPECT(0xe5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe5c5));
        // A1 033C
        gbc.setState(0x88e0, 0x7b65, 0x4a10, 0xb236, 0xe72e, 0xa494, 0x0, 0x0);
        gbc.writeMem(0x88e0, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0x88e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x88e0));
        // A1 033D
        gbc.setState(0x280e, 0xfda3, 0x1750, 0x5674, 0x1a14, 0xeed4, 0x1, 0x0);
        gbc.writeMem(0x280e, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfda3, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 033E
        gbc.setState(0x5eec, 0xda75, 0x2a00, 0xf2ba, 0x5e63, 0x8923, 0x0, 0x0);
        gbc.writeMem(0x5eec, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x5eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 033F
        gbc.setState(0xbe31, 0x1161, 0x6020, 0x3ef9, 0x774e, 0xd7b0, 0x1, 0x0);
        gbc.writeMem(0xbe31, { 0xa1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe31));
        // A1 0340
        gbc.setState(0x8f53, 0x6cdb, 0x3920, 0x9aa7, 0xfcea, 0x5462, 0x0, 0x0);
        gbc.writeMem(0x8f53, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8f53));
        // A1 0343
        gbc.setState(0xdad1, 0x836f, 0x1720, 0xa1cc, 0x797, 0x43cc, 0x0, 0x0);
        gbc.writeMem(0xdad1, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0xdad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdad1));
        // A1 0344
        gbc.setState(0x709d, 0xd3b7, 0x3d50, 0x3d7a, 0x6656, 0xf382, 0x1, 0x1);
        gbc.writeMem(0x709d, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3b7, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0345
        gbc.setState(0xbd62, 0xf05d, 0x8810, 0x7fcc, 0x7e4c, 0x1a61, 0x1, 0x1);
        gbc.writeMem(0xbd62, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0xbd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbd62));
        // A1 0346
        gbc.setState(0x8182, 0x117c, 0xbbb0, 0x8668, 0xe11a, 0x3e9c, 0x1, 0x0);
        gbc.writeMem(0x8182, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8182));
        // A1 0347
        gbc.setState(0x215f, 0x310b, 0x43b0, 0x9810, 0x527f, 0xe22e, 0x0, 0x0);
        gbc.writeMem(0x215f, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0348
        gbc.setState(0xba6a, 0x1bcb, 0x9300, 0x21b, 0xbbc1, 0xbfc, 0x1, 0x1);
        gbc.writeMem(0xba6a, { 0xa1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xba6a));
        // A1 0349
        gbc.setState(0x2add, 0x6eb, 0xf4f0, 0x2a23, 0xde7c, 0x5b73, 0x1, 0x1);
        gbc.writeMem(0x2add, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6eb, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 034A
        gbc.setState(0xb951, 0xc03a, 0xd0e0, 0x3545, 0x9792, 0xc32d, 0x0, 0x0);
        gbc.writeMem(0xb951, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc03a, gbc.sp());
        EXPECT(0xb952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb951));
        // A1 034B
        gbc.setState(0x5f85, 0xe8e7, 0xe6b0, 0xb3ae, 0xd3ee, 0xd633, 0x1, 0x0);
        gbc.writeMem(0x5f85, { 0xa1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe8e7, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 034C
        gbc.setState(0x1210, 0x6973, 0x9280, 0x1271, 0x76a6, 0xdc5e, 0x1, 0x0);
        gbc.writeMem(0x1210, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6973, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 034D
        gbc.setState(0x30fd, 0xf74e, 0xa960, 0x8cbd, 0xc42a, 0x35af, 0x1, 0x1);
        gbc.writeMem(0x30fd, { 0xa1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 034E
        gbc.setState(0xd1ce, 0xb4c5, 0xd8a0, 0xdf77, 0x46e8, 0xde2a, 0x1, 0x1);
        gbc.writeMem(0xd1ce, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0xd1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd1ce));
        // A1 034F
        gbc.setState(0x8df, 0xf839, 0x5990, 0x3c17, 0xb7c1, 0x9433, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0xa1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0x8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0350
        gbc.setState(0x3541, 0x90bc, 0xf570, 0xbb16, 0xb9a9, 0x4e72, 0x1, 0x1);
        gbc.writeMem(0x3541, { 0xa1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x90bc, gbc.sp());
        EXPECT(0x3542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0351
        gbc.setState(0x7c77, 0x4b27, 0xadc0, 0x1fc1, 0x2925, 0xc623, 0x0, 0x0);
        gbc.writeMem(0x7c77, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4b27, gbc.sp());
        EXPECT(0x7c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0352
        gbc.setState(0x5b97, 0x5ba8, 0xa750, 0xcb35, 0x7732, 0xd1ac, 0x0, 0x0);
        gbc.writeMem(0x5b97, { 0xa1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0x5b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0353
        gbc.setState(0x6853, 0xf294, 0x1050, 0xf1fb, 0x29e2, 0xf40f, 0x1, 0x0);
        gbc.writeMem(0x6853, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf294, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0354
        gbc.setState(0xf0, 0xfa28, 0x710, 0x60a9, 0x77b0, 0x1fd7, 0x1, 0x0);
        gbc.writeMem(0xf0, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0355
        gbc.setState(0x76a5, 0x814, 0x72b0, 0x4023, 0xf878, 0x3d78, 0x1, 0x1);
        gbc.writeMem(0x76a5, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0x76a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0356
        gbc.setState(0xba5f, 0xdd5a, 0x21f0, 0x91a8, 0x60bd, 0xdfeb, 0x1, 0x1);
        gbc.writeMem(0xba5f, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0xba60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xba5f));
        // A1 0357
        gbc.setState(0xe1f3, 0x3203, 0x7690, 0x8dd7, 0xfafa, 0x1362, 0x0, 0x1);
        gbc.writeMem(0xe1f3, { 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0xe1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe1f3));
        // A1 0358
        gbc.setState(0xa2b6, 0xb98, 0x4d80, 0x38bb, 0x6977, 0xbefc, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0xa1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa2b6));
        // A1 0359
        gbc.setState(0x84e8, 0xdf10, 0xe160, 0xd6f6, 0xacd5, 0x23c9, 0x1, 0x0);
        gbc.writeMem(0x84e8, { 0xa1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x84e8));
        // A1 035A
        gbc.setState(0xb163, 0x8898, 0x6970, 0x3d44, 0xcaec, 0x2af3, 0x1, 0x1);
        gbc.writeMem(0xb163, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8898, gbc.sp());
        EXPECT(0xb164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb163));
        // A1 035B
        gbc.setState(0xec01, 0x3f14, 0xda10, 0xa9b4, 0xa43d, 0x87b1, 0x0, 0x1);
        gbc.writeMem(0xec01, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3f14, gbc.sp());
        EXPECT(0xec02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xec01));
        // A1 035C
        gbc.setState(0xcab6, 0x17d, 0x7c20, 0x54a0, 0x38e0, 0x6823, 0x0, 0x0);
        gbc.writeMem(0xcab6, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17d, gbc.sp());
        EXPECT(0xcab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcab6));
        // A1 035D
        gbc.setState(0x1962, 0xd5e2, 0x1cb0, 0x6b7e, 0x6d11, 0x59d0, 0x1, 0x0);
        gbc.writeMem(0x1962, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd5e2, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 035E
        gbc.setState(0x6dca, 0x22e4, 0x5240, 0xf86, 0x647d, 0x2355, 0x0, 0x0);
        gbc.writeMem(0x6dca, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 035F
        gbc.setState(0xda72, 0x7553, 0xb970, 0xcb93, 0xe854, 0xb92c, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xa1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xda73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda72));
        // A1 0360
        gbc.setState(0x3376, 0x7ea6, 0x7d20, 0x27c0, 0xef28, 0x7627, 0x1, 0x0);
        gbc.writeMem(0x3376, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7ea6, gbc.sp());
        EXPECT(0x3377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0361
        gbc.setState(0x29e2, 0x6495, 0x1970, 0x83fe, 0xe446, 0xaf4b, 0x1, 0x0);
        gbc.writeMem(0x29e2, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6495, gbc.sp());
        EXPECT(0x29e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0362
        gbc.setState(0x4201, 0xefcf, 0x44d0, 0xbf98, 0x17fc, 0x4eef, 0x1, 0x0);
        gbc.writeMem(0x4201, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0363
        gbc.setState(0xe713, 0x4508, 0x8620, 0x9aa1, 0xc6ee, 0x249b, 0x0, 0x1);
        gbc.writeMem(0xe713, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4508, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe713));
        // A1 0364
        gbc.setState(0xe023, 0xd2c1, 0xa830, 0x6a69, 0x273d, 0x611a, 0x1, 0x0);
        gbc.writeMem(0xe023, { 0xa1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd2c1, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe023));
        // A1 0365
        gbc.setState(0xda72, 0x482e, 0x4c70, 0x8f74, 0xaa3, 0x7229, 0x1, 0x1);
        gbc.writeMem(0xda72, { 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0xda73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda72));
        // A1 0366
        gbc.setState(0xa8f7, 0xcbbd, 0x9c80, 0xe170, 0xcef8, 0xc249, 0x1, 0x0);
        gbc.writeMem(0xa8f7, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcbbd, gbc.sp());
        EXPECT(0xa8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa8f7));
        // A1 0367
        gbc.setState(0x6d28, 0x8995, 0xe560, 0xcb9b, 0x1a00, 0xac32, 0x0, 0x1);
        gbc.writeMem(0x6d28, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8995, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0368
        gbc.setState(0x1f44, 0x7ff6, 0x38d0, 0x5f7c, 0x7686, 0xc5b9, 0x1, 0x1);
        gbc.writeMem(0x1f44, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7ff6, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0369
        gbc.setState(0x2cba, 0x778b, 0x2f10, 0x6f55, 0xeef6, 0x8558, 0x1, 0x1);
        gbc.writeMem(0x2cba, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x778b, gbc.sp());
        EXPECT(0x2cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 036A
        gbc.setState(0x1b5a, 0xca1a, 0x1500, 0x1cad, 0xd115, 0x22ff, 0x0, 0x0);
        gbc.writeMem(0x1b5a, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xca1a, gbc.sp());
        EXPECT(0x1b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 036B
        gbc.setState(0x350e, 0x3854, 0xe340, 0x13aa, 0xdda5, 0x1612, 0x0, 0x1);
        gbc.writeMem(0x350e, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0x350f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 036C
        gbc.setState(0xc5f9, 0x9050, 0x8440, 0xee66, 0x7e1c, 0xa624, 0x1, 0x1);
        gbc.writeMem(0xc5f9, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0xc5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc5f9));
        // A1 036D
        gbc.setState(0x3bc0, 0x48b, 0xa250, 0x771a, 0xf5a9, 0x6f0e, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x48b, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 036E
        gbc.setState(0xaf54, 0xb34e, 0xb00, 0x716a, 0x1fd, 0x5530, 0x1, 0x0);
        gbc.writeMem(0xaf54, { 0xa1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaf54));
        // A1 036F
        gbc.setState(0x542f, 0x9944, 0x7dc0, 0xd924, 0x425a, 0x9c0a, 0x1, 0x1);
        gbc.writeMem(0x542f, { 0xa1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9944, gbc.sp());
        EXPECT(0x5430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0370
        gbc.setState(0x38f5, 0x12de, 0x53e0, 0x8d3c, 0xb144, 0x763b, 0x0, 0x1);
        gbc.writeMem(0x38f5, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0371
        gbc.setState(0x3629, 0x8160, 0x5580, 0x6549, 0x3ab0, 0x2def, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0372
        gbc.setState(0x6498, 0x6860, 0x5b90, 0xfaed, 0xfde7, 0x1e2f, 0x1, 0x1);
        gbc.writeMem(0x6498, { 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6860, gbc.sp());
        EXPECT(0x6499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0373
        gbc.setState(0xda86, 0x2ac2, 0x9310, 0x828c, 0xf39f, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0xda86, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xda86));
        // A1 0374
        gbc.setState(0xc51e, 0xe3ec, 0x62b0, 0x629e, 0x4541, 0x98d1, 0x1, 0x0);
        gbc.writeMem(0xc51e, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe3ec, gbc.sp());
        EXPECT(0xc51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc51e));
        // A1 0375
        gbc.setState(0x7aa0, 0x477c, 0x87b0, 0x6931, 0xfda2, 0xef78, 0x1, 0x1);
        gbc.writeMem(0x7aa0, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x7aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0376
        gbc.setState(0x73da, 0xc60a, 0x2600, 0x8b0f, 0x9fee, 0x59d7, 0x1, 0x0);
        gbc.writeMem(0x73da, { 0xa1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0x73db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0377
        gbc.setState(0x7b06, 0x7d2f, 0x3ad0, 0xc49a, 0x43bd, 0x1141, 0x1, 0x1);
        gbc.writeMem(0x7b06, { 0xa1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d2f, gbc.sp());
        EXPECT(0x7b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0378
        gbc.setState(0x3c3b, 0x49b4, 0xa40, 0x25e3, 0x274c, 0x634, 0x0, 0x0);
        gbc.writeMem(0x3c3b, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x49b4, gbc.sp());
        EXPECT(0x3c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0379
        gbc.setState(0x8f96, 0x4b70, 0x5220, 0xc1f2, 0x228a, 0x67dd, 0x1, 0x0);
        gbc.writeMem(0x8f96, { 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b70, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8f96));
        // A1 037A
        gbc.setState(0x79f2, 0xf8d1, 0xf220, 0x8bcd, 0x9ef2, 0x2071, 0x1, 0x0);
        gbc.writeMem(0x79f2, { 0xa1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 037B
        gbc.setState(0xad2a, 0x4a79, 0x19e0, 0x7c83, 0x4e96, 0x53f0, 0x0, 0x0);
        gbc.writeMem(0xad2a, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4a79, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xad2a));
        // A1 037C
        gbc.setState(0xe2cd, 0x3caf, 0xfcb0, 0x1f50, 0xfbff, 0x86a8, 0x1, 0x0);
        gbc.writeMem(0xe2cd, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe2cd));
        // A1 037D
        gbc.setState(0x9556, 0xe032, 0x2d40, 0x3106, 0xff8d, 0x9678, 0x1, 0x0);
        gbc.writeMem(0x9556, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe032, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9556));
        // A1 037E
        gbc.setState(0x21ea, 0x5c8a, 0xae10, 0x4b26, 0x992, 0xd84d, 0x0, 0x1);
        gbc.writeMem(0x21ea, { 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5c8a, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 037F
        gbc.setState(0x709b, 0x54ba, 0xb140, 0x969a, 0x4567, 0x1f23, 0x0, 0x1);
        gbc.writeMem(0x709b, { 0xa1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x54ba, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0380
        gbc.setState(0x5c0f, 0x9b82, 0x5ad0, 0x8eec, 0xd63d, 0x41ca, 0x0, 0x1);
        gbc.writeMem(0x5c0f, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9b82, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0381
        gbc.setState(0x1dce, 0x3c57, 0xe110, 0xe201, 0xbdf4, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x1dce, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0382
        gbc.setState(0x1806, 0x335a, 0x4160, 0xaccc, 0xa9a4, 0x4442, 0x0, 0x0);
        gbc.writeMem(0x1806, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x335a, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0383
        gbc.setState(0x6c10, 0xa77, 0x4210, 0x2289, 0xd879, 0xafff, 0x0, 0x0);
        gbc.writeMem(0x6c10, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa77, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0384
        gbc.setState(0xe14b, 0x7afc, 0x4410, 0x4f2b, 0xb923, 0x229b, 0x1, 0x1);
        gbc.writeMem(0xe14b, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe14b));
        // A1 0385
        gbc.setState(0x7b19, 0x5c41, 0x6080, 0x85c5, 0x4f0, 0x4728, 0x0, 0x1);
        gbc.writeMem(0x7b19, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5c41, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0386
        gbc.setState(0x7736, 0x6de8, 0x9140, 0xd300, 0x19f2, 0x3561, 0x1, 0x0);
        gbc.writeMem(0x7736, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0387
        gbc.setState(0xb667, 0xbe8e, 0xe760, 0x9f9b, 0x8285, 0x775d, 0x0, 0x0);
        gbc.writeMem(0xb667, { 0xa1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbe8e, gbc.sp());
        EXPECT(0xb668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb667));
        // A1 0388
        gbc.setState(0x69b7, 0x76da, 0xb720, 0x7ce4, 0x43c, 0x48e3, 0x1, 0x0);
        gbc.writeMem(0x69b7, { 0xa1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0x69b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0389
        gbc.setState(0x4909, 0x309f, 0xa3d0, 0xdf28, 0x1e54, 0x8e04, 0x0, 0x1);
        gbc.writeMem(0x4909, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x309f, gbc.sp());
        EXPECT(0x490a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 038A
        gbc.setState(0xcddb, 0x5a90, 0x2920, 0x3e1, 0x4b0a, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0xcddb, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5a90, gbc.sp());
        EXPECT(0xcddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcddb));
        // A1 038C
        gbc.setState(0x69eb, 0x2c84, 0xe180, 0x2d95, 0x91d9, 0x364c, 0x0, 0x0);
        gbc.writeMem(0x69eb, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2c84, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 038D
        gbc.setState(0x9b47, 0xcaa5, 0xc70, 0x797, 0x8b27, 0x1733, 0x1, 0x1);
        gbc.writeMem(0x9b47, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9b47));
        // A1 038E
        gbc.setState(0x1b13, 0x1ce4, 0xf3e0, 0xffba, 0x4441, 0xdcd2, 0x1, 0x1);
        gbc.writeMem(0x1b13, { 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0x1b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 038F
        gbc.setState(0xa15f, 0x51f1, 0xbcf0, 0xb28d, 0x85d7, 0xa7ff, 0x1, 0x0);
        gbc.writeMem(0xa15f, { 0xa1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51f1, gbc.sp());
        EXPECT(0xa160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa15f));
        // A1 0390
        gbc.setState(0x8bf9, 0x4478, 0xf9b0, 0x23fa, 0xf99b, 0x13da, 0x1, 0x0);
        gbc.writeMem(0x8bf9, { 0xa1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4478, gbc.sp());
        EXPECT(0x8bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8bf9));
        // A1 0391
        gbc.setState(0x464e, 0x6d79, 0x82d0, 0xb2d6, 0xdd50, 0x36a0, 0x1, 0x1);
        gbc.writeMem(0x464e, { 0xa1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6d79, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0392
        gbc.setState(0xd338, 0x146c, 0x83c0, 0xeb03, 0x67e3, 0xfe23, 0x0, 0x0);
        gbc.writeMem(0xd338, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x146c, gbc.sp());
        EXPECT(0xd339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd338));
        // A1 0393
        gbc.setState(0x9e35, 0x4184, 0x81d0, 0x1554, 0xd627, 0xd2bd, 0x0, 0x0);
        gbc.writeMem(0x9e35, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4184, gbc.sp());
        EXPECT(0x9e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9e35));
        // A1 0394
        gbc.setState(0x867a, 0xdd7a, 0xbb90, 0xa769, 0x33a8, 0x1c20, 0x0, 0x0);
        gbc.writeMem(0x867a, { 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdd7a, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x867a));
        // A1 0395
        gbc.setState(0xe15c, 0x4eaf, 0xecf0, 0x4606, 0x1efc, 0x7859, 0x0, 0x1);
        gbc.writeMem(0xe15c, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0xe15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe15c));
        // A1 0397
        gbc.setState(0x10a4, 0x53ad, 0xbed0, 0xf745, 0xcc13, 0x34d4, 0x0, 0x0);
        gbc.writeMem(0x10a4, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 0398
        gbc.setState(0xeed6, 0xa910, 0x3540, 0x746b, 0x2f6, 0x4b2d, 0x0, 0x0);
        gbc.writeMem(0xeed6, { 0xa1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa910, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xeed6));
        // A1 0399
        gbc.setState(0x64ac, 0xe266, 0xa090, 0x54c6, 0x1ff0, 0x8e3, 0x1, 0x0);
        gbc.writeMem(0x64ac, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 039A
        gbc.setState(0x66bb, 0xea58, 0x1f30, 0xfd3f, 0x5aa9, 0xd060, 0x1, 0x0);
        gbc.writeMem(0x66bb, { 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0x66bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 039B
        gbc.setState(0x80dd, 0xd27e, 0xe7a0, 0x3536, 0x8f40, 0xa10e, 0x1, 0x0);
        gbc.writeMem(0x80dd, { 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd27e, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x80dd));
        // A1 039D
        gbc.setState(0x6c78, 0xd407, 0xfb50, 0x8579, 0x49d7, 0x6568, 0x0, 0x0);
        gbc.writeMem(0x6c78, { 0xa1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd407, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 039E
        gbc.setState(0x1e23, 0x3385, 0xa2d0, 0x426c, 0x722d, 0x4138, 0x1, 0x1);
        gbc.writeMem(0x1e23, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3385, gbc.sp());
        EXPECT(0x1e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 039F
        gbc.setState(0x4caa, 0x84c8, 0xecc0, 0x6bed, 0xdfa5, 0xa3bd, 0x0, 0x1);
        gbc.writeMem(0x4caa, { 0xa1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0x4cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03A0
        gbc.setState(0x9194, 0xc6c9, 0xb710, 0xa4eb, 0x7a17, 0x2c9f, 0x1, 0x0);
        gbc.writeMem(0x9194, { 0xa1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9194));
        // A1 03A1
        gbc.setState(0xc2bc, 0x4418, 0x7200, 0xd60d, 0xaf13, 0x550b, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4418, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc2bc));
        // A1 03A2
        gbc.setState(0xd211, 0xa437, 0xb5a0, 0x9c7, 0x2237, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0xd211, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd211));
        // A1 03A3
        gbc.setState(0x1871, 0x2db1, 0xfc70, 0xb652, 0x5c97, 0xe491, 0x1, 0x0);
        gbc.writeMem(0x1871, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2db1, gbc.sp());
        EXPECT(0x1872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03A4
        gbc.setState(0xd5cf, 0xabb, 0xf880, 0x9b8a, 0xe37a, 0xc215, 0x1, 0x0);
        gbc.writeMem(0xd5cf, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xabb, gbc.sp());
        EXPECT(0xd5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd5cf));
        // A1 03A5
        gbc.setState(0xd47e, 0x3348, 0x9760, 0xc08c, 0x28d4, 0x2b77, 0x1, 0x0);
        gbc.writeMem(0xd47e, { 0xa1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0xd47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd47e));
        // A1 03A6
        gbc.setState(0xca31, 0x7fa7, 0xff00, 0xfbd5, 0x55b5, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0xca31, { 0xa1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7fa7, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xca31));
        // A1 03A7
        gbc.setState(0x74d8, 0x25b6, 0x6740, 0xb985, 0xf74, 0xadb8, 0x0, 0x0);
        gbc.writeMem(0x74d8, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x25b6, gbc.sp());
        EXPECT(0x74d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03A9
        gbc.setState(0xd37d, 0x2ca6, 0x3570, 0x4a41, 0xb629, 0x5b1d, 0x1, 0x0);
        gbc.writeMem(0xd37d, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd37d));
        // A1 03AA
        gbc.setState(0x857b, 0x166c, 0x20f0, 0xdd6a, 0x9eb7, 0x9bdf, 0x0, 0x0);
        gbc.writeMem(0x857b, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x166c, gbc.sp());
        EXPECT(0x857c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x857b));
        // A1 03AB
        gbc.setState(0xa0fc, 0xd74b, 0x520, 0xc544, 0xb8af, 0x3471, 0x0, 0x0);
        gbc.writeMem(0xa0fc, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa0fc));
        // A1 03AC
        gbc.setState(0x5409, 0x2bf, 0x3ea0, 0x375d, 0xdc42, 0xbfc6, 0x1, 0x0);
        gbc.writeMem(0x5409, { 0xa1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0x540a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03AD
        gbc.setState(0x66e6, 0x2138, 0x2eb0, 0x152d, 0xf2c5, 0x2740, 0x0, 0x1);
        gbc.writeMem(0x66e6, { 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x66e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03AF
        gbc.setState(0x922b, 0xee3d, 0x6080, 0xef50, 0x68a7, 0xcc09, 0x1, 0x0);
        gbc.writeMem(0x922b, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xee3d, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x922b));
        // A1 03B0
        gbc.setState(0xb2d6, 0xf56a, 0x3ee0, 0x6a67, 0xe28, 0x6ebc, 0x0, 0x1);
        gbc.writeMem(0xb2d6, { 0xa1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb2d6));
        // A1 03B1
        gbc.setState(0x2b1d, 0x83f7, 0xcac0, 0xa8e3, 0xc35f, 0xf269, 0x0, 0x1);
        gbc.writeMem(0x2b1d, { 0xa1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x83f7, gbc.sp());
        EXPECT(0x2b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B2
        gbc.setState(0x51b9, 0xe645, 0xe9d0, 0x4d30, 0x9162, 0xbee2, 0x1, 0x0);
        gbc.writeMem(0x51b9, { 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x51ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B3
        gbc.setState(0x498b, 0x83b6, 0x4690, 0x104e, 0x971a, 0x9358, 0x1, 0x0);
        gbc.writeMem(0x498b, { 0xa1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x83b6, gbc.sp());
        EXPECT(0x498c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B4
        gbc.setState(0x572a, 0xda4f, 0x7fd0, 0x6738, 0xd93, 0x454f, 0x0, 0x0);
        gbc.writeMem(0x572a, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x572b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B5
        gbc.setState(0x10cb, 0x7c42, 0x13e0, 0xc668, 0x905c, 0x3c30, 0x0, 0x1);
        gbc.writeMem(0x10cb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7c42, gbc.sp());
        EXPECT(0x10cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B6
        gbc.setState(0x2edd, 0xbfd9, 0x75f0, 0x9f4d, 0xa62d, 0x9261, 0x0, 0x0);
        gbc.writeMem(0x2edd, { 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbfd9, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03B7
        gbc.setState(0xe91a, 0x6501, 0x620, 0xd22d, 0xc10c, 0xa8dd, 0x0, 0x1);
        gbc.writeMem(0xe91a, { 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6501, gbc.sp());
        EXPECT(0xe91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe91a));
        // A1 03B8
        gbc.setState(0x9ba4, 0xcb96, 0x72e0, 0x6c4a, 0xcfb7, 0xbab6, 0x1, 0x0);
        gbc.writeMem(0x9ba4, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9ba4));
        // A1 03B9
        gbc.setState(0x9050, 0x5b9c, 0xf770, 0xab27, 0x6a7d, 0x79de, 0x1, 0x0);
        gbc.writeMem(0x9050, { 0xa1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b9c, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9050));
        // A1 03BA
        gbc.setState(0x7fc, 0x423f, 0x4100, 0x432, 0xea63, 0x59bd, 0x0, 0x1);
        gbc.writeMem(0x7fc, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0x7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03BB
        gbc.setState(0x95b3, 0x8bd7, 0xb280, 0x27a2, 0xd433, 0xe121, 0x0, 0x0);
        gbc.writeMem(0x95b3, { 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8bd7, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x95b3));
        // A1 03BC
        gbc.setState(0x6fe6, 0x9671, 0xf730, 0xa8da, 0xd859, 0x27f7, 0x1, 0x1);
        gbc.writeMem(0x6fe6, { 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0x6fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03BD
        gbc.setState(0x6f9, 0x4e81, 0x6230, 0x711c, 0x5845, 0x5deb, 0x1, 0x1);
        gbc.writeMem(0x6f9, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03BE
        gbc.setState(0xc1cd, 0x5ae8, 0x4450, 0xd018, 0xfe5f, 0x5300, 0x1, 0x0);
        gbc.writeMem(0xc1cd, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ae8, gbc.sp());
        EXPECT(0xc1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc1cd));
        // A1 03BF
        gbc.setState(0xbe06, 0x580f, 0x5ed0, 0xe5b7, 0x3863, 0x93d2, 0x0, 0x0);
        gbc.writeMem(0xbe06, { 0xa1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0xbe07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbe06));
        // A1 03C0
        gbc.setState(0xd0d0, 0x42e8, 0xd700, 0xe62, 0x649a, 0xe33b, 0x0, 0x1);
        gbc.writeMem(0xd0d0, { 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x42e8, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd0d0));
        // A1 03C1
        gbc.setState(0x1b16, 0x7bbd, 0x2ec0, 0x4bb, 0x2328, 0xda08, 0x1, 0x0);
        gbc.writeMem(0x1b16, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7bbd, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03C2
        gbc.setState(0x9c29, 0xdd16, 0x5930, 0xd169, 0xe1a, 0x35f9, 0x1, 0x1);
        gbc.writeMem(0x9c29, { 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdd16, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9c29));
        // A1 03C3
        gbc.setState(0x176c, 0x47c8, 0xabe0, 0xa85c, 0x36b5, 0xec01, 0x1, 0x1);
        gbc.writeMem(0x176c, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x47c8, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03C4
        gbc.setState(0x3beb, 0x76da, 0xf760, 0x7a41, 0x3ae6, 0x4809, 0x0, 0x1);
        gbc.writeMem(0x3beb, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03C5
        gbc.setState(0x51a0, 0x559, 0x8860, 0x1500, 0x9b99, 0xbbeb, 0x1, 0x0);
        gbc.writeMem(0x51a0, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x559, gbc.sp());
        EXPECT(0x51a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03C7
        gbc.setState(0xd543, 0xaabc, 0xff10, 0x1132, 0x5295, 0x31e4, 0x0, 0x0);
        gbc.writeMem(0xd543, { 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd543));
        // A1 03C8
        gbc.setState(0x6133, 0xd835, 0x2230, 0x7f5b, 0xd673, 0xa9a9, 0x0, 0x0);
        gbc.writeMem(0x6133, { 0xa1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x6134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03C9
        gbc.setState(0x90f2, 0xa2a4, 0x7d70, 0x1725, 0xd662, 0xca13, 0x0, 0x0);
        gbc.writeMem(0x90f2, { 0xa1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa2a4, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x90f2));
        // A1 03CA
        gbc.setState(0x3e2f, 0xcec7, 0x3150, 0x6082, 0xbb0, 0x154c, 0x0, 0x0);
        gbc.writeMem(0x3e2f, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcec7, gbc.sp());
        EXPECT(0x3e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03CB
        gbc.setState(0x4807, 0x6083, 0xe080, 0xe696, 0xd68f, 0x6fb2, 0x0, 0x0);
        gbc.writeMem(0x4807, { 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03CC
        gbc.setState(0xee13, 0x9252, 0x4e40, 0xd869, 0xc857, 0xfd37, 0x1, 0x0);
        gbc.writeMem(0xee13, { 0xa1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0xee14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xee13));
        // A1 03CD
        gbc.setState(0x5c97, 0xf193, 0x9380, 0xfd38, 0xefc0, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x5c97, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0x5c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03CF
        gbc.setState(0x9515, 0x7df6, 0x7b0, 0xc1e5, 0x5d73, 0xc332, 0x0, 0x0);
        gbc.writeMem(0x9515, { 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7df6, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9515));
        // A1 03D0
        gbc.setState(0x8471, 0x4f92, 0x43b0, 0x8783, 0x7628, 0xc9fc, 0x0, 0x0);
        gbc.writeMem(0x8471, { 0xa1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4f92, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8471));
        // A1 03D2
        gbc.setState(0x949, 0x977a, 0x4b40, 0x270c, 0xa52c, 0x9388, 0x0, 0x1);
        gbc.writeMem(0x949, { 0xa1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x977a, gbc.sp());
        EXPECT(0x94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03D4
        gbc.setState(0xd641, 0xb88c, 0x3ee0, 0x19ac, 0x5e5a, 0x9255, 0x1, 0x0);
        gbc.writeMem(0xd641, { 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb88c, gbc.sp());
        EXPECT(0xd642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd641));
        // A1 03D6
        gbc.setState(0x85f9, 0xd790, 0xa750, 0x51e5, 0x8183, 0xbdbd, 0x1, 0x0);
        gbc.writeMem(0x85f9, { 0xa1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd790, gbc.sp());
        EXPECT(0x85fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x85f9));
        // A1 03D7
        gbc.setState(0xbb69, 0xf13d, 0x5420, 0x2710, 0x692d, 0xabfb, 0x1, 0x1);
        gbc.writeMem(0xbb69, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbb69));
        // A1 03D8
        gbc.setState(0x20ad, 0x898b, 0x2ec0, 0x8be2, 0x3028, 0x9b80, 0x0, 0x0);
        gbc.writeMem(0x20ad, { 0xa1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03D9
        gbc.setState(0xcb6c, 0xc9e8, 0xbfd0, 0x67ba, 0x4bef, 0x564a, 0x0, 0x1);
        gbc.writeMem(0xcb6c, { 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc9e8, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcb6c));
        // A1 03DA
        gbc.setState(0xc473, 0xae2, 0x2d50, 0x9c3c, 0x6d97, 0x53b9, 0x1, 0x0);
        gbc.writeMem(0xc473, { 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae2, gbc.sp());
        EXPECT(0xc474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc473));
        // A1 03DB
        gbc.setState(0xbda5, 0x30fb, 0xbfc0, 0xd478, 0xb62f, 0x5be8, 0x1, 0x1);
        gbc.writeMem(0xbda5, { 0xa1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x30fb, gbc.sp());
        EXPECT(0xbda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbda5));
        // A1 03DC
        gbc.setState(0x62bf, 0x862d, 0x7c00, 0xd43, 0x3010, 0x77b6, 0x1, 0x1);
        gbc.writeMem(0x62bf, { 0xa1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x862d, gbc.sp());
        EXPECT(0x62c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03DD
        gbc.setState(0x16f8, 0x3e67, 0xa560, 0x81c9, 0xe3dc, 0x2cc7, 0x1, 0x1);
        gbc.writeMem(0x16f8, { 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e67, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03DE
        gbc.setState(0x617e, 0xff63, 0xd8b0, 0xaf51, 0xae4e, 0x7636, 0x0, 0x0);
        gbc.writeMem(0x617e, { 0xa1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xff63, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03DF
        gbc.setState(0xa16c, 0x72a6, 0x1120, 0xcbdc, 0x58ad, 0x2250, 0x1, 0x1);
        gbc.writeMem(0xa16c, { 0xa1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0xa16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa16c));
        // A1 03E0
        gbc.setState(0x4edf, 0xaa33, 0x1800, 0xf058, 0x99e7, 0xed7e, 0x0, 0x0);
        gbc.writeMem(0x4edf, { 0xa1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0x4ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03E2
        gbc.setState(0x4ac2, 0xcac3, 0x6bc0, 0xb90f, 0x71e, 0x3312, 0x0, 0x1);
        gbc.writeMem(0x4ac2, { 0xa1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x4ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03E3
        gbc.setState(0xb033, 0x267e, 0x9a40, 0xfed2, 0xd94d, 0x1f9e, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xa1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x267e, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb033));
        // A1 03E4
        gbc.setState(0xb49, 0x329f, 0xed70, 0x20e7, 0xf2a9, 0x155f, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xa1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0xb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03E5
        gbc.setState(0xa542, 0x58ee, 0x50f0, 0x1ca9, 0xd3e0, 0x90dd, 0x1, 0x1);
        gbc.writeMem(0xa542, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0xa543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa542));
        // A1 03E6
        gbc.setState(0x28dc, 0xc8d6, 0x140, 0xa9fb, 0xc2ce, 0xf49f, 0x1, 0x1);
        gbc.writeMem(0x28dc, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A1 03E7
        gbc.setState(0x5ccf, 0x934f, 0x6970, 0xec03, 0x3e53, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0x5ccf, { 0xa1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x934f, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
