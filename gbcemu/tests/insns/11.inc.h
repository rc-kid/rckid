    TEST(gbcemu, opcode_11) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 11 0000
        gbc.setState(0xc55, 0xe875, 0x4cb0, 0x7a54, 0xebd9, 0xb7aa, 0x1, 0x1);
        gbc.writeMem(0xc55, { 0x11, 0x43, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe875);
        EXPECT(gbc.pc(), 0xc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0001
        gbc.setState(0xe3b6, 0x4101, 0x4620, 0x6bcf, 0xd85f, 0x3a1f, 0x1, 0x0);
        gbc.writeMem(0xe3b6, { 0x11, 0x78, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4101);
        EXPECT(gbc.pc(), 0xe3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b6), 0x11);
        EXPECT(gbc.readMem(0xe3b7), 0x78);
        EXPECT(gbc.readMem(0xe3b8), 0x90);
        // 11 0002
        gbc.setState(0x8d6b, 0xed1, 0xaaf0, 0x149c, 0x1167, 0xd3d7, 0x0, 0x1);
        gbc.writeMem(0x8d6b, { 0x11, 0xd7, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xed1);
        EXPECT(gbc.pc(), 0x8d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6b), 0x11);
        EXPECT(gbc.readMem(0x8d6c), 0xd7);
        EXPECT(gbc.readMem(0x8d6d), 0x3e);
        // 11 0003
        gbc.setState(0xb95c, 0x7867, 0xd310, 0x4f0c, 0x7942, 0xa02f, 0x1, 0x1);
        gbc.writeMem(0xb95c, { 0x11, 0x6f, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7867);
        EXPECT(gbc.pc(), 0xb95f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95c), 0x11);
        EXPECT(gbc.readMem(0xb95d), 0x6f);
        EXPECT(gbc.readMem(0xb95e), 0xc6);
        // 11 0004
        gbc.setState(0x6810, 0x36ed, 0x3360, 0xbb28, 0x5601, 0x60d5, 0x0, 0x1);
        gbc.writeMem(0x6810, { 0x11, 0x0, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x36ed);
        EXPECT(gbc.pc(), 0x6813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0005
        gbc.setState(0xa146, 0x9fc4, 0xb080, 0x58d, 0x7f04, 0x8673, 0x0, 0x1);
        gbc.writeMem(0xa146, { 0x11, 0xf6, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9fc4);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa146), 0x11);
        EXPECT(gbc.readMem(0xa147), 0xf6);
        EXPECT(gbc.readMem(0xa148), 0xec);
        // 11 0006
        gbc.setState(0x1a40, 0xa6ed, 0xbe40, 0x17b1, 0x5e25, 0x9394, 0x1, 0x0);
        gbc.writeMem(0x1a40, { 0x11, 0x23, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa6ed);
        EXPECT(gbc.pc(), 0x1a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0007
        gbc.setState(0x831b, 0x3fbc, 0xba70, 0x757b, 0x7c01, 0x30ea, 0x1, 0x0);
        gbc.writeMem(0x831b, { 0x11, 0xe0, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3fbc);
        EXPECT(gbc.pc(), 0x831e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831b), 0x11);
        EXPECT(gbc.readMem(0x831c), 0xe0);
        EXPECT(gbc.readMem(0x831d), 0x21);
        // 11 0008
        gbc.setState(0x44e4, 0xbb0e, 0x54a0, 0xd985, 0x30ca, 0x79ef, 0x1, 0x1);
        gbc.writeMem(0x44e4, { 0x11, 0x35, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbb0e);
        EXPECT(gbc.pc(), 0x44e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0009
        gbc.setState(0xb813, 0x4a8f, 0x7a80, 0x7f2b, 0xafd2, 0x7aa9, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0x11, 0xcb, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4a8f);
        EXPECT(gbc.pc(), 0xb816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb813), 0x11);
        EXPECT(gbc.readMem(0xb814), 0xcb);
        EXPECT(gbc.readMem(0xb815), 0x54);
        // 11 000A
        gbc.setState(0x6436, 0x919d, 0x6a70, 0x870d, 0xbd99, 0xcd05, 0x0, 0x1);
        gbc.writeMem(0x6436, { 0x11, 0x96, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x919d);
        EXPECT(gbc.pc(), 0x6439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 000B
        gbc.setState(0x24c6, 0x5fa, 0xd1d0, 0x74be, 0xa4d2, 0x8bda, 0x0, 0x0);
        gbc.writeMem(0x24c6, { 0x11, 0x50, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0x24c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 000C
        gbc.setState(0x35a9, 0xcc0a, 0x880, 0xec0f, 0x546f, 0xc0af, 0x1, 0x0);
        gbc.writeMem(0x35a9, { 0x11, 0x65, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcc0a);
        EXPECT(gbc.pc(), 0x35ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 000E
        gbc.setState(0xb902, 0x2e5a, 0x6c80, 0x13be, 0x2d6c, 0x32b8, 0x1, 0x1);
        gbc.writeMem(0xb902, { 0x11, 0x15, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2e5a);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb902), 0x11);
        EXPECT(gbc.readMem(0xb903), 0x15);
        EXPECT(gbc.readMem(0xb904), 0xf);
        // 11 000F
        gbc.setState(0x44e6, 0x8e37, 0xa730, 0x7bc3, 0xe6d3, 0x3ed8, 0x1, 0x1);
        gbc.writeMem(0x44e6, { 0x11, 0x4a, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8e37);
        EXPECT(gbc.pc(), 0x44e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0010
        gbc.setState(0x3f96, 0x34f3, 0x58a0, 0x7af1, 0xb7c9, 0x4919, 0x0, 0x0);
        gbc.writeMem(0x3f96, { 0x11, 0x73, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x34f3);
        EXPECT(gbc.pc(), 0x3f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0011
        gbc.setState(0x24ac, 0xa44c, 0x300, 0x36d1, 0x6731, 0xfdb9, 0x0, 0x0);
        gbc.writeMem(0x24ac, { 0x11, 0xd5, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa44c);
        EXPECT(gbc.pc(), 0x24af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0012
        gbc.setState(0x4f7a, 0x49c6, 0xa470, 0xc400, 0xb9eb, 0xc2a9, 0x1, 0x0);
        gbc.writeMem(0x4f7a, { 0x11, 0xe7, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x49c6);
        EXPECT(gbc.pc(), 0x4f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0014
        gbc.setState(0x54ce, 0x195a, 0x5400, 0x931a, 0x6a2b, 0x65a9, 0x0, 0x1);
        gbc.writeMem(0x54ce, { 0x11, 0xb3, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x195a);
        EXPECT(gbc.pc(), 0x54d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0015
        gbc.setState(0x4f0, 0xce0e, 0x7b90, 0x2c3, 0x6a87, 0x7708, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0x11, 0x1a, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xce0e);
        EXPECT(gbc.pc(), 0x4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0016
        gbc.setState(0xe3bc, 0xfecb, 0x50a0, 0xd8cd, 0xe03, 0x5d2c, 0x0, 0x0);
        gbc.writeMem(0xe3bc, { 0x11, 0x33, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfecb);
        EXPECT(gbc.pc(), 0xe3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bc), 0x11);
        EXPECT(gbc.readMem(0xe3bd), 0x33);
        EXPECT(gbc.readMem(0xe3be), 0x1e);
        // 11 0017
        gbc.setState(0xa9ce, 0xbc46, 0xe1b0, 0x649c, 0x4ca, 0x69f5, 0x0, 0x0);
        gbc.writeMem(0xa9ce, { 0x11, 0xac, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbc46);
        EXPECT(gbc.pc(), 0xa9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ce), 0x11);
        EXPECT(gbc.readMem(0xa9cf), 0xac);
        EXPECT(gbc.readMem(0xa9d0), 0x45);
        // 11 0018
        gbc.setState(0x210d, 0xc2ed, 0x14c0, 0x1b19, 0xe9a3, 0x6379, 0x1, 0x1);
        gbc.writeMem(0x210d, { 0x11, 0x3e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc2ed);
        EXPECT(gbc.pc(), 0x2110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0019
        gbc.setState(0x224, 0x8a81, 0x5810, 0x88bc, 0x392e, 0xb853, 0x1, 0x0);
        gbc.writeMem(0x224, { 0x11, 0x54, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8a81);
        EXPECT(gbc.pc(), 0x227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 001A
        gbc.setState(0x8c8d, 0x7724, 0x4f70, 0xb01a, 0x670f, 0xe116, 0x1, 0x0);
        gbc.writeMem(0x8c8d, { 0x11, 0x3d, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7724);
        EXPECT(gbc.pc(), 0x8c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8d), 0x11);
        EXPECT(gbc.readMem(0x8c8e), 0x3d);
        EXPECT(gbc.readMem(0x8c8f), 0xb9);
        // 11 001B
        gbc.setState(0x1cfb, 0x9144, 0xab40, 0x8380, 0xcb9b, 0x6db3, 0x1, 0x1);
        gbc.writeMem(0x1cfb, { 0x11, 0x7e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 001C
        gbc.setState(0xda26, 0x20da, 0x8a20, 0xa94a, 0x65ad, 0x17eb, 0x1, 0x0);
        gbc.writeMem(0xda26, { 0x11, 0x40, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x20da);
        EXPECT(gbc.pc(), 0xda29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda26), 0x11);
        EXPECT(gbc.readMem(0xda27), 0x40);
        EXPECT(gbc.readMem(0xda28), 0xea);
        // 11 001D
        gbc.setState(0x5645, 0x566, 0x20f0, 0xa539, 0x4680, 0xbfd6, 0x0, 0x0);
        gbc.writeMem(0x5645, { 0x11, 0xf9, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x566);
        EXPECT(gbc.pc(), 0x5648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 001F
        gbc.setState(0x3b1a, 0xef1e, 0xa450, 0xfa63, 0xd6e4, 0xe455, 0x0, 0x0);
        gbc.writeMem(0x3b1a, { 0x11, 0xaf, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xef1e);
        EXPECT(gbc.pc(), 0x3b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0020
        gbc.setState(0x2ac1, 0x9df3, 0x8180, 0xa5b6, 0xec12, 0x255c, 0x0, 0x0);
        gbc.writeMem(0x2ac1, { 0x11, 0x98, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9df3);
        EXPECT(gbc.pc(), 0x2ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0021
        gbc.setState(0x9520, 0xd84e, 0x23d0, 0x8013, 0x4afd, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x9520, { 0x11, 0xef, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd84e);
        EXPECT(gbc.pc(), 0x9523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9520), 0x11);
        EXPECT(gbc.readMem(0x9521), 0xef);
        EXPECT(gbc.readMem(0x9522), 0x1d);
        // 11 0022
        gbc.setState(0x7a55, 0xaecf, 0x3bd0, 0x3ceb, 0xd7db, 0x932f, 0x0, 0x1);
        gbc.writeMem(0x7a55, { 0x11, 0x0, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaecf);
        EXPECT(gbc.pc(), 0x7a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0023
        gbc.setState(0x14a8, 0xd8fa, 0x9c70, 0x56b7, 0xd4d3, 0xbe3a, 0x0, 0x0);
        gbc.writeMem(0x14a8, { 0x11, 0xe8, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd8fa);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0024
        gbc.setState(0xbbce, 0xd809, 0x81f0, 0xc80, 0x9ac6, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xbbce, { 0x11, 0xa9, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd809);
        EXPECT(gbc.pc(), 0xbbd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbce), 0x11);
        EXPECT(gbc.readMem(0xbbcf), 0xa9);
        EXPECT(gbc.readMem(0xbbd0), 0xcd);
        // 11 0025
        gbc.setState(0x2782, 0xd46c, 0xb1a0, 0x7991, 0x58ad, 0x3000, 0x1, 0x1);
        gbc.writeMem(0x2782, { 0x11, 0x5e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd46c);
        EXPECT(gbc.pc(), 0x2785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0026
        gbc.setState(0xaa7, 0xcea7, 0x33d0, 0xdfbe, 0x7894, 0x1a02, 0x0, 0x0);
        gbc.writeMem(0xaa7, { 0x11, 0xf, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcea7);
        EXPECT(gbc.pc(), 0xaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0027
        gbc.setState(0xd24e, 0xb17e, 0x6830, 0x401f, 0x4b54, 0xff75, 0x1, 0x0);
        gbc.writeMem(0xd24e, { 0x11, 0xcf, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb17e);
        EXPECT(gbc.pc(), 0xd251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24e), 0x11);
        EXPECT(gbc.readMem(0xd24f), 0xcf);
        EXPECT(gbc.readMem(0xd250), 0x81);
        // 11 0028
        gbc.setState(0xa665, 0x80c1, 0xea00, 0x3312, 0x9999, 0x2971, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0x11, 0xa5, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0xa668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa665), 0x11);
        EXPECT(gbc.readMem(0xa666), 0xa5);
        EXPECT(gbc.readMem(0xa667), 0x54);
        // 11 0029
        gbc.setState(0x489f, 0x34e8, 0xbf90, 0xb17f, 0xd73c, 0x60e4, 0x0, 0x0);
        gbc.writeMem(0x489f, { 0x11, 0xf4, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x34e8);
        EXPECT(gbc.pc(), 0x48a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 002A
        gbc.setState(0x3518, 0xef58, 0xf980, 0xfb7b, 0xdd51, 0x7ab4, 0x1, 0x1);
        gbc.writeMem(0x3518, { 0x11, 0x32, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xef58);
        EXPECT(gbc.pc(), 0x351b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 002B
        gbc.setState(0x87fe, 0x6e63, 0x8950, 0xc691, 0x8642, 0x21c2, 0x0, 0x1);
        gbc.writeMem(0x87fe, { 0x11, 0xfd, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6e63);
        EXPECT(gbc.pc(), 0x8801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fe), 0x11);
        EXPECT(gbc.readMem(0x87ff), 0xfd);
        EXPECT(gbc.readMem(0x8800), 0xbf);
        // 11 002C
        gbc.setState(0x9674, 0x16f9, 0xf3d0, 0xfd64, 0xe834, 0x67ce, 0x1, 0x0);
        gbc.writeMem(0x9674, { 0x11, 0xc0, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x16f9);
        EXPECT(gbc.pc(), 0x9677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9674), 0x11);
        EXPECT(gbc.readMem(0x9675), 0xc0);
        EXPECT(gbc.readMem(0x9676), 0x4e);
        // 11 002D
        gbc.setState(0x661b, 0x1e57, 0xc590, 0xf407, 0xad63, 0xea43, 0x0, 0x1);
        gbc.writeMem(0x661b, { 0x11, 0x71, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1e57);
        EXPECT(gbc.pc(), 0x661e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 002E
        gbc.setState(0xd920, 0x1acc, 0x4b70, 0x1364, 0xcde9, 0x14f7, 0x0, 0x1);
        gbc.writeMem(0xd920, { 0x11, 0xe4, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1acc);
        EXPECT(gbc.pc(), 0xd923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd920), 0x11);
        EXPECT(gbc.readMem(0xd921), 0xe4);
        EXPECT(gbc.readMem(0xd922), 0x7a);
        // 11 0030
        gbc.setState(0xb87, 0x74d9, 0x8170, 0x8023, 0xef49, 0xb063, 0x0, 0x1);
        gbc.writeMem(0xb87, { 0x11, 0xf1, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x74d9);
        EXPECT(gbc.pc(), 0xb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0031
        gbc.setState(0xcc23, 0x8ab0, 0xca30, 0xeaf1, 0xd2d6, 0x2819, 0x0, 0x1);
        gbc.writeMem(0xcc23, { 0x11, 0x68, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8ab0);
        EXPECT(gbc.pc(), 0xcc26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc23), 0x11);
        EXPECT(gbc.readMem(0xcc24), 0x68);
        EXPECT(gbc.readMem(0xcc25), 0xc7);
        // 11 0032
        gbc.setState(0x2cdf, 0x6531, 0x5600, 0xa953, 0x5a86, 0x3151, 0x1, 0x0);
        gbc.writeMem(0x2cdf, { 0x11, 0xb8, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6531);
        EXPECT(gbc.pc(), 0x2ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0033
        gbc.setState(0x810a, 0x2803, 0x1960, 0x301, 0x1c85, 0x9fc, 0x1, 0x1);
        gbc.writeMem(0x810a, { 0x11, 0x3d, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2803);
        EXPECT(gbc.pc(), 0x810d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810a), 0x11);
        EXPECT(gbc.readMem(0x810b), 0x3d);
        EXPECT(gbc.readMem(0x810c), 0x70);
        // 11 0034
        gbc.setState(0x4e5e, 0xf662, 0x12f0, 0x8b5d, 0x3a0f, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0x11, 0xed, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf662);
        EXPECT(gbc.pc(), 0x4e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0035
        gbc.setState(0x2dcf, 0x624a, 0x2780, 0x7623, 0xb4e5, 0xfb85, 0x0, 0x1);
        gbc.writeMem(0x2dcf, { 0x11, 0xb3, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x624a);
        EXPECT(gbc.pc(), 0x2dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0036
        gbc.setState(0x1d64, 0xde59, 0x2540, 0x3af3, 0xe02d, 0x6f35, 0x0, 0x0);
        gbc.writeMem(0x1d64, { 0x11, 0x12, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xde59);
        EXPECT(gbc.pc(), 0x1d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0037
        gbc.setState(0xae3b, 0xf465, 0xc140, 0xd245, 0x6d93, 0xb5af, 0x0, 0x1);
        gbc.writeMem(0xae3b, { 0x11, 0x47, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0xae3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3b), 0x11);
        EXPECT(gbc.readMem(0xae3c), 0x47);
        EXPECT(gbc.readMem(0xae3d), 0x88);
        // 11 0038
        gbc.setState(0x3cb3, 0xa877, 0xaa40, 0x5907, 0xa244, 0xa7f9, 0x0, 0x0);
        gbc.writeMem(0x3cb3, { 0x11, 0x8d, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa877);
        EXPECT(gbc.pc(), 0x3cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0039
        gbc.setState(0x70c3, 0xc6d4, 0xf840, 0xca66, 0x5361, 0x5b27, 0x0, 0x1);
        gbc.writeMem(0x70c3, { 0x11, 0xe7, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc6d4);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 003A
        gbc.setState(0x20b5, 0xe7f7, 0x8fb0, 0x1d85, 0x2cad, 0xe442, 0x0, 0x0);
        gbc.writeMem(0x20b5, { 0x11, 0xe1, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe7f7);
        EXPECT(gbc.pc(), 0x20b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 003B
        gbc.setState(0x1bb7, 0x79ef, 0x8a90, 0x9fa0, 0x391a, 0x1428, 0x0, 0x1);
        gbc.writeMem(0x1bb7, { 0x11, 0x3e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0x1bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 003C
        gbc.setState(0x7602, 0x5e6b, 0xfe00, 0xb552, 0x53ac, 0xfcd2, 0x0, 0x1);
        gbc.writeMem(0x7602, { 0x11, 0x76, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5e6b);
        EXPECT(gbc.pc(), 0x7605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 003D
        gbc.setState(0x8630, 0xb8d3, 0xa1b0, 0x2dab, 0x2ac5, 0x42d7, 0x1, 0x0);
        gbc.writeMem(0x8630, { 0x11, 0x58, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb8d3);
        EXPECT(gbc.pc(), 0x8633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8630), 0x11);
        EXPECT(gbc.readMem(0x8631), 0x58);
        EXPECT(gbc.readMem(0x8632), 0x34);
        // 11 003E
        gbc.setState(0x99b6, 0x1ecc, 0x2d40, 0x1c95, 0x66b4, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0x11, 0xe3, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1ecc);
        EXPECT(gbc.pc(), 0x99b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b6), 0x11);
        EXPECT(gbc.readMem(0x99b7), 0xe3);
        EXPECT(gbc.readMem(0x99b8), 0xd7);
        // 11 003F
        gbc.setState(0x54a8, 0x366a, 0x99a0, 0x1e72, 0x3ff8, 0xcb91, 0x1, 0x0);
        gbc.writeMem(0x54a8, { 0x11, 0x7f, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x366a);
        EXPECT(gbc.pc(), 0x54ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0040
        gbc.setState(0x4237, 0xeea0, 0xe3e0, 0x554e, 0x50f8, 0xbbd1, 0x1, 0x0);
        gbc.writeMem(0x4237, { 0x11, 0x70, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeea0);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0041
        gbc.setState(0xb43c, 0x7b76, 0x3ac0, 0xca15, 0xf79f, 0x70c3, 0x0, 0x0);
        gbc.writeMem(0xb43c, { 0x11, 0x0, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7b76);
        EXPECT(gbc.pc(), 0xb43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43c), 0x11);
        EXPECT(gbc.readMem(0xb43d), 0x0);
        EXPECT(gbc.readMem(0xb43e), 0xd7);
        // 11 0042
        gbc.setState(0xb616, 0x177c, 0x8940, 0xe958, 0xaef7, 0xd0b7, 0x0, 0x1);
        gbc.writeMem(0xb616, { 0x11, 0x61, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x177c);
        EXPECT(gbc.pc(), 0xb619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb616), 0x11);
        EXPECT(gbc.readMem(0xb617), 0x61);
        EXPECT(gbc.readMem(0xb618), 0x8);
        // 11 0043
        gbc.setState(0x68f8, 0x6ec5, 0xf8b0, 0x632a, 0x7552, 0x5035, 0x1, 0x1);
        gbc.writeMem(0x68f8, { 0x11, 0x81, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6ec5);
        EXPECT(gbc.pc(), 0x68fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0044
        gbc.setState(0x43ec, 0x7b6a, 0x4350, 0xcf5e, 0xb671, 0x130d, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0x11, 0x9c, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7b6a);
        EXPECT(gbc.pc(), 0x43ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0045
        gbc.setState(0xacc2, 0xdcb7, 0xd240, 0x68d0, 0xb68e, 0xdf46, 0x0, 0x1);
        gbc.writeMem(0xacc2, { 0x11, 0x7f, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0xacc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc2), 0x11);
        EXPECT(gbc.readMem(0xacc3), 0x7f);
        EXPECT(gbc.readMem(0xacc4), 0x47);
        // 11 0046
        gbc.setState(0x4796, 0x953, 0xc6f0, 0x16cc, 0x506, 0xa73f, 0x0, 0x0);
        gbc.writeMem(0x4796, { 0x11, 0x14, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0x4799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0048
        gbc.setState(0x3b86, 0xda14, 0x6c60, 0xff6d, 0x8d09, 0xed3d, 0x0, 0x0);
        gbc.writeMem(0x3b86, { 0x11, 0x75, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xda14);
        EXPECT(gbc.pc(), 0x3b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 004A
        gbc.setState(0xdb05, 0xe89f, 0xdbb0, 0xe68f, 0x2d49, 0xbf7c, 0x0, 0x1);
        gbc.writeMem(0xdb05, { 0x11, 0x89, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe89f);
        EXPECT(gbc.pc(), 0xdb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb05), 0x11);
        EXPECT(gbc.readMem(0xdb06), 0x89);
        EXPECT(gbc.readMem(0xdb07), 0xbc);
        // 11 004B
        gbc.setState(0x83ec, 0x7023, 0x94a0, 0xd233, 0x83e5, 0x752c, 0x1, 0x0);
        gbc.writeMem(0x83ec, { 0x11, 0x18, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7023);
        EXPECT(gbc.pc(), 0x83ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ec), 0x11);
        EXPECT(gbc.readMem(0x83ed), 0x18);
        EXPECT(gbc.readMem(0x83ee), 0xe7);
        // 11 004C
        gbc.setState(0x141a, 0x2e82, 0xb1a0, 0x8c83, 0x829d, 0x4d6a, 0x0, 0x0);
        gbc.writeMem(0x141a, { 0x11, 0xc4, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2e82);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 004D
        gbc.setState(0x8d98, 0xc2a7, 0xe2f0, 0x63cd, 0xde7d, 0x5ed3, 0x1, 0x0);
        gbc.writeMem(0x8d98, { 0x11, 0x59, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc2a7);
        EXPECT(gbc.pc(), 0x8d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d98), 0x11);
        EXPECT(gbc.readMem(0x8d99), 0x59);
        EXPECT(gbc.readMem(0x8d9a), 0x76);
        // 11 004E
        gbc.setState(0x9846, 0xe1d5, 0xfe80, 0x4f9b, 0x2077, 0xb364, 0x0, 0x1);
        gbc.writeMem(0x9846, { 0x11, 0xb2, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe1d5);
        EXPECT(gbc.pc(), 0x9849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9846), 0x11);
        EXPECT(gbc.readMem(0x9847), 0xb2);
        EXPECT(gbc.readMem(0x9848), 0xd0);
        // 11 004F
        gbc.setState(0x9608, 0x6ac9, 0xa1f0, 0x1cee, 0xf08d, 0x3fbd, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0x11, 0xb8, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0x960b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9608), 0x11);
        EXPECT(gbc.readMem(0x9609), 0xb8);
        EXPECT(gbc.readMem(0x960a), 0x4c);
        // 11 0051
        gbc.setState(0x10aa, 0x3093, 0x61e0, 0xab5d, 0x2d54, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x10aa, { 0x11, 0x82, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3093);
        EXPECT(gbc.pc(), 0x10ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0052
        gbc.setState(0x5e7e, 0x4432, 0xcc80, 0x26b5, 0xd2fe, 0xf5c4, 0x0, 0x0);
        gbc.writeMem(0x5e7e, { 0x11, 0xa, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4432);
        EXPECT(gbc.pc(), 0x5e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0053
        gbc.setState(0xee44, 0xfb54, 0xa820, 0x72d, 0xbef0, 0xd142, 0x1, 0x0);
        gbc.writeMem(0xee44, { 0x11, 0x73, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfb54);
        EXPECT(gbc.pc(), 0xee47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee44), 0x11);
        EXPECT(gbc.readMem(0xee45), 0x73);
        EXPECT(gbc.readMem(0xee46), 0x69);
        // 11 0054
        gbc.setState(0x7eef, 0x1b4, 0x5e20, 0xe04b, 0x261, 0x97d6, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0x11, 0x83, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1b4);
        EXPECT(gbc.pc(), 0x7ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0055
        gbc.setState(0x7399, 0x2bb3, 0x2b50, 0xecf5, 0xe15c, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x7399, { 0x11, 0x8f, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2bb3);
        EXPECT(gbc.pc(), 0x739c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0056
        gbc.setState(0xa5c5, 0x6d68, 0xdd80, 0xc068, 0x873d, 0x191d, 0x0, 0x0);
        gbc.writeMem(0xa5c5, { 0x11, 0xd8, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6d68);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c5), 0x11);
        EXPECT(gbc.readMem(0xa5c6), 0xd8);
        EXPECT(gbc.readMem(0xa5c7), 0xda);
        // 11 0057
        gbc.setState(0x543a, 0x9edd, 0xb390, 0x6207, 0x3995, 0x1e0a, 0x1, 0x0);
        gbc.writeMem(0x543a, { 0x11, 0xbc, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9edd);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0058
        gbc.setState(0x2ecb, 0x8339, 0x31d0, 0xc92b, 0x8e7, 0x58dd, 0x1, 0x1);
        gbc.writeMem(0x2ecb, { 0x11, 0x7c, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8339);
        EXPECT(gbc.pc(), 0x2ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0059
        gbc.setState(0xb661, 0xec6f, 0x8300, 0xf4a2, 0x23, 0x583f, 0x0, 0x0);
        gbc.writeMem(0xb661, { 0x11, 0x55, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xec6f);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb661), 0x11);
        EXPECT(gbc.readMem(0xb662), 0x55);
        EXPECT(gbc.readMem(0xb663), 0xd3);
        // 11 005A
        gbc.setState(0x663d, 0x3a1e, 0x2560, 0x7689, 0x65a4, 0xf4fd, 0x0, 0x0);
        gbc.writeMem(0x663d, { 0x11, 0x18, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3a1e);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 005B
        gbc.setState(0x789a, 0x1429, 0xd0c0, 0xa5c6, 0x9bd6, 0x6897, 0x0, 0x1);
        gbc.writeMem(0x789a, { 0x11, 0xca, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1429);
        EXPECT(gbc.pc(), 0x789d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 005C
        gbc.setState(0xc6cf, 0x9a4c, 0x180, 0xe559, 0x2ef7, 0x608c, 0x0, 0x1);
        gbc.writeMem(0xc6cf, { 0x11, 0x6d, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9a4c);
        EXPECT(gbc.pc(), 0xc6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cf), 0x11);
        EXPECT(gbc.readMem(0xc6d0), 0x6d);
        EXPECT(gbc.readMem(0xc6d1), 0x5e);
        // 11 005D
        gbc.setState(0x2e37, 0xabe1, 0x9250, 0xd2d3, 0xe65f, 0x422a, 0x0, 0x1);
        gbc.writeMem(0x2e37, { 0x11, 0xcd, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xabe1);
        EXPECT(gbc.pc(), 0x2e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 005E
        gbc.setState(0x7f78, 0xfdad, 0x0, 0x9307, 0x8d60, 0x6a38, 0x0, 0x1);
        gbc.writeMem(0x7f78, { 0x11, 0x2f, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfdad);
        EXPECT(gbc.pc(), 0x7f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 005F
        gbc.setState(0x3fa4, 0x92e3, 0xdf70, 0xa9bb, 0x5732, 0x5135, 0x1, 0x1);
        gbc.writeMem(0x3fa4, { 0x11, 0xb6, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0x3fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0060
        gbc.setState(0x3f1, 0xcfc7, 0x35d0, 0x94e, 0x76b3, 0xa3a0, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0x11, 0x77, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcfc7);
        EXPECT(gbc.pc(), 0x3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0061
        gbc.setState(0x56fc, 0x44d9, 0x5500, 0x63ec, 0x82ee, 0x8760, 0x1, 0x0);
        gbc.writeMem(0x56fc, { 0x11, 0x7, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x44d9);
        EXPECT(gbc.pc(), 0x56ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0062
        gbc.setState(0x8dba, 0x1983, 0xe650, 0x4dd2, 0x597d, 0x6f25, 0x1, 0x1);
        gbc.writeMem(0x8dba, { 0x11, 0x5, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1983);
        EXPECT(gbc.pc(), 0x8dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dba), 0x11);
        EXPECT(gbc.readMem(0x8dbb), 0x5);
        EXPECT(gbc.readMem(0x8dbc), 0x43);
        // 11 0063
        gbc.setState(0xa264, 0x7409, 0x7970, 0x44f, 0xd369, 0x95ca, 0x0, 0x1);
        gbc.writeMem(0xa264, { 0x11, 0xb5, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7409);
        EXPECT(gbc.pc(), 0xa267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa264), 0x11);
        EXPECT(gbc.readMem(0xa265), 0xb5);
        EXPECT(gbc.readMem(0xa266), 0x59);
        // 11 0064
        gbc.setState(0xb5cc, 0x3f9a, 0xe770, 0x661b, 0x9c79, 0x6185, 0x1, 0x0);
        gbc.writeMem(0xb5cc, { 0x11, 0xbb, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0xb5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cc), 0x11);
        EXPECT(gbc.readMem(0xb5cd), 0xbb);
        EXPECT(gbc.readMem(0xb5ce), 0xf6);
        // 11 0065
        gbc.setState(0x9d79, 0xb9d1, 0x4730, 0xf69b, 0xea19, 0xe7f7, 0x1, 0x1);
        gbc.writeMem(0x9d79, { 0x11, 0x6d, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb9d1);
        EXPECT(gbc.pc(), 0x9d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d79), 0x11);
        EXPECT(gbc.readMem(0x9d7a), 0x6d);
        EXPECT(gbc.readMem(0x9d7b), 0x80);
        // 11 0066
        gbc.setState(0xb71, 0x331e, 0x54c0, 0xc404, 0x2f07, 0x6fb5, 0x1, 0x1);
        gbc.writeMem(0xb71, { 0x11, 0xbc, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x331e);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0067
        gbc.setState(0xcb36, 0xa692, 0x5ec0, 0x2cc4, 0x4977, 0x7bc8, 0x0, 0x1);
        gbc.writeMem(0xcb36, { 0x11, 0xa2, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa692);
        EXPECT(gbc.pc(), 0xcb39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb36), 0x11);
        EXPECT(gbc.readMem(0xcb37), 0xa2);
        EXPECT(gbc.readMem(0xcb38), 0xf);
        // 11 0068
        gbc.setState(0xc308, 0x92a8, 0x2e70, 0xed4e, 0x60be, 0xf43d, 0x0, 0x1);
        gbc.writeMem(0xc308, { 0x11, 0x7d, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x92a8);
        EXPECT(gbc.pc(), 0xc30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc308), 0x11);
        EXPECT(gbc.readMem(0xc309), 0x7d);
        EXPECT(gbc.readMem(0xc30a), 0x10);
        // 11 0069
        gbc.setState(0x5ead, 0x6c66, 0x8360, 0x4558, 0x9e60, 0xdbb6, 0x0, 0x0);
        gbc.writeMem(0x5ead, { 0x11, 0x1b, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6c66);
        EXPECT(gbc.pc(), 0x5eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 006A
        gbc.setState(0xccaa, 0x91fb, 0xebd0, 0x942, 0xa4a6, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0xccaa, { 0x11, 0x73, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x91fb);
        EXPECT(gbc.pc(), 0xccad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccaa), 0x11);
        EXPECT(gbc.readMem(0xccab), 0x73);
        EXPECT(gbc.readMem(0xccac), 0x6b);
        // 11 006B
        gbc.setState(0xab05, 0x9efb, 0x78b0, 0x4cdb, 0x3127, 0x99e0, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0x11, 0x58, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9efb);
        EXPECT(gbc.pc(), 0xab08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab05), 0x11);
        EXPECT(gbc.readMem(0xab06), 0x58);
        EXPECT(gbc.readMem(0xab07), 0x7);
        // 11 006C
        gbc.setState(0x572d, 0xb1ed, 0x1910, 0x9dcf, 0x95e3, 0x1996, 0x0, 0x1);
        gbc.writeMem(0x572d, { 0x11, 0xf7, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb1ed);
        EXPECT(gbc.pc(), 0x5730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 006D
        gbc.setState(0x9da0, 0x1638, 0xcba0, 0x7057, 0x166a, 0x13e3, 0x0, 0x0);
        gbc.writeMem(0x9da0, { 0x11, 0x57, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da0), 0x11);
        EXPECT(gbc.readMem(0x9da1), 0x57);
        EXPECT(gbc.readMem(0x9da2), 0x9);
        // 11 006E
        gbc.setState(0x943f, 0x8c94, 0x6f00, 0xa5da, 0x137a, 0x3baf, 0x1, 0x1);
        gbc.writeMem(0x943f, { 0x11, 0x4f, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8c94);
        EXPECT(gbc.pc(), 0x9442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943f), 0x11);
        EXPECT(gbc.readMem(0x9440), 0x4f);
        EXPECT(gbc.readMem(0x9441), 0xf);
        // 11 006F
        gbc.setState(0x872a, 0x2e79, 0x3de0, 0x67c9, 0xe494, 0xa75b, 0x1, 0x0);
        gbc.writeMem(0x872a, { 0x11, 0x79, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2e79);
        EXPECT(gbc.pc(), 0x872d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872a), 0x11);
        EXPECT(gbc.readMem(0x872b), 0x79);
        EXPECT(gbc.readMem(0x872c), 0xec);
        // 11 0070
        gbc.setState(0xcca8, 0x5798, 0x4d40, 0xa716, 0x7420, 0x99e9, 0x0, 0x0);
        gbc.writeMem(0xcca8, { 0x11, 0xa9, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5798);
        EXPECT(gbc.pc(), 0xccab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca8), 0x11);
        EXPECT(gbc.readMem(0xcca9), 0xa9);
        EXPECT(gbc.readMem(0xccaa), 0x1c);
        // 11 0071
        gbc.setState(0x8a0f, 0xa503, 0x3250, 0x1e36, 0x329e, 0xf745, 0x1, 0x0);
        gbc.writeMem(0x8a0f, { 0x11, 0x75, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa503);
        EXPECT(gbc.pc(), 0x8a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0f), 0x11);
        EXPECT(gbc.readMem(0x8a10), 0x75);
        EXPECT(gbc.readMem(0x8a11), 0x5d);
        // 11 0072
        gbc.setState(0x26c9, 0x249d, 0xb840, 0x10f6, 0x9c60, 0xfcb4, 0x1, 0x0);
        gbc.writeMem(0x26c9, { 0x11, 0x60, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x249d);
        EXPECT(gbc.pc(), 0x26cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0073
        gbc.setState(0x23a0, 0x2fac, 0x36a0, 0x602a, 0xb9ed, 0x5c19, 0x0, 0x0);
        gbc.writeMem(0x23a0, { 0x11, 0x71, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2fac);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0074
        gbc.setState(0xdc3, 0x45f8, 0x2420, 0x502e, 0x3198, 0xf30b, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0x11, 0xea, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x45f8);
        EXPECT(gbc.pc(), 0xdc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0075
        gbc.setState(0xde34, 0xd105, 0x5e90, 0xe71f, 0x4ce9, 0x9703, 0x1, 0x1);
        gbc.writeMem(0xde34, { 0x11, 0x83, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd105);
        EXPECT(gbc.pc(), 0xde37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde34), 0x11);
        EXPECT(gbc.readMem(0xde35), 0x83);
        EXPECT(gbc.readMem(0xde36), 0x22);
        // 11 0076
        gbc.setState(0x56be, 0x4eb4, 0x6a80, 0x982c, 0x4ef1, 0x9dd5, 0x1, 0x0);
        gbc.writeMem(0x56be, { 0x11, 0xc9, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4eb4);
        EXPECT(gbc.pc(), 0x56c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0077
        gbc.setState(0x1961, 0x9bb7, 0x6e10, 0xe8ed, 0x218b, 0x3e85, 0x1, 0x1);
        gbc.writeMem(0x1961, { 0x11, 0x19, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9bb7);
        EXPECT(gbc.pc(), 0x1964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0078
        gbc.setState(0xc8b8, 0xcf3c, 0x70b0, 0xecb7, 0xb504, 0x6793, 0x1, 0x1);
        gbc.writeMem(0xc8b8, { 0x11, 0xd6, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf3c);
        EXPECT(gbc.pc(), 0xc8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b8), 0x11);
        EXPECT(gbc.readMem(0xc8b9), 0xd6);
        EXPECT(gbc.readMem(0xc8ba), 0xa1);
        // 11 0079
        gbc.setState(0x8303, 0x706b, 0x5650, 0xdde, 0xfee, 0x58f, 0x1, 0x1);
        gbc.writeMem(0x8303, { 0x11, 0xaf, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x706b);
        EXPECT(gbc.pc(), 0x8306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8303), 0x11);
        EXPECT(gbc.readMem(0x8304), 0xaf);
        EXPECT(gbc.readMem(0x8305), 0x96);
        // 11 007A
        gbc.setState(0x9be5, 0xd9b7, 0xb830, 0xc2c9, 0x7742, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x9be5, { 0x11, 0x79, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd9b7);
        EXPECT(gbc.pc(), 0x9be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be5), 0x11);
        EXPECT(gbc.readMem(0x9be6), 0x79);
        EXPECT(gbc.readMem(0x9be7), 0xa7);
        // 11 007C
        gbc.setState(0x4fdf, 0x2252, 0xd7b0, 0x7756, 0x4e16, 0xdb28, 0x0, 0x1);
        gbc.writeMem(0x4fdf, { 0x11, 0x22, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2252);
        EXPECT(gbc.pc(), 0x4fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 007D
        gbc.setState(0x87c2, 0x6d03, 0xcf70, 0x553b, 0x292c, 0xe290, 0x1, 0x0);
        gbc.writeMem(0x87c2, { 0x11, 0x9c, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6d03);
        EXPECT(gbc.pc(), 0x87c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c2), 0x11);
        EXPECT(gbc.readMem(0x87c3), 0x9c);
        EXPECT(gbc.readMem(0x87c4), 0x58);
        // 11 007E
        gbc.setState(0x6df1, 0x3828, 0x1930, 0xab5e, 0xe956, 0x2674, 0x0, 0x0);
        gbc.writeMem(0x6df1, { 0x11, 0x79, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3828);
        EXPECT(gbc.pc(), 0x6df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 007F
        gbc.setState(0x15b0, 0xd352, 0x5a60, 0xba2f, 0xba7, 0xdcdb, 0x0, 0x0);
        gbc.writeMem(0x15b0, { 0x11, 0xa7, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd352);
        EXPECT(gbc.pc(), 0x15b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0080
        gbc.setState(0xc093, 0x7d5d, 0x2030, 0x667f, 0x78dd, 0xb4ab, 0x0, 0x1);
        gbc.writeMem(0xc093, { 0x11, 0x20, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0xc096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc093), 0x11);
        EXPECT(gbc.readMem(0xc094), 0x20);
        EXPECT(gbc.readMem(0xc095), 0x4a);
        // 11 0082
        gbc.setState(0x92ee, 0xe7f7, 0xca90, 0x5e9c, 0x192, 0xc17c, 0x1, 0x1);
        gbc.writeMem(0x92ee, { 0x11, 0xd3, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe7f7);
        EXPECT(gbc.pc(), 0x92f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ee), 0x11);
        EXPECT(gbc.readMem(0x92ef), 0xd3);
        EXPECT(gbc.readMem(0x92f0), 0x7f);
        // 11 0083
        gbc.setState(0x26d8, 0x7b4d, 0x2910, 0xfdc, 0x8233, 0xe9bb, 0x0, 0x0);
        gbc.writeMem(0x26d8, { 0x11, 0x39, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7b4d);
        EXPECT(gbc.pc(), 0x26db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0084
        gbc.setState(0x116e, 0xdeb1, 0x6750, 0x5b1a, 0xa018, 0x9eb9, 0x1, 0x0);
        gbc.writeMem(0x116e, { 0x11, 0x2b, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdeb1);
        EXPECT(gbc.pc(), 0x1171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0085
        gbc.setState(0xc682, 0x7b9, 0x4a30, 0x3526, 0x69a2, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0xc682, { 0x11, 0x9c, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7b9);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc682), 0x11);
        EXPECT(gbc.readMem(0xc683), 0x9c);
        EXPECT(gbc.readMem(0xc684), 0xc1);
        // 11 0086
        gbc.setState(0x5607, 0x227c, 0x8720, 0xe114, 0x52e0, 0x934a, 0x0, 0x1);
        gbc.writeMem(0x5607, { 0x11, 0xc8, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x227c);
        EXPECT(gbc.pc(), 0x560a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0087
        gbc.setState(0x8219, 0x738b, 0xe660, 0x59a0, 0x8fee, 0x675, 0x1, 0x1);
        gbc.writeMem(0x8219, { 0x11, 0x7a, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x738b);
        EXPECT(gbc.pc(), 0x821c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8219), 0x11);
        EXPECT(gbc.readMem(0x821a), 0x7a);
        EXPECT(gbc.readMem(0x821b), 0xac);
        // 11 0088
        gbc.setState(0xa475, 0xc20e, 0x5070, 0x1912, 0x2319, 0x8774, 0x0, 0x1);
        gbc.writeMem(0xa475, { 0x11, 0x19, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc20e);
        EXPECT(gbc.pc(), 0xa478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa475), 0x11);
        EXPECT(gbc.readMem(0xa476), 0x19);
        EXPECT(gbc.readMem(0xa477), 0xdc);
        // 11 0089
        gbc.setState(0xbf2b, 0xcd0, 0x8cf0, 0xc123, 0x69ce, 0x2a23, 0x1, 0x0);
        gbc.writeMem(0xbf2b, { 0x11, 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcd0);
        EXPECT(gbc.pc(), 0xbf2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2b), 0x11);
        EXPECT(gbc.readMem(0xbf2c), 0x2e);
        EXPECT(gbc.readMem(0xbf2d), 0xb1);
        // 11 008A
        gbc.setState(0xe0fa, 0xda2b, 0xc7b0, 0x99be, 0x159e, 0x2373, 0x0, 0x0);
        gbc.writeMem(0xe0fa, { 0x11, 0xb8, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xda2b);
        EXPECT(gbc.pc(), 0xe0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0fa), 0x11);
        EXPECT(gbc.readMem(0xe0fb), 0xb8);
        EXPECT(gbc.readMem(0xe0fc), 0xd3);
        // 11 008B
        gbc.setState(0xd945, 0x67fb, 0x9cf0, 0x7afd, 0x3561, 0x7df7, 0x0, 0x0);
        gbc.writeMem(0xd945, { 0x11, 0x55, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x67fb);
        EXPECT(gbc.pc(), 0xd948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd945), 0x11);
        EXPECT(gbc.readMem(0xd946), 0x55);
        EXPECT(gbc.readMem(0xd947), 0x5);
        // 11 008E
        gbc.setState(0x9c95, 0xd272, 0x6500, 0xb0eb, 0x117f, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0x9c95, { 0x11, 0xfd, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0x9c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c95), 0x11);
        EXPECT(gbc.readMem(0x9c96), 0xfd);
        EXPECT(gbc.readMem(0x9c97), 0xa2);
        // 11 008F
        gbc.setState(0xb993, 0xbc23, 0x6090, 0xd6e2, 0x3bc9, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0xb993, { 0x11, 0x32, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbc23);
        EXPECT(gbc.pc(), 0xb996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb993), 0x11);
        EXPECT(gbc.readMem(0xb994), 0x32);
        EXPECT(gbc.readMem(0xb995), 0xd0);
        // 11 0090
        gbc.setState(0xbb4f, 0x9bc6, 0x5500, 0x9ec1, 0x1b0, 0xdf9e, 0x1, 0x1);
        gbc.writeMem(0xbb4f, { 0x11, 0x69, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9bc6);
        EXPECT(gbc.pc(), 0xbb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4f), 0x11);
        EXPECT(gbc.readMem(0xbb50), 0x69);
        EXPECT(gbc.readMem(0xbb51), 0x47);
        // 11 0091
        gbc.setState(0x1f84, 0xdccb, 0x5570, 0xb83f, 0xf515, 0xa3b4, 0x0, 0x0);
        gbc.writeMem(0x1f84, { 0x11, 0xf9, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdccb);
        EXPECT(gbc.pc(), 0x1f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0092
        gbc.setState(0xc473, 0xdf55, 0x2310, 0x628a, 0x1346, 0x50fc, 0x0, 0x1);
        gbc.writeMem(0xc473, { 0x11, 0xcc, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdf55);
        EXPECT(gbc.pc(), 0xc476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc473), 0x11);
        EXPECT(gbc.readMem(0xc474), 0xcc);
        EXPECT(gbc.readMem(0xc475), 0xcb);
        // 11 0094
        gbc.setState(0x6386, 0xec8b, 0x5b50, 0x60ad, 0x6e2f, 0x2ef2, 0x0, 0x0);
        gbc.writeMem(0x6386, { 0x11, 0xf2, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xec8b);
        EXPECT(gbc.pc(), 0x6389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0095
        gbc.setState(0x9cbc, 0xd281, 0xf750, 0xb7d, 0x3bfe, 0xc11e, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0x11, 0x4c, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0x9cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0x11);
        EXPECT(gbc.readMem(0x9cbd), 0x4c);
        EXPECT(gbc.readMem(0x9cbe), 0xa0);
        // 11 0096
        gbc.setState(0xb8f7, 0xbdb5, 0x6650, 0x2ac3, 0x35bc, 0x3109, 0x0, 0x0);
        gbc.writeMem(0xb8f7, { 0x11, 0x98, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbdb5);
        EXPECT(gbc.pc(), 0xb8fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f7), 0x11);
        EXPECT(gbc.readMem(0xb8f8), 0x98);
        EXPECT(gbc.readMem(0xb8f9), 0xa6);
        // 11 0097
        gbc.setState(0xe8ca, 0x628d, 0x1980, 0xf1c3, 0xbbfe, 0x9765, 0x1, 0x0);
        gbc.writeMem(0xe8ca, { 0x11, 0xad, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x628d);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ca), 0x11);
        EXPECT(gbc.readMem(0xe8cb), 0xad);
        EXPECT(gbc.readMem(0xe8cc), 0x30);
        // 11 0098
        gbc.setState(0x7e1d, 0x31d0, 0x5ec0, 0x3ead, 0x3c3c, 0x4036, 0x0, 0x1);
        gbc.writeMem(0x7e1d, { 0x11, 0x90, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x31d0);
        EXPECT(gbc.pc(), 0x7e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0099
        gbc.setState(0x8b5d, 0xb75c, 0xcdb0, 0x3c6, 0x698a, 0x64bf, 0x1, 0x1);
        gbc.writeMem(0x8b5d, { 0x11, 0x60, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb75c);
        EXPECT(gbc.pc(), 0x8b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0x11);
        EXPECT(gbc.readMem(0x8b5e), 0x60);
        EXPECT(gbc.readMem(0x8b5f), 0xc5);
        // 11 009A
        gbc.setState(0x14a4, 0x89d2, 0x5de0, 0x11b7, 0x1d71, 0x226b, 0x1, 0x1);
        gbc.writeMem(0x14a4, { 0x11, 0xfe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x14a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 009B
        gbc.setState(0x5fbf, 0x3fff, 0x810, 0xe030, 0x303f, 0x393b, 0x0, 0x0);
        gbc.writeMem(0x5fbf, { 0x11, 0xf8, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3fff);
        EXPECT(gbc.pc(), 0x5fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 009C
        gbc.setState(0xcc53, 0xb3d, 0xa2e0, 0x3c14, 0x6b33, 0x9b0a, 0x0, 0x0);
        gbc.writeMem(0xcc53, { 0x11, 0x47, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb3d);
        EXPECT(gbc.pc(), 0xcc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc53), 0x11);
        EXPECT(gbc.readMem(0xcc54), 0x47);
        EXPECT(gbc.readMem(0xcc55), 0x4f);
        // 11 009D
        gbc.setState(0xb905, 0xcc34, 0x3600, 0xd8b, 0xfb6d, 0x18a, 0x0, 0x1);
        gbc.writeMem(0xb905, { 0x11, 0x42, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcc34);
        EXPECT(gbc.pc(), 0xb908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb905), 0x11);
        EXPECT(gbc.readMem(0xb906), 0x42);
        EXPECT(gbc.readMem(0xb907), 0x2c);
        // 11 009E
        gbc.setState(0x82a4, 0x6a14, 0x1f20, 0x5a9b, 0x4643, 0xa450, 0x0, 0x1);
        gbc.writeMem(0x82a4, { 0x11, 0x10, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x82a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a4), 0x11);
        EXPECT(gbc.readMem(0x82a5), 0x10);
        EXPECT(gbc.readMem(0x82a6), 0xac);
        // 11 009F
        gbc.setState(0x92a1, 0x64d2, 0x6710, 0x9509, 0xc6b0, 0xc836, 0x1, 0x0);
        gbc.writeMem(0x92a1, { 0x11, 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x64d2);
        EXPECT(gbc.pc(), 0x92a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a1), 0x11);
        EXPECT(gbc.readMem(0x92a2), 0xcb);
        EXPECT(gbc.readMem(0x92a3), 0xc0);
        // 11 00A0
        gbc.setState(0xef32, 0x9c9e, 0x7db0, 0xfccb, 0x9763, 0x854d, 0x0, 0x1);
        gbc.writeMem(0xef32, { 0x11, 0x52, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9c9e);
        EXPECT(gbc.pc(), 0xef35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef32), 0x11);
        EXPECT(gbc.readMem(0xef33), 0x52);
        EXPECT(gbc.readMem(0xef34), 0x46);
        // 11 00A1
        gbc.setState(0x77b6, 0x84a4, 0x7be0, 0x36d, 0xb98b, 0x9998, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0x11, 0xed, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x84a4);
        EXPECT(gbc.pc(), 0x77b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00A2
        gbc.setState(0x89de, 0xaae5, 0x2920, 0x3457, 0x82ed, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0x89de, { 0x11, 0xcd, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xaae5);
        EXPECT(gbc.pc(), 0x89e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89de), 0x11);
        EXPECT(gbc.readMem(0x89df), 0xcd);
        EXPECT(gbc.readMem(0x89e0), 0x7d);
        // 11 00A3
        gbc.setState(0x8826, 0x1019, 0x2b80, 0xe412, 0xba7d, 0x552a, 0x0, 0x1);
        gbc.writeMem(0x8826, { 0x11, 0x82, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0x8829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8826), 0x11);
        EXPECT(gbc.readMem(0x8827), 0x82);
        EXPECT(gbc.readMem(0x8828), 0x6f);
        // 11 00A4
        gbc.setState(0xae42, 0x8155, 0x3a40, 0x2b7b, 0xbd7b, 0x48b5, 0x1, 0x0);
        gbc.writeMem(0xae42, { 0x11, 0x1a, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8155);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0x11);
        EXPECT(gbc.readMem(0xae43), 0x1a);
        EXPECT(gbc.readMem(0xae44), 0x56);
        // 11 00A5
        gbc.setState(0xaea, 0x5cb3, 0x3670, 0x91cc, 0xacc5, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0xaea, { 0x11, 0x25, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5cb3);
        EXPECT(gbc.pc(), 0xaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00A6
        gbc.setState(0x70da, 0x474c, 0x1170, 0x21c, 0x463c, 0x7297, 0x1, 0x1);
        gbc.writeMem(0x70da, { 0x11, 0x85, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x474c);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00A7
        gbc.setState(0x36af, 0xe3c3, 0xeb40, 0x7611, 0xb5d8, 0x60a, 0x0, 0x1);
        gbc.writeMem(0x36af, { 0x11, 0x33, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe3c3);
        EXPECT(gbc.pc(), 0x36b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00A8
        gbc.setState(0x4eee, 0x2975, 0x9b80, 0x7666, 0x5665, 0x7508, 0x1, 0x0);
        gbc.writeMem(0x4eee, { 0x11, 0x19, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2975);
        EXPECT(gbc.pc(), 0x4ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00A9
        gbc.setState(0x20b1, 0xc07, 0xd010, 0xfa5b, 0x4189, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x20b1, { 0x11, 0xe, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc07);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00AA
        gbc.setState(0x9005, 0xf8d8, 0xc230, 0xd61e, 0x9d11, 0x2106, 0x1, 0x1);
        gbc.writeMem(0x9005, { 0x11, 0xed, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf8d8);
        EXPECT(gbc.pc(), 0x9008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9005), 0x11);
        EXPECT(gbc.readMem(0x9006), 0xed);
        EXPECT(gbc.readMem(0x9007), 0xc0);
        // 11 00AB
        gbc.setState(0x8f4e, 0x2961, 0xeb80, 0x5bf3, 0xbd4f, 0x7bcc, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0x11, 0x19, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2961);
        EXPECT(gbc.pc(), 0x8f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4e), 0x11);
        EXPECT(gbc.readMem(0x8f4f), 0x19);
        EXPECT(gbc.readMem(0x8f50), 0x1a);
        // 11 00AD
        gbc.setState(0xd1e0, 0xae27, 0xa880, 0x8186, 0xf874, 0x59cc, 0x1, 0x1);
        gbc.writeMem(0xd1e0, { 0x11, 0xb3, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xae27);
        EXPECT(gbc.pc(), 0xd1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e0), 0x11);
        EXPECT(gbc.readMem(0xd1e1), 0xb3);
        EXPECT(gbc.readMem(0xd1e2), 0xa);
        // 11 00AE
        gbc.setState(0xe1aa, 0x263a, 0x8320, 0x9fea, 0x812c, 0x11eb, 0x1, 0x1);
        gbc.writeMem(0xe1aa, { 0x11, 0x5e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0xe1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1aa), 0x11);
        EXPECT(gbc.readMem(0xe1ab), 0x5e);
        EXPECT(gbc.readMem(0xe1ac), 0x8b);
        // 11 00AF
        gbc.setState(0x4dc9, 0xb867, 0x2d60, 0xe76, 0xa67a, 0xa205, 0x0, 0x0);
        gbc.writeMem(0x4dc9, { 0x11, 0x57, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb867);
        EXPECT(gbc.pc(), 0x4dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00B0
        gbc.setState(0xbc89, 0x60a9, 0xca60, 0xcce2, 0xe22c, 0x272d, 0x1, 0x0);
        gbc.writeMem(0xbc89, { 0x11, 0xd2, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0xbc8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc89), 0x11);
        EXPECT(gbc.readMem(0xbc8a), 0xd2);
        EXPECT(gbc.readMem(0xbc8b), 0xf);
        // 11 00B1
        gbc.setState(0x237a, 0x160e, 0x5f70, 0x1056, 0xc86b, 0xa12a, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0x11, 0x1f, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x160e);
        EXPECT(gbc.pc(), 0x237d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00B2
        gbc.setState(0xefb1, 0x5028, 0x6630, 0x33bc, 0xc09b, 0x4dfc, 0x1, 0x1);
        gbc.writeMem(0xefb1, { 0x11, 0x33, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5028);
        EXPECT(gbc.pc(), 0xefb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb1), 0x11);
        EXPECT(gbc.readMem(0xefb2), 0x33);
        EXPECT(gbc.readMem(0xefb3), 0x83);
        // 11 00B3
        gbc.setState(0x8a11, 0xcbf1, 0x8900, 0x3ef0, 0xebc, 0x1c0b, 0x1, 0x1);
        gbc.writeMem(0x8a11, { 0x11, 0xf, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0x8a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a11), 0x11);
        EXPECT(gbc.readMem(0x8a12), 0xf);
        EXPECT(gbc.readMem(0x8a13), 0x57);
        // 11 00B6
        gbc.setState(0xae7, 0xcce1, 0xc7e0, 0xccab, 0xd29b, 0xb70a, 0x0, 0x0);
        gbc.writeMem(0xae7, { 0x11, 0xdb, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcce1);
        EXPECT(gbc.pc(), 0xaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00B7
        gbc.setState(0x2071, 0x33ce, 0x5ef0, 0x4e33, 0x25f0, 0xd06d, 0x1, 0x0);
        gbc.writeMem(0x2071, { 0x11, 0x3d, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x33ce);
        EXPECT(gbc.pc(), 0x2074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00B8
        gbc.setState(0x4380, 0xe478, 0xb1c0, 0xafae, 0x9b4e, 0x8c1f, 0x1, 0x0);
        gbc.writeMem(0x4380, { 0x11, 0x75, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe478);
        EXPECT(gbc.pc(), 0x4383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00B9
        gbc.setState(0x554f, 0x3a1b, 0x36c0, 0xe3f3, 0xe350, 0x5e17, 0x1, 0x1);
        gbc.writeMem(0x554f, { 0x11, 0xa5, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3a1b);
        EXPECT(gbc.pc(), 0x5552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00BA
        gbc.setState(0x11ac, 0xc803, 0xecd0, 0x6d94, 0xc5cd, 0x4323, 0x1, 0x0);
        gbc.writeMem(0x11ac, { 0x11, 0xc7, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc803);
        EXPECT(gbc.pc(), 0x11af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00BB
        gbc.setState(0x455d, 0x107e, 0x7a50, 0xaf11, 0xbf8, 0x38ac, 0x1, 0x1);
        gbc.writeMem(0x455d, { 0x11, 0x32, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x107e);
        EXPECT(gbc.pc(), 0x4560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00BC
        gbc.setState(0xaf7d, 0xf87c, 0x2c70, 0xe8a9, 0x2eca, 0x4f5c, 0x1, 0x0);
        gbc.writeMem(0xaf7d, { 0x11, 0x25, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf87c);
        EXPECT(gbc.pc(), 0xaf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7d), 0x11);
        EXPECT(gbc.readMem(0xaf7e), 0x25);
        EXPECT(gbc.readMem(0xaf7f), 0xf1);
        // 11 00BD
        gbc.setState(0xe31c, 0x4f4f, 0x59f0, 0x978d, 0x3619, 0xd659, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0x11, 0x45, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4f4f);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31c), 0x11);
        EXPECT(gbc.readMem(0xe31d), 0x45);
        EXPECT(gbc.readMem(0xe31e), 0xf4);
        // 11 00BE
        gbc.setState(0xe6ad, 0x23bb, 0x78f0, 0x5488, 0x9819, 0x6161, 0x1, 0x0);
        gbc.writeMem(0xe6ad, { 0x11, 0x5d, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0xe6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ad), 0x11);
        EXPECT(gbc.readMem(0xe6ae), 0x5d);
        EXPECT(gbc.readMem(0xe6af), 0xd);
        // 11 00BF
        gbc.setState(0x1e7d, 0xa254, 0x2580, 0x500e, 0x95f7, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x1e7d, { 0x11, 0x6, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa254);
        EXPECT(gbc.pc(), 0x1e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00C0
        gbc.setState(0x9a10, 0x220d, 0xa3a0, 0x26b4, 0x5e50, 0xd27b, 0x0, 0x1);
        gbc.writeMem(0x9a10, { 0x11, 0x27, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x220d);
        EXPECT(gbc.pc(), 0x9a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a10), 0x11);
        EXPECT(gbc.readMem(0x9a11), 0x27);
        EXPECT(gbc.readMem(0x9a12), 0x6f);
        // 11 00C1
        gbc.setState(0x7387, 0x2ed0, 0xd940, 0x92ad, 0xb51b, 0x237b, 0x1, 0x0);
        gbc.writeMem(0x7387, { 0x11, 0x12, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0x738a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00C2
        gbc.setState(0xea14, 0x7a46, 0xa090, 0xebc2, 0xf2a1, 0xbb76, 0x1, 0x1);
        gbc.writeMem(0xea14, { 0x11, 0x96, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7a46);
        EXPECT(gbc.pc(), 0xea17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea14), 0x11);
        EXPECT(gbc.readMem(0xea15), 0x96);
        EXPECT(gbc.readMem(0xea16), 0x2a);
        // 11 00C3
        gbc.setState(0xb246, 0xcee8, 0x92f0, 0xa8ed, 0x9a1f, 0x9796, 0x1, 0x0);
        gbc.writeMem(0xb246, { 0x11, 0xef, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcee8);
        EXPECT(gbc.pc(), 0xb249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb246), 0x11);
        EXPECT(gbc.readMem(0xb247), 0xef);
        EXPECT(gbc.readMem(0xb248), 0xb2);
        // 11 00C4
        gbc.setState(0x8d8f, 0xd7cc, 0x6f30, 0xb96a, 0x428e, 0xad55, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x11, 0xd7, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd7cc);
        EXPECT(gbc.pc(), 0x8d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8f), 0x11);
        EXPECT(gbc.readMem(0x8d90), 0xd7);
        EXPECT(gbc.readMem(0x8d91), 0x21);
        // 11 00C5
        gbc.setState(0x5785, 0x76ae, 0x8c70, 0xd0e4, 0x919b, 0x61c, 0x0, 0x1);
        gbc.writeMem(0x5785, { 0x11, 0x5c, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x76ae);
        EXPECT(gbc.pc(), 0x5788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00C6
        gbc.setState(0xc4e1, 0x4f7d, 0x95b0, 0x8c63, 0xdc98, 0x4884, 0x1, 0x0);
        gbc.writeMem(0xc4e1, { 0x11, 0x1d, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4f7d);
        EXPECT(gbc.pc(), 0xc4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e1), 0x11);
        EXPECT(gbc.readMem(0xc4e2), 0x1d);
        EXPECT(gbc.readMem(0xc4e3), 0x52);
        // 11 00C7
        gbc.setState(0x5119, 0xd077, 0xdcc0, 0x8283, 0xedb3, 0x2f3f, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0x11, 0xb1, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd077);
        EXPECT(gbc.pc(), 0x511c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00C8
        gbc.setState(0xb4ee, 0x4897, 0x8d60, 0x2422, 0x70b0, 0x1e71, 0x0, 0x1);
        gbc.writeMem(0xb4ee, { 0x11, 0x9b, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4897);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ee), 0x11);
        EXPECT(gbc.readMem(0xb4ef), 0x9b);
        EXPECT(gbc.readMem(0xb4f0), 0xb9);
        // 11 00C9
        gbc.setState(0x9e7f, 0x83e3, 0x42c0, 0x2657, 0x7f74, 0xca1c, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0x11, 0x67, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x83e3);
        EXPECT(gbc.pc(), 0x9e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7f), 0x11);
        EXPECT(gbc.readMem(0x9e80), 0x67);
        EXPECT(gbc.readMem(0x9e81), 0x96);
        // 11 00CA
        gbc.setState(0xb6b1, 0x83b, 0x7830, 0xd5f2, 0xd07a, 0xbb0c, 0x1, 0x0);
        gbc.writeMem(0xb6b1, { 0x11, 0x85, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x83b);
        EXPECT(gbc.pc(), 0xb6b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b1), 0x11);
        EXPECT(gbc.readMem(0xb6b2), 0x85);
        EXPECT(gbc.readMem(0xb6b3), 0x8b);
        // 11 00CB
        gbc.setState(0x1410, 0xa450, 0x9be0, 0x28bc, 0x1258, 0xd6bd, 0x1, 0x1);
        gbc.writeMem(0x1410, { 0x11, 0xce, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa450);
        EXPECT(gbc.pc(), 0x1413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00CC
        gbc.setState(0x2866, 0x9ec1, 0xcfb0, 0xe306, 0xf0f4, 0xf197, 0x1, 0x0);
        gbc.writeMem(0x2866, { 0x11, 0x44, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9ec1);
        EXPECT(gbc.pc(), 0x2869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00CD
        gbc.setState(0x98a8, 0xa55b, 0xb5e0, 0x5685, 0xcd85, 0x8656, 0x1, 0x1);
        gbc.writeMem(0x98a8, { 0x11, 0x74, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa55b);
        EXPECT(gbc.pc(), 0x98ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a8), 0x11);
        EXPECT(gbc.readMem(0x98a9), 0x74);
        EXPECT(gbc.readMem(0x98aa), 0x60);
        // 11 00CE
        gbc.setState(0xbaa3, 0xea7, 0x9880, 0x784c, 0x7651, 0xc491, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x11, 0x23, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xea7);
        EXPECT(gbc.pc(), 0xbaa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa3), 0x11);
        EXPECT(gbc.readMem(0xbaa4), 0x23);
        EXPECT(gbc.readMem(0xbaa5), 0x7d);
        // 11 00CF
        gbc.setState(0xb96f, 0x208a, 0xe300, 0x3c5e, 0x80ab, 0xc71, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0x11, 0x3f, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x208a);
        EXPECT(gbc.pc(), 0xb972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96f), 0x11);
        EXPECT(gbc.readMem(0xb970), 0x3f);
        EXPECT(gbc.readMem(0xb971), 0x19);
        // 11 00D0
        gbc.setState(0xb2bd, 0x9bc4, 0xd3a0, 0xb01d, 0xc2d1, 0xa2dd, 0x1, 0x1);
        gbc.writeMem(0xb2bd, { 0x11, 0xc0, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9bc4);
        EXPECT(gbc.pc(), 0xb2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2bd), 0x11);
        EXPECT(gbc.readMem(0xb2be), 0xc0);
        EXPECT(gbc.readMem(0xb2bf), 0x34);
        // 11 00D1
        gbc.setState(0x60a6, 0xd039, 0xb4f0, 0xf522, 0x9d33, 0x92a5, 0x0, 0x1);
        gbc.writeMem(0x60a6, { 0x11, 0x6c, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd039);
        EXPECT(gbc.pc(), 0x60a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00D2
        gbc.setState(0xc966, 0x7a5e, 0x5770, 0xa9b0, 0x93f9, 0x88ff, 0x1, 0x1);
        gbc.writeMem(0xc966, { 0x11, 0xcd, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7a5e);
        EXPECT(gbc.pc(), 0xc969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc966), 0x11);
        EXPECT(gbc.readMem(0xc967), 0xcd);
        EXPECT(gbc.readMem(0xc968), 0xd6);
        // 11 00D3
        gbc.setState(0x9055, 0xbd33, 0x3ad0, 0x68f1, 0x912e, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0x9055, { 0x11, 0x11, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbd33);
        EXPECT(gbc.pc(), 0x9058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9055), 0x11);
        EXPECT(gbc.readMem(0x9056), 0x11);
        EXPECT(gbc.readMem(0x9057), 0x79);
        // 11 00D4
        gbc.setState(0x10a6, 0xeeb0, 0x8f90, 0xd409, 0x2296, 0x1579, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0x11, 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xeeb0);
        EXPECT(gbc.pc(), 0x10a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00D5
        gbc.setState(0x4808, 0x1978, 0x4590, 0x404a, 0x364, 0xd903, 0x1, 0x0);
        gbc.writeMem(0x4808, { 0x11, 0x2, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1978);
        EXPECT(gbc.pc(), 0x480b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00D6
        gbc.setState(0x135f, 0x32c1, 0xec30, 0xccbc, 0x4636, 0x1a65, 0x0, 0x0);
        gbc.writeMem(0x135f, { 0x11, 0xfc, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x1362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00D7
        gbc.setState(0x6a01, 0xe974, 0xbed0, 0xdbee, 0xc3, 0x3b71, 0x1, 0x1);
        gbc.writeMem(0x6a01, { 0x11, 0xb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe974);
        EXPECT(gbc.pc(), 0x6a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00D8
        gbc.setState(0x73e0, 0xf987, 0x1770, 0x6913, 0xfc90, 0x14b8, 0x0, 0x1);
        gbc.writeMem(0x73e0, { 0x11, 0x40, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf987);
        EXPECT(gbc.pc(), 0x73e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00D9
        gbc.setState(0x1381, 0x9867, 0x2a70, 0x6191, 0xa3ae, 0x2374, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0x11, 0x7b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9867);
        EXPECT(gbc.pc(), 0x1384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00DA
        gbc.setState(0xb2df, 0xad26, 0x8b00, 0xa675, 0x8448, 0x9078, 0x1, 0x0);
        gbc.writeMem(0xb2df, { 0x11, 0xed, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xad26);
        EXPECT(gbc.pc(), 0xb2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2df), 0x11);
        EXPECT(gbc.readMem(0xb2e0), 0xed);
        EXPECT(gbc.readMem(0xb2e1), 0xea);
        // 11 00DB
        gbc.setState(0x11d8, 0x8545, 0x2520, 0x404b, 0xf9bf, 0x300b, 0x1, 0x0);
        gbc.writeMem(0x11d8, { 0x11, 0xfd, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8545);
        EXPECT(gbc.pc(), 0x11db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00DC
        gbc.setState(0x2381, 0xeea6, 0x5860, 0x3df1, 0xa0b2, 0xe181, 0x0, 0x1);
        gbc.writeMem(0x2381, { 0x11, 0x43, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeea6);
        EXPECT(gbc.pc(), 0x2384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00DD
        gbc.setState(0xea7f, 0x1354, 0xd560, 0xc7d2, 0xf283, 0x1fc5, 0x0, 0x1);
        gbc.writeMem(0xea7f, { 0x11, 0x5f, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1354);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7f), 0x11);
        EXPECT(gbc.readMem(0xea80), 0x5f);
        EXPECT(gbc.readMem(0xea81), 0xd7);
        // 11 00DF
        gbc.setState(0x7d04, 0x721e, 0xef60, 0x8392, 0x121b, 0x226a, 0x1, 0x1);
        gbc.writeMem(0x7d04, { 0x11, 0xae, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x721e);
        EXPECT(gbc.pc(), 0x7d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00E0
        gbc.setState(0xd62, 0xf18, 0xe550, 0x4baa, 0xdc6a, 0xec10, 0x0, 0x0);
        gbc.writeMem(0xd62, { 0x11, 0xe7, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf18);
        EXPECT(gbc.pc(), 0xd65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00E1
        gbc.setState(0x6477, 0x8d77, 0x5590, 0x6679, 0x438e, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0x6477, { 0x11, 0x42, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8d77);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00E2
        gbc.setState(0x3364, 0xe984, 0xce20, 0x9483, 0xc22d, 0xf10, 0x1, 0x0);
        gbc.writeMem(0x3364, { 0x11, 0xae, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe984);
        EXPECT(gbc.pc(), 0x3367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00E3
        gbc.setState(0xab1b, 0x4da9, 0x3b00, 0x9c85, 0xc13e, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0x11, 0xd0, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4da9);
        EXPECT(gbc.pc(), 0xab1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1b), 0x11);
        EXPECT(gbc.readMem(0xab1c), 0xd0);
        EXPECT(gbc.readMem(0xab1d), 0x90);
        // 11 00E5
        gbc.setState(0xcb85, 0xbbe2, 0xe100, 0xa196, 0x9072, 0xb9b4, 0x0, 0x0);
        gbc.writeMem(0xcb85, { 0x11, 0x59, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbbe2);
        EXPECT(gbc.pc(), 0xcb88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb85), 0x11);
        EXPECT(gbc.readMem(0xcb86), 0x59);
        EXPECT(gbc.readMem(0xcb87), 0xf0);
        // 11 00E6
        gbc.setState(0x44a1, 0x70cd, 0xa600, 0x881d, 0xb379, 0xe5ce, 0x1, 0x0);
        gbc.writeMem(0x44a1, { 0x11, 0x7, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x70cd);
        EXPECT(gbc.pc(), 0x44a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00E7
        gbc.setState(0xc083, 0x72dd, 0xcd20, 0x92fb, 0xb69a, 0x8a66, 0x1, 0x1);
        gbc.writeMem(0xc083, { 0x11, 0x99, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x72dd);
        EXPECT(gbc.pc(), 0xc086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0x11);
        EXPECT(gbc.readMem(0xc084), 0x99);
        EXPECT(gbc.readMem(0xc085), 0x43);
        // 11 00E8
        gbc.setState(0xa9c9, 0xd35f, 0x8380, 0x5823, 0x477e, 0x9057, 0x1, 0x1);
        gbc.writeMem(0xa9c9, { 0x11, 0x4, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd35f);
        EXPECT(gbc.pc(), 0xa9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c9), 0x11);
        EXPECT(gbc.readMem(0xa9ca), 0x4);
        EXPECT(gbc.readMem(0xa9cb), 0x82);
        // 11 00E9
        gbc.setState(0x2f51, 0x49a5, 0x86b0, 0xe267, 0x4ca7, 0xb140, 0x1, 0x0);
        gbc.writeMem(0x2f51, { 0x11, 0x1c, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x49a5);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00EA
        gbc.setState(0xa77e, 0x3a9b, 0xaf80, 0x1b3f, 0xafb2, 0xe34d, 0x0, 0x0);
        gbc.writeMem(0xa77e, { 0x11, 0x53, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3a9b);
        EXPECT(gbc.pc(), 0xa781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77e), 0x11);
        EXPECT(gbc.readMem(0xa77f), 0x53);
        EXPECT(gbc.readMem(0xa780), 0x28);
        // 11 00EB
        gbc.setState(0xe5e6, 0x6b1f, 0xcec0, 0x24e9, 0x583f, 0x5b85, 0x0, 0x0);
        gbc.writeMem(0xe5e6, { 0x11, 0x7d, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6b1f);
        EXPECT(gbc.pc(), 0xe5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e6), 0x11);
        EXPECT(gbc.readMem(0xe5e7), 0x7d);
        EXPECT(gbc.readMem(0xe5e8), 0x63);
        // 11 00EC
        gbc.setState(0xe70e, 0xc2dd, 0x7e50, 0x920b, 0xf9b3, 0x695a, 0x0, 0x0);
        gbc.writeMem(0xe70e, { 0x11, 0xff, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc2dd);
        EXPECT(gbc.pc(), 0xe711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70e), 0x11);
        EXPECT(gbc.readMem(0xe70f), 0xff);
        EXPECT(gbc.readMem(0xe710), 0xbf);
        // 11 00ED
        gbc.setState(0xd45f, 0x7f97, 0x73c0, 0xbe78, 0x2047, 0x1755, 0x1, 0x0);
        gbc.writeMem(0xd45f, { 0x11, 0x2e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7f97);
        EXPECT(gbc.pc(), 0xd462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd45f), 0x11);
        EXPECT(gbc.readMem(0xd460), 0x2e);
        EXPECT(gbc.readMem(0xd461), 0x47);
        // 11 00EE
        gbc.setState(0x2c46, 0xb1b8, 0x1ef0, 0xa804, 0xc24b, 0x5193, 0x1, 0x1);
        gbc.writeMem(0x2c46, { 0x11, 0x82, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0x2c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00EF
        gbc.setState(0x6d29, 0x2852, 0xd820, 0x5910, 0x6ab3, 0x3e88, 0x1, 0x0);
        gbc.writeMem(0x6d29, { 0x11, 0xcf, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2852);
        EXPECT(gbc.pc(), 0x6d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00F0
        gbc.setState(0x6fc6, 0x8d48, 0x3b0, 0xee28, 0x39eb, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0x6fc6, { 0x11, 0x2d, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8d48);
        EXPECT(gbc.pc(), 0x6fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00F1
        gbc.setState(0x63a2, 0x97cf, 0x94d0, 0xf947, 0xee2d, 0xb0c6, 0x0, 0x1);
        gbc.writeMem(0x63a2, { 0x11, 0xc6, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x97cf);
        EXPECT(gbc.pc(), 0x63a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00F2
        gbc.setState(0xadcb, 0x40ff, 0x61f0, 0x2809, 0x3f6, 0xd3e2, 0x0, 0x1);
        gbc.writeMem(0xadcb, { 0x11, 0x99, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x40ff);
        EXPECT(gbc.pc(), 0xadce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadcb), 0x11);
        EXPECT(gbc.readMem(0xadcc), 0x99);
        EXPECT(gbc.readMem(0xadcd), 0xe6);
        // 11 00F3
        gbc.setState(0x8d76, 0x5325, 0xe0c0, 0xc8b9, 0x6078, 0x4610, 0x0, 0x1);
        gbc.writeMem(0x8d76, { 0x11, 0x86, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5325);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d76), 0x11);
        EXPECT(gbc.readMem(0x8d77), 0x86);
        EXPECT(gbc.readMem(0x8d78), 0x68);
        // 11 00F4
        gbc.setState(0x2898, 0xa30, 0xdd90, 0xf7de, 0x78f5, 0x73d8, 0x1, 0x0);
        gbc.writeMem(0x2898, { 0x11, 0xd4, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0x289b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 00F5
        gbc.setState(0x33f5, 0x5db0, 0xab30, 0xf4ba, 0xdbff, 0xca03, 0x0, 0x1);
        gbc.writeMem(0x33f5, { 0x11, 0x4a, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5db0);
        EXPECT(gbc.pc(), 0x33f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 00F6
        gbc.setState(0x66dc, 0x1377, 0xd0a0, 0x1c29, 0x7ee8, 0x9906, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0x11, 0x10, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1377);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 00F7
        gbc.setState(0xbe6a, 0x6f1d, 0x3c60, 0x4ad, 0x675a, 0xc01b, 0x1, 0x0);
        gbc.writeMem(0xbe6a, { 0x11, 0x73, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6f1d);
        EXPECT(gbc.pc(), 0xbe6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6a), 0x11);
        EXPECT(gbc.readMem(0xbe6b), 0x73);
        EXPECT(gbc.readMem(0xbe6c), 0x60);
        // 11 00F8
        gbc.setState(0x61c, 0xe84, 0x7380, 0xb97d, 0x2f58, 0x7e85, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0x11, 0xe1, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe84);
        EXPECT(gbc.pc(), 0x61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00FA
        gbc.setState(0xdead, 0x8208, 0xdf30, 0xf87e, 0x86a1, 0xc45, 0x0, 0x1);
        gbc.writeMem(0xdead, { 0x11, 0xe8, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8208);
        EXPECT(gbc.pc(), 0xdeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdead), 0x11);
        EXPECT(gbc.readMem(0xdeae), 0xe8);
        EXPECT(gbc.readMem(0xdeaf), 0xe5);
        // 11 00FB
        gbc.setState(0xb689, 0xca73, 0x39d0, 0x458c, 0x6ab2, 0x58aa, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0x11, 0xfd, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xca73);
        EXPECT(gbc.pc(), 0xb68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb689), 0x11);
        EXPECT(gbc.readMem(0xb68a), 0xfd);
        EXPECT(gbc.readMem(0xb68b), 0x19);
        // 11 00FC
        gbc.setState(0x704, 0x5f2f, 0x5100, 0x2148, 0x4b0f, 0x9e60, 0x1, 0x0);
        gbc.writeMem(0x704, { 0x11, 0x27, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5f2f);
        EXPECT(gbc.pc(), 0x707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00FD
        gbc.setState(0x252f, 0x423f, 0x2e80, 0x441d, 0x495b, 0x6a22, 0x1, 0x1);
        gbc.writeMem(0x252f, { 0x11, 0x5e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x423f);
        EXPECT(gbc.pc(), 0x2532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00FE
        gbc.setState(0x18a, 0xe059, 0xb080, 0x7a24, 0x9f95, 0x7012, 0x1, 0x0);
        gbc.writeMem(0x18a, { 0x11, 0x8f, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe059);
        EXPECT(gbc.pc(), 0x18d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 00FF
        gbc.setState(0xc5c8, 0xd5e9, 0xbb80, 0xef0b, 0xfccc, 0xecf1, 0x1, 0x0);
        gbc.writeMem(0xc5c8, { 0x11, 0xe1, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd5e9);
        EXPECT(gbc.pc(), 0xc5cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c8), 0x11);
        EXPECT(gbc.readMem(0xc5c9), 0xe1);
        EXPECT(gbc.readMem(0xc5ca), 0xf1);
        // 11 0100
        gbc.setState(0x54c, 0x8095, 0xdfe0, 0x74e7, 0x82b5, 0xb7c6, 0x0, 0x0);
        gbc.writeMem(0x54c, { 0x11, 0xd2, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8095);
        EXPECT(gbc.pc(), 0x54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0101
        gbc.setState(0xb284, 0x685, 0x2460, 0x8c0c, 0xf32d, 0xdc5c, 0x0, 0x1);
        gbc.writeMem(0xb284, { 0x11, 0xcf, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x685);
        EXPECT(gbc.pc(), 0xb287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb284), 0x11);
        EXPECT(gbc.readMem(0xb285), 0xcf);
        EXPECT(gbc.readMem(0xb286), 0x8a);
        // 11 0102
        gbc.setState(0x1090, 0xf681, 0xd820, 0x67fc, 0x4208, 0x7329, 0x0, 0x0);
        gbc.writeMem(0x1090, { 0x11, 0x6c, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf681);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0103
        gbc.setState(0xcbd1, 0xe57c, 0x34e0, 0x581d, 0xc0b7, 0xf4eb, 0x0, 0x0);
        gbc.writeMem(0xcbd1, { 0x11, 0x82, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe57c);
        EXPECT(gbc.pc(), 0xcbd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd1), 0x11);
        EXPECT(gbc.readMem(0xcbd2), 0x82);
        EXPECT(gbc.readMem(0xcbd3), 0xcd);
        // 11 0104
        gbc.setState(0x5b93, 0xc54d, 0xe630, 0xa62f, 0xa77e, 0xbab, 0x1, 0x0);
        gbc.writeMem(0x5b93, { 0x11, 0xe1, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc54d);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0105
        gbc.setState(0x7819, 0xd0bb, 0xeb30, 0x28a4, 0x4c72, 0x910e, 0x0, 0x0);
        gbc.writeMem(0x7819, { 0x11, 0xd0, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd0bb);
        EXPECT(gbc.pc(), 0x781c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0106
        gbc.setState(0x3fd3, 0xac75, 0xc160, 0xbab3, 0xe57c, 0xdc1e, 0x1, 0x1);
        gbc.writeMem(0x3fd3, { 0x11, 0x3c, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xac75);
        EXPECT(gbc.pc(), 0x3fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0107
        gbc.setState(0x44af, 0x46e8, 0xf730, 0x3fdb, 0x356d, 0x7478, 0x0, 0x0);
        gbc.writeMem(0x44af, { 0x11, 0x82, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x46e8);
        EXPECT(gbc.pc(), 0x44b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0108
        gbc.setState(0xd3ab, 0x7684, 0xf780, 0x7544, 0xfbf4, 0x5117, 0x1, 0x0);
        gbc.writeMem(0xd3ab, { 0x11, 0xed, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7684);
        EXPECT(gbc.pc(), 0xd3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ab), 0x11);
        EXPECT(gbc.readMem(0xd3ac), 0xed);
        EXPECT(gbc.readMem(0xd3ad), 0x64);
        // 11 0109
        gbc.setState(0x88c5, 0xa0aa, 0x8690, 0x6c3c, 0x3f6c, 0xefba, 0x0, 0x0);
        gbc.writeMem(0x88c5, { 0x11, 0xb, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa0aa);
        EXPECT(gbc.pc(), 0x88c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c5), 0x11);
        EXPECT(gbc.readMem(0x88c6), 0xb);
        EXPECT(gbc.readMem(0x88c7), 0x22);
        // 11 010A
        gbc.setState(0xa142, 0xe285, 0xd600, 0xeff3, 0x3852, 0xf6f4, 0x0, 0x0);
        gbc.writeMem(0xa142, { 0x11, 0x97, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe285);
        EXPECT(gbc.pc(), 0xa145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa142), 0x11);
        EXPECT(gbc.readMem(0xa143), 0x97);
        EXPECT(gbc.readMem(0xa144), 0xe1);
        // 11 010B
        gbc.setState(0x8073, 0x6482, 0xb310, 0x2d7f, 0x7706, 0x9964, 0x1, 0x1);
        gbc.writeMem(0x8073, { 0x11, 0xb0, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6482);
        EXPECT(gbc.pc(), 0x8076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8073), 0x11);
        EXPECT(gbc.readMem(0x8074), 0xb0);
        EXPECT(gbc.readMem(0x8075), 0x49);
        // 11 010C
        gbc.setState(0x26a5, 0x72fc, 0xd2c0, 0xa840, 0xe0f4, 0x7b0f, 0x0, 0x0);
        gbc.writeMem(0x26a5, { 0x11, 0x4b, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x72fc);
        EXPECT(gbc.pc(), 0x26a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 010D
        gbc.setState(0x5c55, 0xa602, 0xae10, 0x75b8, 0xcc4c, 0x1b21, 0x0, 0x0);
        gbc.writeMem(0x5c55, { 0x11, 0xfb, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa602);
        EXPECT(gbc.pc(), 0x5c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 010E
        gbc.setState(0xa907, 0x290b, 0x2850, 0x48bc, 0xe76, 0x870c, 0x1, 0x0);
        gbc.writeMem(0xa907, { 0x11, 0xb6, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0xa90a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa907), 0x11);
        EXPECT(gbc.readMem(0xa908), 0xb6);
        EXPECT(gbc.readMem(0xa909), 0x2d);
        // 11 0110
        gbc.setState(0x3a1b, 0xa837, 0x6e70, 0x7fd9, 0x69dc, 0xdc19, 0x0, 0x1);
        gbc.writeMem(0x3a1b, { 0x11, 0xb8, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa837);
        EXPECT(gbc.pc(), 0x3a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0111
        gbc.setState(0x6828, 0xa069, 0x83f0, 0x4219, 0x84d6, 0xe9f2, 0x0, 0x0);
        gbc.writeMem(0x6828, { 0x11, 0xde, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa069);
        EXPECT(gbc.pc(), 0x682b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0112
        gbc.setState(0xebd5, 0xadc5, 0x2e40, 0x72c3, 0x559e, 0x2825, 0x1, 0x0);
        gbc.writeMem(0xebd5, { 0x11, 0x1a, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0xebd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd5), 0x11);
        EXPECT(gbc.readMem(0xebd6), 0x1a);
        EXPECT(gbc.readMem(0xebd7), 0xb5);
        // 11 0113
        gbc.setState(0x98d0, 0xfffb, 0x7920, 0xaf9e, 0xcf95, 0xe454, 0x0, 0x0);
        gbc.writeMem(0x98d0, { 0x11, 0x85, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfffb);
        EXPECT(gbc.pc(), 0x98d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d0), 0x11);
        EXPECT(gbc.readMem(0x98d1), 0x85);
        EXPECT(gbc.readMem(0x98d2), 0x1f);
        // 11 0114
        gbc.setState(0x6b97, 0x66ae, 0x8ad0, 0xff87, 0x4134, 0xcef, 0x1, 0x1);
        gbc.writeMem(0x6b97, { 0x11, 0x72, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x66ae);
        EXPECT(gbc.pc(), 0x6b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0115
        gbc.setState(0xe70a, 0xdda, 0x4af0, 0xf397, 0x5f77, 0x86e4, 0x1, 0x0);
        gbc.writeMem(0xe70a, { 0x11, 0xd7, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdda);
        EXPECT(gbc.pc(), 0xe70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70a), 0x11);
        EXPECT(gbc.readMem(0xe70b), 0xd7);
        EXPECT(gbc.readMem(0xe70c), 0xc7);
        // 11 0116
        gbc.setState(0xa8b2, 0x99de, 0x5560, 0xe5df, 0x4f24, 0x8f4f, 0x0, 0x0);
        gbc.writeMem(0xa8b2, { 0x11, 0x64, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x99de);
        EXPECT(gbc.pc(), 0xa8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b2), 0x11);
        EXPECT(gbc.readMem(0xa8b3), 0x64);
        EXPECT(gbc.readMem(0xa8b4), 0xf6);
        // 11 0117
        gbc.setState(0x16d5, 0x4695, 0x28b0, 0xe620, 0xb00d, 0x40ae, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0x11, 0x3f, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4695);
        EXPECT(gbc.pc(), 0x16d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0118
        gbc.setState(0x7f42, 0x816d, 0x3fe0, 0xbc1d, 0x6a6, 0x26be, 0x0, 0x1);
        gbc.writeMem(0x7f42, { 0x11, 0x94, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0x7f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0119
        gbc.setState(0xae67, 0x12d2, 0xc230, 0xd773, 0x46bf, 0x13aa, 0x0, 0x0);
        gbc.writeMem(0xae67, { 0x11, 0xc6, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x12d2);
        EXPECT(gbc.pc(), 0xae6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae67), 0x11);
        EXPECT(gbc.readMem(0xae68), 0xc6);
        EXPECT(gbc.readMem(0xae69), 0xd8);
        // 11 011A
        gbc.setState(0x862e, 0x6de2, 0x54a0, 0x1abd, 0x4758, 0x837d, 0x1, 0x0);
        gbc.writeMem(0x862e, { 0x11, 0x7d, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6de2);
        EXPECT(gbc.pc(), 0x8631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x862e), 0x11);
        EXPECT(gbc.readMem(0x862f), 0x7d);
        EXPECT(gbc.readMem(0x8630), 0xe);
        // 11 011B
        gbc.setState(0x4c06, 0xb637, 0xe70, 0x3ac3, 0xc883, 0x6fce, 0x0, 0x0);
        gbc.writeMem(0x4c06, { 0x11, 0x89, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb637);
        EXPECT(gbc.pc(), 0x4c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 011C
        gbc.setState(0x6bc, 0x5a77, 0x1820, 0x56b9, 0xada, 0x492, 0x1, 0x0);
        gbc.writeMem(0x6bc, { 0x11, 0xf6, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5a77);
        EXPECT(gbc.pc(), 0x6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 011D
        gbc.setState(0xd404, 0x9661, 0x4630, 0x87a7, 0x1bad, 0x32b5, 0x1, 0x0);
        gbc.writeMem(0xd404, { 0x11, 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9661);
        EXPECT(gbc.pc(), 0xd407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd404), 0x11);
        EXPECT(gbc.readMem(0xd405), 0x28);
        EXPECT(gbc.readMem(0xd406), 0x20);
        // 11 011E
        gbc.setState(0x32ed, 0x1e5d, 0xfd00, 0x7038, 0x97a5, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x32ed, { 0x11, 0x9c, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1e5d);
        EXPECT(gbc.pc(), 0x32f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 011F
        gbc.setState(0x15a, 0x918c, 0x89d0, 0x6c7f, 0xa801, 0x1729, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0x11, 0x9b, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x918c);
        EXPECT(gbc.pc(), 0x15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0120
        gbc.setState(0x2069, 0xc159, 0xc590, 0xa008, 0xa1b7, 0x15fb, 0x0, 0x0);
        gbc.writeMem(0x2069, { 0x11, 0x43, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc159);
        EXPECT(gbc.pc(), 0x206c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0122
        gbc.setState(0xdfe, 0x1a4c, 0x6110, 0xb051, 0x4ac8, 0x853b, 0x0, 0x1);
        gbc.writeMem(0xdfe, { 0x11, 0x8d, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1a4c);
        EXPECT(gbc.pc(), 0xe01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0123
        gbc.setState(0x431f, 0x1e9f, 0x7fa0, 0xa9ff, 0x4561, 0xd5c2, 0x1, 0x1);
        gbc.writeMem(0x431f, { 0x11, 0x71, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1e9f);
        EXPECT(gbc.pc(), 0x4322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0125
        gbc.setState(0xbc2f, 0x2666, 0xb10, 0x6b5b, 0x10e0, 0x237b, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0x11, 0x13, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2666);
        EXPECT(gbc.pc(), 0xbc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2f), 0x11);
        EXPECT(gbc.readMem(0xbc30), 0x13);
        EXPECT(gbc.readMem(0xbc31), 0xf7);
        // 11 0127
        gbc.setState(0xd2e0, 0xb893, 0xf3a0, 0x9bb9, 0x8d02, 0x4732, 0x0, 0x1);
        gbc.writeMem(0xd2e0, { 0x11, 0x5a, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb893);
        EXPECT(gbc.pc(), 0xd2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e0), 0x11);
        EXPECT(gbc.readMem(0xd2e1), 0x5a);
        EXPECT(gbc.readMem(0xd2e2), 0xcb);
        // 11 0128
        gbc.setState(0x4d69, 0xe02f, 0xbea0, 0x68ba, 0x9e79, 0x8dfb, 0x0, 0x0);
        gbc.writeMem(0x4d69, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe02f);
        EXPECT(gbc.pc(), 0x4d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0129
        gbc.setState(0xd6c6, 0x4ce7, 0x8440, 0xea3b, 0x4ae0, 0x405e, 0x0, 0x0);
        gbc.writeMem(0xd6c6, { 0x11, 0x34, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4ce7);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c6), 0x11);
        EXPECT(gbc.readMem(0xd6c7), 0x34);
        EXPECT(gbc.readMem(0xd6c8), 0x7f);
        // 11 012A
        gbc.setState(0x8e6f, 0xd9b7, 0x5e70, 0x846d, 0x4821, 0x3bf0, 0x1, 0x0);
        gbc.writeMem(0x8e6f, { 0x11, 0x44, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd9b7);
        EXPECT(gbc.pc(), 0x8e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6f), 0x11);
        EXPECT(gbc.readMem(0x8e70), 0x44);
        EXPECT(gbc.readMem(0x8e71), 0xcd);
        // 11 012B
        gbc.setState(0x6542, 0x357, 0xe010, 0xc4a1, 0x331d, 0x3102, 0x1, 0x1);
        gbc.writeMem(0x6542, { 0x11, 0x5e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x357);
        EXPECT(gbc.pc(), 0x6545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 012C
        gbc.setState(0x3181, 0x9ac7, 0x6ac0, 0x95d4, 0xbc76, 0x7473, 0x1, 0x0);
        gbc.writeMem(0x3181, { 0x11, 0x3f, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9ac7);
        EXPECT(gbc.pc(), 0x3184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 012D
        gbc.setState(0xcf8e, 0x70af, 0xe230, 0x2bae, 0xa6d3, 0xcbc6, 0x1, 0x1);
        gbc.writeMem(0xcf8e, { 0x11, 0xf5, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x70af);
        EXPECT(gbc.pc(), 0xcf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8e), 0x11);
        EXPECT(gbc.readMem(0xcf8f), 0xf5);
        EXPECT(gbc.readMem(0xcf90), 0xcf);
        // 11 012E
        gbc.setState(0xb8c3, 0x2d43, 0xbd00, 0x8d54, 0xfbc4, 0x972a, 0x1, 0x0);
        gbc.writeMem(0xb8c3, { 0x11, 0xa2, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2d43);
        EXPECT(gbc.pc(), 0xb8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c3), 0x11);
        EXPECT(gbc.readMem(0xb8c4), 0xa2);
        EXPECT(gbc.readMem(0xb8c5), 0x7d);
        // 11 012F
        gbc.setState(0x2b2f, 0xd944, 0x6bb0, 0xf786, 0xf22c, 0x900b, 0x0, 0x0);
        gbc.writeMem(0x2b2f, { 0x11, 0x7b, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd944);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0130
        gbc.setState(0x4a29, 0xb140, 0x2b00, 0x9e83, 0xf7b3, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x4a29, { 0x11, 0xbc, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb140);
        EXPECT(gbc.pc(), 0x4a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0131
        gbc.setState(0xe212, 0x444f, 0x5e30, 0x2fce, 0xcc61, 0x4c43, 0x1, 0x0);
        gbc.writeMem(0xe212, { 0x11, 0x8c, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x444f);
        EXPECT(gbc.pc(), 0xe215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe212), 0x11);
        EXPECT(gbc.readMem(0xe213), 0x8c);
        EXPECT(gbc.readMem(0xe214), 0xd0);
        // 11 0132
        gbc.setState(0xb631, 0xeb44, 0xd510, 0x8e4e, 0xfd0e, 0x8cff, 0x1, 0x0);
        gbc.writeMem(0xb631, { 0x11, 0xfb, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xeb44);
        EXPECT(gbc.pc(), 0xb634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb631), 0x11);
        EXPECT(gbc.readMem(0xb632), 0xfb);
        EXPECT(gbc.readMem(0xb633), 0x2c);
        // 11 0133
        gbc.setState(0x8ad, 0xb445, 0x1840, 0x45a4, 0xf453, 0x72df, 0x0, 0x0);
        gbc.writeMem(0x8ad, { 0x11, 0x72, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb445);
        EXPECT(gbc.pc(), 0x8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0134
        gbc.setState(0xb200, 0x221d, 0x1fa0, 0xe050, 0x7f63, 0xe116, 0x0, 0x0);
        gbc.writeMem(0xb200, { 0x11, 0xa7, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x221d);
        EXPECT(gbc.pc(), 0xb203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb200), 0x11);
        EXPECT(gbc.readMem(0xb201), 0xa7);
        EXPECT(gbc.readMem(0xb202), 0xb);
        // 11 0136
        gbc.setState(0xa1a5, 0xf985, 0xdf30, 0xdbb9, 0x98fc, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0xa1a5, { 0x11, 0xd0, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0xa1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a5), 0x11);
        EXPECT(gbc.readMem(0xa1a6), 0xd0);
        EXPECT(gbc.readMem(0xa1a7), 0xc4);
        // 11 0137
        gbc.setState(0xd332, 0xbf4f, 0x8630, 0x2862, 0x59d6, 0x7d2f, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0x11, 0x39, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd332), 0x11);
        EXPECT(gbc.readMem(0xd333), 0x39);
        EXPECT(gbc.readMem(0xd334), 0xe0);
        // 11 0138
        gbc.setState(0xe8dc, 0xd5fe, 0xfff0, 0x9e0e, 0x5015, 0xc0db, 0x1, 0x1);
        gbc.writeMem(0xe8dc, { 0x11, 0x96, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd5fe);
        EXPECT(gbc.pc(), 0xe8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8dc), 0x11);
        EXPECT(gbc.readMem(0xe8dd), 0x96);
        EXPECT(gbc.readMem(0xe8de), 0x5a);
        // 11 0139
        gbc.setState(0xeb60, 0x99b5, 0x1d30, 0x8314, 0xc59e, 0x62cf, 0x0, 0x1);
        gbc.writeMem(0xeb60, { 0x11, 0x2c, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x99b5);
        EXPECT(gbc.pc(), 0xeb63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb60), 0x11);
        EXPECT(gbc.readMem(0xeb61), 0x2c);
        EXPECT(gbc.readMem(0xeb62), 0x93);
        // 11 013B
        gbc.setState(0xb5a8, 0x5ed9, 0x4c90, 0x5187, 0x5e60, 0xf0e3, 0x0, 0x0);
        gbc.writeMem(0xb5a8, { 0x11, 0x3e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5ed9);
        EXPECT(gbc.pc(), 0xb5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a8), 0x11);
        EXPECT(gbc.readMem(0xb5a9), 0x3e);
        EXPECT(gbc.readMem(0xb5aa), 0xa8);
        // 11 013C
        gbc.setState(0x3de9, 0xb5fe, 0x2b50, 0x8587, 0x96e6, 0x76c5, 0x0, 0x0);
        gbc.writeMem(0x3de9, { 0x11, 0xb0, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb5fe);
        EXPECT(gbc.pc(), 0x3dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 013D
        gbc.setState(0xcc1a, 0xf995, 0x83e0, 0xbff, 0x5bf0, 0xae8f, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0x11, 0xc3, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf995);
        EXPECT(gbc.pc(), 0xcc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1a), 0x11);
        EXPECT(gbc.readMem(0xcc1b), 0xc3);
        EXPECT(gbc.readMem(0xcc1c), 0xcd);
        // 11 013E
        gbc.setState(0x3cd5, 0x4770, 0x5130, 0xf27a, 0xa6ab, 0x913e, 0x1, 0x1);
        gbc.writeMem(0x3cd5, { 0x11, 0x75, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4770);
        EXPECT(gbc.pc(), 0x3cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 013F
        gbc.setState(0xd46b, 0x8e5c, 0xd530, 0xdb0b, 0xa9c3, 0x7a4, 0x0, 0x1);
        gbc.writeMem(0xd46b, { 0x11, 0xf, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8e5c);
        EXPECT(gbc.pc(), 0xd46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46b), 0x11);
        EXPECT(gbc.readMem(0xd46c), 0xf);
        EXPECT(gbc.readMem(0xd46d), 0xfe);
        // 11 0140
        gbc.setState(0x4adc, 0x258a, 0x2230, 0xf4f7, 0xdd6e, 0x1df2, 0x1, 0x0);
        gbc.writeMem(0x4adc, { 0x11, 0x50, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x258a);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0141
        gbc.setState(0x9a81, 0x6168, 0xbc90, 0xc4a, 0xbcf5, 0x5ddf, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0x11, 0x41, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0x9a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a81), 0x11);
        EXPECT(gbc.readMem(0x9a82), 0x41);
        EXPECT(gbc.readMem(0x9a83), 0xdd);
        // 11 0142
        gbc.setState(0x69bb, 0x2785, 0xe250, 0xaa29, 0x7ece, 0x16b3, 0x1, 0x1);
        gbc.writeMem(0x69bb, { 0x11, 0xf3, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2785);
        EXPECT(gbc.pc(), 0x69be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0143
        gbc.setState(0x4a67, 0x82cc, 0xaaf0, 0x5d63, 0x21db, 0xa69d, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0x11, 0x86, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x82cc);
        EXPECT(gbc.pc(), 0x4a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0144
        gbc.setState(0x4f0f, 0xa112, 0xcf50, 0x4b4e, 0x6e0d, 0x2e69, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0x11, 0xc9, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa112);
        EXPECT(gbc.pc(), 0x4f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0145
        gbc.setState(0xbeca, 0x49fb, 0xf090, 0x2237, 0x3b59, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0xbeca, { 0x11, 0x9, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x49fb);
        EXPECT(gbc.pc(), 0xbecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeca), 0x11);
        EXPECT(gbc.readMem(0xbecb), 0x9);
        EXPECT(gbc.readMem(0xbecc), 0x39);
        // 11 0146
        gbc.setState(0x120a, 0x57b3, 0xa990, 0x9700, 0x7bac, 0x81ab, 0x1, 0x1);
        gbc.writeMem(0x120a, { 0x11, 0x89, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x57b3);
        EXPECT(gbc.pc(), 0x120d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0147
        gbc.setState(0x2ffb, 0xda4e, 0xde0, 0x5a4e, 0x32cd, 0xf4fd, 0x1, 0x1);
        gbc.writeMem(0x2ffb, { 0x11, 0x18, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xda4e);
        EXPECT(gbc.pc(), 0x2ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0148
        gbc.setState(0x7a9f, 0x73a9, 0xe400, 0xabe6, 0x470, 0xf73e, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0x11, 0x94, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x73a9);
        EXPECT(gbc.pc(), 0x7aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0149
        gbc.setState(0xa198, 0x190b, 0xd720, 0x5a1e, 0xb37e, 0x711d, 0x0, 0x0);
        gbc.writeMem(0xa198, { 0x11, 0x7f, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x190b);
        EXPECT(gbc.pc(), 0xa19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa198), 0x11);
        EXPECT(gbc.readMem(0xa199), 0x7f);
        EXPECT(gbc.readMem(0xa19a), 0xf3);
        // 11 014A
        gbc.setState(0x3f21, 0x589c, 0x2740, 0x7fac, 0xec34, 0x90a, 0x1, 0x1);
        gbc.writeMem(0x3f21, { 0x11, 0xeb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x589c);
        EXPECT(gbc.pc(), 0x3f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 014B
        gbc.setState(0x4444, 0xe4be, 0x8360, 0x1448, 0x2572, 0xa61, 0x0, 0x1);
        gbc.writeMem(0x4444, { 0x11, 0x6e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe4be);
        EXPECT(gbc.pc(), 0x4447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 014C
        gbc.setState(0xdd05, 0xd08a, 0x6a90, 0x5096, 0x7078, 0xe4a7, 0x0, 0x1);
        gbc.writeMem(0xdd05, { 0x11, 0x77, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd08a);
        EXPECT(gbc.pc(), 0xdd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd05), 0x11);
        EXPECT(gbc.readMem(0xdd06), 0x77);
        EXPECT(gbc.readMem(0xdd07), 0xe7);
        // 11 014D
        gbc.setState(0xd7d, 0xc10d, 0x92e0, 0xf13d, 0x2422, 0xf06b, 0x0, 0x1);
        gbc.writeMem(0xd7d, { 0x11, 0xf0, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc10d);
        EXPECT(gbc.pc(), 0xd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 014E
        gbc.setState(0x808d, 0x7e93, 0xd840, 0x8cb5, 0x96b3, 0xdf1a, 0x1, 0x1);
        gbc.writeMem(0x808d, { 0x11, 0x5c, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7e93);
        EXPECT(gbc.pc(), 0x8090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x808d), 0x11);
        EXPECT(gbc.readMem(0x808e), 0x5c);
        EXPECT(gbc.readMem(0x808f), 0x7f);
        // 11 014F
        gbc.setState(0x1c4b, 0x8206, 0x5e90, 0x297e, 0xeba0, 0x3b6e, 0x1, 0x1);
        gbc.writeMem(0x1c4b, { 0x11, 0x4e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8206);
        EXPECT(gbc.pc(), 0x1c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0150
        gbc.setState(0x1283, 0xb3ca, 0x7d90, 0xce8d, 0x9423, 0x957f, 0x1, 0x1);
        gbc.writeMem(0x1283, { 0x11, 0x77, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb3ca);
        EXPECT(gbc.pc(), 0x1286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0151
        gbc.setState(0x2c6d, 0x3d81, 0x1d10, 0x5195, 0x89bd, 0xd5d1, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0x11, 0x12, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0x2c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0152
        gbc.setState(0x3259, 0x651e, 0xeee0, 0x247d, 0x848a, 0x4949, 0x1, 0x1);
        gbc.writeMem(0x3259, { 0x11, 0xff, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x651e);
        EXPECT(gbc.pc(), 0x325c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0153
        gbc.setState(0xd5ab, 0x830f, 0x99f0, 0x2793, 0x5e73, 0xc61e, 0x0, 0x0);
        gbc.writeMem(0xd5ab, { 0x11, 0xf1, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x830f);
        EXPECT(gbc.pc(), 0xd5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ab), 0x11);
        EXPECT(gbc.readMem(0xd5ac), 0xf1);
        EXPECT(gbc.readMem(0xd5ad), 0xf8);
        // 11 0154
        gbc.setState(0x88b9, 0x8921, 0x2610, 0x1db0, 0xc804, 0x46c6, 0x0, 0x1);
        gbc.writeMem(0x88b9, { 0x11, 0x8a, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0x88bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b9), 0x11);
        EXPECT(gbc.readMem(0x88ba), 0x8a);
        EXPECT(gbc.readMem(0x88bb), 0xfb);
        // 11 0155
        gbc.setState(0x845f, 0xb46b, 0x1060, 0x5139, 0xe87c, 0xdb8, 0x0, 0x1);
        gbc.writeMem(0x845f, { 0x11, 0x4e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb46b);
        EXPECT(gbc.pc(), 0x8462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845f), 0x11);
        EXPECT(gbc.readMem(0x8460), 0x4e);
        EXPECT(gbc.readMem(0x8461), 0xb1);
        // 11 0156
        gbc.setState(0x4d3, 0x22f, 0x5f0, 0xea, 0x5c05, 0x462c, 0x0, 0x1);
        gbc.writeMem(0x4d3, { 0x11, 0x93, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0x4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0157
        gbc.setState(0x83f6, 0xe2ec, 0x3be0, 0xd7bb, 0x2eeb, 0x44da, 0x1, 0x1);
        gbc.writeMem(0x83f6, { 0x11, 0xd1, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe2ec);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f6), 0x11);
        EXPECT(gbc.readMem(0x83f7), 0xd1);
        EXPECT(gbc.readMem(0x83f8), 0xea);
        // 11 0158
        gbc.setState(0x6797, 0x5fb4, 0xee00, 0xa5a2, 0x6f58, 0x1769, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0x11, 0x34, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5fb4);
        EXPECT(gbc.pc(), 0x679a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0159
        gbc.setState(0x521e, 0x3fec, 0xffe0, 0x7567, 0xb50b, 0x2d20, 0x0, 0x0);
        gbc.writeMem(0x521e, { 0x11, 0x88, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3fec);
        EXPECT(gbc.pc(), 0x5221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 015A
        gbc.setState(0x8450, 0xa714, 0x1a0, 0x537b, 0xb69a, 0x8725, 0x1, 0x0);
        gbc.writeMem(0x8450, { 0x11, 0x22, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa714);
        EXPECT(gbc.pc(), 0x8453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8450), 0x11);
        EXPECT(gbc.readMem(0x8451), 0x22);
        EXPECT(gbc.readMem(0x8452), 0x6d);
        // 11 015B
        gbc.setState(0x4887, 0x4528, 0x50e0, 0x4824, 0xde81, 0x3cca, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0x11, 0x2d, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4528);
        EXPECT(gbc.pc(), 0x488a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 015C
        gbc.setState(0x4aad, 0xaa14, 0xe660, 0x9000, 0xb41a, 0xb790, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0x11, 0x74, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0x4ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 015D
        gbc.setState(0xc443, 0xa2c7, 0xc570, 0x8203, 0xafb2, 0x7ce9, 0x0, 0x0);
        gbc.writeMem(0xc443, { 0x11, 0x3c, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa2c7);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc443), 0x11);
        EXPECT(gbc.readMem(0xc444), 0x3c);
        EXPECT(gbc.readMem(0xc445), 0xe9);
        // 11 015E
        gbc.setState(0x9ff4, 0xb329, 0x9ed0, 0x2eef, 0x224e, 0x6cd6, 0x0, 0x1);
        gbc.writeMem(0x9ff4, { 0x11, 0x2c, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb329);
        EXPECT(gbc.pc(), 0x9ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff4), 0x11);
        EXPECT(gbc.readMem(0x9ff5), 0x2c);
        EXPECT(gbc.readMem(0x9ff6), 0x29);
        // 11 015F
        gbc.setState(0x642a, 0xf12, 0x55a0, 0x8559, 0x4aac, 0xcca3, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0x11, 0xe, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf12);
        EXPECT(gbc.pc(), 0x642d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0160
        gbc.setState(0xac22, 0xab55, 0x1550, 0x5f95, 0xd1db, 0xaf41, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0x11, 0xbd, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xab55);
        EXPECT(gbc.pc(), 0xac25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac22), 0x11);
        EXPECT(gbc.readMem(0xac23), 0xbd);
        EXPECT(gbc.readMem(0xac24), 0x8f);
        // 11 0161
        gbc.setState(0xdef8, 0xd905, 0x7030, 0x9586, 0x8a1c, 0xc7cb, 0x0, 0x0);
        gbc.writeMem(0xdef8, { 0x11, 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd905);
        EXPECT(gbc.pc(), 0xdefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef8), 0x11);
        EXPECT(gbc.readMem(0xdef9), 0xee);
        EXPECT(gbc.readMem(0xdefa), 0x79);
        // 11 0162
        gbc.setState(0xad43, 0xe79a, 0x9870, 0x3809, 0xe7a1, 0x9f43, 0x0, 0x1);
        gbc.writeMem(0xad43, { 0x11, 0xb8, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe79a);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad43), 0x11);
        EXPECT(gbc.readMem(0xad44), 0xb8);
        EXPECT(gbc.readMem(0xad45), 0x6);
        // 11 0163
        gbc.setState(0xaef0, 0x39d1, 0xcb90, 0xfff, 0x450c, 0x67db, 0x0, 0x0);
        gbc.writeMem(0xaef0, { 0x11, 0xbf, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x39d1);
        EXPECT(gbc.pc(), 0xaef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef0), 0x11);
        EXPECT(gbc.readMem(0xaef1), 0xbf);
        EXPECT(gbc.readMem(0xaef2), 0xb6);
        // 11 0164
        gbc.setState(0xb25d, 0xf6c6, 0xa830, 0x4ee3, 0x2cbb, 0x51bb, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0x11, 0x6d, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf6c6);
        EXPECT(gbc.pc(), 0xb260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25d), 0x11);
        EXPECT(gbc.readMem(0xb25e), 0x6d);
        EXPECT(gbc.readMem(0xb25f), 0xd3);
        // 11 0165
        gbc.setState(0x2e5a, 0x8d37, 0xa7b0, 0xbc14, 0x51d5, 0x5814, 0x1, 0x1);
        gbc.writeMem(0x2e5a, { 0x11, 0x62, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8d37);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0166
        gbc.setState(0x1403, 0x59ea, 0xb600, 0xa8a5, 0x1cfd, 0xe30d, 0x1, 0x1);
        gbc.writeMem(0x1403, { 0x11, 0x39, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x59ea);
        EXPECT(gbc.pc(), 0x1406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0167
        gbc.setState(0x53d7, 0x6c59, 0x7120, 0xdbdc, 0x3c03, 0x8867, 0x1, 0x1);
        gbc.writeMem(0x53d7, { 0x11, 0x28, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6c59);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0168
        gbc.setState(0xabe2, 0x86fe, 0x9470, 0x323b, 0xc820, 0xd4e0, 0x0, 0x1);
        gbc.writeMem(0xabe2, { 0x11, 0x65, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x86fe);
        EXPECT(gbc.pc(), 0xabe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe2), 0x11);
        EXPECT(gbc.readMem(0xabe3), 0x65);
        EXPECT(gbc.readMem(0xabe4), 0xc8);
        // 11 0169
        gbc.setState(0x833d, 0x590e, 0x45a0, 0xdfd9, 0xf8f8, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x833d, { 0x11, 0x33, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x590e);
        EXPECT(gbc.pc(), 0x8340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x833d), 0x11);
        EXPECT(gbc.readMem(0x833e), 0x33);
        EXPECT(gbc.readMem(0x833f), 0x73);
        // 11 016A
        gbc.setState(0x190e, 0x615, 0x9b20, 0x6922, 0x1733, 0x94cc, 0x1, 0x1);
        gbc.writeMem(0x190e, { 0x11, 0x53, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x615);
        EXPECT(gbc.pc(), 0x1911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 016B
        gbc.setState(0x1a46, 0x8681, 0xdc20, 0xeddd, 0x654d, 0x4bff, 0x0, 0x0);
        gbc.writeMem(0x1a46, { 0x11, 0xd2, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8681);
        EXPECT(gbc.pc(), 0x1a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 016C
        gbc.setState(0xa039, 0xe8fe, 0x20e0, 0x1220, 0x515e, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0xa039, { 0x11, 0xa0, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe8fe);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa039), 0x11);
        EXPECT(gbc.readMem(0xa03a), 0xa0);
        EXPECT(gbc.readMem(0xa03b), 0x47);
        // 11 016D
        gbc.setState(0xb772, 0x6b93, 0xcea0, 0x8288, 0xa0bd, 0xbd96, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0x11, 0x12, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6b93);
        EXPECT(gbc.pc(), 0xb775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb772), 0x11);
        EXPECT(gbc.readMem(0xb773), 0x12);
        EXPECT(gbc.readMem(0xb774), 0x6b);
        // 11 016E
        gbc.setState(0xad0a, 0xa2be, 0x3b00, 0x84bd, 0xc3cf, 0x8b5f, 0x0, 0x0);
        gbc.writeMem(0xad0a, { 0x11, 0x35, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa2be);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0a), 0x11);
        EXPECT(gbc.readMem(0xad0b), 0x35);
        EXPECT(gbc.readMem(0xad0c), 0xbb);
        // 11 016F
        gbc.setState(0x4ce, 0xbc03, 0xec50, 0xc16a, 0x3d44, 0xb879, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0x11, 0xb4, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbc03);
        EXPECT(gbc.pc(), 0x4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0171
        gbc.setState(0xbcc1, 0x382f, 0x2890, 0xa3b4, 0x94d3, 0x36fc, 0x0, 0x1);
        gbc.writeMem(0xbcc1, { 0x11, 0xad, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x382f);
        EXPECT(gbc.pc(), 0xbcc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc1), 0x11);
        EXPECT(gbc.readMem(0xbcc2), 0xad);
        EXPECT(gbc.readMem(0xbcc3), 0xbd);
        // 11 0172
        gbc.setState(0x2f9f, 0x8e42, 0x5b00, 0x7da9, 0x4eeb, 0x1adc, 0x0, 0x0);
        gbc.writeMem(0x2f9f, { 0x11, 0x54, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8e42);
        EXPECT(gbc.pc(), 0x2fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0173
        gbc.setState(0x5933, 0x7d5, 0x5100, 0xf1f7, 0xac74, 0xfb93, 0x1, 0x1);
        gbc.writeMem(0x5933, { 0x11, 0x1, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7d5);
        EXPECT(gbc.pc(), 0x5936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0174
        gbc.setState(0x5ce0, 0x1b78, 0x9ca0, 0x8ca, 0x5baa, 0xa084, 0x1, 0x1);
        gbc.writeMem(0x5ce0, { 0x11, 0x2e, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1b78);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0175
        gbc.setState(0x18bd, 0x8469, 0xd2c0, 0xe3e5, 0x49d, 0x3b0a, 0x1, 0x0);
        gbc.writeMem(0x18bd, { 0x11, 0x40, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8469);
        EXPECT(gbc.pc(), 0x18c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0176
        gbc.setState(0x1c53, 0xd34c, 0x41f0, 0xcb35, 0x5dac, 0xab11, 0x0, 0x1);
        gbc.writeMem(0x1c53, { 0x11, 0x3c, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd34c);
        EXPECT(gbc.pc(), 0x1c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0177
        gbc.setState(0x9500, 0xdae2, 0x8a30, 0xeb53, 0x9c01, 0x62a5, 0x0, 0x0);
        gbc.writeMem(0x9500, { 0x11, 0xc9, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdae2);
        EXPECT(gbc.pc(), 0x9503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9500), 0x11);
        EXPECT(gbc.readMem(0x9501), 0xc9);
        EXPECT(gbc.readMem(0x9502), 0x1e);
        // 11 0178
        gbc.setState(0xed4c, 0x3c80, 0x9730, 0x2792, 0xf70d, 0x857, 0x1, 0x0);
        gbc.writeMem(0xed4c, { 0x11, 0xa8, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3c80);
        EXPECT(gbc.pc(), 0xed4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed4c), 0x11);
        EXPECT(gbc.readMem(0xed4d), 0xa8);
        EXPECT(gbc.readMem(0xed4e), 0x44);
        // 11 017A
        gbc.setState(0xec57, 0xbf47, 0xea60, 0xf670, 0xcfc7, 0x26ce, 0x0, 0x1);
        gbc.writeMem(0xec57, { 0x11, 0x2a, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbf47);
        EXPECT(gbc.pc(), 0xec5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec57), 0x11);
        EXPECT(gbc.readMem(0xec58), 0x2a);
        EXPECT(gbc.readMem(0xec59), 0x2d);
        // 11 017B
        gbc.setState(0x1e4c, 0xfb98, 0x3960, 0x8097, 0x8230, 0xad52, 0x0, 0x0);
        gbc.writeMem(0x1e4c, { 0x11, 0x97, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x1e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 017C
        gbc.setState(0x129c, 0x7f9e, 0x3c70, 0xc0cf, 0x6c7b, 0x6894, 0x1, 0x0);
        gbc.writeMem(0x129c, { 0x11, 0xe6, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7f9e);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 017D
        gbc.setState(0xd1bd, 0x5c4a, 0x6c90, 0x4cc4, 0xfc71, 0xec4e, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0x11, 0x11, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5c4a);
        EXPECT(gbc.pc(), 0xd1c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bd), 0x11);
        EXPECT(gbc.readMem(0xd1be), 0x11);
        EXPECT(gbc.readMem(0xd1bf), 0xfe);
        // 11 017E
        gbc.setState(0xc89d, 0xf3cf, 0x4490, 0x8760, 0x4a81, 0x234f, 0x0, 0x0);
        gbc.writeMem(0xc89d, { 0x11, 0x5a, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf3cf);
        EXPECT(gbc.pc(), 0xc8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89d), 0x11);
        EXPECT(gbc.readMem(0xc89e), 0x5a);
        EXPECT(gbc.readMem(0xc89f), 0x75);
        // 11 017F
        gbc.setState(0x5beb, 0xaa3b, 0xf180, 0x3b8, 0xff89, 0xd437, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0x11, 0x97, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xaa3b);
        EXPECT(gbc.pc(), 0x5bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0180
        gbc.setState(0x9606, 0xebe, 0x26e0, 0x14c0, 0x2e7a, 0x40ff, 0x0, 0x0);
        gbc.writeMem(0x9606, { 0x11, 0x2a, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xebe);
        EXPECT(gbc.pc(), 0x9609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9606), 0x11);
        EXPECT(gbc.readMem(0x9607), 0x2a);
        EXPECT(gbc.readMem(0x9608), 0xdd);
        // 11 0181
        gbc.setState(0x3e7b, 0x2e40, 0xa240, 0xbb1b, 0x207a, 0xf6de, 0x1, 0x1);
        gbc.writeMem(0x3e7b, { 0x11, 0x6b, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2e40);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0182
        gbc.setState(0xc6aa, 0x26cb, 0x1910, 0x3560, 0x8b15, 0x2bdb, 0x1, 0x1);
        gbc.writeMem(0xc6aa, { 0x11, 0xd2, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x26cb);
        EXPECT(gbc.pc(), 0xc6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6aa), 0x11);
        EXPECT(gbc.readMem(0xc6ab), 0xd2);
        EXPECT(gbc.readMem(0xc6ac), 0x43);
        // 11 0183
        gbc.setState(0xcbfe, 0xd9bb, 0xee80, 0xdad4, 0x7191, 0x39b8, 0x1, 0x1);
        gbc.writeMem(0xcbfe, { 0x11, 0x65, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd9bb);
        EXPECT(gbc.pc(), 0xcc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfe), 0x11);
        EXPECT(gbc.readMem(0xcbff), 0x65);
        EXPECT(gbc.readMem(0xcc00), 0xab);
        // 11 0184
        gbc.setState(0xbfa5, 0xe21b, 0x5ff0, 0xc57d, 0x65ea, 0x6e, 0x0, 0x0);
        gbc.writeMem(0xbfa5, { 0x11, 0xb2, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe21b);
        EXPECT(gbc.pc(), 0xbfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa5), 0x11);
        EXPECT(gbc.readMem(0xbfa6), 0xb2);
        EXPECT(gbc.readMem(0xbfa7), 0xc3);
        // 11 0185
        gbc.setState(0xdf4f, 0xd51d, 0x7730, 0x9237, 0xce2e, 0xce74, 0x0, 0x0);
        gbc.writeMem(0xdf4f, { 0x11, 0x1c, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0xdf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4f), 0x11);
        EXPECT(gbc.readMem(0xdf50), 0x1c);
        EXPECT(gbc.readMem(0xdf51), 0xc5);
        // 11 0186
        gbc.setState(0xdbfa, 0xd22, 0x410, 0x7f1e, 0xfbec, 0x5565, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0x11, 0x6, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd22);
        EXPECT(gbc.pc(), 0xdbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfa), 0x11);
        EXPECT(gbc.readMem(0xdbfb), 0x6);
        EXPECT(gbc.readMem(0xdbfc), 0x73);
        // 11 0187
        gbc.setState(0x7763, 0x93e7, 0x46b0, 0xc8f8, 0x8721, 0xe551, 0x0, 0x0);
        gbc.writeMem(0x7763, { 0x11, 0xa4, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x93e7);
        EXPECT(gbc.pc(), 0x7766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0188
        gbc.setState(0x2d97, 0x9fa8, 0xb260, 0x947d, 0x3d47, 0x8a59, 0x0, 0x1);
        gbc.writeMem(0x2d97, { 0x11, 0x85, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x2d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0189
        gbc.setState(0xc4d7, 0x24a5, 0x4cd0, 0x323d, 0x2ec1, 0xd6ac, 0x1, 0x1);
        gbc.writeMem(0xc4d7, { 0x11, 0x73, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x24a5);
        EXPECT(gbc.pc(), 0xc4da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d7), 0x11);
        EXPECT(gbc.readMem(0xc4d8), 0x73);
        EXPECT(gbc.readMem(0xc4d9), 0xc3);
        // 11 018A
        gbc.setState(0x71b9, 0x409c, 0xc340, 0x184a, 0x852e, 0xbafe, 0x0, 0x0);
        gbc.writeMem(0x71b9, { 0x11, 0xf8, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x409c);
        EXPECT(gbc.pc(), 0x71bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 018C
        gbc.setState(0x2295, 0x2760, 0x3e50, 0xc632, 0xc0c4, 0x7fa1, 0x0, 0x0);
        gbc.writeMem(0x2295, { 0x11, 0x79, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2760);
        EXPECT(gbc.pc(), 0x2298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 018D
        gbc.setState(0x7a95, 0x641b, 0xae80, 0xd7cb, 0x51eb, 0x4944, 0x1, 0x1);
        gbc.writeMem(0x7a95, { 0x11, 0x36, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x641b);
        EXPECT(gbc.pc(), 0x7a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 018E
        gbc.setState(0x8eb7, 0xc47b, 0xb060, 0x931f, 0xe61, 0x97b1, 0x1, 0x0);
        gbc.writeMem(0x8eb7, { 0x11, 0x8d, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc47b);
        EXPECT(gbc.pc(), 0x8eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb7), 0x11);
        EXPECT(gbc.readMem(0x8eb8), 0x8d);
        EXPECT(gbc.readMem(0x8eb9), 0xe9);
        // 11 018F
        gbc.setState(0x1b1a, 0x2ad7, 0xab60, 0x92f7, 0x97c9, 0x5250, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0x11, 0xf, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0x1b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0190
        gbc.setState(0x125c, 0x8642, 0x1f60, 0xd13e, 0x87f7, 0xc287, 0x0, 0x1);
        gbc.writeMem(0x125c, { 0x11, 0x0, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8642);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0193
        gbc.setState(0x9e7b, 0xf909, 0x2cb0, 0x48cc, 0x8148, 0xc3c9, 0x0, 0x1);
        gbc.writeMem(0x9e7b, { 0x11, 0xea, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf909);
        EXPECT(gbc.pc(), 0x9e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7b), 0x11);
        EXPECT(gbc.readMem(0x9e7c), 0xea);
        EXPECT(gbc.readMem(0x9e7d), 0x28);
        // 11 0194
        gbc.setState(0x382f, 0xad3a, 0x25f0, 0xe52b, 0x8b95, 0x1544, 0x0, 0x0);
        gbc.writeMem(0x382f, { 0x11, 0x4c, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xad3a);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0195
        gbc.setState(0x831b, 0x7c71, 0xf450, 0xf945, 0x677c, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0x831b, { 0x11, 0xe0, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7c71);
        EXPECT(gbc.pc(), 0x831e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831b), 0x11);
        EXPECT(gbc.readMem(0x831c), 0xe0);
        EXPECT(gbc.readMem(0x831d), 0x21);
        // 11 0196
        gbc.setState(0x59ff, 0x96ee, 0xc240, 0xae2a, 0x729c, 0xbc3a, 0x1, 0x1);
        gbc.writeMem(0x59ff, { 0x11, 0xac, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x96ee);
        EXPECT(gbc.pc(), 0x5a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0197
        gbc.setState(0xcc8f, 0xda14, 0x890, 0x6485, 0x9da8, 0x8531, 0x1, 0x0);
        gbc.writeMem(0xcc8f, { 0x11, 0x22, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xda14);
        EXPECT(gbc.pc(), 0xcc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8f), 0x11);
        EXPECT(gbc.readMem(0xcc90), 0x22);
        EXPECT(gbc.readMem(0xcc91), 0x1f);
        // 11 0198
        gbc.setState(0xeb4d, 0xc336, 0xfd70, 0x2f2e, 0x5cdd, 0x1c98, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0x11, 0xa5, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0xeb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4d), 0x11);
        EXPECT(gbc.readMem(0xeb4e), 0xa5);
        EXPECT(gbc.readMem(0xeb4f), 0x60);
        // 11 0199
        gbc.setState(0x80ad, 0x6d68, 0x8040, 0xc56b, 0xe2ba, 0x16aa, 0x0, 0x1);
        gbc.writeMem(0x80ad, { 0x11, 0xe9, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6d68);
        EXPECT(gbc.pc(), 0x80b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ad), 0x11);
        EXPECT(gbc.readMem(0x80ae), 0xe9);
        EXPECT(gbc.readMem(0x80af), 0x1e);
        // 11 019A
        gbc.setState(0x47a4, 0x225f, 0x6e60, 0x5a3f, 0xeaef, 0x8c94, 0x1, 0x0);
        gbc.writeMem(0x47a4, { 0x11, 0xce, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x225f);
        EXPECT(gbc.pc(), 0x47a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 019B
        gbc.setState(0x9398, 0xa2f1, 0x49f0, 0xc5fe, 0x343d, 0x26bf, 0x0, 0x1);
        gbc.writeMem(0x9398, { 0x11, 0x39, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa2f1);
        EXPECT(gbc.pc(), 0x939b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9398), 0x11);
        EXPECT(gbc.readMem(0x9399), 0x39);
        EXPECT(gbc.readMem(0x939a), 0xd6);
        // 11 019C
        gbc.setState(0x9198, 0xa9e2, 0x5350, 0x9f27, 0xf38e, 0x3f35, 0x1, 0x0);
        gbc.writeMem(0x9198, { 0x11, 0x8d, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa9e2);
        EXPECT(gbc.pc(), 0x919b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9198), 0x11);
        EXPECT(gbc.readMem(0x9199), 0x8d);
        EXPECT(gbc.readMem(0x919a), 0xe9);
        // 11 019D
        gbc.setState(0x8a30, 0x4836, 0x2280, 0x7215, 0xdf97, 0xc1c4, 0x1, 0x1);
        gbc.writeMem(0x8a30, { 0x11, 0xe6, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4836);
        EXPECT(gbc.pc(), 0x8a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a30), 0x11);
        EXPECT(gbc.readMem(0x8a31), 0xe6);
        EXPECT(gbc.readMem(0x8a32), 0x24);
        // 11 019F
        gbc.setState(0xdf8f, 0x1a34, 0xb230, 0xade2, 0x4984, 0x3beb, 0x0, 0x0);
        gbc.writeMem(0xdf8f, { 0x11, 0x55, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8f), 0x11);
        EXPECT(gbc.readMem(0xdf90), 0x55);
        EXPECT(gbc.readMem(0xdf91), 0xce);
        // 11 01A0
        gbc.setState(0x8e91, 0x192c, 0x6360, 0x6901, 0xbbc5, 0xc219, 0x0, 0x0);
        gbc.writeMem(0x8e91, { 0x11, 0x1d, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x192c);
        EXPECT(gbc.pc(), 0x8e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e91), 0x11);
        EXPECT(gbc.readMem(0x8e92), 0x1d);
        EXPECT(gbc.readMem(0x8e93), 0x27);
        // 11 01A1
        gbc.setState(0xbbe6, 0xee7c, 0x79c0, 0x254, 0xbd2, 0xcafd, 0x1, 0x0);
        gbc.writeMem(0xbbe6, { 0x11, 0xff, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xee7c);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe6), 0x11);
        EXPECT(gbc.readMem(0xbbe7), 0xff);
        EXPECT(gbc.readMem(0xbbe8), 0x9);
        // 11 01A2
        gbc.setState(0x3feb, 0xd51b, 0x3cc0, 0xb5b2, 0x5f1e, 0xc664, 0x1, 0x1);
        gbc.writeMem(0x3feb, { 0x11, 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd51b);
        EXPECT(gbc.pc(), 0x3fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01A3
        gbc.setState(0x8d61, 0x4cab, 0xaa90, 0xa54d, 0x8b56, 0x23b1, 0x0, 0x0);
        gbc.writeMem(0x8d61, { 0x11, 0x1d, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4cab);
        EXPECT(gbc.pc(), 0x8d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d61), 0x11);
        EXPECT(gbc.readMem(0x8d62), 0x1d);
        EXPECT(gbc.readMem(0x8d63), 0xc7);
        // 11 01A4
        gbc.setState(0xe025, 0x9cd8, 0x54b0, 0x75c5, 0x22cb, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0xe025, { 0x11, 0xed, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9cd8);
        EXPECT(gbc.pc(), 0xe028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe025), 0x11);
        EXPECT(gbc.readMem(0xe026), 0xed);
        EXPECT(gbc.readMem(0xe027), 0xfb);
        // 11 01A5
        gbc.setState(0x5fd8, 0xaace, 0xbbd0, 0x8e8f, 0x7129, 0xd3bc, 0x0, 0x0);
        gbc.writeMem(0x5fd8, { 0x11, 0x77, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaace);
        EXPECT(gbc.pc(), 0x5fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01A6
        gbc.setState(0x809e, 0x33b8, 0x5550, 0x9e5f, 0x932b, 0x4898, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0x11, 0x2b, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x33b8);
        EXPECT(gbc.pc(), 0x80a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809e), 0x11);
        EXPECT(gbc.readMem(0x809f), 0x2b);
        EXPECT(gbc.readMem(0x80a0), 0xec);
        // 11 01A7
        gbc.setState(0xeb98, 0xba7a, 0x2140, 0x5041, 0xba4d, 0x903e, 0x1, 0x0);
        gbc.writeMem(0xeb98, { 0x11, 0x72, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xba7a);
        EXPECT(gbc.pc(), 0xeb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0x11);
        EXPECT(gbc.readMem(0xeb99), 0x72);
        EXPECT(gbc.readMem(0xeb9a), 0x7d);
        // 11 01A8
        gbc.setState(0x4e8f, 0x122a, 0xf450, 0xf021, 0x4b7f, 0x58e6, 0x0, 0x1);
        gbc.writeMem(0x4e8f, { 0x11, 0x70, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0x4e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01A9
        gbc.setState(0x1542, 0x2260, 0x2a50, 0xb72, 0xd671, 0x2c36, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0x11, 0x12, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2260);
        EXPECT(gbc.pc(), 0x1545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01AA
        gbc.setState(0x47bf, 0x77e, 0xe900, 0x47ca, 0xa107, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x47bf, { 0x11, 0xd8, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x77e);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01AB
        gbc.setState(0x1df0, 0xe14, 0x2190, 0x7046, 0x349c, 0xecbf, 0x1, 0x1);
        gbc.writeMem(0x1df0, { 0x11, 0xb7, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe14);
        EXPECT(gbc.pc(), 0x1df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01AC
        gbc.setState(0xbcab, 0x523, 0xc5f0, 0x75ab, 0xe10b, 0xbc33, 0x1, 0x0);
        gbc.writeMem(0xbcab, { 0x11, 0x5d, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x523);
        EXPECT(gbc.pc(), 0xbcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcab), 0x11);
        EXPECT(gbc.readMem(0xbcac), 0x5d);
        EXPECT(gbc.readMem(0xbcad), 0x96);
        // 11 01AD
        gbc.setState(0x4c01, 0x7616, 0x4010, 0x29ac, 0xe38a, 0xfdee, 0x1, 0x0);
        gbc.writeMem(0x4c01, { 0x11, 0x84, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7616);
        EXPECT(gbc.pc(), 0x4c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01AE
        gbc.setState(0x7111, 0x45d6, 0x4e20, 0xb086, 0xa0a9, 0x84a8, 0x0, 0x0);
        gbc.writeMem(0x7111, { 0x11, 0x8e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x45d6);
        EXPECT(gbc.pc(), 0x7114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01AF
        gbc.setState(0x21a0, 0xd64f, 0x520, 0x96bf, 0x115d, 0x543f, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0x11, 0x68, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd64f);
        EXPECT(gbc.pc(), 0x21a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01B0
        gbc.setState(0x9db3, 0x13dd, 0x5c00, 0x6b5, 0x95f6, 0x8d47, 0x1, 0x1);
        gbc.writeMem(0x9db3, { 0x11, 0x87, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x13dd);
        EXPECT(gbc.pc(), 0x9db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db3), 0x11);
        EXPECT(gbc.readMem(0x9db4), 0x87);
        EXPECT(gbc.readMem(0x9db5), 0x86);
        // 11 01B1
        gbc.setState(0xb18d, 0x755a, 0x1020, 0x8d44, 0x6292, 0x8a28, 0x0, 0x1);
        gbc.writeMem(0xb18d, { 0x11, 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x755a);
        EXPECT(gbc.pc(), 0xb190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18d), 0x11);
        EXPECT(gbc.readMem(0xb18e), 0x16);
        EXPECT(gbc.readMem(0xb18f), 0x85);
        // 11 01B2
        gbc.setState(0x7e48, 0x2e8e, 0xa190, 0x49fc, 0xacd3, 0x97d7, 0x1, 0x1);
        gbc.writeMem(0x7e48, { 0x11, 0xca, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2e8e);
        EXPECT(gbc.pc(), 0x7e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01B3
        gbc.setState(0x5afe, 0x7239, 0xa7d0, 0xd478, 0x8d61, 0x4e88, 0x1, 0x1);
        gbc.writeMem(0x5afe, { 0x11, 0x28, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7239);
        EXPECT(gbc.pc(), 0x5b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01B4
        gbc.setState(0x500a, 0xafd4, 0xc560, 0x7c84, 0x4b19, 0xc632, 0x0, 0x1);
        gbc.writeMem(0x500a, { 0x11, 0xe2, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xafd4);
        EXPECT(gbc.pc(), 0x500d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01B5
        gbc.setState(0x5e44, 0xb1fd, 0xb790, 0x7717, 0xa9c1, 0x5b41, 0x0, 0x1);
        gbc.writeMem(0x5e44, { 0x11, 0xe0, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb1fd);
        EXPECT(gbc.pc(), 0x5e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01B6
        gbc.setState(0xd13, 0xcf83, 0xb830, 0xabb, 0xdedf, 0x13c6, 0x1, 0x0);
        gbc.writeMem(0xd13, { 0x11, 0x74, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcf83);
        EXPECT(gbc.pc(), 0xd16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01B7
        gbc.setState(0x9599, 0x9dc, 0x12a0, 0x4045, 0x6f0, 0xba0a, 0x0, 0x1);
        gbc.writeMem(0x9599, { 0x11, 0xa8, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9dc);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9599), 0x11);
        EXPECT(gbc.readMem(0x959a), 0xa8);
        EXPECT(gbc.readMem(0x959b), 0x1);
        // 11 01B8
        gbc.setState(0xc25b, 0xfa1, 0x4fc0, 0x64b6, 0xcdec, 0x4c98, 0x1, 0x1);
        gbc.writeMem(0xc25b, { 0x11, 0xf5, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfa1);
        EXPECT(gbc.pc(), 0xc25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25b), 0x11);
        EXPECT(gbc.readMem(0xc25c), 0xf5);
        EXPECT(gbc.readMem(0xc25d), 0xb7);
        // 11 01B9
        gbc.setState(0xcab0, 0xb737, 0x7bd0, 0x3b21, 0xa2f5, 0xde37, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0x11, 0x8f, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb737);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab0), 0x11);
        EXPECT(gbc.readMem(0xcab1), 0x8f);
        EXPECT(gbc.readMem(0xcab2), 0xe4);
        // 11 01BA
        gbc.setState(0x64c2, 0x4bdc, 0x1f70, 0xdf64, 0x1fd3, 0xc696, 0x1, 0x1);
        gbc.writeMem(0x64c2, { 0x11, 0x34, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4bdc);
        EXPECT(gbc.pc(), 0x64c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01BB
        gbc.setState(0x6a1, 0x2c3c, 0xaa20, 0x302a, 0x46c5, 0xdb63, 0x0, 0x0);
        gbc.writeMem(0x6a1, { 0x11, 0x6, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2c3c);
        EXPECT(gbc.pc(), 0x6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01BC
        gbc.setState(0xb6f0, 0x5e1, 0x2190, 0xad23, 0x9175, 0xcb4e, 0x1, 0x1);
        gbc.writeMem(0xb6f0, { 0x11, 0x93, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5e1);
        EXPECT(gbc.pc(), 0xb6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f0), 0x11);
        EXPECT(gbc.readMem(0xb6f1), 0x93);
        EXPECT(gbc.readMem(0xb6f2), 0xae);
        // 11 01BD
        gbc.setState(0x1906, 0x4a3d, 0x5d30, 0x9175, 0xb613, 0xb4bd, 0x0, 0x0);
        gbc.writeMem(0x1906, { 0x11, 0x77, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4a3d);
        EXPECT(gbc.pc(), 0x1909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01BE
        gbc.setState(0x18e, 0x7ac3, 0x7c30, 0x781d, 0xf39a, 0x4984, 0x1, 0x1);
        gbc.writeMem(0x18e, { 0x11, 0xc1, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7ac3);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01BF
        gbc.setState(0x92be, 0x2ae2, 0x7630, 0x41ea, 0x5692, 0x9220, 0x0, 0x0);
        gbc.writeMem(0x92be, { 0x11, 0xd6, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2ae2);
        EXPECT(gbc.pc(), 0x92c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92be), 0x11);
        EXPECT(gbc.readMem(0x92bf), 0xd6);
        EXPECT(gbc.readMem(0x92c0), 0x2a);
        // 11 01C0
        gbc.setState(0x7728, 0x7634, 0xcd70, 0x30f7, 0xd938, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0x7728, { 0x11, 0x94, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7634);
        EXPECT(gbc.pc(), 0x772b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01C1
        gbc.setState(0x99b9, 0x1b50, 0xf390, 0xc7b1, 0x222c, 0x56db, 0x1, 0x1);
        gbc.writeMem(0x99b9, { 0x11, 0xf0, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1b50);
        EXPECT(gbc.pc(), 0x99bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b9), 0x11);
        EXPECT(gbc.readMem(0x99ba), 0xf0);
        EXPECT(gbc.readMem(0x99bb), 0x3e);
        // 11 01C2
        gbc.setState(0x8b53, 0x9d43, 0x4f90, 0xfb56, 0x601, 0x300b, 0x1, 0x0);
        gbc.writeMem(0x8b53, { 0x11, 0xcb, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9d43);
        EXPECT(gbc.pc(), 0x8b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0x11);
        EXPECT(gbc.readMem(0x8b54), 0xcb);
        EXPECT(gbc.readMem(0x8b55), 0xaa);
        // 11 01C3
        gbc.setState(0x4f7c, 0x935b, 0x5c00, 0x817e, 0xdd5, 0xfc6b, 0x0, 0x0);
        gbc.writeMem(0x4f7c, { 0x11, 0xe, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x935b);
        EXPECT(gbc.pc(), 0x4f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01C4
        gbc.setState(0x6d9f, 0x6c3b, 0xf910, 0xc1a0, 0x6ee9, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x6d9f, { 0x11, 0x6f, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6c3b);
        EXPECT(gbc.pc(), 0x6da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01C5
        gbc.setState(0x3790, 0x8f9a, 0x99f0, 0x85f, 0xb1b7, 0x1eed, 0x0, 0x1);
        gbc.writeMem(0x3790, { 0x11, 0x47, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8f9a);
        EXPECT(gbc.pc(), 0x3793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01C6
        gbc.setState(0x6914, 0x7283, 0xefe0, 0xe38, 0xddbe, 0xfeb7, 0x1, 0x0);
        gbc.writeMem(0x6914, { 0x11, 0x7b, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7283);
        EXPECT(gbc.pc(), 0x6917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01C7
        gbc.setState(0x3933, 0x4522, 0xe9c0, 0xf64f, 0x1a5c, 0x5fad, 0x1, 0x0);
        gbc.writeMem(0x3933, { 0x11, 0xed, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4522);
        EXPECT(gbc.pc(), 0x3936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01C8
        gbc.setState(0x56f0, 0x59e4, 0x56b0, 0xed27, 0x6a7b, 0xee74, 0x1, 0x1);
        gbc.writeMem(0x56f0, { 0x11, 0xab, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x59e4);
        EXPECT(gbc.pc(), 0x56f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01C9
        gbc.setState(0xb21e, 0xde66, 0xf280, 0xde7a, 0x8923, 0xf0e4, 0x0, 0x0);
        gbc.writeMem(0xb21e, { 0x11, 0x7d, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xde66);
        EXPECT(gbc.pc(), 0xb221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21e), 0x11);
        EXPECT(gbc.readMem(0xb21f), 0x7d);
        EXPECT(gbc.readMem(0xb220), 0xe9);
        // 11 01CA
        gbc.setState(0x7c8e, 0xba7e, 0x2970, 0xcc5f, 0xb45d, 0xa5f7, 0x0, 0x1);
        gbc.writeMem(0x7c8e, { 0x11, 0x6f, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xba7e);
        EXPECT(gbc.pc(), 0x7c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01CB
        gbc.setState(0xd46, 0x25fd, 0x1d50, 0xe118, 0x1b84, 0xec7f, 0x1, 0x0);
        gbc.writeMem(0xd46, { 0x11, 0x29, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x25fd);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01CC
        gbc.setState(0xb90b, 0xaffe, 0x59b0, 0x844e, 0xcbfe, 0xaa1f, 0x0, 0x0);
        gbc.writeMem(0xb90b, { 0x11, 0xb5, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xaffe);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90b), 0x11);
        EXPECT(gbc.readMem(0xb90c), 0xb5);
        EXPECT(gbc.readMem(0xb90d), 0xf9);
        // 11 01CD
        gbc.setState(0x7ac8, 0xa908, 0x1a30, 0x921f, 0x4f87, 0x5da9, 0x0, 0x0);
        gbc.writeMem(0x7ac8, { 0x11, 0xa0, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa908);
        EXPECT(gbc.pc(), 0x7acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01CE
        gbc.setState(0xa02e, 0x756c, 0xd0c0, 0x24f5, 0xad42, 0x841c, 0x0, 0x1);
        gbc.writeMem(0xa02e, { 0x11, 0x44, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x756c);
        EXPECT(gbc.pc(), 0xa031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02e), 0x11);
        EXPECT(gbc.readMem(0xa02f), 0x44);
        EXPECT(gbc.readMem(0xa030), 0x98);
        // 11 01CF
        gbc.setState(0xde63, 0x4b45, 0x5c90, 0xa21b, 0xc7f6, 0xf635, 0x1, 0x0);
        gbc.writeMem(0xde63, { 0x11, 0xd6, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4b45);
        EXPECT(gbc.pc(), 0xde66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde63), 0x11);
        EXPECT(gbc.readMem(0xde64), 0xd6);
        EXPECT(gbc.readMem(0xde65), 0xae);
        // 11 01D0
        gbc.setState(0x9ad, 0xeb36, 0x77b0, 0xb9a6, 0xfe0, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x9ad, { 0x11, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xeb36);
        EXPECT(gbc.pc(), 0x9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01D1
        gbc.setState(0x5e04, 0x4bb4, 0x7aa0, 0x2503, 0x9988, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x5e04, { 0x11, 0xa1, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4bb4);
        EXPECT(gbc.pc(), 0x5e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01D2
        gbc.setState(0x2bd4, 0xa9de, 0x1240, 0x7af7, 0xd530, 0xa89b, 0x0, 0x0);
        gbc.writeMem(0x2bd4, { 0x11, 0x21, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa9de);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01D3
        gbc.setState(0xc15f, 0x85a9, 0x4020, 0x639c, 0xa462, 0x3b7b, 0x1, 0x1);
        gbc.writeMem(0xc15f, { 0x11, 0xd0, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x85a9);
        EXPECT(gbc.pc(), 0xc162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15f), 0x11);
        EXPECT(gbc.readMem(0xc160), 0xd0);
        EXPECT(gbc.readMem(0xc161), 0x8b);
        // 11 01D4
        gbc.setState(0xaf8a, 0x66bd, 0x1fa0, 0x3b26, 0x6a59, 0x5ed0, 0x0, 0x0);
        gbc.writeMem(0xaf8a, { 0x11, 0xd9, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x66bd);
        EXPECT(gbc.pc(), 0xaf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8a), 0x11);
        EXPECT(gbc.readMem(0xaf8b), 0xd9);
        EXPECT(gbc.readMem(0xaf8c), 0xa);
        // 11 01D5
        gbc.setState(0x7b1c, 0xe2d, 0x1e30, 0x795c, 0x9722, 0x751a, 0x0, 0x1);
        gbc.writeMem(0x7b1c, { 0x11, 0xb0, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe2d);
        EXPECT(gbc.pc(), 0x7b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01D6
        gbc.setState(0x3e6c, 0xcc8, 0x9bf0, 0x8b15, 0x67e3, 0xa04f, 0x1, 0x0);
        gbc.writeMem(0x3e6c, { 0x11, 0x4, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcc8);
        EXPECT(gbc.pc(), 0x3e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01D7
        gbc.setState(0xc81a, 0x479e, 0x3ec0, 0xb4c2, 0x8bd2, 0x3484, 0x1, 0x1);
        gbc.writeMem(0xc81a, { 0x11, 0x7b, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x479e);
        EXPECT(gbc.pc(), 0xc81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81a), 0x11);
        EXPECT(gbc.readMem(0xc81b), 0x7b);
        EXPECT(gbc.readMem(0xc81c), 0xab);
        // 11 01D8
        gbc.setState(0xbe3d, 0xb4e2, 0x7c40, 0xa86, 0xe05d, 0xeb7e, 0x1, 0x1);
        gbc.writeMem(0xbe3d, { 0x11, 0x26, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb4e2);
        EXPECT(gbc.pc(), 0xbe40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3d), 0x11);
        EXPECT(gbc.readMem(0xbe3e), 0x26);
        EXPECT(gbc.readMem(0xbe3f), 0x65);
        // 11 01D9
        gbc.setState(0xacef, 0x8e60, 0x9330, 0xafc1, 0xeeb7, 0x9723, 0x0, 0x0);
        gbc.writeMem(0xacef, { 0x11, 0xd5, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8e60);
        EXPECT(gbc.pc(), 0xacf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacef), 0x11);
        EXPECT(gbc.readMem(0xacf0), 0xd5);
        EXPECT(gbc.readMem(0xacf1), 0x59);
        // 11 01DA
        gbc.setState(0xbfe5, 0xff4e, 0x68b0, 0x660a, 0x2616, 0x648b, 0x1, 0x1);
        gbc.writeMem(0xbfe5, { 0x11, 0x74, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff4e);
        EXPECT(gbc.pc(), 0xbfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe5), 0x11);
        EXPECT(gbc.readMem(0xbfe6), 0x74);
        EXPECT(gbc.readMem(0xbfe7), 0x24);
        // 11 01DB
        gbc.setState(0xe3b6, 0x62fb, 0x5b00, 0x4750, 0x85e, 0xd30, 0x0, 0x1);
        gbc.writeMem(0xe3b6, { 0x11, 0x78, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x62fb);
        EXPECT(gbc.pc(), 0xe3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b6), 0x11);
        EXPECT(gbc.readMem(0xe3b7), 0x78);
        EXPECT(gbc.readMem(0xe3b8), 0x90);
        // 11 01DC
        gbc.setState(0x100c, 0x4106, 0xa660, 0x9664, 0xbf2b, 0x7484, 0x0, 0x1);
        gbc.writeMem(0x100c, { 0x11, 0xa7, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4106);
        EXPECT(gbc.pc(), 0x100f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01DD
        gbc.setState(0x78d4, 0x516d, 0xd440, 0x6b27, 0xe847, 0x1e3, 0x1, 0x1);
        gbc.writeMem(0x78d4, { 0x11, 0x26, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x516d);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01DE
        gbc.setState(0xd0b2, 0x49e0, 0x1d30, 0x4b34, 0xeff, 0xbd77, 0x1, 0x1);
        gbc.writeMem(0xd0b2, { 0x11, 0x2f, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x49e0);
        EXPECT(gbc.pc(), 0xd0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b2), 0x11);
        EXPECT(gbc.readMem(0xd0b3), 0x2f);
        EXPECT(gbc.readMem(0xd0b4), 0x15);
        // 11 01DF
        gbc.setState(0x3b73, 0xfcb4, 0xf850, 0x96e6, 0x4380, 0xa23e, 0x1, 0x0);
        gbc.writeMem(0x3b73, { 0x11, 0x6a, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfcb4);
        EXPECT(gbc.pc(), 0x3b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01E0
        gbc.setState(0x6d5b, 0xa347, 0x9430, 0xb200, 0x4484, 0xf8f9, 0x0, 0x0);
        gbc.writeMem(0x6d5b, { 0x11, 0x24, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa347);
        EXPECT(gbc.pc(), 0x6d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01E1
        gbc.setState(0x1336, 0x654e, 0x74d0, 0xf77, 0xe917, 0x3e91, 0x1, 0x0);
        gbc.writeMem(0x1336, { 0x11, 0xe0, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x654e);
        EXPECT(gbc.pc(), 0x1339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01E2
        gbc.setState(0x7390, 0x8591, 0xbbe0, 0xb7ba, 0xd828, 0xecd9, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0x11, 0xc1, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8591);
        EXPECT(gbc.pc(), 0x7393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01E3
        gbc.setState(0x76d0, 0x94af, 0x560, 0xdace, 0xc2c6, 0x9393, 0x1, 0x0);
        gbc.writeMem(0x76d0, { 0x11, 0x20, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x94af);
        EXPECT(gbc.pc(), 0x76d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01E4
        gbc.setState(0x6efc, 0x8c07, 0xb450, 0x7b4e, 0xcf90, 0xb560, 0x1, 0x0);
        gbc.writeMem(0x6efc, { 0x11, 0xa0, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8c07);
        EXPECT(gbc.pc(), 0x6eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01E5
        gbc.setState(0x3cf8, 0x626f, 0xa340, 0x97db, 0x92bf, 0x17f2, 0x1, 0x0);
        gbc.writeMem(0x3cf8, { 0x11, 0xc9, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x626f);
        EXPECT(gbc.pc(), 0x3cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01E6
        gbc.setState(0x3b, 0x71fd, 0x9f10, 0x316a, 0x707f, 0x2ff2, 0x1, 0x1);
        gbc.writeMem(0x3b, { 0x11, 0x1, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x71fd);
        EXPECT(gbc.pc(), 0x3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01E7
        gbc.setState(0x3e34, 0x9e0b, 0xc180, 0x9350, 0x13e8, 0xbfdf, 0x0, 0x1);
        gbc.writeMem(0x3e34, { 0x11, 0xd4, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9e0b);
        EXPECT(gbc.pc(), 0x3e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01E8
        gbc.setState(0x3411, 0xe4f2, 0x99c0, 0xc8bf, 0xc65b, 0x74dc, 0x0, 0x0);
        gbc.writeMem(0x3411, { 0x11, 0x21, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe4f2);
        EXPECT(gbc.pc(), 0x3414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01EA
        gbc.setState(0xc1d3, 0xb7c7, 0xb0f0, 0x4019, 0x593e, 0x863b, 0x0, 0x1);
        gbc.writeMem(0xc1d3, { 0x11, 0x6c, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb7c7);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d3), 0x11);
        EXPECT(gbc.readMem(0xc1d4), 0x6c);
        EXPECT(gbc.readMem(0xc1d5), 0x6b);
        // 11 01EB
        gbc.setState(0x6ce7, 0xe1ac, 0xe820, 0x5881, 0x19cb, 0xf32f, 0x1, 0x0);
        gbc.writeMem(0x6ce7, { 0x11, 0x41, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe1ac);
        EXPECT(gbc.pc(), 0x6cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01ED
        gbc.setState(0xb271, 0xa7f8, 0x6840, 0xd978, 0x6324, 0x365e, 0x0, 0x1);
        gbc.writeMem(0xb271, { 0x11, 0x45, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa7f8);
        EXPECT(gbc.pc(), 0xb274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb271), 0x11);
        EXPECT(gbc.readMem(0xb272), 0x45);
        EXPECT(gbc.readMem(0xb273), 0x30);
        // 11 01EE
        gbc.setState(0xcd2, 0x9ab9, 0xc1e0, 0xc5fa, 0x30f7, 0xe805, 0x0, 0x0);
        gbc.writeMem(0xcd2, { 0x11, 0x6c, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9ab9);
        EXPECT(gbc.pc(), 0xcd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01EF
        gbc.setState(0x8a0, 0xf896, 0xa930, 0xdb19, 0xdc79, 0x517b, 0x0, 0x0);
        gbc.writeMem(0x8a0, { 0x11, 0xaf, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf896);
        EXPECT(gbc.pc(), 0x8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01F0
        gbc.setState(0x92b9, 0x4d5e, 0x6110, 0x21ee, 0xb57d, 0x789f, 0x0, 0x1);
        gbc.writeMem(0x92b9, { 0x11, 0x60, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4d5e);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b9), 0x11);
        EXPECT(gbc.readMem(0x92ba), 0x60);
        EXPECT(gbc.readMem(0x92bb), 0x71);
        // 11 01F1
        gbc.setState(0x13d0, 0x9e35, 0xdba0, 0x4c32, 0x2fc9, 0x4de8, 0x1, 0x1);
        gbc.writeMem(0x13d0, { 0x11, 0x14, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9e35);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01F2
        gbc.setState(0x6cae, 0x32f7, 0x1790, 0x81d8, 0x71bb, 0x9954, 0x1, 0x0);
        gbc.writeMem(0x6cae, { 0x11, 0x9e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x32f7);
        EXPECT(gbc.pc(), 0x6cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01F3
        gbc.setState(0x6158, 0x7752, 0x26f0, 0x1858, 0xc2c1, 0xa448, 0x0, 0x0);
        gbc.writeMem(0x6158, { 0x11, 0xa6, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7752);
        EXPECT(gbc.pc(), 0x615b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01F4
        gbc.setState(0x371d, 0xe40b, 0xee70, 0xf8c3, 0xd1bb, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x371d, { 0x11, 0xb7, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe40b);
        EXPECT(gbc.pc(), 0x3720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01F5
        gbc.setState(0x1219, 0xb94d, 0x8040, 0xfeca, 0x2f6f, 0xc352, 0x0, 0x1);
        gbc.writeMem(0x1219, { 0x11, 0xd, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb94d);
        EXPECT(gbc.pc(), 0x121c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 01F6
        gbc.setState(0x226b, 0xbf29, 0xd8f0, 0xa2ed, 0xe7bc, 0xe54, 0x0, 0x1);
        gbc.writeMem(0x226b, { 0x11, 0xf9, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbf29);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01F7
        gbc.setState(0x62cb, 0x4808, 0xe650, 0xa0ce, 0x22b3, 0xec5e, 0x1, 0x1);
        gbc.writeMem(0x62cb, { 0x11, 0x34, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4808);
        EXPECT(gbc.pc(), 0x62ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 01F8
        gbc.setState(0x3, 0x3dbe, 0x33f0, 0x8112, 0x9dc5, 0x8334, 0x1, 0x1);
        gbc.writeMem(0x3, { 0x11, 0xe1, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0x6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01F9
        gbc.setState(0x56df, 0xf4ac, 0xa2f0, 0xb72d, 0xa66d, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0x56df, { 0x11, 0xc1, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf4ac);
        EXPECT(gbc.pc(), 0x56e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 01FA
        gbc.setState(0xa762, 0x7330, 0xb590, 0x5970, 0x9fef, 0xf257, 0x0, 0x1);
        gbc.writeMem(0xa762, { 0x11, 0x1d, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7330);
        EXPECT(gbc.pc(), 0xa765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa762), 0x11);
        EXPECT(gbc.readMem(0xa763), 0x1d);
        EXPECT(gbc.readMem(0xa764), 0xf4);
        // 11 01FB
        gbc.setState(0xd77a, 0xa749, 0x2000, 0xf119, 0xb575, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0xd77a, { 0x11, 0x0, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77a), 0x11);
        EXPECT(gbc.readMem(0xd77b), 0x0);
        EXPECT(gbc.readMem(0xd77c), 0xb3);
        // 11 01FC
        gbc.setState(0x56bb, 0x2b5b, 0xb0a0, 0x4adb, 0xfc22, 0x7f6c, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x11, 0x1c, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2b5b);
        EXPECT(gbc.pc(), 0x56be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01FD
        gbc.setState(0x1993, 0x165a, 0xec60, 0x149a, 0xf0c9, 0x2a69, 0x1, 0x0);
        gbc.writeMem(0x1993, { 0x11, 0x37, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x165a);
        EXPECT(gbc.pc(), 0x1996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 01FE
        gbc.setState(0xcf2d, 0x6dbf, 0x4410, 0xf660, 0xd60, 0x7b04, 0x0, 0x0);
        gbc.writeMem(0xcf2d, { 0x11, 0x30, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6dbf);
        EXPECT(gbc.pc(), 0xcf30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2d), 0x11);
        EXPECT(gbc.readMem(0xcf2e), 0x30);
        EXPECT(gbc.readMem(0xcf2f), 0x1b);
        // 11 01FF
        gbc.setState(0x566c, 0xb9a7, 0xf540, 0xc150, 0x7ff7, 0xf4ba, 0x0, 0x1);
        gbc.writeMem(0x566c, { 0x11, 0x3c, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb9a7);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0200
        gbc.setState(0xb9fc, 0x8274, 0x1670, 0x29d1, 0x50ee, 0x5e05, 0x0, 0x1);
        gbc.writeMem(0xb9fc, { 0x11, 0x89, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8274);
        EXPECT(gbc.pc(), 0xb9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fc), 0x11);
        EXPECT(gbc.readMem(0xb9fd), 0x89);
        EXPECT(gbc.readMem(0xb9fe), 0xcc);
        // 11 0201
        gbc.setState(0x1911, 0x9e93, 0xf600, 0x2d98, 0x1c24, 0x461e, 0x0, 0x1);
        gbc.writeMem(0x1911, { 0x11, 0x6a, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9e93);
        EXPECT(gbc.pc(), 0x1914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0202
        gbc.setState(0x1fff, 0x39d2, 0x7a30, 0x725a, 0xe4e, 0xa447, 0x0, 0x1);
        gbc.writeMem(0x1fff, { 0x11, 0xb1, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x39d2);
        EXPECT(gbc.pc(), 0x2002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0203
        gbc.setState(0xd38c, 0x62ef, 0xc290, 0x942, 0x2e32, 0x754f, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0x11, 0x39, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x62ef);
        EXPECT(gbc.pc(), 0xd38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38c), 0x11);
        EXPECT(gbc.readMem(0xd38d), 0x39);
        EXPECT(gbc.readMem(0xd38e), 0x85);
        // 11 0204
        gbc.setState(0xc3d0, 0xeaa7, 0x39a0, 0x6b0c, 0x5e05, 0xbaea, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0x11, 0xeb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0xc3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d0), 0x11);
        EXPECT(gbc.readMem(0xc3d1), 0xeb);
        EXPECT(gbc.readMem(0xc3d2), 0x81);
        // 11 0205
        gbc.setState(0xcf25, 0x4b59, 0x83c0, 0x31f9, 0x5b79, 0x5469, 0x0, 0x1);
        gbc.writeMem(0xcf25, { 0x11, 0x1a, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4b59);
        EXPECT(gbc.pc(), 0xcf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf25), 0x11);
        EXPECT(gbc.readMem(0xcf26), 0x1a);
        EXPECT(gbc.readMem(0xcf27), 0x71);
        // 11 0206
        gbc.setState(0x1f39, 0x786a, 0x5b60, 0x7657, 0x4836, 0xa977, 0x1, 0x0);
        gbc.writeMem(0x1f39, { 0x11, 0x5d, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x786a);
        EXPECT(gbc.pc(), 0x1f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0207
        gbc.setState(0x1b28, 0xb11a, 0x2640, 0x650b, 0x1114, 0x8aeb, 0x0, 0x1);
        gbc.writeMem(0x1b28, { 0x11, 0xea, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb11a);
        EXPECT(gbc.pc(), 0x1b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0208
        gbc.setState(0xafcf, 0x9a56, 0x44c0, 0x816e, 0x5ae6, 0x57ef, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0x11, 0x3b, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9a56);
        EXPECT(gbc.pc(), 0xafd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcf), 0x11);
        EXPECT(gbc.readMem(0xafd0), 0x3b);
        EXPECT(gbc.readMem(0xafd1), 0x1a);
        // 11 0209
        gbc.setState(0xb1a5, 0x429d, 0x6ee0, 0x352d, 0x4327, 0xacac, 0x0, 0x0);
        gbc.writeMem(0xb1a5, { 0x11, 0x8a, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0xb1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a5), 0x11);
        EXPECT(gbc.readMem(0xb1a6), 0x8a);
        EXPECT(gbc.readMem(0xb1a7), 0x73);
        // 11 020A
        gbc.setState(0x7655, 0x1f80, 0xbe40, 0x300a, 0xb20d, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0x7655, { 0x11, 0x94, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1f80);
        EXPECT(gbc.pc(), 0x7658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 020B
        gbc.setState(0xec4a, 0xb0b2, 0xd940, 0xd8eb, 0x2d6, 0xde5e, 0x1, 0x0);
        gbc.writeMem(0xec4a, { 0x11, 0x70, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb0b2);
        EXPECT(gbc.pc(), 0xec4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4a), 0x11);
        EXPECT(gbc.readMem(0xec4b), 0x70);
        EXPECT(gbc.readMem(0xec4c), 0xc7);
        // 11 020C
        gbc.setState(0x8bad, 0xd2ff, 0xa1a0, 0xe820, 0xd164, 0x9edb, 0x1, 0x1);
        gbc.writeMem(0x8bad, { 0x11, 0xdc, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd2ff);
        EXPECT(gbc.pc(), 0x8bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bad), 0x11);
        EXPECT(gbc.readMem(0x8bae), 0xdc);
        EXPECT(gbc.readMem(0x8baf), 0xaa);
        // 11 020D
        gbc.setState(0x9573, 0x3ded, 0xe510, 0x8f79, 0xb290, 0xf1dd, 0x1, 0x1);
        gbc.writeMem(0x9573, { 0x11, 0xca, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ded);
        EXPECT(gbc.pc(), 0x9576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9573), 0x11);
        EXPECT(gbc.readMem(0x9574), 0xca);
        EXPECT(gbc.readMem(0x9575), 0x1a);
        // 11 020E
        gbc.setState(0x3ffe, 0x3b8b, 0x520, 0x1610, 0x4118, 0x6dd6, 0x0, 0x0);
        gbc.writeMem(0x3ffe, { 0x11, 0xf7, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3b8b);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 020F
        gbc.setState(0xc117, 0x78dd, 0xe190, 0x231b, 0x3bf0, 0x293e, 0x1, 0x0);
        gbc.writeMem(0xc117, { 0x11, 0xbd, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x78dd);
        EXPECT(gbc.pc(), 0xc11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc117), 0x11);
        EXPECT(gbc.readMem(0xc118), 0xbd);
        EXPECT(gbc.readMem(0xc119), 0xc1);
        // 11 0210
        gbc.setState(0x17c5, 0x108e, 0x1ef0, 0x47ab, 0x3ab9, 0xacfc, 0x0, 0x1);
        gbc.writeMem(0x17c5, { 0x11, 0x74, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x108e);
        EXPECT(gbc.pc(), 0x17c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0211
        gbc.setState(0xaada, 0x2f6f, 0xb010, 0xba6d, 0x5647, 0xfce3, 0x1, 0x1);
        gbc.writeMem(0xaada, { 0x11, 0xdf, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2f6f);
        EXPECT(gbc.pc(), 0xaadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaada), 0x11);
        EXPECT(gbc.readMem(0xaadb), 0xdf);
        EXPECT(gbc.readMem(0xaadc), 0xbc);
        // 11 0212
        gbc.setState(0x8df3, 0xa2a5, 0xc8d0, 0xee6a, 0x6aee, 0x4e21, 0x1, 0x0);
        gbc.writeMem(0x8df3, { 0x11, 0x4a, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa2a5);
        EXPECT(gbc.pc(), 0x8df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df3), 0x11);
        EXPECT(gbc.readMem(0x8df4), 0x4a);
        EXPECT(gbc.readMem(0x8df5), 0xa6);
        // 11 0213
        gbc.setState(0x288d, 0xe2cd, 0x4ff0, 0x25db, 0xf1eb, 0xca2e, 0x1, 0x0);
        gbc.writeMem(0x288d, { 0x11, 0x46, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe2cd);
        EXPECT(gbc.pc(), 0x2890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0214
        gbc.setState(0xadf1, 0x40f5, 0xc2e0, 0xfff3, 0xc4be, 0x808f, 0x1, 0x0);
        gbc.writeMem(0xadf1, { 0x11, 0x7b, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x40f5);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf1), 0x11);
        EXPECT(gbc.readMem(0xadf2), 0x7b);
        EXPECT(gbc.readMem(0xadf3), 0x7d);
        // 11 0215
        gbc.setState(0x5151, 0x8359, 0x7c70, 0xe54e, 0x2bc4, 0x8758, 0x0, 0x0);
        gbc.writeMem(0x5151, { 0x11, 0x6c, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8359);
        EXPECT(gbc.pc(), 0x5154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0216
        gbc.setState(0x5eab, 0xc03d, 0x7750, 0xd41, 0xb43e, 0x5492, 0x0, 0x1);
        gbc.writeMem(0x5eab, { 0x11, 0x2b, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc03d);
        EXPECT(gbc.pc(), 0x5eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0217
        gbc.setState(0xbe3b, 0x1f07, 0x1670, 0x4418, 0x1eb5, 0x3226, 0x0, 0x0);
        gbc.writeMem(0xbe3b, { 0x11, 0xfe, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1f07);
        EXPECT(gbc.pc(), 0xbe3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe3b), 0x11);
        EXPECT(gbc.readMem(0xbe3c), 0xfe);
        EXPECT(gbc.readMem(0xbe3d), 0xd4);
        // 11 0218
        gbc.setState(0xee1d, 0x11e2, 0x6950, 0x700a, 0x1d66, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0xee1d, { 0x11, 0xa9, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x11e2);
        EXPECT(gbc.pc(), 0xee20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1d), 0x11);
        EXPECT(gbc.readMem(0xee1e), 0xa9);
        EXPECT(gbc.readMem(0xee1f), 0xc6);
        // 11 0219
        gbc.setState(0xdf36, 0x2c2, 0x3c40, 0x5cba, 0x1c26, 0x7b96, 0x1, 0x0);
        gbc.writeMem(0xdf36, { 0x11, 0xb0, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2c2);
        EXPECT(gbc.pc(), 0xdf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf36), 0x11);
        EXPECT(gbc.readMem(0xdf37), 0xb0);
        EXPECT(gbc.readMem(0xdf38), 0x5d);
        // 11 021A
        gbc.setState(0x9d6f, 0x98, 0xa00, 0x6ec9, 0x350b, 0xf32e, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0x11, 0xfb, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x98);
        EXPECT(gbc.pc(), 0x9d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6f), 0x11);
        EXPECT(gbc.readMem(0x9d70), 0xfb);
        EXPECT(gbc.readMem(0x9d71), 0x3c);
        // 11 021B
        gbc.setState(0x62d1, 0xd5bb, 0x11d0, 0xde5d, 0x1409, 0x7b16, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0x11, 0xf0, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd5bb);
        EXPECT(gbc.pc(), 0x62d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 021C
        gbc.setState(0x7b2e, 0x5c33, 0xa070, 0x32e4, 0xe2e1, 0x639e, 0x1, 0x1);
        gbc.writeMem(0x7b2e, { 0x11, 0xf2, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0x7b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 021D
        gbc.setState(0x3b51, 0x8ac5, 0x7df0, 0x8f9d, 0x3eb8, 0x15a5, 0x0, 0x0);
        gbc.writeMem(0x3b51, { 0x11, 0xff, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8ac5);
        EXPECT(gbc.pc(), 0x3b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 021E
        gbc.setState(0xd345, 0x291a, 0x5c40, 0xc650, 0x9bd3, 0xa17d, 0x1, 0x1);
        gbc.writeMem(0xd345, { 0x11, 0x39, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x291a);
        EXPECT(gbc.pc(), 0xd348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd345), 0x11);
        EXPECT(gbc.readMem(0xd346), 0x39);
        EXPECT(gbc.readMem(0xd347), 0xf3);
        // 11 021F
        gbc.setState(0x9f6d, 0x9a17, 0xb2d0, 0x3779, 0x9389, 0x8bb2, 0x0, 0x0);
        gbc.writeMem(0x9f6d, { 0x11, 0xe0, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9a17);
        EXPECT(gbc.pc(), 0x9f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6d), 0x11);
        EXPECT(gbc.readMem(0x9f6e), 0xe0);
        EXPECT(gbc.readMem(0x9f6f), 0xa7);
        // 11 0220
        gbc.setState(0xdac8, 0x3713, 0xecb0, 0x6cdb, 0x1312, 0x5289, 0x0, 0x1);
        gbc.writeMem(0xdac8, { 0x11, 0x93, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3713);
        EXPECT(gbc.pc(), 0xdacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac8), 0x11);
        EXPECT(gbc.readMem(0xdac9), 0x93);
        EXPECT(gbc.readMem(0xdaca), 0x1);
        // 11 0221
        gbc.setState(0xaea8, 0xdb18, 0xea0, 0x1c14, 0xabc7, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0xaea8, { 0x11, 0xe6, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdb18);
        EXPECT(gbc.pc(), 0xaeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea8), 0x11);
        EXPECT(gbc.readMem(0xaea9), 0xe6);
        EXPECT(gbc.readMem(0xaeaa), 0x1);
        // 11 0223
        gbc.setState(0x7a5d, 0x76f6, 0x65c0, 0x7399, 0x9a4a, 0x3121, 0x1, 0x0);
        gbc.writeMem(0x7a5d, { 0x11, 0x94, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0224
        gbc.setState(0xee8b, 0x9573, 0xeaa0, 0xffe9, 0xb931, 0xe3cc, 0x0, 0x0);
        gbc.writeMem(0xee8b, { 0x11, 0x1a, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9573);
        EXPECT(gbc.pc(), 0xee8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8b), 0x11);
        EXPECT(gbc.readMem(0xee8c), 0x1a);
        EXPECT(gbc.readMem(0xee8d), 0xa7);
        // 11 0225
        gbc.setState(0x600, 0x21a2, 0x68e0, 0x662a, 0x9656, 0x7224, 0x0, 0x1);
        gbc.writeMem(0x600, { 0x11, 0x1c, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21a2);
        EXPECT(gbc.pc(), 0x603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0226
        gbc.setState(0x459f, 0xa732, 0x1b20, 0x8a04, 0x82f5, 0xfd4c, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0x11, 0x7d, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa732);
        EXPECT(gbc.pc(), 0x45a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0227
        gbc.setState(0x989f, 0x3df5, 0x3510, 0xd9f9, 0x39ba, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x989f, { 0x11, 0x39, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3df5);
        EXPECT(gbc.pc(), 0x98a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989f), 0x11);
        EXPECT(gbc.readMem(0x98a0), 0x39);
        EXPECT(gbc.readMem(0x98a1), 0x56);
        // 11 0229
        gbc.setState(0x4ea4, 0x70c8, 0x50a0, 0x90c8, 0x11dc, 0xc59f, 0x0, 0x0);
        gbc.writeMem(0x4ea4, { 0x11, 0x93, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x70c8);
        EXPECT(gbc.pc(), 0x4ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 022A
        gbc.setState(0x1d35, 0xa15a, 0xb370, 0x55c8, 0xf655, 0xbd8f, 0x0, 0x0);
        gbc.writeMem(0x1d35, { 0x11, 0x55, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa15a);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 022C
        gbc.setState(0xb117, 0x21a9, 0x34f0, 0xf281, 0xe703, 0x3d1b, 0x0, 0x0);
        gbc.writeMem(0xb117, { 0x11, 0x9d, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x21a9);
        EXPECT(gbc.pc(), 0xb11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb117), 0x11);
        EXPECT(gbc.readMem(0xb118), 0x9d);
        EXPECT(gbc.readMem(0xb119), 0x6a);
        // 11 022D
        gbc.setState(0x4526, 0x8ca2, 0x5490, 0xbed9, 0xbdc9, 0x3d56, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0x11, 0xc8, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8ca2);
        EXPECT(gbc.pc(), 0x4529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 022E
        gbc.setState(0x7154, 0x53b8, 0xa9b0, 0x458, 0x14e4, 0x957b, 0x0, 0x0);
        gbc.writeMem(0x7154, { 0x11, 0x4c, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x53b8);
        EXPECT(gbc.pc(), 0x7157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 022F
        gbc.setState(0x3297, 0xbc51, 0x3020, 0xdc17, 0x18f8, 0xa504, 0x0, 0x1);
        gbc.writeMem(0x3297, { 0x11, 0x56, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0x329a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0230
        gbc.setState(0x99b6, 0x99a, 0x56a0, 0x7537, 0xff, 0x59df, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0x11, 0xe3, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x99a);
        EXPECT(gbc.pc(), 0x99b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b6), 0x11);
        EXPECT(gbc.readMem(0x99b7), 0xe3);
        EXPECT(gbc.readMem(0x99b8), 0xd7);
        // 11 0231
        gbc.setState(0x4576, 0x9cfa, 0xd6b0, 0xcb7, 0xb339, 0x74a9, 0x0, 0x1);
        gbc.writeMem(0x4576, { 0x11, 0xf8, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x4579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0232
        gbc.setState(0xcdaa, 0x83c8, 0xcb20, 0x6c2e, 0x4dbf, 0x55cd, 0x1, 0x1);
        gbc.writeMem(0xcdaa, { 0x11, 0x20, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x83c8);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdaa), 0x11);
        EXPECT(gbc.readMem(0xcdab), 0x20);
        EXPECT(gbc.readMem(0xcdac), 0xdc);
        // 11 0234
        gbc.setState(0x224, 0x4c15, 0x4cb0, 0xe1d3, 0x7703, 0x5a25, 0x1, 0x0);
        gbc.writeMem(0x224, { 0x11, 0x54, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4c15);
        EXPECT(gbc.pc(), 0x227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0235
        gbc.setState(0x15f2, 0x24cf, 0x9af0, 0xdc8f, 0x7a6e, 0x768c, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0x11, 0x75, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x24cf);
        EXPECT(gbc.pc(), 0x15f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0236
        gbc.setState(0x2c36, 0xf80, 0x5240, 0x8b83, 0x493b, 0x4114, 0x1, 0x0);
        gbc.writeMem(0x2c36, { 0x11, 0x2b, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf80);
        EXPECT(gbc.pc(), 0x2c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0237
        gbc.setState(0x922e, 0xd3db, 0xb470, 0x36a7, 0xbaa7, 0x2deb, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0x11, 0x34, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd3db);
        EXPECT(gbc.pc(), 0x9231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922e), 0x11);
        EXPECT(gbc.readMem(0x922f), 0x34);
        EXPECT(gbc.readMem(0x9230), 0x63);
        // 11 0238
        gbc.setState(0x968f, 0xf61c, 0xe2c0, 0x4d9a, 0x733c, 0xb67a, 0x0, 0x0);
        gbc.writeMem(0x968f, { 0x11, 0xe7, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf61c);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968f), 0x11);
        EXPECT(gbc.readMem(0x9690), 0xe7);
        EXPECT(gbc.readMem(0x9691), 0x8d);
        // 11 0239
        gbc.setState(0x493b, 0x7dc9, 0xeb0, 0x4fd8, 0xb3a8, 0x76eb, 0x0, 0x0);
        gbc.writeMem(0x493b, { 0x11, 0x33, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7dc9);
        EXPECT(gbc.pc(), 0x493e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 023A
        gbc.setState(0x821f, 0x4416, 0x7ed0, 0x1512, 0x597b, 0xb548, 0x1, 0x0);
        gbc.writeMem(0x821f, { 0x11, 0x46, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4416);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821f), 0x11);
        EXPECT(gbc.readMem(0x8220), 0x46);
        EXPECT(gbc.readMem(0x8221), 0x68);
        // 11 023B
        gbc.setState(0xe853, 0x633c, 0xc910, 0x2378, 0xdb0e, 0x676b, 0x0, 0x0);
        gbc.writeMem(0xe853, { 0x11, 0xfd, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x633c);
        EXPECT(gbc.pc(), 0xe856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe853), 0x11);
        EXPECT(gbc.readMem(0xe854), 0xfd);
        EXPECT(gbc.readMem(0xe855), 0x1e);
        // 11 023C
        gbc.setState(0x5ed6, 0xbe74, 0x81d0, 0xbcc3, 0xf072, 0xdac, 0x0, 0x0);
        gbc.writeMem(0x5ed6, { 0x11, 0x31, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbe74);
        EXPECT(gbc.pc(), 0x5ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 023D
        gbc.setState(0xc8d9, 0x342a, 0x87c0, 0xfb7f, 0x8964, 0xc376, 0x0, 0x1);
        gbc.writeMem(0xc8d9, { 0x11, 0x39, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x342a);
        EXPECT(gbc.pc(), 0xc8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d9), 0x11);
        EXPECT(gbc.readMem(0xc8da), 0x39);
        EXPECT(gbc.readMem(0xc8db), 0x72);
        // 11 023E
        gbc.setState(0x81c0, 0xe48f, 0xf5b0, 0x9f82, 0x1552, 0xad77, 0x1, 0x0);
        gbc.writeMem(0x81c0, { 0x11, 0x77, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe48f);
        EXPECT(gbc.pc(), 0x81c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c0), 0x11);
        EXPECT(gbc.readMem(0x81c1), 0x77);
        EXPECT(gbc.readMem(0x81c2), 0xc6);
        // 11 023F
        gbc.setState(0x1b60, 0x510f, 0x2360, 0x6674, 0xe27b, 0xf513, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0x11, 0x13, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x510f);
        EXPECT(gbc.pc(), 0x1b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0240
        gbc.setState(0xb96f, 0x684b, 0x4150, 0xf640, 0xcef1, 0x7e30, 0x0, 0x1);
        gbc.writeMem(0xb96f, { 0x11, 0x3f, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x684b);
        EXPECT(gbc.pc(), 0xb972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96f), 0x11);
        EXPECT(gbc.readMem(0xb970), 0x3f);
        EXPECT(gbc.readMem(0xb971), 0x19);
        // 11 0241
        gbc.setState(0x259f, 0x5cd1, 0x5770, 0xb4da, 0xbf51, 0x5fe5, 0x0, 0x0);
        gbc.writeMem(0x259f, { 0x11, 0xf9, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5cd1);
        EXPECT(gbc.pc(), 0x25a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0242
        gbc.setState(0xd989, 0x83a7, 0x18d0, 0x188c, 0x5e37, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xd989, { 0x11, 0x26, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x83a7);
        EXPECT(gbc.pc(), 0xd98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd989), 0x11);
        EXPECT(gbc.readMem(0xd98a), 0x26);
        EXPECT(gbc.readMem(0xd98b), 0x21);
        // 11 0243
        gbc.setState(0xc09a, 0x77ec, 0xba30, 0xcd5, 0x34d4, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0xc09a, { 0x11, 0xf5, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x77ec);
        EXPECT(gbc.pc(), 0xc09d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09a), 0x11);
        EXPECT(gbc.readMem(0xc09b), 0xf5);
        EXPECT(gbc.readMem(0xc09c), 0x9d);
        // 11 0244
        gbc.setState(0xe4c4, 0x60e5, 0x4630, 0x74f2, 0xd648, 0x320a, 0x0, 0x0);
        gbc.writeMem(0xe4c4, { 0x11, 0x37, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x60e5);
        EXPECT(gbc.pc(), 0xe4c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c4), 0x11);
        EXPECT(gbc.readMem(0xe4c5), 0x37);
        EXPECT(gbc.readMem(0xe4c6), 0xbc);
        // 11 0245
        gbc.setState(0x4862, 0xfc1c, 0xd7a0, 0x14f1, 0x73bc, 0xd1f7, 0x1, 0x1);
        gbc.writeMem(0x4862, { 0x11, 0x86, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfc1c);
        EXPECT(gbc.pc(), 0x4865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0246
        gbc.setState(0xe13d, 0xbe15, 0xae60, 0x4d5d, 0x9e3c, 0x2f6c, 0x1, 0x1);
        gbc.writeMem(0xe13d, { 0x11, 0xd9, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbe15);
        EXPECT(gbc.pc(), 0xe140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13d), 0x11);
        EXPECT(gbc.readMem(0xe13e), 0xd9);
        EXPECT(gbc.readMem(0xe13f), 0x61);
        // 11 0247
        gbc.setState(0xdda5, 0x7b11, 0xf2d0, 0xd8a1, 0x2900, 0x7813, 0x0, 0x1);
        gbc.writeMem(0xdda5, { 0x11, 0x4e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7b11);
        EXPECT(gbc.pc(), 0xdda8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda5), 0x11);
        EXPECT(gbc.readMem(0xdda6), 0x4e);
        EXPECT(gbc.readMem(0xdda7), 0x7f);
        // 11 0248
        gbc.setState(0x3c30, 0xe1a6, 0x22d0, 0x705e, 0x9e2d, 0xc46f, 0x0, 0x0);
        gbc.writeMem(0x3c30, { 0x11, 0x8c, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe1a6);
        EXPECT(gbc.pc(), 0x3c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0249
        gbc.setState(0x9a2d, 0xa30d, 0xd6a0, 0xb561, 0x8dc9, 0x13e1, 0x0, 0x1);
        gbc.writeMem(0x9a2d, { 0x11, 0x20, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa30d);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2d), 0x11);
        EXPECT(gbc.readMem(0x9a2e), 0x20);
        EXPECT(gbc.readMem(0x9a2f), 0x18);
        // 11 024A
        gbc.setState(0x2e4d, 0xd129, 0xae20, 0x512a, 0xd65, 0xa93e, 0x0, 0x1);
        gbc.writeMem(0x2e4d, { 0x11, 0xbe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd129);
        EXPECT(gbc.pc(), 0x2e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 024B
        gbc.setState(0xaa5a, 0xdf4a, 0xacf0, 0x4878, 0xaa80, 0xa125, 0x1, 0x0);
        gbc.writeMem(0xaa5a, { 0x11, 0xa0, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdf4a);
        EXPECT(gbc.pc(), 0xaa5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5a), 0x11);
        EXPECT(gbc.readMem(0xaa5b), 0xa0);
        EXPECT(gbc.readMem(0xaa5c), 0x4f);
        // 11 024C
        gbc.setState(0xa91a, 0xb5cc, 0x2320, 0xf7e3, 0xe0d5, 0xdf86, 0x0, 0x1);
        gbc.writeMem(0xa91a, { 0x11, 0xa5, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb5cc);
        EXPECT(gbc.pc(), 0xa91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91a), 0x11);
        EXPECT(gbc.readMem(0xa91b), 0xa5);
        EXPECT(gbc.readMem(0xa91c), 0xb5);
        // 11 024D
        gbc.setState(0x1adf, 0xa1ad, 0x430, 0x1494, 0x7395, 0x7885, 0x0, 0x0);
        gbc.writeMem(0x1adf, { 0x11, 0xe, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa1ad);
        EXPECT(gbc.pc(), 0x1ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 024E
        gbc.setState(0x99ff, 0x330, 0xf960, 0x22ca, 0x8195, 0x5783, 0x0, 0x0);
        gbc.writeMem(0x99ff, { 0x11, 0x8a, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x330);
        EXPECT(gbc.pc(), 0x9a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ff), 0x11);
        EXPECT(gbc.readMem(0x9a00), 0x8a);
        EXPECT(gbc.readMem(0x9a01), 0xf7);
        // 11 024F
        gbc.setState(0x496f, 0xe365, 0x380, 0xd372, 0x68e5, 0xbaf, 0x0, 0x1);
        gbc.writeMem(0x496f, { 0x11, 0xa2, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe365);
        EXPECT(gbc.pc(), 0x4972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0251
        gbc.setState(0x1f13, 0xba2d, 0x9190, 0x60fe, 0x4692, 0x4963, 0x1, 0x0);
        gbc.writeMem(0x1f13, { 0x11, 0xa5, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xba2d);
        EXPECT(gbc.pc(), 0x1f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0252
        gbc.setState(0x6fb6, 0xd113, 0xb730, 0xc7c4, 0x882d, 0x95ad, 0x1, 0x1);
        gbc.writeMem(0x6fb6, { 0x11, 0xcb, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x6fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0253
        gbc.setState(0xd945, 0x5734, 0x2060, 0xf304, 0x78b9, 0x8262, 0x1, 0x1);
        gbc.writeMem(0xd945, { 0x11, 0x55, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5734);
        EXPECT(gbc.pc(), 0xd948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd945), 0x11);
        EXPECT(gbc.readMem(0xd946), 0x55);
        EXPECT(gbc.readMem(0xd947), 0x5);
        // 11 0254
        gbc.setState(0xb89d, 0x6153, 0xb460, 0x1022, 0x954, 0x89f6, 0x0, 0x0);
        gbc.writeMem(0xb89d, { 0x11, 0x1a, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6153);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89d), 0x11);
        EXPECT(gbc.readMem(0xb89e), 0x1a);
        EXPECT(gbc.readMem(0xb89f), 0xb6);
        // 11 0255
        gbc.setState(0xc68, 0xf6db, 0xc5e0, 0x8e5e, 0x4221, 0xad3f, 0x1, 0x1);
        gbc.writeMem(0xc68, { 0x11, 0x2a, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf6db);
        EXPECT(gbc.pc(), 0xc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0256
        gbc.setState(0xd6ff, 0x319b, 0x46d0, 0x4a0d, 0x322f, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0xd6ff, { 0x11, 0x48, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x319b);
        EXPECT(gbc.pc(), 0xd702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ff), 0x11);
        EXPECT(gbc.readMem(0xd700), 0x48);
        EXPECT(gbc.readMem(0xd701), 0xcf);
        // 11 0257
        gbc.setState(0xa87b, 0x941, 0x370, 0xec1d, 0x27d9, 0x593a, 0x0, 0x1);
        gbc.writeMem(0xa87b, { 0x11, 0x20, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x941);
        EXPECT(gbc.pc(), 0xa87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa87b), 0x11);
        EXPECT(gbc.readMem(0xa87c), 0x20);
        EXPECT(gbc.readMem(0xa87d), 0xfe);
        // 11 0258
        gbc.setState(0x68c7, 0x8e4f, 0x5be0, 0x5f71, 0x6c75, 0xd1c0, 0x0, 0x1);
        gbc.writeMem(0x68c7, { 0x11, 0x1c, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0x68ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0259
        gbc.setState(0x49eb, 0x5680, 0x5d70, 0x6bcb, 0xa43d, 0x5f85, 0x1, 0x0);
        gbc.writeMem(0x49eb, { 0x11, 0x3b, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5680);
        EXPECT(gbc.pc(), 0x49ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 025A
        gbc.setState(0xe5e, 0xcf2c, 0x29f0, 0x31b7, 0xe89, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0xe5e, { 0x11, 0xaf, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcf2c);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 025B
        gbc.setState(0xaaae, 0xcc4c, 0xf50, 0x703f, 0xfa12, 0x8375, 0x1, 0x1);
        gbc.writeMem(0xaaae, { 0x11, 0x4b, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcc4c);
        EXPECT(gbc.pc(), 0xaab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaae), 0x11);
        EXPECT(gbc.readMem(0xaaaf), 0x4b);
        EXPECT(gbc.readMem(0xaab0), 0x45);
        // 11 025C
        gbc.setState(0xaded, 0x1ffa, 0x4f0, 0xf5b4, 0xf58d, 0xca07, 0x0, 0x1);
        gbc.writeMem(0xaded, { 0x11, 0x8a, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1ffa);
        EXPECT(gbc.pc(), 0xadf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaded), 0x11);
        EXPECT(gbc.readMem(0xadee), 0x8a);
        EXPECT(gbc.readMem(0xadef), 0xa1);
        // 11 025D
        gbc.setState(0x635c, 0xbaee, 0xc480, 0xfeb1, 0x85c9, 0xce75, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0x11, 0x88, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbaee);
        EXPECT(gbc.pc(), 0x635f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 025E
        gbc.setState(0x9028, 0x80a3, 0x1b30, 0xd7c1, 0x1b3c, 0xa4cf, 0x1, 0x0);
        gbc.writeMem(0x9028, { 0x11, 0xac, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x80a3);
        EXPECT(gbc.pc(), 0x902b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9028), 0x11);
        EXPECT(gbc.readMem(0x9029), 0xac);
        EXPECT(gbc.readMem(0x902a), 0x8a);
        // 11 025F
        gbc.setState(0x8298, 0xb758, 0x600, 0x22e1, 0x1095, 0x7070, 0x0, 0x0);
        gbc.writeMem(0x8298, { 0x11, 0xc4, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb758);
        EXPECT(gbc.pc(), 0x829b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8298), 0x11);
        EXPECT(gbc.readMem(0x8299), 0xc4);
        EXPECT(gbc.readMem(0x829a), 0xcb);
        // 11 0260
        gbc.setState(0x9c77, 0xd2e9, 0x8d10, 0xc44d, 0x322c, 0x7979, 0x0, 0x0);
        gbc.writeMem(0x9c77, { 0x11, 0xf4, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd2e9);
        EXPECT(gbc.pc(), 0x9c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c77), 0x11);
        EXPECT(gbc.readMem(0x9c78), 0xf4);
        EXPECT(gbc.readMem(0x9c79), 0xd3);
        // 11 0261
        gbc.setState(0x9eaa, 0xd8e7, 0xabf0, 0xe2c2, 0x73fe, 0xbd5c, 0x1, 0x1);
        gbc.writeMem(0x9eaa, { 0x11, 0x44, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd8e7);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eaa), 0x11);
        EXPECT(gbc.readMem(0x9eab), 0x44);
        EXPECT(gbc.readMem(0x9eac), 0x71);
        // 11 0262
        gbc.setState(0xdff5, 0xd154, 0x5380, 0x63ce, 0xd83e, 0x1649, 0x1, 0x1);
        gbc.writeMem(0xdff5, { 0x11, 0x7, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd154);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff5), 0x11);
        EXPECT(gbc.readMem(0xdff6), 0x7);
        EXPECT(gbc.readMem(0xdff7), 0x21);
        // 11 0263
        gbc.setState(0xa0ac, 0xad7d, 0xa090, 0x3990, 0xde1b, 0x59ed, 0x1, 0x0);
        gbc.writeMem(0xa0ac, { 0x11, 0x19, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xad7d);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ac), 0x11);
        EXPECT(gbc.readMem(0xa0ad), 0x19);
        EXPECT(gbc.readMem(0xa0ae), 0x3c);
        // 11 0264
        gbc.setState(0x968a, 0x6310, 0xbc40, 0x620a, 0xc1ce, 0x39d8, 0x0, 0x0);
        gbc.writeMem(0x968a, { 0x11, 0x3f, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6310);
        EXPECT(gbc.pc(), 0x968d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968a), 0x11);
        EXPECT(gbc.readMem(0x968b), 0x3f);
        EXPECT(gbc.readMem(0x968c), 0xb);
        // 11 0265
        gbc.setState(0x280d, 0x7b21, 0x8a80, 0xb536, 0xe54, 0x13ad, 0x1, 0x1);
        gbc.writeMem(0x280d, { 0x11, 0x4f, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7b21);
        EXPECT(gbc.pc(), 0x2810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0266
        gbc.setState(0x573e, 0xe7e3, 0x5910, 0xcd5f, 0xf8b0, 0xdde6, 0x0, 0x1);
        gbc.writeMem(0x573e, { 0x11, 0xab, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe7e3);
        EXPECT(gbc.pc(), 0x5741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0267
        gbc.setState(0xc893, 0x46bd, 0xc280, 0x299b, 0xf1d8, 0x3f7b, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0x11, 0xa3, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x46bd);
        EXPECT(gbc.pc(), 0xc896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc893), 0x11);
        EXPECT(gbc.readMem(0xc894), 0xa3);
        EXPECT(gbc.readMem(0xc895), 0x80);
        // 11 0268
        gbc.setState(0x25ce, 0x2321, 0x7d00, 0x147a, 0x9844, 0x283a, 0x1, 0x1);
        gbc.writeMem(0x25ce, { 0x11, 0x9a, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2321);
        EXPECT(gbc.pc(), 0x25d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0269
        gbc.setState(0x9138, 0xbb09, 0xc350, 0x9bd0, 0x5c09, 0x33de, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0x11, 0x21, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbb09);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9138), 0x11);
        EXPECT(gbc.readMem(0x9139), 0x21);
        EXPECT(gbc.readMem(0x913a), 0xf1);
        // 11 026A
        gbc.setState(0x19bc, 0x9754, 0xa360, 0xac52, 0x54a9, 0x25b8, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0x11, 0x35, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9754);
        EXPECT(gbc.pc(), 0x19bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 026B
        gbc.setState(0x32e9, 0x95bd, 0x3f50, 0xb139, 0xa968, 0x6081, 0x0, 0x1);
        gbc.writeMem(0x32e9, { 0x11, 0xf, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x95bd);
        EXPECT(gbc.pc(), 0x32ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 026C
        gbc.setState(0xe03c, 0xa2cf, 0x6db0, 0x4012, 0xc360, 0x553b, 0x1, 0x0);
        gbc.writeMem(0xe03c, { 0x11, 0xd7, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0xe03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe03c), 0x11);
        EXPECT(gbc.readMem(0xe03d), 0xd7);
        EXPECT(gbc.readMem(0xe03e), 0x69);
        // 11 026D
        gbc.setState(0x2e46, 0x59bf, 0x4060, 0x5792, 0x23e4, 0x696f, 0x0, 0x1);
        gbc.writeMem(0x2e46, { 0x11, 0x25, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x59bf);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 026E
        gbc.setState(0x3d2d, 0xf7a2, 0x1720, 0x25b0, 0x5e12, 0xe0ce, 0x0, 0x0);
        gbc.writeMem(0x3d2d, { 0x11, 0x68, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf7a2);
        EXPECT(gbc.pc(), 0x3d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 026F
        gbc.setState(0x7a47, 0xcb1f, 0x36c0, 0x9f30, 0xb2d8, 0xf4a4, 0x1, 0x1);
        gbc.writeMem(0x7a47, { 0x11, 0x1e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcb1f);
        EXPECT(gbc.pc(), 0x7a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0270
        gbc.setState(0x1381, 0x1c25, 0xae70, 0xe864, 0x94ac, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0x11, 0x7b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1c25);
        EXPECT(gbc.pc(), 0x1384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0271
        gbc.setState(0x4249, 0x1acd, 0x360, 0x5f4b, 0x3a3, 0x2e06, 0x0, 0x1);
        gbc.writeMem(0x4249, { 0x11, 0xef, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1acd);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0272
        gbc.setState(0x39b3, 0xa75d, 0xaaa0, 0x4161, 0xe1e4, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x39b3, { 0x11, 0x79, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa75d);
        EXPECT(gbc.pc(), 0x39b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0273
        gbc.setState(0x2856, 0x19aa, 0x50a0, 0xaaf8, 0xa253, 0xd54c, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0x11, 0xab, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x19aa);
        EXPECT(gbc.pc(), 0x2859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0275
        gbc.setState(0xb199, 0x2c31, 0xdbe0, 0xb7ea, 0x3f3c, 0xb835, 0x1, 0x1);
        gbc.writeMem(0xb199, { 0x11, 0x17, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2c31);
        EXPECT(gbc.pc(), 0xb19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb199), 0x11);
        EXPECT(gbc.readMem(0xb19a), 0x17);
        EXPECT(gbc.readMem(0xb19b), 0xd9);
        // 11 0276
        gbc.setState(0x4721, 0xa6e9, 0x4260, 0xab5a, 0xd7c9, 0x1af5, 0x0, 0x0);
        gbc.writeMem(0x4721, { 0x11, 0x9f, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa6e9);
        EXPECT(gbc.pc(), 0x4724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0277
        gbc.setState(0x9106, 0xa485, 0xd30, 0xd53a, 0x8075, 0x9d59, 0x0, 0x1);
        gbc.writeMem(0x9106, { 0x11, 0xcd, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa485);
        EXPECT(gbc.pc(), 0x9109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9106), 0x11);
        EXPECT(gbc.readMem(0x9107), 0xcd);
        EXPECT(gbc.readMem(0x9108), 0xd7);
        // 11 0278
        gbc.setState(0xe9fa, 0xb9f5, 0x3c70, 0x1b12, 0xc344, 0x875d, 0x0, 0x0);
        gbc.writeMem(0xe9fa, { 0x11, 0x75, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb9f5);
        EXPECT(gbc.pc(), 0xe9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fa), 0x11);
        EXPECT(gbc.readMem(0xe9fb), 0x75);
        EXPECT(gbc.readMem(0xe9fc), 0x15);
        // 11 0279
        gbc.setState(0xd6da, 0x135b, 0xbb50, 0xbfe7, 0x1c9, 0xab21, 0x0, 0x1);
        gbc.writeMem(0xd6da, { 0x11, 0x4, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x135b);
        EXPECT(gbc.pc(), 0xd6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6da), 0x11);
        EXPECT(gbc.readMem(0xd6db), 0x4);
        EXPECT(gbc.readMem(0xd6dc), 0xf0);
        // 11 027A
        gbc.setState(0x564b, 0x16b9, 0x24b0, 0x87ad, 0x290f, 0xaa3e, 0x0, 0x0);
        gbc.writeMem(0x564b, { 0x11, 0xe9, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0x564e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 027B
        gbc.setState(0x3544, 0xa508, 0xfef0, 0x35ef, 0xdc77, 0x1031, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0x11, 0x54, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa508);
        EXPECT(gbc.pc(), 0x3547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 027C
        gbc.setState(0x5863, 0xee5d, 0x5130, 0xb56e, 0x10db, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0x5863, { 0x11, 0xfa, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xee5d);
        EXPECT(gbc.pc(), 0x5866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 027D
        gbc.setState(0x490e, 0xfb92, 0x80c0, 0x9d07, 0x569c, 0x632f, 0x0, 0x0);
        gbc.writeMem(0x490e, { 0x11, 0x4a, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfb92);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 027E
        gbc.setState(0xc0e5, 0xbd98, 0xd9e0, 0x12ca, 0x613d, 0x66a7, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0x11, 0x2f, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbd98);
        EXPECT(gbc.pc(), 0xc0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e5), 0x11);
        EXPECT(gbc.readMem(0xc0e6), 0x2f);
        EXPECT(gbc.readMem(0xc0e7), 0x48);
        // 11 027F
        gbc.setState(0x9376, 0x5bdb, 0x3920, 0xb836, 0x61b2, 0x422d, 0x1, 0x0);
        gbc.writeMem(0x9376, { 0x11, 0xed, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5bdb);
        EXPECT(gbc.pc(), 0x9379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9376), 0x11);
        EXPECT(gbc.readMem(0x9377), 0xed);
        EXPECT(gbc.readMem(0x9378), 0x84);
        // 11 0280
        gbc.setState(0x29a0, 0x24bd, 0x34d0, 0xbb72, 0xd99f, 0x7e03, 0x0, 0x1);
        gbc.writeMem(0x29a0, { 0x11, 0x7a, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x24bd);
        EXPECT(gbc.pc(), 0x29a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0281
        gbc.setState(0x3010, 0xc1f6, 0x41a0, 0x9111, 0xed0c, 0x2d76, 0x1, 0x1);
        gbc.writeMem(0x3010, { 0x11, 0xf6, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc1f6);
        EXPECT(gbc.pc(), 0x3013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0282
        gbc.setState(0x28db, 0x2a6b, 0x6790, 0x1489, 0x43ea, 0x1123, 0x0, 0x1);
        gbc.writeMem(0x28db, { 0x11, 0xd5, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2a6b);
        EXPECT(gbc.pc(), 0x28de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0283
        gbc.setState(0xc0d2, 0x88c6, 0x1870, 0xdee5, 0x8384, 0x1251, 0x1, 0x0);
        gbc.writeMem(0xc0d2, { 0x11, 0x31, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x88c6);
        EXPECT(gbc.pc(), 0xc0d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d2), 0x11);
        EXPECT(gbc.readMem(0xc0d3), 0x31);
        EXPECT(gbc.readMem(0xc0d4), 0x81);
        // 11 0284
        gbc.setState(0x2d75, 0x7b1d, 0x1f80, 0xba3d, 0xb155, 0xaf01, 0x1, 0x1);
        gbc.writeMem(0x2d75, { 0x11, 0x51, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7b1d);
        EXPECT(gbc.pc(), 0x2d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0285
        gbc.setState(0xcd99, 0xb76b, 0x2150, 0x4a12, 0xf9f1, 0x7d86, 0x1, 0x0);
        gbc.writeMem(0xcd99, { 0x11, 0x3, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb76b);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd99), 0x11);
        EXPECT(gbc.readMem(0xcd9a), 0x3);
        EXPECT(gbc.readMem(0xcd9b), 0xc6);
        // 11 0286
        gbc.setState(0xa9c2, 0x76f1, 0xec0, 0x24e2, 0x6464, 0xe83f, 0x0, 0x1);
        gbc.writeMem(0xa9c2, { 0x11, 0xd6, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x76f1);
        EXPECT(gbc.pc(), 0xa9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c2), 0x11);
        EXPECT(gbc.readMem(0xa9c3), 0xd6);
        EXPECT(gbc.readMem(0xa9c4), 0xbb);
        // 11 0287
        gbc.setState(0x1700, 0xb447, 0x66b0, 0xdfd, 0xa4de, 0x2ae7, 0x1, 0x1);
        gbc.writeMem(0x1700, { 0x11, 0x7, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb447);
        EXPECT(gbc.pc(), 0x1703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0288
        gbc.setState(0xb85f, 0x48a9, 0xec80, 0xb7d8, 0xa61c, 0x49a5, 0x1, 0x0);
        gbc.writeMem(0xb85f, { 0x11, 0x62, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x48a9);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85f), 0x11);
        EXPECT(gbc.readMem(0xb860), 0x62);
        EXPECT(gbc.readMem(0xb861), 0x36);
        // 11 0289
        gbc.setState(0xd6bb, 0xf9d2, 0x8100, 0x7031, 0x80dc, 0x1af2, 0x0, 0x0);
        gbc.writeMem(0xd6bb, { 0x11, 0x23, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf9d2);
        EXPECT(gbc.pc(), 0xd6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6bb), 0x11);
        EXPECT(gbc.readMem(0xd6bc), 0x23);
        EXPECT(gbc.readMem(0xd6bd), 0x2a);
        // 11 028A
        gbc.setState(0x735d, 0x8a7e, 0x6a60, 0x2e18, 0xecb3, 0x3868, 0x1, 0x1);
        gbc.writeMem(0x735d, { 0x11, 0xdc, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8a7e);
        EXPECT(gbc.pc(), 0x7360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 028B
        gbc.setState(0x525d, 0x9b39, 0xcff0, 0x4235, 0x599, 0xec71, 0x1, 0x0);
        gbc.writeMem(0x525d, { 0x11, 0x7c, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 028C
        gbc.setState(0x1793, 0x5ce1, 0x8590, 0x6a1e, 0xb800, 0xbaa2, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0x11, 0x3, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0x1796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 028D
        gbc.setState(0xa7e3, 0x539d, 0x4e30, 0xd05a, 0x376a, 0xfac1, 0x0, 0x0);
        gbc.writeMem(0xa7e3, { 0x11, 0x7, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x539d);
        EXPECT(gbc.pc(), 0xa7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e3), 0x11);
        EXPECT(gbc.readMem(0xa7e4), 0x7);
        EXPECT(gbc.readMem(0xa7e5), 0xe7);
        // 11 028E
        gbc.setState(0x34c6, 0x31d9, 0x6e80, 0x3e36, 0x32c6, 0x9da1, 0x0, 0x0);
        gbc.writeMem(0x34c6, { 0x11, 0x3d, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x31d9);
        EXPECT(gbc.pc(), 0x34c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 028F
        gbc.setState(0xce27, 0x220b, 0xd120, 0xee23, 0x50ea, 0x4005, 0x0, 0x0);
        gbc.writeMem(0xce27, { 0x11, 0x23, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x220b);
        EXPECT(gbc.pc(), 0xce2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce27), 0x11);
        EXPECT(gbc.readMem(0xce28), 0x23);
        EXPECT(gbc.readMem(0xce29), 0xf8);
        // 11 0290
        gbc.setState(0x5d99, 0x4c15, 0x52e0, 0xe7ee, 0xe819, 0x7e65, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0x11, 0x2, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4c15);
        EXPECT(gbc.pc(), 0x5d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0291
        gbc.setState(0x999c, 0x2bfa, 0x380, 0xc0cf, 0xd004, 0xe973, 0x1, 0x1);
        gbc.writeMem(0x999c, { 0x11, 0x36, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2bfa);
        EXPECT(gbc.pc(), 0x999f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999c), 0x11);
        EXPECT(gbc.readMem(0x999d), 0x36);
        EXPECT(gbc.readMem(0x999e), 0x49);
        // 11 0292
        gbc.setState(0xa18b, 0x2059, 0xc800, 0xbab3, 0xa93a, 0x34e6, 0x0, 0x1);
        gbc.writeMem(0xa18b, { 0x11, 0x68, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2059);
        EXPECT(gbc.pc(), 0xa18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18b), 0x11);
        EXPECT(gbc.readMem(0xa18c), 0x68);
        EXPECT(gbc.readMem(0xa18d), 0xbb);
        // 11 0293
        gbc.setState(0x1bea, 0x38f2, 0x6a20, 0xb684, 0xf2eb, 0x9b26, 0x0, 0x1);
        gbc.writeMem(0x1bea, { 0x11, 0x2b, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x38f2);
        EXPECT(gbc.pc(), 0x1bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0294
        gbc.setState(0xa91f, 0xc165, 0xd800, 0x1e65, 0xec25, 0xc5ee, 0x1, 0x1);
        gbc.writeMem(0xa91f, { 0x11, 0xa7, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc165);
        EXPECT(gbc.pc(), 0xa922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91f), 0x11);
        EXPECT(gbc.readMem(0xa920), 0xa7);
        EXPECT(gbc.readMem(0xa921), 0xd9);
        // 11 0295
        gbc.setState(0xb0ff, 0x4a10, 0x1840, 0x6ae0, 0x6b14, 0xc418, 0x1, 0x1);
        gbc.writeMem(0xb0ff, { 0x11, 0xf8, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4a10);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ff), 0x11);
        EXPECT(gbc.readMem(0xb100), 0xf8);
        EXPECT(gbc.readMem(0xb101), 0x18);
        // 11 0296
        gbc.setState(0xe717, 0x10e0, 0x3a70, 0x52d0, 0x60f4, 0x9f6f, 0x0, 0x1);
        gbc.writeMem(0xe717, { 0x11, 0x96, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x10e0);
        EXPECT(gbc.pc(), 0xe71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe717), 0x11);
        EXPECT(gbc.readMem(0xe718), 0x96);
        EXPECT(gbc.readMem(0xe719), 0x81);
        // 11 0297
        gbc.setState(0xe1b7, 0x2ba5, 0x8960, 0xc7d8, 0xc4b5, 0x7274, 0x1, 0x1);
        gbc.writeMem(0xe1b7, { 0x11, 0x8b, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2ba5);
        EXPECT(gbc.pc(), 0xe1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b7), 0x11);
        EXPECT(gbc.readMem(0xe1b8), 0x8b);
        EXPECT(gbc.readMem(0xe1b9), 0xdd);
        // 11 0298
        gbc.setState(0x8908, 0xa833, 0xab90, 0x671c, 0x16c9, 0xbb0c, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0x11, 0xb5, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa833);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8908), 0x11);
        EXPECT(gbc.readMem(0x8909), 0xb5);
        EXPECT(gbc.readMem(0x890a), 0x83);
        // 11 0299
        gbc.setState(0x2e0e, 0xf74f, 0x92e0, 0xa908, 0x2aa, 0xfbaa, 0x1, 0x1);
        gbc.writeMem(0x2e0e, { 0x11, 0xbd, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf74f);
        EXPECT(gbc.pc(), 0x2e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 029A
        gbc.setState(0x6075, 0xf784, 0x1350, 0x10d8, 0x73e1, 0x9170, 0x0, 0x1);
        gbc.writeMem(0x6075, { 0x11, 0x88, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf784);
        EXPECT(gbc.pc(), 0x6078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 029B
        gbc.setState(0x663d, 0x8e27, 0x7680, 0xc955, 0x15f7, 0xf56a, 0x0, 0x1);
        gbc.writeMem(0x663d, { 0x11, 0x18, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8e27);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 029E
        gbc.setState(0x5c0, 0x755f, 0x2010, 0xd0e2, 0x2ab4, 0x9c1b, 0x1, 0x1);
        gbc.writeMem(0x5c0, { 0x11, 0x93, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x755f);
        EXPECT(gbc.pc(), 0x5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 029F
        gbc.setState(0xa63b, 0x5a59, 0xe6a0, 0x6c42, 0xc14, 0xa7f2, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0x11, 0xd6, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5a59);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63b), 0x11);
        EXPECT(gbc.readMem(0xa63c), 0xd6);
        EXPECT(gbc.readMem(0xa63d), 0xb2);
        // 11 02A0
        gbc.setState(0x14ae, 0x72a0, 0xcab0, 0x6343, 0x1ef8, 0x8e5e, 0x0, 0x1);
        gbc.writeMem(0x14ae, { 0x11, 0xb6, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x72a0);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02A2
        gbc.setState(0x2268, 0x13, 0x450, 0x8961, 0xe297, 0xd720, 0x1, 0x0);
        gbc.writeMem(0x2268, { 0x11, 0xb4, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x13);
        EXPECT(gbc.pc(), 0x226b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02A3
        gbc.setState(0x7c2b, 0xb0aa, 0xb00, 0x559, 0xadac, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0x7c2b, { 0x11, 0xfe, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb0aa);
        EXPECT(gbc.pc(), 0x7c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02A4
        gbc.setState(0xb9bb, 0x2144, 0x33d0, 0x653f, 0x322, 0x1fa7, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0x11, 0x71, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2144);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bb), 0x11);
        EXPECT(gbc.readMem(0xb9bc), 0x71);
        EXPECT(gbc.readMem(0xb9bd), 0x66);
        // 11 02A5
        gbc.setState(0xbd7f, 0xda27, 0x9800, 0xbf0a, 0x32d5, 0x4174, 0x0, 0x0);
        gbc.writeMem(0xbd7f, { 0x11, 0xb9, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xda27);
        EXPECT(gbc.pc(), 0xbd82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0x11);
        EXPECT(gbc.readMem(0xbd80), 0xb9);
        EXPECT(gbc.readMem(0xbd81), 0xe6);
        // 11 02A6
        gbc.setState(0x6a42, 0x3eee, 0x9e20, 0xf968, 0x3572, 0x673b, 0x1, 0x0);
        gbc.writeMem(0x6a42, { 0x11, 0x1a, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3eee);
        EXPECT(gbc.pc(), 0x6a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02A7
        gbc.setState(0x48ac, 0xa305, 0x920, 0x95, 0x32f3, 0xc00b, 0x1, 0x0);
        gbc.writeMem(0x48ac, { 0x11, 0xa, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa305);
        EXPECT(gbc.pc(), 0x48af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02A8
        gbc.setState(0xd9c7, 0x3e40, 0xdd80, 0x61b8, 0x61a2, 0xee98, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0x11, 0x10, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3e40);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c7), 0x11);
        EXPECT(gbc.readMem(0xd9c8), 0x10);
        EXPECT(gbc.readMem(0xd9c9), 0xbe);
        // 11 02AA
        gbc.setState(0xc254, 0x5f2d, 0x9e00, 0x94f9, 0x48c8, 0xc0d4, 0x0, 0x1);
        gbc.writeMem(0xc254, { 0x11, 0xc0, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5f2d);
        EXPECT(gbc.pc(), 0xc257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc254), 0x11);
        EXPECT(gbc.readMem(0xc255), 0xc0);
        EXPECT(gbc.readMem(0xc256), 0xc);
        // 11 02AB
        gbc.setState(0xa178, 0x418b, 0x41a0, 0xab65, 0xfa60, 0x50d1, 0x1, 0x0);
        gbc.writeMem(0xa178, { 0x11, 0x6b, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x418b);
        EXPECT(gbc.pc(), 0xa17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa178), 0x11);
        EXPECT(gbc.readMem(0xa179), 0x6b);
        EXPECT(gbc.readMem(0xa17a), 0x86);
        // 11 02AC
        gbc.setState(0xd60f, 0xb081, 0x46b0, 0xaa6, 0x8192, 0xbbb8, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0x11, 0x5f, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb081);
        EXPECT(gbc.pc(), 0xd612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60f), 0x11);
        EXPECT(gbc.readMem(0xd610), 0x5f);
        EXPECT(gbc.readMem(0xd611), 0xaf);
        // 11 02AD
        gbc.setState(0x5512, 0x3963, 0xed50, 0x5965, 0xa7a6, 0xfd77, 0x0, 0x0);
        gbc.writeMem(0x5512, { 0x11, 0xfc, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3963);
        EXPECT(gbc.pc(), 0x5515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02AE
        gbc.setState(0x4dbd, 0xda99, 0x74e0, 0xeb6f, 0x2806, 0x6b53, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0x11, 0x9f, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xda99);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02AF
        gbc.setState(0xd245, 0x5b9f, 0xfee0, 0x85ca, 0x1da6, 0x2f38, 0x0, 0x0);
        gbc.writeMem(0xd245, { 0x11, 0x73, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5b9f);
        EXPECT(gbc.pc(), 0xd248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd245), 0x11);
        EXPECT(gbc.readMem(0xd246), 0x73);
        EXPECT(gbc.readMem(0xd247), 0xdd);
        // 11 02B0
        gbc.setState(0x258, 0x87d9, 0xd7e0, 0x966a, 0xafbb, 0x46af, 0x1, 0x1);
        gbc.writeMem(0x258, { 0x11, 0x64, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x87d9);
        EXPECT(gbc.pc(), 0x25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02B1
        gbc.setState(0x53ae, 0x422c, 0x5d0, 0xd7d, 0x11d5, 0xac49, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0x11, 0xbd, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x422c);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02B2
        gbc.setState(0x1d91, 0xabeb, 0xe4b0, 0x4a20, 0xfc1d, 0x1343, 0x1, 0x1);
        gbc.writeMem(0x1d91, { 0x11, 0xb5, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xabeb);
        EXPECT(gbc.pc(), 0x1d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02B3
        gbc.setState(0xd51e, 0xe6cc, 0xf490, 0x94c2, 0x312a, 0x2925, 0x1, 0x0);
        gbc.writeMem(0xd51e, { 0x11, 0x68, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe6cc);
        EXPECT(gbc.pc(), 0xd521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51e), 0x11);
        EXPECT(gbc.readMem(0xd51f), 0x68);
        EXPECT(gbc.readMem(0xd520), 0x97);
        // 11 02B4
        gbc.setState(0x45cd, 0x625d, 0xbd80, 0xee4f, 0x72b1, 0x160, 0x0, 0x0);
        gbc.writeMem(0x45cd, { 0x11, 0xc2, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x625d);
        EXPECT(gbc.pc(), 0x45d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02B5
        gbc.setState(0x5398, 0x1f0d, 0xc70, 0xa966, 0xac94, 0x8008, 0x0, 0x0);
        gbc.writeMem(0x5398, { 0x11, 0xfc, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1f0d);
        EXPECT(gbc.pc(), 0x539b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02B6
        gbc.setState(0x5261, 0x93f, 0xffa0, 0xfb23, 0x600c, 0xec36, 0x0, 0x0);
        gbc.writeMem(0x5261, { 0x11, 0xd4, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x93f);
        EXPECT(gbc.pc(), 0x5264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02B7
        gbc.setState(0x757e, 0x134b, 0xb210, 0x208d, 0x8668, 0x3866, 0x0, 0x0);
        gbc.writeMem(0x757e, { 0x11, 0x7c, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x134b);
        EXPECT(gbc.pc(), 0x7581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02B8
        gbc.setState(0x26d1, 0xe2c5, 0x25d0, 0x30c5, 0xf676, 0xb96d, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe2c5);
        EXPECT(gbc.pc(), 0x26d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02B9
        gbc.setState(0x960, 0xaacd, 0x4850, 0x282e, 0xfc59, 0x17f1, 0x0, 0x1);
        gbc.writeMem(0x960, { 0x11, 0x1f, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaacd);
        EXPECT(gbc.pc(), 0x963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02BA
        gbc.setState(0xa6fe, 0xb22c, 0x3750, 0x304d, 0xf40, 0xe49, 0x0, 0x0);
        gbc.writeMem(0xa6fe, { 0x11, 0x84, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0xa701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6fe), 0x11);
        EXPECT(gbc.readMem(0xa6ff), 0x84);
        EXPECT(gbc.readMem(0xa700), 0xc4);
        // 11 02BB
        gbc.setState(0x2b5f, 0x5aec, 0xb790, 0x310d, 0x3c25, 0xb27, 0x1, 0x0);
        gbc.writeMem(0x2b5f, { 0x11, 0x49, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5aec);
        EXPECT(gbc.pc(), 0x2b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02BC
        gbc.setState(0xd8cc, 0x38a0, 0xd340, 0x7eb4, 0x2a69, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0xd8cc, { 0x11, 0x7f, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x38a0);
        EXPECT(gbc.pc(), 0xd8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8cc), 0x11);
        EXPECT(gbc.readMem(0xd8cd), 0x7f);
        EXPECT(gbc.readMem(0xd8ce), 0x36);
        // 11 02BD
        gbc.setState(0x8cb4, 0x6cbe, 0xe4d0, 0xee1b, 0xdbd9, 0x76f1, 0x1, 0x0);
        gbc.writeMem(0x8cb4, { 0x11, 0x53, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6cbe);
        EXPECT(gbc.pc(), 0x8cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb4), 0x11);
        EXPECT(gbc.readMem(0x8cb5), 0x53);
        EXPECT(gbc.readMem(0x8cb6), 0x2b);
        // 11 02BF
        gbc.setState(0x1f92, 0xa584, 0xc150, 0xfed7, 0x64a4, 0x3eb4, 0x1, 0x0);
        gbc.writeMem(0x1f92, { 0x11, 0x4c, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0x1f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02C0
        gbc.setState(0x1bd2, 0xa1cb, 0x56c0, 0xdf1e, 0xf9f2, 0x9c17, 0x0, 0x1);
        gbc.writeMem(0x1bd2, { 0x11, 0x67, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa1cb);
        EXPECT(gbc.pc(), 0x1bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02C1
        gbc.setState(0xb9d3, 0xed17, 0x3c50, 0xf5ee, 0x8871, 0x5ad7, 0x1, 0x0);
        gbc.writeMem(0xb9d3, { 0x11, 0x79, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xed17);
        EXPECT(gbc.pc(), 0xb9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d3), 0x11);
        EXPECT(gbc.readMem(0xb9d4), 0x79);
        EXPECT(gbc.readMem(0xb9d5), 0x4e);
        // 11 02C2
        gbc.setState(0x20bc, 0x8b10, 0x6860, 0xe9c6, 0x4c1e, 0x512f, 0x1, 0x1);
        gbc.writeMem(0x20bc, { 0x11, 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8b10);
        EXPECT(gbc.pc(), 0x20bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02C3
        gbc.setState(0xd8e1, 0xc3a, 0x9500, 0xb4fa, 0x2586, 0x1a5a, 0x0, 0x1);
        gbc.writeMem(0xd8e1, { 0x11, 0x0, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc3a);
        EXPECT(gbc.pc(), 0xd8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e1), 0x11);
        EXPECT(gbc.readMem(0xd8e2), 0x0);
        EXPECT(gbc.readMem(0xd8e3), 0xf3);
        // 11 02C4
        gbc.setState(0x4d01, 0xfc2b, 0x87c0, 0x403f, 0x3cc6, 0xac08, 0x0, 0x1);
        gbc.writeMem(0x4d01, { 0x11, 0xf, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfc2b);
        EXPECT(gbc.pc(), 0x4d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02C5
        gbc.setState(0xc94a, 0x32a3, 0xac90, 0xe069, 0x75ed, 0x6715, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0x11, 0x46, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x32a3);
        EXPECT(gbc.pc(), 0xc94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94a), 0x11);
        EXPECT(gbc.readMem(0xc94b), 0x46);
        EXPECT(gbc.readMem(0xc94c), 0x92);
        // 11 02C6
        gbc.setState(0x1182, 0xad2c, 0xef40, 0x85c, 0x5289, 0x90, 0x1, 0x1);
        gbc.writeMem(0x1182, { 0x11, 0x64, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xad2c);
        EXPECT(gbc.pc(), 0x1185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02C7
        gbc.setState(0xf2b, 0xb4f8, 0x3d90, 0xf315, 0x9973, 0xd1f9, 0x1, 0x1);
        gbc.writeMem(0xf2b, { 0x11, 0x10, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0xf2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02C8
        gbc.setState(0x163a, 0x44eb, 0x39f0, 0xeeaf, 0xa2b8, 0x5754, 0x1, 0x1);
        gbc.writeMem(0x163a, { 0x11, 0x3e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x44eb);
        EXPECT(gbc.pc(), 0x163d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02C9
        gbc.setState(0x9e5, 0x569d, 0xc60, 0x8faa, 0xfe00, 0xc927, 0x1, 0x1);
        gbc.writeMem(0x9e5, { 0x11, 0xa4, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x569d);
        EXPECT(gbc.pc(), 0x9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02CA
        gbc.setState(0x7997, 0x73d2, 0xf2f0, 0xb156, 0x451, 0x2e0d, 0x1, 0x1);
        gbc.writeMem(0x7997, { 0x11, 0xbc, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0x799a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02CB
        gbc.setState(0x60fe, 0x9ff1, 0xc150, 0x3047, 0xf91, 0x9dd5, 0x1, 0x0);
        gbc.writeMem(0x60fe, { 0x11, 0xfc, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9ff1);
        EXPECT(gbc.pc(), 0x6101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02CC
        gbc.setState(0x1af7, 0x1591, 0xe5d0, 0x97c9, 0x1db0, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0x11, 0xe9, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1591);
        EXPECT(gbc.pc(), 0x1afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02CD
        gbc.setState(0xec0e, 0x6e1, 0xe10, 0xfada, 0xf559, 0xe897, 0x1, 0x0);
        gbc.writeMem(0xec0e, { 0x11, 0xc5, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6e1);
        EXPECT(gbc.pc(), 0xec11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0e), 0x11);
        EXPECT(gbc.readMem(0xec0f), 0xc5);
        EXPECT(gbc.readMem(0xec10), 0x2f);
        // 11 02CE
        gbc.setState(0x9b02, 0x58a4, 0x8460, 0xbdc9, 0xb25e, 0x69e6, 0x1, 0x1);
        gbc.writeMem(0x9b02, { 0x11, 0xea, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x58a4);
        EXPECT(gbc.pc(), 0x9b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b02), 0x11);
        EXPECT(gbc.readMem(0x9b03), 0xea);
        EXPECT(gbc.readMem(0x9b04), 0xe7);
        // 11 02CF
        gbc.setState(0x82bd, 0x638e, 0xac30, 0x7a2f, 0x8513, 0x60b2, 0x1, 0x0);
        gbc.writeMem(0x82bd, { 0x11, 0xac, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x638e);
        EXPECT(gbc.pc(), 0x82c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bd), 0x11);
        EXPECT(gbc.readMem(0x82be), 0xac);
        EXPECT(gbc.readMem(0x82bf), 0xe0);
        // 11 02D0
        gbc.setState(0xe7, 0x794f, 0x2310, 0x69e2, 0x2667, 0x4043, 0x1, 0x1);
        gbc.writeMem(0xe7, { 0x11, 0x1d, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x794f);
        EXPECT(gbc.pc(), 0xea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02D1
        gbc.setState(0x4725, 0x9e51, 0x7010, 0x5562, 0xe404, 0x7e51, 0x0, 0x1);
        gbc.writeMem(0x4725, { 0x11, 0x89, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9e51);
        EXPECT(gbc.pc(), 0x4728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02D2
        gbc.setState(0xbbbd, 0xfafb, 0xc710, 0x2ee5, 0x44ba, 0x38da, 0x0, 0x0);
        gbc.writeMem(0xbbbd, { 0x11, 0x8f, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfafb);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbd), 0x11);
        EXPECT(gbc.readMem(0xbbbe), 0x8f);
        EXPECT(gbc.readMem(0xbbbf), 0xa5);
        // 11 02D3
        gbc.setState(0x2bd8, 0x5553, 0x5030, 0x3863, 0xd8cb, 0x4c03, 0x0, 0x1);
        gbc.writeMem(0x2bd8, { 0x11, 0x16, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5553);
        EXPECT(gbc.pc(), 0x2bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02D5
        gbc.setState(0xee7, 0xc819, 0xa5f0, 0x4667, 0xd5f5, 0x1249, 0x1, 0x0);
        gbc.writeMem(0xee7, { 0x11, 0x1f, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0xeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02D6
        gbc.setState(0xe99f, 0xcb3d, 0x9750, 0xf1f3, 0xafce, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0x11, 0x97, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcb3d);
        EXPECT(gbc.pc(), 0xe9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99f), 0x11);
        EXPECT(gbc.readMem(0xe9a0), 0x97);
        EXPECT(gbc.readMem(0xe9a1), 0xd1);
        // 11 02D7
        gbc.setState(0x86f9, 0xf7b, 0x310, 0x6ef7, 0xb090, 0xec38, 0x1, 0x1);
        gbc.writeMem(0x86f9, { 0x11, 0x39, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf7b);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f9), 0x11);
        EXPECT(gbc.readMem(0x86fa), 0x39);
        EXPECT(gbc.readMem(0x86fb), 0x79);
        // 11 02D8
        gbc.setState(0x6f82, 0xc7a6, 0x6190, 0x81c8, 0xe6d4, 0x931d, 0x1, 0x0);
        gbc.writeMem(0x6f82, { 0x11, 0x80, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc7a6);
        EXPECT(gbc.pc(), 0x6f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02DA
        gbc.setState(0x26a3, 0x3c7e, 0x33b0, 0xfb7, 0x8f09, 0xf6e, 0x1, 0x1);
        gbc.writeMem(0x26a3, { 0x11, 0xd, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3c7e);
        EXPECT(gbc.pc(), 0x26a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02DB
        gbc.setState(0x878d, 0x201e, 0x1bd0, 0xcb40, 0x7333, 0x5a72, 0x0, 0x0);
        gbc.writeMem(0x878d, { 0x11, 0x66, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x201e);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x878d), 0x11);
        EXPECT(gbc.readMem(0x878e), 0x66);
        EXPECT(gbc.readMem(0x878f), 0xfd);
        // 11 02DD
        gbc.setState(0xadc8, 0xce7f, 0x4d40, 0x4a15, 0xcfa1, 0x222e, 0x1, 0x0);
        gbc.writeMem(0xadc8, { 0x11, 0xca, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xce7f);
        EXPECT(gbc.pc(), 0xadcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc8), 0x11);
        EXPECT(gbc.readMem(0xadc9), 0xca);
        EXPECT(gbc.readMem(0xadca), 0xb2);
        // 11 02DE
        gbc.setState(0x9df1, 0x22e4, 0xc300, 0x53b5, 0xb763, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0x11, 0x8a, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0x9df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df1), 0x11);
        EXPECT(gbc.readMem(0x9df2), 0x8a);
        EXPECT(gbc.readMem(0x9df3), 0x7f);
        // 11 02E0
        gbc.setState(0x1937, 0x5089, 0x3290, 0xefcb, 0x331f, 0x7c9, 0x0, 0x0);
        gbc.writeMem(0x1937, { 0x11, 0x6f, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0x193a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02E1
        gbc.setState(0x8143, 0xd8fe, 0xd80, 0x8bc7, 0x1a2e, 0x8db0, 0x1, 0x1);
        gbc.writeMem(0x8143, { 0x11, 0xbd, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0x8146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8143), 0x11);
        EXPECT(gbc.readMem(0x8144), 0xbd);
        EXPECT(gbc.readMem(0x8145), 0x7f);
        // 11 02E2
        gbc.setState(0xec68, 0xf08, 0xa850, 0xe4e5, 0xaad3, 0x9db4, 0x1, 0x0);
        gbc.writeMem(0xec68, { 0x11, 0x3d, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0xec6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec68), 0x11);
        EXPECT(gbc.readMem(0xec69), 0x3d);
        EXPECT(gbc.readMem(0xec6a), 0x6e);
        // 11 02E3
        gbc.setState(0x8c9a, 0x7440, 0xd9a0, 0xc87b, 0x9f7a, 0x3ba2, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0x11, 0x3d, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7440);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0x11);
        EXPECT(gbc.readMem(0x8c9b), 0x3d);
        EXPECT(gbc.readMem(0x8c9c), 0xfc);
        // 11 02E4
        gbc.setState(0x3053, 0xa44d, 0x4c20, 0xeb44, 0x1878, 0xa411, 0x1, 0x1);
        gbc.writeMem(0x3053, { 0x11, 0xfd, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa44d);
        EXPECT(gbc.pc(), 0x3056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02E5
        gbc.setState(0x1e65, 0xdd10, 0xfc40, 0xa839, 0x829f, 0xb66b, 0x1, 0x0);
        gbc.writeMem(0x1e65, { 0x11, 0xd6, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdd10);
        EXPECT(gbc.pc(), 0x1e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02E6
        gbc.setState(0x4353, 0x954b, 0x53f0, 0x8d4f, 0x4e85, 0x4015, 0x0, 0x1);
        gbc.writeMem(0x4353, { 0x11, 0x8a, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x4356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02E7
        gbc.setState(0x37ce, 0x813b, 0xb780, 0x44, 0xa526, 0x8675, 0x0, 0x0);
        gbc.writeMem(0x37ce, { 0x11, 0xc8, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x813b);
        EXPECT(gbc.pc(), 0x37d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02E8
        gbc.setState(0x62c7, 0x6fb2, 0x5a50, 0x1d46, 0x7fce, 0xfef1, 0x0, 0x0);
        gbc.writeMem(0x62c7, { 0x11, 0xb1, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6fb2);
        EXPECT(gbc.pc(), 0x62ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 02E9
        gbc.setState(0xb8cd, 0xeb3b, 0xb8e0, 0x6f1e, 0xa5c5, 0xe244, 0x1, 0x0);
        gbc.writeMem(0xb8cd, { 0x11, 0x9d, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeb3b);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cd), 0x11);
        EXPECT(gbc.readMem(0xb8ce), 0x9d);
        EXPECT(gbc.readMem(0xb8cf), 0xde);
        // 11 02EA
        gbc.setState(0xc038, 0x6d88, 0x1a0, 0x92b1, 0x2dae, 0x1a3e, 0x0, 0x1);
        gbc.writeMem(0xc038, { 0x11, 0xbb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6d88);
        EXPECT(gbc.pc(), 0xc03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc038), 0x11);
        EXPECT(gbc.readMem(0xc039), 0xbb);
        EXPECT(gbc.readMem(0xc03a), 0x90);
        // 11 02EB
        gbc.setState(0xbd3e, 0x6219, 0xfe20, 0x8438, 0xb443, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0xbd3e, { 0x11, 0x78, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6219);
        EXPECT(gbc.pc(), 0xbd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3e), 0x11);
        EXPECT(gbc.readMem(0xbd3f), 0x78);
        EXPECT(gbc.readMem(0xbd40), 0x80);
        // 11 02EC
        gbc.setState(0xbd48, 0x95e3, 0xd2c0, 0x862c, 0x1ccb, 0x9259, 0x1, 0x0);
        gbc.writeMem(0xbd48, { 0x11, 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x95e3);
        EXPECT(gbc.pc(), 0xbd4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd48), 0x11);
        EXPECT(gbc.readMem(0xbd49), 0xcb);
        EXPECT(gbc.readMem(0xbd4a), 0x60);
        // 11 02ED
        gbc.setState(0x5513, 0x4874, 0x720, 0x531, 0x894, 0xde45, 0x1, 0x1);
        gbc.writeMem(0x5513, { 0x11, 0xaa, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4874);
        EXPECT(gbc.pc(), 0x5516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02EF
        gbc.setState(0x19b4, 0xf4cf, 0x1220, 0xdddb, 0xa01f, 0x3c4a, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0x11, 0x59, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf4cf);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02F0
        gbc.setState(0xa3dc, 0xac63, 0xc590, 0x4215, 0x37c4, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0xa3dc, { 0x11, 0x52, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xac63);
        EXPECT(gbc.pc(), 0xa3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3dc), 0x11);
        EXPECT(gbc.readMem(0xa3dd), 0x52);
        EXPECT(gbc.readMem(0xa3de), 0xf3);
        // 11 02F1
        gbc.setState(0x145f, 0x389c, 0x2ba0, 0x1120, 0x80fc, 0x5df, 0x1, 0x0);
        gbc.writeMem(0x145f, { 0x11, 0x34, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0x1462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02F2
        gbc.setState(0x4734, 0x902a, 0x9ea0, 0x2d61, 0x7215, 0x55dd, 0x1, 0x1);
        gbc.writeMem(0x4734, { 0x11, 0xab, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x902a);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 02F3
        gbc.setState(0xdd2f, 0xd1e, 0xc720, 0x46ba, 0xcc1, 0xdc1b, 0x0, 0x0);
        gbc.writeMem(0xdd2f, { 0x11, 0x84, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd1e);
        EXPECT(gbc.pc(), 0xdd32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd2f), 0x11);
        EXPECT(gbc.readMem(0xdd30), 0x84);
        EXPECT(gbc.readMem(0xdd31), 0xb8);
        // 11 02F4
        gbc.setState(0x284f, 0x1584, 0x3b00, 0x3365, 0x7b20, 0x9e8f, 0x1, 0x1);
        gbc.writeMem(0x284f, { 0x11, 0x65, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1584);
        EXPECT(gbc.pc(), 0x2852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02F6
        gbc.setState(0xdb01, 0xa19c, 0x1440, 0x5e8e, 0x576b, 0x5738, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0x11, 0x4b, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa19c);
        EXPECT(gbc.pc(), 0xdb04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb01), 0x11);
        EXPECT(gbc.readMem(0xdb02), 0x4b);
        EXPECT(gbc.readMem(0xdb03), 0x56);
        // 11 02F7
        gbc.setState(0xc0aa, 0x3bc9, 0x4450, 0xa04c, 0x8048, 0x8e8b, 0x1, 0x1);
        gbc.writeMem(0xc0aa, { 0x11, 0x2e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3bc9);
        EXPECT(gbc.pc(), 0xc0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0aa), 0x11);
        EXPECT(gbc.readMem(0xc0ab), 0x2e);
        EXPECT(gbc.readMem(0xc0ac), 0x8c);
        // 11 02F8
        gbc.setState(0x2238, 0x7436, 0xb830, 0x431b, 0x45a1, 0xcdae, 0x1, 0x0);
        gbc.writeMem(0x2238, { 0x11, 0x90, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7436);
        EXPECT(gbc.pc(), 0x223b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02F9
        gbc.setState(0xa4fe, 0xeca7, 0x5840, 0x1ae8, 0xa474, 0x9da7, 0x0, 0x1);
        gbc.writeMem(0xa4fe, { 0x11, 0x96, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeca7);
        EXPECT(gbc.pc(), 0xa501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fe), 0x11);
        EXPECT(gbc.readMem(0xa4ff), 0x96);
        EXPECT(gbc.readMem(0xa500), 0xc9);
        // 11 02FA
        gbc.setState(0xf3a, 0x79ac, 0x3ec0, 0xd03, 0x272f, 0x138, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0x11, 0x2, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x79ac);
        EXPECT(gbc.pc(), 0xf3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02FB
        gbc.setState(0x96ee, 0xfa5d, 0x2a10, 0x414c, 0xda77, 0x4358, 0x0, 0x0);
        gbc.writeMem(0x96ee, { 0x11, 0x3f, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfa5d);
        EXPECT(gbc.pc(), 0x96f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ee), 0x11);
        EXPECT(gbc.readMem(0x96ef), 0x3f);
        EXPECT(gbc.readMem(0x96f0), 0xcc);
        // 11 02FC
        gbc.setState(0xddce, 0x4cf8, 0x75c0, 0xcb98, 0x323f, 0x142f, 0x0, 0x1);
        gbc.writeMem(0xddce, { 0x11, 0x6c, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4cf8);
        EXPECT(gbc.pc(), 0xddd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddce), 0x11);
        EXPECT(gbc.readMem(0xddcf), 0x6c);
        EXPECT(gbc.readMem(0xddd0), 0xee);
        // 11 02FD
        gbc.setState(0x5efd, 0x6c6, 0x5b40, 0x9b65, 0x10b6, 0x8be3, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0x11, 0xc8, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6c6);
        EXPECT(gbc.pc(), 0x5f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 02FE
        gbc.setState(0x39ef, 0x2a2b, 0x44b0, 0xaf79, 0xee07, 0x7ca7, 0x0, 0x1);
        gbc.writeMem(0x39ef, { 0x11, 0xc7, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2a2b);
        EXPECT(gbc.pc(), 0x39f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 02FF
        gbc.setState(0xc647, 0x2274, 0xcf90, 0xf199, 0x352b, 0x1374, 0x1, 0x0);
        gbc.writeMem(0xc647, { 0x11, 0x88, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2274);
        EXPECT(gbc.pc(), 0xc64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc647), 0x11);
        EXPECT(gbc.readMem(0xc648), 0x88);
        EXPECT(gbc.readMem(0xc649), 0xc6);
        // 11 0300
        gbc.setState(0x2488, 0x1c3c, 0x2c00, 0x26de, 0x8f64, 0x14df, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0x11, 0xa, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0301
        gbc.setState(0x6f82, 0x7e51, 0xc0d0, 0xbdb4, 0x35ed, 0xecfd, 0x0, 0x1);
        gbc.writeMem(0x6f82, { 0x11, 0x80, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7e51);
        EXPECT(gbc.pc(), 0x6f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0302
        gbc.setState(0x7aa0, 0x611e, 0x6c70, 0x6e0b, 0x98a6, 0x424d, 0x0, 0x0);
        gbc.writeMem(0x7aa0, { 0x11, 0xa3, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x611e);
        EXPECT(gbc.pc(), 0x7aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0303
        gbc.setState(0x3caa, 0xfe68, 0x7f90, 0xf09c, 0x566e, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0x3caa, { 0x11, 0xe3, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfe68);
        EXPECT(gbc.pc(), 0x3cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0304
        gbc.setState(0x4eef, 0xd5cc, 0xdef0, 0x9b89, 0x9d2f, 0x9404, 0x0, 0x1);
        gbc.writeMem(0x4eef, { 0x11, 0x45, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd5cc);
        EXPECT(gbc.pc(), 0x4ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0305
        gbc.setState(0xec1f, 0xe111, 0xee20, 0x6440, 0x93a, 0x30fe, 0x1, 0x1);
        gbc.writeMem(0xec1f, { 0x11, 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe111);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1f), 0x11);
        EXPECT(gbc.readMem(0xec20), 0xcb);
        EXPECT(gbc.readMem(0xec21), 0x99);
        // 11 0306
        gbc.setState(0x2750, 0x8308, 0xe500, 0xd5b4, 0xfb28, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0x2750, { 0x11, 0xc, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8308);
        EXPECT(gbc.pc(), 0x2753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0307
        gbc.setState(0x8f39, 0x245a, 0x9f10, 0x62d3, 0x1ec1, 0xa500, 0x1, 0x0);
        gbc.writeMem(0x8f39, { 0x11, 0xef, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x245a);
        EXPECT(gbc.pc(), 0x8f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f39), 0x11);
        EXPECT(gbc.readMem(0x8f3a), 0xef);
        EXPECT(gbc.readMem(0x8f3b), 0xfa);
        // 11 0309
        gbc.setState(0x52d7, 0x9925, 0xd600, 0xb239, 0x2ccb, 0xaea4, 0x1, 0x0);
        gbc.writeMem(0x52d7, { 0x11, 0x23, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9925);
        EXPECT(gbc.pc(), 0x52da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 030A
        gbc.setState(0x7737, 0x8d5b, 0x560, 0x11b5, 0x3d3a, 0x3570, 0x1, 0x0);
        gbc.writeMem(0x7737, { 0x11, 0x17, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8d5b);
        EXPECT(gbc.pc(), 0x773a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 030B
        gbc.setState(0x30c0, 0x7e92, 0xb000, 0x99e3, 0xbb6c, 0x93e7, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0x11, 0x41, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7e92);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 030C
        gbc.setState(0x55e6, 0xe44e, 0x8980, 0x288a, 0xa534, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x55e6, { 0x11, 0x91, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe44e);
        EXPECT(gbc.pc(), 0x55e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 030E
        gbc.setState(0x36ee, 0x75ec, 0x5970, 0x20c0, 0xa275, 0xba45, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0x11, 0xc6, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x75ec);
        EXPECT(gbc.pc(), 0x36f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 030F
        gbc.setState(0xe0c9, 0xbeb0, 0x1c70, 0xd128, 0x93bf, 0x3da5, 0x0, 0x0);
        gbc.writeMem(0xe0c9, { 0x11, 0x35, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbeb0);
        EXPECT(gbc.pc(), 0xe0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c9), 0x11);
        EXPECT(gbc.readMem(0xe0ca), 0x35);
        EXPECT(gbc.readMem(0xe0cb), 0x20);
        // 11 0310
        gbc.setState(0x5670, 0x1307, 0xca10, 0xee6c, 0x8c16, 0x388, 0x1, 0x1);
        gbc.writeMem(0x5670, { 0x11, 0xe0, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1307);
        EXPECT(gbc.pc(), 0x5673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0311
        gbc.setState(0x3a0d, 0xa5ce, 0x57e0, 0x5933, 0x7f58, 0x4bc5, 0x1, 0x1);
        gbc.writeMem(0x3a0d, { 0x11, 0x69, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa5ce);
        EXPECT(gbc.pc(), 0x3a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0312
        gbc.setState(0x3a70, 0x1e03, 0x4560, 0x412a, 0xf41e, 0xa90f, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0x11, 0xb, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0x3a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0313
        gbc.setState(0x8599, 0xebc6, 0x36e0, 0x405a, 0x1e81, 0xb783, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0x11, 0xbc, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xebc6);
        EXPECT(gbc.pc(), 0x859c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8599), 0x11);
        EXPECT(gbc.readMem(0x859a), 0xbc);
        EXPECT(gbc.readMem(0x859b), 0xce);
        // 11 0314
        gbc.setState(0xadab, 0x1ad4, 0x8290, 0x5282, 0x3031, 0xd57c, 0x0, 0x0);
        gbc.writeMem(0xadab, { 0x11, 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1ad4);
        EXPECT(gbc.pc(), 0xadae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadab), 0x11);
        EXPECT(gbc.readMem(0xadac), 0x1e);
        EXPECT(gbc.readMem(0xadad), 0x93);
        // 11 0315
        gbc.setState(0xeb42, 0xdf5e, 0x6560, 0x1ad8, 0x7ee7, 0x7460, 0x1, 0x1);
        gbc.writeMem(0xeb42, { 0x11, 0x59, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdf5e);
        EXPECT(gbc.pc(), 0xeb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb42), 0x11);
        EXPECT(gbc.readMem(0xeb43), 0x59);
        EXPECT(gbc.readMem(0xeb44), 0x97);
        // 11 0317
        gbc.setState(0xcb20, 0x5e85, 0x6eb0, 0x5dc6, 0x6685, 0x8f60, 0x0, 0x0);
        gbc.writeMem(0xcb20, { 0x11, 0xa2, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5e85);
        EXPECT(gbc.pc(), 0xcb23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb20), 0x11);
        EXPECT(gbc.readMem(0xcb21), 0xa2);
        EXPECT(gbc.readMem(0xcb22), 0x7);
        // 11 0318
        gbc.setState(0x18b4, 0x75d1, 0x5790, 0xf639, 0xcc25, 0x893c, 0x0, 0x1);
        gbc.writeMem(0x18b4, { 0x11, 0x8d, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x75d1);
        EXPECT(gbc.pc(), 0x18b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0319
        gbc.setState(0x573d, 0xaa59, 0xac0, 0x1bba, 0x8ea8, 0x602b, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0x11, 0xe0, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaa59);
        EXPECT(gbc.pc(), 0x5740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 031A
        gbc.setState(0x9b37, 0x6c25, 0x2a80, 0x4bd8, 0x95dc, 0xf1d2, 0x1, 0x1);
        gbc.writeMem(0x9b37, { 0x11, 0x58, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6c25);
        EXPECT(gbc.pc(), 0x9b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b37), 0x11);
        EXPECT(gbc.readMem(0x9b38), 0x58);
        EXPECT(gbc.readMem(0x9b39), 0x9b);
        // 11 031B
        gbc.setState(0x8e49, 0x7e87, 0xd330, 0x34b6, 0x2799, 0xbf42, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0x11, 0x77, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7e87);
        EXPECT(gbc.pc(), 0x8e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e49), 0x11);
        EXPECT(gbc.readMem(0x8e4a), 0x77);
        EXPECT(gbc.readMem(0x8e4b), 0xf);
        // 11 031C
        gbc.setState(0x2b22, 0xa91a, 0x5020, 0x8ca0, 0xd362, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0x11, 0x42, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa91a);
        EXPECT(gbc.pc(), 0x2b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 031D
        gbc.setState(0xc74a, 0x25e4, 0xd1b0, 0xd406, 0x6f38, 0xfbe8, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x11, 0x9, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x25e4);
        EXPECT(gbc.pc(), 0xc74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74a), 0x11);
        EXPECT(gbc.readMem(0xc74b), 0x9);
        EXPECT(gbc.readMem(0xc74c), 0x86);
        // 11 031F
        gbc.setState(0xe3e2, 0xa6ed, 0x4470, 0x2cdf, 0x27ed, 0x4fb, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0x11, 0xbd, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa6ed);
        EXPECT(gbc.pc(), 0xe3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e2), 0x11);
        EXPECT(gbc.readMem(0xe3e3), 0xbd);
        EXPECT(gbc.readMem(0xe3e4), 0x29);
        // 11 0320
        gbc.setState(0x3b4f, 0xaa24, 0x85a0, 0xc7ae, 0x7c26, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0x3b4f, { 0x11, 0x11, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xaa24);
        EXPECT(gbc.pc(), 0x3b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0321
        gbc.setState(0x6794, 0x95ba, 0x8210, 0xe380, 0x923b, 0xf641, 0x0, 0x1);
        gbc.writeMem(0x6794, { 0x11, 0x52, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x95ba);
        EXPECT(gbc.pc(), 0x6797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0322
        gbc.setState(0xc04c, 0xbf9b, 0x91b0, 0x4f13, 0xf78d, 0x9c1f, 0x0, 0x1);
        gbc.writeMem(0xc04c, { 0x11, 0xc3, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbf9b);
        EXPECT(gbc.pc(), 0xc04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04c), 0x11);
        EXPECT(gbc.readMem(0xc04d), 0xc3);
        EXPECT(gbc.readMem(0xc04e), 0xe7);
        // 11 0323
        gbc.setState(0x43b9, 0xf2c5, 0x5c90, 0xf1e3, 0xc71e, 0x5709, 0x1, 0x0);
        gbc.writeMem(0x43b9, { 0x11, 0x13, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf2c5);
        EXPECT(gbc.pc(), 0x43bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0324
        gbc.setState(0xe910, 0x2d66, 0x2240, 0xaa4, 0xfd78, 0x6cb, 0x1, 0x1);
        gbc.writeMem(0xe910, { 0x11, 0x5a, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2d66);
        EXPECT(gbc.pc(), 0xe913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe910), 0x11);
        EXPECT(gbc.readMem(0xe911), 0x5a);
        EXPECT(gbc.readMem(0xe912), 0xe7);
        // 11 0325
        gbc.setState(0x5622, 0x4272, 0xfd40, 0xb105, 0x9c6d, 0x99b3, 0x1, 0x0);
        gbc.writeMem(0x5622, { 0x11, 0xb0, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4272);
        EXPECT(gbc.pc(), 0x5625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0326
        gbc.setState(0xab1f, 0xc31b, 0x44d0, 0x841f, 0xfcc9, 0xcefa, 0x1, 0x1);
        gbc.writeMem(0xab1f, { 0x11, 0x6b, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc31b);
        EXPECT(gbc.pc(), 0xab22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1f), 0x11);
        EXPECT(gbc.readMem(0xab20), 0x6b);
        EXPECT(gbc.readMem(0xab21), 0xf7);
        // 11 0329
        gbc.setState(0x3418, 0xc7ee, 0x52e0, 0x604b, 0x16ee, 0x3a01, 0x1, 0x0);
        gbc.writeMem(0x3418, { 0x11, 0x4e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc7ee);
        EXPECT(gbc.pc(), 0x341b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 032A
        gbc.setState(0x365f, 0xe53a, 0x3340, 0x8666, 0x8f20, 0xdbea, 0x0, 0x0);
        gbc.writeMem(0x365f, { 0x11, 0x7a, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe53a);
        EXPECT(gbc.pc(), 0x3662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 032B
        gbc.setState(0x82c9, 0x20c4, 0x9e90, 0x83fd, 0xa614, 0xec65, 0x0, 0x0);
        gbc.writeMem(0x82c9, { 0x11, 0x84, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x20c4);
        EXPECT(gbc.pc(), 0x82cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c9), 0x11);
        EXPECT(gbc.readMem(0x82ca), 0x84);
        EXPECT(gbc.readMem(0x82cb), 0x5a);
        // 11 032C
        gbc.setState(0x3198, 0x6a10, 0x25c0, 0xd20d, 0xe88c, 0x40ff, 0x0, 0x0);
        gbc.writeMem(0x3198, { 0x11, 0xa8, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6a10);
        EXPECT(gbc.pc(), 0x319b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 032D
        gbc.setState(0xba03, 0x599b, 0xb1b0, 0x6550, 0xdd25, 0xa279, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x11, 0xc1, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x599b);
        EXPECT(gbc.pc(), 0xba06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba03), 0x11);
        EXPECT(gbc.readMem(0xba04), 0xc1);
        EXPECT(gbc.readMem(0xba05), 0x8c);
        // 11 032E
        gbc.setState(0xb2ad, 0x7595, 0x13a0, 0x74d5, 0xfc6f, 0x645f, 0x1, 0x1);
        gbc.writeMem(0xb2ad, { 0x11, 0xd6, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7595);
        EXPECT(gbc.pc(), 0xb2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ad), 0x11);
        EXPECT(gbc.readMem(0xb2ae), 0xd6);
        EXPECT(gbc.readMem(0xb2af), 0xd7);
        // 11 0330
        gbc.setState(0xef83, 0x3da, 0x4eb0, 0xbd44, 0xd53f, 0xa37a, 0x0, 0x1);
        gbc.writeMem(0xef83, { 0x11, 0xd4, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3da);
        EXPECT(gbc.pc(), 0xef86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef83), 0x11);
        EXPECT(gbc.readMem(0xef84), 0xd4);
        EXPECT(gbc.readMem(0xef85), 0x4);
        // 11 0332
        gbc.setState(0x10d4, 0x541e, 0x8f10, 0xfe76, 0xb6d6, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0x10d4, { 0x11, 0x75, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x541e);
        EXPECT(gbc.pc(), 0x10d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0333
        gbc.setState(0xb5bb, 0xca4a, 0x91a0, 0x35fa, 0x1eb7, 0x8971, 0x1, 0x1);
        gbc.writeMem(0xb5bb, { 0x11, 0x79, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0xb5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5bb), 0x11);
        EXPECT(gbc.readMem(0xb5bc), 0x79);
        EXPECT(gbc.readMem(0xb5bd), 0xa4);
        // 11 0334
        gbc.setState(0xc81c, 0xe6e6, 0x41c0, 0x1265, 0x2746, 0x6cd, 0x0, 0x1);
        gbc.writeMem(0xc81c, { 0x11, 0xb8, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe6e6);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81c), 0x11);
        EXPECT(gbc.readMem(0xc81d), 0xb8);
        EXPECT(gbc.readMem(0xc81e), 0x65);
        // 11 0335
        gbc.setState(0x7acf, 0x4a45, 0x3300, 0x12e3, 0x4973, 0xcf05, 0x0, 0x1);
        gbc.writeMem(0x7acf, { 0x11, 0x56, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4a45);
        EXPECT(gbc.pc(), 0x7ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0336
        gbc.setState(0xa6b6, 0x2dab, 0x7d10, 0xf568, 0xee5d, 0x429c, 0x1, 0x1);
        gbc.writeMem(0xa6b6, { 0x11, 0x70, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2dab);
        EXPECT(gbc.pc(), 0xa6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b6), 0x11);
        EXPECT(gbc.readMem(0xa6b7), 0x70);
        EXPECT(gbc.readMem(0xa6b8), 0x1b);
        // 11 0337
        gbc.setState(0x9f78, 0x9212, 0x31c0, 0x642f, 0x1ea2, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0x11, 0xff, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x9f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f78), 0x11);
        EXPECT(gbc.readMem(0x9f79), 0xff);
        EXPECT(gbc.readMem(0x9f7a), 0xcc);
        // 11 0339
        gbc.setState(0x4bb, 0x5034, 0xed90, 0xeee4, 0x1d9, 0xf394, 0x1, 0x1);
        gbc.writeMem(0x4bb, { 0x11, 0x68, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5034);
        EXPECT(gbc.pc(), 0x4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 033A
        gbc.setState(0x415, 0x13f2, 0xa860, 0xb3d7, 0x1dfe, 0x6e3c, 0x0, 0x1);
        gbc.writeMem(0x415, { 0x11, 0xf7, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x13f2);
        EXPECT(gbc.pc(), 0x418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 033B
        gbc.setState(0xbb33, 0x7aee, 0x5930, 0x8193, 0x9656, 0x3771, 0x0, 0x1);
        gbc.writeMem(0xbb33, { 0x11, 0x3d, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7aee);
        EXPECT(gbc.pc(), 0xbb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb33), 0x11);
        EXPECT(gbc.readMem(0xbb34), 0x3d);
        EXPECT(gbc.readMem(0xbb35), 0x81);
        // 11 033C
        gbc.setState(0xa025, 0x7aa9, 0x7b40, 0xa1fe, 0x5c24, 0xd299, 0x0, 0x0);
        gbc.writeMem(0xa025, { 0x11, 0xb9, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7aa9);
        EXPECT(gbc.pc(), 0xa028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa025), 0x11);
        EXPECT(gbc.readMem(0xa026), 0xb9);
        EXPECT(gbc.readMem(0xa027), 0x1);
        // 11 033D
        gbc.setState(0xd880, 0x2c84, 0xa220, 0xcfa6, 0x611e, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0xd880, { 0x11, 0x2c, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2c84);
        EXPECT(gbc.pc(), 0xd883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd880), 0x11);
        EXPECT(gbc.readMem(0xd881), 0x2c);
        EXPECT(gbc.readMem(0xd882), 0xd2);
        // 11 033E
        gbc.setState(0xb930, 0x11c0, 0xfe10, 0xf881, 0xe830, 0xccde, 0x0, 0x1);
        gbc.writeMem(0xb930, { 0x11, 0x9f, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x11c0);
        EXPECT(gbc.pc(), 0xb933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb930), 0x11);
        EXPECT(gbc.readMem(0xb931), 0x9f);
        EXPECT(gbc.readMem(0xb932), 0xb0);
        // 11 033F
        gbc.setState(0xd2db, 0x6fdc, 0x28b0, 0x39c3, 0x2496, 0xab62, 0x1, 0x1);
        gbc.writeMem(0xd2db, { 0x11, 0xbb, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6fdc);
        EXPECT(gbc.pc(), 0xd2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2db), 0x11);
        EXPECT(gbc.readMem(0xd2dc), 0xbb);
        EXPECT(gbc.readMem(0xd2dd), 0x73);
        // 11 0340
        gbc.setState(0x78ce, 0xe578, 0x1c10, 0xa322, 0x19c7, 0x715a, 0x0, 0x1);
        gbc.writeMem(0x78ce, { 0x11, 0x77, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe578);
        EXPECT(gbc.pc(), 0x78d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0341
        gbc.setState(0x12ce, 0xa5c8, 0x8f00, 0x4e51, 0x6046, 0x5ba, 0x1, 0x1);
        gbc.writeMem(0x12ce, { 0x11, 0xb0, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa5c8);
        EXPECT(gbc.pc(), 0x12d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0342
        gbc.setState(0x6518, 0xef3f, 0xb340, 0x2b2d, 0xf244, 0xfd50, 0x1, 0x0);
        gbc.writeMem(0x6518, { 0x11, 0x72, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xef3f);
        EXPECT(gbc.pc(), 0x651b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0343
        gbc.setState(0xb2c9, 0x1353, 0x59a0, 0xb194, 0xe0, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0xb2c9, { 0x11, 0x55, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1353);
        EXPECT(gbc.pc(), 0xb2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c9), 0x11);
        EXPECT(gbc.readMem(0xb2ca), 0x55);
        EXPECT(gbc.readMem(0xb2cb), 0x24);
        // 11 0345
        gbc.setState(0x9a9a, 0xb841, 0x4470, 0xed33, 0x5c74, 0x9285, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0x11, 0x91, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb841);
        EXPECT(gbc.pc(), 0x9a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9a), 0x11);
        EXPECT(gbc.readMem(0x9a9b), 0x91);
        EXPECT(gbc.readMem(0x9a9c), 0x6);
        // 11 0346
        gbc.setState(0x767d, 0x7388, 0xf150, 0xeaa8, 0x6afe, 0x97ad, 0x0, 0x0);
        gbc.writeMem(0x767d, { 0x11, 0x91, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7388);
        EXPECT(gbc.pc(), 0x7680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0347
        gbc.setState(0xc746, 0x3af4, 0x4ad0, 0x716b, 0xe25a, 0xcd4a, 0x1, 0x0);
        gbc.writeMem(0xc746, { 0x11, 0x4f, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3af4);
        EXPECT(gbc.pc(), 0xc749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc746), 0x11);
        EXPECT(gbc.readMem(0xc747), 0x4f);
        EXPECT(gbc.readMem(0xc748), 0x9b);
        // 11 0348
        gbc.setState(0xbf7e, 0x9f36, 0xd7f0, 0x5f72, 0xefb2, 0x70ba, 0x0, 0x1);
        gbc.writeMem(0xbf7e, { 0x11, 0x41, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9f36);
        EXPECT(gbc.pc(), 0xbf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7e), 0x11);
        EXPECT(gbc.readMem(0xbf7f), 0x41);
        EXPECT(gbc.readMem(0xbf80), 0x8c);
        // 11 034A
        gbc.setState(0x4670, 0xe2cd, 0x4870, 0xd380, 0x4fbe, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0x11, 0xa5, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe2cd);
        EXPECT(gbc.pc(), 0x4673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 034B
        gbc.setState(0xde1b, 0xc5fd, 0x72a0, 0x603d, 0x7590, 0xde81, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0x11, 0x1d, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc5fd);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1b), 0x11);
        EXPECT(gbc.readMem(0xde1c), 0x1d);
        EXPECT(gbc.readMem(0xde1d), 0x9b);
        // 11 034C
        gbc.setState(0xcdfd, 0x6d78, 0xefa0, 0x6b7f, 0xe098, 0x879c, 0x1, 0x1);
        gbc.writeMem(0xcdfd, { 0x11, 0xe6, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6d78);
        EXPECT(gbc.pc(), 0xce00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdfd), 0x11);
        EXPECT(gbc.readMem(0xcdfe), 0xe6);
        EXPECT(gbc.readMem(0xcdff), 0x1e);
        // 11 034D
        gbc.setState(0xcac4, 0x7389, 0xc210, 0xae11, 0xf63d, 0xd858, 0x0, 0x0);
        gbc.writeMem(0xcac4, { 0x11, 0x9b, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7389);
        EXPECT(gbc.pc(), 0xcac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac4), 0x11);
        EXPECT(gbc.readMem(0xcac5), 0x9b);
        EXPECT(gbc.readMem(0xcac6), 0xd6);
        // 11 034E
        gbc.setState(0x43f7, 0x84ac, 0x9e50, 0x737d, 0xb023, 0x36e5, 0x1, 0x1);
        gbc.writeMem(0x43f7, { 0x11, 0xd5, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x43fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 034F
        gbc.setState(0x119d, 0x905f, 0x3280, 0xa7f6, 0xfa7d, 0xc116, 0x1, 0x0);
        gbc.writeMem(0x119d, { 0x11, 0x3, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x905f);
        EXPECT(gbc.pc(), 0x11a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0350
        gbc.setState(0x8df5, 0x30dc, 0x4ab0, 0x445, 0xe5f6, 0xde94, 0x0, 0x0);
        gbc.writeMem(0x8df5, { 0x11, 0xec, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x30dc);
        EXPECT(gbc.pc(), 0x8df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df5), 0x11);
        EXPECT(gbc.readMem(0x8df6), 0xec);
        EXPECT(gbc.readMem(0x8df7), 0xe6);
        // 11 0351
        gbc.setState(0x11b5, 0xe91d, 0x8320, 0x245a, 0x6538, 0x13bd, 0x0, 0x1);
        gbc.writeMem(0x11b5, { 0x11, 0xbd, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe91d);
        EXPECT(gbc.pc(), 0x11b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0352
        gbc.setState(0xa851, 0xeefd, 0xbcd0, 0xf5dc, 0x7c12, 0xd279, 0x1, 0x1);
        gbc.writeMem(0xa851, { 0x11, 0x37, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xeefd);
        EXPECT(gbc.pc(), 0xa854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa851), 0x11);
        EXPECT(gbc.readMem(0xa852), 0x37);
        EXPECT(gbc.readMem(0xa853), 0x40);
        // 11 0353
        gbc.setState(0x6f8b, 0x5020, 0x6520, 0x63ba, 0x276e, 0x2b60, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0x11, 0x73, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5020);
        EXPECT(gbc.pc(), 0x6f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0355
        gbc.setState(0xeb05, 0x790, 0xaf70, 0xb0b6, 0x1bd, 0xee05, 0x0, 0x0);
        gbc.writeMem(0xeb05, { 0x11, 0x85, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x790);
        EXPECT(gbc.pc(), 0xeb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb05), 0x11);
        EXPECT(gbc.readMem(0xeb06), 0x85);
        EXPECT(gbc.readMem(0xeb07), 0x66);
        // 11 0356
        gbc.setState(0xc660, 0x8604, 0x12a0, 0xb028, 0x9226, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0xc660, { 0x11, 0x12, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8604);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc660), 0x11);
        EXPECT(gbc.readMem(0xc661), 0x12);
        EXPECT(gbc.readMem(0xc662), 0xb3);
        // 11 0358
        gbc.setState(0xe361, 0x5926, 0xde90, 0x66df, 0x4873, 0xc91d, 0x0, 0x0);
        gbc.writeMem(0xe361, { 0x11, 0xf3, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5926);
        EXPECT(gbc.pc(), 0xe364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe361), 0x11);
        EXPECT(gbc.readMem(0xe362), 0xf3);
        EXPECT(gbc.readMem(0xe363), 0xc8);
        // 11 0359
        gbc.setState(0x8b05, 0xc97b, 0x3960, 0xf770, 0x98, 0x183e, 0x0, 0x0);
        gbc.writeMem(0x8b05, { 0x11, 0x32, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc97b);
        EXPECT(gbc.pc(), 0x8b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b05), 0x11);
        EXPECT(gbc.readMem(0x8b06), 0x32);
        EXPECT(gbc.readMem(0x8b07), 0x9b);
        // 11 035A
        gbc.setState(0x49d5, 0xe4b6, 0xf700, 0x782d, 0x6f46, 0x2ad8, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0x11, 0x8e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe4b6);
        EXPECT(gbc.pc(), 0x49d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 035B
        gbc.setState(0xa65e, 0xc114, 0x38d0, 0x177d, 0x2569, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0xa65e, { 0x11, 0xbd, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc114);
        EXPECT(gbc.pc(), 0xa661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65e), 0x11);
        EXPECT(gbc.readMem(0xa65f), 0xbd);
        EXPECT(gbc.readMem(0xa660), 0x4d);
        // 11 035C
        gbc.setState(0xccf0, 0xe7c4, 0x3a60, 0x6f25, 0x84ab, 0xb97f, 0x1, 0x1);
        gbc.writeMem(0xccf0, { 0x11, 0x9c, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe7c4);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf0), 0x11);
        EXPECT(gbc.readMem(0xccf1), 0x9c);
        EXPECT(gbc.readMem(0xccf2), 0xec);
        // 11 035D
        gbc.setState(0x2337, 0xa348, 0x2b50, 0x1559, 0x6f97, 0xa538, 0x1, 0x0);
        gbc.writeMem(0x2337, { 0x11, 0x24, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa348);
        EXPECT(gbc.pc(), 0x233a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 035E
        gbc.setState(0xbab4, 0x351a, 0x9a20, 0x2baf, 0x5532, 0x2828, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0x11, 0xc1, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x351a);
        EXPECT(gbc.pc(), 0xbab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab4), 0x11);
        EXPECT(gbc.readMem(0xbab5), 0xc1);
        EXPECT(gbc.readMem(0xbab6), 0x6a);
        // 11 035F
        gbc.setState(0x8ae3, 0xc103, 0xebd0, 0x2a55, 0x4242, 0xa07f, 0x1, 0x0);
        gbc.writeMem(0x8ae3, { 0x11, 0x2c, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0x8ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae3), 0x11);
        EXPECT(gbc.readMem(0x8ae4), 0x2c);
        EXPECT(gbc.readMem(0x8ae5), 0x55);
        // 11 0360
        gbc.setState(0xef9c, 0x2510, 0x17f0, 0x6dc3, 0x422, 0xd173, 0x1, 0x1);
        gbc.writeMem(0xef9c, { 0x11, 0x22, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0xef9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9c), 0x11);
        EXPECT(gbc.readMem(0xef9d), 0x22);
        EXPECT(gbc.readMem(0xef9e), 0x76);
        // 11 0361
        gbc.setState(0xbaf3, 0x2707, 0x13f0, 0x9855, 0x55b1, 0xc2cc, 0x0, 0x1);
        gbc.writeMem(0xbaf3, { 0x11, 0x13, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2707);
        EXPECT(gbc.pc(), 0xbaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf3), 0x11);
        EXPECT(gbc.readMem(0xbaf4), 0x13);
        EXPECT(gbc.readMem(0xbaf5), 0x4a);
        // 11 0362
        gbc.setState(0x8bd, 0x5839, 0x1840, 0xdc32, 0xfe6f, 0xfd90, 0x0, 0x1);
        gbc.writeMem(0x8bd, { 0x11, 0x27, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5839);
        EXPECT(gbc.pc(), 0x8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0363
        gbc.setState(0xd267, 0xebec, 0x3500, 0x877a, 0x8221, 0xb787, 0x1, 0x1);
        gbc.writeMem(0xd267, { 0x11, 0xc3, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xebec);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd267), 0x11);
        EXPECT(gbc.readMem(0xd268), 0xc3);
        EXPECT(gbc.readMem(0xd269), 0xe0);
        // 11 0364
        gbc.setState(0xe05a, 0x25c5, 0x6510, 0x4386, 0x9aac, 0x85de, 0x0, 0x0);
        gbc.writeMem(0xe05a, { 0x11, 0x40, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x25c5);
        EXPECT(gbc.pc(), 0xe05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05a), 0x11);
        EXPECT(gbc.readMem(0xe05b), 0x40);
        EXPECT(gbc.readMem(0xe05c), 0xe);
        // 11 0366
        gbc.setState(0x2584, 0x5275, 0x6c80, 0xe4c6, 0x52d2, 0xb944, 0x0, 0x0);
        gbc.writeMem(0x2584, { 0x11, 0xa3, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5275);
        EXPECT(gbc.pc(), 0x2587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0367
        gbc.setState(0x9936, 0xf40b, 0xc870, 0x1918, 0xc531, 0xee0, 0x1, 0x0);
        gbc.writeMem(0x9936, { 0x11, 0x7a, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf40b);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9936), 0x11);
        EXPECT(gbc.readMem(0x9937), 0x7a);
        EXPECT(gbc.readMem(0x9938), 0x41);
        // 11 0368
        gbc.setState(0x3abd, 0xcc80, 0x71d0, 0x2122, 0xb64b, 0xbfdb, 0x1, 0x1);
        gbc.writeMem(0x3abd, { 0x11, 0x5a, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcc80);
        EXPECT(gbc.pc(), 0x3ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0369
        gbc.setState(0x31bc, 0x4519, 0x34b0, 0x2e4b, 0x3b8f, 0xde6d, 0x1, 0x1);
        gbc.writeMem(0x31bc, { 0x11, 0xda, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4519);
        EXPECT(gbc.pc(), 0x31bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 036A
        gbc.setState(0x28e2, 0xd28f, 0xf780, 0xb5a9, 0x657b, 0x574c, 0x1, 0x0);
        gbc.writeMem(0x28e2, { 0x11, 0xdc, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd28f);
        EXPECT(gbc.pc(), 0x28e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 036B
        gbc.setState(0xe49c, 0xd848, 0xeb90, 0xf3d7, 0x1347, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0xe49c, { 0x11, 0x98, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0xe49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49c), 0x11);
        EXPECT(gbc.readMem(0xe49d), 0x98);
        EXPECT(gbc.readMem(0xe49e), 0x7);
        // 11 036C
        gbc.setState(0xa6a1, 0x678e, 0x7680, 0xb049, 0xcd5c, 0xe656, 0x0, 0x1);
        gbc.writeMem(0xa6a1, { 0x11, 0x5d, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x678e);
        EXPECT(gbc.pc(), 0xa6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a1), 0x11);
        EXPECT(gbc.readMem(0xa6a2), 0x5d);
        EXPECT(gbc.readMem(0xa6a3), 0x9e);
        // 11 036D
        gbc.setState(0xcd69, 0x8ec1, 0x1d60, 0xd5b0, 0x27bf, 0x65ce, 0x0, 0x1);
        gbc.writeMem(0xcd69, { 0x11, 0x88, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8ec1);
        EXPECT(gbc.pc(), 0xcd6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd69), 0x11);
        EXPECT(gbc.readMem(0xcd6a), 0x88);
        EXPECT(gbc.readMem(0xcd6b), 0xc0);
        // 11 0370
        gbc.setState(0xc919, 0xe66c, 0xae50, 0x5589, 0x9045, 0xbc8, 0x0, 0x1);
        gbc.writeMem(0xc919, { 0x11, 0xe2, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe66c);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc919), 0x11);
        EXPECT(gbc.readMem(0xc91a), 0xe2);
        EXPECT(gbc.readMem(0xc91b), 0x83);
        // 11 0371
        gbc.setState(0xa888, 0x1220, 0x56f0, 0x9473, 0x5773, 0xdd6e, 0x1, 0x0);
        gbc.writeMem(0xa888, { 0x11, 0x89, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1220);
        EXPECT(gbc.pc(), 0xa88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa888), 0x11);
        EXPECT(gbc.readMem(0xa889), 0x89);
        EXPECT(gbc.readMem(0xa88a), 0xb8);
        // 11 0372
        gbc.setState(0x577c, 0x91f6, 0xee00, 0x39c0, 0x24e4, 0xf3e, 0x1, 0x0);
        gbc.writeMem(0x577c, { 0x11, 0xef, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x91f6);
        EXPECT(gbc.pc(), 0x577f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0373
        gbc.setState(0xcf00, 0x37f, 0x8e20, 0xf983, 0x740a, 0x4d4, 0x0, 0x1);
        gbc.writeMem(0xcf00, { 0x11, 0xb0, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x37f);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf00), 0x11);
        EXPECT(gbc.readMem(0xcf01), 0xb0);
        EXPECT(gbc.readMem(0xcf02), 0xd3);
        // 11 0374
        gbc.setState(0x16aa, 0xc75f, 0x6dd0, 0x106f, 0x17e7, 0xa8c5, 0x1, 0x0);
        gbc.writeMem(0x16aa, { 0x11, 0xad, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc75f);
        EXPECT(gbc.pc(), 0x16ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0376
        gbc.setState(0xb4c, 0xe0ab, 0x15d0, 0x7ddd, 0x8361, 0x6c00, 0x1, 0x1);
        gbc.writeMem(0xb4c, { 0x11, 0xe1, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe0ab);
        EXPECT(gbc.pc(), 0xb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0377
        gbc.setState(0x2ef3, 0xbcea, 0xe70, 0x8555, 0x70f8, 0x42ab, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0x11, 0xaa, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbcea);
        EXPECT(gbc.pc(), 0x2ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0378
        gbc.setState(0xc85e, 0x72f5, 0x1330, 0x93f8, 0xfa2a, 0x2695, 0x0, 0x0);
        gbc.writeMem(0xc85e, { 0x11, 0x1a, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x72f5);
        EXPECT(gbc.pc(), 0xc861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85e), 0x11);
        EXPECT(gbc.readMem(0xc85f), 0x1a);
        EXPECT(gbc.readMem(0xc860), 0x10);
        // 11 0379
        gbc.setState(0x6693, 0x41bd, 0xe2c0, 0x1af8, 0x7d, 0x6039, 0x0, 0x1);
        gbc.writeMem(0x6693, { 0x11, 0x67, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x41bd);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 037A
        gbc.setState(0xd16d, 0xf956, 0xdf60, 0xe36, 0x3954, 0xb339, 0x1, 0x0);
        gbc.writeMem(0xd16d, { 0x11, 0xa3, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf956);
        EXPECT(gbc.pc(), 0xd170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16d), 0x11);
        EXPECT(gbc.readMem(0xd16e), 0xa3);
        EXPECT(gbc.readMem(0xd16f), 0x35);
        // 11 037B
        gbc.setState(0xa847, 0x8a00, 0x3310, 0xc376, 0x4008, 0x7e17, 0x0, 0x1);
        gbc.writeMem(0xa847, { 0x11, 0x2a, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0xa84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa847), 0x11);
        EXPECT(gbc.readMem(0xa848), 0x2a);
        EXPECT(gbc.readMem(0xa849), 0xe5);
        // 11 037D
        gbc.setState(0xecf3, 0xcc4b, 0x9430, 0x475f, 0x733b, 0x1f9d, 0x1, 0x0);
        gbc.writeMem(0xecf3, { 0x11, 0x59, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcc4b);
        EXPECT(gbc.pc(), 0xecf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf3), 0x11);
        EXPECT(gbc.readMem(0xecf4), 0x59);
        EXPECT(gbc.readMem(0xecf5), 0xc0);
        // 11 037E
        gbc.setState(0x280f, 0xbf9f, 0xa310, 0x6f89, 0xbc6e, 0x4f89, 0x0, 0x0);
        gbc.writeMem(0x280f, { 0x11, 0x54, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 037F
        gbc.setState(0xd80b, 0x58e6, 0x2f00, 0xf09e, 0xf1c8, 0xe04b, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0x11, 0xa, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x58e6);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80b), 0x11);
        EXPECT(gbc.readMem(0xd80c), 0xa);
        EXPECT(gbc.readMem(0xd80d), 0xf6);
        // 11 0381
        gbc.setState(0x1320, 0x8de7, 0x1320, 0xc0ba, 0x3ce3, 0xf7f9, 0x0, 0x1);
        gbc.writeMem(0x1320, { 0x11, 0xdf, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8de7);
        EXPECT(gbc.pc(), 0x1323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0382
        gbc.setState(0xa738, 0xc73, 0x1e80, 0x6f80, 0xd631, 0xe757, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x11, 0xd1, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc73);
        EXPECT(gbc.pc(), 0xa73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa738), 0x11);
        EXPECT(gbc.readMem(0xa739), 0xd1);
        EXPECT(gbc.readMem(0xa73a), 0xd1);
        // 11 0383
        gbc.setState(0xbc0d, 0x965e, 0x8450, 0xf02c, 0xdfec, 0x15af, 0x0, 0x1);
        gbc.writeMem(0xbc0d, { 0x11, 0xe2, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x965e);
        EXPECT(gbc.pc(), 0xbc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0d), 0x11);
        EXPECT(gbc.readMem(0xbc0e), 0xe2);
        EXPECT(gbc.readMem(0xbc0f), 0x52);
        // 11 0384
        gbc.setState(0x989b, 0x69b4, 0xe390, 0x389d, 0x9d19, 0xe359, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0x11, 0x13, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x69b4);
        EXPECT(gbc.pc(), 0x989e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989b), 0x11);
        EXPECT(gbc.readMem(0x989c), 0x13);
        EXPECT(gbc.readMem(0x989d), 0x69);
        // 11 0385
        gbc.setState(0x78eb, 0x3360, 0xcbd0, 0x97c1, 0x389c, 0xfb28, 0x0, 0x0);
        gbc.writeMem(0x78eb, { 0x11, 0xfc, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3360);
        EXPECT(gbc.pc(), 0x78ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0386
        gbc.setState(0x75af, 0xc132, 0x31e0, 0x7d3c, 0xefd0, 0x2b71, 0x0, 0x1);
        gbc.writeMem(0x75af, { 0x11, 0xc1, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc132);
        EXPECT(gbc.pc(), 0x75b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0387
        gbc.setState(0x24f6, 0x7a70, 0x8d00, 0xd8b3, 0xe0ce, 0xe744, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0x11, 0x2a, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7a70);
        EXPECT(gbc.pc(), 0x24f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0388
        gbc.setState(0x645a, 0x2886, 0xf600, 0xfc73, 0xa6ae, 0x484b, 0x1, 0x0);
        gbc.writeMem(0x645a, { 0x11, 0xae, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2886);
        EXPECT(gbc.pc(), 0x645d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 038A
        gbc.setState(0x5ffc, 0xbbb4, 0xa1e0, 0x5dc7, 0x746, 0x7ccb, 0x0, 0x1);
        gbc.writeMem(0x5ffc, { 0x11, 0xea, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbbb4);
        EXPECT(gbc.pc(), 0x5fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 038B
        gbc.setState(0x619b, 0x3f1b, 0xa1f0, 0x4d1f, 0xb7b5, 0x10fe, 0x0, 0x1);
        gbc.writeMem(0x619b, { 0x11, 0x70, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3f1b);
        EXPECT(gbc.pc(), 0x619e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 038C
        gbc.setState(0x6774, 0x556, 0xb180, 0xdaf4, 0x6906, 0x42d3, 0x0, 0x0);
        gbc.writeMem(0x6774, { 0x11, 0x25, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x556);
        EXPECT(gbc.pc(), 0x6777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 038E
        gbc.setState(0x8e71, 0x4583, 0x9650, 0xe21, 0x2965, 0x6c45, 0x0, 0x1);
        gbc.writeMem(0x8e71, { 0x11, 0x1f, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4583);
        EXPECT(gbc.pc(), 0x8e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e71), 0x11);
        EXPECT(gbc.readMem(0x8e72), 0x1f);
        EXPECT(gbc.readMem(0x8e73), 0x7f);
        // 11 038F
        gbc.setState(0x914, 0x509c, 0x9470, 0xc505, 0xeda5, 0x5ae0, 0x1, 0x0);
        gbc.writeMem(0x914, { 0x11, 0xa8, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x509c);
        EXPECT(gbc.pc(), 0x917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 0390
        gbc.setState(0xece4, 0x8bc5, 0x7ce0, 0xa31d, 0xa933, 0xd7cb, 0x0, 0x1);
        gbc.writeMem(0xece4, { 0x11, 0x31, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8bc5);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0x11);
        EXPECT(gbc.readMem(0xece5), 0x31);
        EXPECT(gbc.readMem(0xece6), 0x11);
        // 11 0391
        gbc.setState(0x634, 0x6fae, 0x4e20, 0xe38d, 0xecb8, 0xf894, 0x1, 0x0);
        gbc.writeMem(0x634, { 0x11, 0xc5, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 0392
        gbc.setState(0xdc0, 0x972c, 0xd8c0, 0x567e, 0xd4e4, 0xe202, 0x0, 0x1);
        gbc.writeMem(0xdc0, { 0x11, 0x12, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x972c);
        EXPECT(gbc.pc(), 0xdc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0393
        gbc.setState(0x9282, 0xd725, 0x5f40, 0x39af, 0xb8b6, 0x3bad, 0x0, 0x0);
        gbc.writeMem(0x9282, { 0x11, 0x9e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd725);
        EXPECT(gbc.pc(), 0x9285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9282), 0x11);
        EXPECT(gbc.readMem(0x9283), 0x9e);
        EXPECT(gbc.readMem(0x9284), 0xb6);
        // 11 0394
        gbc.setState(0x3cde, 0xcd4d, 0x2f80, 0xd3cc, 0x5362, 0x1063, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x11, 0x87, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcd4d);
        EXPECT(gbc.pc(), 0x3ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 0395
        gbc.setState(0x6e40, 0x91e4, 0xd950, 0x8531, 0xd3eb, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x6e40, { 0x11, 0xbe, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x91e4);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0396
        gbc.setState(0x5538, 0xd898, 0x1e50, 0x3eb0, 0x828a, 0x5ef4, 0x0, 0x1);
        gbc.writeMem(0x5538, { 0x11, 0x19, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd898);
        EXPECT(gbc.pc(), 0x553b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0397
        gbc.setState(0x8467, 0x285e, 0x60e0, 0xb1f6, 0x7b25, 0xbc1a, 0x0, 0x0);
        gbc.writeMem(0x8467, { 0x11, 0x21, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x285e);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8467), 0x11);
        EXPECT(gbc.readMem(0x8468), 0x21);
        EXPECT(gbc.readMem(0x8469), 0x3e);
        // 11 0398
        gbc.setState(0x829, 0x654e, 0x8e50, 0x20b6, 0x8fbf, 0x744d, 0x1, 0x1);
        gbc.writeMem(0x829, { 0x11, 0xe6, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x654e);
        EXPECT(gbc.pc(), 0x82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 0399
        gbc.setState(0x694a, 0xf096, 0xaa60, 0xf272, 0x65c2, 0xa69f, 0x1, 0x1);
        gbc.writeMem(0x694a, { 0x11, 0xd6, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf096);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 039A
        gbc.setState(0x9c6e, 0xe288, 0xe5f0, 0x442c, 0xe46b, 0x5f96, 0x1, 0x1);
        gbc.writeMem(0x9c6e, { 0x11, 0x3d, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe288);
        EXPECT(gbc.pc(), 0x9c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6e), 0x11);
        EXPECT(gbc.readMem(0x9c6f), 0x3d);
        EXPECT(gbc.readMem(0x9c70), 0xb5);
        // 11 039B
        gbc.setState(0xd076, 0xbcd4, 0xa030, 0x146f, 0x5c4b, 0x239c, 0x0, 0x1);
        gbc.writeMem(0xd076, { 0x11, 0x7e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbcd4);
        EXPECT(gbc.pc(), 0xd079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd076), 0x11);
        EXPECT(gbc.readMem(0xd077), 0x7e);
        EXPECT(gbc.readMem(0xd078), 0x6e);
        // 11 039C
        gbc.setState(0xa339, 0x5c77, 0x7b60, 0xb741, 0xab13, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0xa339, { 0x11, 0x8b, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5c77);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa339), 0x11);
        EXPECT(gbc.readMem(0xa33a), 0x8b);
        EXPECT(gbc.readMem(0xa33b), 0xc5);
        // 11 039D
        gbc.setState(0x569c, 0x9648, 0x98b0, 0xed9d, 0x565e, 0xc251, 0x0, 0x1);
        gbc.writeMem(0x569c, { 0x11, 0xe7, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9648);
        EXPECT(gbc.pc(), 0x569f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 039E
        gbc.setState(0x5f9d, 0x99e0, 0xd040, 0x7717, 0xa94a, 0x8145, 0x1, 0x0);
        gbc.writeMem(0x5f9d, { 0x11, 0x4e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x99e0);
        EXPECT(gbc.pc(), 0x5fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 039F
        gbc.setState(0xbfde, 0xdb69, 0xb810, 0xd78f, 0xa82, 0x2808, 0x0, 0x1);
        gbc.writeMem(0xbfde, { 0x11, 0x52, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdb69);
        EXPECT(gbc.pc(), 0xbfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0x11);
        EXPECT(gbc.readMem(0xbfdf), 0x52);
        EXPECT(gbc.readMem(0xbfe0), 0xee);
        // 11 03A0
        gbc.setState(0xbb6a, 0xb98e, 0xb800, 0x38ff, 0x8d6f, 0xd180, 0x0, 0x1);
        gbc.writeMem(0xbb6a, { 0x11, 0xe4, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb98e);
        EXPECT(gbc.pc(), 0xbb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6a), 0x11);
        EXPECT(gbc.readMem(0xbb6b), 0xe4);
        EXPECT(gbc.readMem(0xbb6c), 0xea);
        // 11 03A1
        gbc.setState(0x61d4, 0xb836, 0xe200, 0x8061, 0xf432, 0x330e, 0x1, 0x1);
        gbc.writeMem(0x61d4, { 0x11, 0xd4, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb836);
        EXPECT(gbc.pc(), 0x61d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03A2
        gbc.setState(0x102a, 0xd558, 0x6060, 0x5ac8, 0xc98b, 0x5e16, 0x0, 0x1);
        gbc.writeMem(0x102a, { 0x11, 0x6b, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd558);
        EXPECT(gbc.pc(), 0x102d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03A3
        gbc.setState(0xb67e, 0xb017, 0xcff0, 0x27b1, 0xe7be, 0xea3c, 0x1, 0x1);
        gbc.writeMem(0xb67e, { 0x11, 0x5e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb017);
        EXPECT(gbc.pc(), 0xb681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67e), 0x11);
        EXPECT(gbc.readMem(0xb67f), 0x5e);
        EXPECT(gbc.readMem(0xb680), 0xa4);
        // 11 03A4
        gbc.setState(0xe037, 0xbede, 0x9020, 0x8cfb, 0x60c1, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0xe037, { 0x11, 0x99, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0xe03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe037), 0x11);
        EXPECT(gbc.readMem(0xe038), 0x99);
        EXPECT(gbc.readMem(0xe039), 0x2d);
        // 11 03A5
        gbc.setState(0x26d1, 0x1ea4, 0x7910, 0x4fbb, 0x63a9, 0xf3ee, 0x1, 0x0);
        gbc.writeMem(0x26d1, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1ea4);
        EXPECT(gbc.pc(), 0x26d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03A6
        gbc.setState(0xcdd, 0x61d7, 0x9e20, 0x86bb, 0x838f, 0x7e58, 0x0, 0x0);
        gbc.writeMem(0xcdd, { 0x11, 0x60, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0xce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03A7
        gbc.setState(0x42d8, 0x398f, 0x5f20, 0x4b4b, 0x75d2, 0x65aa, 0x1, 0x0);
        gbc.writeMem(0x42d8, { 0x11, 0x95, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x398f);
        EXPECT(gbc.pc(), 0x42db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03A9
        gbc.setState(0xa924, 0x9be1, 0x5e0, 0x8885, 0x23cd, 0xda3e, 0x1, 0x0);
        gbc.writeMem(0xa924, { 0x11, 0xdd, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0xa927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa924), 0x11);
        EXPECT(gbc.readMem(0xa925), 0xdd);
        EXPECT(gbc.readMem(0xa926), 0xfe);
        // 11 03AB
        gbc.setState(0x6e4, 0xd812, 0xa8a0, 0x8ad2, 0x9cb, 0x939a, 0x0, 0x1);
        gbc.writeMem(0x6e4, { 0x11, 0xe3, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd812);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03AC
        gbc.setState(0x7e8e, 0x72ca, 0xeaf0, 0xf048, 0x2a0a, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0x7e8e, { 0x11, 0x54, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x72ca);
        EXPECT(gbc.pc(), 0x7e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03AD
        gbc.setState(0xd1b1, 0x692c, 0x5340, 0x2a4f, 0xc0, 0xeccb, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0x11, 0x3b, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x692c);
        EXPECT(gbc.pc(), 0xd1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b1), 0x11);
        EXPECT(gbc.readMem(0xd1b2), 0x3b);
        EXPECT(gbc.readMem(0xd1b3), 0x3e);
        // 11 03AF
        gbc.setState(0x64a6, 0x19a4, 0xa430, 0xc648, 0x5807, 0x72b, 0x0, 0x1);
        gbc.writeMem(0x64a6, { 0x11, 0x11, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x19a4);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03B0
        gbc.setState(0x56cb, 0x4a16, 0x4680, 0xa171, 0xa48f, 0xbd26, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0x11, 0x4b, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4a16);
        EXPECT(gbc.pc(), 0x56ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03B1
        gbc.setState(0xa1ab, 0x56c7, 0xc110, 0x5b60, 0xdc6d, 0x43b0, 0x0, 0x1);
        gbc.writeMem(0xa1ab, { 0x11, 0x2f, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x56c7);
        EXPECT(gbc.pc(), 0xa1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ab), 0x11);
        EXPECT(gbc.readMem(0xa1ac), 0x2f);
        EXPECT(gbc.readMem(0xa1ad), 0x31);
        // 11 03B2
        gbc.setState(0xa34f, 0x7210, 0xade0, 0x8f7b, 0x267d, 0x6812, 0x1, 0x1);
        gbc.writeMem(0xa34f, { 0x11, 0x68, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7210);
        EXPECT(gbc.pc(), 0xa352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34f), 0x11);
        EXPECT(gbc.readMem(0xa350), 0x68);
        EXPECT(gbc.readMem(0xa351), 0x69);
        // 11 03B4
        gbc.setState(0x116b, 0xac42, 0xb390, 0x98e6, 0xa15c, 0x27ec, 0x1, 0x1);
        gbc.writeMem(0x116b, { 0x11, 0xe7, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xac42);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03B5
        gbc.setState(0x77e9, 0x9cf1, 0xb810, 0xd813, 0xa4e1, 0xeb, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0x11, 0x7a, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9cf1);
        EXPECT(gbc.pc(), 0x77ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03B6
        gbc.setState(0xb32, 0x9495, 0x38b0, 0xe577, 0xc9, 0x2f77, 0x0, 0x1);
        gbc.writeMem(0xb32, { 0x11, 0x4f, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9495);
        EXPECT(gbc.pc(), 0xb35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03B7
        gbc.setState(0xef0d, 0x4110, 0x23f0, 0xf62a, 0x8505, 0x6f78, 0x1, 0x0);
        gbc.writeMem(0xef0d, { 0x11, 0x4b, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4110);
        EXPECT(gbc.pc(), 0xef10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0d), 0x11);
        EXPECT(gbc.readMem(0xef0e), 0x4b);
        EXPECT(gbc.readMem(0xef0f), 0xd1);
        // 11 03B8
        gbc.setState(0x41c8, 0x2ae6, 0xaf60, 0xb368, 0xec5d, 0xd8ec, 0x1, 0x0);
        gbc.writeMem(0x41c8, { 0x11, 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x41cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03B9
        gbc.setState(0xc345, 0xadbe, 0x6300, 0xd775, 0x19b2, 0xc05f, 0x1, 0x0);
        gbc.writeMem(0xc345, { 0x11, 0x1c, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xadbe);
        EXPECT(gbc.pc(), 0xc348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc345), 0x11);
        EXPECT(gbc.readMem(0xc346), 0x1c);
        EXPECT(gbc.readMem(0xc347), 0xa5);
        // 11 03BA
        gbc.setState(0xb1a, 0x7236, 0x58b0, 0xce16, 0xe4e1, 0xfe80, 0x0, 0x0);
        gbc.writeMem(0xb1a, { 0x11, 0x77, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0xb1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03BB
        gbc.setState(0x50d, 0x4079, 0x2f0, 0xa5c6, 0xb94b, 0x701c, 0x1, 0x1);
        gbc.writeMem(0x50d, { 0x11, 0xe5, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4079);
        EXPECT(gbc.pc(), 0x510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03BC
        gbc.setState(0x99fe, 0x8afe, 0x9bd0, 0x701c, 0x2054, 0xf7e7, 0x0, 0x1);
        gbc.writeMem(0x99fe, { 0x11, 0x62, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8afe);
        EXPECT(gbc.pc(), 0x9a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fe), 0x11);
        EXPECT(gbc.readMem(0x99ff), 0x62);
        EXPECT(gbc.readMem(0x9a00), 0x8a);
        // 11 03BD
        gbc.setState(0xa4de, 0x571f, 0xe870, 0x50d2, 0x2c06, 0x5f50, 0x0, 0x0);
        gbc.writeMem(0xa4de, { 0x11, 0x4f, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x571f);
        EXPECT(gbc.pc(), 0xa4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4de), 0x11);
        EXPECT(gbc.readMem(0xa4df), 0x4f);
        EXPECT(gbc.readMem(0xa4e0), 0xa9);
        // 11 03BE
        gbc.setState(0xed60, 0xf2e6, 0x7c40, 0x29b8, 0x1b1b, 0x5c6, 0x0, 0x0);
        gbc.writeMem(0xed60, { 0x11, 0xdc, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf2e6);
        EXPECT(gbc.pc(), 0xed63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed60), 0x11);
        EXPECT(gbc.readMem(0xed61), 0xdc);
        EXPECT(gbc.readMem(0xed62), 0x58);
        // 11 03BF
        gbc.setState(0xe42a, 0x24c, 0x3eb0, 0x3fd4, 0xc28d, 0xfd60, 0x0, 0x0);
        gbc.writeMem(0xe42a, { 0x11, 0xc4, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x24c);
        EXPECT(gbc.pc(), 0xe42d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42a), 0x11);
        EXPECT(gbc.readMem(0xe42b), 0xc4);
        EXPECT(gbc.readMem(0xe42c), 0xd4);
        // 11 03C0
        gbc.setState(0xbe81, 0x4a46, 0xc450, 0xf29e, 0xcbd5, 0x8efc, 0x1, 0x1);
        gbc.writeMem(0xbe81, { 0x11, 0x12, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4a46);
        EXPECT(gbc.pc(), 0xbe84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe81), 0x11);
        EXPECT(gbc.readMem(0xbe82), 0x12);
        EXPECT(gbc.readMem(0xbe83), 0xbe);
        // 11 03C1
        gbc.setState(0xbbea, 0x3b41, 0xf0e0, 0x1d41, 0xd37b, 0x4aa4, 0x0, 0x0);
        gbc.writeMem(0xbbea, { 0x11, 0x6a, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0xbbed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbea), 0x11);
        EXPECT(gbc.readMem(0xbbeb), 0x6a);
        EXPECT(gbc.readMem(0xbbec), 0x18);
        // 11 03C2
        gbc.setState(0x1019, 0xb2ef, 0x2990, 0x6a1d, 0x2965, 0x89cb, 0x0, 0x0);
        gbc.writeMem(0x1019, { 0x11, 0x91, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb2ef);
        EXPECT(gbc.pc(), 0x101c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03C3
        gbc.setState(0x35fd, 0x34b4, 0xa6c0, 0x4876, 0x9959, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x35fd, { 0x11, 0x32, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x34b4);
        EXPECT(gbc.pc(), 0x3600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03C4
        gbc.setState(0xe6b, 0xbc2d, 0x5760, 0xa245, 0x1012, 0xaecb, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0x11, 0x4d, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbc2d);
        EXPECT(gbc.pc(), 0xe6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03C5
        gbc.setState(0x83ab, 0x56cd, 0xbf70, 0x8681, 0xf362, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0x83ab, { 0x11, 0xb0, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x56cd);
        EXPECT(gbc.pc(), 0x83ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ab), 0x11);
        EXPECT(gbc.readMem(0x83ac), 0xb0);
        EXPECT(gbc.readMem(0x83ad), 0x18);
        // 11 03C6
        gbc.setState(0xdb2c, 0x4b37, 0xf3a0, 0x1a97, 0x338b, 0xb605, 0x0, 0x0);
        gbc.writeMem(0xdb2c, { 0x11, 0x77, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4b37);
        EXPECT(gbc.pc(), 0xdb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2c), 0x11);
        EXPECT(gbc.readMem(0xdb2d), 0x77);
        EXPECT(gbc.readMem(0xdb2e), 0x5e);
        // 11 03C7
        gbc.setState(0x1f9f, 0xc4c, 0x44d0, 0x2127, 0x760, 0xd8fc, 0x0, 0x0);
        gbc.writeMem(0x1f9f, { 0x11, 0xa8, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc4c);
        EXPECT(gbc.pc(), 0x1fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03C8
        gbc.setState(0x7880, 0xc813, 0xd430, 0xd3ae, 0x3911, 0x668c, 0x1, 0x1);
        gbc.writeMem(0x7880, { 0x11, 0x73, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc813);
        EXPECT(gbc.pc(), 0x7883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03C9
        gbc.setState(0x6d63, 0x51ca, 0x6000, 0xc258, 0xdfb, 0x8db0, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0x11, 0xb2, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x51ca);
        EXPECT(gbc.pc(), 0x6d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03CA
        gbc.setState(0x6b01, 0x482e, 0x5440, 0x9792, 0x5c37, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x6b01, { 0x11, 0x97, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x482e);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03CB
        gbc.setState(0x7cdf, 0x2970, 0xdca0, 0x63be, 0xf97d, 0xa4cb, 0x1, 0x1);
        gbc.writeMem(0x7cdf, { 0x11, 0x1, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2970);
        EXPECT(gbc.pc(), 0x7ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03CC
        gbc.setState(0xd3e5, 0xf7cc, 0x250, 0x8031, 0xa1fa, 0x3029, 0x1, 0x0);
        gbc.writeMem(0xd3e5, { 0x11, 0xd0, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf7cc);
        EXPECT(gbc.pc(), 0xd3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e5), 0x11);
        EXPECT(gbc.readMem(0xd3e6), 0xd0);
        EXPECT(gbc.readMem(0xd3e7), 0xe5);
        // 11 03CD
        gbc.setState(0x9f2c, 0xdbe2, 0x860, 0x6831, 0x5731, 0x16d6, 0x1, 0x0);
        gbc.writeMem(0x9f2c, { 0x11, 0x31, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdbe2);
        EXPECT(gbc.pc(), 0x9f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2c), 0x11);
        EXPECT(gbc.readMem(0x9f2d), 0x31);
        EXPECT(gbc.readMem(0x9f2e), 0x97);
        // 11 03CE
        gbc.setState(0x2164, 0xc626, 0x7220, 0x8923, 0x9083, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0x11, 0xf1, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc626);
        EXPECT(gbc.pc(), 0x2167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03D0
        gbc.setState(0xde79, 0xa3ba, 0x9270, 0xd6f1, 0x403e, 0x4d0b, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0x11, 0xbe, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa3ba);
        EXPECT(gbc.pc(), 0xde7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde79), 0x11);
        EXPECT(gbc.readMem(0xde7a), 0xbe);
        EXPECT(gbc.readMem(0xde7b), 0xe8);
        // 11 03D1
        gbc.setState(0xbf7b, 0x2a7e, 0x7bc0, 0x9785, 0x70f7, 0x4f71, 0x0, 0x1);
        gbc.writeMem(0xbf7b, { 0x11, 0x9f, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2a7e);
        EXPECT(gbc.pc(), 0xbf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf7b), 0x11);
        EXPECT(gbc.readMem(0xbf7c), 0x9f);
        EXPECT(gbc.readMem(0xbf7d), 0x8a);
        // 11 03D2
        gbc.setState(0x6790, 0x46db, 0xf3b0, 0xc476, 0x3cac, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x6790, { 0x11, 0x9e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x46db);
        EXPECT(gbc.pc(), 0x6793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03D3
        gbc.setState(0x68bb, 0xa4bf, 0x5280, 0x34c2, 0xd708, 0xfa2c, 0x1, 0x0);
        gbc.writeMem(0x68bb, { 0x11, 0x54, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa4bf);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03D4
        gbc.setState(0x4dc4, 0x82c9, 0x4200, 0x1c95, 0xd42c, 0x1887, 0x0, 0x1);
        gbc.writeMem(0x4dc4, { 0x11, 0x63, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x82c9);
        EXPECT(gbc.pc(), 0x4dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03D5
        gbc.setState(0x35a2, 0xdcc7, 0x5c70, 0x8851, 0x95f6, 0x1fb2, 0x0, 0x0);
        gbc.writeMem(0x35a2, { 0x11, 0x2d, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0x35a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03D6
        gbc.setState(0xbcd9, 0x3d55, 0x32f0, 0x9eaa, 0x89e4, 0xc6c5, 0x0, 0x0);
        gbc.writeMem(0xbcd9, { 0x11, 0x86, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3d55);
        EXPECT(gbc.pc(), 0xbcdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd9), 0x11);
        EXPECT(gbc.readMem(0xbcda), 0x86);
        EXPECT(gbc.readMem(0xbcdb), 0x5e);
        // 11 03D7
        gbc.setState(0x3cda, 0x4d69, 0x6020, 0xe2ca, 0xf55, 0x50c1, 0x0, 0x0);
        gbc.writeMem(0x3cda, { 0x11, 0xd6, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4d69);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03D8
        gbc.setState(0x79d9, 0x9ee3, 0xf650, 0x8e07, 0x988a, 0xd326, 0x1, 0x0);
        gbc.writeMem(0x79d9, { 0x11, 0xb8, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9ee3);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 11 03D9
        gbc.setState(0xb243, 0xdf7e, 0x950, 0x22fb, 0xe4c4, 0xd122, 0x1, 0x1);
        gbc.writeMem(0xb243, { 0x11, 0x30, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdf7e);
        EXPECT(gbc.pc(), 0xb246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb243), 0x11);
        EXPECT(gbc.readMem(0xb244), 0x30);
        EXPECT(gbc.readMem(0xb245), 0x8d);
        // 11 03DA
        gbc.setState(0x1087, 0xfe46, 0xdb30, 0xe317, 0x8518, 0x95e1, 0x1, 0x0);
        gbc.writeMem(0x1087, { 0x11, 0xdd, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0x108a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03DB
        gbc.setState(0x8a60, 0xf2c7, 0x26e0, 0x6996, 0xdf58, 0x913c, 0x1, 0x0);
        gbc.writeMem(0x8a60, { 0x11, 0x68, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf2c7);
        EXPECT(gbc.pc(), 0x8a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a60), 0x11);
        EXPECT(gbc.readMem(0x8a61), 0x68);
        EXPECT(gbc.readMem(0x8a62), 0x7a);
        // 11 03DC
        gbc.setState(0x7ed1, 0x8ea1, 0xe7f0, 0x294b, 0x14a3, 0x1cd4, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0x11, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8ea1);
        EXPECT(gbc.pc(), 0x7ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 11 03DD
        gbc.setState(0x5dce, 0x963a, 0x80a0, 0x8b32, 0xf17e, 0xd00e, 0x0, 0x1);
        gbc.writeMem(0x5dce, { 0x11, 0xeb, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x963a);
        EXPECT(gbc.pc(), 0x5dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03DE
        gbc.setState(0xd392, 0xdb8d, 0xaf60, 0x7f75, 0x62df, 0xb879, 0x0, 0x1);
        gbc.writeMem(0xd392, { 0x11, 0xcd, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdb8d);
        EXPECT(gbc.pc(), 0xd395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd392), 0x11);
        EXPECT(gbc.readMem(0xd393), 0xcd);
        EXPECT(gbc.readMem(0xd394), 0xd8);
        // 11 03DF
        gbc.setState(0xd95e, 0x3408, 0xe050, 0xe1d5, 0xa914, 0xabdc, 0x0, 0x1);
        gbc.writeMem(0xd95e, { 0x11, 0xd7, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3408);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95e), 0x11);
        EXPECT(gbc.readMem(0xd95f), 0xd7);
        EXPECT(gbc.readMem(0xd960), 0x23);
        // 11 03E1
        gbc.setState(0xdae4, 0x1ba0, 0x6580, 0x6c55, 0xc952, 0xe0ab, 0x1, 0x0);
        gbc.writeMem(0xdae4, { 0x11, 0x10, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ba0);
        EXPECT(gbc.pc(), 0xdae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae4), 0x11);
        EXPECT(gbc.readMem(0xdae5), 0x10);
        EXPECT(gbc.readMem(0xdae6), 0xef);
        // 11 03E2
        gbc.setState(0x2e9c, 0x5787, 0x4100, 0xf505, 0x94dc, 0xb1eb, 0x0, 0x1);
        gbc.writeMem(0x2e9c, { 0x11, 0x28, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5787);
        EXPECT(gbc.pc(), 0x2e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 11 03E3
        gbc.setState(0xa7d6, 0x35ad, 0x7e90, 0x4de8, 0x932e, 0xd44a, 0x1, 0x0);
        gbc.writeMem(0xa7d6, { 0x11, 0xaf, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0xa7d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d6), 0x11);
        EXPECT(gbc.readMem(0xa7d7), 0xaf);
        EXPECT(gbc.readMem(0xa7d8), 0xb5);
        // 11 03E4
        gbc.setState(0x988d, 0x912b, 0x7b80, 0xd60d, 0x5863, 0x3052, 0x0, 0x0);
        gbc.writeMem(0x988d, { 0x11, 0x3d, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0x9890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988d), 0x11);
        EXPECT(gbc.readMem(0x988e), 0x3d);
        EXPECT(gbc.readMem(0x988f), 0xa9);
        // 11 03E5
        gbc.setState(0x2fff, 0x5f6d, 0x9960, 0x5c, 0x9426, 0x65c6, 0x1, 0x0);
        gbc.writeMem(0x2fff, { 0x11, 0xb1, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x3002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 11 03E7
        gbc.setState(0x8c08, 0x64ec, 0x49e0, 0xca0c, 0xc7b7, 0x987, 0x0, 0x1);
        gbc.writeMem(0x8c08, { 0x11, 0x16, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x64ec);
        EXPECT(gbc.pc(), 0x8c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c08), 0x11);
        EXPECT(gbc.readMem(0x8c09), 0x16);
        EXPECT(gbc.readMem(0x8c0a), 0x1b);
    }
