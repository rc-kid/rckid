    TEST(gbcemu, opcode_11) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 11 0000
        gbc.setState(0xc55, 0xe875, 0x4cb0, 0x7a54, 0xebd9, 0xb7aa, 0x1, 0x1);
        gbc.writeMem(0xc55, { 0x11, 0x43, 0x26 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe875, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0001
        gbc.setState(0xe3b6, 0x4101, 0x4620, 0x6bcf, 0xd85f, 0x3a1f, 0x1, 0x0);
        gbc.writeMem(0xe3b6, { 0x11, 0x78, 0x90 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4101, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe3b6));
        EXPECT(0x78, gbc.readMem(0xe3b7));
        EXPECT(0x90, gbc.readMem(0xe3b8));
        // 11 0002
        gbc.setState(0x8d6b, 0xed1, 0xaaf0, 0x149c, 0x1167, 0xd3d7, 0x0, 0x1);
        gbc.writeMem(0x8d6b, { 0x11, 0xd7, 0x3e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xed1, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d6b));
        EXPECT(0xd7, gbc.readMem(0x8d6c));
        EXPECT(0x3e, gbc.readMem(0x8d6d));
        // 11 0003
        gbc.setState(0xb95c, 0x7867, 0xd310, 0x4f0c, 0x7942, 0xa02f, 0x1, 0x1);
        gbc.writeMem(0xb95c, { 0x11, 0x6f, 0xc6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb95c));
        EXPECT(0x6f, gbc.readMem(0xb95d));
        EXPECT(0xc6, gbc.readMem(0xb95e));
        // 11 0004
        gbc.setState(0x6810, 0x36ed, 0x3360, 0xbb28, 0x5601, 0x60d5, 0x0, 0x1);
        gbc.writeMem(0x6810, { 0x11, 0x0, 0x9e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x36ed, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0005
        gbc.setState(0xa146, 0x9fc4, 0xb080, 0x58d, 0x7f04, 0x8673, 0x0, 0x1);
        gbc.writeMem(0xa146, { 0x11, 0xf6, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa146));
        EXPECT(0xf6, gbc.readMem(0xa147));
        EXPECT(0xec, gbc.readMem(0xa148));
        // 11 0006
        gbc.setState(0x1a40, 0xa6ed, 0xbe40, 0x17b1, 0x5e25, 0x9394, 0x1, 0x0);
        gbc.writeMem(0x1a40, { 0x11, 0x23, 0x6b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0x1a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0007
        gbc.setState(0x831b, 0x3fbc, 0xba70, 0x757b, 0x7c01, 0x30ea, 0x1, 0x0);
        gbc.writeMem(0x831b, { 0x11, 0xe0, 0x21 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3fbc, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x831b));
        EXPECT(0xe0, gbc.readMem(0x831c));
        EXPECT(0x21, gbc.readMem(0x831d));
        // 11 0008
        gbc.setState(0x44e4, 0xbb0e, 0x54a0, 0xd985, 0x30ca, 0x79ef, 0x1, 0x1);
        gbc.writeMem(0x44e4, { 0x11, 0x35, 0xf4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbb0e, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0009
        gbc.setState(0xb813, 0x4a8f, 0x7a80, 0x7f2b, 0xafd2, 0x7aa9, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0x11, 0xcb, 0x54 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4a8f, gbc.sp());
        EXPECT(0xb816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb813));
        EXPECT(0xcb, gbc.readMem(0xb814));
        EXPECT(0x54, gbc.readMem(0xb815));
        // 11 000A
        gbc.setState(0x6436, 0x919d, 0x6a70, 0x870d, 0xbd99, 0xcd05, 0x0, 0x1);
        gbc.writeMem(0x6436, { 0x11, 0x96, 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x919d, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 000B
        gbc.setState(0x24c6, 0x5fa, 0xd1d0, 0x74be, 0xa4d2, 0x8bda, 0x0, 0x0);
        gbc.writeMem(0x24c6, { 0x11, 0x50, 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 000C
        gbc.setState(0x35a9, 0xcc0a, 0x880, 0xec0f, 0x546f, 0xc0af, 0x1, 0x0);
        gbc.writeMem(0x35a9, { 0x11, 0x65, 0x9f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0x35ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 000E
        gbc.setState(0xb902, 0x2e5a, 0x6c80, 0x13be, 0x2d6c, 0x32b8, 0x1, 0x1);
        gbc.writeMem(0xb902, { 0x11, 0x15, 0xf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb902));
        EXPECT(0x15, gbc.readMem(0xb903));
        EXPECT(0xf, gbc.readMem(0xb904));
        // 11 000F
        gbc.setState(0x44e6, 0x8e37, 0xa730, 0x7bc3, 0xe6d3, 0x3ed8, 0x1, 0x1);
        gbc.writeMem(0x44e6, { 0x11, 0x4a, 0xa6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8e37, gbc.sp());
        EXPECT(0x44e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0010
        gbc.setState(0x3f96, 0x34f3, 0x58a0, 0x7af1, 0xb7c9, 0x4919, 0x0, 0x0);
        gbc.writeMem(0x3f96, { 0x11, 0x73, 0x14 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x34f3, gbc.sp());
        EXPECT(0x3f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0011
        gbc.setState(0x24ac, 0xa44c, 0x300, 0x36d1, 0x6731, 0xfdb9, 0x0, 0x0);
        gbc.writeMem(0x24ac, { 0x11, 0xd5, 0xe0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0x24af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0012
        gbc.setState(0x4f7a, 0x49c6, 0xa470, 0xc400, 0xb9eb, 0xc2a9, 0x1, 0x0);
        gbc.writeMem(0x4f7a, { 0x11, 0xe7, 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0x4f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0014
        gbc.setState(0x54ce, 0x195a, 0x5400, 0x931a, 0x6a2b, 0x65a9, 0x0, 0x1);
        gbc.writeMem(0x54ce, { 0x11, 0xb3, 0x23 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0015
        gbc.setState(0x4f0, 0xce0e, 0x7b90, 0x2c3, 0x6a87, 0x7708, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0x11, 0x1a, 0x9e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0016
        gbc.setState(0xe3bc, 0xfecb, 0x50a0, 0xd8cd, 0xe03, 0x5d2c, 0x0, 0x0);
        gbc.writeMem(0xe3bc, { 0x11, 0x33, 0x1e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfecb, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe3bc));
        EXPECT(0x33, gbc.readMem(0xe3bd));
        EXPECT(0x1e, gbc.readMem(0xe3be));
        // 11 0017
        gbc.setState(0xa9ce, 0xbc46, 0xe1b0, 0x649c, 0x4ca, 0x69f5, 0x0, 0x0);
        gbc.writeMem(0xa9ce, { 0x11, 0xac, 0x45 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbc46, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa9ce));
        EXPECT(0xac, gbc.readMem(0xa9cf));
        EXPECT(0x45, gbc.readMem(0xa9d0));
        // 11 0018
        gbc.setState(0x210d, 0xc2ed, 0x14c0, 0x1b19, 0xe9a3, 0x6379, 0x1, 0x1);
        gbc.writeMem(0x210d, { 0x11, 0x3e, 0xe5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc2ed, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0019
        gbc.setState(0x224, 0x8a81, 0x5810, 0x88bc, 0x392e, 0xb853, 0x1, 0x0);
        gbc.writeMem(0x224, { 0x11, 0x54, 0x33 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0x227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 001A
        gbc.setState(0x8c8d, 0x7724, 0x4f70, 0xb01a, 0x670f, 0xe116, 0x1, 0x0);
        gbc.writeMem(0x8c8d, { 0x11, 0x3d, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0x8c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8c8d));
        EXPECT(0x3d, gbc.readMem(0x8c8e));
        EXPECT(0xb9, gbc.readMem(0x8c8f));
        // 11 001B
        gbc.setState(0x1cfb, 0x9144, 0xab40, 0x8380, 0xcb9b, 0x6db3, 0x1, 0x1);
        gbc.writeMem(0x1cfb, { 0x11, 0x7e, 0x33 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9144, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 001C
        gbc.setState(0xda26, 0x20da, 0x8a20, 0xa94a, 0x65ad, 0x17eb, 0x1, 0x0);
        gbc.writeMem(0xda26, { 0x11, 0x40, 0xea });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x20da, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xda26));
        EXPECT(0x40, gbc.readMem(0xda27));
        EXPECT(0xea, gbc.readMem(0xda28));
        // 11 001D
        gbc.setState(0x5645, 0x566, 0x20f0, 0xa539, 0x4680, 0xbfd6, 0x0, 0x0);
        gbc.writeMem(0x5645, { 0x11, 0xf9, 0xce });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x566, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 001F
        gbc.setState(0x3b1a, 0xef1e, 0xa450, 0xfa63, 0xd6e4, 0xe455, 0x0, 0x0);
        gbc.writeMem(0x3b1a, { 0x11, 0xaf, 0x99 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xef1e, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0020
        gbc.setState(0x2ac1, 0x9df3, 0x8180, 0xa5b6, 0xec12, 0x255c, 0x0, 0x0);
        gbc.writeMem(0x2ac1, { 0x11, 0x98, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0x2ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0021
        gbc.setState(0x9520, 0xd84e, 0x23d0, 0x8013, 0x4afd, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x9520, { 0x11, 0xef, 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd84e, gbc.sp());
        EXPECT(0x9523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9520));
        EXPECT(0xef, gbc.readMem(0x9521));
        EXPECT(0x1d, gbc.readMem(0x9522));
        // 11 0022
        gbc.setState(0x7a55, 0xaecf, 0x3bd0, 0x3ceb, 0xd7db, 0x932f, 0x0, 0x1);
        gbc.writeMem(0x7a55, { 0x11, 0x0, 0xb8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaecf, gbc.sp());
        EXPECT(0x7a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0023
        gbc.setState(0x14a8, 0xd8fa, 0x9c70, 0x56b7, 0xd4d3, 0xbe3a, 0x0, 0x0);
        gbc.writeMem(0x14a8, { 0x11, 0xe8, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd8fa, gbc.sp());
        EXPECT(0x14ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0024
        gbc.setState(0xbbce, 0xd809, 0x81f0, 0xc80, 0x9ac6, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xbbce, { 0x11, 0xa9, 0xcd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd809, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbbce));
        EXPECT(0xa9, gbc.readMem(0xbbcf));
        EXPECT(0xcd, gbc.readMem(0xbbd0));
        // 11 0025
        gbc.setState(0x2782, 0xd46c, 0xb1a0, 0x7991, 0x58ad, 0x3000, 0x1, 0x1);
        gbc.writeMem(0x2782, { 0x11, 0x5e, 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd46c, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0026
        gbc.setState(0xaa7, 0xcea7, 0x33d0, 0xdfbe, 0x7894, 0x1a02, 0x0, 0x0);
        gbc.writeMem(0xaa7, { 0x11, 0xf, 0x6f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0xaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0027
        gbc.setState(0xd24e, 0xb17e, 0x6830, 0x401f, 0x4b54, 0xff75, 0x1, 0x0);
        gbc.writeMem(0xd24e, { 0x11, 0xcf, 0x81 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd24e));
        EXPECT(0xcf, gbc.readMem(0xd24f));
        EXPECT(0x81, gbc.readMem(0xd250));
        // 11 0028
        gbc.setState(0xa665, 0x80c1, 0xea00, 0x3312, 0x9999, 0x2971, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0x11, 0xa5, 0x54 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa665));
        EXPECT(0xa5, gbc.readMem(0xa666));
        EXPECT(0x54, gbc.readMem(0xa667));
        // 11 0029
        gbc.setState(0x489f, 0x34e8, 0xbf90, 0xb17f, 0xd73c, 0x60e4, 0x0, 0x0);
        gbc.writeMem(0x489f, { 0x11, 0xf4, 0x83 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x34e8, gbc.sp());
        EXPECT(0x48a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 002A
        gbc.setState(0x3518, 0xef58, 0xf980, 0xfb7b, 0xdd51, 0x7ab4, 0x1, 0x1);
        gbc.writeMem(0x3518, { 0x11, 0x32, 0xa9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xef58, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 002B
        gbc.setState(0x87fe, 0x6e63, 0x8950, 0xc691, 0x8642, 0x21c2, 0x0, 0x1);
        gbc.writeMem(0x87fe, { 0x11, 0xfd, 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6e63, gbc.sp());
        EXPECT(0x8801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x87fe));
        EXPECT(0xfd, gbc.readMem(0x87ff));
        EXPECT(0xbf, gbc.readMem(0x8800));
        // 11 002C
        gbc.setState(0x9674, 0x16f9, 0xf3d0, 0xfd64, 0xe834, 0x67ce, 0x1, 0x0);
        gbc.writeMem(0x9674, { 0x11, 0xc0, 0x4e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0x9677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9674));
        EXPECT(0xc0, gbc.readMem(0x9675));
        EXPECT(0x4e, gbc.readMem(0x9676));
        // 11 002D
        gbc.setState(0x661b, 0x1e57, 0xc590, 0xf407, 0xad63, 0xea43, 0x0, 0x1);
        gbc.writeMem(0x661b, { 0x11, 0x71, 0x28 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1e57, gbc.sp());
        EXPECT(0x661e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 002E
        gbc.setState(0xd920, 0x1acc, 0x4b70, 0x1364, 0xcde9, 0x14f7, 0x0, 0x1);
        gbc.writeMem(0xd920, { 0x11, 0xe4, 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1acc, gbc.sp());
        EXPECT(0xd923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd920));
        EXPECT(0xe4, gbc.readMem(0xd921));
        EXPECT(0x7a, gbc.readMem(0xd922));
        // 11 0030
        gbc.setState(0xb87, 0x74d9, 0x8170, 0x8023, 0xef49, 0xb063, 0x0, 0x1);
        gbc.writeMem(0xb87, { 0x11, 0xf1, 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x74d9, gbc.sp());
        EXPECT(0xb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0031
        gbc.setState(0xcc23, 0x8ab0, 0xca30, 0xeaf1, 0xd2d6, 0x2819, 0x0, 0x1);
        gbc.writeMem(0xcc23, { 0x11, 0x68, 0xc7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ab0, gbc.sp());
        EXPECT(0xcc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcc23));
        EXPECT(0x68, gbc.readMem(0xcc24));
        EXPECT(0xc7, gbc.readMem(0xcc25));
        // 11 0032
        gbc.setState(0x2cdf, 0x6531, 0x5600, 0xa953, 0x5a86, 0x3151, 0x1, 0x0);
        gbc.writeMem(0x2cdf, { 0x11, 0xb8, 0xef });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6531, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0033
        gbc.setState(0x810a, 0x2803, 0x1960, 0x301, 0x1c85, 0x9fc, 0x1, 0x1);
        gbc.writeMem(0x810a, { 0x11, 0x3d, 0x70 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2803, gbc.sp());
        EXPECT(0x810d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x810a));
        EXPECT(0x3d, gbc.readMem(0x810b));
        EXPECT(0x70, gbc.readMem(0x810c));
        // 11 0034
        gbc.setState(0x4e5e, 0xf662, 0x12f0, 0x8b5d, 0x3a0f, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0x11, 0xed, 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0035
        gbc.setState(0x2dcf, 0x624a, 0x2780, 0x7623, 0xb4e5, 0xfb85, 0x0, 0x1);
        gbc.writeMem(0x2dcf, { 0x11, 0xb3, 0x71 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x624a, gbc.sp());
        EXPECT(0x2dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0036
        gbc.setState(0x1d64, 0xde59, 0x2540, 0x3af3, 0xe02d, 0x6f35, 0x0, 0x0);
        gbc.writeMem(0x1d64, { 0x11, 0x12, 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xde59, gbc.sp());
        EXPECT(0x1d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0037
        gbc.setState(0xae3b, 0xf465, 0xc140, 0xd245, 0x6d93, 0xb5af, 0x0, 0x1);
        gbc.writeMem(0xae3b, { 0x11, 0x47, 0x88 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xae3b));
        EXPECT(0x47, gbc.readMem(0xae3c));
        EXPECT(0x88, gbc.readMem(0xae3d));
        // 11 0038
        gbc.setState(0x3cb3, 0xa877, 0xaa40, 0x5907, 0xa244, 0xa7f9, 0x0, 0x0);
        gbc.writeMem(0x3cb3, { 0x11, 0x8d, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa877, gbc.sp());
        EXPECT(0x3cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0039
        gbc.setState(0x70c3, 0xc6d4, 0xf840, 0xca66, 0x5361, 0x5b27, 0x0, 0x1);
        gbc.writeMem(0x70c3, { 0x11, 0xe7, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x70c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 003A
        gbc.setState(0x20b5, 0xe7f7, 0x8fb0, 0x1d85, 0x2cad, 0xe442, 0x0, 0x0);
        gbc.writeMem(0x20b5, { 0x11, 0xe1, 0x32 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe7f7, gbc.sp());
        EXPECT(0x20b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 003B
        gbc.setState(0x1bb7, 0x79ef, 0x8a90, 0x9fa0, 0x391a, 0x1428, 0x0, 0x1);
        gbc.writeMem(0x1bb7, { 0x11, 0x3e, 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0x1bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 003C
        gbc.setState(0x7602, 0x5e6b, 0xfe00, 0xb552, 0x53ac, 0xfcd2, 0x0, 0x1);
        gbc.writeMem(0x7602, { 0x11, 0x76, 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0x7605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 003D
        gbc.setState(0x8630, 0xb8d3, 0xa1b0, 0x2dab, 0x2ac5, 0x42d7, 0x1, 0x0);
        gbc.writeMem(0x8630, { 0x11, 0x58, 0x34 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb8d3, gbc.sp());
        EXPECT(0x8633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8630));
        EXPECT(0x58, gbc.readMem(0x8631));
        EXPECT(0x34, gbc.readMem(0x8632));
        // 11 003E
        gbc.setState(0x99b6, 0x1ecc, 0x2d40, 0x1c95, 0x66b4, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0x11, 0xe3, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1ecc, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x99b6));
        EXPECT(0xe3, gbc.readMem(0x99b7));
        EXPECT(0xd7, gbc.readMem(0x99b8));
        // 11 003F
        gbc.setState(0x54a8, 0x366a, 0x99a0, 0x1e72, 0x3ff8, 0xcb91, 0x1, 0x0);
        gbc.writeMem(0x54a8, { 0x11, 0x7f, 0x4a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0x54ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0040
        gbc.setState(0x4237, 0xeea0, 0xe3e0, 0x554e, 0x50f8, 0xbbd1, 0x1, 0x0);
        gbc.writeMem(0x4237, { 0x11, 0x70, 0x24 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0041
        gbc.setState(0xb43c, 0x7b76, 0x3ac0, 0xca15, 0xf79f, 0x70c3, 0x0, 0x0);
        gbc.writeMem(0xb43c, { 0x11, 0x0, 0xd7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7b76, gbc.sp());
        EXPECT(0xb43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb43c));
        EXPECT(0x0, gbc.readMem(0xb43d));
        EXPECT(0xd7, gbc.readMem(0xb43e));
        // 11 0042
        gbc.setState(0xb616, 0x177c, 0x8940, 0xe958, 0xaef7, 0xd0b7, 0x0, 0x1);
        gbc.writeMem(0xb616, { 0x11, 0x61, 0x8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x177c, gbc.sp());
        EXPECT(0xb619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb616));
        EXPECT(0x61, gbc.readMem(0xb617));
        EXPECT(0x8, gbc.readMem(0xb618));
        // 11 0043
        gbc.setState(0x68f8, 0x6ec5, 0xf8b0, 0x632a, 0x7552, 0x5035, 0x1, 0x1);
        gbc.writeMem(0x68f8, { 0x11, 0x81, 0x3b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6ec5, gbc.sp());
        EXPECT(0x68fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0044
        gbc.setState(0x43ec, 0x7b6a, 0x4350, 0xcf5e, 0xb671, 0x130d, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0x11, 0x9c, 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7b6a, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0045
        gbc.setState(0xacc2, 0xdcb7, 0xd240, 0x68d0, 0xb68e, 0xdf46, 0x0, 0x1);
        gbc.writeMem(0xacc2, { 0x11, 0x7f, 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xacc2));
        EXPECT(0x7f, gbc.readMem(0xacc3));
        EXPECT(0x47, gbc.readMem(0xacc4));
        // 11 0046
        gbc.setState(0x4796, 0x953, 0xc6f0, 0x16cc, 0x506, 0xa73f, 0x0, 0x0);
        gbc.writeMem(0x4796, { 0x11, 0x14, 0x81 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0048
        gbc.setState(0x3b86, 0xda14, 0x6c60, 0xff6d, 0x8d09, 0xed3d, 0x0, 0x0);
        gbc.writeMem(0x3b86, { 0x11, 0x75, 0xae });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 004A
        gbc.setState(0xdb05, 0xe89f, 0xdbb0, 0xe68f, 0x2d49, 0xbf7c, 0x0, 0x1);
        gbc.writeMem(0xdb05, { 0x11, 0x89, 0xbc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe89f, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdb05));
        EXPECT(0x89, gbc.readMem(0xdb06));
        EXPECT(0xbc, gbc.readMem(0xdb07));
        // 11 004B
        gbc.setState(0x83ec, 0x7023, 0x94a0, 0xd233, 0x83e5, 0x752c, 0x1, 0x0);
        gbc.writeMem(0x83ec, { 0x11, 0x18, 0xe7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0x83ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x83ec));
        EXPECT(0x18, gbc.readMem(0x83ed));
        EXPECT(0xe7, gbc.readMem(0x83ee));
        // 11 004C
        gbc.setState(0x141a, 0x2e82, 0xb1a0, 0x8c83, 0x829d, 0x4d6a, 0x0, 0x0);
        gbc.writeMem(0x141a, { 0x11, 0xc4, 0xdd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 004D
        gbc.setState(0x8d98, 0xc2a7, 0xe2f0, 0x63cd, 0xde7d, 0x5ed3, 0x1, 0x0);
        gbc.writeMem(0x8d98, { 0x11, 0x59, 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc2a7, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d98));
        EXPECT(0x59, gbc.readMem(0x8d99));
        EXPECT(0x76, gbc.readMem(0x8d9a));
        // 11 004E
        gbc.setState(0x9846, 0xe1d5, 0xfe80, 0x4f9b, 0x2077, 0xb364, 0x0, 0x1);
        gbc.writeMem(0x9846, { 0x11, 0xb2, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe1d5, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9846));
        EXPECT(0xb2, gbc.readMem(0x9847));
        EXPECT(0xd0, gbc.readMem(0x9848));
        // 11 004F
        gbc.setState(0x9608, 0x6ac9, 0xa1f0, 0x1cee, 0xf08d, 0x3fbd, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0x11, 0xb8, 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x960b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9608));
        EXPECT(0xb8, gbc.readMem(0x9609));
        EXPECT(0x4c, gbc.readMem(0x960a));
        // 11 0051
        gbc.setState(0x10aa, 0x3093, 0x61e0, 0xab5d, 0x2d54, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x10aa, { 0x11, 0x82, 0x21 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3093, gbc.sp());
        EXPECT(0x10ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0052
        gbc.setState(0x5e7e, 0x4432, 0xcc80, 0x26b5, 0xd2fe, 0xf5c4, 0x0, 0x0);
        gbc.writeMem(0x5e7e, { 0x11, 0xa, 0xa8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4432, gbc.sp());
        EXPECT(0x5e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0053
        gbc.setState(0xee44, 0xfb54, 0xa820, 0x72d, 0xbef0, 0xd142, 0x1, 0x0);
        gbc.writeMem(0xee44, { 0x11, 0x73, 0x69 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfb54, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xee44));
        EXPECT(0x73, gbc.readMem(0xee45));
        EXPECT(0x69, gbc.readMem(0xee46));
        // 11 0054
        gbc.setState(0x7eef, 0x1b4, 0x5e20, 0xe04b, 0x261, 0x97d6, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0x11, 0x83, 0xb7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0055
        gbc.setState(0x7399, 0x2bb3, 0x2b50, 0xecf5, 0xe15c, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x7399, { 0x11, 0x8f, 0xae });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0056
        gbc.setState(0xa5c5, 0x6d68, 0xdd80, 0xc068, 0x873d, 0x191d, 0x0, 0x0);
        gbc.writeMem(0xa5c5, { 0x11, 0xd8, 0xda });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6d68, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa5c5));
        EXPECT(0xd8, gbc.readMem(0xa5c6));
        EXPECT(0xda, gbc.readMem(0xa5c7));
        // 11 0057
        gbc.setState(0x543a, 0x9edd, 0xb390, 0x6207, 0x3995, 0x1e0a, 0x1, 0x0);
        gbc.writeMem(0x543a, { 0x11, 0xbc, 0xc5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0x543d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0058
        gbc.setState(0x2ecb, 0x8339, 0x31d0, 0xc92b, 0x8e7, 0x58dd, 0x1, 0x1);
        gbc.writeMem(0x2ecb, { 0x11, 0x7c, 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8339, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0059
        gbc.setState(0xb661, 0xec6f, 0x8300, 0xf4a2, 0x23, 0x583f, 0x0, 0x0);
        gbc.writeMem(0xb661, { 0x11, 0x55, 0xd3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xec6f, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb661));
        EXPECT(0x55, gbc.readMem(0xb662));
        EXPECT(0xd3, gbc.readMem(0xb663));
        // 11 005A
        gbc.setState(0x663d, 0x3a1e, 0x2560, 0x7689, 0x65a4, 0xf4fd, 0x0, 0x0);
        gbc.writeMem(0x663d, { 0x11, 0x18, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3a1e, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 005B
        gbc.setState(0x789a, 0x1429, 0xd0c0, 0xa5c6, 0x9bd6, 0x6897, 0x0, 0x1);
        gbc.writeMem(0x789a, { 0x11, 0xca, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 005C
        gbc.setState(0xc6cf, 0x9a4c, 0x180, 0xe559, 0x2ef7, 0x608c, 0x0, 0x1);
        gbc.writeMem(0xc6cf, { 0x11, 0x6d, 0x5e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc6cf));
        EXPECT(0x6d, gbc.readMem(0xc6d0));
        EXPECT(0x5e, gbc.readMem(0xc6d1));
        // 11 005D
        gbc.setState(0x2e37, 0xabe1, 0x9250, 0xd2d3, 0xe65f, 0x422a, 0x0, 0x1);
        gbc.writeMem(0x2e37, { 0x11, 0xcd, 0x96 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xabe1, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 005E
        gbc.setState(0x7f78, 0xfdad, 0x0, 0x9307, 0x8d60, 0x6a38, 0x0, 0x1);
        gbc.writeMem(0x7f78, { 0x11, 0x2f, 0x4e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfdad, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 005F
        gbc.setState(0x3fa4, 0x92e3, 0xdf70, 0xa9bb, 0x5732, 0x5135, 0x1, 0x1);
        gbc.writeMem(0x3fa4, { 0x11, 0xb6, 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0x3fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0060
        gbc.setState(0x3f1, 0xcfc7, 0x35d0, 0x94e, 0x76b3, 0xa3a0, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0x11, 0x77, 0x18 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0x3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0061
        gbc.setState(0x56fc, 0x44d9, 0x5500, 0x63ec, 0x82ee, 0x8760, 0x1, 0x0);
        gbc.writeMem(0x56fc, { 0x11, 0x7, 0xc6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x44d9, gbc.sp());
        EXPECT(0x56ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0062
        gbc.setState(0x8dba, 0x1983, 0xe650, 0x4dd2, 0x597d, 0x6f25, 0x1, 0x1);
        gbc.writeMem(0x8dba, { 0x11, 0x5, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1983, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8dba));
        EXPECT(0x5, gbc.readMem(0x8dbb));
        EXPECT(0x43, gbc.readMem(0x8dbc));
        // 11 0063
        gbc.setState(0xa264, 0x7409, 0x7970, 0x44f, 0xd369, 0x95ca, 0x0, 0x1);
        gbc.writeMem(0xa264, { 0x11, 0xb5, 0x59 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0xa267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa264));
        EXPECT(0xb5, gbc.readMem(0xa265));
        EXPECT(0x59, gbc.readMem(0xa266));
        // 11 0064
        gbc.setState(0xb5cc, 0x3f9a, 0xe770, 0x661b, 0x9c79, 0x6185, 0x1, 0x0);
        gbc.writeMem(0xb5cc, { 0x11, 0xbb, 0xf6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3f9a, gbc.sp());
        EXPECT(0xb5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb5cc));
        EXPECT(0xbb, gbc.readMem(0xb5cd));
        EXPECT(0xf6, gbc.readMem(0xb5ce));
        // 11 0065
        gbc.setState(0x9d79, 0xb9d1, 0x4730, 0xf69b, 0xea19, 0xe7f7, 0x1, 0x1);
        gbc.writeMem(0x9d79, { 0x11, 0x6d, 0x80 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb9d1, gbc.sp());
        EXPECT(0x9d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9d79));
        EXPECT(0x6d, gbc.readMem(0x9d7a));
        EXPECT(0x80, gbc.readMem(0x9d7b));
        // 11 0066
        gbc.setState(0xb71, 0x331e, 0x54c0, 0xc404, 0x2f07, 0x6fb5, 0x1, 0x1);
        gbc.writeMem(0xb71, { 0x11, 0xbc, 0x83 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x331e, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0067
        gbc.setState(0xcb36, 0xa692, 0x5ec0, 0x2cc4, 0x4977, 0x7bc8, 0x0, 0x1);
        gbc.writeMem(0xcb36, { 0x11, 0xa2, 0xf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa692, gbc.sp());
        EXPECT(0xcb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcb36));
        EXPECT(0xa2, gbc.readMem(0xcb37));
        EXPECT(0xf, gbc.readMem(0xcb38));
        // 11 0068
        gbc.setState(0xc308, 0x92a8, 0x2e70, 0xed4e, 0x60be, 0xf43d, 0x0, 0x1);
        gbc.writeMem(0xc308, { 0x11, 0x7d, 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc308));
        EXPECT(0x7d, gbc.readMem(0xc309));
        EXPECT(0x10, gbc.readMem(0xc30a));
        // 11 0069
        gbc.setState(0x5ead, 0x6c66, 0x8360, 0x4558, 0x9e60, 0xdbb6, 0x0, 0x0);
        gbc.writeMem(0x5ead, { 0x11, 0x1b, 0x8e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0x5eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 006A
        gbc.setState(0xccaa, 0x91fb, 0xebd0, 0x942, 0xa4a6, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0xccaa, { 0x11, 0x73, 0x6b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x91fb, gbc.sp());
        EXPECT(0xccad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xccaa));
        EXPECT(0x73, gbc.readMem(0xccab));
        EXPECT(0x6b, gbc.readMem(0xccac));
        // 11 006B
        gbc.setState(0xab05, 0x9efb, 0x78b0, 0x4cdb, 0x3127, 0x99e0, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0x11, 0x58, 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9efb, gbc.sp());
        EXPECT(0xab08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xab05));
        EXPECT(0x58, gbc.readMem(0xab06));
        EXPECT(0x7, gbc.readMem(0xab07));
        // 11 006C
        gbc.setState(0x572d, 0xb1ed, 0x1910, 0x9dcf, 0x95e3, 0x1996, 0x0, 0x1);
        gbc.writeMem(0x572d, { 0x11, 0xf7, 0x79 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 006D
        gbc.setState(0x9da0, 0x1638, 0xcba0, 0x7057, 0x166a, 0x13e3, 0x0, 0x0);
        gbc.writeMem(0x9da0, { 0x11, 0x57, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1638, gbc.sp());
        EXPECT(0x9da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9da0));
        EXPECT(0x57, gbc.readMem(0x9da1));
        EXPECT(0x9, gbc.readMem(0x9da2));
        // 11 006E
        gbc.setState(0x943f, 0x8c94, 0x6f00, 0xa5da, 0x137a, 0x3baf, 0x1, 0x1);
        gbc.writeMem(0x943f, { 0x11, 0x4f, 0xf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c94, gbc.sp());
        EXPECT(0x9442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x943f));
        EXPECT(0x4f, gbc.readMem(0x9440));
        EXPECT(0xf, gbc.readMem(0x9441));
        // 11 006F
        gbc.setState(0x872a, 0x2e79, 0x3de0, 0x67c9, 0xe494, 0xa75b, 0x1, 0x0);
        gbc.writeMem(0x872a, { 0x11, 0x79, 0xec });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2e79, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x872a));
        EXPECT(0x79, gbc.readMem(0x872b));
        EXPECT(0xec, gbc.readMem(0x872c));
        // 11 0070
        gbc.setState(0xcca8, 0x5798, 0x4d40, 0xa716, 0x7420, 0x99e9, 0x0, 0x0);
        gbc.writeMem(0xcca8, { 0x11, 0xa9, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5798, gbc.sp());
        EXPECT(0xccab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcca8));
        EXPECT(0xa9, gbc.readMem(0xcca9));
        EXPECT(0x1c, gbc.readMem(0xccaa));
        // 11 0071
        gbc.setState(0x8a0f, 0xa503, 0x3250, 0x1e36, 0x329e, 0xf745, 0x1, 0x0);
        gbc.writeMem(0x8a0f, { 0x11, 0x75, 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8a0f));
        EXPECT(0x75, gbc.readMem(0x8a10));
        EXPECT(0x5d, gbc.readMem(0x8a11));
        // 11 0072
        gbc.setState(0x26c9, 0x249d, 0xb840, 0x10f6, 0x9c60, 0xfcb4, 0x1, 0x0);
        gbc.writeMem(0x26c9, { 0x11, 0x60, 0x81 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x249d, gbc.sp());
        EXPECT(0x26cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0073
        gbc.setState(0x23a0, 0x2fac, 0x36a0, 0x602a, 0xb9ed, 0x5c19, 0x0, 0x0);
        gbc.writeMem(0x23a0, { 0x11, 0x71, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2fac, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0074
        gbc.setState(0xdc3, 0x45f8, 0x2420, 0x502e, 0x3198, 0xf30b, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0x11, 0xea, 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0xdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0075
        gbc.setState(0xde34, 0xd105, 0x5e90, 0xe71f, 0x4ce9, 0x9703, 0x1, 0x1);
        gbc.writeMem(0xde34, { 0x11, 0x83, 0x22 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd105, gbc.sp());
        EXPECT(0xde37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xde34));
        EXPECT(0x83, gbc.readMem(0xde35));
        EXPECT(0x22, gbc.readMem(0xde36));
        // 11 0076
        gbc.setState(0x56be, 0x4eb4, 0x6a80, 0x982c, 0x4ef1, 0x9dd5, 0x1, 0x0);
        gbc.writeMem(0x56be, { 0x11, 0xc9, 0x24 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0077
        gbc.setState(0x1961, 0x9bb7, 0x6e10, 0xe8ed, 0x218b, 0x3e85, 0x1, 0x1);
        gbc.writeMem(0x1961, { 0x11, 0x19, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9bb7, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0078
        gbc.setState(0xc8b8, 0xcf3c, 0x70b0, 0xecb7, 0xb504, 0x6793, 0x1, 0x1);
        gbc.writeMem(0xc8b8, { 0x11, 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc8b8));
        EXPECT(0xd6, gbc.readMem(0xc8b9));
        EXPECT(0xa1, gbc.readMem(0xc8ba));
        // 11 0079
        gbc.setState(0x8303, 0x706b, 0x5650, 0xdde, 0xfee, 0x58f, 0x1, 0x1);
        gbc.writeMem(0x8303, { 0x11, 0xaf, 0x96 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x706b, gbc.sp());
        EXPECT(0x8306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8303));
        EXPECT(0xaf, gbc.readMem(0x8304));
        EXPECT(0x96, gbc.readMem(0x8305));
        // 11 007A
        gbc.setState(0x9be5, 0xd9b7, 0xb830, 0xc2c9, 0x7742, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x9be5, { 0x11, 0x79, 0xa7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0x9be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9be5));
        EXPECT(0x79, gbc.readMem(0x9be6));
        EXPECT(0xa7, gbc.readMem(0x9be7));
        // 11 007C
        gbc.setState(0x4fdf, 0x2252, 0xd7b0, 0x7756, 0x4e16, 0xdb28, 0x0, 0x1);
        gbc.writeMem(0x4fdf, { 0x11, 0x22, 0x46 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2252, gbc.sp());
        EXPECT(0x4fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 007D
        gbc.setState(0x87c2, 0x6d03, 0xcf70, 0x553b, 0x292c, 0xe290, 0x1, 0x0);
        gbc.writeMem(0x87c2, { 0x11, 0x9c, 0x58 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x87c2));
        EXPECT(0x9c, gbc.readMem(0x87c3));
        EXPECT(0x58, gbc.readMem(0x87c4));
        // 11 007E
        gbc.setState(0x6df1, 0x3828, 0x1930, 0xab5e, 0xe956, 0x2674, 0x0, 0x0);
        gbc.writeMem(0x6df1, { 0x11, 0x79, 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 007F
        gbc.setState(0x15b0, 0xd352, 0x5a60, 0xba2f, 0xba7, 0xdcdb, 0x0, 0x0);
        gbc.writeMem(0x15b0, { 0x11, 0xa7, 0x5d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0080
        gbc.setState(0xc093, 0x7d5d, 0x2030, 0x667f, 0x78dd, 0xb4ab, 0x0, 0x1);
        gbc.writeMem(0xc093, { 0x11, 0x20, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xc096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc093));
        EXPECT(0x20, gbc.readMem(0xc094));
        EXPECT(0x4a, gbc.readMem(0xc095));
        // 11 0082
        gbc.setState(0x92ee, 0xe7f7, 0xca90, 0x5e9c, 0x192, 0xc17c, 0x1, 0x1);
        gbc.writeMem(0x92ee, { 0x11, 0xd3, 0x7f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe7f7, gbc.sp());
        EXPECT(0x92f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x92ee));
        EXPECT(0xd3, gbc.readMem(0x92ef));
        EXPECT(0x7f, gbc.readMem(0x92f0));
        // 11 0083
        gbc.setState(0x26d8, 0x7b4d, 0x2910, 0xfdc, 0x8233, 0xe9bb, 0x0, 0x0);
        gbc.writeMem(0x26d8, { 0x11, 0x39, 0x5c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7b4d, gbc.sp());
        EXPECT(0x26db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0084
        gbc.setState(0x116e, 0xdeb1, 0x6750, 0x5b1a, 0xa018, 0x9eb9, 0x1, 0x0);
        gbc.writeMem(0x116e, { 0x11, 0x2b, 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdeb1, gbc.sp());
        EXPECT(0x1171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0085
        gbc.setState(0xc682, 0x7b9, 0x4a30, 0x3526, 0x69a2, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0xc682, { 0x11, 0x9c, 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7b9, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc682));
        EXPECT(0x9c, gbc.readMem(0xc683));
        EXPECT(0xc1, gbc.readMem(0xc684));
        // 11 0086
        gbc.setState(0x5607, 0x227c, 0x8720, 0xe114, 0x52e0, 0x934a, 0x0, 0x1);
        gbc.writeMem(0x5607, { 0x11, 0xc8, 0x4a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x560a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0087
        gbc.setState(0x8219, 0x738b, 0xe660, 0x59a0, 0x8fee, 0x675, 0x1, 0x1);
        gbc.writeMem(0x8219, { 0x11, 0x7a, 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x738b, gbc.sp());
        EXPECT(0x821c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8219));
        EXPECT(0x7a, gbc.readMem(0x821a));
        EXPECT(0xac, gbc.readMem(0x821b));
        // 11 0088
        gbc.setState(0xa475, 0xc20e, 0x5070, 0x1912, 0x2319, 0x8774, 0x0, 0x1);
        gbc.writeMem(0xa475, { 0x11, 0x19, 0xdc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc20e, gbc.sp());
        EXPECT(0xa478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa475));
        EXPECT(0x19, gbc.readMem(0xa476));
        EXPECT(0xdc, gbc.readMem(0xa477));
        // 11 0089
        gbc.setState(0xbf2b, 0xcd0, 0x8cf0, 0xc123, 0x69ce, 0x2a23, 0x1, 0x0);
        gbc.writeMem(0xbf2b, { 0x11, 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcd0, gbc.sp());
        EXPECT(0xbf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbf2b));
        EXPECT(0x2e, gbc.readMem(0xbf2c));
        EXPECT(0xb1, gbc.readMem(0xbf2d));
        // 11 008A
        gbc.setState(0xe0fa, 0xda2b, 0xc7b0, 0x99be, 0x159e, 0x2373, 0x0, 0x0);
        gbc.writeMem(0xe0fa, { 0x11, 0xb8, 0xd3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xda2b, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe0fa));
        EXPECT(0xb8, gbc.readMem(0xe0fb));
        EXPECT(0xd3, gbc.readMem(0xe0fc));
        // 11 008B
        gbc.setState(0xd945, 0x67fb, 0x9cf0, 0x7afd, 0x3561, 0x7df7, 0x0, 0x0);
        gbc.writeMem(0xd945, { 0x11, 0x55, 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x67fb, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd945));
        EXPECT(0x55, gbc.readMem(0xd946));
        EXPECT(0x5, gbc.readMem(0xd947));
        // 11 008E
        gbc.setState(0x9c95, 0xd272, 0x6500, 0xb0eb, 0x117f, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0x9c95, { 0x11, 0xfd, 0xa2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9c95));
        EXPECT(0xfd, gbc.readMem(0x9c96));
        EXPECT(0xa2, gbc.readMem(0x9c97));
        // 11 008F
        gbc.setState(0xb993, 0xbc23, 0x6090, 0xd6e2, 0x3bc9, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0xb993, { 0x11, 0x32, 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb993));
        EXPECT(0x32, gbc.readMem(0xb994));
        EXPECT(0xd0, gbc.readMem(0xb995));
        // 11 0090
        gbc.setState(0xbb4f, 0x9bc6, 0x5500, 0x9ec1, 0x1b0, 0xdf9e, 0x1, 0x1);
        gbc.writeMem(0xbb4f, { 0x11, 0x69, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0xbb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb4f));
        EXPECT(0x69, gbc.readMem(0xbb50));
        EXPECT(0x47, gbc.readMem(0xbb51));
        // 11 0091
        gbc.setState(0x1f84, 0xdccb, 0x5570, 0xb83f, 0xf515, 0xa3b4, 0x0, 0x0);
        gbc.writeMem(0x1f84, { 0x11, 0xf9, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0x1f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0092
        gbc.setState(0xc473, 0xdf55, 0x2310, 0x628a, 0x1346, 0x50fc, 0x0, 0x1);
        gbc.writeMem(0xc473, { 0x11, 0xcc, 0xcb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc473));
        EXPECT(0xcc, gbc.readMem(0xc474));
        EXPECT(0xcb, gbc.readMem(0xc475));
        // 11 0094
        gbc.setState(0x6386, 0xec8b, 0x5b50, 0x60ad, 0x6e2f, 0x2ef2, 0x0, 0x0);
        gbc.writeMem(0x6386, { 0x11, 0xf2, 0x30 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0095
        gbc.setState(0x9cbc, 0xd281, 0xf750, 0xb7d, 0x3bfe, 0xc11e, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0x11, 0x4c, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd281, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9cbc));
        EXPECT(0x4c, gbc.readMem(0x9cbd));
        EXPECT(0xa0, gbc.readMem(0x9cbe));
        // 11 0096
        gbc.setState(0xb8f7, 0xbdb5, 0x6650, 0x2ac3, 0x35bc, 0x3109, 0x0, 0x0);
        gbc.writeMem(0xb8f7, { 0x11, 0x98, 0xa6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0xb8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb8f7));
        EXPECT(0x98, gbc.readMem(0xb8f8));
        EXPECT(0xa6, gbc.readMem(0xb8f9));
        // 11 0097
        gbc.setState(0xe8ca, 0x628d, 0x1980, 0xf1c3, 0xbbfe, 0x9765, 0x1, 0x0);
        gbc.writeMem(0xe8ca, { 0x11, 0xad, 0x30 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe8ca));
        EXPECT(0xad, gbc.readMem(0xe8cb));
        EXPECT(0x30, gbc.readMem(0xe8cc));
        // 11 0098
        gbc.setState(0x7e1d, 0x31d0, 0x5ec0, 0x3ead, 0x3c3c, 0x4036, 0x0, 0x1);
        gbc.writeMem(0x7e1d, { 0x11, 0x90, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x31d0, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0099
        gbc.setState(0x8b5d, 0xb75c, 0xcdb0, 0x3c6, 0x698a, 0x64bf, 0x1, 0x1);
        gbc.writeMem(0x8b5d, { 0x11, 0x60, 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb75c, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8b5d));
        EXPECT(0x60, gbc.readMem(0x8b5e));
        EXPECT(0xc5, gbc.readMem(0x8b5f));
        // 11 009A
        gbc.setState(0x14a4, 0x89d2, 0x5de0, 0x11b7, 0x1d71, 0x226b, 0x1, 0x1);
        gbc.writeMem(0x14a4, { 0x11, 0xfe, 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x14a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 009B
        gbc.setState(0x5fbf, 0x3fff, 0x810, 0xe030, 0x303f, 0x393b, 0x0, 0x0);
        gbc.writeMem(0x5fbf, { 0x11, 0xf8, 0xfa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3fff, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 009C
        gbc.setState(0xcc53, 0xb3d, 0xa2e0, 0x3c14, 0x6b33, 0x9b0a, 0x0, 0x0);
        gbc.writeMem(0xcc53, { 0x11, 0x47, 0x4f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb3d, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcc53));
        EXPECT(0x47, gbc.readMem(0xcc54));
        EXPECT(0x4f, gbc.readMem(0xcc55));
        // 11 009D
        gbc.setState(0xb905, 0xcc34, 0x3600, 0xd8b, 0xfb6d, 0x18a, 0x0, 0x1);
        gbc.writeMem(0xb905, { 0x11, 0x42, 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcc34, gbc.sp());
        EXPECT(0xb908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb905));
        EXPECT(0x42, gbc.readMem(0xb906));
        EXPECT(0x2c, gbc.readMem(0xb907));
        // 11 009E
        gbc.setState(0x82a4, 0x6a14, 0x1f20, 0x5a9b, 0x4643, 0xa450, 0x0, 0x1);
        gbc.writeMem(0x82a4, { 0x11, 0x10, 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x82a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x82a4));
        EXPECT(0x10, gbc.readMem(0x82a5));
        EXPECT(0xac, gbc.readMem(0x82a6));
        // 11 009F
        gbc.setState(0x92a1, 0x64d2, 0x6710, 0x9509, 0xc6b0, 0xc836, 0x1, 0x0);
        gbc.writeMem(0x92a1, { 0x11, 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x64d2, gbc.sp());
        EXPECT(0x92a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x92a1));
        EXPECT(0xcb, gbc.readMem(0x92a2));
        EXPECT(0xc0, gbc.readMem(0x92a3));
        // 11 00A0
        gbc.setState(0xef32, 0x9c9e, 0x7db0, 0xfccb, 0x9763, 0x854d, 0x0, 0x1);
        gbc.writeMem(0xef32, { 0x11, 0x52, 0x46 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0xef35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xef32));
        EXPECT(0x52, gbc.readMem(0xef33));
        EXPECT(0x46, gbc.readMem(0xef34));
        // 11 00A1
        gbc.setState(0x77b6, 0x84a4, 0x7be0, 0x36d, 0xb98b, 0x9998, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0x11, 0xed, 0x75 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x84a4, gbc.sp());
        EXPECT(0x77b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00A2
        gbc.setState(0x89de, 0xaae5, 0x2920, 0x3457, 0x82ed, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0x89de, { 0x11, 0xcd, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaae5, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x89de));
        EXPECT(0xcd, gbc.readMem(0x89df));
        EXPECT(0x7d, gbc.readMem(0x89e0));
        // 11 00A3
        gbc.setState(0x8826, 0x1019, 0x2b80, 0xe412, 0xba7d, 0x552a, 0x0, 0x1);
        gbc.writeMem(0x8826, { 0x11, 0x82, 0x6f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1019, gbc.sp());
        EXPECT(0x8829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8826));
        EXPECT(0x82, gbc.readMem(0x8827));
        EXPECT(0x6f, gbc.readMem(0x8828));
        // 11 00A4
        gbc.setState(0xae42, 0x8155, 0x3a40, 0x2b7b, 0xbd7b, 0x48b5, 0x1, 0x0);
        gbc.writeMem(0xae42, { 0x11, 0x1a, 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xae42));
        EXPECT(0x1a, gbc.readMem(0xae43));
        EXPECT(0x56, gbc.readMem(0xae44));
        // 11 00A5
        gbc.setState(0xaea, 0x5cb3, 0x3670, 0x91cc, 0xacc5, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0xaea, { 0x11, 0x25, 0x70 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0xaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00A6
        gbc.setState(0x70da, 0x474c, 0x1170, 0x21c, 0x463c, 0x7297, 0x1, 0x1);
        gbc.writeMem(0x70da, { 0x11, 0x85, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0x70dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00A7
        gbc.setState(0x36af, 0xe3c3, 0xeb40, 0x7611, 0xb5d8, 0x60a, 0x0, 0x1);
        gbc.writeMem(0x36af, { 0x11, 0x33, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe3c3, gbc.sp());
        EXPECT(0x36b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00A8
        gbc.setState(0x4eee, 0x2975, 0x9b80, 0x7666, 0x5665, 0x7508, 0x1, 0x0);
        gbc.writeMem(0x4eee, { 0x11, 0x19, 0x45 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2975, gbc.sp());
        EXPECT(0x4ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00A9
        gbc.setState(0x20b1, 0xc07, 0xd010, 0xfa5b, 0x4189, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x20b1, { 0x11, 0xe, 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc07, gbc.sp());
        EXPECT(0x20b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00AA
        gbc.setState(0x9005, 0xf8d8, 0xc230, 0xd61e, 0x9d11, 0x2106, 0x1, 0x1);
        gbc.writeMem(0x9005, { 0x11, 0xed, 0xc0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0x9008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9005));
        EXPECT(0xed, gbc.readMem(0x9006));
        EXPECT(0xc0, gbc.readMem(0x9007));
        // 11 00AB
        gbc.setState(0x8f4e, 0x2961, 0xeb80, 0x5bf3, 0xbd4f, 0x7bcc, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0x11, 0x19, 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x8f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8f4e));
        EXPECT(0x19, gbc.readMem(0x8f4f));
        EXPECT(0x1a, gbc.readMem(0x8f50));
        // 11 00AD
        gbc.setState(0xd1e0, 0xae27, 0xa880, 0x8186, 0xf874, 0x59cc, 0x1, 0x1);
        gbc.writeMem(0xd1e0, { 0x11, 0xb3, 0xa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0xd1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd1e0));
        EXPECT(0xb3, gbc.readMem(0xd1e1));
        EXPECT(0xa, gbc.readMem(0xd1e2));
        // 11 00AE
        gbc.setState(0xe1aa, 0x263a, 0x8320, 0x9fea, 0x812c, 0x11eb, 0x1, 0x1);
        gbc.writeMem(0xe1aa, { 0x11, 0x5e, 0x8b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe1aa));
        EXPECT(0x5e, gbc.readMem(0xe1ab));
        EXPECT(0x8b, gbc.readMem(0xe1ac));
        // 11 00AF
        gbc.setState(0x4dc9, 0xb867, 0x2d60, 0xe76, 0xa67a, 0xa205, 0x0, 0x0);
        gbc.writeMem(0x4dc9, { 0x11, 0x57, 0xce });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb867, gbc.sp());
        EXPECT(0x4dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00B0
        gbc.setState(0xbc89, 0x60a9, 0xca60, 0xcce2, 0xe22c, 0x272d, 0x1, 0x0);
        gbc.writeMem(0xbc89, { 0x11, 0xd2, 0xf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbc89));
        EXPECT(0xd2, gbc.readMem(0xbc8a));
        EXPECT(0xf, gbc.readMem(0xbc8b));
        // 11 00B1
        gbc.setState(0x237a, 0x160e, 0x5f70, 0x1056, 0xc86b, 0xa12a, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0x11, 0x1f, 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x160e, gbc.sp());
        EXPECT(0x237d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00B2
        gbc.setState(0xefb1, 0x5028, 0x6630, 0x33bc, 0xc09b, 0x4dfc, 0x1, 0x1);
        gbc.writeMem(0xefb1, { 0x11, 0x33, 0x83 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5028, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xefb1));
        EXPECT(0x33, gbc.readMem(0xefb2));
        EXPECT(0x83, gbc.readMem(0xefb3));
        // 11 00B3
        gbc.setState(0x8a11, 0xcbf1, 0x8900, 0x3ef0, 0xebc, 0x1c0b, 0x1, 0x1);
        gbc.writeMem(0x8a11, { 0x11, 0xf, 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0x8a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8a11));
        EXPECT(0xf, gbc.readMem(0x8a12));
        EXPECT(0x57, gbc.readMem(0x8a13));
        // 11 00B6
        gbc.setState(0xae7, 0xcce1, 0xc7e0, 0xccab, 0xd29b, 0xb70a, 0x0, 0x0);
        gbc.writeMem(0xae7, { 0x11, 0xdb, 0xfc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcce1, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00B7
        gbc.setState(0x2071, 0x33ce, 0x5ef0, 0x4e33, 0x25f0, 0xd06d, 0x1, 0x0);
        gbc.writeMem(0x2071, { 0x11, 0x3d, 0x8b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x33ce, gbc.sp());
        EXPECT(0x2074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00B8
        gbc.setState(0x4380, 0xe478, 0xb1c0, 0xafae, 0x9b4e, 0x8c1f, 0x1, 0x0);
        gbc.writeMem(0x4380, { 0x11, 0x75, 0x68 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe478, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00B9
        gbc.setState(0x554f, 0x3a1b, 0x36c0, 0xe3f3, 0xe350, 0x5e17, 0x1, 0x1);
        gbc.writeMem(0x554f, { 0x11, 0xa5, 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3a1b, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00BA
        gbc.setState(0x11ac, 0xc803, 0xecd0, 0x6d94, 0xc5cd, 0x4323, 0x1, 0x0);
        gbc.writeMem(0x11ac, { 0x11, 0xc7, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc803, gbc.sp());
        EXPECT(0x11af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00BB
        gbc.setState(0x455d, 0x107e, 0x7a50, 0xaf11, 0xbf8, 0x38ac, 0x1, 0x1);
        gbc.writeMem(0x455d, { 0x11, 0x32, 0xab });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00BC
        gbc.setState(0xaf7d, 0xf87c, 0x2c70, 0xe8a9, 0x2eca, 0x4f5c, 0x1, 0x0);
        gbc.writeMem(0xaf7d, { 0x11, 0x25, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf87c, gbc.sp());
        EXPECT(0xaf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaf7d));
        EXPECT(0x25, gbc.readMem(0xaf7e));
        EXPECT(0xf1, gbc.readMem(0xaf7f));
        // 11 00BD
        gbc.setState(0xe31c, 0x4f4f, 0x59f0, 0x978d, 0x3619, 0xd659, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0x11, 0x45, 0xf4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe31c));
        EXPECT(0x45, gbc.readMem(0xe31d));
        EXPECT(0xf4, gbc.readMem(0xe31e));
        // 11 00BE
        gbc.setState(0xe6ad, 0x23bb, 0x78f0, 0x5488, 0x9819, 0x6161, 0x1, 0x0);
        gbc.writeMem(0xe6ad, { 0x11, 0x5d, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x23bb, gbc.sp());
        EXPECT(0xe6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe6ad));
        EXPECT(0x5d, gbc.readMem(0xe6ae));
        EXPECT(0xd, gbc.readMem(0xe6af));
        // 11 00BF
        gbc.setState(0x1e7d, 0xa254, 0x2580, 0x500e, 0x95f7, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x1e7d, { 0x11, 0x6, 0x7b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00C0
        gbc.setState(0x9a10, 0x220d, 0xa3a0, 0x26b4, 0x5e50, 0xd27b, 0x0, 0x1);
        gbc.writeMem(0x9a10, { 0x11, 0x27, 0x6f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x220d, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9a10));
        EXPECT(0x27, gbc.readMem(0x9a11));
        EXPECT(0x6f, gbc.readMem(0x9a12));
        // 11 00C1
        gbc.setState(0x7387, 0x2ed0, 0xd940, 0x92ad, 0xb51b, 0x237b, 0x1, 0x0);
        gbc.writeMem(0x7387, { 0x11, 0x12, 0x4d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00C2
        gbc.setState(0xea14, 0x7a46, 0xa090, 0xebc2, 0xf2a1, 0xbb76, 0x1, 0x1);
        gbc.writeMem(0xea14, { 0x11, 0x96, 0x2a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7a46, gbc.sp());
        EXPECT(0xea17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xea14));
        EXPECT(0x96, gbc.readMem(0xea15));
        EXPECT(0x2a, gbc.readMem(0xea16));
        // 11 00C3
        gbc.setState(0xb246, 0xcee8, 0x92f0, 0xa8ed, 0x9a1f, 0x9796, 0x1, 0x0);
        gbc.writeMem(0xb246, { 0x11, 0xef, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcee8, gbc.sp());
        EXPECT(0xb249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb246));
        EXPECT(0xef, gbc.readMem(0xb247));
        EXPECT(0xb2, gbc.readMem(0xb248));
        // 11 00C4
        gbc.setState(0x8d8f, 0xd7cc, 0x6f30, 0xb96a, 0x428e, 0xad55, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x11, 0xd7, 0x21 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd7cc, gbc.sp());
        EXPECT(0x8d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d8f));
        EXPECT(0xd7, gbc.readMem(0x8d90));
        EXPECT(0x21, gbc.readMem(0x8d91));
        // 11 00C5
        gbc.setState(0x5785, 0x76ae, 0x8c70, 0xd0e4, 0x919b, 0x61c, 0x0, 0x1);
        gbc.writeMem(0x5785, { 0x11, 0x5c, 0xc3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00C6
        gbc.setState(0xc4e1, 0x4f7d, 0x95b0, 0x8c63, 0xdc98, 0x4884, 0x1, 0x0);
        gbc.writeMem(0xc4e1, { 0x11, 0x1d, 0x52 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0xc4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc4e1));
        EXPECT(0x1d, gbc.readMem(0xc4e2));
        EXPECT(0x52, gbc.readMem(0xc4e3));
        // 11 00C7
        gbc.setState(0x5119, 0xd077, 0xdcc0, 0x8283, 0xedb3, 0x2f3f, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0x11, 0xb1, 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x511c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00C8
        gbc.setState(0xb4ee, 0x4897, 0x8d60, 0x2422, 0x70b0, 0x1e71, 0x0, 0x1);
        gbc.writeMem(0xb4ee, { 0x11, 0x9b, 0xb9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0xb4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb4ee));
        EXPECT(0x9b, gbc.readMem(0xb4ef));
        EXPECT(0xb9, gbc.readMem(0xb4f0));
        // 11 00C9
        gbc.setState(0x9e7f, 0x83e3, 0x42c0, 0x2657, 0x7f74, 0xca1c, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0x11, 0x67, 0x96 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x83e3, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9e7f));
        EXPECT(0x67, gbc.readMem(0x9e80));
        EXPECT(0x96, gbc.readMem(0x9e81));
        // 11 00CA
        gbc.setState(0xb6b1, 0x83b, 0x7830, 0xd5f2, 0xd07a, 0xbb0c, 0x1, 0x0);
        gbc.writeMem(0xb6b1, { 0x11, 0x85, 0x8b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x83b, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb6b1));
        EXPECT(0x85, gbc.readMem(0xb6b2));
        EXPECT(0x8b, gbc.readMem(0xb6b3));
        // 11 00CB
        gbc.setState(0x1410, 0xa450, 0x9be0, 0x28bc, 0x1258, 0xd6bd, 0x1, 0x1);
        gbc.writeMem(0x1410, { 0x11, 0xce, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa450, gbc.sp());
        EXPECT(0x1413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00CC
        gbc.setState(0x2866, 0x9ec1, 0xcfb0, 0xe306, 0xf0f4, 0xf197, 0x1, 0x0);
        gbc.writeMem(0x2866, { 0x11, 0x44, 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9ec1, gbc.sp());
        EXPECT(0x2869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00CD
        gbc.setState(0x98a8, 0xa55b, 0xb5e0, 0x5685, 0xcd85, 0x8656, 0x1, 0x1);
        gbc.writeMem(0x98a8, { 0x11, 0x74, 0x60 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa55b, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x98a8));
        EXPECT(0x74, gbc.readMem(0x98a9));
        EXPECT(0x60, gbc.readMem(0x98aa));
        // 11 00CE
        gbc.setState(0xbaa3, 0xea7, 0x9880, 0x784c, 0x7651, 0xc491, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x11, 0x23, 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0xbaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbaa3));
        EXPECT(0x23, gbc.readMem(0xbaa4));
        EXPECT(0x7d, gbc.readMem(0xbaa5));
        // 11 00CF
        gbc.setState(0xb96f, 0x208a, 0xe300, 0x3c5e, 0x80ab, 0xc71, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0x11, 0x3f, 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x208a, gbc.sp());
        EXPECT(0xb972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb96f));
        EXPECT(0x3f, gbc.readMem(0xb970));
        EXPECT(0x19, gbc.readMem(0xb971));
        // 11 00D0
        gbc.setState(0xb2bd, 0x9bc4, 0xd3a0, 0xb01d, 0xc2d1, 0xa2dd, 0x1, 0x1);
        gbc.writeMem(0xb2bd, { 0x11, 0xc0, 0x34 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9bc4, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb2bd));
        EXPECT(0xc0, gbc.readMem(0xb2be));
        EXPECT(0x34, gbc.readMem(0xb2bf));
        // 11 00D1
        gbc.setState(0x60a6, 0xd039, 0xb4f0, 0xf522, 0x9d33, 0x92a5, 0x0, 0x1);
        gbc.writeMem(0x60a6, { 0x11, 0x6c, 0x1c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D2
        gbc.setState(0xc966, 0x7a5e, 0x5770, 0xa9b0, 0x93f9, 0x88ff, 0x1, 0x1);
        gbc.writeMem(0xc966, { 0x11, 0xcd, 0xd6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc966));
        EXPECT(0xcd, gbc.readMem(0xc967));
        EXPECT(0xd6, gbc.readMem(0xc968));
        // 11 00D3
        gbc.setState(0x9055, 0xbd33, 0x3ad0, 0x68f1, 0x912e, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0x9055, { 0x11, 0x11, 0x79 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbd33, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9055));
        EXPECT(0x11, gbc.readMem(0x9056));
        EXPECT(0x79, gbc.readMem(0x9057));
        // 11 00D4
        gbc.setState(0x10a6, 0xeeb0, 0x8f90, 0xd409, 0x2296, 0x1579, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0x11, 0x16, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeeb0, gbc.sp());
        EXPECT(0x10a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D5
        gbc.setState(0x4808, 0x1978, 0x4590, 0x404a, 0x364, 0xd903, 0x1, 0x0);
        gbc.writeMem(0x4808, { 0x11, 0x2, 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D6
        gbc.setState(0x135f, 0x32c1, 0xec30, 0xccbc, 0x4636, 0x1a65, 0x0, 0x0);
        gbc.writeMem(0x135f, { 0x11, 0xfc, 0x53 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x1362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D7
        gbc.setState(0x6a01, 0xe974, 0xbed0, 0xdbee, 0xc3, 0x3b71, 0x1, 0x1);
        gbc.writeMem(0x6a01, { 0x11, 0xb, 0x67 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe974, gbc.sp());
        EXPECT(0x6a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D8
        gbc.setState(0x73e0, 0xf987, 0x1770, 0x6913, 0xfc90, 0x14b8, 0x0, 0x1);
        gbc.writeMem(0x73e0, { 0x11, 0x40, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00D9
        gbc.setState(0x1381, 0x9867, 0x2a70, 0x6191, 0xa3ae, 0x2374, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0x11, 0x7b, 0x4c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00DA
        gbc.setState(0xb2df, 0xad26, 0x8b00, 0xa675, 0x8448, 0x9078, 0x1, 0x0);
        gbc.writeMem(0xb2df, { 0x11, 0xed, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xad26, gbc.sp());
        EXPECT(0xb2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb2df));
        EXPECT(0xed, gbc.readMem(0xb2e0));
        EXPECT(0xea, gbc.readMem(0xb2e1));
        // 11 00DB
        gbc.setState(0x11d8, 0x8545, 0x2520, 0x404b, 0xf9bf, 0x300b, 0x1, 0x0);
        gbc.writeMem(0x11d8, { 0x11, 0xfd, 0x96 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8545, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00DC
        gbc.setState(0x2381, 0xeea6, 0x5860, 0x3df1, 0xa0b2, 0xe181, 0x0, 0x1);
        gbc.writeMem(0x2381, { 0x11, 0x43, 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeea6, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00DD
        gbc.setState(0xea7f, 0x1354, 0xd560, 0xc7d2, 0xf283, 0x1fc5, 0x0, 0x1);
        gbc.writeMem(0xea7f, { 0x11, 0x5f, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1354, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xea7f));
        EXPECT(0x5f, gbc.readMem(0xea80));
        EXPECT(0xd7, gbc.readMem(0xea81));
        // 11 00DF
        gbc.setState(0x7d04, 0x721e, 0xef60, 0x8392, 0x121b, 0x226a, 0x1, 0x1);
        gbc.writeMem(0x7d04, { 0x11, 0xae, 0xc2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0x7d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00E0
        gbc.setState(0xd62, 0xf18, 0xe550, 0x4baa, 0xdc6a, 0xec10, 0x0, 0x0);
        gbc.writeMem(0xd62, { 0x11, 0xe7, 0xd7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf18, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00E1
        gbc.setState(0x6477, 0x8d77, 0x5590, 0x6679, 0x438e, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0x6477, { 0x11, 0x42, 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8d77, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00E2
        gbc.setState(0x3364, 0xe984, 0xce20, 0x9483, 0xc22d, 0xf10, 0x1, 0x0);
        gbc.writeMem(0x3364, { 0x11, 0xae, 0x46 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe984, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00E3
        gbc.setState(0xab1b, 0x4da9, 0x3b00, 0x9c85, 0xc13e, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0x11, 0xd0, 0x90 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xab1b));
        EXPECT(0xd0, gbc.readMem(0xab1c));
        EXPECT(0x90, gbc.readMem(0xab1d));
        // 11 00E5
        gbc.setState(0xcb85, 0xbbe2, 0xe100, 0xa196, 0x9072, 0xb9b4, 0x0, 0x0);
        gbc.writeMem(0xcb85, { 0x11, 0x59, 0xf0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcb85));
        EXPECT(0x59, gbc.readMem(0xcb86));
        EXPECT(0xf0, gbc.readMem(0xcb87));
        // 11 00E6
        gbc.setState(0x44a1, 0x70cd, 0xa600, 0x881d, 0xb379, 0xe5ce, 0x1, 0x0);
        gbc.writeMem(0x44a1, { 0x11, 0x7, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x70cd, gbc.sp());
        EXPECT(0x44a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00E7
        gbc.setState(0xc083, 0x72dd, 0xcd20, 0x92fb, 0xb69a, 0x8a66, 0x1, 0x1);
        gbc.writeMem(0xc083, { 0x11, 0x99, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72dd, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc083));
        EXPECT(0x99, gbc.readMem(0xc084));
        EXPECT(0x43, gbc.readMem(0xc085));
        // 11 00E8
        gbc.setState(0xa9c9, 0xd35f, 0x8380, 0x5823, 0x477e, 0x9057, 0x1, 0x1);
        gbc.writeMem(0xa9c9, { 0x11, 0x4, 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd35f, gbc.sp());
        EXPECT(0xa9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa9c9));
        EXPECT(0x4, gbc.readMem(0xa9ca));
        EXPECT(0x82, gbc.readMem(0xa9cb));
        // 11 00E9
        gbc.setState(0x2f51, 0x49a5, 0x86b0, 0xe267, 0x4ca7, 0xb140, 0x1, 0x0);
        gbc.writeMem(0x2f51, { 0x11, 0x1c, 0xb1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00EA
        gbc.setState(0xa77e, 0x3a9b, 0xaf80, 0x1b3f, 0xafb2, 0xe34d, 0x0, 0x0);
        gbc.writeMem(0xa77e, { 0x11, 0x53, 0x28 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3a9b, gbc.sp());
        EXPECT(0xa781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa77e));
        EXPECT(0x53, gbc.readMem(0xa77f));
        EXPECT(0x28, gbc.readMem(0xa780));
        // 11 00EB
        gbc.setState(0xe5e6, 0x6b1f, 0xcec0, 0x24e9, 0x583f, 0x5b85, 0x0, 0x0);
        gbc.writeMem(0xe5e6, { 0x11, 0x7d, 0x63 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6b1f, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe5e6));
        EXPECT(0x7d, gbc.readMem(0xe5e7));
        EXPECT(0x63, gbc.readMem(0xe5e8));
        // 11 00EC
        gbc.setState(0xe70e, 0xc2dd, 0x7e50, 0x920b, 0xf9b3, 0x695a, 0x0, 0x0);
        gbc.writeMem(0xe70e, { 0x11, 0xff, 0xbf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0xe711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe70e));
        EXPECT(0xff, gbc.readMem(0xe70f));
        EXPECT(0xbf, gbc.readMem(0xe710));
        // 11 00ED
        gbc.setState(0xd45f, 0x7f97, 0x73c0, 0xbe78, 0x2047, 0x1755, 0x1, 0x0);
        gbc.writeMem(0xd45f, { 0x11, 0x2e, 0x47 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7f97, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd45f));
        EXPECT(0x2e, gbc.readMem(0xd460));
        EXPECT(0x47, gbc.readMem(0xd461));
        // 11 00EE
        gbc.setState(0x2c46, 0xb1b8, 0x1ef0, 0xa804, 0xc24b, 0x5193, 0x1, 0x1);
        gbc.writeMem(0x2c46, { 0x11, 0x82, 0xa3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0x2c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00EF
        gbc.setState(0x6d29, 0x2852, 0xd820, 0x5910, 0x6ab3, 0x3e88, 0x1, 0x0);
        gbc.writeMem(0x6d29, { 0x11, 0xcf, 0xa5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2852, gbc.sp());
        EXPECT(0x6d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00F0
        gbc.setState(0x6fc6, 0x8d48, 0x3b0, 0xee28, 0x39eb, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0x6fc6, { 0x11, 0x2d, 0xbe });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8d48, gbc.sp());
        EXPECT(0x6fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00F1
        gbc.setState(0x63a2, 0x97cf, 0x94d0, 0xf947, 0xee2d, 0xb0c6, 0x0, 0x1);
        gbc.writeMem(0x63a2, { 0x11, 0xc6, 0x4c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x97cf, gbc.sp());
        EXPECT(0x63a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00F2
        gbc.setState(0xadcb, 0x40ff, 0x61f0, 0x2809, 0x3f6, 0xd3e2, 0x0, 0x1);
        gbc.writeMem(0xadcb, { 0x11, 0x99, 0xe6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xadcb));
        EXPECT(0x99, gbc.readMem(0xadcc));
        EXPECT(0xe6, gbc.readMem(0xadcd));
        // 11 00F3
        gbc.setState(0x8d76, 0x5325, 0xe0c0, 0xc8b9, 0x6078, 0x4610, 0x0, 0x1);
        gbc.writeMem(0x8d76, { 0x11, 0x86, 0x68 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5325, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d76));
        EXPECT(0x86, gbc.readMem(0x8d77));
        EXPECT(0x68, gbc.readMem(0x8d78));
        // 11 00F4
        gbc.setState(0x2898, 0xa30, 0xdd90, 0xf7de, 0x78f5, 0x73d8, 0x1, 0x0);
        gbc.writeMem(0x2898, { 0x11, 0xd4, 0xba });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00F5
        gbc.setState(0x33f5, 0x5db0, 0xab30, 0xf4ba, 0xdbff, 0xca03, 0x0, 0x1);
        gbc.writeMem(0x33f5, { 0x11, 0x4a, 0xcf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5db0, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 00F6
        gbc.setState(0x66dc, 0x1377, 0xd0a0, 0x1c29, 0x7ee8, 0x9906, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0x11, 0x10, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1377, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00F7
        gbc.setState(0xbe6a, 0x6f1d, 0x3c60, 0x4ad, 0x675a, 0xc01b, 0x1, 0x0);
        gbc.writeMem(0xbe6a, { 0x11, 0x73, 0x60 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6f1d, gbc.sp());
        EXPECT(0xbe6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbe6a));
        EXPECT(0x73, gbc.readMem(0xbe6b));
        EXPECT(0x60, gbc.readMem(0xbe6c));
        // 11 00F8
        gbc.setState(0x61c, 0xe84, 0x7380, 0xb97d, 0x2f58, 0x7e85, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0x11, 0xe1, 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe84, gbc.sp());
        EXPECT(0x61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00FA
        gbc.setState(0xdead, 0x8208, 0xdf30, 0xf87e, 0x86a1, 0xc45, 0x0, 0x1);
        gbc.writeMem(0xdead, { 0x11, 0xe8, 0xe5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8208, gbc.sp());
        EXPECT(0xdeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdead));
        EXPECT(0xe8, gbc.readMem(0xdeae));
        EXPECT(0xe5, gbc.readMem(0xdeaf));
        // 11 00FB
        gbc.setState(0xb689, 0xca73, 0x39d0, 0x458c, 0x6ab2, 0x58aa, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0x11, 0xfd, 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xca73, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb689));
        EXPECT(0xfd, gbc.readMem(0xb68a));
        EXPECT(0x19, gbc.readMem(0xb68b));
        // 11 00FC
        gbc.setState(0x704, 0x5f2f, 0x5100, 0x2148, 0x4b0f, 0x9e60, 0x1, 0x0);
        gbc.writeMem(0x704, { 0x11, 0x27, 0xf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5f2f, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00FD
        gbc.setState(0x252f, 0x423f, 0x2e80, 0x441d, 0x495b, 0x6a22, 0x1, 0x1);
        gbc.writeMem(0x252f, { 0x11, 0x5e, 0xad });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0x2532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00FE
        gbc.setState(0x18a, 0xe059, 0xb080, 0x7a24, 0x9f95, 0x7012, 0x1, 0x0);
        gbc.writeMem(0x18a, { 0x11, 0x8f, 0x57 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe059, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 00FF
        gbc.setState(0xc5c8, 0xd5e9, 0xbb80, 0xef0b, 0xfccc, 0xecf1, 0x1, 0x0);
        gbc.writeMem(0xc5c8, { 0x11, 0xe1, 0xf1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd5e9, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc5c8));
        EXPECT(0xe1, gbc.readMem(0xc5c9));
        EXPECT(0xf1, gbc.readMem(0xc5ca));
        // 11 0100
        gbc.setState(0x54c, 0x8095, 0xdfe0, 0x74e7, 0x82b5, 0xb7c6, 0x0, 0x0);
        gbc.writeMem(0x54c, { 0x11, 0xd2, 0x68 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0101
        gbc.setState(0xb284, 0x685, 0x2460, 0x8c0c, 0xf32d, 0xdc5c, 0x0, 0x1);
        gbc.writeMem(0xb284, { 0x11, 0xcf, 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xb287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb284));
        EXPECT(0xcf, gbc.readMem(0xb285));
        EXPECT(0x8a, gbc.readMem(0xb286));
        // 11 0102
        gbc.setState(0x1090, 0xf681, 0xd820, 0x67fc, 0x4208, 0x7329, 0x0, 0x0);
        gbc.writeMem(0x1090, { 0x11, 0x6c, 0x84 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0103
        gbc.setState(0xcbd1, 0xe57c, 0x34e0, 0x581d, 0xc0b7, 0xf4eb, 0x0, 0x0);
        gbc.writeMem(0xcbd1, { 0x11, 0x82, 0xcd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0xcbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcbd1));
        EXPECT(0x82, gbc.readMem(0xcbd2));
        EXPECT(0xcd, gbc.readMem(0xcbd3));
        // 11 0104
        gbc.setState(0x5b93, 0xc54d, 0xe630, 0xa62f, 0xa77e, 0xbab, 0x1, 0x0);
        gbc.writeMem(0x5b93, { 0x11, 0xe1, 0xf9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0105
        gbc.setState(0x7819, 0xd0bb, 0xeb30, 0x28a4, 0x4c72, 0x910e, 0x0, 0x0);
        gbc.writeMem(0x7819, { 0x11, 0xd0, 0x5f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x781c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0106
        gbc.setState(0x3fd3, 0xac75, 0xc160, 0xbab3, 0xe57c, 0xdc1e, 0x1, 0x1);
        gbc.writeMem(0x3fd3, { 0x11, 0x3c, 0x37 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xac75, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0107
        gbc.setState(0x44af, 0x46e8, 0xf730, 0x3fdb, 0x356d, 0x7478, 0x0, 0x0);
        gbc.writeMem(0x44af, { 0x11, 0x82, 0xdd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0x44b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0108
        gbc.setState(0xd3ab, 0x7684, 0xf780, 0x7544, 0xfbf4, 0x5117, 0x1, 0x0);
        gbc.writeMem(0xd3ab, { 0x11, 0xed, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd3ab));
        EXPECT(0xed, gbc.readMem(0xd3ac));
        EXPECT(0x64, gbc.readMem(0xd3ad));
        // 11 0109
        gbc.setState(0x88c5, 0xa0aa, 0x8690, 0x6c3c, 0x3f6c, 0xefba, 0x0, 0x0);
        gbc.writeMem(0x88c5, { 0x11, 0xb, 0x22 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa0aa, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x88c5));
        EXPECT(0xb, gbc.readMem(0x88c6));
        EXPECT(0x22, gbc.readMem(0x88c7));
        // 11 010A
        gbc.setState(0xa142, 0xe285, 0xd600, 0xeff3, 0x3852, 0xf6f4, 0x0, 0x0);
        gbc.writeMem(0xa142, { 0x11, 0x97, 0xe1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe285, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa142));
        EXPECT(0x97, gbc.readMem(0xa143));
        EXPECT(0xe1, gbc.readMem(0xa144));
        // 11 010B
        gbc.setState(0x8073, 0x6482, 0xb310, 0x2d7f, 0x7706, 0x9964, 0x1, 0x1);
        gbc.writeMem(0x8073, { 0x11, 0xb0, 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6482, gbc.sp());
        EXPECT(0x8076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8073));
        EXPECT(0xb0, gbc.readMem(0x8074));
        EXPECT(0x49, gbc.readMem(0x8075));
        // 11 010C
        gbc.setState(0x26a5, 0x72fc, 0xd2c0, 0xa840, 0xe0f4, 0x7b0f, 0x0, 0x0);
        gbc.writeMem(0x26a5, { 0x11, 0x4b, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x26a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 010D
        gbc.setState(0x5c55, 0xa602, 0xae10, 0x75b8, 0xcc4c, 0x1b21, 0x0, 0x0);
        gbc.writeMem(0x5c55, { 0x11, 0xfb, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0x5c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 010E
        gbc.setState(0xa907, 0x290b, 0x2850, 0x48bc, 0xe76, 0x870c, 0x1, 0x0);
        gbc.writeMem(0xa907, { 0x11, 0xb6, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0xa90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa907));
        EXPECT(0xb6, gbc.readMem(0xa908));
        EXPECT(0x2d, gbc.readMem(0xa909));
        // 11 0110
        gbc.setState(0x3a1b, 0xa837, 0x6e70, 0x7fd9, 0x69dc, 0xdc19, 0x0, 0x1);
        gbc.writeMem(0x3a1b, { 0x11, 0xb8, 0x91 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa837, gbc.sp());
        EXPECT(0x3a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0111
        gbc.setState(0x6828, 0xa069, 0x83f0, 0x4219, 0x84d6, 0xe9f2, 0x0, 0x0);
        gbc.writeMem(0x6828, { 0x11, 0xde, 0xf1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0112
        gbc.setState(0xebd5, 0xadc5, 0x2e40, 0x72c3, 0x559e, 0x2825, 0x1, 0x0);
        gbc.writeMem(0xebd5, { 0x11, 0x1a, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xadc5, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xebd5));
        EXPECT(0x1a, gbc.readMem(0xebd6));
        EXPECT(0xb5, gbc.readMem(0xebd7));
        // 11 0113
        gbc.setState(0x98d0, 0xfffb, 0x7920, 0xaf9e, 0xcf95, 0xe454, 0x0, 0x0);
        gbc.writeMem(0x98d0, { 0x11, 0x85, 0x1f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfffb, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x98d0));
        EXPECT(0x85, gbc.readMem(0x98d1));
        EXPECT(0x1f, gbc.readMem(0x98d2));
        // 11 0114
        gbc.setState(0x6b97, 0x66ae, 0x8ad0, 0xff87, 0x4134, 0xcef, 0x1, 0x1);
        gbc.writeMem(0x6b97, { 0x11, 0x72, 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0x6b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0115
        gbc.setState(0xe70a, 0xdda, 0x4af0, 0xf397, 0x5f77, 0x86e4, 0x1, 0x0);
        gbc.writeMem(0xe70a, { 0x11, 0xd7, 0xc7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdda, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe70a));
        EXPECT(0xd7, gbc.readMem(0xe70b));
        EXPECT(0xc7, gbc.readMem(0xe70c));
        // 11 0116
        gbc.setState(0xa8b2, 0x99de, 0x5560, 0xe5df, 0x4f24, 0x8f4f, 0x0, 0x0);
        gbc.writeMem(0xa8b2, { 0x11, 0x64, 0xf6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0xa8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa8b2));
        EXPECT(0x64, gbc.readMem(0xa8b3));
        EXPECT(0xf6, gbc.readMem(0xa8b4));
        // 11 0117
        gbc.setState(0x16d5, 0x4695, 0x28b0, 0xe620, 0xb00d, 0x40ae, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0x11, 0x3f, 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0x16d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0118
        gbc.setState(0x7f42, 0x816d, 0x3fe0, 0xbc1d, 0x6a6, 0x26be, 0x0, 0x1);
        gbc.writeMem(0x7f42, { 0x11, 0x94, 0x3a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0x7f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0119
        gbc.setState(0xae67, 0x12d2, 0xc230, 0xd773, 0x46bf, 0x13aa, 0x0, 0x0);
        gbc.writeMem(0xae67, { 0x11, 0xc6, 0xd8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0xae6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xae67));
        EXPECT(0xc6, gbc.readMem(0xae68));
        EXPECT(0xd8, gbc.readMem(0xae69));
        // 11 011A
        gbc.setState(0x862e, 0x6de2, 0x54a0, 0x1abd, 0x4758, 0x837d, 0x1, 0x0);
        gbc.writeMem(0x862e, { 0x11, 0x7d, 0xe });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6de2, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x862e));
        EXPECT(0x7d, gbc.readMem(0x862f));
        EXPECT(0xe, gbc.readMem(0x8630));
        // 11 011B
        gbc.setState(0x4c06, 0xb637, 0xe70, 0x3ac3, 0xc883, 0x6fce, 0x0, 0x0);
        gbc.writeMem(0x4c06, { 0x11, 0x89, 0x6f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb637, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 011C
        gbc.setState(0x6bc, 0x5a77, 0x1820, 0x56b9, 0xada, 0x492, 0x1, 0x0);
        gbc.writeMem(0x6bc, { 0x11, 0xf6, 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0x6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 011D
        gbc.setState(0xd404, 0x9661, 0x4630, 0x87a7, 0x1bad, 0x32b5, 0x1, 0x0);
        gbc.writeMem(0xd404, { 0x11, 0x28, 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd404));
        EXPECT(0x28, gbc.readMem(0xd405));
        EXPECT(0x20, gbc.readMem(0xd406));
        // 11 011E
        gbc.setState(0x32ed, 0x1e5d, 0xfd00, 0x7038, 0x97a5, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x32ed, { 0x11, 0x9c, 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1e5d, gbc.sp());
        EXPECT(0x32f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 011F
        gbc.setState(0x15a, 0x918c, 0x89d0, 0x6c7f, 0xa801, 0x1729, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0x11, 0x9b, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0120
        gbc.setState(0x2069, 0xc159, 0xc590, 0xa008, 0xa1b7, 0x15fb, 0x0, 0x0);
        gbc.writeMem(0x2069, { 0x11, 0x43, 0x30 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc159, gbc.sp());
        EXPECT(0x206c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0122
        gbc.setState(0xdfe, 0x1a4c, 0x6110, 0xb051, 0x4ac8, 0x853b, 0x0, 0x1);
        gbc.writeMem(0xdfe, { 0x11, 0x8d, 0x41 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a4c, gbc.sp());
        EXPECT(0xe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0123
        gbc.setState(0x431f, 0x1e9f, 0x7fa0, 0xa9ff, 0x4561, 0xd5c2, 0x1, 0x1);
        gbc.writeMem(0x431f, { 0x11, 0x71, 0x8e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1e9f, gbc.sp());
        EXPECT(0x4322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0125
        gbc.setState(0xbc2f, 0x2666, 0xb10, 0x6b5b, 0x10e0, 0x237b, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0x11, 0x13, 0xf7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2666, gbc.sp());
        EXPECT(0xbc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbc2f));
        EXPECT(0x13, gbc.readMem(0xbc30));
        EXPECT(0xf7, gbc.readMem(0xbc31));
        // 11 0127
        gbc.setState(0xd2e0, 0xb893, 0xf3a0, 0x9bb9, 0x8d02, 0x4732, 0x0, 0x1);
        gbc.writeMem(0xd2e0, { 0x11, 0x5a, 0xcb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0xd2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd2e0));
        EXPECT(0x5a, gbc.readMem(0xd2e1));
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        // 11 0128
        gbc.setState(0x4d69, 0xe02f, 0xbea0, 0x68ba, 0x9e79, 0x8dfb, 0x0, 0x0);
        gbc.writeMem(0x4d69, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe02f, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0129
        gbc.setState(0xd6c6, 0x4ce7, 0x8440, 0xea3b, 0x4ae0, 0x405e, 0x0, 0x0);
        gbc.writeMem(0xd6c6, { 0x11, 0x34, 0x7f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ce7, gbc.sp());
        EXPECT(0xd6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd6c6));
        EXPECT(0x34, gbc.readMem(0xd6c7));
        EXPECT(0x7f, gbc.readMem(0xd6c8));
        // 11 012A
        gbc.setState(0x8e6f, 0xd9b7, 0x5e70, 0x846d, 0x4821, 0x3bf0, 0x1, 0x0);
        gbc.writeMem(0x8e6f, { 0x11, 0x44, 0xcd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0x8e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8e6f));
        EXPECT(0x44, gbc.readMem(0x8e70));
        EXPECT(0xcd, gbc.readMem(0x8e71));
        // 11 012B
        gbc.setState(0x6542, 0x357, 0xe010, 0xc4a1, 0x331d, 0x3102, 0x1, 0x1);
        gbc.writeMem(0x6542, { 0x11, 0x5e, 0x17 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 012C
        gbc.setState(0x3181, 0x9ac7, 0x6ac0, 0x95d4, 0xbc76, 0x7473, 0x1, 0x0);
        gbc.writeMem(0x3181, { 0x11, 0x3f, 0x3e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9ac7, gbc.sp());
        EXPECT(0x3184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 012D
        gbc.setState(0xcf8e, 0x70af, 0xe230, 0x2bae, 0xa6d3, 0xcbc6, 0x1, 0x1);
        gbc.writeMem(0xcf8e, { 0x11, 0xf5, 0xcf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0xcf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcf8e));
        EXPECT(0xf5, gbc.readMem(0xcf8f));
        EXPECT(0xcf, gbc.readMem(0xcf90));
        // 11 012E
        gbc.setState(0xb8c3, 0x2d43, 0xbd00, 0x8d54, 0xfbc4, 0x972a, 0x1, 0x0);
        gbc.writeMem(0xb8c3, { 0x11, 0xa2, 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb8c3));
        EXPECT(0xa2, gbc.readMem(0xb8c4));
        EXPECT(0x7d, gbc.readMem(0xb8c5));
        // 11 012F
        gbc.setState(0x2b2f, 0xd944, 0x6bb0, 0xf786, 0xf22c, 0x900b, 0x0, 0x0);
        gbc.writeMem(0x2b2f, { 0x11, 0x7b, 0x81 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd944, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0130
        gbc.setState(0x4a29, 0xb140, 0x2b00, 0x9e83, 0xf7b3, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x4a29, { 0x11, 0xbc, 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0x4a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0131
        gbc.setState(0xe212, 0x444f, 0x5e30, 0x2fce, 0xcc61, 0x4c43, 0x1, 0x0);
        gbc.writeMem(0xe212, { 0x11, 0x8c, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x444f, gbc.sp());
        EXPECT(0xe215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe212));
        EXPECT(0x8c, gbc.readMem(0xe213));
        EXPECT(0xd0, gbc.readMem(0xe214));
        // 11 0132
        gbc.setState(0xb631, 0xeb44, 0xd510, 0x8e4e, 0xfd0e, 0x8cff, 0x1, 0x0);
        gbc.writeMem(0xb631, { 0x11, 0xfb, 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeb44, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb631));
        EXPECT(0xfb, gbc.readMem(0xb632));
        EXPECT(0x2c, gbc.readMem(0xb633));
        // 11 0133
        gbc.setState(0x8ad, 0xb445, 0x1840, 0x45a4, 0xf453, 0x72df, 0x0, 0x0);
        gbc.writeMem(0x8ad, { 0x11, 0x72, 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0x8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0134
        gbc.setState(0xb200, 0x221d, 0x1fa0, 0xe050, 0x7f63, 0xe116, 0x0, 0x0);
        gbc.writeMem(0xb200, { 0x11, 0xa7, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x221d, gbc.sp());
        EXPECT(0xb203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb200));
        EXPECT(0xa7, gbc.readMem(0xb201));
        EXPECT(0xb, gbc.readMem(0xb202));
        // 11 0136
        gbc.setState(0xa1a5, 0xf985, 0xdf30, 0xdbb9, 0x98fc, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0xa1a5, { 0x11, 0xd0, 0xc4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa1a5));
        EXPECT(0xd0, gbc.readMem(0xa1a6));
        EXPECT(0xc4, gbc.readMem(0xa1a7));
        // 11 0137
        gbc.setState(0xd332, 0xbf4f, 0x8630, 0x2862, 0x59d6, 0x7d2f, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0x11, 0x39, 0xe0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd332));
        EXPECT(0x39, gbc.readMem(0xd333));
        EXPECT(0xe0, gbc.readMem(0xd334));
        // 11 0138
        gbc.setState(0xe8dc, 0xd5fe, 0xfff0, 0x9e0e, 0x5015, 0xc0db, 0x1, 0x1);
        gbc.writeMem(0xe8dc, { 0x11, 0x96, 0x5a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd5fe, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe8dc));
        EXPECT(0x96, gbc.readMem(0xe8dd));
        EXPECT(0x5a, gbc.readMem(0xe8de));
        // 11 0139
        gbc.setState(0xeb60, 0x99b5, 0x1d30, 0x8314, 0xc59e, 0x62cf, 0x0, 0x1);
        gbc.writeMem(0xeb60, { 0x11, 0x2c, 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0xeb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xeb60));
        EXPECT(0x2c, gbc.readMem(0xeb61));
        EXPECT(0x93, gbc.readMem(0xeb62));
        // 11 013B
        gbc.setState(0xb5a8, 0x5ed9, 0x4c90, 0x5187, 0x5e60, 0xf0e3, 0x0, 0x0);
        gbc.writeMem(0xb5a8, { 0x11, 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0xb5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb5a8));
        EXPECT(0x3e, gbc.readMem(0xb5a9));
        EXPECT(0xa8, gbc.readMem(0xb5aa));
        // 11 013C
        gbc.setState(0x3de9, 0xb5fe, 0x2b50, 0x8587, 0x96e6, 0x76c5, 0x0, 0x0);
        gbc.writeMem(0x3de9, { 0x11, 0xb0, 0xcd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 013D
        gbc.setState(0xcc1a, 0xf995, 0x83e0, 0xbff, 0x5bf0, 0xae8f, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0x11, 0xc3, 0xcd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf995, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcc1a));
        EXPECT(0xc3, gbc.readMem(0xcc1b));
        EXPECT(0xcd, gbc.readMem(0xcc1c));
        // 11 013E
        gbc.setState(0x3cd5, 0x4770, 0x5130, 0xf27a, 0xa6ab, 0x913e, 0x1, 0x1);
        gbc.writeMem(0x3cd5, { 0x11, 0x75, 0x24 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4770, gbc.sp());
        EXPECT(0x3cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 013F
        gbc.setState(0xd46b, 0x8e5c, 0xd530, 0xdb0b, 0xa9c3, 0x7a4, 0x0, 0x1);
        gbc.writeMem(0xd46b, { 0x11, 0xf, 0xfe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8e5c, gbc.sp());
        EXPECT(0xd46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd46b));
        EXPECT(0xf, gbc.readMem(0xd46c));
        EXPECT(0xfe, gbc.readMem(0xd46d));
        // 11 0140
        gbc.setState(0x4adc, 0x258a, 0x2230, 0xf4f7, 0xdd6e, 0x1df2, 0x1, 0x0);
        gbc.writeMem(0x4adc, { 0x11, 0x50, 0xe5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x258a, gbc.sp());
        EXPECT(0x4adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0141
        gbc.setState(0x9a81, 0x6168, 0xbc90, 0xc4a, 0xbcf5, 0x5ddf, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0x11, 0x41, 0xdd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9a81));
        EXPECT(0x41, gbc.readMem(0x9a82));
        EXPECT(0xdd, gbc.readMem(0x9a83));
        // 11 0142
        gbc.setState(0x69bb, 0x2785, 0xe250, 0xaa29, 0x7ece, 0x16b3, 0x1, 0x1);
        gbc.writeMem(0x69bb, { 0x11, 0xf3, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0143
        gbc.setState(0x4a67, 0x82cc, 0xaaf0, 0x5d63, 0x21db, 0xa69d, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0x11, 0x86, 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x82cc, gbc.sp());
        EXPECT(0x4a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0144
        gbc.setState(0x4f0f, 0xa112, 0xcf50, 0x4b4e, 0x6e0d, 0x2e69, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0x11, 0xc9, 0x8d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa112, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0145
        gbc.setState(0xbeca, 0x49fb, 0xf090, 0x2237, 0x3b59, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0xbeca, { 0x11, 0x9, 0x39 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbeca));
        EXPECT(0x9, gbc.readMem(0xbecb));
        EXPECT(0x39, gbc.readMem(0xbecc));
        // 11 0146
        gbc.setState(0x120a, 0x57b3, 0xa990, 0x9700, 0x7bac, 0x81ab, 0x1, 0x1);
        gbc.writeMem(0x120a, { 0x11, 0x89, 0xb4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x57b3, gbc.sp());
        EXPECT(0x120d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0147
        gbc.setState(0x2ffb, 0xda4e, 0xde0, 0x5a4e, 0x32cd, 0xf4fd, 0x1, 0x1);
        gbc.writeMem(0x2ffb, { 0x11, 0x18, 0xab });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0148
        gbc.setState(0x7a9f, 0x73a9, 0xe400, 0xabe6, 0x470, 0xf73e, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0x11, 0x94, 0xa3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x73a9, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0149
        gbc.setState(0xa198, 0x190b, 0xd720, 0x5a1e, 0xb37e, 0x711d, 0x0, 0x0);
        gbc.writeMem(0xa198, { 0x11, 0x7f, 0xf3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa198));
        EXPECT(0x7f, gbc.readMem(0xa199));
        EXPECT(0xf3, gbc.readMem(0xa19a));
        // 11 014A
        gbc.setState(0x3f21, 0x589c, 0x2740, 0x7fac, 0xec34, 0x90a, 0x1, 0x1);
        gbc.writeMem(0x3f21, { 0x11, 0xeb, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x589c, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 014B
        gbc.setState(0x4444, 0xe4be, 0x8360, 0x1448, 0x2572, 0xa61, 0x0, 0x1);
        gbc.writeMem(0x4444, { 0x11, 0x6e, 0xad });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4be, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 014C
        gbc.setState(0xdd05, 0xd08a, 0x6a90, 0x5096, 0x7078, 0xe4a7, 0x0, 0x1);
        gbc.writeMem(0xdd05, { 0x11, 0x77, 0xe7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd08a, gbc.sp());
        EXPECT(0xdd08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdd05));
        EXPECT(0x77, gbc.readMem(0xdd06));
        EXPECT(0xe7, gbc.readMem(0xdd07));
        // 11 014D
        gbc.setState(0xd7d, 0xc10d, 0x92e0, 0xf13d, 0x2422, 0xf06b, 0x0, 0x1);
        gbc.writeMem(0xd7d, { 0x11, 0xf0, 0xfc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc10d, gbc.sp());
        EXPECT(0xd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 014E
        gbc.setState(0x808d, 0x7e93, 0xd840, 0x8cb5, 0x96b3, 0xdf1a, 0x1, 0x1);
        gbc.writeMem(0x808d, { 0x11, 0x5c, 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7e93, gbc.sp());
        EXPECT(0x8090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x808d));
        EXPECT(0x5c, gbc.readMem(0x808e));
        EXPECT(0x7f, gbc.readMem(0x808f));
        // 11 014F
        gbc.setState(0x1c4b, 0x8206, 0x5e90, 0x297e, 0xeba0, 0x3b6e, 0x1, 0x1);
        gbc.writeMem(0x1c4b, { 0x11, 0x4e, 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0150
        gbc.setState(0x1283, 0xb3ca, 0x7d90, 0xce8d, 0x9423, 0x957f, 0x1, 0x1);
        gbc.writeMem(0x1283, { 0x11, 0x77, 0x4f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb3ca, gbc.sp());
        EXPECT(0x1286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0151
        gbc.setState(0x2c6d, 0x3d81, 0x1d10, 0x5195, 0x89bd, 0xd5d1, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0x11, 0x12, 0xaa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3d81, gbc.sp());
        EXPECT(0x2c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0152
        gbc.setState(0x3259, 0x651e, 0xeee0, 0x247d, 0x848a, 0x4949, 0x1, 0x1);
        gbc.writeMem(0x3259, { 0x11, 0xff, 0x50 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x325c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0153
        gbc.setState(0xd5ab, 0x830f, 0x99f0, 0x2793, 0x5e73, 0xc61e, 0x0, 0x0);
        gbc.writeMem(0xd5ab, { 0x11, 0xf1, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x830f, gbc.sp());
        EXPECT(0xd5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd5ab));
        EXPECT(0xf1, gbc.readMem(0xd5ac));
        EXPECT(0xf8, gbc.readMem(0xd5ad));
        // 11 0154
        gbc.setState(0x88b9, 0x8921, 0x2610, 0x1db0, 0xc804, 0x46c6, 0x0, 0x1);
        gbc.writeMem(0x88b9, { 0x11, 0x8a, 0xfb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x88b9));
        EXPECT(0x8a, gbc.readMem(0x88ba));
        EXPECT(0xfb, gbc.readMem(0x88bb));
        // 11 0155
        gbc.setState(0x845f, 0xb46b, 0x1060, 0x5139, 0xe87c, 0xdb8, 0x0, 0x1);
        gbc.writeMem(0x845f, { 0x11, 0x4e, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0x8462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x845f));
        EXPECT(0x4e, gbc.readMem(0x8460));
        EXPECT(0xb1, gbc.readMem(0x8461));
        // 11 0156
        gbc.setState(0x4d3, 0x22f, 0x5f0, 0xea, 0x5c05, 0x462c, 0x0, 0x1);
        gbc.writeMem(0x4d3, { 0x11, 0x93, 0xf3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0x4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0157
        gbc.setState(0x83f6, 0xe2ec, 0x3be0, 0xd7bb, 0x2eeb, 0x44da, 0x1, 0x1);
        gbc.writeMem(0x83f6, { 0x11, 0xd1, 0xea });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe2ec, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x83f6));
        EXPECT(0xd1, gbc.readMem(0x83f7));
        EXPECT(0xea, gbc.readMem(0x83f8));
        // 11 0158
        gbc.setState(0x6797, 0x5fb4, 0xee00, 0xa5a2, 0x6f58, 0x1769, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0x11, 0x34, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0x679a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0159
        gbc.setState(0x521e, 0x3fec, 0xffe0, 0x7567, 0xb50b, 0x2d20, 0x0, 0x0);
        gbc.writeMem(0x521e, { 0x11, 0x88, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3fec, gbc.sp());
        EXPECT(0x5221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 015A
        gbc.setState(0x8450, 0xa714, 0x1a0, 0x537b, 0xb69a, 0x8725, 0x1, 0x0);
        gbc.writeMem(0x8450, { 0x11, 0x22, 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8450));
        EXPECT(0x22, gbc.readMem(0x8451));
        EXPECT(0x6d, gbc.readMem(0x8452));
        // 11 015B
        gbc.setState(0x4887, 0x4528, 0x50e0, 0x4824, 0xde81, 0x3cca, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0x11, 0x2d, 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4528, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 015C
        gbc.setState(0x4aad, 0xaa14, 0xe660, 0x9000, 0xb41a, 0xb790, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0x11, 0x74, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 015D
        gbc.setState(0xc443, 0xa2c7, 0xc570, 0x8203, 0xafb2, 0x7ce9, 0x0, 0x0);
        gbc.writeMem(0xc443, { 0x11, 0x3c, 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa2c7, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc443));
        EXPECT(0x3c, gbc.readMem(0xc444));
        EXPECT(0xe9, gbc.readMem(0xc445));
        // 11 015E
        gbc.setState(0x9ff4, 0xb329, 0x9ed0, 0x2eef, 0x224e, 0x6cd6, 0x0, 0x1);
        gbc.writeMem(0x9ff4, { 0x11, 0x2c, 0x29 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb329, gbc.sp());
        EXPECT(0x9ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9ff4));
        EXPECT(0x2c, gbc.readMem(0x9ff5));
        EXPECT(0x29, gbc.readMem(0x9ff6));
        // 11 015F
        gbc.setState(0x642a, 0xf12, 0x55a0, 0x8559, 0x4aac, 0xcca3, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0x11, 0xe, 0x62 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf12, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0160
        gbc.setState(0xac22, 0xab55, 0x1550, 0x5f95, 0xd1db, 0xaf41, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0x11, 0xbd, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xab55, gbc.sp());
        EXPECT(0xac25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xac22));
        EXPECT(0xbd, gbc.readMem(0xac23));
        EXPECT(0x8f, gbc.readMem(0xac24));
        // 11 0161
        gbc.setState(0xdef8, 0xd905, 0x7030, 0x9586, 0x8a1c, 0xc7cb, 0x0, 0x0);
        gbc.writeMem(0xdef8, { 0x11, 0xee, 0x79 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd905, gbc.sp());
        EXPECT(0xdefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdef8));
        EXPECT(0xee, gbc.readMem(0xdef9));
        EXPECT(0x79, gbc.readMem(0xdefa));
        // 11 0162
        gbc.setState(0xad43, 0xe79a, 0x9870, 0x3809, 0xe7a1, 0x9f43, 0x0, 0x1);
        gbc.writeMem(0xad43, { 0x11, 0xb8, 0x6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe79a, gbc.sp());
        EXPECT(0xad46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xad43));
        EXPECT(0xb8, gbc.readMem(0xad44));
        EXPECT(0x6, gbc.readMem(0xad45));
        // 11 0163
        gbc.setState(0xaef0, 0x39d1, 0xcb90, 0xfff, 0x450c, 0x67db, 0x0, 0x0);
        gbc.writeMem(0xaef0, { 0x11, 0xbf, 0xb6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x39d1, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaef0));
        EXPECT(0xbf, gbc.readMem(0xaef1));
        EXPECT(0xb6, gbc.readMem(0xaef2));
        // 11 0164
        gbc.setState(0xb25d, 0xf6c6, 0xa830, 0x4ee3, 0x2cbb, 0x51bb, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0x11, 0x6d, 0xd3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb25d));
        EXPECT(0x6d, gbc.readMem(0xb25e));
        EXPECT(0xd3, gbc.readMem(0xb25f));
        // 11 0165
        gbc.setState(0x2e5a, 0x8d37, 0xa7b0, 0xbc14, 0x51d5, 0x5814, 0x1, 0x1);
        gbc.writeMem(0x2e5a, { 0x11, 0x62, 0x78 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0166
        gbc.setState(0x1403, 0x59ea, 0xb600, 0xa8a5, 0x1cfd, 0xe30d, 0x1, 0x1);
        gbc.writeMem(0x1403, { 0x11, 0x39, 0x7d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x59ea, gbc.sp());
        EXPECT(0x1406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0167
        gbc.setState(0x53d7, 0x6c59, 0x7120, 0xdbdc, 0x3c03, 0x8867, 0x1, 0x1);
        gbc.writeMem(0x53d7, { 0x11, 0x28, 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0168
        gbc.setState(0xabe2, 0x86fe, 0x9470, 0x323b, 0xc820, 0xd4e0, 0x0, 0x1);
        gbc.writeMem(0xabe2, { 0x11, 0x65, 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xabe2));
        EXPECT(0x65, gbc.readMem(0xabe3));
        EXPECT(0xc8, gbc.readMem(0xabe4));
        // 11 0169
        gbc.setState(0x833d, 0x590e, 0x45a0, 0xdfd9, 0xf8f8, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x833d, { 0x11, 0x33, 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x8340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x833d));
        EXPECT(0x33, gbc.readMem(0x833e));
        EXPECT(0x73, gbc.readMem(0x833f));
        // 11 016A
        gbc.setState(0x190e, 0x615, 0x9b20, 0x6922, 0x1733, 0x94cc, 0x1, 0x1);
        gbc.writeMem(0x190e, { 0x11, 0x53, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0x1911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 016B
        gbc.setState(0x1a46, 0x8681, 0xdc20, 0xeddd, 0x654d, 0x4bff, 0x0, 0x0);
        gbc.writeMem(0x1a46, { 0x11, 0xd2, 0xde });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 016C
        gbc.setState(0xa039, 0xe8fe, 0x20e0, 0x1220, 0x515e, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0xa039, { 0x11, 0xa0, 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa039));
        EXPECT(0xa0, gbc.readMem(0xa03a));
        EXPECT(0x47, gbc.readMem(0xa03b));
        // 11 016D
        gbc.setState(0xb772, 0x6b93, 0xcea0, 0x8288, 0xa0bd, 0xbd96, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0x11, 0x12, 0x6b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0xb775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb772));
        EXPECT(0x12, gbc.readMem(0xb773));
        EXPECT(0x6b, gbc.readMem(0xb774));
        // 11 016E
        gbc.setState(0xad0a, 0xa2be, 0x3b00, 0x84bd, 0xc3cf, 0x8b5f, 0x0, 0x0);
        gbc.writeMem(0xad0a, { 0x11, 0x35, 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa2be, gbc.sp());
        EXPECT(0xad0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xad0a));
        EXPECT(0x35, gbc.readMem(0xad0b));
        EXPECT(0xbb, gbc.readMem(0xad0c));
        // 11 016F
        gbc.setState(0x4ce, 0xbc03, 0xec50, 0xc16a, 0x3d44, 0xb879, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0x11, 0xb4, 0x4c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbc03, gbc.sp());
        EXPECT(0x4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0171
        gbc.setState(0xbcc1, 0x382f, 0x2890, 0xa3b4, 0x94d3, 0x36fc, 0x0, 0x1);
        gbc.writeMem(0xbcc1, { 0x11, 0xad, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0xbcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbcc1));
        EXPECT(0xad, gbc.readMem(0xbcc2));
        EXPECT(0xbd, gbc.readMem(0xbcc3));
        // 11 0172
        gbc.setState(0x2f9f, 0x8e42, 0x5b00, 0x7da9, 0x4eeb, 0x1adc, 0x0, 0x0);
        gbc.writeMem(0x2f9f, { 0x11, 0x54, 0x23 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0173
        gbc.setState(0x5933, 0x7d5, 0x5100, 0xf1f7, 0xac74, 0xfb93, 0x1, 0x1);
        gbc.writeMem(0x5933, { 0x11, 0x1, 0x2f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0x5936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0174
        gbc.setState(0x5ce0, 0x1b78, 0x9ca0, 0x8ca, 0x5baa, 0xa084, 0x1, 0x1);
        gbc.writeMem(0x5ce0, { 0x11, 0x2e, 0x35 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1b78, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0175
        gbc.setState(0x18bd, 0x8469, 0xd2c0, 0xe3e5, 0x49d, 0x3b0a, 0x1, 0x0);
        gbc.writeMem(0x18bd, { 0x11, 0x40, 0xcd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8469, gbc.sp());
        EXPECT(0x18c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0176
        gbc.setState(0x1c53, 0xd34c, 0x41f0, 0xcb35, 0x5dac, 0xab11, 0x0, 0x1);
        gbc.writeMem(0x1c53, { 0x11, 0x3c, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd34c, gbc.sp());
        EXPECT(0x1c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0177
        gbc.setState(0x9500, 0xdae2, 0x8a30, 0xeb53, 0x9c01, 0x62a5, 0x0, 0x0);
        gbc.writeMem(0x9500, { 0x11, 0xc9, 0x1e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9500));
        EXPECT(0xc9, gbc.readMem(0x9501));
        EXPECT(0x1e, gbc.readMem(0x9502));
        // 11 0178
        gbc.setState(0xed4c, 0x3c80, 0x9730, 0x2792, 0xf70d, 0x857, 0x1, 0x0);
        gbc.writeMem(0xed4c, { 0x11, 0xa8, 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xed4c));
        EXPECT(0xa8, gbc.readMem(0xed4d));
        EXPECT(0x44, gbc.readMem(0xed4e));
        // 11 017A
        gbc.setState(0xec57, 0xbf47, 0xea60, 0xf670, 0xcfc7, 0x26ce, 0x0, 0x1);
        gbc.writeMem(0xec57, { 0x11, 0x2a, 0x2d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbf47, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xec57));
        EXPECT(0x2a, gbc.readMem(0xec58));
        EXPECT(0x2d, gbc.readMem(0xec59));
        // 11 017B
        gbc.setState(0x1e4c, 0xfb98, 0x3960, 0x8097, 0x8230, 0xad52, 0x0, 0x0);
        gbc.writeMem(0x1e4c, { 0x11, 0x97, 0xdc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 017C
        gbc.setState(0x129c, 0x7f9e, 0x3c70, 0xc0cf, 0x6c7b, 0x6894, 0x1, 0x0);
        gbc.writeMem(0x129c, { 0x11, 0xe6, 0x1b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 017D
        gbc.setState(0xd1bd, 0x5c4a, 0x6c90, 0x4cc4, 0xfc71, 0xec4e, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0x11, 0x11, 0xfe });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5c4a, gbc.sp());
        EXPECT(0xd1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd1bd));
        EXPECT(0x11, gbc.readMem(0xd1be));
        EXPECT(0xfe, gbc.readMem(0xd1bf));
        // 11 017E
        gbc.setState(0xc89d, 0xf3cf, 0x4490, 0x8760, 0x4a81, 0x234f, 0x0, 0x0);
        gbc.writeMem(0xc89d, { 0x11, 0x5a, 0x75 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3cf, gbc.sp());
        EXPECT(0xc8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc89d));
        EXPECT(0x5a, gbc.readMem(0xc89e));
        EXPECT(0x75, gbc.readMem(0xc89f));
        // 11 017F
        gbc.setState(0x5beb, 0xaa3b, 0xf180, 0x3b8, 0xff89, 0xd437, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0x11, 0x97, 0x28 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaa3b, gbc.sp());
        EXPECT(0x5bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0180
        gbc.setState(0x9606, 0xebe, 0x26e0, 0x14c0, 0x2e7a, 0x40ff, 0x0, 0x0);
        gbc.writeMem(0x9606, { 0x11, 0x2a, 0xdd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xebe, gbc.sp());
        EXPECT(0x9609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9606));
        EXPECT(0x2a, gbc.readMem(0x9607));
        EXPECT(0xdd, gbc.readMem(0x9608));
        // 11 0181
        gbc.setState(0x3e7b, 0x2e40, 0xa240, 0xbb1b, 0x207a, 0xf6de, 0x1, 0x1);
        gbc.writeMem(0x3e7b, { 0x11, 0x6b, 0xd9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0182
        gbc.setState(0xc6aa, 0x26cb, 0x1910, 0x3560, 0x8b15, 0x2bdb, 0x1, 0x1);
        gbc.writeMem(0xc6aa, { 0x11, 0xd2, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x26cb, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc6aa));
        EXPECT(0xd2, gbc.readMem(0xc6ab));
        EXPECT(0x43, gbc.readMem(0xc6ac));
        // 11 0183
        gbc.setState(0xcbfe, 0xd9bb, 0xee80, 0xdad4, 0x7191, 0x39b8, 0x1, 0x1);
        gbc.writeMem(0xcbfe, { 0x11, 0x65, 0xab });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd9bb, gbc.sp());
        EXPECT(0xcc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcbfe));
        EXPECT(0x65, gbc.readMem(0xcbff));
        EXPECT(0xab, gbc.readMem(0xcc00));
        // 11 0184
        gbc.setState(0xbfa5, 0xe21b, 0x5ff0, 0xc57d, 0x65ea, 0x6e, 0x0, 0x0);
        gbc.writeMem(0xbfa5, { 0x11, 0xb2, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe21b, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbfa5));
        EXPECT(0xb2, gbc.readMem(0xbfa6));
        EXPECT(0xc3, gbc.readMem(0xbfa7));
        // 11 0185
        gbc.setState(0xdf4f, 0xd51d, 0x7730, 0x9237, 0xce2e, 0xce74, 0x0, 0x0);
        gbc.writeMem(0xdf4f, { 0x11, 0x1c, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd51d, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdf4f));
        EXPECT(0x1c, gbc.readMem(0xdf50));
        EXPECT(0xc5, gbc.readMem(0xdf51));
        // 11 0186
        gbc.setState(0xdbfa, 0xd22, 0x410, 0x7f1e, 0xfbec, 0x5565, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0x11, 0x6, 0x73 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdbfa));
        EXPECT(0x6, gbc.readMem(0xdbfb));
        EXPECT(0x73, gbc.readMem(0xdbfc));
        // 11 0187
        gbc.setState(0x7763, 0x93e7, 0x46b0, 0xc8f8, 0x8721, 0xe551, 0x0, 0x0);
        gbc.writeMem(0x7763, { 0x11, 0xa4, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x93e7, gbc.sp());
        EXPECT(0x7766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0188
        gbc.setState(0x2d97, 0x9fa8, 0xb260, 0x947d, 0x3d47, 0x8a59, 0x0, 0x1);
        gbc.writeMem(0x2d97, { 0x11, 0x85, 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9fa8, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0189
        gbc.setState(0xc4d7, 0x24a5, 0x4cd0, 0x323d, 0x2ec1, 0xd6ac, 0x1, 0x1);
        gbc.writeMem(0xc4d7, { 0x11, 0x73, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc4d7));
        EXPECT(0x73, gbc.readMem(0xc4d8));
        EXPECT(0xc3, gbc.readMem(0xc4d9));
        // 11 018A
        gbc.setState(0x71b9, 0x409c, 0xc340, 0x184a, 0x852e, 0xbafe, 0x0, 0x0);
        gbc.writeMem(0x71b9, { 0x11, 0xf8, 0x83 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 018C
        gbc.setState(0x2295, 0x2760, 0x3e50, 0xc632, 0xc0c4, 0x7fa1, 0x0, 0x0);
        gbc.writeMem(0x2295, { 0x11, 0x79, 0xf1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0x2298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 018D
        gbc.setState(0x7a95, 0x641b, 0xae80, 0xd7cb, 0x51eb, 0x4944, 0x1, 0x1);
        gbc.writeMem(0x7a95, { 0x11, 0x36, 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x641b, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 018E
        gbc.setState(0x8eb7, 0xc47b, 0xb060, 0x931f, 0xe61, 0x97b1, 0x1, 0x0);
        gbc.writeMem(0x8eb7, { 0x11, 0x8d, 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc47b, gbc.sp());
        EXPECT(0x8eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8eb7));
        EXPECT(0x8d, gbc.readMem(0x8eb8));
        EXPECT(0xe9, gbc.readMem(0x8eb9));
        // 11 018F
        gbc.setState(0x1b1a, 0x2ad7, 0xab60, 0x92f7, 0x97c9, 0x5250, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0x11, 0xf, 0x6b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2ad7, gbc.sp());
        EXPECT(0x1b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0190
        gbc.setState(0x125c, 0x8642, 0x1f60, 0xd13e, 0x87f7, 0xc287, 0x0, 0x1);
        gbc.writeMem(0x125c, { 0x11, 0x0, 0x86 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8642, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0193
        gbc.setState(0x9e7b, 0xf909, 0x2cb0, 0x48cc, 0x8148, 0xc3c9, 0x0, 0x1);
        gbc.writeMem(0x9e7b, { 0x11, 0xea, 0x28 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf909, gbc.sp());
        EXPECT(0x9e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9e7b));
        EXPECT(0xea, gbc.readMem(0x9e7c));
        EXPECT(0x28, gbc.readMem(0x9e7d));
        // 11 0194
        gbc.setState(0x382f, 0xad3a, 0x25f0, 0xe52b, 0x8b95, 0x1544, 0x0, 0x0);
        gbc.writeMem(0x382f, { 0x11, 0x4c, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xad3a, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0195
        gbc.setState(0x831b, 0x7c71, 0xf450, 0xf945, 0x677c, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0x831b, { 0x11, 0xe0, 0x21 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c71, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x831b));
        EXPECT(0xe0, gbc.readMem(0x831c));
        EXPECT(0x21, gbc.readMem(0x831d));
        // 11 0196
        gbc.setState(0x59ff, 0x96ee, 0xc240, 0xae2a, 0x729c, 0xbc3a, 0x1, 0x1);
        gbc.writeMem(0x59ff, { 0x11, 0xac, 0xa5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0197
        gbc.setState(0xcc8f, 0xda14, 0x890, 0x6485, 0x9da8, 0x8531, 0x1, 0x0);
        gbc.writeMem(0xcc8f, { 0x11, 0x22, 0x1f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0xcc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcc8f));
        EXPECT(0x22, gbc.readMem(0xcc90));
        EXPECT(0x1f, gbc.readMem(0xcc91));
        // 11 0198
        gbc.setState(0xeb4d, 0xc336, 0xfd70, 0x2f2e, 0x5cdd, 0x1c98, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0x11, 0xa5, 0x60 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc336, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xeb4d));
        EXPECT(0xa5, gbc.readMem(0xeb4e));
        EXPECT(0x60, gbc.readMem(0xeb4f));
        // 11 0199
        gbc.setState(0x80ad, 0x6d68, 0x8040, 0xc56b, 0xe2ba, 0x16aa, 0x0, 0x1);
        gbc.writeMem(0x80ad, { 0x11, 0xe9, 0x1e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d68, gbc.sp());
        EXPECT(0x80b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x80ad));
        EXPECT(0xe9, gbc.readMem(0x80ae));
        EXPECT(0x1e, gbc.readMem(0x80af));
        // 11 019A
        gbc.setState(0x47a4, 0x225f, 0x6e60, 0x5a3f, 0xeaef, 0x8c94, 0x1, 0x0);
        gbc.writeMem(0x47a4, { 0x11, 0xce, 0x86 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 019B
        gbc.setState(0x9398, 0xa2f1, 0x49f0, 0xc5fe, 0x343d, 0x26bf, 0x0, 0x1);
        gbc.writeMem(0x9398, { 0x11, 0x39, 0xd6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa2f1, gbc.sp());
        EXPECT(0x939b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9398));
        EXPECT(0x39, gbc.readMem(0x9399));
        EXPECT(0xd6, gbc.readMem(0x939a));
        // 11 019C
        gbc.setState(0x9198, 0xa9e2, 0x5350, 0x9f27, 0xf38e, 0x3f35, 0x1, 0x0);
        gbc.writeMem(0x9198, { 0x11, 0x8d, 0xe9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa9e2, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9198));
        EXPECT(0x8d, gbc.readMem(0x9199));
        EXPECT(0xe9, gbc.readMem(0x919a));
        // 11 019D
        gbc.setState(0x8a30, 0x4836, 0x2280, 0x7215, 0xdf97, 0xc1c4, 0x1, 0x1);
        gbc.writeMem(0x8a30, { 0x11, 0xe6, 0x24 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8a30));
        EXPECT(0xe6, gbc.readMem(0x8a31));
        EXPECT(0x24, gbc.readMem(0x8a32));
        // 11 019F
        gbc.setState(0xdf8f, 0x1a34, 0xb230, 0xade2, 0x4984, 0x3beb, 0x0, 0x0);
        gbc.writeMem(0xdf8f, { 0x11, 0x55, 0xce });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdf8f));
        EXPECT(0x55, gbc.readMem(0xdf90));
        EXPECT(0xce, gbc.readMem(0xdf91));
        // 11 01A0
        gbc.setState(0x8e91, 0x192c, 0x6360, 0x6901, 0xbbc5, 0xc219, 0x0, 0x0);
        gbc.writeMem(0x8e91, { 0x11, 0x1d, 0x27 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x8e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8e91));
        EXPECT(0x1d, gbc.readMem(0x8e92));
        EXPECT(0x27, gbc.readMem(0x8e93));
        // 11 01A1
        gbc.setState(0xbbe6, 0xee7c, 0x79c0, 0x254, 0xbd2, 0xcafd, 0x1, 0x0);
        gbc.writeMem(0xbbe6, { 0x11, 0xff, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbbe6));
        EXPECT(0xff, gbc.readMem(0xbbe7));
        EXPECT(0x9, gbc.readMem(0xbbe8));
        // 11 01A2
        gbc.setState(0x3feb, 0xd51b, 0x3cc0, 0xb5b2, 0x5f1e, 0xc664, 0x1, 0x1);
        gbc.writeMem(0x3feb, { 0x11, 0xe, 0x80 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd51b, gbc.sp());
        EXPECT(0x3fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01A3
        gbc.setState(0x8d61, 0x4cab, 0xaa90, 0xa54d, 0x8b56, 0x23b1, 0x0, 0x0);
        gbc.writeMem(0x8d61, { 0x11, 0x1d, 0xc7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4cab, gbc.sp());
        EXPECT(0x8d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8d61));
        EXPECT(0x1d, gbc.readMem(0x8d62));
        EXPECT(0xc7, gbc.readMem(0x8d63));
        // 11 01A4
        gbc.setState(0xe025, 0x9cd8, 0x54b0, 0x75c5, 0x22cb, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0xe025, { 0x11, 0xed, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe025));
        EXPECT(0xed, gbc.readMem(0xe026));
        EXPECT(0xfb, gbc.readMem(0xe027));
        // 11 01A5
        gbc.setState(0x5fd8, 0xaace, 0xbbd0, 0x8e8f, 0x7129, 0xd3bc, 0x0, 0x0);
        gbc.writeMem(0x5fd8, { 0x11, 0x77, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaace, gbc.sp());
        EXPECT(0x5fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01A6
        gbc.setState(0x809e, 0x33b8, 0x5550, 0x9e5f, 0x932b, 0x4898, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0x11, 0x2b, 0xec });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x33b8, gbc.sp());
        EXPECT(0x80a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x809e));
        EXPECT(0x2b, gbc.readMem(0x809f));
        EXPECT(0xec, gbc.readMem(0x80a0));
        // 11 01A7
        gbc.setState(0xeb98, 0xba7a, 0x2140, 0x5041, 0xba4d, 0x903e, 0x1, 0x0);
        gbc.writeMem(0xeb98, { 0x11, 0x72, 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba7a, gbc.sp());
        EXPECT(0xeb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xeb98));
        EXPECT(0x72, gbc.readMem(0xeb99));
        EXPECT(0x7d, gbc.readMem(0xeb9a));
        // 11 01A8
        gbc.setState(0x4e8f, 0x122a, 0xf450, 0xf021, 0x4b7f, 0x58e6, 0x0, 0x1);
        gbc.writeMem(0x4e8f, { 0x11, 0x70, 0x29 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x122a, gbc.sp());
        EXPECT(0x4e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01A9
        gbc.setState(0x1542, 0x2260, 0x2a50, 0xb72, 0xd671, 0x2c36, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0x11, 0x12, 0x78 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x1545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01AA
        gbc.setState(0x47bf, 0x77e, 0xe900, 0x47ca, 0xa107, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x47bf, { 0x11, 0xd8, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x77e, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01AB
        gbc.setState(0x1df0, 0xe14, 0x2190, 0x7046, 0x349c, 0xecbf, 0x1, 0x1);
        gbc.writeMem(0x1df0, { 0x11, 0xb7, 0xea });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01AC
        gbc.setState(0xbcab, 0x523, 0xc5f0, 0x75ab, 0xe10b, 0xbc33, 0x1, 0x0);
        gbc.writeMem(0xbcab, { 0x11, 0x5d, 0x96 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbcab));
        EXPECT(0x5d, gbc.readMem(0xbcac));
        EXPECT(0x96, gbc.readMem(0xbcad));
        // 11 01AD
        gbc.setState(0x4c01, 0x7616, 0x4010, 0x29ac, 0xe38a, 0xfdee, 0x1, 0x0);
        gbc.writeMem(0x4c01, { 0x11, 0x84, 0x8b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01AE
        gbc.setState(0x7111, 0x45d6, 0x4e20, 0xb086, 0xa0a9, 0x84a8, 0x0, 0x0);
        gbc.writeMem(0x7111, { 0x11, 0x8e, 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0x7114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01AF
        gbc.setState(0x21a0, 0xd64f, 0x520, 0x96bf, 0x115d, 0x543f, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0x11, 0x68, 0xcf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01B0
        gbc.setState(0x9db3, 0x13dd, 0x5c00, 0x6b5, 0x95f6, 0x8d47, 0x1, 0x1);
        gbc.writeMem(0x9db3, { 0x11, 0x87, 0x86 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x13dd, gbc.sp());
        EXPECT(0x9db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9db3));
        EXPECT(0x87, gbc.readMem(0x9db4));
        EXPECT(0x86, gbc.readMem(0x9db5));
        // 11 01B1
        gbc.setState(0xb18d, 0x755a, 0x1020, 0x8d44, 0x6292, 0x8a28, 0x0, 0x1);
        gbc.writeMem(0xb18d, { 0x11, 0x16, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x755a, gbc.sp());
        EXPECT(0xb190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb18d));
        EXPECT(0x16, gbc.readMem(0xb18e));
        EXPECT(0x85, gbc.readMem(0xb18f));
        // 11 01B2
        gbc.setState(0x7e48, 0x2e8e, 0xa190, 0x49fc, 0xacd3, 0x97d7, 0x1, 0x1);
        gbc.writeMem(0x7e48, { 0x11, 0xca, 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2e8e, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01B3
        gbc.setState(0x5afe, 0x7239, 0xa7d0, 0xd478, 0x8d61, 0x4e88, 0x1, 0x1);
        gbc.writeMem(0x5afe, { 0x11, 0x28, 0xdd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7239, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01B4
        gbc.setState(0x500a, 0xafd4, 0xc560, 0x7c84, 0x4b19, 0xc632, 0x0, 0x1);
        gbc.writeMem(0x500a, { 0x11, 0xe2, 0xed });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01B5
        gbc.setState(0x5e44, 0xb1fd, 0xb790, 0x7717, 0xa9c1, 0x5b41, 0x0, 0x1);
        gbc.writeMem(0x5e44, { 0x11, 0xe0, 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01B6
        gbc.setState(0xd13, 0xcf83, 0xb830, 0xabb, 0xdedf, 0x13c6, 0x1, 0x0);
        gbc.writeMem(0xd13, { 0x11, 0x74, 0xe7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01B7
        gbc.setState(0x9599, 0x9dc, 0x12a0, 0x4045, 0x6f0, 0xba0a, 0x0, 0x1);
        gbc.writeMem(0x9599, { 0x11, 0xa8, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9dc, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9599));
        EXPECT(0xa8, gbc.readMem(0x959a));
        EXPECT(0x1, gbc.readMem(0x959b));
        // 11 01B8
        gbc.setState(0xc25b, 0xfa1, 0x4fc0, 0x64b6, 0xcdec, 0x4c98, 0x1, 0x1);
        gbc.writeMem(0xc25b, { 0x11, 0xf5, 0xb7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc25b));
        EXPECT(0xf5, gbc.readMem(0xc25c));
        EXPECT(0xb7, gbc.readMem(0xc25d));
        // 11 01B9
        gbc.setState(0xcab0, 0xb737, 0x7bd0, 0x3b21, 0xa2f5, 0xde37, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0x11, 0x8f, 0xe4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcab0));
        EXPECT(0x8f, gbc.readMem(0xcab1));
        EXPECT(0xe4, gbc.readMem(0xcab2));
        // 11 01BA
        gbc.setState(0x64c2, 0x4bdc, 0x1f70, 0xdf64, 0x1fd3, 0xc696, 0x1, 0x1);
        gbc.writeMem(0x64c2, { 0x11, 0x34, 0x64 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4bdc, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01BB
        gbc.setState(0x6a1, 0x2c3c, 0xaa20, 0x302a, 0x46c5, 0xdb63, 0x0, 0x0);
        gbc.writeMem(0x6a1, { 0x11, 0x6, 0x9a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c3c, gbc.sp());
        EXPECT(0x6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01BC
        gbc.setState(0xb6f0, 0x5e1, 0x2190, 0xad23, 0x9175, 0xcb4e, 0x1, 0x1);
        gbc.writeMem(0xb6f0, { 0x11, 0x93, 0xae });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5e1, gbc.sp());
        EXPECT(0xb6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb6f0));
        EXPECT(0x93, gbc.readMem(0xb6f1));
        EXPECT(0xae, gbc.readMem(0xb6f2));
        // 11 01BD
        gbc.setState(0x1906, 0x4a3d, 0x5d30, 0x9175, 0xb613, 0xb4bd, 0x0, 0x0);
        gbc.writeMem(0x1906, { 0x11, 0x77, 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a3d, gbc.sp());
        EXPECT(0x1909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01BE
        gbc.setState(0x18e, 0x7ac3, 0x7c30, 0x781d, 0xf39a, 0x4984, 0x1, 0x1);
        gbc.writeMem(0x18e, { 0x11, 0xc1, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01BF
        gbc.setState(0x92be, 0x2ae2, 0x7630, 0x41ea, 0x5692, 0x9220, 0x0, 0x0);
        gbc.writeMem(0x92be, { 0x11, 0xd6, 0x2a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2ae2, gbc.sp());
        EXPECT(0x92c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x92be));
        EXPECT(0xd6, gbc.readMem(0x92bf));
        EXPECT(0x2a, gbc.readMem(0x92c0));
        // 11 01C0
        gbc.setState(0x7728, 0x7634, 0xcd70, 0x30f7, 0xd938, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0x7728, { 0x11, 0x94, 0x7b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0x772b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01C1
        gbc.setState(0x99b9, 0x1b50, 0xf390, 0xc7b1, 0x222c, 0x56db, 0x1, 0x1);
        gbc.writeMem(0x99b9, { 0x11, 0xf0, 0x3e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x99b9));
        EXPECT(0xf0, gbc.readMem(0x99ba));
        EXPECT(0x3e, gbc.readMem(0x99bb));
        // 11 01C2
        gbc.setState(0x8b53, 0x9d43, 0x4f90, 0xfb56, 0x601, 0x300b, 0x1, 0x0);
        gbc.writeMem(0x8b53, { 0x11, 0xcb, 0xaa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9d43, gbc.sp());
        EXPECT(0x8b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8b53));
        EXPECT(0xcb, gbc.readMem(0x8b54));
        EXPECT(0xaa, gbc.readMem(0x8b55));
        // 11 01C3
        gbc.setState(0x4f7c, 0x935b, 0x5c00, 0x817e, 0xdd5, 0xfc6b, 0x0, 0x0);
        gbc.writeMem(0x4f7c, { 0x11, 0xe, 0xea });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x935b, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01C4
        gbc.setState(0x6d9f, 0x6c3b, 0xf910, 0xc1a0, 0x6ee9, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x6d9f, { 0x11, 0x6f, 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6c3b, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01C5
        gbc.setState(0x3790, 0x8f9a, 0x99f0, 0x85f, 0xb1b7, 0x1eed, 0x0, 0x1);
        gbc.writeMem(0x3790, { 0x11, 0x47, 0xf6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8f9a, gbc.sp());
        EXPECT(0x3793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01C6
        gbc.setState(0x6914, 0x7283, 0xefe0, 0xe38, 0xddbe, 0xfeb7, 0x1, 0x0);
        gbc.writeMem(0x6914, { 0x11, 0x7b, 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x6917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01C7
        gbc.setState(0x3933, 0x4522, 0xe9c0, 0xf64f, 0x1a5c, 0x5fad, 0x1, 0x0);
        gbc.writeMem(0x3933, { 0x11, 0xed, 0x9f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4522, gbc.sp());
        EXPECT(0x3936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01C8
        gbc.setState(0x56f0, 0x59e4, 0x56b0, 0xed27, 0x6a7b, 0xee74, 0x1, 0x1);
        gbc.writeMem(0x56f0, { 0x11, 0xab, 0xf5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01C9
        gbc.setState(0xb21e, 0xde66, 0xf280, 0xde7a, 0x8923, 0xf0e4, 0x0, 0x0);
        gbc.writeMem(0xb21e, { 0x11, 0x7d, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xde66, gbc.sp());
        EXPECT(0xb221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb21e));
        EXPECT(0x7d, gbc.readMem(0xb21f));
        EXPECT(0xe9, gbc.readMem(0xb220));
        // 11 01CA
        gbc.setState(0x7c8e, 0xba7e, 0x2970, 0xcc5f, 0xb45d, 0xa5f7, 0x0, 0x1);
        gbc.writeMem(0x7c8e, { 0x11, 0x6f, 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xba7e, gbc.sp());
        EXPECT(0x7c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01CB
        gbc.setState(0xd46, 0x25fd, 0x1d50, 0xe118, 0x1b84, 0xec7f, 0x1, 0x0);
        gbc.writeMem(0xd46, { 0x11, 0x29, 0xd4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x25fd, gbc.sp());
        EXPECT(0xd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01CC
        gbc.setState(0xb90b, 0xaffe, 0x59b0, 0x844e, 0xcbfe, 0xaa1f, 0x0, 0x0);
        gbc.writeMem(0xb90b, { 0x11, 0xb5, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb90b));
        EXPECT(0xb5, gbc.readMem(0xb90c));
        EXPECT(0xf9, gbc.readMem(0xb90d));
        // 11 01CD
        gbc.setState(0x7ac8, 0xa908, 0x1a30, 0x921f, 0x4f87, 0x5da9, 0x0, 0x0);
        gbc.writeMem(0x7ac8, { 0x11, 0xa0, 0xf7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa908, gbc.sp());
        EXPECT(0x7acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01CE
        gbc.setState(0xa02e, 0x756c, 0xd0c0, 0x24f5, 0xad42, 0x841c, 0x0, 0x1);
        gbc.writeMem(0xa02e, { 0x11, 0x44, 0x98 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0xa031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa02e));
        EXPECT(0x44, gbc.readMem(0xa02f));
        EXPECT(0x98, gbc.readMem(0xa030));
        // 11 01CF
        gbc.setState(0xde63, 0x4b45, 0x5c90, 0xa21b, 0xc7f6, 0xf635, 0x1, 0x0);
        gbc.writeMem(0xde63, { 0x11, 0xd6, 0xae });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0xde66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xde63));
        EXPECT(0xd6, gbc.readMem(0xde64));
        EXPECT(0xae, gbc.readMem(0xde65));
        // 11 01D0
        gbc.setState(0x9ad, 0xeb36, 0x77b0, 0xb9a6, 0xfe0, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x9ad, { 0x11, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01D1
        gbc.setState(0x5e04, 0x4bb4, 0x7aa0, 0x2503, 0x9988, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x5e04, { 0x11, 0xa1, 0xe8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01D2
        gbc.setState(0x2bd4, 0xa9de, 0x1240, 0x7af7, 0xd530, 0xa89b, 0x0, 0x0);
        gbc.writeMem(0x2bd4, { 0x11, 0x21, 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa9de, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01D3
        gbc.setState(0xc15f, 0x85a9, 0x4020, 0x639c, 0xa462, 0x3b7b, 0x1, 0x1);
        gbc.writeMem(0xc15f, { 0x11, 0xd0, 0x8b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc15f));
        EXPECT(0xd0, gbc.readMem(0xc160));
        EXPECT(0x8b, gbc.readMem(0xc161));
        // 11 01D4
        gbc.setState(0xaf8a, 0x66bd, 0x1fa0, 0x3b26, 0x6a59, 0x5ed0, 0x0, 0x0);
        gbc.writeMem(0xaf8a, { 0x11, 0xd9, 0xa });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x66bd, gbc.sp());
        EXPECT(0xaf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaf8a));
        EXPECT(0xd9, gbc.readMem(0xaf8b));
        EXPECT(0xa, gbc.readMem(0xaf8c));
        // 11 01D5
        gbc.setState(0x7b1c, 0xe2d, 0x1e30, 0x795c, 0x9722, 0x751a, 0x0, 0x1);
        gbc.writeMem(0x7b1c, { 0x11, 0xb0, 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01D6
        gbc.setState(0x3e6c, 0xcc8, 0x9bf0, 0x8b15, 0x67e3, 0xa04f, 0x1, 0x0);
        gbc.writeMem(0x3e6c, { 0x11, 0x4, 0xad });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcc8, gbc.sp());
        EXPECT(0x3e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01D7
        gbc.setState(0xc81a, 0x479e, 0x3ec0, 0xb4c2, 0x8bd2, 0x3484, 0x1, 0x1);
        gbc.writeMem(0xc81a, { 0x11, 0x7b, 0xab });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0xc81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc81a));
        EXPECT(0x7b, gbc.readMem(0xc81b));
        EXPECT(0xab, gbc.readMem(0xc81c));
        // 11 01D8
        gbc.setState(0xbe3d, 0xb4e2, 0x7c40, 0xa86, 0xe05d, 0xeb7e, 0x1, 0x1);
        gbc.writeMem(0xbe3d, { 0x11, 0x26, 0x65 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0xbe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbe3d));
        EXPECT(0x26, gbc.readMem(0xbe3e));
        EXPECT(0x65, gbc.readMem(0xbe3f));
        // 11 01D9
        gbc.setState(0xacef, 0x8e60, 0x9330, 0xafc1, 0xeeb7, 0x9723, 0x0, 0x0);
        gbc.writeMem(0xacef, { 0x11, 0xd5, 0x59 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8e60, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xacef));
        EXPECT(0xd5, gbc.readMem(0xacf0));
        EXPECT(0x59, gbc.readMem(0xacf1));
        // 11 01DA
        gbc.setState(0xbfe5, 0xff4e, 0x68b0, 0x660a, 0x2616, 0x648b, 0x1, 0x1);
        gbc.writeMem(0xbfe5, { 0x11, 0x74, 0x24 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbfe5));
        EXPECT(0x74, gbc.readMem(0xbfe6));
        EXPECT(0x24, gbc.readMem(0xbfe7));
        // 11 01DB
        gbc.setState(0xe3b6, 0x62fb, 0x5b00, 0x4750, 0x85e, 0xd30, 0x0, 0x1);
        gbc.writeMem(0xe3b6, { 0x11, 0x78, 0x90 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe3b6));
        EXPECT(0x78, gbc.readMem(0xe3b7));
        EXPECT(0x90, gbc.readMem(0xe3b8));
        // 11 01DC
        gbc.setState(0x100c, 0x4106, 0xa660, 0x9664, 0xbf2b, 0x7484, 0x0, 0x1);
        gbc.writeMem(0x100c, { 0x11, 0xa7, 0x3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4106, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01DD
        gbc.setState(0x78d4, 0x516d, 0xd440, 0x6b27, 0xe847, 0x1e3, 0x1, 0x1);
        gbc.writeMem(0x78d4, { 0x11, 0x26, 0x1e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01DE
        gbc.setState(0xd0b2, 0x49e0, 0x1d30, 0x4b34, 0xeff, 0xbd77, 0x1, 0x1);
        gbc.writeMem(0xd0b2, { 0x11, 0x2f, 0x15 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x49e0, gbc.sp());
        EXPECT(0xd0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd0b2));
        EXPECT(0x2f, gbc.readMem(0xd0b3));
        EXPECT(0x15, gbc.readMem(0xd0b4));
        // 11 01DF
        gbc.setState(0x3b73, 0xfcb4, 0xf850, 0x96e6, 0x4380, 0xa23e, 0x1, 0x0);
        gbc.writeMem(0x3b73, { 0x11, 0x6a, 0x99 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfcb4, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01E0
        gbc.setState(0x6d5b, 0xa347, 0x9430, 0xb200, 0x4484, 0xf8f9, 0x0, 0x0);
        gbc.writeMem(0x6d5b, { 0x11, 0x24, 0x22 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa347, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01E1
        gbc.setState(0x1336, 0x654e, 0x74d0, 0xf77, 0xe917, 0x3e91, 0x1, 0x0);
        gbc.writeMem(0x1336, { 0x11, 0xe0, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x1339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01E2
        gbc.setState(0x7390, 0x8591, 0xbbe0, 0xb7ba, 0xd828, 0xecd9, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0x11, 0xc1, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8591, gbc.sp());
        EXPECT(0x7393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01E3
        gbc.setState(0x76d0, 0x94af, 0x560, 0xdace, 0xc2c6, 0x9393, 0x1, 0x0);
        gbc.writeMem(0x76d0, { 0x11, 0x20, 0xcc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0x76d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01E4
        gbc.setState(0x6efc, 0x8c07, 0xb450, 0x7b4e, 0xcf90, 0xb560, 0x1, 0x0);
        gbc.writeMem(0x6efc, { 0x11, 0xa0, 0xfd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01E5
        gbc.setState(0x3cf8, 0x626f, 0xa340, 0x97db, 0x92bf, 0x17f2, 0x1, 0x0);
        gbc.writeMem(0x3cf8, { 0x11, 0xc9, 0xeb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x626f, gbc.sp());
        EXPECT(0x3cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01E6
        gbc.setState(0x3b, 0x71fd, 0x9f10, 0x316a, 0x707f, 0x2ff2, 0x1, 0x1);
        gbc.writeMem(0x3b, { 0x11, 0x1, 0xa2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01E7
        gbc.setState(0x3e34, 0x9e0b, 0xc180, 0x9350, 0x13e8, 0xbfdf, 0x0, 0x1);
        gbc.writeMem(0x3e34, { 0x11, 0xd4, 0x96 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9e0b, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01E8
        gbc.setState(0x3411, 0xe4f2, 0x99c0, 0xc8bf, 0xc65b, 0x74dc, 0x0, 0x0);
        gbc.writeMem(0x3411, { 0x11, 0x21, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0x3414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01EA
        gbc.setState(0xc1d3, 0xb7c7, 0xb0f0, 0x4019, 0x593e, 0x863b, 0x0, 0x1);
        gbc.writeMem(0xc1d3, { 0x11, 0x6c, 0x6b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc1d3));
        EXPECT(0x6c, gbc.readMem(0xc1d4));
        EXPECT(0x6b, gbc.readMem(0xc1d5));
        // 11 01EB
        gbc.setState(0x6ce7, 0xe1ac, 0xe820, 0x5881, 0x19cb, 0xf32f, 0x1, 0x0);
        gbc.writeMem(0x6ce7, { 0x11, 0x41, 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01ED
        gbc.setState(0xb271, 0xa7f8, 0x6840, 0xd978, 0x6324, 0x365e, 0x0, 0x1);
        gbc.writeMem(0xb271, { 0x11, 0x45, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb271));
        EXPECT(0x45, gbc.readMem(0xb272));
        EXPECT(0x30, gbc.readMem(0xb273));
        // 11 01EE
        gbc.setState(0xcd2, 0x9ab9, 0xc1e0, 0xc5fa, 0x30f7, 0xe805, 0x0, 0x0);
        gbc.writeMem(0xcd2, { 0x11, 0x6c, 0xf4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9ab9, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01EF
        gbc.setState(0x8a0, 0xf896, 0xa930, 0xdb19, 0xdc79, 0x517b, 0x0, 0x0);
        gbc.writeMem(0x8a0, { 0x11, 0xaf, 0x60 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf896, gbc.sp());
        EXPECT(0x8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F0
        gbc.setState(0x92b9, 0x4d5e, 0x6110, 0x21ee, 0xb57d, 0x789f, 0x0, 0x1);
        gbc.writeMem(0x92b9, { 0x11, 0x60, 0x71 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4d5e, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x92b9));
        EXPECT(0x60, gbc.readMem(0x92ba));
        EXPECT(0x71, gbc.readMem(0x92bb));
        // 11 01F1
        gbc.setState(0x13d0, 0x9e35, 0xdba0, 0x4c32, 0x2fc9, 0x4de8, 0x1, 0x1);
        gbc.writeMem(0x13d0, { 0x11, 0x14, 0x60 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9e35, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01F2
        gbc.setState(0x6cae, 0x32f7, 0x1790, 0x81d8, 0x71bb, 0x9954, 0x1, 0x0);
        gbc.writeMem(0x6cae, { 0x11, 0x9e, 0x62 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0x6cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F3
        gbc.setState(0x6158, 0x7752, 0x26f0, 0x1858, 0xc2c1, 0xa448, 0x0, 0x0);
        gbc.writeMem(0x6158, { 0x11, 0xa6, 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7752, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F4
        gbc.setState(0x371d, 0xe40b, 0xee70, 0xf8c3, 0xd1bb, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x371d, { 0x11, 0xb7, 0xe5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F5
        gbc.setState(0x1219, 0xb94d, 0x8040, 0xfeca, 0x2f6f, 0xc352, 0x0, 0x1);
        gbc.writeMem(0x1219, { 0x11, 0xd, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0x121c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01F6
        gbc.setState(0x226b, 0xbf29, 0xd8f0, 0xa2ed, 0xe7bc, 0xe54, 0x0, 0x1);
        gbc.writeMem(0x226b, { 0x11, 0xf9, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x226e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F7
        gbc.setState(0x62cb, 0x4808, 0xe650, 0xa0ce, 0x22b3, 0xec5e, 0x1, 0x1);
        gbc.writeMem(0x62cb, { 0x11, 0x34, 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4808, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F8
        gbc.setState(0x3, 0x3dbe, 0x33f0, 0x8112, 0x9dc5, 0x8334, 0x1, 0x1);
        gbc.writeMem(0x3, { 0x11, 0xe1, 0xef });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01F9
        gbc.setState(0x56df, 0xf4ac, 0xa2f0, 0xb72d, 0xa66d, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0x56df, { 0x11, 0xc1, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 01FA
        gbc.setState(0xa762, 0x7330, 0xb590, 0x5970, 0x9fef, 0xf257, 0x0, 0x1);
        gbc.writeMem(0xa762, { 0x11, 0x1d, 0xf4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7330, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa762));
        EXPECT(0x1d, gbc.readMem(0xa763));
        EXPECT(0xf4, gbc.readMem(0xa764));
        // 11 01FB
        gbc.setState(0xd77a, 0xa749, 0x2000, 0xf119, 0xb575, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0xd77a, { 0x11, 0x0, 0xb3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa749, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd77a));
        EXPECT(0x0, gbc.readMem(0xd77b));
        EXPECT(0xb3, gbc.readMem(0xd77c));
        // 11 01FC
        gbc.setState(0x56bb, 0x2b5b, 0xb0a0, 0x4adb, 0xfc22, 0x7f6c, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x11, 0x1c, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2b5b, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01FD
        gbc.setState(0x1993, 0x165a, 0xec60, 0x149a, 0xf0c9, 0x2a69, 0x1, 0x0);
        gbc.writeMem(0x1993, { 0x11, 0x37, 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 01FE
        gbc.setState(0xcf2d, 0x6dbf, 0x4410, 0xf660, 0xd60, 0x7b04, 0x0, 0x0);
        gbc.writeMem(0xcf2d, { 0x11, 0x30, 0x1b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcf2d));
        EXPECT(0x30, gbc.readMem(0xcf2e));
        EXPECT(0x1b, gbc.readMem(0xcf2f));
        // 11 01FF
        gbc.setState(0x566c, 0xb9a7, 0xf540, 0xc150, 0x7ff7, 0xf4ba, 0x0, 0x1);
        gbc.writeMem(0x566c, { 0x11, 0x3c, 0x9e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0200
        gbc.setState(0xb9fc, 0x8274, 0x1670, 0x29d1, 0x50ee, 0x5e05, 0x0, 0x1);
        gbc.writeMem(0xb9fc, { 0x11, 0x89, 0xcc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb9fc));
        EXPECT(0x89, gbc.readMem(0xb9fd));
        EXPECT(0xcc, gbc.readMem(0xb9fe));
        // 11 0201
        gbc.setState(0x1911, 0x9e93, 0xf600, 0x2d98, 0x1c24, 0x461e, 0x0, 0x1);
        gbc.writeMem(0x1911, { 0x11, 0x6a, 0x3a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0x1914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0202
        gbc.setState(0x1fff, 0x39d2, 0x7a30, 0x725a, 0xe4e, 0xa447, 0x0, 0x1);
        gbc.writeMem(0x1fff, { 0x11, 0xb1, 0x18 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0x2002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0203
        gbc.setState(0xd38c, 0x62ef, 0xc290, 0x942, 0x2e32, 0x754f, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0x11, 0x39, 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xd38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd38c));
        EXPECT(0x39, gbc.readMem(0xd38d));
        EXPECT(0x85, gbc.readMem(0xd38e));
        // 11 0204
        gbc.setState(0xc3d0, 0xeaa7, 0x39a0, 0x6b0c, 0x5e05, 0xbaea, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0x11, 0xeb, 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc3d0));
        EXPECT(0xeb, gbc.readMem(0xc3d1));
        EXPECT(0x81, gbc.readMem(0xc3d2));
        // 11 0205
        gbc.setState(0xcf25, 0x4b59, 0x83c0, 0x31f9, 0x5b79, 0x5469, 0x0, 0x1);
        gbc.writeMem(0xcf25, { 0x11, 0x1a, 0x71 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4b59, gbc.sp());
        EXPECT(0xcf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcf25));
        EXPECT(0x1a, gbc.readMem(0xcf26));
        EXPECT(0x71, gbc.readMem(0xcf27));
        // 11 0206
        gbc.setState(0x1f39, 0x786a, 0x5b60, 0x7657, 0x4836, 0xa977, 0x1, 0x0);
        gbc.writeMem(0x1f39, { 0x11, 0x5d, 0xf8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x786a, gbc.sp());
        EXPECT(0x1f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0207
        gbc.setState(0x1b28, 0xb11a, 0x2640, 0x650b, 0x1114, 0x8aeb, 0x0, 0x1);
        gbc.writeMem(0x1b28, { 0x11, 0xea, 0xd8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb11a, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0208
        gbc.setState(0xafcf, 0x9a56, 0x44c0, 0x816e, 0x5ae6, 0x57ef, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0x11, 0x3b, 0x1a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9a56, gbc.sp());
        EXPECT(0xafd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xafcf));
        EXPECT(0x3b, gbc.readMem(0xafd0));
        EXPECT(0x1a, gbc.readMem(0xafd1));
        // 11 0209
        gbc.setState(0xb1a5, 0x429d, 0x6ee0, 0x352d, 0x4327, 0xacac, 0x0, 0x0);
        gbc.writeMem(0xb1a5, { 0x11, 0x8a, 0x73 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0xb1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb1a5));
        EXPECT(0x8a, gbc.readMem(0xb1a6));
        EXPECT(0x73, gbc.readMem(0xb1a7));
        // 11 020A
        gbc.setState(0x7655, 0x1f80, 0xbe40, 0x300a, 0xb20d, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0x7655, { 0x11, 0x94, 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f80, gbc.sp());
        EXPECT(0x7658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 020B
        gbc.setState(0xec4a, 0xb0b2, 0xd940, 0xd8eb, 0x2d6, 0xde5e, 0x1, 0x0);
        gbc.writeMem(0xec4a, { 0x11, 0x70, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb0b2, gbc.sp());
        EXPECT(0xec4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xec4a));
        EXPECT(0x70, gbc.readMem(0xec4b));
        EXPECT(0xc7, gbc.readMem(0xec4c));
        // 11 020C
        gbc.setState(0x8bad, 0xd2ff, 0xa1a0, 0xe820, 0xd164, 0x9edb, 0x1, 0x1);
        gbc.writeMem(0x8bad, { 0x11, 0xdc, 0xaa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd2ff, gbc.sp());
        EXPECT(0x8bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8bad));
        EXPECT(0xdc, gbc.readMem(0x8bae));
        EXPECT(0xaa, gbc.readMem(0x8baf));
        // 11 020D
        gbc.setState(0x9573, 0x3ded, 0xe510, 0x8f79, 0xb290, 0xf1dd, 0x1, 0x1);
        gbc.writeMem(0x9573, { 0x11, 0xca, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9573));
        EXPECT(0xca, gbc.readMem(0x9574));
        EXPECT(0x1a, gbc.readMem(0x9575));
        // 11 020E
        gbc.setState(0x3ffe, 0x3b8b, 0x520, 0x1610, 0x4118, 0x6dd6, 0x0, 0x0);
        gbc.writeMem(0x3ffe, { 0x11, 0xf7, 0xb8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 020F
        gbc.setState(0xc117, 0x78dd, 0xe190, 0x231b, 0x3bf0, 0x293e, 0x1, 0x0);
        gbc.writeMem(0xc117, { 0x11, 0xbd, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x78dd, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc117));
        EXPECT(0xbd, gbc.readMem(0xc118));
        EXPECT(0xc1, gbc.readMem(0xc119));
        // 11 0210
        gbc.setState(0x17c5, 0x108e, 0x1ef0, 0x47ab, 0x3ab9, 0xacfc, 0x0, 0x1);
        gbc.writeMem(0x17c5, { 0x11, 0x74, 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x108e, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0211
        gbc.setState(0xaada, 0x2f6f, 0xb010, 0xba6d, 0x5647, 0xfce3, 0x1, 0x1);
        gbc.writeMem(0xaada, { 0x11, 0xdf, 0xbc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xaadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaada));
        EXPECT(0xdf, gbc.readMem(0xaadb));
        EXPECT(0xbc, gbc.readMem(0xaadc));
        // 11 0212
        gbc.setState(0x8df3, 0xa2a5, 0xc8d0, 0xee6a, 0x6aee, 0x4e21, 0x1, 0x0);
        gbc.writeMem(0x8df3, { 0x11, 0x4a, 0xa6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa2a5, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8df3));
        EXPECT(0x4a, gbc.readMem(0x8df4));
        EXPECT(0xa6, gbc.readMem(0x8df5));
        // 11 0213
        gbc.setState(0x288d, 0xe2cd, 0x4ff0, 0x25db, 0xf1eb, 0xca2e, 0x1, 0x0);
        gbc.writeMem(0x288d, { 0x11, 0x46, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0214
        gbc.setState(0xadf1, 0x40f5, 0xc2e0, 0xfff3, 0xc4be, 0x808f, 0x1, 0x0);
        gbc.writeMem(0xadf1, { 0x11, 0x7b, 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x40f5, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xadf1));
        EXPECT(0x7b, gbc.readMem(0xadf2));
        EXPECT(0x7d, gbc.readMem(0xadf3));
        // 11 0215
        gbc.setState(0x5151, 0x8359, 0x7c70, 0xe54e, 0x2bc4, 0x8758, 0x0, 0x0);
        gbc.writeMem(0x5151, { 0x11, 0x6c, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0x5154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0216
        gbc.setState(0x5eab, 0xc03d, 0x7750, 0xd41, 0xb43e, 0x5492, 0x0, 0x1);
        gbc.writeMem(0x5eab, { 0x11, 0x2b, 0x20 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x5eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0217
        gbc.setState(0xbe3b, 0x1f07, 0x1670, 0x4418, 0x1eb5, 0x3226, 0x0, 0x0);
        gbc.writeMem(0xbe3b, { 0x11, 0xfe, 0xd4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbe3b));
        EXPECT(0xfe, gbc.readMem(0xbe3c));
        EXPECT(0xd4, gbc.readMem(0xbe3d));
        // 11 0218
        gbc.setState(0xee1d, 0x11e2, 0x6950, 0x700a, 0x1d66, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0xee1d, { 0x11, 0xa9, 0xc6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0xee20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xee1d));
        EXPECT(0xa9, gbc.readMem(0xee1e));
        EXPECT(0xc6, gbc.readMem(0xee1f));
        // 11 0219
        gbc.setState(0xdf36, 0x2c2, 0x3c40, 0x5cba, 0x1c26, 0x7b96, 0x1, 0x0);
        gbc.writeMem(0xdf36, { 0x11, 0xb0, 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2c2, gbc.sp());
        EXPECT(0xdf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdf36));
        EXPECT(0xb0, gbc.readMem(0xdf37));
        EXPECT(0x5d, gbc.readMem(0xdf38));
        // 11 021A
        gbc.setState(0x9d6f, 0x98, 0xa00, 0x6ec9, 0x350b, 0xf32e, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0x11, 0xfb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x98, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9d6f));
        EXPECT(0xfb, gbc.readMem(0x9d70));
        EXPECT(0x3c, gbc.readMem(0x9d71));
        // 11 021B
        gbc.setState(0x62d1, 0xd5bb, 0x11d0, 0xde5d, 0x1409, 0x7b16, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0x11, 0xf0, 0x83 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x62d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 021C
        gbc.setState(0x7b2e, 0x5c33, 0xa070, 0x32e4, 0xe2e1, 0x639e, 0x1, 0x1);
        gbc.writeMem(0x7b2e, { 0x11, 0xf2, 0xb0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5c33, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 021D
        gbc.setState(0x3b51, 0x8ac5, 0x7df0, 0x8f9d, 0x3eb8, 0x15a5, 0x0, 0x0);
        gbc.writeMem(0x3b51, { 0x11, 0xff, 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0x3b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 021E
        gbc.setState(0xd345, 0x291a, 0x5c40, 0xc650, 0x9bd3, 0xa17d, 0x1, 0x1);
        gbc.writeMem(0xd345, { 0x11, 0x39, 0xf3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0xd348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd345));
        EXPECT(0x39, gbc.readMem(0xd346));
        EXPECT(0xf3, gbc.readMem(0xd347));
        // 11 021F
        gbc.setState(0x9f6d, 0x9a17, 0xb2d0, 0x3779, 0x9389, 0x8bb2, 0x0, 0x0);
        gbc.writeMem(0x9f6d, { 0x11, 0xe0, 0xa7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9a17, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9f6d));
        EXPECT(0xe0, gbc.readMem(0x9f6e));
        EXPECT(0xa7, gbc.readMem(0x9f6f));
        // 11 0220
        gbc.setState(0xdac8, 0x3713, 0xecb0, 0x6cdb, 0x1312, 0x5289, 0x0, 0x1);
        gbc.writeMem(0xdac8, { 0x11, 0x93, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3713, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdac8));
        EXPECT(0x93, gbc.readMem(0xdac9));
        EXPECT(0x1, gbc.readMem(0xdaca));
        // 11 0221
        gbc.setState(0xaea8, 0xdb18, 0xea0, 0x1c14, 0xabc7, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0xaea8, { 0x11, 0xe6, 0x1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaea8));
        EXPECT(0xe6, gbc.readMem(0xaea9));
        EXPECT(0x1, gbc.readMem(0xaeaa));
        // 11 0223
        gbc.setState(0x7a5d, 0x76f6, 0x65c0, 0x7399, 0x9a4a, 0x3121, 0x1, 0x0);
        gbc.writeMem(0x7a5d, { 0x11, 0x94, 0xa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0224
        gbc.setState(0xee8b, 0x9573, 0xeaa0, 0xffe9, 0xb931, 0xe3cc, 0x0, 0x0);
        gbc.writeMem(0xee8b, { 0x11, 0x1a, 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9573, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xee8b));
        EXPECT(0x1a, gbc.readMem(0xee8c));
        EXPECT(0xa7, gbc.readMem(0xee8d));
        // 11 0225
        gbc.setState(0x600, 0x21a2, 0x68e0, 0x662a, 0x9656, 0x7224, 0x0, 0x1);
        gbc.writeMem(0x600, { 0x11, 0x1c, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x21a2, gbc.sp());
        EXPECT(0x603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0226
        gbc.setState(0x459f, 0xa732, 0x1b20, 0x8a04, 0x82f5, 0xfd4c, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0x11, 0x7d, 0xd7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa732, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0227
        gbc.setState(0x989f, 0x3df5, 0x3510, 0xd9f9, 0x39ba, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x989f, { 0x11, 0x39, 0x56 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3df5, gbc.sp());
        EXPECT(0x98a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x989f));
        EXPECT(0x39, gbc.readMem(0x98a0));
        EXPECT(0x56, gbc.readMem(0x98a1));
        // 11 0229
        gbc.setState(0x4ea4, 0x70c8, 0x50a0, 0x90c8, 0x11dc, 0xc59f, 0x0, 0x0);
        gbc.writeMem(0x4ea4, { 0x11, 0x93, 0xd2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 022A
        gbc.setState(0x1d35, 0xa15a, 0xb370, 0x55c8, 0xf655, 0xbd8f, 0x0, 0x0);
        gbc.writeMem(0x1d35, { 0x11, 0x55, 0x1b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 022C
        gbc.setState(0xb117, 0x21a9, 0x34f0, 0xf281, 0xe703, 0x3d1b, 0x0, 0x0);
        gbc.writeMem(0xb117, { 0x11, 0x9d, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x21a9, gbc.sp());
        EXPECT(0xb11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb117));
        EXPECT(0x9d, gbc.readMem(0xb118));
        EXPECT(0x6a, gbc.readMem(0xb119));
        // 11 022D
        gbc.setState(0x4526, 0x8ca2, 0x5490, 0xbed9, 0xbdc9, 0x3d56, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0x11, 0xc8, 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8ca2, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 022E
        gbc.setState(0x7154, 0x53b8, 0xa9b0, 0x458, 0x14e4, 0x957b, 0x0, 0x0);
        gbc.writeMem(0x7154, { 0x11, 0x4c, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x53b8, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 022F
        gbc.setState(0x3297, 0xbc51, 0x3020, 0xdc17, 0x18f8, 0xa504, 0x0, 0x1);
        gbc.writeMem(0x3297, { 0x11, 0x56, 0x43 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0230
        gbc.setState(0x99b6, 0x99a, 0x56a0, 0x7537, 0xff, 0x59df, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0x11, 0xe3, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x99b6));
        EXPECT(0xe3, gbc.readMem(0x99b7));
        EXPECT(0xd7, gbc.readMem(0x99b8));
        // 11 0231
        gbc.setState(0x4576, 0x9cfa, 0xd6b0, 0xcb7, 0xb339, 0x74a9, 0x0, 0x1);
        gbc.writeMem(0x4576, { 0x11, 0xf8, 0x8d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0232
        gbc.setState(0xcdaa, 0x83c8, 0xcb20, 0x6c2e, 0x4dbf, 0x55cd, 0x1, 0x1);
        gbc.writeMem(0xcdaa, { 0x11, 0x20, 0xdc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0xcdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcdaa));
        EXPECT(0x20, gbc.readMem(0xcdab));
        EXPECT(0xdc, gbc.readMem(0xcdac));
        // 11 0234
        gbc.setState(0x224, 0x4c15, 0x4cb0, 0xe1d3, 0x7703, 0x5a25, 0x1, 0x0);
        gbc.writeMem(0x224, { 0x11, 0x54, 0x33 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0235
        gbc.setState(0x15f2, 0x24cf, 0x9af0, 0xdc8f, 0x7a6e, 0x768c, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0x11, 0x75, 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x24cf, gbc.sp());
        EXPECT(0x15f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0236
        gbc.setState(0x2c36, 0xf80, 0x5240, 0x8b83, 0x493b, 0x4114, 0x1, 0x0);
        gbc.writeMem(0x2c36, { 0x11, 0x2b, 0x82 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0237
        gbc.setState(0x922e, 0xd3db, 0xb470, 0x36a7, 0xbaa7, 0x2deb, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0x11, 0x34, 0x63 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd3db, gbc.sp());
        EXPECT(0x9231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x922e));
        EXPECT(0x34, gbc.readMem(0x922f));
        EXPECT(0x63, gbc.readMem(0x9230));
        // 11 0238
        gbc.setState(0x968f, 0xf61c, 0xe2c0, 0x4d9a, 0x733c, 0xb67a, 0x0, 0x0);
        gbc.writeMem(0x968f, { 0x11, 0xe7, 0x8d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x968f));
        EXPECT(0xe7, gbc.readMem(0x9690));
        EXPECT(0x8d, gbc.readMem(0x9691));
        // 11 0239
        gbc.setState(0x493b, 0x7dc9, 0xeb0, 0x4fd8, 0xb3a8, 0x76eb, 0x0, 0x0);
        gbc.writeMem(0x493b, { 0x11, 0x33, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 023A
        gbc.setState(0x821f, 0x4416, 0x7ed0, 0x1512, 0x597b, 0xb548, 0x1, 0x0);
        gbc.writeMem(0x821f, { 0x11, 0x46, 0x68 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4416, gbc.sp());
        EXPECT(0x8222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x821f));
        EXPECT(0x46, gbc.readMem(0x8220));
        EXPECT(0x68, gbc.readMem(0x8221));
        // 11 023B
        gbc.setState(0xe853, 0x633c, 0xc910, 0x2378, 0xdb0e, 0x676b, 0x0, 0x0);
        gbc.writeMem(0xe853, { 0x11, 0xfd, 0x1e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe853));
        EXPECT(0xfd, gbc.readMem(0xe854));
        EXPECT(0x1e, gbc.readMem(0xe855));
        // 11 023C
        gbc.setState(0x5ed6, 0xbe74, 0x81d0, 0xbcc3, 0xf072, 0xdac, 0x0, 0x0);
        gbc.writeMem(0x5ed6, { 0x11, 0x31, 0xfb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 023D
        gbc.setState(0xc8d9, 0x342a, 0x87c0, 0xfb7f, 0x8964, 0xc376, 0x0, 0x1);
        gbc.writeMem(0xc8d9, { 0x11, 0x39, 0x72 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc8d9));
        EXPECT(0x39, gbc.readMem(0xc8da));
        EXPECT(0x72, gbc.readMem(0xc8db));
        // 11 023E
        gbc.setState(0x81c0, 0xe48f, 0xf5b0, 0x9f82, 0x1552, 0xad77, 0x1, 0x0);
        gbc.writeMem(0x81c0, { 0x11, 0x77, 0xc6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x81c0));
        EXPECT(0x77, gbc.readMem(0x81c1));
        EXPECT(0xc6, gbc.readMem(0x81c2));
        // 11 023F
        gbc.setState(0x1b60, 0x510f, 0x2360, 0x6674, 0xe27b, 0xf513, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0x11, 0x13, 0xcc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0240
        gbc.setState(0xb96f, 0x684b, 0x4150, 0xf640, 0xcef1, 0x7e30, 0x0, 0x1);
        gbc.writeMem(0xb96f, { 0x11, 0x3f, 0x19 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x684b, gbc.sp());
        EXPECT(0xb972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb96f));
        EXPECT(0x3f, gbc.readMem(0xb970));
        EXPECT(0x19, gbc.readMem(0xb971));
        // 11 0241
        gbc.setState(0x259f, 0x5cd1, 0x5770, 0xb4da, 0xbf51, 0x5fe5, 0x0, 0x0);
        gbc.writeMem(0x259f, { 0x11, 0xf9, 0xde });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5cd1, gbc.sp());
        EXPECT(0x25a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0242
        gbc.setState(0xd989, 0x83a7, 0x18d0, 0x188c, 0x5e37, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xd989, { 0x11, 0x26, 0x21 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x83a7, gbc.sp());
        EXPECT(0xd98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd989));
        EXPECT(0x26, gbc.readMem(0xd98a));
        EXPECT(0x21, gbc.readMem(0xd98b));
        // 11 0243
        gbc.setState(0xc09a, 0x77ec, 0xba30, 0xcd5, 0x34d4, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0xc09a, { 0x11, 0xf5, 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x77ec, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc09a));
        EXPECT(0xf5, gbc.readMem(0xc09b));
        EXPECT(0x9d, gbc.readMem(0xc09c));
        // 11 0244
        gbc.setState(0xe4c4, 0x60e5, 0x4630, 0x74f2, 0xd648, 0x320a, 0x0, 0x0);
        gbc.writeMem(0xe4c4, { 0x11, 0x37, 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe4c4));
        EXPECT(0x37, gbc.readMem(0xe4c5));
        EXPECT(0xbc, gbc.readMem(0xe4c6));
        // 11 0245
        gbc.setState(0x4862, 0xfc1c, 0xd7a0, 0x14f1, 0x73bc, 0xd1f7, 0x1, 0x1);
        gbc.writeMem(0x4862, { 0x11, 0x86, 0xf0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfc1c, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0246
        gbc.setState(0xe13d, 0xbe15, 0xae60, 0x4d5d, 0x9e3c, 0x2f6c, 0x1, 0x1);
        gbc.writeMem(0xe13d, { 0x11, 0xd9, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbe15, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe13d));
        EXPECT(0xd9, gbc.readMem(0xe13e));
        EXPECT(0x61, gbc.readMem(0xe13f));
        // 11 0247
        gbc.setState(0xdda5, 0x7b11, 0xf2d0, 0xd8a1, 0x2900, 0x7813, 0x0, 0x1);
        gbc.writeMem(0xdda5, { 0x11, 0x4e, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7b11, gbc.sp());
        EXPECT(0xdda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdda5));
        EXPECT(0x4e, gbc.readMem(0xdda6));
        EXPECT(0x7f, gbc.readMem(0xdda7));
        // 11 0248
        gbc.setState(0x3c30, 0xe1a6, 0x22d0, 0x705e, 0x9e2d, 0xc46f, 0x0, 0x0);
        gbc.writeMem(0x3c30, { 0x11, 0x8c, 0xce });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0249
        gbc.setState(0x9a2d, 0xa30d, 0xd6a0, 0xb561, 0x8dc9, 0x13e1, 0x0, 0x1);
        gbc.writeMem(0x9a2d, { 0x11, 0x20, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9a2d));
        EXPECT(0x20, gbc.readMem(0x9a2e));
        EXPECT(0x18, gbc.readMem(0x9a2f));
        // 11 024A
        gbc.setState(0x2e4d, 0xd129, 0xae20, 0x512a, 0xd65, 0xa93e, 0x0, 0x1);
        gbc.writeMem(0x2e4d, { 0x11, 0xbe, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0x2e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 024B
        gbc.setState(0xaa5a, 0xdf4a, 0xacf0, 0x4878, 0xaa80, 0xa125, 0x1, 0x0);
        gbc.writeMem(0xaa5a, { 0x11, 0xa0, 0x4f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0xaa5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaa5a));
        EXPECT(0xa0, gbc.readMem(0xaa5b));
        EXPECT(0x4f, gbc.readMem(0xaa5c));
        // 11 024C
        gbc.setState(0xa91a, 0xb5cc, 0x2320, 0xf7e3, 0xe0d5, 0xdf86, 0x0, 0x1);
        gbc.writeMem(0xa91a, { 0x11, 0xa5, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb5cc, gbc.sp());
        EXPECT(0xa91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa91a));
        EXPECT(0xa5, gbc.readMem(0xa91b));
        EXPECT(0xb5, gbc.readMem(0xa91c));
        // 11 024D
        gbc.setState(0x1adf, 0xa1ad, 0x430, 0x1494, 0x7395, 0x7885, 0x0, 0x0);
        gbc.writeMem(0x1adf, { 0x11, 0xe, 0x19 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0x1ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 024E
        gbc.setState(0x99ff, 0x330, 0xf960, 0x22ca, 0x8195, 0x5783, 0x0, 0x0);
        gbc.writeMem(0x99ff, { 0x11, 0x8a, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0x9a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x99ff));
        EXPECT(0x8a, gbc.readMem(0x9a00));
        EXPECT(0xf7, gbc.readMem(0x9a01));
        // 11 024F
        gbc.setState(0x496f, 0xe365, 0x380, 0xd372, 0x68e5, 0xbaf, 0x0, 0x1);
        gbc.writeMem(0x496f, { 0x11, 0xa2, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe365, gbc.sp());
        EXPECT(0x4972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0251
        gbc.setState(0x1f13, 0xba2d, 0x9190, 0x60fe, 0x4692, 0x4963, 0x1, 0x0);
        gbc.writeMem(0x1f13, { 0x11, 0xa5, 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xba2d, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0252
        gbc.setState(0x6fb6, 0xd113, 0xb730, 0xc7c4, 0x882d, 0x95ad, 0x1, 0x1);
        gbc.writeMem(0x6fb6, { 0x11, 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0x6fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0253
        gbc.setState(0xd945, 0x5734, 0x2060, 0xf304, 0x78b9, 0x8262, 0x1, 0x1);
        gbc.writeMem(0xd945, { 0x11, 0x55, 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd945));
        EXPECT(0x55, gbc.readMem(0xd946));
        EXPECT(0x5, gbc.readMem(0xd947));
        // 11 0254
        gbc.setState(0xb89d, 0x6153, 0xb460, 0x1022, 0x954, 0x89f6, 0x0, 0x0);
        gbc.writeMem(0xb89d, { 0x11, 0x1a, 0xb6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb89d));
        EXPECT(0x1a, gbc.readMem(0xb89e));
        EXPECT(0xb6, gbc.readMem(0xb89f));
        // 11 0255
        gbc.setState(0xc68, 0xf6db, 0xc5e0, 0x8e5e, 0x4221, 0xad3f, 0x1, 0x1);
        gbc.writeMem(0xc68, { 0x11, 0x2a, 0xe3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf6db, gbc.sp());
        EXPECT(0xc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0256
        gbc.setState(0xd6ff, 0x319b, 0x46d0, 0x4a0d, 0x322f, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0xd6ff, { 0x11, 0x48, 0xcf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd6ff));
        EXPECT(0x48, gbc.readMem(0xd700));
        EXPECT(0xcf, gbc.readMem(0xd701));
        // 11 0257
        gbc.setState(0xa87b, 0x941, 0x370, 0xec1d, 0x27d9, 0x593a, 0x0, 0x1);
        gbc.writeMem(0xa87b, { 0x11, 0x20, 0xfe });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa87b));
        EXPECT(0x20, gbc.readMem(0xa87c));
        EXPECT(0xfe, gbc.readMem(0xa87d));
        // 11 0258
        gbc.setState(0x68c7, 0x8e4f, 0x5be0, 0x5f71, 0x6c75, 0xd1c0, 0x0, 0x1);
        gbc.writeMem(0x68c7, { 0x11, 0x1c, 0xf2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x68ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0259
        gbc.setState(0x49eb, 0x5680, 0x5d70, 0x6bcb, 0xa43d, 0x5f85, 0x1, 0x0);
        gbc.writeMem(0x49eb, { 0x11, 0x3b, 0x6e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5680, gbc.sp());
        EXPECT(0x49ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 025A
        gbc.setState(0xe5e, 0xcf2c, 0x29f0, 0x31b7, 0xe89, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0xe5e, { 0x11, 0xaf, 0x93 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcf2c, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 025B
        gbc.setState(0xaaae, 0xcc4c, 0xf50, 0x703f, 0xfa12, 0x8375, 0x1, 0x1);
        gbc.writeMem(0xaaae, { 0x11, 0x4b, 0x45 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xaab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaaae));
        EXPECT(0x4b, gbc.readMem(0xaaaf));
        EXPECT(0x45, gbc.readMem(0xaab0));
        // 11 025C
        gbc.setState(0xaded, 0x1ffa, 0x4f0, 0xf5b4, 0xf58d, 0xca07, 0x0, 0x1);
        gbc.writeMem(0xaded, { 0x11, 0x8a, 0xa1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1ffa, gbc.sp());
        EXPECT(0xadf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xaded));
        EXPECT(0x8a, gbc.readMem(0xadee));
        EXPECT(0xa1, gbc.readMem(0xadef));
        // 11 025D
        gbc.setState(0x635c, 0xbaee, 0xc480, 0xfeb1, 0x85c9, 0xce75, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0x11, 0x88, 0x25 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbaee, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 025E
        gbc.setState(0x9028, 0x80a3, 0x1b30, 0xd7c1, 0x1b3c, 0xa4cf, 0x1, 0x0);
        gbc.writeMem(0x9028, { 0x11, 0xac, 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0x902b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9028));
        EXPECT(0xac, gbc.readMem(0x9029));
        EXPECT(0x8a, gbc.readMem(0x902a));
        // 11 025F
        gbc.setState(0x8298, 0xb758, 0x600, 0x22e1, 0x1095, 0x7070, 0x0, 0x0);
        gbc.writeMem(0x8298, { 0x11, 0xc4, 0xcb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb758, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8298));
        EXPECT(0xc4, gbc.readMem(0x8299));
        EXPECT(0xcb, gbc.readMem(0x829a));
        // 11 0260
        gbc.setState(0x9c77, 0xd2e9, 0x8d10, 0xc44d, 0x322c, 0x7979, 0x0, 0x0);
        gbc.writeMem(0x9c77, { 0x11, 0xf4, 0xd3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2e9, gbc.sp());
        EXPECT(0x9c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9c77));
        EXPECT(0xf4, gbc.readMem(0x9c78));
        EXPECT(0xd3, gbc.readMem(0x9c79));
        // 11 0261
        gbc.setState(0x9eaa, 0xd8e7, 0xabf0, 0xe2c2, 0x73fe, 0xbd5c, 0x1, 0x1);
        gbc.writeMem(0x9eaa, { 0x11, 0x44, 0x71 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0x9ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9eaa));
        EXPECT(0x44, gbc.readMem(0x9eab));
        EXPECT(0x71, gbc.readMem(0x9eac));
        // 11 0262
        gbc.setState(0xdff5, 0xd154, 0x5380, 0x63ce, 0xd83e, 0x1649, 0x1, 0x1);
        gbc.writeMem(0xdff5, { 0x11, 0x7, 0x21 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd154, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdff5));
        EXPECT(0x7, gbc.readMem(0xdff6));
        EXPECT(0x21, gbc.readMem(0xdff7));
        // 11 0263
        gbc.setState(0xa0ac, 0xad7d, 0xa090, 0x3990, 0xde1b, 0x59ed, 0x1, 0x0);
        gbc.writeMem(0xa0ac, { 0x11, 0x19, 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xad7d, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa0ac));
        EXPECT(0x19, gbc.readMem(0xa0ad));
        EXPECT(0x3c, gbc.readMem(0xa0ae));
        // 11 0264
        gbc.setState(0x968a, 0x6310, 0xbc40, 0x620a, 0xc1ce, 0x39d8, 0x0, 0x0);
        gbc.writeMem(0x968a, { 0x11, 0x3f, 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x968d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x968a));
        EXPECT(0x3f, gbc.readMem(0x968b));
        EXPECT(0xb, gbc.readMem(0x968c));
        // 11 0265
        gbc.setState(0x280d, 0x7b21, 0x8a80, 0xb536, 0xe54, 0x13ad, 0x1, 0x1);
        gbc.writeMem(0x280d, { 0x11, 0x4f, 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0266
        gbc.setState(0x573e, 0xe7e3, 0x5910, 0xcd5f, 0xf8b0, 0xdde6, 0x0, 0x1);
        gbc.writeMem(0x573e, { 0x11, 0xab, 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe7e3, gbc.sp());
        EXPECT(0x5741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0267
        gbc.setState(0xc893, 0x46bd, 0xc280, 0x299b, 0xf1d8, 0x3f7b, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0x11, 0xa3, 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc893));
        EXPECT(0xa3, gbc.readMem(0xc894));
        EXPECT(0x80, gbc.readMem(0xc895));
        // 11 0268
        gbc.setState(0x25ce, 0x2321, 0x7d00, 0x147a, 0x9844, 0x283a, 0x1, 0x1);
        gbc.writeMem(0x25ce, { 0x11, 0x9a, 0x23 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0269
        gbc.setState(0x9138, 0xbb09, 0xc350, 0x9bd0, 0x5c09, 0x33de, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0x11, 0x21, 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9138));
        EXPECT(0x21, gbc.readMem(0x9139));
        EXPECT(0xf1, gbc.readMem(0x913a));
        // 11 026A
        gbc.setState(0x19bc, 0x9754, 0xa360, 0xac52, 0x54a9, 0x25b8, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0x11, 0x35, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9754, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 026B
        gbc.setState(0x32e9, 0x95bd, 0x3f50, 0xb139, 0xa968, 0x6081, 0x0, 0x1);
        gbc.writeMem(0x32e9, { 0x11, 0xf, 0x74 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x95bd, gbc.sp());
        EXPECT(0x32ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 026C
        gbc.setState(0xe03c, 0xa2cf, 0x6db0, 0x4012, 0xc360, 0x553b, 0x1, 0x0);
        gbc.writeMem(0xe03c, { 0x11, 0xd7, 0x69 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa2cf, gbc.sp());
        EXPECT(0xe03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe03c));
        EXPECT(0xd7, gbc.readMem(0xe03d));
        EXPECT(0x69, gbc.readMem(0xe03e));
        // 11 026D
        gbc.setState(0x2e46, 0x59bf, 0x4060, 0x5792, 0x23e4, 0x696f, 0x0, 0x1);
        gbc.writeMem(0x2e46, { 0x11, 0x25, 0xd7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 026E
        gbc.setState(0x3d2d, 0xf7a2, 0x1720, 0x25b0, 0x5e12, 0xe0ce, 0x0, 0x0);
        gbc.writeMem(0x3d2d, { 0x11, 0x68, 0x42 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf7a2, gbc.sp());
        EXPECT(0x3d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 026F
        gbc.setState(0x7a47, 0xcb1f, 0x36c0, 0x9f30, 0xb2d8, 0xf4a4, 0x1, 0x1);
        gbc.writeMem(0x7a47, { 0x11, 0x1e, 0x1e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0x7a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0270
        gbc.setState(0x1381, 0x1c25, 0xae70, 0xe864, 0x94ac, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0x11, 0x7b, 0x4c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1c25, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0271
        gbc.setState(0x4249, 0x1acd, 0x360, 0x5f4b, 0x3a3, 0x2e06, 0x0, 0x1);
        gbc.writeMem(0x4249, { 0x11, 0xef, 0x4f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1acd, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0272
        gbc.setState(0x39b3, 0xa75d, 0xaaa0, 0x4161, 0xe1e4, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x39b3, { 0x11, 0x79, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa75d, gbc.sp());
        EXPECT(0x39b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0273
        gbc.setState(0x2856, 0x19aa, 0x50a0, 0xaaf8, 0xa253, 0xd54c, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0x11, 0xab, 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0275
        gbc.setState(0xb199, 0x2c31, 0xdbe0, 0xb7ea, 0x3f3c, 0xb835, 0x1, 0x1);
        gbc.writeMem(0xb199, { 0x11, 0x17, 0xd9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c31, gbc.sp());
        EXPECT(0xb19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb199));
        EXPECT(0x17, gbc.readMem(0xb19a));
        EXPECT(0xd9, gbc.readMem(0xb19b));
        // 11 0276
        gbc.setState(0x4721, 0xa6e9, 0x4260, 0xab5a, 0xd7c9, 0x1af5, 0x0, 0x0);
        gbc.writeMem(0x4721, { 0x11, 0x9f, 0x8c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0277
        gbc.setState(0x9106, 0xa485, 0xd30, 0xd53a, 0x8075, 0x9d59, 0x0, 0x1);
        gbc.writeMem(0x9106, { 0x11, 0xcd, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa485, gbc.sp());
        EXPECT(0x9109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9106));
        EXPECT(0xcd, gbc.readMem(0x9107));
        EXPECT(0xd7, gbc.readMem(0x9108));
        // 11 0278
        gbc.setState(0xe9fa, 0xb9f5, 0x3c70, 0x1b12, 0xc344, 0x875d, 0x0, 0x0);
        gbc.writeMem(0xe9fa, { 0x11, 0x75, 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe9fa));
        EXPECT(0x75, gbc.readMem(0xe9fb));
        EXPECT(0x15, gbc.readMem(0xe9fc));
        // 11 0279
        gbc.setState(0xd6da, 0x135b, 0xbb50, 0xbfe7, 0x1c9, 0xab21, 0x0, 0x1);
        gbc.writeMem(0xd6da, { 0x11, 0x4, 0xf0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0xd6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd6da));
        EXPECT(0x4, gbc.readMem(0xd6db));
        EXPECT(0xf0, gbc.readMem(0xd6dc));
        // 11 027A
        gbc.setState(0x564b, 0x16b9, 0x24b0, 0x87ad, 0x290f, 0xaa3e, 0x0, 0x0);
        gbc.writeMem(0x564b, { 0x11, 0xe9, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x564e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 027B
        gbc.setState(0x3544, 0xa508, 0xfef0, 0x35ef, 0xdc77, 0x1031, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0x11, 0x54, 0xe1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x3547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 027C
        gbc.setState(0x5863, 0xee5d, 0x5130, 0xb56e, 0x10db, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0x5863, { 0x11, 0xfa, 0xd1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0x5866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 027D
        gbc.setState(0x490e, 0xfb92, 0x80c0, 0x9d07, 0x569c, 0x632f, 0x0, 0x0);
        gbc.writeMem(0x490e, { 0x11, 0x4a, 0xe5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfb92, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 027E
        gbc.setState(0xc0e5, 0xbd98, 0xd9e0, 0x12ca, 0x613d, 0x66a7, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0x11, 0x2f, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc0e5));
        EXPECT(0x2f, gbc.readMem(0xc0e6));
        EXPECT(0x48, gbc.readMem(0xc0e7));
        // 11 027F
        gbc.setState(0x9376, 0x5bdb, 0x3920, 0xb836, 0x61b2, 0x422d, 0x1, 0x0);
        gbc.writeMem(0x9376, { 0x11, 0xed, 0x84 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0x9379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9376));
        EXPECT(0xed, gbc.readMem(0x9377));
        EXPECT(0x84, gbc.readMem(0x9378));
        // 11 0280
        gbc.setState(0x29a0, 0x24bd, 0x34d0, 0xbb72, 0xd99f, 0x7e03, 0x0, 0x1);
        gbc.writeMem(0x29a0, { 0x11, 0x7a, 0x4c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x24bd, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0281
        gbc.setState(0x3010, 0xc1f6, 0x41a0, 0x9111, 0xed0c, 0x2d76, 0x1, 0x1);
        gbc.writeMem(0x3010, { 0x11, 0xf6, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc1f6, gbc.sp());
        EXPECT(0x3013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0282
        gbc.setState(0x28db, 0x2a6b, 0x6790, 0x1489, 0x43ea, 0x1123, 0x0, 0x1);
        gbc.writeMem(0x28db, { 0x11, 0xd5, 0x96 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0x28de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0283
        gbc.setState(0xc0d2, 0x88c6, 0x1870, 0xdee5, 0x8384, 0x1251, 0x1, 0x0);
        gbc.writeMem(0xc0d2, { 0x11, 0x31, 0x81 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0xc0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc0d2));
        EXPECT(0x31, gbc.readMem(0xc0d3));
        EXPECT(0x81, gbc.readMem(0xc0d4));
        // 11 0284
        gbc.setState(0x2d75, 0x7b1d, 0x1f80, 0xba3d, 0xb155, 0xaf01, 0x1, 0x1);
        gbc.writeMem(0x2d75, { 0x11, 0x51, 0xaa });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0285
        gbc.setState(0xcd99, 0xb76b, 0x2150, 0x4a12, 0xf9f1, 0x7d86, 0x1, 0x0);
        gbc.writeMem(0xcd99, { 0x11, 0x3, 0xc6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb76b, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcd99));
        EXPECT(0x3, gbc.readMem(0xcd9a));
        EXPECT(0xc6, gbc.readMem(0xcd9b));
        // 11 0286
        gbc.setState(0xa9c2, 0x76f1, 0xec0, 0x24e2, 0x6464, 0xe83f, 0x0, 0x1);
        gbc.writeMem(0xa9c2, { 0x11, 0xd6, 0xbb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa9c2));
        EXPECT(0xd6, gbc.readMem(0xa9c3));
        EXPECT(0xbb, gbc.readMem(0xa9c4));
        // 11 0287
        gbc.setState(0x1700, 0xb447, 0x66b0, 0xdfd, 0xa4de, 0x2ae7, 0x1, 0x1);
        gbc.writeMem(0x1700, { 0x11, 0x7, 0x68 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb447, gbc.sp());
        EXPECT(0x1703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0288
        gbc.setState(0xb85f, 0x48a9, 0xec80, 0xb7d8, 0xa61c, 0x49a5, 0x1, 0x0);
        gbc.writeMem(0xb85f, { 0x11, 0x62, 0x36 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x48a9, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb85f));
        EXPECT(0x62, gbc.readMem(0xb860));
        EXPECT(0x36, gbc.readMem(0xb861));
        // 11 0289
        gbc.setState(0xd6bb, 0xf9d2, 0x8100, 0x7031, 0x80dc, 0x1af2, 0x0, 0x0);
        gbc.writeMem(0xd6bb, { 0x11, 0x23, 0x2a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf9d2, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd6bb));
        EXPECT(0x23, gbc.readMem(0xd6bc));
        EXPECT(0x2a, gbc.readMem(0xd6bd));
        // 11 028A
        gbc.setState(0x735d, 0x8a7e, 0x6a60, 0x2e18, 0xecb3, 0x3868, 0x1, 0x1);
        gbc.writeMem(0x735d, { 0x11, 0xdc, 0x75 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0x7360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 028B
        gbc.setState(0x525d, 0x9b39, 0xcff0, 0x4235, 0x599, 0xec71, 0x1, 0x0);
        gbc.writeMem(0x525d, { 0x11, 0x7c, 0x11 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 028C
        gbc.setState(0x1793, 0x5ce1, 0x8590, 0x6a1e, 0xb800, 0xbaa2, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0x11, 0x3, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 028D
        gbc.setState(0xa7e3, 0x539d, 0x4e30, 0xd05a, 0x376a, 0xfac1, 0x0, 0x0);
        gbc.writeMem(0xa7e3, { 0x11, 0x7, 0xe7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x539d, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa7e3));
        EXPECT(0x7, gbc.readMem(0xa7e4));
        EXPECT(0xe7, gbc.readMem(0xa7e5));
        // 11 028E
        gbc.setState(0x34c6, 0x31d9, 0x6e80, 0x3e36, 0x32c6, 0x9da1, 0x0, 0x0);
        gbc.writeMem(0x34c6, { 0x11, 0x3d, 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x31d9, gbc.sp());
        EXPECT(0x34c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 028F
        gbc.setState(0xce27, 0x220b, 0xd120, 0xee23, 0x50ea, 0x4005, 0x0, 0x0);
        gbc.writeMem(0xce27, { 0x11, 0x23, 0xf8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xce27));
        EXPECT(0x23, gbc.readMem(0xce28));
        EXPECT(0xf8, gbc.readMem(0xce29));
        // 11 0290
        gbc.setState(0x5d99, 0x4c15, 0x52e0, 0xe7ee, 0xe819, 0x7e65, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0x11, 0x2, 0x5c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x5d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0291
        gbc.setState(0x999c, 0x2bfa, 0x380, 0xc0cf, 0xd004, 0xe973, 0x1, 0x1);
        gbc.writeMem(0x999c, { 0x11, 0x36, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x999c));
        EXPECT(0x36, gbc.readMem(0x999d));
        EXPECT(0x49, gbc.readMem(0x999e));
        // 11 0292
        gbc.setState(0xa18b, 0x2059, 0xc800, 0xbab3, 0xa93a, 0x34e6, 0x0, 0x1);
        gbc.writeMem(0xa18b, { 0x11, 0x68, 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2059, gbc.sp());
        EXPECT(0xa18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa18b));
        EXPECT(0x68, gbc.readMem(0xa18c));
        EXPECT(0xbb, gbc.readMem(0xa18d));
        // 11 0293
        gbc.setState(0x1bea, 0x38f2, 0x6a20, 0xb684, 0xf2eb, 0x9b26, 0x0, 0x1);
        gbc.writeMem(0x1bea, { 0x11, 0x2b, 0x31 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x38f2, gbc.sp());
        EXPECT(0x1bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0294
        gbc.setState(0xa91f, 0xc165, 0xd800, 0x1e65, 0xec25, 0xc5ee, 0x1, 0x1);
        gbc.writeMem(0xa91f, { 0x11, 0xa7, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xa922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa91f));
        EXPECT(0xa7, gbc.readMem(0xa920));
        EXPECT(0xd9, gbc.readMem(0xa921));
        // 11 0295
        gbc.setState(0xb0ff, 0x4a10, 0x1840, 0x6ae0, 0x6b14, 0xc418, 0x1, 0x1);
        gbc.writeMem(0xb0ff, { 0x11, 0xf8, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4a10, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb0ff));
        EXPECT(0xf8, gbc.readMem(0xb100));
        EXPECT(0x18, gbc.readMem(0xb101));
        // 11 0296
        gbc.setState(0xe717, 0x10e0, 0x3a70, 0x52d0, 0x60f4, 0x9f6f, 0x0, 0x1);
        gbc.writeMem(0xe717, { 0x11, 0x96, 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe717));
        EXPECT(0x96, gbc.readMem(0xe718));
        EXPECT(0x81, gbc.readMem(0xe719));
        // 11 0297
        gbc.setState(0xe1b7, 0x2ba5, 0x8960, 0xc7d8, 0xc4b5, 0x7274, 0x1, 0x1);
        gbc.writeMem(0xe1b7, { 0x11, 0x8b, 0xdd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ba5, gbc.sp());
        EXPECT(0xe1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe1b7));
        EXPECT(0x8b, gbc.readMem(0xe1b8));
        EXPECT(0xdd, gbc.readMem(0xe1b9));
        // 11 0298
        gbc.setState(0x8908, 0xa833, 0xab90, 0x671c, 0x16c9, 0xbb0c, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0x11, 0xb5, 0x83 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa833, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8908));
        EXPECT(0xb5, gbc.readMem(0x8909));
        EXPECT(0x83, gbc.readMem(0x890a));
        // 11 0299
        gbc.setState(0x2e0e, 0xf74f, 0x92e0, 0xa908, 0x2aa, 0xfbaa, 0x1, 0x1);
        gbc.writeMem(0x2e0e, { 0x11, 0xbd, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf74f, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 029A
        gbc.setState(0x6075, 0xf784, 0x1350, 0x10d8, 0x73e1, 0x9170, 0x0, 0x1);
        gbc.writeMem(0x6075, { 0x11, 0x88, 0x1e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf784, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 029B
        gbc.setState(0x663d, 0x8e27, 0x7680, 0xc955, 0x15f7, 0xf56a, 0x0, 0x1);
        gbc.writeMem(0x663d, { 0x11, 0x18, 0xb4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8e27, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 029E
        gbc.setState(0x5c0, 0x755f, 0x2010, 0xd0e2, 0x2ab4, 0x9c1b, 0x1, 0x1);
        gbc.writeMem(0x5c0, { 0x11, 0x93, 0x24 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x755f, gbc.sp());
        EXPECT(0x5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 029F
        gbc.setState(0xa63b, 0x5a59, 0xe6a0, 0x6c42, 0xc14, 0xa7f2, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0x11, 0xd6, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0xa63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa63b));
        EXPECT(0xd6, gbc.readMem(0xa63c));
        EXPECT(0xb2, gbc.readMem(0xa63d));
        // 11 02A0
        gbc.setState(0x14ae, 0x72a0, 0xcab0, 0x6343, 0x1ef8, 0x8e5e, 0x0, 0x1);
        gbc.writeMem(0x14ae, { 0x11, 0xb6, 0x6c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x72a0, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02A2
        gbc.setState(0x2268, 0x13, 0x450, 0x8961, 0xe297, 0xd720, 0x1, 0x0);
        gbc.writeMem(0x2268, { 0x11, 0xb4, 0x2a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x13, gbc.sp());
        EXPECT(0x226b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02A3
        gbc.setState(0x7c2b, 0xb0aa, 0xb00, 0x559, 0xadac, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0x7c2b, { 0x11, 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb0aa, gbc.sp());
        EXPECT(0x7c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02A4
        gbc.setState(0xb9bb, 0x2144, 0x33d0, 0x653f, 0x322, 0x1fa7, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0x11, 0x71, 0x66 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2144, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb9bb));
        EXPECT(0x71, gbc.readMem(0xb9bc));
        EXPECT(0x66, gbc.readMem(0xb9bd));
        // 11 02A5
        gbc.setState(0xbd7f, 0xda27, 0x9800, 0xbf0a, 0x32d5, 0x4174, 0x0, 0x0);
        gbc.writeMem(0xbd7f, { 0x11, 0xb9, 0xe6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xda27, gbc.sp());
        EXPECT(0xbd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbd7f));
        EXPECT(0xb9, gbc.readMem(0xbd80));
        EXPECT(0xe6, gbc.readMem(0xbd81));
        // 11 02A6
        gbc.setState(0x6a42, 0x3eee, 0x9e20, 0xf968, 0x3572, 0x673b, 0x1, 0x0);
        gbc.writeMem(0x6a42, { 0x11, 0x1a, 0x8f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3eee, gbc.sp());
        EXPECT(0x6a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02A7
        gbc.setState(0x48ac, 0xa305, 0x920, 0x95, 0x32f3, 0xc00b, 0x1, 0x0);
        gbc.writeMem(0x48ac, { 0x11, 0xa, 0x36 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x48af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02A8
        gbc.setState(0xd9c7, 0x3e40, 0xdd80, 0x61b8, 0x61a2, 0xee98, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0x11, 0x10, 0xbe });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0xd9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd9c7));
        EXPECT(0x10, gbc.readMem(0xd9c8));
        EXPECT(0xbe, gbc.readMem(0xd9c9));
        // 11 02AA
        gbc.setState(0xc254, 0x5f2d, 0x9e00, 0x94f9, 0x48c8, 0xc0d4, 0x0, 0x1);
        gbc.writeMem(0xc254, { 0x11, 0xc0, 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5f2d, gbc.sp());
        EXPECT(0xc257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc254));
        EXPECT(0xc0, gbc.readMem(0xc255));
        EXPECT(0xc, gbc.readMem(0xc256));
        // 11 02AB
        gbc.setState(0xa178, 0x418b, 0x41a0, 0xab65, 0xfa60, 0x50d1, 0x1, 0x0);
        gbc.writeMem(0xa178, { 0x11, 0x6b, 0x86 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x418b, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa178));
        EXPECT(0x6b, gbc.readMem(0xa179));
        EXPECT(0x86, gbc.readMem(0xa17a));
        // 11 02AC
        gbc.setState(0xd60f, 0xb081, 0x46b0, 0xaa6, 0x8192, 0xbbb8, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0x11, 0x5f, 0xaf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0xd612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd60f));
        EXPECT(0x5f, gbc.readMem(0xd610));
        EXPECT(0xaf, gbc.readMem(0xd611));
        // 11 02AD
        gbc.setState(0x5512, 0x3963, 0xed50, 0x5965, 0xa7a6, 0xfd77, 0x0, 0x0);
        gbc.writeMem(0x5512, { 0x11, 0xfc, 0xaa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3963, gbc.sp());
        EXPECT(0x5515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02AE
        gbc.setState(0x4dbd, 0xda99, 0x74e0, 0xeb6f, 0x2806, 0x6b53, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0x11, 0x9f, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xda99, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02AF
        gbc.setState(0xd245, 0x5b9f, 0xfee0, 0x85ca, 0x1da6, 0x2f38, 0x0, 0x0);
        gbc.writeMem(0xd245, { 0x11, 0x73, 0xdd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd245));
        EXPECT(0x73, gbc.readMem(0xd246));
        EXPECT(0xdd, gbc.readMem(0xd247));
        // 11 02B0
        gbc.setState(0x258, 0x87d9, 0xd7e0, 0x966a, 0xafbb, 0x46af, 0x1, 0x1);
        gbc.writeMem(0x258, { 0x11, 0x64, 0xfe });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87d9, gbc.sp());
        EXPECT(0x25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02B1
        gbc.setState(0x53ae, 0x422c, 0x5d0, 0xd7d, 0x11d5, 0xac49, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0x11, 0xbd, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02B2
        gbc.setState(0x1d91, 0xabeb, 0xe4b0, 0x4a20, 0xfc1d, 0x1343, 0x1, 0x1);
        gbc.writeMem(0x1d91, { 0x11, 0xb5, 0x18 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xabeb, gbc.sp());
        EXPECT(0x1d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02B3
        gbc.setState(0xd51e, 0xe6cc, 0xf490, 0x94c2, 0x312a, 0x2925, 0x1, 0x0);
        gbc.writeMem(0xd51e, { 0x11, 0x68, 0x97 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe6cc, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd51e));
        EXPECT(0x68, gbc.readMem(0xd51f));
        EXPECT(0x97, gbc.readMem(0xd520));
        // 11 02B4
        gbc.setState(0x45cd, 0x625d, 0xbd80, 0xee4f, 0x72b1, 0x160, 0x0, 0x0);
        gbc.writeMem(0x45cd, { 0x11, 0xc2, 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x625d, gbc.sp());
        EXPECT(0x45d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02B5
        gbc.setState(0x5398, 0x1f0d, 0xc70, 0xa966, 0xac94, 0x8008, 0x0, 0x0);
        gbc.writeMem(0x5398, { 0x11, 0xfc, 0x6d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1f0d, gbc.sp());
        EXPECT(0x539b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02B6
        gbc.setState(0x5261, 0x93f, 0xffa0, 0xfb23, 0x600c, 0xec36, 0x0, 0x0);
        gbc.writeMem(0x5261, { 0x11, 0xd4, 0xc3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x93f, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02B7
        gbc.setState(0x757e, 0x134b, 0xb210, 0x208d, 0x8668, 0x3866, 0x0, 0x0);
        gbc.writeMem(0x757e, { 0x11, 0x7c, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0x7581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02B8
        gbc.setState(0x26d1, 0xe2c5, 0x25d0, 0x30c5, 0xf676, 0xb96d, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe2c5, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02B9
        gbc.setState(0x960, 0xaacd, 0x4850, 0x282e, 0xfc59, 0x17f1, 0x0, 0x1);
        gbc.writeMem(0x960, { 0x11, 0x1f, 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaacd, gbc.sp());
        EXPECT(0x963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02BA
        gbc.setState(0xa6fe, 0xb22c, 0x3750, 0x304d, 0xf40, 0xe49, 0x0, 0x0);
        gbc.writeMem(0xa6fe, { 0x11, 0x84, 0xc4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb22c, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa6fe));
        EXPECT(0x84, gbc.readMem(0xa6ff));
        EXPECT(0xc4, gbc.readMem(0xa700));
        // 11 02BB
        gbc.setState(0x2b5f, 0x5aec, 0xb790, 0x310d, 0x3c25, 0xb27, 0x1, 0x0);
        gbc.writeMem(0x2b5f, { 0x11, 0x49, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5aec, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02BC
        gbc.setState(0xd8cc, 0x38a0, 0xd340, 0x7eb4, 0x2a69, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0xd8cc, { 0x11, 0x7f, 0x36 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x38a0, gbc.sp());
        EXPECT(0xd8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd8cc));
        EXPECT(0x7f, gbc.readMem(0xd8cd));
        EXPECT(0x36, gbc.readMem(0xd8ce));
        // 11 02BD
        gbc.setState(0x8cb4, 0x6cbe, 0xe4d0, 0xee1b, 0xdbd9, 0x76f1, 0x1, 0x0);
        gbc.writeMem(0x8cb4, { 0x11, 0x53, 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6cbe, gbc.sp());
        EXPECT(0x8cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8cb4));
        EXPECT(0x53, gbc.readMem(0x8cb5));
        EXPECT(0x2b, gbc.readMem(0x8cb6));
        // 11 02BF
        gbc.setState(0x1f92, 0xa584, 0xc150, 0xfed7, 0x64a4, 0x3eb4, 0x1, 0x0);
        gbc.writeMem(0x1f92, { 0x11, 0x4c, 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0x1f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02C0
        gbc.setState(0x1bd2, 0xa1cb, 0x56c0, 0xdf1e, 0xf9f2, 0x9c17, 0x0, 0x1);
        gbc.writeMem(0x1bd2, { 0x11, 0x67, 0x97 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa1cb, gbc.sp());
        EXPECT(0x1bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02C1
        gbc.setState(0xb9d3, 0xed17, 0x3c50, 0xf5ee, 0x8871, 0x5ad7, 0x1, 0x0);
        gbc.writeMem(0xb9d3, { 0x11, 0x79, 0x4e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xed17, gbc.sp());
        EXPECT(0xb9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb9d3));
        EXPECT(0x79, gbc.readMem(0xb9d4));
        EXPECT(0x4e, gbc.readMem(0xb9d5));
        // 11 02C2
        gbc.setState(0x20bc, 0x8b10, 0x6860, 0xe9c6, 0x4c1e, 0x512f, 0x1, 0x1);
        gbc.writeMem(0x20bc, { 0x11, 0x30, 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8b10, gbc.sp());
        EXPECT(0x20bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02C3
        gbc.setState(0xd8e1, 0xc3a, 0x9500, 0xb4fa, 0x2586, 0x1a5a, 0x0, 0x1);
        gbc.writeMem(0xd8e1, { 0x11, 0x0, 0xf3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd8e1));
        EXPECT(0x0, gbc.readMem(0xd8e2));
        EXPECT(0xf3, gbc.readMem(0xd8e3));
        // 11 02C4
        gbc.setState(0x4d01, 0xfc2b, 0x87c0, 0x403f, 0x3cc6, 0xac08, 0x0, 0x1);
        gbc.writeMem(0x4d01, { 0x11, 0xf, 0xe7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfc2b, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02C5
        gbc.setState(0xc94a, 0x32a3, 0xac90, 0xe069, 0x75ed, 0x6715, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0x11, 0x46, 0x92 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x32a3, gbc.sp());
        EXPECT(0xc94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc94a));
        EXPECT(0x46, gbc.readMem(0xc94b));
        EXPECT(0x92, gbc.readMem(0xc94c));
        // 11 02C6
        gbc.setState(0x1182, 0xad2c, 0xef40, 0x85c, 0x5289, 0x90, 0x1, 0x1);
        gbc.writeMem(0x1182, { 0x11, 0x64, 0x8d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0x1185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02C7
        gbc.setState(0xf2b, 0xb4f8, 0x3d90, 0xf315, 0x9973, 0xd1f9, 0x1, 0x1);
        gbc.writeMem(0xf2b, { 0x11, 0x10, 0x40 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0xf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02C8
        gbc.setState(0x163a, 0x44eb, 0x39f0, 0xeeaf, 0xa2b8, 0x5754, 0x1, 0x1);
        gbc.writeMem(0x163a, { 0x11, 0x3e, 0x72 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x163d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02C9
        gbc.setState(0x9e5, 0x569d, 0xc60, 0x8faa, 0xfe00, 0xc927, 0x1, 0x1);
        gbc.writeMem(0x9e5, { 0x11, 0xa4, 0x4c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02CA
        gbc.setState(0x7997, 0x73d2, 0xf2f0, 0xb156, 0x451, 0x2e0d, 0x1, 0x1);
        gbc.writeMem(0x7997, { 0x11, 0xbc, 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x799a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02CB
        gbc.setState(0x60fe, 0x9ff1, 0xc150, 0x3047, 0xf91, 0x9dd5, 0x1, 0x0);
        gbc.writeMem(0x60fe, { 0x11, 0xfc, 0x2a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ff1, gbc.sp());
        EXPECT(0x6101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02CC
        gbc.setState(0x1af7, 0x1591, 0xe5d0, 0x97c9, 0x1db0, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0x11, 0xe9, 0x1b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1591, gbc.sp());
        EXPECT(0x1afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02CD
        gbc.setState(0xec0e, 0x6e1, 0xe10, 0xfada, 0xf559, 0xe897, 0x1, 0x0);
        gbc.writeMem(0xec0e, { 0x11, 0xc5, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xec0e));
        EXPECT(0xc5, gbc.readMem(0xec0f));
        EXPECT(0x2f, gbc.readMem(0xec10));
        // 11 02CE
        gbc.setState(0x9b02, 0x58a4, 0x8460, 0xbdc9, 0xb25e, 0x69e6, 0x1, 0x1);
        gbc.writeMem(0x9b02, { 0x11, 0xea, 0xe7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x58a4, gbc.sp());
        EXPECT(0x9b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9b02));
        EXPECT(0xea, gbc.readMem(0x9b03));
        EXPECT(0xe7, gbc.readMem(0x9b04));
        // 11 02CF
        gbc.setState(0x82bd, 0x638e, 0xac30, 0x7a2f, 0x8513, 0x60b2, 0x1, 0x0);
        gbc.writeMem(0x82bd, { 0x11, 0xac, 0xe0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x82c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x82bd));
        EXPECT(0xac, gbc.readMem(0x82be));
        EXPECT(0xe0, gbc.readMem(0x82bf));
        // 11 02D0
        gbc.setState(0xe7, 0x794f, 0x2310, 0x69e2, 0x2667, 0x4043, 0x1, 0x1);
        gbc.writeMem(0xe7, { 0x11, 0x1d, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x794f, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02D1
        gbc.setState(0x4725, 0x9e51, 0x7010, 0x5562, 0xe404, 0x7e51, 0x0, 0x1);
        gbc.writeMem(0x4725, { 0x11, 0x89, 0x9a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02D2
        gbc.setState(0xbbbd, 0xfafb, 0xc710, 0x2ee5, 0x44ba, 0x38da, 0x0, 0x0);
        gbc.writeMem(0xbbbd, { 0x11, 0x8f, 0xa5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbbbd));
        EXPECT(0x8f, gbc.readMem(0xbbbe));
        EXPECT(0xa5, gbc.readMem(0xbbbf));
        // 11 02D3
        gbc.setState(0x2bd8, 0x5553, 0x5030, 0x3863, 0xd8cb, 0x4c03, 0x0, 0x1);
        gbc.writeMem(0x2bd8, { 0x11, 0x16, 0x1c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5553, gbc.sp());
        EXPECT(0x2bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02D5
        gbc.setState(0xee7, 0xc819, 0xa5f0, 0x4667, 0xd5f5, 0x1249, 0x1, 0x0);
        gbc.writeMem(0xee7, { 0x11, 0x1f, 0xef });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0xeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02D6
        gbc.setState(0xe99f, 0xcb3d, 0x9750, 0xf1f3, 0xafce, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0x11, 0x97, 0xd1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe99f));
        EXPECT(0x97, gbc.readMem(0xe9a0));
        EXPECT(0xd1, gbc.readMem(0xe9a1));
        // 11 02D7
        gbc.setState(0x86f9, 0xf7b, 0x310, 0x6ef7, 0xb090, 0xec38, 0x1, 0x1);
        gbc.writeMem(0x86f9, { 0x11, 0x39, 0x79 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x86f9));
        EXPECT(0x39, gbc.readMem(0x86fa));
        EXPECT(0x79, gbc.readMem(0x86fb));
        // 11 02D8
        gbc.setState(0x6f82, 0xc7a6, 0x6190, 0x81c8, 0xe6d4, 0x931d, 0x1, 0x0);
        gbc.writeMem(0x6f82, { 0x11, 0x80, 0xf0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02DA
        gbc.setState(0x26a3, 0x3c7e, 0x33b0, 0xfb7, 0x8f09, 0xf6e, 0x1, 0x1);
        gbc.writeMem(0x26a3, { 0x11, 0xd, 0x3b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3c7e, gbc.sp());
        EXPECT(0x26a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02DB
        gbc.setState(0x878d, 0x201e, 0x1bd0, 0xcb40, 0x7333, 0x5a72, 0x0, 0x0);
        gbc.writeMem(0x878d, { 0x11, 0x66, 0xfd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x201e, gbc.sp());
        EXPECT(0x8790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x878d));
        EXPECT(0x66, gbc.readMem(0x878e));
        EXPECT(0xfd, gbc.readMem(0x878f));
        // 11 02DD
        gbc.setState(0xadc8, 0xce7f, 0x4d40, 0x4a15, 0xcfa1, 0x222e, 0x1, 0x0);
        gbc.writeMem(0xadc8, { 0x11, 0xca, 0xb2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xce7f, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xadc8));
        EXPECT(0xca, gbc.readMem(0xadc9));
        EXPECT(0xb2, gbc.readMem(0xadca));
        // 11 02DE
        gbc.setState(0x9df1, 0x22e4, 0xc300, 0x53b5, 0xb763, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0x11, 0x8a, 0x7f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9df1));
        EXPECT(0x8a, gbc.readMem(0x9df2));
        EXPECT(0x7f, gbc.readMem(0x9df3));
        // 11 02E0
        gbc.setState(0x1937, 0x5089, 0x3290, 0xefcb, 0x331f, 0x7c9, 0x0, 0x0);
        gbc.writeMem(0x1937, { 0x11, 0x6f, 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0x193a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02E1
        gbc.setState(0x8143, 0xd8fe, 0xd80, 0x8bc7, 0x1a2e, 0x8db0, 0x1, 0x1);
        gbc.writeMem(0x8143, { 0x11, 0xbd, 0x7f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8143));
        EXPECT(0xbd, gbc.readMem(0x8144));
        EXPECT(0x7f, gbc.readMem(0x8145));
        // 11 02E2
        gbc.setState(0xec68, 0xf08, 0xa850, 0xe4e5, 0xaad3, 0x9db4, 0x1, 0x0);
        gbc.writeMem(0xec68, { 0x11, 0x3d, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0xec6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xec68));
        EXPECT(0x3d, gbc.readMem(0xec69));
        EXPECT(0x6e, gbc.readMem(0xec6a));
        // 11 02E3
        gbc.setState(0x8c9a, 0x7440, 0xd9a0, 0xc87b, 0x9f7a, 0x3ba2, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0x11, 0x3d, 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7440, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8c9a));
        EXPECT(0x3d, gbc.readMem(0x8c9b));
        EXPECT(0xfc, gbc.readMem(0x8c9c));
        // 11 02E4
        gbc.setState(0x3053, 0xa44d, 0x4c20, 0xeb44, 0x1878, 0xa411, 0x1, 0x1);
        gbc.writeMem(0x3053, { 0x11, 0xfd, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02E5
        gbc.setState(0x1e65, 0xdd10, 0xfc40, 0xa839, 0x829f, 0xb66b, 0x1, 0x0);
        gbc.writeMem(0x1e65, { 0x11, 0xd6, 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x1e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02E6
        gbc.setState(0x4353, 0x954b, 0x53f0, 0x8d4f, 0x4e85, 0x4015, 0x0, 0x1);
        gbc.writeMem(0x4353, { 0x11, 0x8a, 0xfa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02E7
        gbc.setState(0x37ce, 0x813b, 0xb780, 0x44, 0xa526, 0x8675, 0x0, 0x0);
        gbc.writeMem(0x37ce, { 0x11, 0xc8, 0xbf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x813b, gbc.sp());
        EXPECT(0x37d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02E8
        gbc.setState(0x62c7, 0x6fb2, 0x5a50, 0x1d46, 0x7fce, 0xfef1, 0x0, 0x0);
        gbc.writeMem(0x62c7, { 0x11, 0xb1, 0xeb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02E9
        gbc.setState(0xb8cd, 0xeb3b, 0xb8e0, 0x6f1e, 0xa5c5, 0xe244, 0x1, 0x0);
        gbc.writeMem(0xb8cd, { 0x11, 0x9d, 0xde });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeb3b, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb8cd));
        EXPECT(0x9d, gbc.readMem(0xb8ce));
        EXPECT(0xde, gbc.readMem(0xb8cf));
        // 11 02EA
        gbc.setState(0xc038, 0x6d88, 0x1a0, 0x92b1, 0x2dae, 0x1a3e, 0x0, 0x1);
        gbc.writeMem(0xc038, { 0x11, 0xbb, 0x90 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6d88, gbc.sp());
        EXPECT(0xc03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc038));
        EXPECT(0xbb, gbc.readMem(0xc039));
        EXPECT(0x90, gbc.readMem(0xc03a));
        // 11 02EB
        gbc.setState(0xbd3e, 0x6219, 0xfe20, 0x8438, 0xb443, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0xbd3e, { 0x11, 0x78, 0x80 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6219, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbd3e));
        EXPECT(0x78, gbc.readMem(0xbd3f));
        EXPECT(0x80, gbc.readMem(0xbd40));
        // 11 02EC
        gbc.setState(0xbd48, 0x95e3, 0xd2c0, 0x862c, 0x1ccb, 0x9259, 0x1, 0x0);
        gbc.writeMem(0xbd48, { 0x11, 0xcb, 0x60 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x95e3, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbd48));
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0x60, gbc.readMem(0xbd4a));
        // 11 02ED
        gbc.setState(0x5513, 0x4874, 0x720, 0x531, 0x894, 0xde45, 0x1, 0x1);
        gbc.writeMem(0x5513, { 0x11, 0xaa, 0x5f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02EF
        gbc.setState(0x19b4, 0xf4cf, 0x1220, 0xdddb, 0xa01f, 0x3c4a, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0x11, 0x59, 0xda });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf4cf, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02F0
        gbc.setState(0xa3dc, 0xac63, 0xc590, 0x4215, 0x37c4, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0xa3dc, { 0x11, 0x52, 0xf3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa3dc));
        EXPECT(0x52, gbc.readMem(0xa3dd));
        EXPECT(0xf3, gbc.readMem(0xa3de));
        // 11 02F1
        gbc.setState(0x145f, 0x389c, 0x2ba0, 0x1120, 0x80fc, 0x5df, 0x1, 0x0);
        gbc.writeMem(0x145f, { 0x11, 0x34, 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02F2
        gbc.setState(0x4734, 0x902a, 0x9ea0, 0x2d61, 0x7215, 0x55dd, 0x1, 0x1);
        gbc.writeMem(0x4734, { 0x11, 0xab, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x902a, gbc.sp());
        EXPECT(0x4737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02F3
        gbc.setState(0xdd2f, 0xd1e, 0xc720, 0x46ba, 0xcc1, 0xdc1b, 0x0, 0x0);
        gbc.writeMem(0xdd2f, { 0x11, 0x84, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0xdd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdd2f));
        EXPECT(0x84, gbc.readMem(0xdd30));
        EXPECT(0xb8, gbc.readMem(0xdd31));
        // 11 02F4
        gbc.setState(0x284f, 0x1584, 0x3b00, 0x3365, 0x7b20, 0x9e8f, 0x1, 0x1);
        gbc.writeMem(0x284f, { 0x11, 0x65, 0x6b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02F6
        gbc.setState(0xdb01, 0xa19c, 0x1440, 0x5e8e, 0x576b, 0x5738, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0x11, 0x4b, 0x56 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdb01));
        EXPECT(0x4b, gbc.readMem(0xdb02));
        EXPECT(0x56, gbc.readMem(0xdb03));
        // 11 02F7
        gbc.setState(0xc0aa, 0x3bc9, 0x4450, 0xa04c, 0x8048, 0x8e8b, 0x1, 0x1);
        gbc.writeMem(0xc0aa, { 0x11, 0x2e, 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3bc9, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc0aa));
        EXPECT(0x2e, gbc.readMem(0xc0ab));
        EXPECT(0x8c, gbc.readMem(0xc0ac));
        // 11 02F8
        gbc.setState(0x2238, 0x7436, 0xb830, 0x431b, 0x45a1, 0xcdae, 0x1, 0x0);
        gbc.writeMem(0x2238, { 0x11, 0x90, 0x83 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7436, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02F9
        gbc.setState(0xa4fe, 0xeca7, 0x5840, 0x1ae8, 0xa474, 0x9da7, 0x0, 0x1);
        gbc.writeMem(0xa4fe, { 0x11, 0x96, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xeca7, gbc.sp());
        EXPECT(0xa501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa4fe));
        EXPECT(0x96, gbc.readMem(0xa4ff));
        EXPECT(0xc9, gbc.readMem(0xa500));
        // 11 02FA
        gbc.setState(0xf3a, 0x79ac, 0x3ec0, 0xd03, 0x272f, 0x138, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0x11, 0x2, 0xeb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x79ac, gbc.sp());
        EXPECT(0xf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02FB
        gbc.setState(0x96ee, 0xfa5d, 0x2a10, 0x414c, 0xda77, 0x4358, 0x0, 0x0);
        gbc.writeMem(0x96ee, { 0x11, 0x3f, 0xcc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfa5d, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x96ee));
        EXPECT(0x3f, gbc.readMem(0x96ef));
        EXPECT(0xcc, gbc.readMem(0x96f0));
        // 11 02FC
        gbc.setState(0xddce, 0x4cf8, 0x75c0, 0xcb98, 0x323f, 0x142f, 0x0, 0x1);
        gbc.writeMem(0xddce, { 0x11, 0x6c, 0xee });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4cf8, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xddce));
        EXPECT(0x6c, gbc.readMem(0xddcf));
        EXPECT(0xee, gbc.readMem(0xddd0));
        // 11 02FD
        gbc.setState(0x5efd, 0x6c6, 0x5b40, 0x9b65, 0x10b6, 0x8be3, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0x11, 0xc8, 0xf8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6c6, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 02FE
        gbc.setState(0x39ef, 0x2a2b, 0x44b0, 0xaf79, 0xee07, 0x7ca7, 0x0, 0x1);
        gbc.writeMem(0x39ef, { 0x11, 0xc7, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2a2b, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 02FF
        gbc.setState(0xc647, 0x2274, 0xcf90, 0xf199, 0x352b, 0x1374, 0x1, 0x0);
        gbc.writeMem(0xc647, { 0x11, 0x88, 0xc6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2274, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc647));
        EXPECT(0x88, gbc.readMem(0xc648));
        EXPECT(0xc6, gbc.readMem(0xc649));
        // 11 0300
        gbc.setState(0x2488, 0x1c3c, 0x2c00, 0x26de, 0x8f64, 0x14df, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0x11, 0xa, 0xa1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1c3c, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0301
        gbc.setState(0x6f82, 0x7e51, 0xc0d0, 0xbdb4, 0x35ed, 0xecfd, 0x0, 0x1);
        gbc.writeMem(0x6f82, { 0x11, 0x80, 0xf0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e51, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0302
        gbc.setState(0x7aa0, 0x611e, 0x6c70, 0x6e0b, 0x98a6, 0x424d, 0x0, 0x0);
        gbc.writeMem(0x7aa0, { 0x11, 0xa3, 0xa });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x611e, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0303
        gbc.setState(0x3caa, 0xfe68, 0x7f90, 0xf09c, 0x566e, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0x3caa, { 0x11, 0xe3, 0x26 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0x3cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0304
        gbc.setState(0x4eef, 0xd5cc, 0xdef0, 0x9b89, 0x9d2f, 0x9404, 0x0, 0x1);
        gbc.writeMem(0x4eef, { 0x11, 0x45, 0xf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0305
        gbc.setState(0xec1f, 0xe111, 0xee20, 0x6440, 0x93a, 0x30fe, 0x1, 0x1);
        gbc.writeMem(0xec1f, { 0x11, 0xcb, 0x99 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xec1f));
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x99, gbc.readMem(0xec21));
        // 11 0306
        gbc.setState(0x2750, 0x8308, 0xe500, 0xd5b4, 0xfb28, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0x2750, { 0x11, 0xc, 0xc6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0307
        gbc.setState(0x8f39, 0x245a, 0x9f10, 0x62d3, 0x1ec1, 0xa500, 0x1, 0x0);
        gbc.writeMem(0x8f39, { 0x11, 0xef, 0xfa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x245a, gbc.sp());
        EXPECT(0x8f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8f39));
        EXPECT(0xef, gbc.readMem(0x8f3a));
        EXPECT(0xfa, gbc.readMem(0x8f3b));
        // 11 0309
        gbc.setState(0x52d7, 0x9925, 0xd600, 0xb239, 0x2ccb, 0xaea4, 0x1, 0x0);
        gbc.writeMem(0x52d7, { 0x11, 0x23, 0x40 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 030A
        gbc.setState(0x7737, 0x8d5b, 0x560, 0x11b5, 0x3d3a, 0x3570, 0x1, 0x0);
        gbc.writeMem(0x7737, { 0x11, 0x17, 0x3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 030B
        gbc.setState(0x30c0, 0x7e92, 0xb000, 0x99e3, 0xbb6c, 0x93e7, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0x11, 0x41, 0xef });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e92, gbc.sp());
        EXPECT(0x30c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 030C
        gbc.setState(0x55e6, 0xe44e, 0x8980, 0x288a, 0xa534, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x55e6, { 0x11, 0x91, 0x82 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0x55e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 030E
        gbc.setState(0x36ee, 0x75ec, 0x5970, 0x20c0, 0xa275, 0xba45, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0x11, 0xc6, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0x36f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 030F
        gbc.setState(0xe0c9, 0xbeb0, 0x1c70, 0xd128, 0x93bf, 0x3da5, 0x0, 0x0);
        gbc.writeMem(0xe0c9, { 0x11, 0x35, 0x20 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe0c9));
        EXPECT(0x35, gbc.readMem(0xe0ca));
        EXPECT(0x20, gbc.readMem(0xe0cb));
        // 11 0310
        gbc.setState(0x5670, 0x1307, 0xca10, 0xee6c, 0x8c16, 0x388, 0x1, 0x1);
        gbc.writeMem(0x5670, { 0x11, 0xe0, 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0311
        gbc.setState(0x3a0d, 0xa5ce, 0x57e0, 0x5933, 0x7f58, 0x4bc5, 0x1, 0x1);
        gbc.writeMem(0x3a0d, { 0x11, 0x69, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa5ce, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0312
        gbc.setState(0x3a70, 0x1e03, 0x4560, 0x412a, 0xf41e, 0xa90f, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0x11, 0xb, 0x2a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1e03, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0313
        gbc.setState(0x8599, 0xebc6, 0x36e0, 0x405a, 0x1e81, 0xb783, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0x11, 0xbc, 0xce });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xebc6, gbc.sp());
        EXPECT(0x859c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8599));
        EXPECT(0xbc, gbc.readMem(0x859a));
        EXPECT(0xce, gbc.readMem(0x859b));
        // 11 0314
        gbc.setState(0xadab, 0x1ad4, 0x8290, 0x5282, 0x3031, 0xd57c, 0x0, 0x0);
        gbc.writeMem(0xadab, { 0x11, 0x1e, 0x93 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xadab));
        EXPECT(0x1e, gbc.readMem(0xadac));
        EXPECT(0x93, gbc.readMem(0xadad));
        // 11 0315
        gbc.setState(0xeb42, 0xdf5e, 0x6560, 0x1ad8, 0x7ee7, 0x7460, 0x1, 0x1);
        gbc.writeMem(0xeb42, { 0x11, 0x59, 0x97 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdf5e, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xeb42));
        EXPECT(0x59, gbc.readMem(0xeb43));
        EXPECT(0x97, gbc.readMem(0xeb44));
        // 11 0317
        gbc.setState(0xcb20, 0x5e85, 0x6eb0, 0x5dc6, 0x6685, 0x8f60, 0x0, 0x0);
        gbc.writeMem(0xcb20, { 0x11, 0xa2, 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5e85, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcb20));
        EXPECT(0xa2, gbc.readMem(0xcb21));
        EXPECT(0x7, gbc.readMem(0xcb22));
        // 11 0318
        gbc.setState(0x18b4, 0x75d1, 0x5790, 0xf639, 0xcc25, 0x893c, 0x0, 0x1);
        gbc.writeMem(0x18b4, { 0x11, 0x8d, 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x75d1, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0319
        gbc.setState(0x573d, 0xaa59, 0xac0, 0x1bba, 0x8ea8, 0x602b, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0x11, 0xe0, 0xab });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaa59, gbc.sp());
        EXPECT(0x5740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 031A
        gbc.setState(0x9b37, 0x6c25, 0x2a80, 0x4bd8, 0x95dc, 0xf1d2, 0x1, 0x1);
        gbc.writeMem(0x9b37, { 0x11, 0x58, 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c25, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9b37));
        EXPECT(0x58, gbc.readMem(0x9b38));
        EXPECT(0x9b, gbc.readMem(0x9b39));
        // 11 031B
        gbc.setState(0x8e49, 0x7e87, 0xd330, 0x34b6, 0x2799, 0xbf42, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0x11, 0x77, 0xf });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0x8e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8e49));
        EXPECT(0x77, gbc.readMem(0x8e4a));
        EXPECT(0xf, gbc.readMem(0x8e4b));
        // 11 031C
        gbc.setState(0x2b22, 0xa91a, 0x5020, 0x8ca0, 0xd362, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0x11, 0x42, 0xd6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0x2b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 031D
        gbc.setState(0xc74a, 0x25e4, 0xd1b0, 0xd406, 0x6f38, 0xfbe8, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x11, 0x9, 0x86 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x25e4, gbc.sp());
        EXPECT(0xc74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc74a));
        EXPECT(0x9, gbc.readMem(0xc74b));
        EXPECT(0x86, gbc.readMem(0xc74c));
        // 11 031F
        gbc.setState(0xe3e2, 0xa6ed, 0x4470, 0x2cdf, 0x27ed, 0x4fb, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0x11, 0xbd, 0x29 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0xe3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe3e2));
        EXPECT(0xbd, gbc.readMem(0xe3e3));
        EXPECT(0x29, gbc.readMem(0xe3e4));
        // 11 0320
        gbc.setState(0x3b4f, 0xaa24, 0x85a0, 0xc7ae, 0x7c26, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0x3b4f, { 0x11, 0x11, 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0321
        gbc.setState(0x6794, 0x95ba, 0x8210, 0xe380, 0x923b, 0xf641, 0x0, 0x1);
        gbc.writeMem(0x6794, { 0x11, 0x52, 0x11 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x95ba, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0322
        gbc.setState(0xc04c, 0xbf9b, 0x91b0, 0x4f13, 0xf78d, 0x9c1f, 0x0, 0x1);
        gbc.writeMem(0xc04c, { 0x11, 0xc3, 0xe7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf9b, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc04c));
        EXPECT(0xc3, gbc.readMem(0xc04d));
        EXPECT(0xe7, gbc.readMem(0xc04e));
        // 11 0323
        gbc.setState(0x43b9, 0xf2c5, 0x5c90, 0xf1e3, 0xc71e, 0x5709, 0x1, 0x0);
        gbc.writeMem(0x43b9, { 0x11, 0x13, 0xa5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2c5, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0324
        gbc.setState(0xe910, 0x2d66, 0x2240, 0xaa4, 0xfd78, 0x6cb, 0x1, 0x1);
        gbc.writeMem(0xe910, { 0x11, 0x5a, 0xe7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe910));
        EXPECT(0x5a, gbc.readMem(0xe911));
        EXPECT(0xe7, gbc.readMem(0xe912));
        // 11 0325
        gbc.setState(0x5622, 0x4272, 0xfd40, 0xb105, 0x9c6d, 0x99b3, 0x1, 0x0);
        gbc.writeMem(0x5622, { 0x11, 0xb0, 0xd3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4272, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0326
        gbc.setState(0xab1f, 0xc31b, 0x44d0, 0x841f, 0xfcc9, 0xcefa, 0x1, 0x1);
        gbc.writeMem(0xab1f, { 0x11, 0x6b, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc31b, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xab1f));
        EXPECT(0x6b, gbc.readMem(0xab20));
        EXPECT(0xf7, gbc.readMem(0xab21));
        // 11 0329
        gbc.setState(0x3418, 0xc7ee, 0x52e0, 0x604b, 0x16ee, 0x3a01, 0x1, 0x0);
        gbc.writeMem(0x3418, { 0x11, 0x4e, 0x3e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x341b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 032A
        gbc.setState(0x365f, 0xe53a, 0x3340, 0x8666, 0x8f20, 0xdbea, 0x0, 0x0);
        gbc.writeMem(0x365f, { 0x11, 0x7a, 0xfc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe53a, gbc.sp());
        EXPECT(0x3662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 032B
        gbc.setState(0x82c9, 0x20c4, 0x9e90, 0x83fd, 0xa614, 0xec65, 0x0, 0x0);
        gbc.writeMem(0x82c9, { 0x11, 0x84, 0x5a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x82c9));
        EXPECT(0x84, gbc.readMem(0x82ca));
        EXPECT(0x5a, gbc.readMem(0x82cb));
        // 11 032C
        gbc.setState(0x3198, 0x6a10, 0x25c0, 0xd20d, 0xe88c, 0x40ff, 0x0, 0x0);
        gbc.writeMem(0x3198, { 0x11, 0xa8, 0xa3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 032D
        gbc.setState(0xba03, 0x599b, 0xb1b0, 0x6550, 0xdd25, 0xa279, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x11, 0xc1, 0x8c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0xba06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xba03));
        EXPECT(0xc1, gbc.readMem(0xba04));
        EXPECT(0x8c, gbc.readMem(0xba05));
        // 11 032E
        gbc.setState(0xb2ad, 0x7595, 0x13a0, 0x74d5, 0xfc6f, 0x645f, 0x1, 0x1);
        gbc.writeMem(0xb2ad, { 0x11, 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7595, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb2ad));
        EXPECT(0xd6, gbc.readMem(0xb2ae));
        EXPECT(0xd7, gbc.readMem(0xb2af));
        // 11 0330
        gbc.setState(0xef83, 0x3da, 0x4eb0, 0xbd44, 0xd53f, 0xa37a, 0x0, 0x1);
        gbc.writeMem(0xef83, { 0x11, 0xd4, 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3da, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xef83));
        EXPECT(0xd4, gbc.readMem(0xef84));
        EXPECT(0x4, gbc.readMem(0xef85));
        // 11 0332
        gbc.setState(0x10d4, 0x541e, 0x8f10, 0xfe76, 0xb6d6, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0x10d4, { 0x11, 0x75, 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x541e, gbc.sp());
        EXPECT(0x10d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0333
        gbc.setState(0xb5bb, 0xca4a, 0x91a0, 0x35fa, 0x1eb7, 0x8971, 0x1, 0x1);
        gbc.writeMem(0xb5bb, { 0x11, 0x79, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb5bb));
        EXPECT(0x79, gbc.readMem(0xb5bc));
        EXPECT(0xa4, gbc.readMem(0xb5bd));
        // 11 0334
        gbc.setState(0xc81c, 0xe6e6, 0x41c0, 0x1265, 0x2746, 0x6cd, 0x0, 0x1);
        gbc.writeMem(0xc81c, { 0x11, 0xb8, 0x65 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe6e6, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc81c));
        EXPECT(0xb8, gbc.readMem(0xc81d));
        EXPECT(0x65, gbc.readMem(0xc81e));
        // 11 0335
        gbc.setState(0x7acf, 0x4a45, 0x3300, 0x12e3, 0x4973, 0xcf05, 0x0, 0x1);
        gbc.writeMem(0x7acf, { 0x11, 0x56, 0x8c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0336
        gbc.setState(0xa6b6, 0x2dab, 0x7d10, 0xf568, 0xee5d, 0x429c, 0x1, 0x1);
        gbc.writeMem(0xa6b6, { 0x11, 0x70, 0x1b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2dab, gbc.sp());
        EXPECT(0xa6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa6b6));
        EXPECT(0x70, gbc.readMem(0xa6b7));
        EXPECT(0x1b, gbc.readMem(0xa6b8));
        // 11 0337
        gbc.setState(0x9f78, 0x9212, 0x31c0, 0x642f, 0x1ea2, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0x11, 0xff, 0xcc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9f78));
        EXPECT(0xff, gbc.readMem(0x9f79));
        EXPECT(0xcc, gbc.readMem(0x9f7a));
        // 11 0339
        gbc.setState(0x4bb, 0x5034, 0xed90, 0xeee4, 0x1d9, 0xf394, 0x1, 0x1);
        gbc.writeMem(0x4bb, { 0x11, 0x68, 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5034, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 033A
        gbc.setState(0x415, 0x13f2, 0xa860, 0xb3d7, 0x1dfe, 0x6e3c, 0x0, 0x1);
        gbc.writeMem(0x415, { 0x11, 0xf7, 0x15 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0x418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 033B
        gbc.setState(0xbb33, 0x7aee, 0x5930, 0x8193, 0x9656, 0x3771, 0x0, 0x1);
        gbc.writeMem(0xbb33, { 0x11, 0x3d, 0x81 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7aee, gbc.sp());
        EXPECT(0xbb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb33));
        EXPECT(0x3d, gbc.readMem(0xbb34));
        EXPECT(0x81, gbc.readMem(0xbb35));
        // 11 033C
        gbc.setState(0xa025, 0x7aa9, 0x7b40, 0xa1fe, 0x5c24, 0xd299, 0x0, 0x0);
        gbc.writeMem(0xa025, { 0x11, 0xb9, 0x1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7aa9, gbc.sp());
        EXPECT(0xa028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa025));
        EXPECT(0xb9, gbc.readMem(0xa026));
        EXPECT(0x1, gbc.readMem(0xa027));
        // 11 033D
        gbc.setState(0xd880, 0x2c84, 0xa220, 0xcfa6, 0x611e, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0xd880, { 0x11, 0x2c, 0xd2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2c84, gbc.sp());
        EXPECT(0xd883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd880));
        EXPECT(0x2c, gbc.readMem(0xd881));
        EXPECT(0xd2, gbc.readMem(0xd882));
        // 11 033E
        gbc.setState(0xb930, 0x11c0, 0xfe10, 0xf881, 0xe830, 0xccde, 0x0, 0x1);
        gbc.writeMem(0xb930, { 0x11, 0x9f, 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x11c0, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb930));
        EXPECT(0x9f, gbc.readMem(0xb931));
        EXPECT(0xb0, gbc.readMem(0xb932));
        // 11 033F
        gbc.setState(0xd2db, 0x6fdc, 0x28b0, 0x39c3, 0x2496, 0xab62, 0x1, 0x1);
        gbc.writeMem(0xd2db, { 0x11, 0xbb, 0x73 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6fdc, gbc.sp());
        EXPECT(0xd2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd2db));
        EXPECT(0xbb, gbc.readMem(0xd2dc));
        EXPECT(0x73, gbc.readMem(0xd2dd));
        // 11 0340
        gbc.setState(0x78ce, 0xe578, 0x1c10, 0xa322, 0x19c7, 0x715a, 0x0, 0x1);
        gbc.writeMem(0x78ce, { 0x11, 0x77, 0xae });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0341
        gbc.setState(0x12ce, 0xa5c8, 0x8f00, 0x4e51, 0x6046, 0x5ba, 0x1, 0x1);
        gbc.writeMem(0x12ce, { 0x11, 0xb0, 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa5c8, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0342
        gbc.setState(0x6518, 0xef3f, 0xb340, 0x2b2d, 0xf244, 0xfd50, 0x1, 0x0);
        gbc.writeMem(0x6518, { 0x11, 0x72, 0xe0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xef3f, gbc.sp());
        EXPECT(0x651b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0343
        gbc.setState(0xb2c9, 0x1353, 0x59a0, 0xb194, 0xe0, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0xb2c9, { 0x11, 0x55, 0x24 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0xb2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb2c9));
        EXPECT(0x55, gbc.readMem(0xb2ca));
        EXPECT(0x24, gbc.readMem(0xb2cb));
        // 11 0345
        gbc.setState(0x9a9a, 0xb841, 0x4470, 0xed33, 0x5c74, 0x9285, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0x11, 0x91, 0x6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0x9a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9a9a));
        EXPECT(0x91, gbc.readMem(0x9a9b));
        EXPECT(0x6, gbc.readMem(0x9a9c));
        // 11 0346
        gbc.setState(0x767d, 0x7388, 0xf150, 0xeaa8, 0x6afe, 0x97ad, 0x0, 0x0);
        gbc.writeMem(0x767d, { 0x11, 0x91, 0xc4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7388, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0347
        gbc.setState(0xc746, 0x3af4, 0x4ad0, 0x716b, 0xe25a, 0xcd4a, 0x1, 0x0);
        gbc.writeMem(0xc746, { 0x11, 0x4f, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3af4, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc746));
        EXPECT(0x4f, gbc.readMem(0xc747));
        EXPECT(0x9b, gbc.readMem(0xc748));
        // 11 0348
        gbc.setState(0xbf7e, 0x9f36, 0xd7f0, 0x5f72, 0xefb2, 0x70ba, 0x0, 0x1);
        gbc.writeMem(0xbf7e, { 0x11, 0x41, 0x8c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9f36, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbf7e));
        EXPECT(0x41, gbc.readMem(0xbf7f));
        EXPECT(0x8c, gbc.readMem(0xbf80));
        // 11 034A
        gbc.setState(0x4670, 0xe2cd, 0x4870, 0xd380, 0x4fbe, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0x11, 0xa5, 0xd6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 034B
        gbc.setState(0xde1b, 0xc5fd, 0x72a0, 0x603d, 0x7590, 0xde81, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0x11, 0x1d, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc5fd, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xde1b));
        EXPECT(0x1d, gbc.readMem(0xde1c));
        EXPECT(0x9b, gbc.readMem(0xde1d));
        // 11 034C
        gbc.setState(0xcdfd, 0x6d78, 0xefa0, 0x6b7f, 0xe098, 0x879c, 0x1, 0x1);
        gbc.writeMem(0xcdfd, { 0x11, 0xe6, 0x1e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0xce00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcdfd));
        EXPECT(0xe6, gbc.readMem(0xcdfe));
        EXPECT(0x1e, gbc.readMem(0xcdff));
        // 11 034D
        gbc.setState(0xcac4, 0x7389, 0xc210, 0xae11, 0xf63d, 0xd858, 0x0, 0x0);
        gbc.writeMem(0xcac4, { 0x11, 0x9b, 0xd6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0xcac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcac4));
        EXPECT(0x9b, gbc.readMem(0xcac5));
        EXPECT(0xd6, gbc.readMem(0xcac6));
        // 11 034E
        gbc.setState(0x43f7, 0x84ac, 0x9e50, 0x737d, 0xb023, 0x36e5, 0x1, 0x1);
        gbc.writeMem(0x43f7, { 0x11, 0xd5, 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 034F
        gbc.setState(0x119d, 0x905f, 0x3280, 0xa7f6, 0xfa7d, 0xc116, 0x1, 0x0);
        gbc.writeMem(0x119d, { 0x11, 0x3, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x905f, gbc.sp());
        EXPECT(0x11a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0350
        gbc.setState(0x8df5, 0x30dc, 0x4ab0, 0x445, 0xe5f6, 0xde94, 0x0, 0x0);
        gbc.writeMem(0x8df5, { 0x11, 0xec, 0xe6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x8df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8df5));
        EXPECT(0xec, gbc.readMem(0x8df6));
        EXPECT(0xe6, gbc.readMem(0x8df7));
        // 11 0351
        gbc.setState(0x11b5, 0xe91d, 0x8320, 0x245a, 0x6538, 0x13bd, 0x0, 0x1);
        gbc.writeMem(0x11b5, { 0x11, 0xbd, 0x71 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe91d, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0352
        gbc.setState(0xa851, 0xeefd, 0xbcd0, 0xf5dc, 0x7c12, 0xd279, 0x1, 0x1);
        gbc.writeMem(0xa851, { 0x11, 0x37, 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeefd, gbc.sp());
        EXPECT(0xa854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa851));
        EXPECT(0x37, gbc.readMem(0xa852));
        EXPECT(0x40, gbc.readMem(0xa853));
        // 11 0353
        gbc.setState(0x6f8b, 0x5020, 0x6520, 0x63ba, 0x276e, 0x2b60, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0x11, 0x73, 0x88 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0355
        gbc.setState(0xeb05, 0x790, 0xaf70, 0xb0b6, 0x1bd, 0xee05, 0x0, 0x0);
        gbc.writeMem(0xeb05, { 0x11, 0x85, 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x790, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xeb05));
        EXPECT(0x85, gbc.readMem(0xeb06));
        EXPECT(0x66, gbc.readMem(0xeb07));
        // 11 0356
        gbc.setState(0xc660, 0x8604, 0x12a0, 0xb028, 0x9226, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0xc660, { 0x11, 0x12, 0xb3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc660));
        EXPECT(0x12, gbc.readMem(0xc661));
        EXPECT(0xb3, gbc.readMem(0xc662));
        // 11 0358
        gbc.setState(0xe361, 0x5926, 0xde90, 0x66df, 0x4873, 0xc91d, 0x0, 0x0);
        gbc.writeMem(0xe361, { 0x11, 0xf3, 0xc8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe361));
        EXPECT(0xf3, gbc.readMem(0xe362));
        EXPECT(0xc8, gbc.readMem(0xe363));
        // 11 0359
        gbc.setState(0x8b05, 0xc97b, 0x3960, 0xf770, 0x98, 0x183e, 0x0, 0x0);
        gbc.writeMem(0x8b05, { 0x11, 0x32, 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8b05));
        EXPECT(0x32, gbc.readMem(0x8b06));
        EXPECT(0x9b, gbc.readMem(0x8b07));
        // 11 035A
        gbc.setState(0x49d5, 0xe4b6, 0xf700, 0x782d, 0x6f46, 0x2ad8, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0x11, 0x8e, 0x20 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0x49d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 035B
        gbc.setState(0xa65e, 0xc114, 0x38d0, 0x177d, 0x2569, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0xa65e, { 0x11, 0xbd, 0x4d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc114, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa65e));
        EXPECT(0xbd, gbc.readMem(0xa65f));
        EXPECT(0x4d, gbc.readMem(0xa660));
        // 11 035C
        gbc.setState(0xccf0, 0xe7c4, 0x3a60, 0x6f25, 0x84ab, 0xb97f, 0x1, 0x1);
        gbc.writeMem(0xccf0, { 0x11, 0x9c, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xccf0));
        EXPECT(0x9c, gbc.readMem(0xccf1));
        EXPECT(0xec, gbc.readMem(0xccf2));
        // 11 035D
        gbc.setState(0x2337, 0xa348, 0x2b50, 0x1559, 0x6f97, 0xa538, 0x1, 0x0);
        gbc.writeMem(0x2337, { 0x11, 0x24, 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0x233a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 035E
        gbc.setState(0xbab4, 0x351a, 0x9a20, 0x2baf, 0x5532, 0x2828, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0x11, 0xc1, 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x351a, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbab4));
        EXPECT(0xc1, gbc.readMem(0xbab5));
        EXPECT(0x6a, gbc.readMem(0xbab6));
        // 11 035F
        gbc.setState(0x8ae3, 0xc103, 0xebd0, 0x2a55, 0x4242, 0xa07f, 0x1, 0x0);
        gbc.writeMem(0x8ae3, { 0x11, 0x2c, 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc103, gbc.sp());
        EXPECT(0x8ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8ae3));
        EXPECT(0x2c, gbc.readMem(0x8ae4));
        EXPECT(0x55, gbc.readMem(0x8ae5));
        // 11 0360
        gbc.setState(0xef9c, 0x2510, 0x17f0, 0x6dc3, 0x422, 0xd173, 0x1, 0x1);
        gbc.writeMem(0xef9c, { 0x11, 0x22, 0x76 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xef9c));
        EXPECT(0x22, gbc.readMem(0xef9d));
        EXPECT(0x76, gbc.readMem(0xef9e));
        // 11 0361
        gbc.setState(0xbaf3, 0x2707, 0x13f0, 0x9855, 0x55b1, 0xc2cc, 0x0, 0x1);
        gbc.writeMem(0xbaf3, { 0x11, 0x13, 0x4a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0xbaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbaf3));
        EXPECT(0x13, gbc.readMem(0xbaf4));
        EXPECT(0x4a, gbc.readMem(0xbaf5));
        // 11 0362
        gbc.setState(0x8bd, 0x5839, 0x1840, 0xdc32, 0xfe6f, 0xfd90, 0x0, 0x1);
        gbc.writeMem(0x8bd, { 0x11, 0x27, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0363
        gbc.setState(0xd267, 0xebec, 0x3500, 0x877a, 0x8221, 0xb787, 0x1, 0x1);
        gbc.writeMem(0xd267, { 0x11, 0xc3, 0xe0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xebec, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd267));
        EXPECT(0xc3, gbc.readMem(0xd268));
        EXPECT(0xe0, gbc.readMem(0xd269));
        // 11 0364
        gbc.setState(0xe05a, 0x25c5, 0x6510, 0x4386, 0x9aac, 0x85de, 0x0, 0x0);
        gbc.writeMem(0xe05a, { 0x11, 0x40, 0xe });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x25c5, gbc.sp());
        EXPECT(0xe05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe05a));
        EXPECT(0x40, gbc.readMem(0xe05b));
        EXPECT(0xe, gbc.readMem(0xe05c));
        // 11 0366
        gbc.setState(0x2584, 0x5275, 0x6c80, 0xe4c6, 0x52d2, 0xb944, 0x0, 0x0);
        gbc.writeMem(0x2584, { 0x11, 0xa3, 0x53 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0x2587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0367
        gbc.setState(0x9936, 0xf40b, 0xc870, 0x1918, 0xc531, 0xee0, 0x1, 0x0);
        gbc.writeMem(0x9936, { 0x11, 0x7a, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf40b, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9936));
        EXPECT(0x7a, gbc.readMem(0x9937));
        EXPECT(0x41, gbc.readMem(0x9938));
        // 11 0368
        gbc.setState(0x3abd, 0xcc80, 0x71d0, 0x2122, 0xb64b, 0xbfdb, 0x1, 0x1);
        gbc.writeMem(0x3abd, { 0x11, 0x5a, 0x26 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0369
        gbc.setState(0x31bc, 0x4519, 0x34b0, 0x2e4b, 0x3b8f, 0xde6d, 0x1, 0x1);
        gbc.writeMem(0x31bc, { 0x11, 0xda, 0x61 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4519, gbc.sp());
        EXPECT(0x31bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 036A
        gbc.setState(0x28e2, 0xd28f, 0xf780, 0xb5a9, 0x657b, 0x574c, 0x1, 0x0);
        gbc.writeMem(0x28e2, { 0x11, 0xdc, 0x34 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd28f, gbc.sp());
        EXPECT(0x28e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 036B
        gbc.setState(0xe49c, 0xd848, 0xeb90, 0xf3d7, 0x1347, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0xe49c, { 0x11, 0x98, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe49c));
        EXPECT(0x98, gbc.readMem(0xe49d));
        EXPECT(0x7, gbc.readMem(0xe49e));
        // 11 036C
        gbc.setState(0xa6a1, 0x678e, 0x7680, 0xb049, 0xcd5c, 0xe656, 0x0, 0x1);
        gbc.writeMem(0xa6a1, { 0x11, 0x5d, 0x9e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0xa6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa6a1));
        EXPECT(0x5d, gbc.readMem(0xa6a2));
        EXPECT(0x9e, gbc.readMem(0xa6a3));
        // 11 036D
        gbc.setState(0xcd69, 0x8ec1, 0x1d60, 0xd5b0, 0x27bf, 0x65ce, 0x0, 0x1);
        gbc.writeMem(0xcd69, { 0x11, 0x88, 0xc0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0xcd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcd69));
        EXPECT(0x88, gbc.readMem(0xcd6a));
        EXPECT(0xc0, gbc.readMem(0xcd6b));
        // 11 0370
        gbc.setState(0xc919, 0xe66c, 0xae50, 0x5589, 0x9045, 0xbc8, 0x0, 0x1);
        gbc.writeMem(0xc919, { 0x11, 0xe2, 0x83 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe66c, gbc.sp());
        EXPECT(0xc91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc919));
        EXPECT(0xe2, gbc.readMem(0xc91a));
        EXPECT(0x83, gbc.readMem(0xc91b));
        // 11 0371
        gbc.setState(0xa888, 0x1220, 0x56f0, 0x9473, 0x5773, 0xdd6e, 0x1, 0x0);
        gbc.writeMem(0xa888, { 0x11, 0x89, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1220, gbc.sp());
        EXPECT(0xa88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa888));
        EXPECT(0x89, gbc.readMem(0xa889));
        EXPECT(0xb8, gbc.readMem(0xa88a));
        // 11 0372
        gbc.setState(0x577c, 0x91f6, 0xee00, 0x39c0, 0x24e4, 0xf3e, 0x1, 0x0);
        gbc.writeMem(0x577c, { 0x11, 0xef, 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x91f6, gbc.sp());
        EXPECT(0x577f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0373
        gbc.setState(0xcf00, 0x37f, 0x8e20, 0xf983, 0x740a, 0x4d4, 0x0, 0x1);
        gbc.writeMem(0xcf00, { 0x11, 0xb0, 0xd3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcf00));
        EXPECT(0xb0, gbc.readMem(0xcf01));
        EXPECT(0xd3, gbc.readMem(0xcf02));
        // 11 0374
        gbc.setState(0x16aa, 0xc75f, 0x6dd0, 0x106f, 0x17e7, 0xa8c5, 0x1, 0x0);
        gbc.writeMem(0x16aa, { 0x11, 0xad, 0xc8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x16ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0376
        gbc.setState(0xb4c, 0xe0ab, 0x15d0, 0x7ddd, 0x8361, 0x6c00, 0x1, 0x1);
        gbc.writeMem(0xb4c, { 0x11, 0xe1, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe0ab, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0377
        gbc.setState(0x2ef3, 0xbcea, 0xe70, 0x8555, 0x70f8, 0x42ab, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0x11, 0xaa, 0x58 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcea, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0378
        gbc.setState(0xc85e, 0x72f5, 0x1330, 0x93f8, 0xfa2a, 0x2695, 0x0, 0x0);
        gbc.writeMem(0xc85e, { 0x11, 0x1a, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x72f5, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc85e));
        EXPECT(0x1a, gbc.readMem(0xc85f));
        EXPECT(0x10, gbc.readMem(0xc860));
        // 11 0379
        gbc.setState(0x6693, 0x41bd, 0xe2c0, 0x1af8, 0x7d, 0x6039, 0x0, 0x1);
        gbc.writeMem(0x6693, { 0x11, 0x67, 0xe5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x41bd, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 037A
        gbc.setState(0xd16d, 0xf956, 0xdf60, 0xe36, 0x3954, 0xb339, 0x1, 0x0);
        gbc.writeMem(0xd16d, { 0x11, 0xa3, 0x35 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf956, gbc.sp());
        EXPECT(0xd170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd16d));
        EXPECT(0xa3, gbc.readMem(0xd16e));
        EXPECT(0x35, gbc.readMem(0xd16f));
        // 11 037B
        gbc.setState(0xa847, 0x8a00, 0x3310, 0xc376, 0x4008, 0x7e17, 0x0, 0x1);
        gbc.writeMem(0xa847, { 0x11, 0x2a, 0xe5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa847));
        EXPECT(0x2a, gbc.readMem(0xa848));
        EXPECT(0xe5, gbc.readMem(0xa849));
        // 11 037D
        gbc.setState(0xecf3, 0xcc4b, 0x9430, 0x475f, 0x733b, 0x1f9d, 0x1, 0x0);
        gbc.writeMem(0xecf3, { 0x11, 0x59, 0xc0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0xecf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xecf3));
        EXPECT(0x59, gbc.readMem(0xecf4));
        EXPECT(0xc0, gbc.readMem(0xecf5));
        // 11 037E
        gbc.setState(0x280f, 0xbf9f, 0xa310, 0x6f89, 0xbc6e, 0x4f89, 0x0, 0x0);
        gbc.writeMem(0x280f, { 0x11, 0x54, 0x65 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 037F
        gbc.setState(0xd80b, 0x58e6, 0x2f00, 0xf09e, 0xf1c8, 0xe04b, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0x11, 0xa, 0xf6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x58e6, gbc.sp());
        EXPECT(0xd80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd80b));
        EXPECT(0xa, gbc.readMem(0xd80c));
        EXPECT(0xf6, gbc.readMem(0xd80d));
        // 11 0381
        gbc.setState(0x1320, 0x8de7, 0x1320, 0xc0ba, 0x3ce3, 0xf7f9, 0x0, 0x1);
        gbc.writeMem(0x1320, { 0x11, 0xdf, 0xb5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0382
        gbc.setState(0xa738, 0xc73, 0x1e80, 0x6f80, 0xd631, 0xe757, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x11, 0xd1, 0xd1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa738));
        EXPECT(0xd1, gbc.readMem(0xa739));
        EXPECT(0xd1, gbc.readMem(0xa73a));
        // 11 0383
        gbc.setState(0xbc0d, 0x965e, 0x8450, 0xf02c, 0xdfec, 0x15af, 0x0, 0x1);
        gbc.writeMem(0xbc0d, { 0x11, 0xe2, 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbc0d));
        EXPECT(0xe2, gbc.readMem(0xbc0e));
        EXPECT(0x52, gbc.readMem(0xbc0f));
        // 11 0384
        gbc.setState(0x989b, 0x69b4, 0xe390, 0x389d, 0x9d19, 0xe359, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0x11, 0x13, 0x69 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x69b4, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x989b));
        EXPECT(0x13, gbc.readMem(0x989c));
        EXPECT(0x69, gbc.readMem(0x989d));
        // 11 0385
        gbc.setState(0x78eb, 0x3360, 0xcbd0, 0x97c1, 0x389c, 0xfb28, 0x0, 0x0);
        gbc.writeMem(0x78eb, { 0x11, 0xfc, 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3360, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0386
        gbc.setState(0x75af, 0xc132, 0x31e0, 0x7d3c, 0xefd0, 0x2b71, 0x0, 0x1);
        gbc.writeMem(0x75af, { 0x11, 0xc1, 0x98 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc132, gbc.sp());
        EXPECT(0x75b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0387
        gbc.setState(0x24f6, 0x7a70, 0x8d00, 0xd8b3, 0xe0ce, 0xe744, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0x11, 0x2a, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0x24f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0388
        gbc.setState(0x645a, 0x2886, 0xf600, 0xfc73, 0xa6ae, 0x484b, 0x1, 0x0);
        gbc.writeMem(0x645a, { 0x11, 0xae, 0x46 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 038A
        gbc.setState(0x5ffc, 0xbbb4, 0xa1e0, 0x5dc7, 0x746, 0x7ccb, 0x0, 0x1);
        gbc.writeMem(0x5ffc, { 0x11, 0xea, 0x62 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbbb4, gbc.sp());
        EXPECT(0x5fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 038B
        gbc.setState(0x619b, 0x3f1b, 0xa1f0, 0x4d1f, 0xb7b5, 0x10fe, 0x0, 0x1);
        gbc.writeMem(0x619b, { 0x11, 0x70, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3f1b, gbc.sp());
        EXPECT(0x619e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 038C
        gbc.setState(0x6774, 0x556, 0xb180, 0xdaf4, 0x6906, 0x42d3, 0x0, 0x0);
        gbc.writeMem(0x6774, { 0x11, 0x25, 0x28 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x556, gbc.sp());
        EXPECT(0x6777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 038E
        gbc.setState(0x8e71, 0x4583, 0x9650, 0xe21, 0x2965, 0x6c45, 0x0, 0x1);
        gbc.writeMem(0x8e71, { 0x11, 0x1f, 0x7f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0x8e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8e71));
        EXPECT(0x1f, gbc.readMem(0x8e72));
        EXPECT(0x7f, gbc.readMem(0x8e73));
        // 11 038F
        gbc.setState(0x914, 0x509c, 0x9470, 0xc505, 0xeda5, 0x5ae0, 0x1, 0x0);
        gbc.writeMem(0x914, { 0x11, 0xa8, 0x26 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0x917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0390
        gbc.setState(0xece4, 0x8bc5, 0x7ce0, 0xa31d, 0xa933, 0xd7cb, 0x0, 0x1);
        gbc.writeMem(0xece4, { 0x11, 0x31, 0x11 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0xece7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xece4));
        EXPECT(0x31, gbc.readMem(0xece5));
        EXPECT(0x11, gbc.readMem(0xece6));
        // 11 0391
        gbc.setState(0x634, 0x6fae, 0x4e20, 0xe38d, 0xecb8, 0xf894, 0x1, 0x0);
        gbc.writeMem(0x634, { 0x11, 0xc5, 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0392
        gbc.setState(0xdc0, 0x972c, 0xd8c0, 0x567e, 0xd4e4, 0xe202, 0x0, 0x1);
        gbc.writeMem(0xdc0, { 0x11, 0x12, 0xc7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0393
        gbc.setState(0x9282, 0xd725, 0x5f40, 0x39af, 0xb8b6, 0x3bad, 0x0, 0x0);
        gbc.writeMem(0x9282, { 0x11, 0x9e, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9282));
        EXPECT(0x9e, gbc.readMem(0x9283));
        EXPECT(0xb6, gbc.readMem(0x9284));
        // 11 0394
        gbc.setState(0x3cde, 0xcd4d, 0x2f80, 0xd3cc, 0x5362, 0x1063, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x11, 0x87, 0x70 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0x3ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 0395
        gbc.setState(0x6e40, 0x91e4, 0xd950, 0x8531, 0xd3eb, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x6e40, { 0x11, 0xbe, 0x96 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x91e4, gbc.sp());
        EXPECT(0x6e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0396
        gbc.setState(0x5538, 0xd898, 0x1e50, 0x3eb0, 0x828a, 0x5ef4, 0x0, 0x1);
        gbc.writeMem(0x5538, { 0x11, 0x19, 0x71 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0x553b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0397
        gbc.setState(0x8467, 0x285e, 0x60e0, 0xb1f6, 0x7b25, 0xbc1a, 0x0, 0x0);
        gbc.writeMem(0x8467, { 0x11, 0x21, 0x3e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8467));
        EXPECT(0x21, gbc.readMem(0x8468));
        EXPECT(0x3e, gbc.readMem(0x8469));
        // 11 0398
        gbc.setState(0x829, 0x654e, 0x8e50, 0x20b6, 0x8fbf, 0x744d, 0x1, 0x1);
        gbc.writeMem(0x829, { 0x11, 0xe6, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 0399
        gbc.setState(0x694a, 0xf096, 0xaa60, 0xf272, 0x65c2, 0xa69f, 0x1, 0x1);
        gbc.writeMem(0x694a, { 0x11, 0xd6, 0xb2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf096, gbc.sp());
        EXPECT(0x694d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 039A
        gbc.setState(0x9c6e, 0xe288, 0xe5f0, 0x442c, 0xe46b, 0x5f96, 0x1, 0x1);
        gbc.writeMem(0x9c6e, { 0x11, 0x3d, 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe288, gbc.sp());
        EXPECT(0x9c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9c6e));
        EXPECT(0x3d, gbc.readMem(0x9c6f));
        EXPECT(0xb5, gbc.readMem(0x9c70));
        // 11 039B
        gbc.setState(0xd076, 0xbcd4, 0xa030, 0x146f, 0x5c4b, 0x239c, 0x0, 0x1);
        gbc.writeMem(0xd076, { 0x11, 0x7e, 0x6e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0xd079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd076));
        EXPECT(0x7e, gbc.readMem(0xd077));
        EXPECT(0x6e, gbc.readMem(0xd078));
        // 11 039C
        gbc.setState(0xa339, 0x5c77, 0x7b60, 0xb741, 0xab13, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0xa339, { 0x11, 0x8b, 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5c77, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa339));
        EXPECT(0x8b, gbc.readMem(0xa33a));
        EXPECT(0xc5, gbc.readMem(0xa33b));
        // 11 039D
        gbc.setState(0x569c, 0x9648, 0x98b0, 0xed9d, 0x565e, 0xc251, 0x0, 0x1);
        gbc.writeMem(0x569c, { 0x11, 0xe7, 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 039E
        gbc.setState(0x5f9d, 0x99e0, 0xd040, 0x7717, 0xa94a, 0x8145, 0x1, 0x0);
        gbc.writeMem(0x5f9d, { 0x11, 0x4e, 0x28 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 039F
        gbc.setState(0xbfde, 0xdb69, 0xb810, 0xd78f, 0xa82, 0x2808, 0x0, 0x1);
        gbc.writeMem(0xbfde, { 0x11, 0x52, 0xee });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbfde));
        EXPECT(0x52, gbc.readMem(0xbfdf));
        EXPECT(0xee, gbc.readMem(0xbfe0));
        // 11 03A0
        gbc.setState(0xbb6a, 0xb98e, 0xb800, 0x38ff, 0x8d6f, 0xd180, 0x0, 0x1);
        gbc.writeMem(0xbb6a, { 0x11, 0xe4, 0xea });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb98e, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb6a));
        EXPECT(0xe4, gbc.readMem(0xbb6b));
        EXPECT(0xea, gbc.readMem(0xbb6c));
        // 11 03A1
        gbc.setState(0x61d4, 0xb836, 0xe200, 0x8061, 0xf432, 0x330e, 0x1, 0x1);
        gbc.writeMem(0x61d4, { 0x11, 0xd4, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb836, gbc.sp());
        EXPECT(0x61d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03A2
        gbc.setState(0x102a, 0xd558, 0x6060, 0x5ac8, 0xc98b, 0x5e16, 0x0, 0x1);
        gbc.writeMem(0x102a, { 0x11, 0x6b, 0xb0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd558, gbc.sp());
        EXPECT(0x102d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03A3
        gbc.setState(0xb67e, 0xb017, 0xcff0, 0x27b1, 0xe7be, 0xea3c, 0x1, 0x1);
        gbc.writeMem(0xb67e, { 0x11, 0x5e, 0xa4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb017, gbc.sp());
        EXPECT(0xb681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb67e));
        EXPECT(0x5e, gbc.readMem(0xb67f));
        EXPECT(0xa4, gbc.readMem(0xb680));
        // 11 03A4
        gbc.setState(0xe037, 0xbede, 0x9020, 0x8cfb, 0x60c1, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0xe037, { 0x11, 0x99, 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0xe03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe037));
        EXPECT(0x99, gbc.readMem(0xe038));
        EXPECT(0x2d, gbc.readMem(0xe039));
        // 11 03A5
        gbc.setState(0x26d1, 0x1ea4, 0x7910, 0x4fbb, 0x63a9, 0xf3ee, 0x1, 0x0);
        gbc.writeMem(0x26d1, { 0x11, 0x12, 0xff });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03A6
        gbc.setState(0xcdd, 0x61d7, 0x9e20, 0x86bb, 0x838f, 0x7e58, 0x0, 0x0);
        gbc.writeMem(0xcdd, { 0x11, 0x60, 0x75 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0xce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03A7
        gbc.setState(0x42d8, 0x398f, 0x5f20, 0x4b4b, 0x75d2, 0x65aa, 0x1, 0x0);
        gbc.writeMem(0x42d8, { 0x11, 0x95, 0x4a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x398f, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03A9
        gbc.setState(0xa924, 0x9be1, 0x5e0, 0x8885, 0x23cd, 0xda3e, 0x1, 0x0);
        gbc.writeMem(0xa924, { 0x11, 0xdd, 0xfe });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0xa927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa924));
        EXPECT(0xdd, gbc.readMem(0xa925));
        EXPECT(0xfe, gbc.readMem(0xa926));
        // 11 03AB
        gbc.setState(0x6e4, 0xd812, 0xa8a0, 0x8ad2, 0x9cb, 0x939a, 0x0, 0x1);
        gbc.writeMem(0x6e4, { 0x11, 0xe3, 0x2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd812, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03AC
        gbc.setState(0x7e8e, 0x72ca, 0xeaf0, 0xf048, 0x2a0a, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0x7e8e, { 0x11, 0x54, 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x72ca, gbc.sp());
        EXPECT(0x7e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03AD
        gbc.setState(0xd1b1, 0x692c, 0x5340, 0x2a4f, 0xc0, 0xeccb, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0x11, 0x3b, 0x3e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x692c, gbc.sp());
        EXPECT(0xd1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd1b1));
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        EXPECT(0x3e, gbc.readMem(0xd1b3));
        // 11 03AF
        gbc.setState(0x64a6, 0x19a4, 0xa430, 0xc648, 0x5807, 0x72b, 0x0, 0x1);
        gbc.writeMem(0x64a6, { 0x11, 0x11, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x19a4, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03B0
        gbc.setState(0x56cb, 0x4a16, 0x4680, 0xa171, 0xa48f, 0xbd26, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0x11, 0x4b, 0x26 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4a16, gbc.sp());
        EXPECT(0x56ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03B1
        gbc.setState(0xa1ab, 0x56c7, 0xc110, 0x5b60, 0xdc6d, 0x43b0, 0x0, 0x1);
        gbc.writeMem(0xa1ab, { 0x11, 0x2f, 0x31 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x56c7, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa1ab));
        EXPECT(0x2f, gbc.readMem(0xa1ac));
        EXPECT(0x31, gbc.readMem(0xa1ad));
        // 11 03B2
        gbc.setState(0xa34f, 0x7210, 0xade0, 0x8f7b, 0x267d, 0x6812, 0x1, 0x1);
        gbc.writeMem(0xa34f, { 0x11, 0x68, 0x69 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa34f));
        EXPECT(0x68, gbc.readMem(0xa350));
        EXPECT(0x69, gbc.readMem(0xa351));
        // 11 03B4
        gbc.setState(0x116b, 0xac42, 0xb390, 0x98e6, 0xa15c, 0x27ec, 0x1, 0x1);
        gbc.writeMem(0x116b, { 0x11, 0xe7, 0x41 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xac42, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03B5
        gbc.setState(0x77e9, 0x9cf1, 0xb810, 0xd813, 0xa4e1, 0xeb, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0x11, 0x7a, 0xeb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03B6
        gbc.setState(0xb32, 0x9495, 0x38b0, 0xe577, 0xc9, 0x2f77, 0x0, 0x1);
        gbc.writeMem(0xb32, { 0x11, 0x4f, 0x3e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0xb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03B7
        gbc.setState(0xef0d, 0x4110, 0x23f0, 0xf62a, 0x8505, 0x6f78, 0x1, 0x0);
        gbc.writeMem(0xef0d, { 0x11, 0x4b, 0xd1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4110, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xef0d));
        EXPECT(0x4b, gbc.readMem(0xef0e));
        EXPECT(0xd1, gbc.readMem(0xef0f));
        // 11 03B8
        gbc.setState(0x41c8, 0x2ae6, 0xaf60, 0xb368, 0xec5d, 0xd8ec, 0x1, 0x0);
        gbc.writeMem(0x41c8, { 0x11, 0x2e, 0xcc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03B9
        gbc.setState(0xc345, 0xadbe, 0x6300, 0xd775, 0x19b2, 0xc05f, 0x1, 0x0);
        gbc.writeMem(0xc345, { 0x11, 0x1c, 0xa5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0xc348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc345));
        EXPECT(0x1c, gbc.readMem(0xc346));
        EXPECT(0xa5, gbc.readMem(0xc347));
        // 11 03BA
        gbc.setState(0xb1a, 0x7236, 0x58b0, 0xce16, 0xe4e1, 0xfe80, 0x0, 0x0);
        gbc.writeMem(0xb1a, { 0x11, 0x77, 0xcd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0xb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03BB
        gbc.setState(0x50d, 0x4079, 0x2f0, 0xa5c6, 0xb94b, 0x701c, 0x1, 0x1);
        gbc.writeMem(0x50d, { 0x11, 0xe5, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03BC
        gbc.setState(0x99fe, 0x8afe, 0x9bd0, 0x701c, 0x2054, 0xf7e7, 0x0, 0x1);
        gbc.writeMem(0x99fe, { 0x11, 0x62, 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8afe, gbc.sp());
        EXPECT(0x9a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x99fe));
        EXPECT(0x62, gbc.readMem(0x99ff));
        EXPECT(0x8a, gbc.readMem(0x9a00));
        // 11 03BD
        gbc.setState(0xa4de, 0x571f, 0xe870, 0x50d2, 0x2c06, 0x5f50, 0x0, 0x0);
        gbc.writeMem(0xa4de, { 0x11, 0x4f, 0xa9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa4de));
        EXPECT(0x4f, gbc.readMem(0xa4df));
        EXPECT(0xa9, gbc.readMem(0xa4e0));
        // 11 03BE
        gbc.setState(0xed60, 0xf2e6, 0x7c40, 0x29b8, 0x1b1b, 0x5c6, 0x0, 0x0);
        gbc.writeMem(0xed60, { 0x11, 0xdc, 0x58 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0xed63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xed60));
        EXPECT(0xdc, gbc.readMem(0xed61));
        EXPECT(0x58, gbc.readMem(0xed62));
        // 11 03BF
        gbc.setState(0xe42a, 0x24c, 0x3eb0, 0x3fd4, 0xc28d, 0xfd60, 0x0, 0x0);
        gbc.writeMem(0xe42a, { 0x11, 0xc4, 0xd4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x24c, gbc.sp());
        EXPECT(0xe42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe42a));
        EXPECT(0xc4, gbc.readMem(0xe42b));
        EXPECT(0xd4, gbc.readMem(0xe42c));
        // 11 03C0
        gbc.setState(0xbe81, 0x4a46, 0xc450, 0xf29e, 0xcbd5, 0x8efc, 0x1, 0x1);
        gbc.writeMem(0xbe81, { 0x11, 0x12, 0xbe });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4a46, gbc.sp());
        EXPECT(0xbe84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbe81));
        EXPECT(0x12, gbc.readMem(0xbe82));
        EXPECT(0xbe, gbc.readMem(0xbe83));
        // 11 03C1
        gbc.setState(0xbbea, 0x3b41, 0xf0e0, 0x1d41, 0xd37b, 0x4aa4, 0x0, 0x0);
        gbc.writeMem(0xbbea, { 0x11, 0x6a, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3b41, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbbea));
        EXPECT(0x6a, gbc.readMem(0xbbeb));
        EXPECT(0x18, gbc.readMem(0xbbec));
        // 11 03C2
        gbc.setState(0x1019, 0xb2ef, 0x2990, 0x6a1d, 0x2965, 0x89cb, 0x0, 0x0);
        gbc.writeMem(0x1019, { 0x11, 0x91, 0x83 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb2ef, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03C3
        gbc.setState(0x35fd, 0x34b4, 0xa6c0, 0x4876, 0x9959, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x35fd, { 0x11, 0x32, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x34b4, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03C4
        gbc.setState(0xe6b, 0xbc2d, 0x5760, 0xa245, 0x1012, 0xaecb, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0x11, 0x4d, 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03C5
        gbc.setState(0x83ab, 0x56cd, 0xbf70, 0x8681, 0xf362, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0x83ab, { 0x11, 0xb0, 0x18 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x83ab));
        EXPECT(0xb0, gbc.readMem(0x83ac));
        EXPECT(0x18, gbc.readMem(0x83ad));
        // 11 03C6
        gbc.setState(0xdb2c, 0x4b37, 0xf3a0, 0x1a97, 0x338b, 0xb605, 0x0, 0x0);
        gbc.writeMem(0xdb2c, { 0x11, 0x77, 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdb2c));
        EXPECT(0x77, gbc.readMem(0xdb2d));
        EXPECT(0x5e, gbc.readMem(0xdb2e));
        // 11 03C7
        gbc.setState(0x1f9f, 0xc4c, 0x44d0, 0x2127, 0x760, 0xd8fc, 0x0, 0x0);
        gbc.writeMem(0x1f9f, { 0x11, 0xa8, 0xbe });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc4c, gbc.sp());
        EXPECT(0x1fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03C8
        gbc.setState(0x7880, 0xc813, 0xd430, 0xd3ae, 0x3911, 0x668c, 0x1, 0x1);
        gbc.writeMem(0x7880, { 0x11, 0x73, 0x7c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc813, gbc.sp());
        EXPECT(0x7883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03C9
        gbc.setState(0x6d63, 0x51ca, 0x6000, 0xc258, 0xdfb, 0x8db0, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0x11, 0xb2, 0xae });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x51ca, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03CA
        gbc.setState(0x6b01, 0x482e, 0x5440, 0x9792, 0x5c37, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x6b01, { 0x11, 0x97, 0xe });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03CB
        gbc.setState(0x7cdf, 0x2970, 0xdca0, 0x63be, 0xf97d, 0xa4cb, 0x1, 0x1);
        gbc.writeMem(0x7cdf, { 0x11, 0x1, 0x68 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2970, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03CC
        gbc.setState(0xd3e5, 0xf7cc, 0x250, 0x8031, 0xa1fa, 0x3029, 0x1, 0x0);
        gbc.writeMem(0xd3e5, { 0x11, 0xd0, 0xe5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf7cc, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd3e5));
        EXPECT(0xd0, gbc.readMem(0xd3e6));
        EXPECT(0xe5, gbc.readMem(0xd3e7));
        // 11 03CD
        gbc.setState(0x9f2c, 0xdbe2, 0x860, 0x6831, 0x5731, 0x16d6, 0x1, 0x0);
        gbc.writeMem(0x9f2c, { 0x11, 0x31, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdbe2, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9f2c));
        EXPECT(0x31, gbc.readMem(0x9f2d));
        EXPECT(0x97, gbc.readMem(0x9f2e));
        // 11 03CE
        gbc.setState(0x2164, 0xc626, 0x7220, 0x8923, 0x9083, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0x11, 0xf1, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x2167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03D0
        gbc.setState(0xde79, 0xa3ba, 0x9270, 0xd6f1, 0x403e, 0x4d0b, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0x11, 0xbe, 0xe8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0xde7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xde79));
        EXPECT(0xbe, gbc.readMem(0xde7a));
        EXPECT(0xe8, gbc.readMem(0xde7b));
        // 11 03D1
        gbc.setState(0xbf7b, 0x2a7e, 0x7bc0, 0x9785, 0x70f7, 0x4f71, 0x0, 0x1);
        gbc.writeMem(0xbf7b, { 0x11, 0x9f, 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0xbf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbf7b));
        EXPECT(0x9f, gbc.readMem(0xbf7c));
        EXPECT(0x8a, gbc.readMem(0xbf7d));
        // 11 03D2
        gbc.setState(0x6790, 0x46db, 0xf3b0, 0xc476, 0x3cac, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x6790, { 0x11, 0x9e, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x46db, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03D3
        gbc.setState(0x68bb, 0xa4bf, 0x5280, 0x34c2, 0xd708, 0xfa2c, 0x1, 0x0);
        gbc.writeMem(0x68bb, { 0x11, 0x54, 0x7a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa4bf, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03D4
        gbc.setState(0x4dc4, 0x82c9, 0x4200, 0x1c95, 0xd42c, 0x1887, 0x0, 0x1);
        gbc.writeMem(0x4dc4, { 0x11, 0x63, 0x10 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x82c9, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03D5
        gbc.setState(0x35a2, 0xdcc7, 0x5c70, 0x8851, 0x95f6, 0x1fb2, 0x0, 0x0);
        gbc.writeMem(0x35a2, { 0x11, 0x2d, 0xd6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03D6
        gbc.setState(0xbcd9, 0x3d55, 0x32f0, 0x9eaa, 0x89e4, 0xc6c5, 0x0, 0x0);
        gbc.writeMem(0xbcd9, { 0x11, 0x86, 0x5e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3d55, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbcd9));
        EXPECT(0x86, gbc.readMem(0xbcda));
        EXPECT(0x5e, gbc.readMem(0xbcdb));
        // 11 03D7
        gbc.setState(0x3cda, 0x4d69, 0x6020, 0xe2ca, 0xf55, 0x50c1, 0x0, 0x0);
        gbc.writeMem(0x3cda, { 0x11, 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4d69, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03D8
        gbc.setState(0x79d9, 0x9ee3, 0xf650, 0x8e07, 0x988a, 0xd326, 0x1, 0x0);
        gbc.writeMem(0x79d9, { 0x11, 0xb8, 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9ee3, gbc.sp());
        EXPECT(0x79dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03D9
        gbc.setState(0xb243, 0xdf7e, 0x950, 0x22fb, 0xe4c4, 0xd122, 0x1, 0x1);
        gbc.writeMem(0xb243, { 0x11, 0x30, 0x8d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb243));
        EXPECT(0x30, gbc.readMem(0xb244));
        EXPECT(0x8d, gbc.readMem(0xb245));
        // 11 03DA
        gbc.setState(0x1087, 0xfe46, 0xdb30, 0xe317, 0x8518, 0x95e1, 0x1, 0x0);
        gbc.writeMem(0x1087, { 0x11, 0xdd, 0x90 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe46, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03DB
        gbc.setState(0x8a60, 0xf2c7, 0x26e0, 0x6996, 0xdf58, 0x913c, 0x1, 0x0);
        gbc.writeMem(0x8a60, { 0x11, 0x68, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf2c7, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8a60));
        EXPECT(0x68, gbc.readMem(0x8a61));
        EXPECT(0x7a, gbc.readMem(0x8a62));
        // 11 03DC
        gbc.setState(0x7ed1, 0x8ea1, 0xe7f0, 0x294b, 0x14a3, 0x1cd4, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0x11, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8ea1, gbc.sp());
        EXPECT(0x7ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 11 03DD
        gbc.setState(0x5dce, 0x963a, 0x80a0, 0x8b32, 0xf17e, 0xd00e, 0x0, 0x1);
        gbc.writeMem(0x5dce, { 0x11, 0xeb, 0x6b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x5dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03DE
        gbc.setState(0xd392, 0xdb8d, 0xaf60, 0x7f75, 0x62df, 0xb879, 0x0, 0x1);
        gbc.writeMem(0xd392, { 0x11, 0xcd, 0xd8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb8d, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd392));
        EXPECT(0xcd, gbc.readMem(0xd393));
        EXPECT(0xd8, gbc.readMem(0xd394));
        // 11 03DF
        gbc.setState(0xd95e, 0x3408, 0xe050, 0xe1d5, 0xa914, 0xabdc, 0x0, 0x1);
        gbc.writeMem(0xd95e, { 0x11, 0xd7, 0x23 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3408, gbc.sp());
        EXPECT(0xd961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd95e));
        EXPECT(0xd7, gbc.readMem(0xd95f));
        EXPECT(0x23, gbc.readMem(0xd960));
        // 11 03E1
        gbc.setState(0xdae4, 0x1ba0, 0x6580, 0x6c55, 0xc952, 0xe0ab, 0x1, 0x0);
        gbc.writeMem(0xdae4, { 0x11, 0x10, 0xef });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ba0, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdae4));
        EXPECT(0x10, gbc.readMem(0xdae5));
        EXPECT(0xef, gbc.readMem(0xdae6));
        // 11 03E2
        gbc.setState(0x2e9c, 0x5787, 0x4100, 0xf505, 0x94dc, 0xb1eb, 0x0, 0x1);
        gbc.writeMem(0x2e9c, { 0x11, 0x28, 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x2e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03E3
        gbc.setState(0xa7d6, 0x35ad, 0x7e90, 0x4de8, 0x932e, 0xd44a, 0x1, 0x0);
        gbc.writeMem(0xa7d6, { 0x11, 0xaf, 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x35ad, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa7d6));
        EXPECT(0xaf, gbc.readMem(0xa7d7));
        EXPECT(0xb5, gbc.readMem(0xa7d8));
        // 11 03E4
        gbc.setState(0x988d, 0x912b, 0x7b80, 0xd60d, 0x5863, 0x3052, 0x0, 0x0);
        gbc.writeMem(0x988d, { 0x11, 0x3d, 0xa9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x9890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x988d));
        EXPECT(0x3d, gbc.readMem(0x988e));
        EXPECT(0xa9, gbc.readMem(0x988f));
        // 11 03E5
        gbc.setState(0x2fff, 0x5f6d, 0x9960, 0x5c, 0x9426, 0x65c6, 0x1, 0x0);
        gbc.writeMem(0x2fff, { 0x11, 0xb1, 0x96 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 11 03E7
        gbc.setState(0x8c08, 0x64ec, 0x49e0, 0xca0c, 0xc7b7, 0x987, 0x0, 0x1);
        gbc.writeMem(0x8c08, { 0x11, 0x16, 0x1b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x8c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8c08));
        EXPECT(0x16, gbc.readMem(0x8c09));
        EXPECT(0x1b, gbc.readMem(0x8c0a));
    }
