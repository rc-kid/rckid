    TEST(gbcemu, opcode_f0) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // F0 0000
        gbc.setState(0xe83d, 0x90ac, 0x4fb0, 0xb13c, 0x9e7e, 0x43c3, 0x1, 0x0);
        gbc.writeMem(0xe83d, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe83d));
        EXPECT(0xc8, gbc.readMem(0xe83e));
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 0001
        gbc.setState(0x55d4, 0x7ba5, 0xa8c0, 0x1ecd, 0x24b1, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x55d4, { 0xf0, 0x33 });
        gbc.writeMem(0xff33, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ba5, gbc.sp());
        EXPECT(0x55d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xff33));
        // F0 0002
        gbc.setState(0xb1cb, 0xe7cc, 0xd3c0, 0x4768, 0xa799, 0xe48e, 0x0, 0x0);
        gbc.writeMem(0xb1cb, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0xb1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb1cb));
        EXPECT(0xb1, gbc.readMem(0xb1cc));
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 0003
        gbc.setState(0xc316, 0x63ee, 0x9360, 0x92b6, 0xc59b, 0xdb28, 0x1, 0x0);
        gbc.writeMem(0xc316, { 0xf0, 0x58 });
        gbc.writeMem(0xff58, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x63ee, gbc.sp());
        EXPECT(0xc318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc316));
        EXPECT(0x58, gbc.readMem(0xc317));
        EXPECT(0x10, gbc.readMem(0xff58));
        // F0 0004
        gbc.setState(0x22a3, 0xd383, 0x8620, 0xb2d2, 0xaa79, 0x658d, 0x0, 0x1);
        gbc.writeMem(0x22a3, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd383, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 0005
        gbc.setState(0xd578, 0x36d, 0x2af0, 0x5c64, 0xf599, 0x1997, 0x0, 0x1);
        gbc.writeMem(0xd578, { 0xf0, 0x4 });
        gbc.writeMem(0xff04, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x36d, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd578));
        EXPECT(0x4, gbc.readMem(0xd579));
        EXPECT(0x59, gbc.readMem(0xff04));
        // F0 0006
        gbc.setState(0x3623, 0xe0a5, 0x63d0, 0xf46b, 0x7525, 0xb4b5, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xf0, 0x67 });
        gbc.writeMem(0xff67, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe0a5, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xff67));
        // F0 0007
        gbc.setState(0xeb77, 0x656c, 0x9840, 0x3166, 0x6343, 0x77e6, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0xf0, 0x74 });
        gbc.writeMem(0xff74, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x656c, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb77));
        EXPECT(0x74, gbc.readMem(0xeb78));
        EXPECT(0x76, gbc.readMem(0xff74));
        // F0 0008
        gbc.setState(0x7bb, 0x60e5, 0x7270, 0x7f27, 0x5875, 0x6c89, 0x0, 0x0);
        gbc.writeMem(0x7bb, { 0xf0, 0xce });
        gbc.writeMem(0xffce, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xffce));
        // F0 0009
        gbc.setState(0xe6b9, 0x985d, 0x1cb0, 0xef08, 0x1db1, 0xae36, 0x0, 0x0);
        gbc.writeMem(0xe6b9, { 0xf0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x985d, gbc.sp());
        EXPECT(0xe6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe6b9));
        EXPECT(0xb0, gbc.readMem(0xe6ba));
        EXPECT(0x95, gbc.readMem(0xffb0));
        // F0 000A
        gbc.setState(0x6332, 0x388b, 0x5160, 0xf1d8, 0xd235, 0x8214, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0xf0, 0x93 });
        gbc.writeMem(0xff93, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xff93));
        // F0 000B
        gbc.setState(0xfd5, 0x8e96, 0x3060, 0x751c, 0x1240, 0x3a33, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0xf0, 0x80 });
        gbc.writeMem(0xff80, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xff80));
        // F0 000C
        gbc.setState(0x681, 0xe172, 0xd8f0, 0xf169, 0xb210, 0x9543, 0x0, 0x1);
        gbc.writeMem(0x681, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe172, gbc.sp());
        EXPECT(0x683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 000D
        gbc.setState(0xfa7, 0x16f4, 0x8960, 0x8b35, 0xfea6, 0x70d5, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0xf0, 0x1c });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff1c));
        // F0 000E
        gbc.setState(0xdff6, 0x13c0, 0x1b40, 0x3874, 0x1407, 0xfc78, 0x1, 0x0);
        gbc.writeMem(0xdff6, { 0xf0, 0x21 });
        gbc.writeMem(0xff21, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdff6));
        EXPECT(0x21, gbc.readMem(0xdff7));
        EXPECT(0xd5, gbc.readMem(0xff21));
        // F0 000F
        gbc.setState(0x539, 0x989b, 0x37a0, 0x6c9c, 0x5f10, 0xa8de, 0x0, 0x0);
        gbc.writeMem(0x539, { 0xf0, 0x2a });
        gbc.writeMem(0xff2a, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x989b, gbc.sp());
        EXPECT(0x53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff2a));
        // F0 0010
        gbc.setState(0xbfd2, 0x3ea1, 0xff20, 0x7d51, 0x8d62, 0x72ef, 0x1, 0x0);
        gbc.writeMem(0xbfd2, { 0xf0, 0x23 });
        gbc.writeMem(0xff23, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3ea1, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbfd2));
        EXPECT(0x23, gbc.readMem(0xbfd3));
        EXPECT(0x45, gbc.readMem(0xff23));
        // F0 0011
        gbc.setState(0xd289, 0x512a, 0xc1f0, 0xb0e3, 0x52d5, 0x675d, 0x1, 0x0);
        gbc.writeMem(0xd289, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x512a, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd289));
        EXPECT(0xcb, gbc.readMem(0xd28a));
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 0012
        gbc.setState(0x68ec, 0xefee, 0x4080, 0x4e5b, 0x4e89, 0x5888, 0x1, 0x1);
        gbc.writeMem(0x68ec, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xefee, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 0013
        gbc.setState(0xed0, 0x3684, 0x9100, 0x3b3e, 0x2cf7, 0x5348, 0x0, 0x0);
        gbc.writeMem(0xed0, { 0xf0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xffd7));
        // F0 0014
        gbc.setState(0xe114, 0xac06, 0xf2d0, 0x4176, 0x1e5c, 0xb3fc, 0x0, 0x0);
        gbc.writeMem(0xe114, { 0xf0, 0x86 });
        gbc.writeMem(0xff86, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe114));
        EXPECT(0x86, gbc.readMem(0xe115));
        EXPECT(0x5e, gbc.readMem(0xff86));
        // F0 0015
        gbc.setState(0xc9ca, 0x4bab, 0x5910, 0xab8b, 0x1b79, 0xc612, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4bab, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9ca));
        EXPECT(0xa5, gbc.readMem(0xc9cb));
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 0016
        gbc.setState(0xb595, 0xa189, 0x9d0, 0x32c5, 0xbafe, 0x719f, 0x0, 0x1);
        gbc.writeMem(0xb595, { 0xf0, 0xb9 });
        gbc.writeMem(0xffb9, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa189, gbc.sp());
        EXPECT(0xb597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb595));
        EXPECT(0xb9, gbc.readMem(0xb596));
        EXPECT(0xff, gbc.readMem(0xffb9));
        // F0 0017
        gbc.setState(0x3be6, 0xc36, 0xb7f0, 0xd030, 0x9bd1, 0xa4ad, 0x0, 0x1);
        gbc.writeMem(0x3be6, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc36, gbc.sp());
        EXPECT(0x3be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 0018
        gbc.setState(0x83fb, 0x62f1, 0x9a50, 0x14f9, 0xa216, 0x2f54, 0x0, 0x0);
        gbc.writeMem(0x83fb, { 0xf0, 0x67 });
        gbc.writeMem(0xff67, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83fb));
        EXPECT(0x67, gbc.readMem(0x83fc));
        EXPECT(0x27, gbc.readMem(0xff67));
        // F0 0019
        gbc.setState(0x2745, 0x3216, 0x150, 0xf9ce, 0x263c, 0xa4eb, 0x1, 0x1);
        gbc.writeMem(0x2745, { 0xf0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3216, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xffb3));
        // F0 001A
        gbc.setState(0x342f, 0xe2fe, 0x4080, 0xfadc, 0x199, 0x4b0e, 0x0, 0x1);
        gbc.writeMem(0x342f, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe2fe, gbc.sp());
        EXPECT(0x3431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 001B
        gbc.setState(0x5b40, 0x9b7d, 0xd3c0, 0xcafe, 0x1f9b, 0x2ec3, 0x1, 0x1);
        gbc.writeMem(0x5b40, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 001C
        gbc.setState(0xc63, 0xfa32, 0x7b80, 0x55cd, 0xba92, 0xec0, 0x0, 0x0);
        gbc.writeMem(0xc63, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0xc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 001D
        gbc.setState(0xb8ec, 0x9dd0, 0xbb50, 0x4412, 0x46cf, 0x521a, 0x0, 0x0);
        gbc.writeMem(0xb8ec, { 0xf0, 0x5 });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0xb8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb8ec));
        EXPECT(0x5, gbc.readMem(0xb8ed));
        EXPECT(0x83, gbc.readMem(0xff05));
        // F0 001E
        gbc.setState(0xb2a0, 0xe762, 0xd020, 0xb976, 0x2896, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0xb2a0, { 0xf0, 0x14 });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe762, gbc.sp());
        EXPECT(0xb2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb2a0));
        EXPECT(0x14, gbc.readMem(0xb2a1));
        EXPECT(0xae, gbc.readMem(0xff14));
        // F0 0021
        gbc.setState(0xb168, 0xd044, 0x92f0, 0x7e22, 0x7b2b, 0x8ba5, 0x0, 0x1);
        gbc.writeMem(0xb168, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd044, gbc.sp());
        EXPECT(0xb16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb168));
        EXPECT(0xcd, gbc.readMem(0xb169));
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 0023
        gbc.setState(0x7098, 0x1059, 0x4fa0, 0x535, 0xa2af, 0x609f, 0x0, 0x1);
        gbc.writeMem(0x7098, { 0xf0, 0x7f });
        gbc.writeMem(0xff7f, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0x709a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff7f));
        // F0 0024
        gbc.setState(0x614e, 0x895c, 0x9dc0, 0x3f91, 0xeec9, 0x981b, 0x0, 0x1);
        gbc.writeMem(0x614e, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 0025
        gbc.setState(0xc13f, 0xda26, 0x140, 0xb70a, 0xcff, 0x9d9a, 0x0, 0x1);
        gbc.writeMem(0xc13f, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0xc141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc13f));
        EXPECT(0xf0, gbc.readMem(0xc140));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 0026
        gbc.setState(0x31c0, 0x7306, 0x7c00, 0x32af, 0xebe, 0x31b8, 0x1, 0x0);
        gbc.writeMem(0x31c0, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x31c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 0027
        gbc.setState(0x418a, 0x319d, 0xf040, 0x98fb, 0x352f, 0x5bfd, 0x0, 0x0);
        gbc.writeMem(0x418a, { 0xf0, 0x68 });
        gbc.writeMem(0xff68, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x319d, gbc.sp());
        EXPECT(0x418c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff68));
        // F0 0028
        gbc.setState(0x595d, 0xbf27, 0x75d0, 0xd4d6, 0x8ed, 0xc87a, 0x1, 0x0);
        gbc.writeMem(0x595d, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 0029
        gbc.setState(0xa0f1, 0x6a60, 0x3970, 0x8784, 0x88b4, 0x49a8, 0x0, 0x1);
        gbc.writeMem(0xa0f1, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a60, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa0f1));
        EXPECT(0x13, gbc.readMem(0xa0f2));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 002A
        gbc.setState(0x904c, 0x5210, 0xec0, 0x6910, 0xd123, 0x3b3b, 0x1, 0x0);
        gbc.writeMem(0x904c, { 0xf0, 0x74 });
        gbc.writeMem(0xff74, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5210, gbc.sp());
        EXPECT(0x904e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x904c));
        EXPECT(0x74, gbc.readMem(0x904d));
        EXPECT(0x76, gbc.readMem(0xff74));
        // F0 002B
        gbc.setState(0x95d7, 0x86a0, 0x43e0, 0x1ce2, 0xe162, 0x21d9, 0x1, 0x1);
        gbc.writeMem(0x95d7, { 0xf0, 0x6f });
        gbc.writeMem(0xff6f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0x95d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x95d7));
        EXPECT(0x6f, gbc.readMem(0x95d8));
        EXPECT(0xc1, gbc.readMem(0xff6f));
        // F0 002C
        gbc.setState(0x2416, 0xdacd, 0xbd30, 0x4022, 0x925f, 0xfe50, 0x0, 0x1);
        gbc.writeMem(0x2416, { 0xf0, 0x1 });
        gbc.writeMem(0xff01, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdacd, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff01));
        // F0 002E
        gbc.setState(0x88e4, 0xdf14, 0xb700, 0x6af3, 0x9de1, 0x15f2, 0x0, 0x0);
        gbc.writeMem(0x88e4, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdf14, gbc.sp());
        EXPECT(0x88e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x88e4));
        EXPECT(0xa5, gbc.readMem(0x88e5));
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 002F
        gbc.setState(0x5cf, 0x5740, 0x7740, 0x8ef5, 0x6ce1, 0xb1e, 0x1, 0x1);
        gbc.writeMem(0x5cf, { 0xf0, 0x11 });
        gbc.writeMem(0xff11, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5740, gbc.sp());
        EXPECT(0x5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff11));
        // F0 0030
        gbc.setState(0x26a5, 0x33a0, 0xbb90, 0x1dc8, 0xa7e9, 0xa2ac, 0x1, 0x0);
        gbc.writeMem(0x26a5, { 0xf0, 0x4b });
        gbc.writeMem(0xff4b, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x33a0, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xff4b));
        // F0 0031
        gbc.setState(0x2e92, 0x4b33, 0xacc0, 0x6dac, 0x9939, 0xdae0, 0x1, 0x1);
        gbc.writeMem(0x2e92, { 0xf0, 0x2e });
        gbc.writeMem(0xff2e, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xff2e));
        // F0 0032
        gbc.setState(0x2b78, 0x5aa6, 0x6010, 0x333d, 0x2536, 0x6378, 0x0, 0x0);
        gbc.writeMem(0x2b78, { 0xf0, 0xa6 });
        gbc.writeMem(0xffa6, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x2b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffa6));
        // F0 0033
        gbc.setState(0x2fa, 0x4fc4, 0xd060, 0xdea3, 0xfba9, 0x13c4, 0x1, 0x1);
        gbc.writeMem(0x2fa, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 0034
        gbc.setState(0xb0cf, 0x8627, 0xfc40, 0x9c1f, 0x5658, 0x6fcf, 0x1, 0x0);
        gbc.writeMem(0xb0cf, { 0xf0, 0xfd });
        gbc.writeMem(0xfffd, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0xb0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb0cf));
        EXPECT(0xfd, gbc.readMem(0xb0d0));
        EXPECT(0xb7, gbc.readMem(0xfffd));
        // F0 0035
        gbc.setState(0x659c, 0x6ac9, 0x26b0, 0x22b, 0x5f88, 0x1c76, 0x1, 0x1);
        gbc.writeMem(0x659c, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 0036
        gbc.setState(0xb802, 0xb7a5, 0x4c00, 0x3e0f, 0xb163, 0x56e6, 0x0, 0x1);
        gbc.writeMem(0xb802, { 0xf0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb7a5, gbc.sp());
        EXPECT(0xb804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb802));
        EXPECT(0xf6, gbc.readMem(0xb803));
        EXPECT(0x3b, gbc.readMem(0xfff6));
        // F0 0037
        gbc.setState(0x603b, 0x9327, 0x4420, 0xe0f2, 0x1d71, 0x6809, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0xf0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xffd2));
        // F0 0038
        gbc.setState(0x4f93, 0x8347, 0x9c00, 0x3af5, 0xcbe7, 0xd054, 0x0, 0x1);
        gbc.writeMem(0x4f93, { 0xf0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8347, gbc.sp());
        EXPECT(0x4f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xffc3));
        // F0 0039
        gbc.setState(0x9800, 0x11e3, 0x5e00, 0xc237, 0x7259, 0x90c5, 0x1, 0x0);
        gbc.writeMem(0x9800, { 0xf0, 0xac });
        gbc.writeMem(0xffac, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9800));
        EXPECT(0xac, gbc.readMem(0x9801));
        EXPECT(0x36, gbc.readMem(0xffac));
        // F0 003B
        gbc.setState(0x120e, 0xe708, 0x2cb0, 0x3708, 0xcdae, 0xfb25, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0xf0, 0x94 });
        gbc.writeMem(0xff94, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff94));
        // F0 003C
        gbc.setState(0xe6e, 0x3d51, 0xebe0, 0x14f, 0xde90, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0xe6e, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3d51, gbc.sp());
        EXPECT(0xe70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 003D
        gbc.setState(0xd5d4, 0x2b59, 0x290, 0x59ac, 0xeb73, 0x129c, 0x0, 0x0);
        gbc.writeMem(0xd5d4, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2b59, gbc.sp());
        EXPECT(0xd5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd5d4));
        EXPECT(0x70, gbc.readMem(0xd5d5));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 003E
        gbc.setState(0x921b, 0xa603, 0xc3b0, 0x2141, 0x1795, 0x3b74, 0x1, 0x1);
        gbc.writeMem(0x921b, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa603, gbc.sp());
        EXPECT(0x921d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x921b));
        EXPECT(0xad, gbc.readMem(0x921c));
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 003F
        gbc.setState(0x3ee2, 0xd9a5, 0x19e0, 0xc4fb, 0x923b, 0x526e, 0x1, 0x0);
        gbc.writeMem(0x3ee2, { 0xf0, 0x28 });
        gbc.writeMem(0xff28, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff28));
        // F0 0040
        gbc.setState(0xae4e, 0xd36f, 0x6a70, 0xc108, 0xfb1b, 0x466c, 0x0, 0x0);
        gbc.writeMem(0xae4e, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd36f, gbc.sp());
        EXPECT(0xae50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae4e));
        EXPECT(0xff, gbc.readMem(0xae4f));
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 0041
        gbc.setState(0xe18a, 0x1845, 0xe8d0, 0xdaf4, 0xe77f, 0x5e25, 0x1, 0x0);
        gbc.writeMem(0xe18a, { 0xf0, 0xd });
        gbc.writeMem(0xff0d, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1845, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe18a));
        EXPECT(0xd, gbc.readMem(0xe18b));
        EXPECT(0xa0, gbc.readMem(0xff0d));
        // F0 0042
        gbc.setState(0x59d6, 0x798c, 0x330, 0xbaf9, 0x4344, 0x8c7b, 0x1, 0x0);
        gbc.writeMem(0x59d6, { 0xf0, 0xa6 });
        gbc.writeMem(0xffa6, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x798c, gbc.sp());
        EXPECT(0x59d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffa6));
        // F0 0043
        gbc.setState(0xd216, 0x4357, 0x2cb0, 0x2d46, 0xf700, 0x70d3, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0xf0, 0xcf });
        gbc.writeMem(0xffcf, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0xd218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd216));
        EXPECT(0xcf, gbc.readMem(0xd217));
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // F0 0044
        gbc.setState(0x96a6, 0x94ed, 0x9190, 0xbe7b, 0x6be9, 0x99c, 0x1, 0x1);
        gbc.writeMem(0x96a6, { 0xf0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0x96a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x96a6));
        EXPECT(0xc4, gbc.readMem(0x96a7));
        EXPECT(0x9d, gbc.readMem(0xffc4));
        // F0 0045
        gbc.setState(0x462d, 0xd838, 0x4120, 0x73d1, 0x9707, 0xc600, 0x0, 0x1);
        gbc.writeMem(0x462d, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd838, gbc.sp());
        EXPECT(0x462f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 0046
        gbc.setState(0x3818, 0x3398, 0x99a0, 0x3149, 0xca05, 0x1f8b, 0x0, 0x1);
        gbc.writeMem(0x3818, { 0xf0, 0x1b });
        gbc.writeMem(0xff1b, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xff1b));
        // F0 0047
        gbc.setState(0xd7bb, 0x6e21, 0xb840, 0xb50b, 0x4eb3, 0x2ae, 0x1, 0x1);
        gbc.writeMem(0xd7bb, { 0xf0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6e21, gbc.sp());
        EXPECT(0xd7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd7bb));
        EXPECT(0xa8, gbc.readMem(0xd7bc));
        EXPECT(0x85, gbc.readMem(0xffa8));
        // F0 0048
        gbc.setState(0xae65, 0x162b, 0x7480, 0x62e5, 0x951d, 0xd5c3, 0x0, 0x1);
        gbc.writeMem(0xae65, { 0xf0, 0x73 });
        gbc.writeMem(0xff73, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x162b, gbc.sp());
        EXPECT(0xae67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae65));
        EXPECT(0x73, gbc.readMem(0xae66));
        EXPECT(0x39, gbc.readMem(0xff73));
        // F0 0049
        gbc.setState(0xaa34, 0x5b35, 0x7430, 0xbace, 0x5fde, 0xe57d, 0x0, 0x1);
        gbc.writeMem(0xaa34, { 0xf0, 0x8f });
        gbc.writeMem(0xff8f, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5b35, gbc.sp());
        EXPECT(0xaa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaa34));
        EXPECT(0x8f, gbc.readMem(0xaa35));
        EXPECT(0x1c, gbc.readMem(0xff8f));
        // F0 004A
        gbc.setState(0x773c, 0xebe3, 0x9dc0, 0x6f3c, 0xa982, 0xda51, 0x0, 0x1);
        gbc.writeMem(0x773c, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xebe3, gbc.sp());
        EXPECT(0x773e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 004B
        gbc.setState(0x2a79, 0xf70c, 0x1ec0, 0x2ff8, 0xf7bf, 0xca46, 0x1, 0x0);
        gbc.writeMem(0x2a79, { 0xf0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xffd2));
        // F0 004C
        gbc.setState(0x7138, 0xbbaa, 0xf4e0, 0xc0c, 0x959b, 0x6e38, 0x1, 0x1);
        gbc.writeMem(0x7138, { 0xf0, 0xe2 });
        gbc.writeMem(0xffe2, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbbaa, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xffe2));
        // F0 004D
        gbc.setState(0xa52b, 0x31b0, 0x6df0, 0xfa9f, 0x2973, 0x67b1, 0x1, 0x0);
        gbc.writeMem(0xa52b, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x31b0, gbc.sp());
        EXPECT(0xa52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa52b));
        EXPECT(0x13, gbc.readMem(0xa52c));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 004E
        gbc.setState(0xdd1b, 0xf29b, 0x6af0, 0xa58c, 0xcaef, 0x6507, 0x0, 0x1);
        gbc.writeMem(0xdd1b, { 0xf0, 0xa2 });
        gbc.writeMem(0xffa2, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf29b, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd1b));
        EXPECT(0xa2, gbc.readMem(0xdd1c));
        EXPECT(0xfb, gbc.readMem(0xffa2));
        // F0 004F
        gbc.setState(0x6a29, 0x99c8, 0x9da0, 0x5a5, 0x4ef1, 0xfad1, 0x0, 0x1);
        gbc.writeMem(0x6a29, { 0xf0, 0x8e });
        gbc.writeMem(0xff8e, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x99c8, gbc.sp());
        EXPECT(0x6a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff8e));
        // F0 0050
        gbc.setState(0x9e3b, 0x5ab1, 0xce10, 0xc997, 0xf5ff, 0x2730, 0x1, 0x1);
        gbc.writeMem(0x9e3b, { 0xf0, 0x84 });
        gbc.writeMem(0xff84, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5ab1, gbc.sp());
        EXPECT(0x9e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e3b));
        EXPECT(0x84, gbc.readMem(0x9e3c));
        EXPECT(0xb7, gbc.readMem(0xff84));
        // F0 0051
        gbc.setState(0xc474, 0x8bcc, 0xdc80, 0xa44e, 0xe89f, 0x44d8, 0x0, 0x1);
        gbc.writeMem(0xc474, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc474));
        EXPECT(0xcb, gbc.readMem(0xc475));
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 0052
        gbc.setState(0xdf62, 0x9783, 0x3ec0, 0x5e24, 0xa902, 0x45dd, 0x0, 0x0);
        gbc.writeMem(0xdf62, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9783, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdf62));
        EXPECT(0xd3, gbc.readMem(0xdf63));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 0053
        gbc.setState(0x8f4d, 0x693, 0x9990, 0xedd0, 0xb74a, 0x51e1, 0x0, 0x1);
        gbc.writeMem(0x8f4d, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x693, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8f4d));
        EXPECT(0x70, gbc.readMem(0x8f4e));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 0054
        gbc.setState(0x8a0f, 0xad76, 0xce0, 0x41c4, 0x4505, 0xa2bd, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xf0, 0x75 });
        gbc.writeMem(0xff75, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8a0f));
        EXPECT(0x75, gbc.readMem(0x8a10));
        EXPECT(0x1, gbc.readMem(0xff75));
        // F0 0055
        gbc.setState(0x3ab9, 0xe82a, 0x560, 0x4af0, 0x5db3, 0x12c4, 0x0, 0x0);
        gbc.writeMem(0x3ab9, { 0xf0, 0x1 });
        gbc.writeMem(0xff01, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff01));
        // F0 0056
        gbc.setState(0x261d, 0x2141, 0x4e80, 0xbaa8, 0x3e92, 0xb47c, 0x1, 0x1);
        gbc.writeMem(0x261d, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 0057
        gbc.setState(0xa8fd, 0xe7dc, 0x4e90, 0x2ada, 0x6b70, 0x1e95, 0x0, 0x0);
        gbc.writeMem(0xa8fd, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0xa8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa8fd));
        EXPECT(0xa1, gbc.readMem(0xa8fe));
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 0058
        gbc.setState(0x83c3, 0x620d, 0x4b70, 0x4a02, 0xd6c5, 0x3eb3, 0x1, 0x1);
        gbc.writeMem(0x83c3, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x620d, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83c3));
        EXPECT(0x52, gbc.readMem(0x83c4));
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 0059
        gbc.setState(0xec17, 0xde74, 0x99e0, 0xb64c, 0x6504, 0x9e96, 0x0, 0x1);
        gbc.writeMem(0xec17, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0xec19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xec17));
        EXPECT(0xf0, gbc.readMem(0xec18));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 005A
        gbc.setState(0xdd2c, 0xdedb, 0xcb10, 0x946f, 0xe881, 0x67a1, 0x1, 0x1);
        gbc.writeMem(0xdd2c, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdedb, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd2c));
        EXPECT(0x35, gbc.readMem(0xdd2d));
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 005B
        gbc.setState(0x68f, 0xc16e, 0x7e40, 0xfe5f, 0xbd78, 0x177b, 0x1, 0x1);
        gbc.writeMem(0x68f, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc16e, gbc.sp());
        EXPECT(0x691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 005C
        gbc.setState(0x3192, 0xf24b, 0x3360, 0x5ddb, 0x654f, 0xd346, 0x0, 0x0);
        gbc.writeMem(0x3192, { 0xf0, 0x86 });
        gbc.writeMem(0xff86, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x3194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff86));
        // F0 005D
        gbc.setState(0xc0a7, 0x3642, 0xc250, 0x743e, 0x5603, 0x7e0e, 0x1, 0x1);
        gbc.writeMem(0xc0a7, { 0xf0, 0x78 });
        gbc.writeMem(0xff78, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3642, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc0a7));
        EXPECT(0x78, gbc.readMem(0xc0a8));
        EXPECT(0x9e, gbc.readMem(0xff78));
        // F0 005E
        gbc.setState(0x143e, 0xe701, 0x79e0, 0xf910, 0x613b, 0x634, 0x1, 0x0);
        gbc.writeMem(0x143e, { 0xf0, 0x85 });
        gbc.writeMem(0xff85, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe701, gbc.sp());
        EXPECT(0x1440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff85));
        // F0 005F
        gbc.setState(0x8f24, 0x37b8, 0xf2f0, 0xa51e, 0x522e, 0xa8e, 0x1, 0x1);
        gbc.writeMem(0x8f24, { 0xf0, 0xd7 });
        gbc.writeMem(0xffd7, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x37b8, gbc.sp());
        EXPECT(0x8f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8f24));
        EXPECT(0xd7, gbc.readMem(0x8f25));
        EXPECT(0x96, gbc.readMem(0xffd7));
        // F0 0060
        gbc.setState(0xd63e, 0xab94, 0xf650, 0xc3ba, 0xbb3c, 0x524a, 0x1, 0x0);
        gbc.writeMem(0xd63e, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0xd640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd63e));
        EXPECT(0xf1, gbc.readMem(0xd63f));
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 0061
        gbc.setState(0xbc0e, 0xb39c, 0xe300, 0x922, 0xab5f, 0x8fbd, 0x0, 0x0);
        gbc.writeMem(0xbc0e, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbc0e));
        EXPECT(0x52, gbc.readMem(0xbc0f));
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 0062
        gbc.setState(0x63c7, 0x38ed, 0x7ce0, 0x9383, 0x1131, 0xa2d0, 0x0, 0x0);
        gbc.writeMem(0x63c7, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0x63c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 0063
        gbc.setState(0xcdfe, 0x9e1a, 0x94e0, 0x6b53, 0xb629, 0xc32c, 0x0, 0x1);
        gbc.writeMem(0xcdfe, { 0xf0, 0x1e });
        gbc.writeMem(0xff1e, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e1a, gbc.sp());
        EXPECT(0xce00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcdfe));
        EXPECT(0x1e, gbc.readMem(0xcdff));
        EXPECT(0x73, gbc.readMem(0xff1e));
        // F0 0064
        gbc.setState(0xc9f2, 0xf2c1, 0xd470, 0xa5ef, 0x9941, 0x8588, 0x0, 0x1);
        gbc.writeMem(0xc9f2, { 0xf0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9f2));
        EXPECT(0xd8, gbc.readMem(0xc9f3));
        EXPECT(0x3, gbc.readMem(0xffd8));
        // F0 0065
        gbc.setState(0x959a, 0x8178, 0x75b0, 0xc180, 0x862d, 0x754e, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0xf0, 0x1 });
        gbc.writeMem(0xff01, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8178, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x959a));
        EXPECT(0x1, gbc.readMem(0x959b));
        EXPECT(0x80, gbc.readMem(0xff01));
        // F0 0066
        gbc.setState(0xeb9e, 0x7bb2, 0x6790, 0x544, 0x9028, 0x2217, 0x0, 0x1);
        gbc.writeMem(0xeb9e, { 0xf0, 0x4 });
        gbc.writeMem(0xff04, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7bb2, gbc.sp());
        EXPECT(0xeba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb9e));
        EXPECT(0x4, gbc.readMem(0xeb9f));
        EXPECT(0x59, gbc.readMem(0xff04));
        // F0 0068
        gbc.setState(0xbc3d, 0x3e9d, 0xc840, 0x7412, 0xbb2f, 0x403c, 0x0, 0x1);
        gbc.writeMem(0xbc3d, { 0xf0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0xbc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbc3d));
        EXPECT(0xb8, gbc.readMem(0xbc3e));
        EXPECT(0x10, gbc.readMem(0xffb8));
        // F0 0069
        gbc.setState(0x3db, 0x44ba, 0x8da0, 0xf5bc, 0xf04b, 0x666, 0x1, 0x1);
        gbc.writeMem(0x3db, { 0xf0, 0x8c });
        gbc.writeMem(0xff8c, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x44ba, gbc.sp());
        EXPECT(0x3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff8c));
        // F0 006A
        gbc.setState(0x7282, 0xe25, 0xfe00, 0x1d6c, 0x4092, 0x903c, 0x1, 0x1);
        gbc.writeMem(0x7282, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 006B
        gbc.setState(0xc9c7, 0x5116, 0x1660, 0xc061, 0xbb15, 0xf1eb, 0x1, 0x0);
        gbc.writeMem(0xc9c7, { 0xf0, 0x37 });
        gbc.writeMem(0xff37, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xc9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9c7));
        EXPECT(0x37, gbc.readMem(0xc9c8));
        EXPECT(0x7e, gbc.readMem(0xff37));
        // F0 006C
        gbc.setState(0xe27, 0x6d58, 0x8cc0, 0xc043, 0xfff7, 0x2439, 0x1, 0x1);
        gbc.writeMem(0xe27, { 0xf0, 0x40 });
        gbc.writeMem(0xff40, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d58, gbc.sp());
        EXPECT(0xe29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xff40));
        // F0 006D
        gbc.setState(0x5bd4, 0xa63, 0x7630, 0xa316, 0xd5f7, 0x8695, 0x1, 0x0);
        gbc.writeMem(0x5bd4, { 0xf0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xffb0));
        // F0 006E
        gbc.setState(0x1ab2, 0x38d2, 0xc7a0, 0x38af, 0x30b0, 0x725d, 0x0, 0x1);
        gbc.writeMem(0x1ab2, { 0xf0, 0xb8 });
        gbc.writeMem(0xffb8, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x38d2, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xffb8));
        // F0 006F
        gbc.setState(0x1761, 0xa84d, 0xb3b0, 0x6246, 0xf893, 0x66aa, 0x0, 0x0);
        gbc.writeMem(0x1761, { 0xf0, 0x7c });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa84d, gbc.sp());
        EXPECT(0x1763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // F0 0070
        gbc.setState(0xd8b2, 0x36d8, 0x6950, 0x4ef0, 0xd737, 0xeba6, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xf0, 0x5 });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd8b2));
        EXPECT(0x5, gbc.readMem(0xd8b3));
        EXPECT(0x83, gbc.readMem(0xff05));
        // F0 0071
        gbc.setState(0xc788, 0xfc37, 0x2cf0, 0x7c04, 0xf1b1, 0xd4fe, 0x1, 0x0);
        gbc.writeMem(0xc788, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc788));
        EXPECT(0xf0, gbc.readMem(0xc789));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 0072
        gbc.setState(0x26d8, 0x36a3, 0xfdf0, 0xb5cc, 0x9833, 0x1263, 0x0, 0x0);
        gbc.writeMem(0x26d8, { 0xf0, 0x39 });
        gbc.writeMem(0xff39, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x36a3, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff39));
        // F0 0073
        gbc.setState(0x7225, 0xbcc7, 0x3790, 0x5ced, 0x37, 0x479b, 0x1, 0x1);
        gbc.writeMem(0x7225, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbcc7, gbc.sp());
        EXPECT(0x7227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 0074
        gbc.setState(0x513a, 0x9430, 0xe530, 0x3f6e, 0x209d, 0xab86, 0x0, 0x0);
        gbc.writeMem(0x513a, { 0xf0, 0x5d });
        gbc.writeMem(0xff5d, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0x513c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff5d));
        // F0 0075
        gbc.setState(0xd745, 0x813c, 0x6190, 0x7b68, 0x58df, 0x1e21, 0x1, 0x1);
        gbc.writeMem(0xd745, { 0xf0, 0x5b });
        gbc.writeMem(0xff5b, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd745));
        EXPECT(0x5b, gbc.readMem(0xd746));
        EXPECT(0xff, gbc.readMem(0xff5b));
        // F0 0076
        gbc.setState(0x497d, 0xd75a, 0x9b00, 0x11f7, 0x8412, 0xa2df, 0x0, 0x1);
        gbc.writeMem(0x497d, { 0xf0, 0x47 });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd75a, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xff47));
        // F0 0077
        gbc.setState(0xa87a, 0xf7a, 0x8910, 0x289a, 0xb, 0x9c3c, 0x0, 0x1);
        gbc.writeMem(0xa87a, { 0xf0, 0x9a });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf7a, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa87a));
        EXPECT(0x9a, gbc.readMem(0xa87b));
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // F0 0078
        gbc.setState(0xb864, 0x16e, 0xeab0, 0x4bad, 0x88d4, 0xb535, 0x1, 0x0);
        gbc.writeMem(0xb864, { 0xf0, 0x3 });
        gbc.writeMem(0xff03, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x16e, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb864));
        EXPECT(0x3, gbc.readMem(0xb865));
        EXPECT(0x61, gbc.readMem(0xff03));
        // F0 0079
        gbc.setState(0x8416, 0xa9a6, 0xea20, 0xf20b, 0xf6d4, 0x4891, 0x0, 0x0);
        gbc.writeMem(0x8416, { 0xf0, 0x66 });
        gbc.writeMem(0xff66, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa9a6, gbc.sp());
        EXPECT(0x8418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8416));
        EXPECT(0x66, gbc.readMem(0x8417));
        EXPECT(0x2c, gbc.readMem(0xff66));
        // F0 007A
        gbc.setState(0x7f80, 0xf532, 0xab00, 0x88f2, 0x898b, 0x306f, 0x0, 0x0);
        gbc.writeMem(0x7f80, { 0xf0, 0xaf });
        gbc.writeMem(0xffaf, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x7f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xffaf));
        // F0 007B
        gbc.setState(0xe657, 0x34ac, 0x6460, 0xd9d1, 0xe21d, 0x7a28, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x34ac, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe657));
        EXPECT(0xad, gbc.readMem(0xe658));
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 007C
        gbc.setState(0xb4d2, 0x2e44, 0xb50, 0xfac8, 0x559, 0xc4cf, 0x0, 0x1);
        gbc.writeMem(0xb4d2, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2e44, gbc.sp());
        EXPECT(0xb4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb4d2));
        EXPECT(0x99, gbc.readMem(0xb4d3));
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 007D
        gbc.setState(0x4b18, 0x31f3, 0x6420, 0x5a88, 0xefa3, 0x9032, 0x0, 0x1);
        gbc.writeMem(0x4b18, { 0xf0, 0x41 });
        gbc.writeMem(0xff41, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x4b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff41));
        // F0 007E
        gbc.setState(0x613, 0x5d24, 0x8bb0, 0x2a73, 0x19a2, 0xc551, 0x1, 0x1);
        gbc.writeMem(0x613, { 0xf0, 0x33 });
        gbc.writeMem(0xff33, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5d24, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xff33));
        // F0 007F
        gbc.setState(0x3965, 0x3321, 0xd40, 0xbe72, 0x949c, 0x311d, 0x1, 0x1);
        gbc.writeMem(0x3965, { 0xf0, 0xe });
        gbc.writeMem(0xff0e, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0x3967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xff0e));
        // F0 0080
        gbc.setState(0x3f8f, 0xda3e, 0xd400, 0x6927, 0xc182, 0x883d, 0x1, 0x1);
        gbc.writeMem(0x3f8f, { 0xf0, 0xda });
        gbc.writeMem(0xffda, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xffda));
        // F0 0081
        gbc.setState(0xad50, 0xc94d, 0x5780, 0x8d53, 0xa6ca, 0x6873, 0x1, 0x1);
        gbc.writeMem(0xad50, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xad50));
        EXPECT(0x3f, gbc.readMem(0xad51));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 0083
        gbc.setState(0xc89a, 0x3231, 0x7f0, 0xb9a2, 0x184c, 0x6617, 0x0, 0x0);
        gbc.writeMem(0xc89a, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3231, gbc.sp());
        EXPECT(0xc89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc89a));
        EXPECT(0x12, gbc.readMem(0xc89b));
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 0084
        gbc.setState(0x4a3f, 0x4a53, 0x4ae0, 0xaeac, 0x7752, 0x2ea1, 0x0, 0x1);
        gbc.writeMem(0x4a3f, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a53, gbc.sp());
        EXPECT(0x4a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 0085
        gbc.setState(0x19f, 0xa29, 0xb2d0, 0x3d30, 0x2d60, 0xa424, 0x0, 0x1);
        gbc.writeMem(0x19f, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa29, gbc.sp());
        EXPECT(0x1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 0088
        gbc.setState(0x15eb, 0xdb76, 0x25c0, 0x8c47, 0xb3e, 0xeb17, 0x1, 0x1);
        gbc.writeMem(0x15eb, { 0xf0, 0x91 });
        gbc.writeMem(0xff91, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdb76, gbc.sp());
        EXPECT(0x15ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xff91));
        // F0 008A
        gbc.setState(0x9992, 0x4632, 0xcee0, 0x3a20, 0x1ea9, 0x24e7, 0x0, 0x0);
        gbc.writeMem(0x9992, { 0xf0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0x9994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9992));
        EXPECT(0xc4, gbc.readMem(0x9993));
        EXPECT(0x9d, gbc.readMem(0xffc4));
        // F0 008C
        gbc.setState(0x6328, 0x2de2, 0xec80, 0x121b, 0x37e2, 0xb945, 0x1, 0x0);
        gbc.writeMem(0x6328, { 0xf0, 0x65 });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2de2, gbc.sp());
        EXPECT(0x632a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff65));
        // F0 008D
        gbc.setState(0xca57, 0xfeed, 0x7a30, 0x849e, 0x299c, 0x56fc, 0x0, 0x0);
        gbc.writeMem(0xca57, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfeed, gbc.sp());
        EXPECT(0xca59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xca57));
        EXPECT(0xa1, gbc.readMem(0xca58));
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 008E
        gbc.setState(0x1138, 0xf05c, 0xd2b0, 0x5d39, 0xa647, 0x106b, 0x1, 0x1);
        gbc.writeMem(0x1138, { 0xf0, 0x68 });
        gbc.writeMem(0xff68, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf05c, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff68));
        // F0 008F
        gbc.setState(0xc44f, 0x7744, 0xc5e0, 0x496b, 0x8a68, 0x976e, 0x0, 0x0);
        gbc.writeMem(0xc44f, { 0xf0, 0x1c });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc44f));
        EXPECT(0x1c, gbc.readMem(0xc450));
        EXPECT(0x94, gbc.readMem(0xff1c));
        // F0 0091
        gbc.setState(0xd2b7, 0x386d, 0x8d40, 0x2330, 0x2448, 0x9c2d, 0x0, 0x1);
        gbc.writeMem(0xd2b7, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x386d, gbc.sp());
        EXPECT(0xd2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd2b7));
        EXPECT(0xc8, gbc.readMem(0xd2b8));
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 0092
        gbc.setState(0x891d, 0x6625, 0x6910, 0x4b6d, 0x644a, 0x6889, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x891d));
        EXPECT(0xb1, gbc.readMem(0x891e));
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 0093
        gbc.setState(0x7317, 0x88fd, 0x6840, 0xbf46, 0x4b4c, 0xb56f, 0x0, 0x0);
        gbc.writeMem(0x7317, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 0094
        gbc.setState(0x5626, 0xc52a, 0xd300, 0x4e68, 0xea4d, 0x614, 0x0, 0x0);
        gbc.writeMem(0x5626, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 0095
        gbc.setState(0xd23d, 0xb49a, 0x6330, 0x1459, 0x1bef, 0xd2ab, 0x0, 0x1);
        gbc.writeMem(0xd23d, { 0xf0, 0x98 });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb49a, gbc.sp());
        EXPECT(0xd23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd23d));
        EXPECT(0x98, gbc.readMem(0xd23e));
        EXPECT(0x95, gbc.readMem(0xff98));
        // F0 0096
        gbc.setState(0x26d3, 0x431c, 0x4410, 0x6398, 0x6295, 0x98f8, 0x1, 0x1);
        gbc.writeMem(0x26d3, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 0097
        gbc.setState(0x291d, 0x6d00, 0x4730, 0x5b07, 0x4f62, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0x291d, { 0xf0, 0xc7 });
        gbc.writeMem(0xffc7, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d00, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xffc7));
        // F0 0098
        gbc.setState(0x2a1d, 0x9d79, 0x97d0, 0xf530, 0x1fa6, 0xa7a5, 0x1, 0x1);
        gbc.writeMem(0x2a1d, { 0xf0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9d79, gbc.sp());
        EXPECT(0x2a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffb2));
        // F0 0099
        gbc.setState(0xc985, 0x2ac4, 0x60d0, 0xc784, 0x41c5, 0x1ae2, 0x1, 0x0);
        gbc.writeMem(0xc985, { 0xf0, 0x3e });
        gbc.writeMem(0xff3e, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2ac4, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc985));
        EXPECT(0x3e, gbc.readMem(0xc986));
        EXPECT(0x55, gbc.readMem(0xff3e));
        // F0 009A
        gbc.setState(0x1e30, 0x6a43, 0x2700, 0x5044, 0x6696, 0xb1b8, 0x0, 0x1);
        gbc.writeMem(0x1e30, { 0xf0, 0x93 });
        gbc.writeMem(0xff93, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a43, gbc.sp());
        EXPECT(0x1e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xff93));
        // F0 009B
        gbc.setState(0x9e71, 0x5bc3, 0xbae0, 0x5a6e, 0x61ce, 0xb4a9, 0x0, 0x0);
        gbc.writeMem(0x9e71, { 0xf0, 0x54 });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5bc3, gbc.sp());
        EXPECT(0x9e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e71));
        EXPECT(0x54, gbc.readMem(0x9e72));
        EXPECT(0xa1, gbc.readMem(0xff54));
        // F0 009C
        gbc.setState(0x8d8b, 0x203, 0xfcc0, 0xeb4, 0xbf35, 0xdb78, 0x0, 0x1);
        gbc.writeMem(0x8d8b, { 0xf0, 0xee });
        gbc.writeMem(0xffee, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8d8b));
        EXPECT(0xee, gbc.readMem(0x8d8c));
        EXPECT(0xca, gbc.readMem(0xffee));
        // F0 009D
        gbc.setState(0x2bac, 0x933d, 0x4220, 0x4809, 0x97a1, 0x81f7, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0xf0, 0x1d });
        gbc.writeMem(0xff1d, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x933d, gbc.sp());
        EXPECT(0x2bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff1d));
        // F0 009E
        gbc.setState(0xacbe, 0x54d6, 0x89c0, 0xb877, 0xae5, 0x6c4a, 0x1, 0x0);
        gbc.writeMem(0xacbe, { 0xf0, 0x8d });
        gbc.writeMem(0xff8d, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0xacc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xacbe));
        EXPECT(0x8d, gbc.readMem(0xacbf));
        EXPECT(0xbf, gbc.readMem(0xff8d));
        // F0 00A0
        gbc.setState(0x4709, 0x1b6b, 0xf040, 0x3c7c, 0x2624, 0xce4b, 0x1, 0x1);
        gbc.writeMem(0x4709, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1b6b, gbc.sp());
        EXPECT(0x470b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 00A1
        gbc.setState(0xbc4d, 0x2cec, 0x1150, 0x5b37, 0xe6a5, 0x50aa, 0x1, 0x1);
        gbc.writeMem(0xbc4d, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2cec, gbc.sp());
        EXPECT(0xbc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbc4d));
        EXPECT(0xcd, gbc.readMem(0xbc4e));
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 00A2
        gbc.setState(0xe176, 0x4098, 0xd6d0, 0x3a01, 0x63b1, 0xa40a, 0x1, 0x1);
        gbc.writeMem(0xe176, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4098, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe176));
        EXPECT(0x55, gbc.readMem(0xe177));
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 00A3
        gbc.setState(0x6903, 0x2c4c, 0x96e0, 0x57f7, 0xe093, 0x921, 0x0, 0x1);
        gbc.writeMem(0x6903, { 0xf0, 0x74 });
        gbc.writeMem(0xff74, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x6905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff74));
        // F0 00A5
        gbc.setState(0x2755, 0xefc0, 0xe620, 0x5d84, 0x3ce0, 0x3bf8, 0x0, 0x1);
        gbc.writeMem(0x2755, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xefc0, gbc.sp());
        EXPECT(0x2757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 00A6
        gbc.setState(0x497e, 0x9dcd, 0x8d10, 0x234f, 0x7e6, 0xd9ad, 0x0, 0x0);
        gbc.writeMem(0x497e, { 0xf0, 0x77 });
        gbc.writeMem(0xff77, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x4980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff77));
        // F0 00A7
        gbc.setState(0xdd50, 0xb400, 0x7380, 0x7ab4, 0x4787, 0xfdb2, 0x0, 0x1);
        gbc.writeMem(0xdd50, { 0xf0, 0xec });
        gbc.writeMem(0xffec, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb400, gbc.sp());
        EXPECT(0xdd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd50));
        EXPECT(0xec, gbc.readMem(0xdd51));
        EXPECT(0x9d, gbc.readMem(0xffec));
        // F0 00A8
        gbc.setState(0x5722, 0x825, 0xf250, 0x7188, 0xca7f, 0x5b8c, 0x1, 0x0);
        gbc.writeMem(0x5722, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x825, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 00A9
        gbc.setState(0xbd95, 0x9b17, 0xdb0, 0x751d, 0x4a03, 0xd603, 0x0, 0x1);
        gbc.writeMem(0xbd95, { 0xf0, 0x96 });
        gbc.writeMem(0xff96, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9b17, gbc.sp());
        EXPECT(0xbd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbd95));
        EXPECT(0x96, gbc.readMem(0xbd96));
        EXPECT(0x72, gbc.readMem(0xff96));
        // F0 00AA
        gbc.setState(0x486, 0xa31a, 0x91f0, 0xb939, 0xd623, 0x1271, 0x0, 0x0);
        gbc.writeMem(0x486, { 0xf0, 0xec });
        gbc.writeMem(0xffec, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa31a, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffec));
        // F0 00AC
        gbc.setState(0x7c9a, 0x20a9, 0xc840, 0x145f, 0x162f, 0x51d0, 0x0, 0x0);
        gbc.writeMem(0x7c9a, { 0xf0, 0x59 });
        gbc.writeMem(0xff59, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x7c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xff59));
        // F0 00AD
        gbc.setState(0xac0, 0x804b, 0x9940, 0xee68, 0x62a1, 0x7e9d, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0xf0, 0x51 });
        gbc.writeMem(0xff51, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xff51));
        // F0 00AE
        gbc.setState(0x8293, 0x9e45, 0x900, 0x804f, 0x4a45, 0x71fa, 0x1, 0x0);
        gbc.writeMem(0x8293, { 0xf0, 0x2a });
        gbc.writeMem(0xff2a, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8293));
        EXPECT(0x2a, gbc.readMem(0x8294));
        EXPECT(0x9c, gbc.readMem(0xff2a));
        // F0 00AF
        gbc.setState(0xb2ff, 0xbf1d, 0x2180, 0xcb15, 0xdd19, 0x1b, 0x1, 0x1);
        gbc.writeMem(0xb2ff, { 0xf0, 0x69 });
        gbc.writeMem(0xff69, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbf1d, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb2ff));
        EXPECT(0x69, gbc.readMem(0xb300));
        EXPECT(0x9e, gbc.readMem(0xff69));
        // F0 00B0
        gbc.setState(0xe891, 0x85cb, 0x6d00, 0x8be4, 0xb87f, 0xec1d, 0x1, 0x1);
        gbc.writeMem(0xe891, { 0xf0, 0x65 });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x85cb, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe891));
        EXPECT(0x65, gbc.readMem(0xe892));
        EXPECT(0xae, gbc.readMem(0xff65));
        // F0 00B2
        gbc.setState(0x6e6b, 0xdc97, 0x24a0, 0xa95c, 0x346e, 0x2545, 0x1, 0x1);
        gbc.writeMem(0x6e6b, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdc97, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 00B3
        gbc.setState(0x5b10, 0xe42f, 0x92b0, 0xf558, 0xf53e, 0xdcf4, 0x1, 0x1);
        gbc.writeMem(0x5b10, { 0xf0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe42f, gbc.sp());
        EXPECT(0x5b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xfff3));
        // F0 00B4
        gbc.setState(0xae35, 0xefb4, 0x3d70, 0x4d94, 0x3053, 0x43e, 0x1, 0x0);
        gbc.writeMem(0xae35, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0xae37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae35));
        EXPECT(0x32, gbc.readMem(0xae36));
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 00B5
        gbc.setState(0x83d7, 0x2f19, 0x8fc0, 0x2da0, 0x96d5, 0x4c41, 0x0, 0x0);
        gbc.writeMem(0x83d7, { 0xf0, 0x7e });
        gbc.writeMem(0xff7e, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83d7));
        EXPECT(0x7e, gbc.readMem(0x83d8));
        EXPECT(0x28, gbc.readMem(0xff7e));
        // F0 00B6
        gbc.setState(0x40b9, 0x4fc1, 0xf9f0, 0xc28d, 0xac27, 0xbc63, 0x0, 0x1);
        gbc.writeMem(0x40b9, { 0xf0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4fc1, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xffb6));
        // F0 00B7
        gbc.setState(0x27f1, 0x73af, 0xfec0, 0x78d8, 0x304e, 0xac40, 0x1, 0x1);
        gbc.writeMem(0x27f1, { 0xf0, 0xd });
        gbc.writeMem(0xff0d, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x73af, gbc.sp());
        EXPECT(0x27f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff0d));
        // F0 00B8
        gbc.setState(0x479b, 0xbd0d, 0xe1a0, 0xbdf0, 0xab96, 0x8c84, 0x0, 0x0);
        gbc.writeMem(0x479b, { 0xf0, 0xe9 });
        gbc.writeMem(0xffe9, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbd0d, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xffe9));
        // F0 00B9
        gbc.setState(0x6946, 0x41e7, 0x59a0, 0x21fe, 0xe28, 0x655f, 0x1, 0x1);
        gbc.writeMem(0x6946, { 0xf0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x41e7, gbc.sp());
        EXPECT(0x6948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffb2));
        // F0 00BA
        gbc.setState(0x51ed, 0x180f, 0x9e60, 0xde0e, 0x5b66, 0xb86f, 0x0, 0x1);
        gbc.writeMem(0x51ed, { 0xf0, 0x98 });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x51ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff98));
        // F0 00BB
        gbc.setState(0xba63, 0xd039, 0xf510, 0x5c91, 0xf275, 0xe808, 0x0, 0x0);
        gbc.writeMem(0xba63, { 0xf0, 0x7a });
        gbc.writeMem(0xff7a, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0xba65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba63));
        EXPECT(0x7a, gbc.readMem(0xba64));
        EXPECT(0xc4, gbc.readMem(0xff7a));
        // F0 00BC
        gbc.setState(0xec67, 0xfc5a, 0x6730, 0xbfcc, 0x251c, 0xc513, 0x0, 0x1);
        gbc.writeMem(0xec67, { 0xf0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfc5a, gbc.sp());
        EXPECT(0xec69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xec67));
        EXPECT(0xe0, gbc.readMem(0xec68));
        EXPECT(0x75, gbc.readMem(0xffe0));
        // F0 00BE
        gbc.setState(0xc1f3, 0x305d, 0xa310, 0xf521, 0x7217, 0x7b2b, 0x1, 0x1);
        gbc.writeMem(0xc1f3, { 0xf0, 0x4f });
        gbc.writeMem(0xff4f, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x305d, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc1f3));
        EXPECT(0x4f, gbc.readMem(0xc1f4));
        EXPECT(0x97, gbc.readMem(0xff4f));
        // F0 00BF
        gbc.setState(0x19a0, 0x392b, 0xe880, 0x3e86, 0x2722, 0x6f3f, 0x0, 0x0);
        gbc.writeMem(0x19a0, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x19a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 00C0
        gbc.setState(0x34ef, 0x1307, 0xa540, 0xa8c1, 0x9025, 0xb50a, 0x1, 0x1);
        gbc.writeMem(0x34ef, { 0xf0, 0x75 });
        gbc.writeMem(0xff75, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x34f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xff75));
        // F0 00C1
        gbc.setState(0xeea5, 0xac8b, 0x6560, 0xdd2, 0x56c5, 0xfd7, 0x1, 0x1);
        gbc.writeMem(0xeea5, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xac8b, gbc.sp());
        EXPECT(0xeea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeea5));
        EXPECT(0x4e, gbc.readMem(0xeea6));
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 00C2
        gbc.setState(0x1ec1, 0xacbf, 0x2580, 0x130a, 0x2be1, 0x5a05, 0x0, 0x1);
        gbc.writeMem(0x1ec1, { 0xf0, 0xe2 });
        gbc.writeMem(0xffe2, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xacbf, gbc.sp());
        EXPECT(0x1ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xffe2));
        // F0 00C3
        gbc.setState(0xc33b, 0x3e17, 0x5570, 0xd71e, 0xfdde, 0x1bf9, 0x0, 0x1);
        gbc.writeMem(0xc33b, { 0xf0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0xc33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc33b));
        EXPECT(0xf2, gbc.readMem(0xc33c));
        EXPECT(0x98, gbc.readMem(0xfff2));
        // F0 00C4
        gbc.setState(0xbb5b, 0x5859, 0xf3c0, 0x2a6d, 0xefcb, 0x274f, 0x1, 0x0);
        gbc.writeMem(0xbb5b, { 0xf0, 0x51 });
        gbc.writeMem(0xff51, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5859, gbc.sp());
        EXPECT(0xbb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbb5b));
        EXPECT(0x51, gbc.readMem(0xbb5c));
        EXPECT(0x4c, gbc.readMem(0xff51));
        // F0 00C5
        gbc.setState(0xc05a, 0x2d1c, 0x3df0, 0xd72b, 0x160, 0x5300, 0x1, 0x1);
        gbc.writeMem(0xc05a, { 0xf0, 0x67 });
        gbc.writeMem(0xff67, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2d1c, gbc.sp());
        EXPECT(0xc05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc05a));
        EXPECT(0x67, gbc.readMem(0xc05b));
        EXPECT(0x27, gbc.readMem(0xff67));
        // F0 00C6
        gbc.setState(0x6666, 0x5be9, 0x13c0, 0x1efd, 0x9a1c, 0xa08a, 0x1, 0x1);
        gbc.writeMem(0x6666, { 0xf0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5be9, gbc.sp());
        EXPECT(0x6668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xffe6));
        // F0 00C8
        gbc.setState(0xaa47, 0x3376, 0x3d0, 0x8a60, 0x12d4, 0x92c6, 0x1, 0x0);
        gbc.writeMem(0xaa47, { 0xf0, 0xd5 });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaa47));
        EXPECT(0xd5, gbc.readMem(0xaa48));
        EXPECT(0xc, gbc.readMem(0xffd5));
        // F0 00C9
        gbc.setState(0x3c00, 0x7e7d, 0x63c0, 0x1afa, 0xcd04, 0xddd3, 0x1, 0x0);
        gbc.writeMem(0x3c00, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e7d, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 00CA
        gbc.setState(0x94da, 0x4c5, 0xfec0, 0xbb31, 0x6825, 0x5a0f, 0x0, 0x1);
        gbc.writeMem(0x94da, { 0xf0, 0x83 });
        gbc.writeMem(0xff83, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x94dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x94da));
        EXPECT(0x83, gbc.readMem(0x94db));
        EXPECT(0x52, gbc.readMem(0xff83));
        // F0 00CB
        gbc.setState(0x9de2, 0xbd83, 0x5aa0, 0x52ba, 0x2fa0, 0xb648, 0x0, 0x1);
        gbc.writeMem(0x9de2, { 0xf0, 0x92 });
        gbc.writeMem(0xff92, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0x9de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9de2));
        EXPECT(0x92, gbc.readMem(0x9de3));
        EXPECT(0x1f, gbc.readMem(0xff92));
        // F0 00CC
        gbc.setState(0x2a33, 0x5e47, 0xd9c0, 0x5aea, 0xfd8f, 0xf5f7, 0x1, 0x1);
        gbc.writeMem(0x2a33, { 0xf0, 0x9e });
        gbc.writeMem(0xff9e, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5e47, gbc.sp());
        EXPECT(0x2a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xff9e));
        // F0 00CD
        gbc.setState(0xb111, 0x5981, 0x8e50, 0xec04, 0xdeaa, 0xe7bb, 0x1, 0x0);
        gbc.writeMem(0xb111, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5981, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb111));
        EXPECT(0xad, gbc.readMem(0xb112));
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 00CE
        gbc.setState(0x2afc, 0xcece, 0x1580, 0xe887, 0x460e, 0x3c2c, 0x0, 0x0);
        gbc.writeMem(0x2afc, { 0xf0, 0x3 });
        gbc.writeMem(0xff03, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcece, gbc.sp());
        EXPECT(0x2afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xff03));
        // F0 00CF
        gbc.setState(0x6b1e, 0x9f5f, 0xa560, 0x7867, 0xff5, 0xff8, 0x0, 0x0);
        gbc.writeMem(0x6b1e, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f5f, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 00D0
        gbc.setState(0xa688, 0xab44, 0xaae0, 0x9141, 0x166f, 0xa6c4, 0x1, 0x1);
        gbc.writeMem(0xa688, { 0xf0, 0xb4 });
        gbc.writeMem(0xffb4, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa688));
        EXPECT(0xb4, gbc.readMem(0xa689));
        EXPECT(0xec, gbc.readMem(0xffb4));
        // F0 00D1
        gbc.setState(0xb081, 0x367, 0x8e20, 0xed01, 0x27e9, 0x14d4, 0x1, 0x1);
        gbc.writeMem(0xb081, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0xb083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb081));
        EXPECT(0x31, gbc.readMem(0xb082));
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 00D2
        gbc.setState(0x8943, 0xc605, 0x70b0, 0x8898, 0xbfba, 0xd7f8, 0x0, 0x1);
        gbc.writeMem(0x8943, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8943));
        EXPECT(0x13, gbc.readMem(0x8944));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 00D3
        gbc.setState(0xda5, 0xd67e, 0x4970, 0x3be7, 0x5c4c, 0x91, 0x0, 0x0);
        gbc.writeMem(0xda5, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 00D4
        gbc.setState(0xd220, 0xe3e3, 0xa9c0, 0x9681, 0xc14e, 0x7112, 0x1, 0x0);
        gbc.writeMem(0xd220, { 0xf0, 0x7c });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe3e3, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd220));
        EXPECT(0x7c, gbc.readMem(0xd221));
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // F0 00D5
        gbc.setState(0x9a45, 0x7aa8, 0xfe70, 0x9f2e, 0xd788, 0xd8ff, 0x0, 0x1);
        gbc.writeMem(0x9a45, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0x9a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9a45));
        EXPECT(0x10, gbc.readMem(0x9a46));
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 00D6
        gbc.setState(0xc4ca, 0xdaea, 0x26f0, 0x361d, 0x8c19, 0xe51, 0x1, 0x0);
        gbc.writeMem(0xc4ca, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0xc4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc4ca));
        EXPECT(0xc5, gbc.readMem(0xc4cb));
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 00D7
        gbc.setState(0x8ff5, 0x52e8, 0xfb10, 0xadc1, 0xfab4, 0x84e2, 0x1, 0x0);
        gbc.writeMem(0x8ff5, { 0xf0, 0x95 });
        gbc.writeMem(0xff95, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0x8ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8ff5));
        EXPECT(0x95, gbc.readMem(0x8ff6));
        EXPECT(0x33, gbc.readMem(0xff95));
        // F0 00D8
        gbc.setState(0x4e7b, 0x1478, 0x42b0, 0x9d88, 0x7ca3, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0x4e7b, { 0xf0, 0x4b });
        gbc.writeMem(0xff4b, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1478, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xff4b));
        // F0 00D9
        gbc.setState(0xe86b, 0x6655, 0x9580, 0xad1b, 0x8489, 0xd9a9, 0x1, 0x0);
        gbc.writeMem(0xe86b, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6655, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe86b));
        EXPECT(0xbf, gbc.readMem(0xe86c));
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 00DA
        gbc.setState(0x8ddf, 0x81b1, 0x6560, 0x75a6, 0x6b29, 0xcf6a, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x81b1, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8ddf));
        EXPECT(0x10, gbc.readMem(0x8de0));
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 00DB
        gbc.setState(0x620d, 0x8c5a, 0x8130, 0xfabf, 0xdac9, 0x3472, 0x0, 0x0);
        gbc.writeMem(0x620d, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8c5a, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 00DC
        gbc.setState(0x84a8, 0xa9d1, 0xecd0, 0xba03, 0xe760, 0x847c, 0x0, 0x1);
        gbc.writeMem(0x84a8, { 0xf0, 0x43 });
        gbc.writeMem(0xff43, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x84a8));
        EXPECT(0x43, gbc.readMem(0x84a9));
        EXPECT(0x51, gbc.readMem(0xff43));
        // F0 00DD
        gbc.setState(0x79b6, 0x2215, 0x3010, 0xfdaf, 0xae51, 0x63e6, 0x1, 0x1);
        gbc.writeMem(0x79b6, { 0xf0, 0xc3 });
        gbc.writeMem(0xffc3, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0x79b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xffc3));
        // F0 00DE
        gbc.setState(0x161, 0x8c2b, 0x25a0, 0xb814, 0x3180, 0xdce3, 0x0, 0x1);
        gbc.writeMem(0x161, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8c2b, gbc.sp());
        EXPECT(0x163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 00DF
        gbc.setState(0x7abd, 0x2fb3, 0xc080, 0x334d, 0x2489, 0xaa81, 0x0, 0x0);
        gbc.writeMem(0x7abd, { 0xf0, 0xaf });
        gbc.writeMem(0xffaf, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2fb3, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xffaf));
        // F0 00E0
        gbc.setState(0xafb9, 0x308a, 0xcef0, 0x33f1, 0x43db, 0xa06c, 0x0, 0x0);
        gbc.writeMem(0xafb9, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x308a, gbc.sp());
        EXPECT(0xafbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xafb9));
        EXPECT(0x13, gbc.readMem(0xafba));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 00E1
        gbc.setState(0x8ce1, 0x3162, 0x71b0, 0x3e07, 0x5fac, 0x54ee, 0x0, 0x0);
        gbc.writeMem(0x8ce1, { 0xf0, 0x7 });
        gbc.writeMem(0xff07, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3162, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8ce1));
        EXPECT(0x7, gbc.readMem(0x8ce2));
        EXPECT(0x13, gbc.readMem(0xff07));
        // F0 00E2
        gbc.setState(0xb506, 0x2609, 0x780, 0xeae4, 0xaaeb, 0x203d, 0x1, 0x1);
        gbc.writeMem(0xb506, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb506));
        EXPECT(0x35, gbc.readMem(0xb507));
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 00E3
        gbc.setState(0x9441, 0x401b, 0xa7f0, 0x275d, 0xdb42, 0xdb56, 0x0, 0x0);
        gbc.writeMem(0x9441, { 0xf0, 0xbc });
        gbc.writeMem(0xffbc, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9441));
        EXPECT(0xbc, gbc.readMem(0x9442));
        EXPECT(0x4d, gbc.readMem(0xffbc));
        // F0 00E4
        gbc.setState(0x8894, 0x805a, 0x2710, 0xb834, 0x270f, 0xe212, 0x0, 0x1);
        gbc.writeMem(0x8894, { 0xf0, 0x58 });
        gbc.writeMem(0xff58, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8894));
        EXPECT(0x58, gbc.readMem(0x8895));
        EXPECT(0x10, gbc.readMem(0xff58));
        // F0 00E5
        gbc.setState(0xba6d, 0x7c6d, 0xf300, 0x1cdd, 0x9200, 0x2101, 0x1, 0x0);
        gbc.writeMem(0xba6d, { 0xf0, 0xfb });
        gbc.writeMem(0xfffb, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba6d));
        EXPECT(0xfb, gbc.readMem(0xba6e));
        EXPECT(0x5f, gbc.readMem(0xfffb));
        // F0 00E6
        gbc.setState(0x8189, 0x6c95, 0x9140, 0x8434, 0xce4f, 0xc9a8, 0x1, 0x0);
        gbc.writeMem(0x8189, { 0xf0, 0x53 });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6c95, gbc.sp());
        EXPECT(0x818b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8189));
        EXPECT(0x53, gbc.readMem(0x818a));
        EXPECT(0xd2, gbc.readMem(0xff53));
        // F0 00E7
        gbc.setState(0x4c7a, 0xf778, 0x1990, 0x567, 0x1675, 0xdf52, 0x0, 0x0);
        gbc.writeMem(0x4c7a, { 0xf0, 0xd });
        gbc.writeMem(0xff0d, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf778, gbc.sp());
        EXPECT(0x4c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff0d));
        // F0 00E8
        gbc.setState(0x61c8, 0x9433, 0x8920, 0xb784, 0xb81a, 0xa57, 0x0, 0x1);
        gbc.writeMem(0x61c8, { 0xf0, 0x23 });
        gbc.writeMem(0xff23, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xff23));
        // F0 00E9
        gbc.setState(0x2519, 0xb7c4, 0xf270, 0x1cb2, 0x4a9c, 0x435d, 0x0, 0x1);
        gbc.writeMem(0x2519, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb7c4, gbc.sp());
        EXPECT(0x251b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 00EA
        gbc.setState(0x87a1, 0xafe5, 0xad20, 0xbb35, 0x9920, 0xc1a5, 0x1, 0x0);
        gbc.writeMem(0x87a1, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x87a1));
        EXPECT(0x63, gbc.readMem(0x87a2));
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 00EB
        gbc.setState(0xcb52, 0x7d62, 0xc880, 0xcdd0, 0xcd34, 0x3962, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0xf0, 0x53 });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7d62, gbc.sp());
        EXPECT(0xcb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcb52));
        EXPECT(0x53, gbc.readMem(0xcb53));
        EXPECT(0xd2, gbc.readMem(0xff53));
        // F0 00EC
        gbc.setState(0x16fe, 0xcbc7, 0x5330, 0x9a88, 0xf13b, 0x2942, 0x0, 0x1);
        gbc.writeMem(0x16fe, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcbc7, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 00ED
        gbc.setState(0x3677, 0xfb1b, 0x77f0, 0x7d9d, 0xfe08, 0x5c3, 0x0, 0x0);
        gbc.writeMem(0x3677, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 00EE
        gbc.setState(0x446e, 0x285b, 0x31c0, 0x325, 0x294b, 0x81f3, 0x0, 0x0);
        gbc.writeMem(0x446e, { 0xf0, 0x80 });
        gbc.writeMem(0xff80, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x285b, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xff80));
        // F0 00F0
        gbc.setState(0x32ce, 0x483, 0x84a0, 0xc702, 0xd0d4, 0x7199, 0x1, 0x0);
        gbc.writeMem(0x32ce, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x483, gbc.sp());
        EXPECT(0x32d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 00F1
        gbc.setState(0xaee0, 0x6cbd, 0x42a0, 0x53c8, 0xd066, 0xd145, 0x0, 0x1);
        gbc.writeMem(0xaee0, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6cbd, gbc.sp());
        EXPECT(0xaee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaee0));
        EXPECT(0x2d, gbc.readMem(0xaee1));
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 00F2
        gbc.setState(0x9500, 0xdb88, 0x24a0, 0xdabe, 0x39d7, 0xde19, 0x0, 0x1);
        gbc.writeMem(0x9500, { 0xf0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdb88, gbc.sp());
        EXPECT(0x9502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9500));
        EXPECT(0xc9, gbc.readMem(0x9501));
        EXPECT(0x93, gbc.readMem(0xffc9));
        // F0 00F3
        gbc.setState(0x2a73, 0x90cf, 0x32c0, 0x6f61, 0x1e0a, 0x2973, 0x0, 0x0);
        gbc.writeMem(0x2a73, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x2a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 00F4
        gbc.setState(0x7903, 0x46da, 0xfb80, 0x77f7, 0x29c4, 0x61af, 0x0, 0x1);
        gbc.writeMem(0x7903, { 0xf0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xffb3));
        // F0 00F5
        gbc.setState(0x72c1, 0xa184, 0xf630, 0x9078, 0x1edb, 0x4e3b, 0x1, 0x0);
        gbc.writeMem(0x72c1, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa184, gbc.sp());
        EXPECT(0x72c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 00F6
        gbc.setState(0xad65, 0x3351, 0x1f40, 0x21ac, 0x8aaf, 0x9429, 0x0, 0x0);
        gbc.writeMem(0xad65, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3351, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xad65));
        EXPECT(0x25, gbc.readMem(0xad66));
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 00F7
        gbc.setState(0xc144, 0x569d, 0xb7e0, 0xd767, 0x5bd6, 0x5e4e, 0x1, 0x0);
        gbc.writeMem(0xc144, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc144));
        EXPECT(0xad, gbc.readMem(0xc145));
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 00F8
        gbc.setState(0x223a, 0xf03e, 0x3dc0, 0xc2b, 0xd79c, 0xbe6b, 0x0, 0x1);
        gbc.writeMem(0x223a, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf03e, gbc.sp());
        EXPECT(0x223c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 00F9
        gbc.setState(0x26d6, 0x49fc, 0xcc40, 0x1358, 0x7b85, 0x5aa8, 0x1, 0x1);
        gbc.writeMem(0x26d6, { 0xf0, 0x90 });
        gbc.writeMem(0xff90, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x49fc, gbc.sp());
        EXPECT(0x26d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xff90));
        // F0 00FA
        gbc.setState(0x592a, 0x95b, 0x1a70, 0x28ad, 0x32c3, 0x7d74, 0x1, 0x1);
        gbc.writeMem(0x592a, { 0xf0, 0x42 });
        gbc.writeMem(0xff42, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x95b, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xff42));
        // F0 00FB
        gbc.setState(0x7fac, 0x2079, 0x83b0, 0xc104, 0x6ada, 0x5bfb, 0x0, 0x0);
        gbc.writeMem(0x7fac, { 0xf0, 0xb9 });
        gbc.writeMem(0xffb9, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2079, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xffb9));
        // F0 00FC
        gbc.setState(0xdaf4, 0x7008, 0x3fb0, 0xddc9, 0xf65e, 0x328c, 0x0, 0x0);
        gbc.writeMem(0xdaf4, { 0xf0, 0xe2 });
        gbc.writeMem(0xffe2, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0xdaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdaf4));
        EXPECT(0xe2, gbc.readMem(0xdaf5));
        EXPECT(0xce, gbc.readMem(0xffe2));
        // F0 00FD
        gbc.setState(0xe9d7, 0xc6b0, 0xebf0, 0xaa81, 0x198e, 0x7068, 0x1, 0x0);
        gbc.writeMem(0xe9d7, { 0xf0, 0x7e });
        gbc.writeMem(0xff7e, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe9d7));
        EXPECT(0x7e, gbc.readMem(0xe9d8));
        EXPECT(0x28, gbc.readMem(0xff7e));
        // F0 00FE
        gbc.setState(0xe98a, 0xdf1d, 0xc020, 0xd281, 0xccf8, 0xa1dc, 0x1, 0x0);
        gbc.writeMem(0xe98a, { 0xf0, 0x18 });
        gbc.writeMem(0xff18, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdf1d, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe98a));
        EXPECT(0x18, gbc.readMem(0xe98b));
        EXPECT(0x2, gbc.readMem(0xff18));
        // F0 00FF
        gbc.setState(0xbaf0, 0x24b5, 0xeb40, 0xaf7a, 0x4428, 0xe09d, 0x0, 0x1);
        gbc.writeMem(0xbaf0, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x24b5, gbc.sp());
        EXPECT(0xbaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbaf0));
        EXPECT(0xed, gbc.readMem(0xbaf1));
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 0100
        gbc.setState(0x72de, 0xebfb, 0x6320, 0x92cd, 0xb029, 0x9c51, 0x1, 0x0);
        gbc.writeMem(0x72de, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x72e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 0101
        gbc.setState(0x4e0a, 0x49ec, 0x2730, 0x64de, 0x215a, 0xc909, 0x1, 0x0);
        gbc.writeMem(0x4e0a, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x49ec, gbc.sp());
        EXPECT(0x4e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 0102
        gbc.setState(0x98aa, 0xb55b, 0x7380, 0x8a8d, 0x42af, 0xb143, 0x0, 0x0);
        gbc.writeMem(0x98aa, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb55b, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x98aa));
        EXPECT(0x3f, gbc.readMem(0x98ab));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 0103
        gbc.setState(0x716f, 0xf07f, 0xd630, 0xe427, 0x7cd6, 0x44b7, 0x0, 0x1);
        gbc.writeMem(0x716f, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf07f, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 0104
        gbc.setState(0x2ac5, 0xc26f, 0xfd80, 0x8d1b, 0x496c, 0x74f8, 0x1, 0x1);
        gbc.writeMem(0x2ac5, { 0xf0, 0xdf });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x2ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffdf));
        // F0 0105
        gbc.setState(0x50ed, 0xdf74, 0xac10, 0x69b6, 0x1f4b, 0xf08b, 0x0, 0x1);
        gbc.writeMem(0x50ed, { 0xf0, 0x72 });
        gbc.writeMem(0xff72, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdf74, gbc.sp());
        EXPECT(0x50ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff72));
        // F0 0106
        gbc.setState(0x74e0, 0x6104, 0x55c0, 0x65b, 0x5aa4, 0xddf, 0x1, 0x1);
        gbc.writeMem(0x74e0, { 0xf0, 0x9a });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6104, gbc.sp());
        EXPECT(0x74e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // F0 0107
        gbc.setState(0x5609, 0x370e, 0x22d0, 0x7a5f, 0xa05d, 0xb6ea, 0x1, 0x0);
        gbc.writeMem(0x5609, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 0109
        gbc.setState(0xefa, 0x5bbb, 0x8f20, 0x12f6, 0x788b, 0x14e8, 0x1, 0x0);
        gbc.writeMem(0xefa, { 0xf0, 0x2c });
        gbc.writeMem(0xff2c, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0xefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff2c));
        // F0 010A
        gbc.setState(0x99c6, 0x26ee, 0x6aa0, 0x48cd, 0xc737, 0xbb03, 0x0, 0x1);
        gbc.writeMem(0x99c6, { 0xf0, 0x64 });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26ee, gbc.sp());
        EXPECT(0x99c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x99c6));
        EXPECT(0x64, gbc.readMem(0x99c7));
        EXPECT(0x87, gbc.readMem(0xff64));
        // F0 010B
        gbc.setState(0x2d7d, 0x5860, 0x4f20, 0x4909, 0x8c05, 0xdc3c, 0x0, 0x0);
        gbc.writeMem(0x2d7d, { 0xf0, 0xeb });
        gbc.writeMem(0xffeb, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5860, gbc.sp());
        EXPECT(0x2d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xffeb));
        // F0 010D
        gbc.setState(0x25, 0xabfc, 0x370, 0xd48a, 0xa13, 0x15ba, 0x1, 0x1);
        gbc.writeMem(0x25, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0x27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 010E
        gbc.setState(0xb0d1, 0xb7b, 0x7610, 0xc456, 0xcb78, 0x9d4, 0x1, 0x1);
        gbc.writeMem(0xb0d1, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0xb0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb0d1));
        EXPECT(0xb, gbc.readMem(0xb0d2));
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 010F
        gbc.setState(0xc2e7, 0x206a, 0xd500, 0x8afc, 0xef, 0xfb11, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x206a, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc2e7));
        EXPECT(0x62, gbc.readMem(0xc2e8));
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 0110
        gbc.setState(0x4040, 0x41ad, 0x4980, 0x970e, 0x8c71, 0xef7b, 0x1, 0x0);
        gbc.writeMem(0x4040, { 0xf0, 0x1f });
        gbc.writeMem(0xff1f, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x4042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff1f));
        // F0 0111
        gbc.setState(0x8c50, 0x9160, 0x6ac0, 0xeab1, 0xdbf6, 0xc194, 0x0, 0x0);
        gbc.writeMem(0x8c50, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8c50));
        EXPECT(0xc8, gbc.readMem(0x8c51));
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 0112
        gbc.setState(0x9f6e, 0xf087, 0x1640, 0x4106, 0xd6de, 0x9437, 0x1, 0x0);
        gbc.writeMem(0x9f6e, { 0xf0, 0xa7 });
        gbc.writeMem(0xffa7, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9f6e));
        EXPECT(0xa7, gbc.readMem(0x9f6f));
        EXPECT(0xb5, gbc.readMem(0xffa7));
        // F0 0113
        gbc.setState(0x3002, 0xf18, 0xc90, 0xb4f4, 0x3a47, 0xb126, 0x0, 0x0);
        gbc.writeMem(0x3002, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf18, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 0114
        gbc.setState(0x685e, 0x5fec, 0xf220, 0x6b82, 0x1580, 0xadec, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 0116
        gbc.setState(0x642e, 0x2591, 0x85e0, 0x2abf, 0xe913, 0xd1, 0x0, 0x1);
        gbc.writeMem(0x642e, { 0xf0, 0xa4 });
        gbc.writeMem(0xffa4, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2591, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xffa4));
        // F0 0117
        gbc.setState(0x2b34, 0x8e62, 0x4ff0, 0x7ca1, 0x2a26, 0xb806, 0x0, 0x0);
        gbc.writeMem(0x2b34, { 0xf0, 0x2a });
        gbc.writeMem(0xff2a, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff2a));
        // F0 0118
        gbc.setState(0x2e38, 0x8c46, 0x9ff0, 0xeea1, 0x86cf, 0x54a4, 0x0, 0x1);
        gbc.writeMem(0x2e38, { 0xf0, 0x96 });
        gbc.writeMem(0xff96, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8c46, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xff96));
        // F0 0119
        gbc.setState(0xa121, 0xda77, 0x800, 0xb761, 0xd3dc, 0x35b2, 0x0, 0x1);
        gbc.writeMem(0xa121, { 0xf0, 0x6f });
        gbc.writeMem(0xff6f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0xa123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa121));
        EXPECT(0x6f, gbc.readMem(0xa122));
        EXPECT(0xc1, gbc.readMem(0xff6f));
        // F0 011A
        gbc.setState(0xe168, 0xeb4d, 0xd1f0, 0x6588, 0x1a86, 0x80b8, 0x1, 0x1);
        gbc.writeMem(0xe168, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0xe16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe168));
        EXPECT(0xfc, gbc.readMem(0xe169));
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 011B
        gbc.setState(0x4d70, 0x7c, 0x3570, 0x1abb, 0xbf78, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0x4d70, { 0xf0, 0x5f });
        gbc.writeMem(0xff5f, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7c, gbc.sp());
        EXPECT(0x4d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xff5f));
        // F0 011C
        gbc.setState(0x1ed9, 0xc18f, 0xe730, 0x79cb, 0xdd56, 0x63a6, 0x0, 0x0);
        gbc.writeMem(0x1ed9, { 0xf0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0x1edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xffe6));
        // F0 011D
        gbc.setState(0x7000, 0x76ac, 0x7c30, 0x738c, 0x9d8b, 0x9dc6, 0x0, 0x1);
        gbc.writeMem(0x7000, { 0xf0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0x7002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xffa0));
        // F0 011E
        gbc.setState(0x299a, 0xda4b, 0xc4e0, 0x6054, 0x26f, 0x8498, 0x1, 0x1);
        gbc.writeMem(0x299a, { 0xf0, 0xcc });
        gbc.writeMem(0xffcc, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x299c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xffcc));
        // F0 011F
        gbc.setState(0xd120, 0xd3ac, 0xdab0, 0xc9aa, 0xb95, 0x4a56, 0x1, 0x0);
        gbc.writeMem(0xd120, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd3ac, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd120));
        EXPECT(0x48, gbc.readMem(0xd121));
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 0120
        gbc.setState(0x3713, 0xacc1, 0x93a0, 0xfa7e, 0x27bd, 0x1a38, 0x0, 0x0);
        gbc.writeMem(0x3713, { 0xf0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xacc1, gbc.sp());
        EXPECT(0x3715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfff5));
        // F0 0121
        gbc.setState(0xb384, 0x4876, 0x2880, 0x90ac, 0xcd12, 0x8281, 0x1, 0x0);
        gbc.writeMem(0xb384, { 0xf0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4876, gbc.sp());
        EXPECT(0xb386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb384));
        EXPECT(0xf6, gbc.readMem(0xb385));
        EXPECT(0x3b, gbc.readMem(0xfff6));
        // F0 0122
        gbc.setState(0x80f3, 0x3f0f, 0x3be0, 0x892b, 0x110d, 0x2c05, 0x0, 0x0);
        gbc.writeMem(0x80f3, { 0xf0, 0xe9 });
        gbc.writeMem(0xffe9, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3f0f, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x80f3));
        EXPECT(0xe9, gbc.readMem(0x80f4));
        EXPECT(0xc1, gbc.readMem(0xffe9));
        // F0 0123
        gbc.setState(0x4f5, 0x5fea, 0x60e0, 0x305d, 0xd59c, 0x8314, 0x0, 0x1);
        gbc.writeMem(0x4f5, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 0124
        gbc.setState(0x8e38, 0x9b37, 0xfaf0, 0xb0d4, 0x591b, 0xeb7, 0x1, 0x0);
        gbc.writeMem(0x8e38, { 0xf0, 0x95 });
        gbc.writeMem(0xff95, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9b37, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8e38));
        EXPECT(0x95, gbc.readMem(0x8e39));
        EXPECT(0x33, gbc.readMem(0xff95));
        // F0 0125
        gbc.setState(0x74c5, 0xd140, 0x3490, 0xa570, 0x494e, 0xc692, 0x1, 0x1);
        gbc.writeMem(0x74c5, { 0xf0, 0xea });
        gbc.writeMem(0xffea, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd140, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xffea));
        // F0 0126
        gbc.setState(0x2733, 0xec73, 0x4050, 0x181f, 0x6572, 0xf74c, 0x1, 0x1);
        gbc.writeMem(0x2733, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xec73, gbc.sp());
        EXPECT(0x2735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 0127
        gbc.setState(0xd27c, 0x6369, 0x9840, 0xe5ca, 0x1c60, 0xbfee, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0xf0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6369, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd27c));
        EXPECT(0xc9, gbc.readMem(0xd27d));
        EXPECT(0x93, gbc.readMem(0xffc9));
        // F0 0128
        gbc.setState(0xc1a8, 0x8a1c, 0xd840, 0x85d1, 0xe6d3, 0x759c, 0x0, 0x1);
        gbc.writeMem(0xc1a8, { 0xf0, 0x5b });
        gbc.writeMem(0xff5b, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a1c, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc1a8));
        EXPECT(0x5b, gbc.readMem(0xc1a9));
        EXPECT(0xff, gbc.readMem(0xff5b));
        // F0 012A
        gbc.setState(0x44f2, 0xdef2, 0xca0, 0x5b8b, 0x4549, 0xb61f, 0x1, 0x0);
        gbc.writeMem(0x44f2, { 0xf0, 0xd6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdef2, gbc.sp());
        EXPECT(0x44f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xffd6));
        // F0 012B
        gbc.setState(0x32b7, 0xc411, 0x2a60, 0x4025, 0x6946, 0x70d3, 0x0, 0x1);
        gbc.writeMem(0x32b7, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc411, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 012C
        gbc.setState(0x271, 0x660d, 0xac70, 0x2261, 0xad1d, 0x69f2, 0x0, 0x0);
        gbc.writeMem(0x271, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x660d, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 012D
        gbc.setState(0x4a62, 0x31b5, 0x7fc0, 0x447b, 0x3662, 0x65a3, 0x1, 0x0);
        gbc.writeMem(0x4a62, { 0xf0, 0x73 });
        gbc.writeMem(0xff73, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x31b5, gbc.sp());
        EXPECT(0x4a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff73));
        // F0 012E
        gbc.setState(0xab7f, 0x2563, 0x10e0, 0xea8f, 0xc224, 0xbff8, 0x0, 0x0);
        gbc.writeMem(0xab7f, { 0xf0, 0x6e });
        gbc.writeMem(0xff6e, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2563, gbc.sp());
        EXPECT(0xab81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xab7f));
        EXPECT(0x6e, gbc.readMem(0xab80));
        EXPECT(0x4, gbc.readMem(0xff6e));
        // F0 012F
        gbc.setState(0xb3ec, 0x4280, 0x8460, 0xaf65, 0x9b76, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0xb3ec, { 0xf0, 0x44 });
        gbc.writeMem(0xff44, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0xb3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb3ec));
        EXPECT(0x44, gbc.readMem(0xb3ed));
        EXPECT(0x93, gbc.readMem(0xff44));
        // F0 0130
        gbc.setState(0xe566, 0x6b3c, 0x1f0, 0x7fae, 0xced6, 0xc859, 0x0, 0x0);
        gbc.writeMem(0xe566, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe566));
        EXPECT(0x2b, gbc.readMem(0xe567));
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 0131
        gbc.setState(0xecda, 0x474, 0x98a0, 0xc97e, 0x7c26, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0xecda, { 0xf0, 0x75 });
        gbc.writeMem(0xff75, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x474, gbc.sp());
        EXPECT(0xecdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xecda));
        EXPECT(0x75, gbc.readMem(0xecdb));
        EXPECT(0x1, gbc.readMem(0xff75));
        // F0 0132
        gbc.setState(0x8fd5, 0xea98, 0x3170, 0xc4e1, 0x4e9e, 0xd1ec, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8fd5));
        EXPECT(0x70, gbc.readMem(0x8fd6));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 0133
        gbc.setState(0x499b, 0xaa5a, 0xb380, 0x4719, 0xb373, 0xd081, 0x1, 0x1);
        gbc.writeMem(0x499b, { 0xf0, 0xe });
        gbc.writeMem(0xff0e, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa5a, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xff0e));
        // F0 0134
        gbc.setState(0xe554, 0x746e, 0x4790, 0x3d00, 0x6080, 0x886d, 0x1, 0x0);
        gbc.writeMem(0xe554, { 0xf0, 0x43 });
        gbc.writeMem(0xff43, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x746e, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe554));
        EXPECT(0x43, gbc.readMem(0xe555));
        EXPECT(0x51, gbc.readMem(0xff43));
        // F0 0135
        gbc.setState(0x75, 0x4c1e, 0x5200, 0x289a, 0xcd47, 0xa315, 0x0, 0x0);
        gbc.writeMem(0x75, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0x77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 0136
        gbc.setState(0x9998, 0x3e9d, 0x2e20, 0x4428, 0x4b1a, 0x816, 0x0, 0x1);
        gbc.writeMem(0x9998, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0x999a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9998));
        EXPECT(0xd3, gbc.readMem(0x9999));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 0137
        gbc.setState(0x7115, 0xda9c, 0x77e0, 0x4222, 0x7a89, 0xa0e3, 0x1, 0x0);
        gbc.writeMem(0x7115, { 0xf0, 0x3e });
        gbc.writeMem(0xff3e, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xda9c, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xff3e));
        // F0 0138
        gbc.setState(0xb265, 0x2622, 0xb550, 0x4815, 0x6696, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0xb265, { 0xf0, 0x9e });
        gbc.writeMem(0xff9e, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2622, gbc.sp());
        EXPECT(0xb267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb265));
        EXPECT(0x9e, gbc.readMem(0xb266));
        EXPECT(0xde, gbc.readMem(0xff9e));
        // F0 0139
        gbc.setState(0x2a42, 0xdd7c, 0xe5b0, 0x4a0b, 0xcdfb, 0x1eec, 0x1, 0x0);
        gbc.writeMem(0x2a42, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdd7c, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 013A
        gbc.setState(0x7f61, 0xa9e6, 0x8210, 0x3713, 0x4c19, 0x5077, 0x1, 0x0);
        gbc.writeMem(0x7f61, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9e6, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 013B
        gbc.setState(0x111d, 0x32b7, 0x4700, 0xb22d, 0x8365, 0xb64e, 0x0, 0x0);
        gbc.writeMem(0x111d, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x32b7, gbc.sp());
        EXPECT(0x111f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 013D
        gbc.setState(0x42cd, 0xc9ad, 0xf4b0, 0xe7b4, 0x5475, 0x766a, 0x0, 0x0);
        gbc.writeMem(0x42cd, { 0xf0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xfff7));
        // F0 013E
        gbc.setState(0x7503, 0x31bc, 0x84a0, 0x8f66, 0xe5f2, 0xe7e1, 0x1, 0x0);
        gbc.writeMem(0x7503, { 0xf0, 0x7 });
        gbc.writeMem(0xff07, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xff07));
        // F0 013F
        gbc.setState(0x128e, 0x415f, 0xb760, 0x2733, 0x25a7, 0x177e, 0x1, 0x0);
        gbc.writeMem(0x128e, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0x1290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 0140
        gbc.setState(0xcda9, 0x9747, 0x22a0, 0x4838, 0x2302, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0xcda9, { 0xf0, 0x2c });
        gbc.writeMem(0xff2c, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9747, gbc.sp());
        EXPECT(0xcdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcda9));
        EXPECT(0x2c, gbc.readMem(0xcdaa));
        EXPECT(0xe8, gbc.readMem(0xff2c));
        // F0 0141
        gbc.setState(0x6fe5, 0x8370, 0x9210, 0xcd18, 0xcd47, 0xa412, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8370, gbc.sp());
        EXPECT(0x6fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 0142
        gbc.setState(0x4ac, 0x1364, 0xe190, 0xa931, 0x4d0e, 0x4647, 0x0, 0x1);
        gbc.writeMem(0x4ac, { 0xf0, 0x86 });
        gbc.writeMem(0xff86, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff86));
        // F0 0143
        gbc.setState(0x5756, 0x6f5f, 0xd340, 0xb6ee, 0x775c, 0x48b5, 0x1, 0x0);
        gbc.writeMem(0x5756, { 0xf0, 0x5e });
        gbc.writeMem(0xff5e, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f5f, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff5e));
        // F0 0144
        gbc.setState(0x78aa, 0x540a, 0x7820, 0x4446, 0xadc3, 0x27f9, 0x0, 0x1);
        gbc.writeMem(0x78aa, { 0xf0, 0x51 });
        gbc.writeMem(0xff51, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xff51));
        // F0 0145
        gbc.setState(0x941, 0xdde2, 0x46c0, 0x1c41, 0xaf24, 0x3612, 0x1, 0x1);
        gbc.writeMem(0x941, { 0xf0, 0x4d });
        gbc.writeMem(0xff4d, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff4d));
        // F0 0146
        gbc.setState(0x3bdc, 0xbb8c, 0xd9b0, 0x899, 0xc3d4, 0x4d4f, 0x0, 0x0);
        gbc.writeMem(0x3bdc, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbb8c, gbc.sp());
        EXPECT(0x3bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 0147
        gbc.setState(0x41b6, 0x520, 0xe570, 0x4086, 0x9448, 0x15b4, 0x0, 0x1);
        gbc.writeMem(0x41b6, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 0148
        gbc.setState(0x7afe, 0xb961, 0x36d0, 0xe2f1, 0xea06, 0x22cf, 0x1, 0x1);
        gbc.writeMem(0x7afe, { 0xf0, 0x8 });
        gbc.writeMem(0xff08, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xff08));
        // F0 0149
        gbc.setState(0x87f4, 0xcf15, 0xbe60, 0x6d14, 0x7cd8, 0x2638, 0x1, 0x1);
        gbc.writeMem(0x87f4, { 0xf0, 0x38 });
        gbc.writeMem(0xff38, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcf15, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x87f4));
        EXPECT(0x38, gbc.readMem(0x87f5));
        EXPECT(0xcc, gbc.readMem(0xff38));
        // F0 014A
        gbc.setState(0xe394, 0x2b8f, 0x79b0, 0x3a4e, 0x3e51, 0xcb39, 0x0, 0x1);
        gbc.writeMem(0xe394, { 0xf0, 0x5e });
        gbc.writeMem(0xff5e, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2b8f, gbc.sp());
        EXPECT(0xe396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe394));
        EXPECT(0x5e, gbc.readMem(0xe395));
        EXPECT(0x62, gbc.readMem(0xff5e));
        // F0 014B
        gbc.setState(0x8dc7, 0x39d2, 0x77f0, 0xe727, 0xb1fe, 0x883e, 0x0, 0x1);
        gbc.writeMem(0x8dc7, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8dc7));
        EXPECT(0x22, gbc.readMem(0x8dc8));
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 014C
        gbc.setState(0x1d2f, 0x1d0a, 0x6d40, 0xef13, 0xf817, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0x1d2f, { 0xf0, 0xc5 });
        gbc.writeMem(0xffc5, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d0a, gbc.sp());
        EXPECT(0x1d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xffc5));
        // F0 014D
        gbc.setState(0x72a5, 0xb92c, 0xddd0, 0x1f9b, 0x1c41, 0x85e4, 0x1, 0x1);
        gbc.writeMem(0x72a5, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0x72a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 014E
        gbc.setState(0x1cff, 0x1b90, 0x65b0, 0x3f98, 0xf2f8, 0x977f, 0x1, 0x1);
        gbc.writeMem(0x1cff, { 0xf0, 0x76 });
        gbc.writeMem(0xff76, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0x1d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xff76));
        // F0 014F
        gbc.setState(0x6310, 0x403d, 0xf460, 0xe6ef, 0xdfba, 0x6e8f, 0x0, 0x1);
        gbc.writeMem(0x6310, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0x6312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 0150
        gbc.setState(0xafc6, 0x31c9, 0xf8d0, 0xf4ad, 0x12a4, 0x109d, 0x0, 0x0);
        gbc.writeMem(0xafc6, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x31c9, gbc.sp());
        EXPECT(0xafc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xafc6));
        EXPECT(0xcb, gbc.readMem(0xafc7));
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 0151
        gbc.setState(0x325e, 0x13b9, 0xcba0, 0x24dc, 0xe60, 0x3ac7, 0x0, 0x0);
        gbc.writeMem(0x325e, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 0152
        gbc.setState(0xe08c, 0xc86b, 0xad10, 0xa3d1, 0x1e49, 0x4c52, 0x1, 0x1);
        gbc.writeMem(0xe08c, { 0xf0, 0x85 });
        gbc.writeMem(0xff85, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc86b, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe08c));
        EXPECT(0x85, gbc.readMem(0xe08d));
        EXPECT(0x9e, gbc.readMem(0xff85));
        // F0 0153
        gbc.setState(0x192e, 0x1f3, 0x8de0, 0x32a5, 0xd267, 0xfb27, 0x0, 0x0);
        gbc.writeMem(0x192e, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f3, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 0154
        gbc.setState(0x184f, 0xde3f, 0x19e0, 0xafa7, 0x7e28, 0x8ad0, 0x0, 0x0);
        gbc.writeMem(0x184f, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xde3f, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 0155
        gbc.setState(0x6eca, 0x14b8, 0x2880, 0xa0e5, 0x2e88, 0xee, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xf0, 0x41 });
        gbc.writeMem(0xff41, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x14b8, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff41));
        // F0 0156
        gbc.setState(0x9698, 0x1eb2, 0x90e0, 0xf44, 0xd4f7, 0xbb2f, 0x1, 0x1);
        gbc.writeMem(0x9698, { 0xf0, 0xe4 });
        gbc.writeMem(0xffe4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0x969a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9698));
        EXPECT(0xe4, gbc.readMem(0x9699));
        EXPECT(0xf, gbc.readMem(0xffe4));
        // F0 0157
        gbc.setState(0xcbec, 0x39da, 0x480, 0x3740, 0x90c5, 0xa27d, 0x0, 0x1);
        gbc.writeMem(0xcbec, { 0xf0, 0x8b });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcbec));
        EXPECT(0x8b, gbc.readMem(0xcbed));
        EXPECT(0x23, gbc.readMem(0xff8b));
        // F0 0158
        gbc.setState(0xd16e, 0x460f, 0x7df0, 0x7868, 0xbccb, 0x2dfe, 0x1, 0x1);
        gbc.writeMem(0xd16e, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0xd170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd16e));
        EXPECT(0x35, gbc.readMem(0xd16f));
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 015A
        gbc.setState(0x9b24, 0xb80d, 0x39f0, 0x9894, 0x3d20, 0xf54a, 0x1, 0x0);
        gbc.writeMem(0x9b24, { 0xf0, 0x7f });
        gbc.writeMem(0xff7f, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb80d, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9b24));
        EXPECT(0x7f, gbc.readMem(0x9b25));
        EXPECT(0x9, gbc.readMem(0xff7f));
        // F0 015B
        gbc.setState(0x9bd, 0x6d2d, 0x5980, 0xa576, 0x5b97, 0xde6c, 0x0, 0x0);
        gbc.writeMem(0x9bd, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6d2d, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 015C
        gbc.setState(0x798f, 0xa8d2, 0xbee0, 0x334c, 0xf59, 0x103b, 0x1, 0x1);
        gbc.writeMem(0x798f, { 0xf0, 0xcc });
        gbc.writeMem(0xffcc, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0x7991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xffcc));
        // F0 015D
        gbc.setState(0x3ef8, 0xa761, 0xf850, 0x2086, 0x8fda, 0xb1dc, 0x1, 0x1);
        gbc.writeMem(0x3ef8, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa761, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 015E
        gbc.setState(0x3b46, 0xa3d5, 0xfa90, 0x77d5, 0xd7fe, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x3b46, { 0xf0, 0xd5 });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3d5, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xffd5));
        // F0 0160
        gbc.setState(0xb0f5, 0xc593, 0x6ed0, 0x6b5, 0xcdba, 0x8e79, 0x0, 0x1);
        gbc.writeMem(0xb0f5, { 0xf0, 0x3c });
        gbc.writeMem(0xff3c, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb0f5));
        EXPECT(0x3c, gbc.readMem(0xb0f6));
        EXPECT(0xfd, gbc.readMem(0xff3c));
        // F0 0161
        gbc.setState(0x7afa, 0x5a8b, 0x7a10, 0xafdc, 0xc8e5, 0xeb23, 0x0, 0x1);
        gbc.writeMem(0x7afa, { 0xf0, 0x61 });
        gbc.writeMem(0xff61, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5a8b, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xff61));
        // F0 0162
        gbc.setState(0x5b96, 0xcb84, 0x57e0, 0x2b7c, 0x7f29, 0xffe8, 0x1, 0x0);
        gbc.writeMem(0x5b96, { 0xf0, 0x7e });
        gbc.writeMem(0xff7e, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcb84, gbc.sp());
        EXPECT(0x5b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xff7e));
        // F0 0163
        gbc.setState(0x941c, 0xa243, 0x8ab0, 0xf390, 0x172d, 0xc5e7, 0x1, 0x1);
        gbc.writeMem(0x941c, { 0xf0, 0xab });
        gbc.writeMem(0xffab, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0x941e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x941c));
        EXPECT(0xab, gbc.readMem(0x941d));
        EXPECT(0xe7, gbc.readMem(0xffab));
        // F0 0164
        gbc.setState(0x9ec0, 0x2572, 0x5b10, 0x5cd6, 0x87cc, 0xd6f7, 0x0, 0x0);
        gbc.writeMem(0x9ec0, { 0xf0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9ec0));
        EXPECT(0xf2, gbc.readMem(0x9ec1));
        EXPECT(0x98, gbc.readMem(0xfff2));
        // F0 0165
        gbc.setState(0x8c20, 0xc41d, 0x6130, 0x47b1, 0xddc5, 0xc13c, 0x0, 0x0);
        gbc.writeMem(0x8c20, { 0xf0, 0x7e });
        gbc.writeMem(0xff7e, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc41d, gbc.sp());
        EXPECT(0x8c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8c20));
        EXPECT(0x7e, gbc.readMem(0x8c21));
        EXPECT(0x28, gbc.readMem(0xff7e));
        // F0 0166
        gbc.setState(0xd100, 0xa19e, 0x4cc0, 0x870b, 0xb90f, 0x2481, 0x0, 0x0);
        gbc.writeMem(0xd100, { 0xf0, 0x19 });
        gbc.writeMem(0xff19, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa19e, gbc.sp());
        EXPECT(0xd102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd100));
        EXPECT(0x19, gbc.readMem(0xd101));
        EXPECT(0xe1, gbc.readMem(0xff19));
        // F0 0167
        gbc.setState(0x3775, 0xf966, 0x6e80, 0x21ef, 0x4857, 0xca24, 0x1, 0x1);
        gbc.writeMem(0x3775, { 0xf0, 0x30 });
        gbc.writeMem(0xff30, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff30));
        // F0 0168
        gbc.setState(0x9f3, 0xeb2a, 0xd2d0, 0x2952, 0xf98a, 0xc46d, 0x1, 0x0);
        gbc.writeMem(0x9f3, { 0xf0, 0xdf });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeb2a, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffdf));
        // F0 0169
        gbc.setState(0x9e51, 0xedf3, 0xf6f0, 0xc312, 0xca82, 0x8cb8, 0x0, 0x0);
        gbc.writeMem(0x9e51, { 0xf0, 0xdf });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xedf3, gbc.sp());
        EXPECT(0x9e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e51));
        EXPECT(0xdf, gbc.readMem(0x9e52));
        EXPECT(0xd, gbc.readMem(0xffdf));
        // F0 016B
        gbc.setState(0x76c5, 0xf614, 0x5960, 0xe0c5, 0xc4c1, 0xe8ce, 0x1, 0x0);
        gbc.writeMem(0x76c5, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 016C
        gbc.setState(0x145d, 0xc177, 0x2b30, 0x4788, 0x5123, 0x9281, 0x0, 0x1);
        gbc.writeMem(0x145d, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc177, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 016D
        gbc.setState(0xa20e, 0x78e3, 0xc850, 0xa856, 0xadb0, 0xd153, 0x1, 0x0);
        gbc.writeMem(0xa20e, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x78e3, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa20e));
        EXPECT(0x16, gbc.readMem(0xa20f));
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 016E
        gbc.setState(0xde27, 0x3cb5, 0x38d0, 0x222, 0xe647, 0x2b56, 0x0, 0x0);
        gbc.writeMem(0xde27, { 0xf0, 0x2f });
        gbc.writeMem(0xff2f, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3cb5, gbc.sp());
        EXPECT(0xde29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xde27));
        EXPECT(0x2f, gbc.readMem(0xde28));
        EXPECT(0x91, gbc.readMem(0xff2f));
        // F0 016F
        gbc.setState(0x4a49, 0x5f8a, 0xbb40, 0x620, 0x27cb, 0x5541, 0x0, 0x0);
        gbc.writeMem(0x4a49, { 0xf0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0x4a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffd0));
        // F0 0170
        gbc.setState(0x4ff1, 0x7961, 0x4890, 0x1133, 0x2e29, 0x8cc1, 0x0, 0x0);
        gbc.writeMem(0x4ff1, { 0xf0, 0x7b });
        gbc.writeMem(0xff7b, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7961, gbc.sp());
        EXPECT(0x4ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff7b));
        // F0 0171
        gbc.setState(0x1c6b, 0x9407, 0xf530, 0x5b7b, 0xded8, 0xd0cd, 0x0, 0x1);
        gbc.writeMem(0x1c6b, { 0xf0, 0x9d });
        gbc.writeMem(0xff9d, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9407, gbc.sp());
        EXPECT(0x1c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff9d));
        // F0 0172
        gbc.setState(0x147a, 0x2db7, 0x7e70, 0x7cda, 0x1f7f, 0x2f8b, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2db7, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 0173
        gbc.setState(0x29f0, 0x3767, 0x8d70, 0xfdf3, 0xe8af, 0xac14, 0x1, 0x1);
        gbc.writeMem(0x29f0, { 0xf0, 0xd9 });
        gbc.writeMem(0xffd9, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0x29f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffd9));
        // F0 0175
        gbc.setState(0xbabf, 0x9822, 0xf260, 0x8b12, 0x7a4f, 0xbacf, 0x1, 0x1);
        gbc.writeMem(0xbabf, { 0xf0, 0xf3 });
        gbc.writeMem(0xfff3, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9822, gbc.sp());
        EXPECT(0xbac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbabf));
        EXPECT(0xf3, gbc.readMem(0xbac0));
        EXPECT(0x48, gbc.readMem(0xfff3));
        // F0 0176
        gbc.setState(0xbe91, 0x8636, 0x1100, 0x7f80, 0x7cf, 0xb75a, 0x1, 0x1);
        gbc.writeMem(0xbe91, { 0xf0, 0x49 });
        gbc.writeMem(0xff49, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0xbe93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbe91));
        EXPECT(0x49, gbc.readMem(0xbe92));
        EXPECT(0xf0, gbc.readMem(0xff49));
        // F0 0177
        gbc.setState(0x2c3a, 0x7727, 0xadb0, 0x4f4a, 0xe9ce, 0x2e4e, 0x1, 0x1);
        gbc.writeMem(0x2c3a, { 0xf0, 0xca });
        gbc.writeMem(0xffca, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7727, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xffca));
        // F0 0178
        gbc.setState(0x8b6, 0xc407, 0x3850, 0xdd4d, 0x696e, 0x6b9f, 0x0, 0x1);
        gbc.writeMem(0x8b6, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc407, gbc.sp());
        EXPECT(0x8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 0179
        gbc.setState(0xdb8d, 0xc25c, 0x8200, 0x271d, 0xc7e7, 0xdb7a, 0x1, 0x0);
        gbc.writeMem(0xdb8d, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc25c, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdb8d));
        EXPECT(0xd3, gbc.readMem(0xdb8e));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 017A
        gbc.setState(0xd904, 0x61c1, 0xd950, 0xc97e, 0x8ed, 0x63cd, 0x1, 0x1);
        gbc.writeMem(0xd904, { 0xf0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x61c1, gbc.sp());
        EXPECT(0xd906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd904));
        EXPECT(0xa0, gbc.readMem(0xd905));
        EXPECT(0x33, gbc.readMem(0xffa0));
        // F0 017B
        gbc.setState(0x6846, 0xdd31, 0x8ec0, 0xaa35, 0x49f3, 0xf8f3, 0x0, 0x0);
        gbc.writeMem(0x6846, { 0xf0, 0x1b });
        gbc.writeMem(0xff1b, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdd31, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xff1b));
        // F0 017C
        gbc.setState(0x4a8d, 0xbad4, 0xc490, 0xd94e, 0x53e5, 0xb6c6, 0x1, 0x0);
        gbc.writeMem(0x4a8d, { 0xf0, 0x73 });
        gbc.writeMem(0xff73, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0x4a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff73));
        // F0 017D
        gbc.setState(0xc5a5, 0x45d8, 0xbc00, 0x637, 0x2e0f, 0xe640, 0x0, 0x1);
        gbc.writeMem(0xc5a5, { 0xf0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0xc5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc5a5));
        EXPECT(0xd4, gbc.readMem(0xc5a6));
        EXPECT(0x9f, gbc.readMem(0xffd4));
        // F0 017E
        gbc.setState(0x758e, 0xd045, 0xbed0, 0xc780, 0x69cc, 0x947d, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd045, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 017F
        gbc.setState(0x1d71, 0x20fb, 0x880, 0x1e9a, 0x226a, 0x3105, 0x0, 0x0);
        gbc.writeMem(0x1d71, { 0xf0, 0x4a });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x20fb, gbc.sp());
        EXPECT(0x1d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xff4a));
        // F0 0180
        gbc.setState(0xcf62, 0xfd68, 0xb830, 0xcaa0, 0xac17, 0xf517, 0x1, 0x0);
        gbc.writeMem(0xcf62, { 0xf0, 0x7c });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfd68, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcf62));
        EXPECT(0x7c, gbc.readMem(0xcf63));
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // F0 0181
        gbc.setState(0x202e, 0x1edd, 0x14e0, 0x49f6, 0x3e55, 0x96ff, 0x1, 0x0);
        gbc.writeMem(0x202e, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1edd, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 0184
        gbc.setState(0xb16b, 0xd800, 0xa030, 0xf421, 0x106f, 0x687, 0x0, 0x1);
        gbc.writeMem(0xb16b, { 0xf0, 0xba });
        gbc.writeMem(0xffba, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd800, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb16b));
        EXPECT(0xba, gbc.readMem(0xb16c));
        EXPECT(0x88, gbc.readMem(0xffba));
        // F0 0185
        gbc.setState(0x2d34, 0xa50b, 0x2f50, 0xe1bf, 0xb4df, 0x2fe9, 0x0, 0x0);
        gbc.writeMem(0x2d34, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa50b, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 0187
        gbc.setState(0x6e13, 0xf2f5, 0xa2d0, 0xd1bd, 0xfc05, 0xd887, 0x0, 0x1);
        gbc.writeMem(0x6e13, { 0xf0, 0xd6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xffd6));
        // F0 0188
        gbc.setState(0xa86a, 0x576a, 0x5220, 0x83ce, 0xad32, 0xa8bc, 0x1, 0x1);
        gbc.writeMem(0xa86a, { 0xf0, 0xd5 });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa86a));
        EXPECT(0xd5, gbc.readMem(0xa86b));
        EXPECT(0xc, gbc.readMem(0xffd5));
        // F0 0189
        gbc.setState(0x899a, 0xe76b, 0x99b0, 0xf880, 0xa93, 0x44e8, 0x1, 0x1);
        gbc.writeMem(0x899a, { 0xf0, 0x53 });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0x899c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x899a));
        EXPECT(0x53, gbc.readMem(0x899b));
        EXPECT(0xd2, gbc.readMem(0xff53));
        // F0 018A
        gbc.setState(0x2b79, 0xbfa2, 0xb90, 0xb456, 0xc267, 0x3764, 0x0, 0x0);
        gbc.writeMem(0x2b79, { 0xf0, 0x4f });
        gbc.writeMem(0xff4f, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbfa2, gbc.sp());
        EXPECT(0x2b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff4f));
        // F0 018B
        gbc.setState(0x3842, 0xdbbb, 0x17c0, 0x7896, 0x11da, 0x6ef, 0x0, 0x0);
        gbc.writeMem(0x3842, { 0xf0, 0x64 });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdbbb, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xff64));
        // F0 018C
        gbc.setState(0x66bf, 0x9423, 0xaf30, 0x82e9, 0x6910, 0x3a3d, 0x1, 0x0);
        gbc.writeMem(0x66bf, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0x66c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 018D
        gbc.setState(0x46e9, 0x85, 0xa570, 0x47cb, 0xad13, 0x2f6a, 0x1, 0x1);
        gbc.writeMem(0x46e9, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 018E
        gbc.setState(0xd021, 0xff83, 0x7fc0, 0x3a3f, 0x81fd, 0x410d, 0x1, 0x0);
        gbc.writeMem(0xd021, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xff83, gbc.sp());
        EXPECT(0xd023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd021));
        EXPECT(0x32, gbc.readMem(0xd022));
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 018F
        gbc.setState(0xa86f, 0xf035, 0x8690, 0xeb28, 0xfda1, 0x1761, 0x1, 0x1);
        gbc.writeMem(0xa86f, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf035, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa86f));
        EXPECT(0x9, gbc.readMem(0xa870));
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 0190
        gbc.setState(0xbc91, 0x5a5d, 0x8910, 0xf5a8, 0xc77c, 0x6856, 0x1, 0x1);
        gbc.writeMem(0xbc91, { 0xf0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5a5d, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbc91));
        EXPECT(0xb0, gbc.readMem(0xbc92));
        EXPECT(0x95, gbc.readMem(0xffb0));
        // F0 0191
        gbc.setState(0xc12d, 0xc4f6, 0x9d90, 0x4478, 0x24db, 0xf139, 0x1, 0x1);
        gbc.writeMem(0xc12d, { 0xf0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc12d));
        EXPECT(0xa8, gbc.readMem(0xc12e));
        EXPECT(0x85, gbc.readMem(0xffa8));
        // F0 0193
        gbc.setState(0xbf7f, 0x4d96, 0x40a0, 0xf72b, 0x9b61, 0x3789, 0x1, 0x1);
        gbc.writeMem(0xbf7f, { 0xf0, 0x8c });
        gbc.writeMem(0xff8c, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4d96, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbf7f));
        EXPECT(0x8c, gbc.readMem(0xbf80));
        EXPECT(0x44, gbc.readMem(0xff8c));
        // F0 0194
        gbc.setState(0xab32, 0xe960, 0x8210, 0xd199, 0xae5, 0xed6e, 0x1, 0x0);
        gbc.writeMem(0xab32, { 0xf0, 0xf5 });
        gbc.writeMem(0xfff5, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xab32));
        EXPECT(0xf5, gbc.readMem(0xab33));
        EXPECT(0x37, gbc.readMem(0xfff5));
        // F0 0195
        gbc.setState(0xe39c, 0xe3d, 0xea40, 0x2f95, 0xd9a9, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0xe39c, { 0xf0, 0xbd });
        gbc.writeMem(0xffbd, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe3d, gbc.sp());
        EXPECT(0xe39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe39c));
        EXPECT(0xbd, gbc.readMem(0xe39d));
        EXPECT(0x3d, gbc.readMem(0xffbd));
        // F0 0197
        gbc.setState(0xd20, 0x3876, 0xc4b0, 0x7281, 0x4793, 0x960a, 0x0, 0x0);
        gbc.writeMem(0xd20, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 0198
        gbc.setState(0x5a7, 0xcbc6, 0x35d0, 0x9d8b, 0xb13a, 0xa8a2, 0x0, 0x1);
        gbc.writeMem(0x5a7, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcbc6, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 0199
        gbc.setState(0x26f, 0x2a50, 0xe550, 0x38ff, 0x6cb0, 0xf1bb, 0x0, 0x1);
        gbc.writeMem(0x26f, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a50, gbc.sp());
        EXPECT(0x271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 019A
        gbc.setState(0x8d1a, 0x36f8, 0x1950, 0x2746, 0xa6ed, 0x89cf, 0x0, 0x1);
        gbc.writeMem(0x8d1a, { 0xf0, 0x5d });
        gbc.writeMem(0xff5d, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x36f8, gbc.sp());
        EXPECT(0x8d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8d1a));
        EXPECT(0x5d, gbc.readMem(0x8d1b));
        EXPECT(0x1a, gbc.readMem(0xff5d));
        // F0 019B
        gbc.setState(0xeb63, 0xdcd3, 0xe280, 0x7fcd, 0x675, 0x6a1e, 0x0, 0x1);
        gbc.writeMem(0xeb63, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdcd3, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb63));
        EXPECT(0x2b, gbc.readMem(0xeb64));
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 019C
        gbc.setState(0x40b, 0x2a5d, 0x8c20, 0xae63, 0xb3a3, 0xf45e, 0x0, 0x0);
        gbc.writeMem(0x40b, { 0xf0, 0xf });
        gbc.writeMem(0xff0f, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xff0f));
        // F0 019D
        gbc.setState(0x703a, 0x4470, 0xa470, 0x35d6, 0xa1f2, 0xe5d, 0x0, 0x0);
        gbc.writeMem(0x703a, { 0xf0, 0x5 });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4470, gbc.sp());
        EXPECT(0x703c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff05));
        // F0 019E
        gbc.setState(0xd339, 0xab64, 0xc20, 0xbf87, 0x8060, 0x623e, 0x0, 0x1);
        gbc.writeMem(0xd339, { 0xf0, 0xa });
        gbc.writeMem(0xff0a, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xab64, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd339));
        EXPECT(0xa, gbc.readMem(0xd33a));
        EXPECT(0xeb, gbc.readMem(0xff0a));
        // F0 019F
        gbc.setState(0xb1ad, 0xf40, 0x9d90, 0x333, 0x1f2b, 0xe812, 0x0, 0x1);
        gbc.writeMem(0xb1ad, { 0xf0, 0x3d });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf40, gbc.sp());
        EXPECT(0xb1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb1ad));
        EXPECT(0x3d, gbc.readMem(0xb1ae));
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // F0 01A0
        gbc.setState(0x3a0c, 0xd520, 0x8740, 0x2e61, 0xe123, 0x1feb, 0x1, 0x1);
        gbc.writeMem(0x3a0c, { 0xf0, 0xc7 });
        gbc.writeMem(0xffc7, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd520, gbc.sp());
        EXPECT(0x3a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xffc7));
        // F0 01A1
        gbc.setState(0xe796, 0x686d, 0x1920, 0xe528, 0xd780, 0xf08a, 0x1, 0x0);
        gbc.writeMem(0xe796, { 0xf0, 0xa9 });
        gbc.writeMem(0xffa9, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x686d, gbc.sp());
        EXPECT(0xe798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe796));
        EXPECT(0xa9, gbc.readMem(0xe797));
        EXPECT(0x61, gbc.readMem(0xffa9));
        // F0 01A2
        gbc.setState(0x4f33, 0x6419, 0xe40, 0x9168, 0xb43c, 0x7fce, 0x1, 0x0);
        gbc.writeMem(0x4f33, { 0xf0, 0xbc });
        gbc.writeMem(0xffbc, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6419, gbc.sp());
        EXPECT(0x4f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xffbc));
        // F0 01A3
        gbc.setState(0x816c, 0x5cce, 0xa6b0, 0xcb5f, 0xa656, 0x8855, 0x1, 0x0);
        gbc.writeMem(0x816c, { 0xf0, 0x7c });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5cce, gbc.sp());
        EXPECT(0x816e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x816c));
        EXPECT(0x7c, gbc.readMem(0x816d));
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // F0 01A4
        gbc.setState(0x361b, 0xec6, 0x4820, 0xcd46, 0x28de, 0x93ce, 0x1, 0x0);
        gbc.writeMem(0x361b, { 0xf0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xec6, gbc.sp());
        EXPECT(0x361d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xfff2));
        // F0 01A5
        gbc.setState(0x66cf, 0x88, 0x710, 0x6fec, 0xa178, 0x7c34, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x88, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 01A6
        gbc.setState(0xe25c, 0x94f8, 0x2b40, 0xb637, 0xcda7, 0xfe65, 0x1, 0x1);
        gbc.writeMem(0xe25c, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0xe25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe25c));
        EXPECT(0x22, gbc.readMem(0xe25d));
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 01A7
        gbc.setState(0x3c53, 0xcdd, 0xb3e0, 0xcd38, 0xa6b1, 0xe2b5, 0x1, 0x0);
        gbc.writeMem(0x3c53, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcdd, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 01A8
        gbc.setState(0x1b8f, 0x3a4f, 0xb850, 0x78f1, 0x1e68, 0xcff9, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0xf0, 0x7d });
        gbc.writeMem(0xff7d, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3a4f, gbc.sp());
        EXPECT(0x1b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff7d));
        // F0 01A9
        gbc.setState(0x5763, 0x3d75, 0x4730, 0xa766, 0x9f58, 0xcef4, 0x1, 0x1);
        gbc.writeMem(0x5763, { 0xf0, 0x83 });
        gbc.writeMem(0xff83, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3d75, gbc.sp());
        EXPECT(0x5765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff83));
        // F0 01AA
        gbc.setState(0xc6bf, 0x4c54, 0x98a0, 0x1aed, 0x4a12, 0xac0b, 0x0, 0x1);
        gbc.writeMem(0xc6bf, { 0xf0, 0x69 });
        gbc.writeMem(0xff69, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc6bf));
        EXPECT(0x69, gbc.readMem(0xc6c0));
        EXPECT(0x9e, gbc.readMem(0xff69));
        // F0 01AB
        gbc.setState(0x8a0f, 0x4ec6, 0x1c90, 0x4f4b, 0x96b3, 0x2e23, 0x0, 0x0);
        gbc.writeMem(0x8a0f, { 0xf0, 0x75 });
        gbc.writeMem(0xff75, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4ec6, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8a0f));
        EXPECT(0x75, gbc.readMem(0x8a10));
        EXPECT(0x1, gbc.readMem(0xff75));
        // F0 01AC
        gbc.setState(0x6257, 0x742c, 0xb390, 0x1660, 0x7581, 0xcabc, 0x0, 0x0);
        gbc.writeMem(0x6257, { 0xf0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x742c, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xffe0));
        // F0 01AD
        gbc.setState(0x389e, 0xb1d0, 0xd50, 0xb24e, 0x3f8a, 0xe64e, 0x0, 0x1);
        gbc.writeMem(0x389e, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb1d0, gbc.sp());
        EXPECT(0x38a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 01AE
        gbc.setState(0x671f, 0x595, 0xf450, 0xec, 0x3225, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0x671f, { 0xf0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xffb5));
        // F0 01AF
        gbc.setState(0x51c7, 0xba97, 0xbda0, 0xb512, 0x4b3d, 0x28ee, 0x0, 0x0);
        gbc.writeMem(0x51c7, { 0xf0, 0x5e });
        gbc.writeMem(0xff5e, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff5e));
        // F0 01B0
        gbc.setState(0x60a7, 0xdb30, 0x3090, 0x4a1, 0x9447, 0xa40a, 0x0, 0x0);
        gbc.writeMem(0x60a7, { 0xf0, 0x1c });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdb30, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff1c));
        // F0 01B1
        gbc.setState(0x2345, 0xc058, 0x90b0, 0x2a63, 0x1958, 0x8aef, 0x1, 0x0);
        gbc.writeMem(0x2345, { 0xf0, 0x1f });
        gbc.writeMem(0xff1f, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x2347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff1f));
        // F0 01B2
        gbc.setState(0x9d3d, 0xd6cb, 0xf50, 0xc2ff, 0x9076, 0x25c, 0x1, 0x0);
        gbc.writeMem(0x9d3d, { 0xf0, 0x69 });
        gbc.writeMem(0xff69, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9d3d));
        EXPECT(0x69, gbc.readMem(0x9d3e));
        EXPECT(0x9e, gbc.readMem(0xff69));
        // F0 01B3
        gbc.setState(0x1b99, 0x358d, 0xbdc0, 0xfb9b, 0x77da, 0xde6f, 0x0, 0x1);
        gbc.writeMem(0x1b99, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 01B5
        gbc.setState(0x7df8, 0xf0f0, 0xec40, 0x258b, 0xd20e, 0xc1d1, 0x1, 0x0);
        gbc.writeMem(0x7df8, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x7dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 01B6
        gbc.setState(0xa0e2, 0x483d, 0xf00, 0x2e10, 0xbb6e, 0x802b, 0x1, 0x1);
        gbc.writeMem(0xa0e2, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0xa0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa0e2));
        EXPECT(0x36, gbc.readMem(0xa0e3));
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 01B7
        gbc.setState(0x211d, 0x7f77, 0x94e0, 0x5b88, 0x2102, 0x948b, 0x0, 0x0);
        gbc.writeMem(0x211d, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f77, gbc.sp());
        EXPECT(0x211f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 01B8
        gbc.setState(0x2f58, 0x4e6, 0x2b50, 0x4ccb, 0xa7ed, 0x30a, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xf0, 0x2b });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4e6, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xff2b));
        // F0 01B9
        gbc.setState(0x53ea, 0xf0d9, 0x6d90, 0x2f22, 0xa90e, 0xa9be, 0x0, 0x0);
        gbc.writeMem(0x53ea, { 0xf0, 0x1d });
        gbc.writeMem(0xff1d, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0x53ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff1d));
        // F0 01BA
        gbc.setState(0x8931, 0x5db2, 0x20a0, 0xf5d4, 0xe58f, 0x2251, 0x1, 0x0);
        gbc.writeMem(0x8931, { 0xf0, 0x14 });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x8933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8931));
        EXPECT(0x14, gbc.readMem(0x8932));
        EXPECT(0xae, gbc.readMem(0xff14));
        // F0 01BB
        gbc.setState(0xabee, 0x248, 0xf010, 0xda04, 0xea8e, 0x562d, 0x0, 0x0);
        gbc.writeMem(0xabee, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x248, gbc.sp());
        EXPECT(0xabf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xabee));
        EXPECT(0xfc, gbc.readMem(0xabef));
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 01BC
        gbc.setState(0x5a58, 0x38f, 0x2690, 0x7530, 0x5044, 0x2adc, 0x0, 0x0);
        gbc.writeMem(0x5a58, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x38f, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 01BD
        gbc.setState(0xae89, 0x7c1c, 0x5190, 0x7183, 0x9ede, 0xb6a0, 0x1, 0x1);
        gbc.writeMem(0xae89, { 0xf0, 0x4b });
        gbc.writeMem(0xff4b, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7c1c, gbc.sp());
        EXPECT(0xae8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae89));
        EXPECT(0x4b, gbc.readMem(0xae8a));
        EXPECT(0xdf, gbc.readMem(0xff4b));
        // F0 01BE
        gbc.setState(0xdb06, 0x98e0, 0x15e0, 0xddbd, 0x8462, 0x621d, 0x1, 0x1);
        gbc.writeMem(0xdb06, { 0xf0, 0xbc });
        gbc.writeMem(0xffbc, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdb06));
        EXPECT(0xbc, gbc.readMem(0xdb07));
        EXPECT(0x4d, gbc.readMem(0xffbc));
        // F0 01BF
        gbc.setState(0x8aaa, 0x78ff, 0xa4f0, 0xbd6b, 0x2b79, 0x9cd4, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0xf0, 0x9e });
        gbc.writeMem(0xff9e, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x78ff, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8aaa));
        EXPECT(0x9e, gbc.readMem(0x8aab));
        EXPECT(0xde, gbc.readMem(0xff9e));
        // F0 01C0
        gbc.setState(0x3fe3, 0x373c, 0x6e90, 0xfc48, 0xe6d5, 0x3943, 0x0, 0x1);
        gbc.writeMem(0x3fe3, { 0xf0, 0xfd });
        gbc.writeMem(0xfffd, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x373c, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xfffd));
        // F0 01C1
        gbc.setState(0x733b, 0x3301, 0xd540, 0xea92, 0x3988, 0xf64e, 0x0, 0x0);
        gbc.writeMem(0x733b, { 0xf0, 0xfe });
        gbc.writeMem(0xfffe, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3301, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xfffe));
        // F0 01C2
        gbc.setState(0x1528, 0x76fc, 0xd960, 0x9861, 0xaa2a, 0x7f4a, 0x0, 0x0);
        gbc.writeMem(0x1528, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 01C3
        gbc.setState(0x126, 0xa2fa, 0x5870, 0x5cbc, 0x7239, 0xe4b7, 0x0, 0x1);
        gbc.writeMem(0x126, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa2fa, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 01C4
        gbc.setState(0xaa56, 0x6162, 0xe4f0, 0x968c, 0xe6fe, 0xd9f2, 0x0, 0x0);
        gbc.writeMem(0xaa56, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6162, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaa56));
        EXPECT(0x26, gbc.readMem(0xaa57));
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 01C7
        gbc.setState(0x62a1, 0xb479, 0x9c0, 0xc0e8, 0x328e, 0x5def, 0x1, 0x0);
        gbc.writeMem(0x62a1, { 0xf0, 0xec });
        gbc.writeMem(0xffec, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb479, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffec));
        // F0 01C8
        gbc.setState(0x6a75, 0x4ad, 0x5720, 0x88ea, 0xa0b5, 0xae11, 0x1, 0x1);
        gbc.writeMem(0x6a75, { 0xf0, 0x38 });
        gbc.writeMem(0xff38, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4ad, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff38));
        // F0 01C9
        gbc.setState(0xc905, 0x7d50, 0x5990, 0xe3a2, 0x31b2, 0xd141, 0x0, 0x1);
        gbc.writeMem(0xc905, { 0xf0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d50, gbc.sp());
        EXPECT(0xc907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc905));
        EXPECT(0xa0, gbc.readMem(0xc906));
        EXPECT(0x33, gbc.readMem(0xffa0));
        // F0 01CA
        gbc.setState(0x7e9, 0x7ba6, 0x96c0, 0xc751, 0xbf9d, 0xeee4, 0x1, 0x1);
        gbc.writeMem(0x7e9, { 0xf0, 0x1 });
        gbc.writeMem(0xff01, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff01));
        // F0 01CB
        gbc.setState(0xaef9, 0x4ef8, 0x64a0, 0x4af3, 0xdf2, 0x3fa2, 0x1, 0x0);
        gbc.writeMem(0xaef9, { 0xf0, 0xa7 });
        gbc.writeMem(0xffa7, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0xaefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaef9));
        EXPECT(0xa7, gbc.readMem(0xaefa));
        EXPECT(0xb5, gbc.readMem(0xffa7));
        // F0 01CC
        gbc.setState(0x5d46, 0xd972, 0x9b40, 0xe9be, 0xeb4, 0xad13, 0x0, 0x0);
        gbc.writeMem(0x5d46, { 0xf0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd972, gbc.sp());
        EXPECT(0x5d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xffc2));
        // F0 01CD
        gbc.setState(0x2ba, 0x46a0, 0x6c30, 0x2a0c, 0x7d48, 0x51cf, 0x0, 0x0);
        gbc.writeMem(0x2ba, { 0xf0, 0xfd });
        gbc.writeMem(0xfffd, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x46a0, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xfffd));
        // F0 01CE
        gbc.setState(0x4963, 0xc3a4, 0x4b50, 0xa3ec, 0x90b0, 0xa816, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0xf0, 0x7f });
        gbc.writeMem(0xff7f, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc3a4, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff7f));
        // F0 01CF
        gbc.setState(0xdf08, 0xe71d, 0x2fd0, 0x34a7, 0xdf7e, 0x2990, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0xf0, 0x6f });
        gbc.writeMem(0xff6f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe71d, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdf08));
        EXPECT(0x6f, gbc.readMem(0xdf09));
        EXPECT(0xc1, gbc.readMem(0xff6f));
        // F0 01D0
        gbc.setState(0x3d6a, 0xa4cd, 0x340, 0x5501, 0x8552, 0xc30c, 0x1, 0x1);
        gbc.writeMem(0x3d6a, { 0xf0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xffd4));
        // F0 01D1
        gbc.setState(0x3b0f, 0x1a19, 0x64d0, 0x46b3, 0x613a, 0x97bf, 0x1, 0x1);
        gbc.writeMem(0x3b0f, { 0xf0, 0x82 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1a19, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff82));
        // F0 01D2
        gbc.setState(0x7187, 0xef7, 0x5b90, 0x9a45, 0xe03f, 0x3c6f, 0x0, 0x0);
        gbc.writeMem(0x7187, { 0xf0, 0x2 });
        gbc.writeMem(0xff02, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xef7, gbc.sp());
        EXPECT(0x7189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xff02));
        // F0 01D3
        gbc.setState(0x87ba, 0x8092, 0xa010, 0x617b, 0xe1d4, 0xa21f, 0x1, 0x0);
        gbc.writeMem(0x87ba, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8092, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x87ba));
        EXPECT(0xf0, gbc.readMem(0x87bb));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 01D4
        gbc.setState(0x4fa7, 0x972f, 0x6160, 0x3412, 0x8559, 0x51bf, 0x0, 0x1);
        gbc.writeMem(0x4fa7, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x972f, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 01D5
        gbc.setState(0xd6e1, 0xd58f, 0x85b0, 0xf2a7, 0x562f, 0xa893, 0x0, 0x1);
        gbc.writeMem(0xd6e1, { 0xf0, 0x37 });
        gbc.writeMem(0xff37, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd58f, gbc.sp());
        EXPECT(0xd6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd6e1));
        EXPECT(0x37, gbc.readMem(0xd6e2));
        EXPECT(0x7e, gbc.readMem(0xff37));
        // F0 01D6
        gbc.setState(0xd9d8, 0xe02d, 0x9590, 0x1baa, 0x257b, 0x49ad, 0x1, 0x1);
        gbc.writeMem(0xd9d8, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe02d, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd9d8));
        EXPECT(0x97, gbc.readMem(0xd9d9));
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 01D7
        gbc.setState(0x1c8b, 0xbf5c, 0x480, 0xae95, 0x3540, 0x7291, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0xf0, 0x24 });
        gbc.writeMem(0xff24, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbf5c, gbc.sp());
        EXPECT(0x1c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff24));
        // F0 01D8
        gbc.setState(0xbed, 0xe463, 0x9380, 0x4771, 0x7663, 0xd994, 0x1, 0x1);
        gbc.writeMem(0xbed, { 0xf0, 0x78 });
        gbc.writeMem(0xff78, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe463, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff78));
        // F0 01D9
        gbc.setState(0x1f19, 0x31af, 0x8cd0, 0x7cb3, 0x57f5, 0xa78e, 0x1, 0x1);
        gbc.writeMem(0x1f19, { 0xf0, 0xd2 });
        gbc.writeMem(0xffd2, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0x1f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xffd2));
        // F0 01DA
        gbc.setState(0xa880, 0x4c63, 0xfd60, 0x857, 0x595e, 0x9e28, 0x0, 0x1);
        gbc.writeMem(0xa880, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4c63, gbc.sp());
        EXPECT(0xa882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa880));
        EXPECT(0x25, gbc.readMem(0xa881));
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 01DB
        gbc.setState(0x9786, 0xcd26, 0xb3f0, 0xfe97, 0x4a97, 0xed83, 0x1, 0x1);
        gbc.writeMem(0x9786, { 0xf0, 0x64 });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcd26, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9786));
        EXPECT(0x64, gbc.readMem(0x9787));
        EXPECT(0x87, gbc.readMem(0xff64));
        // F0 01DD
        gbc.setState(0xcc66, 0x4654, 0xc9c0, 0x5b86, 0xbcb0, 0x2b58, 0x0, 0x0);
        gbc.writeMem(0xcc66, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0xcc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcc66));
        EXPECT(0x48, gbc.readMem(0xcc67));
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 01DE
        gbc.setState(0x55d8, 0xcfd8, 0xb4a0, 0x2282, 0x2dd9, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0x55d8, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 01DF
        gbc.setState(0xe42b, 0xfd9, 0x1b40, 0x33bb, 0x78fb, 0xa3ae, 0x1, 0x0);
        gbc.writeMem(0xe42b, { 0xf0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfd9, gbc.sp());
        EXPECT(0xe42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe42b));
        EXPECT(0xd4, gbc.readMem(0xe42c));
        EXPECT(0x9f, gbc.readMem(0xffd4));
        // F0 01E0
        gbc.setState(0x12c5, 0x94c3, 0xb9d0, 0x5844, 0x8093, 0xb339, 0x1, 0x0);
        gbc.writeMem(0x12c5, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x94c3, gbc.sp());
        EXPECT(0x12c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 01E2
        gbc.setState(0xde8d, 0x646e, 0x6630, 0x85e9, 0x89ab, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0xde8d, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x646e, gbc.sp());
        EXPECT(0xde8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xde8d));
        EXPECT(0x99, gbc.readMem(0xde8e));
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 01E3
        gbc.setState(0x3315, 0x83b0, 0x1360, 0x9cfc, 0xe559, 0x79c4, 0x1, 0x0);
        gbc.writeMem(0x3315, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x83b0, gbc.sp());
        EXPECT(0x3317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 01E4
        gbc.setState(0x3010, 0xb84c, 0x3250, 0xbaf1, 0xa1b2, 0xec5f, 0x1, 0x1);
        gbc.writeMem(0x3010, { 0xf0, 0xf6 });
        gbc.writeMem(0xfff6, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb84c, gbc.sp());
        EXPECT(0x3012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xfff6));
        // F0 01E5
        gbc.setState(0x7bc5, 0xf0f8, 0x6640, 0x5e92, 0xf54f, 0x4c72, 0x0, 0x0);
        gbc.writeMem(0x7bc5, { 0xf0, 0xe7 });
        gbc.writeMem(0xffe7, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf0f8, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xffe7));
        // F0 01E6
        gbc.setState(0xeb5d, 0x3f33, 0x1f30, 0x4a2d, 0x53ce, 0x815f, 0x0, 0x1);
        gbc.writeMem(0xeb5d, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3f33, gbc.sp());
        EXPECT(0xeb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb5d));
        EXPECT(0xc6, gbc.readMem(0xeb5e));
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 01E7
        gbc.setState(0x1cab, 0x8bcc, 0x2bf0, 0x4c20, 0xdf96, 0xe4dc, 0x1, 0x1);
        gbc.writeMem(0x1cab, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0x1cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 01E8
        gbc.setState(0x7677, 0x18ed, 0xb4c0, 0x60d5, 0x6e21, 0x1b25, 0x1, 0x1);
        gbc.writeMem(0x7677, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x7679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 01E9
        gbc.setState(0x6fe7, 0x65c0, 0x7f40, 0x2788, 0x1603, 0x5a98, 0x1, 0x0);
        gbc.writeMem(0x6fe7, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x65c0, gbc.sp());
        EXPECT(0x6fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 01EA
        gbc.setState(0x4449, 0xfbfb, 0xe470, 0xa5a4, 0xa72f, 0x931e, 0x0, 0x0);
        gbc.writeMem(0x4449, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 01EB
        gbc.setState(0xcae7, 0xc889, 0x2960, 0xb62e, 0x2569, 0xda20, 0x1, 0x1);
        gbc.writeMem(0xcae7, { 0xf0, 0x87 });
        gbc.writeMem(0xff87, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0xcae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcae7));
        EXPECT(0x87, gbc.readMem(0xcae8));
        EXPECT(0xb1, gbc.readMem(0xff87));
        // F0 01EC
        gbc.setState(0x61c6, 0xe831, 0x83c0, 0x4a5c, 0xb7bd, 0xf1b2, 0x0, 0x0);
        gbc.writeMem(0x61c6, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x61c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 01ED
        gbc.setState(0x71d5, 0xed5, 0x9af0, 0x5519, 0xc1da, 0x9efb, 0x1, 0x1);
        gbc.writeMem(0x71d5, { 0xf0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed5, gbc.sp());
        EXPECT(0x71d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xffb6));
        // F0 01EE
        gbc.setState(0xb053, 0x6e7, 0xf2b0, 0x2068, 0x79e7, 0xb377, 0x1, 0x1);
        gbc.writeMem(0xb053, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0xb055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb053));
        EXPECT(0xbf, gbc.readMem(0xb054));
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 01EF
        gbc.setState(0xb850, 0xc954, 0xb310, 0x79df, 0xa2a2, 0x7c39, 0x0, 0x1);
        gbc.writeMem(0xb850, { 0xf0, 0x61 });
        gbc.writeMem(0xff61, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0xb852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb850));
        EXPECT(0x61, gbc.readMem(0xb851));
        EXPECT(0x20, gbc.readMem(0xff61));
        // F0 01F0
        gbc.setState(0xafba, 0xec29, 0x5780, 0x9057, 0x999, 0x3d28, 0x1, 0x0);
        gbc.writeMem(0xafba, { 0xf0, 0xcf });
        gbc.writeMem(0xffcf, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xafba));
        EXPECT(0xcf, gbc.readMem(0xafbb));
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // F0 01F1
        gbc.setState(0x8669, 0x594e, 0xd3b0, 0x3a37, 0x7969, 0xcf18, 0x1, 0x0);
        gbc.writeMem(0x8669, { 0xf0, 0xee });
        gbc.writeMem(0xffee, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8669));
        EXPECT(0xee, gbc.readMem(0x866a));
        EXPECT(0xca, gbc.readMem(0xffee));
        // F0 01F2
        gbc.setState(0x145a, 0xcdf2, 0xad40, 0x51a8, 0xf19f, 0x2060, 0x1, 0x1);
        gbc.writeMem(0x145a, { 0xf0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xfff7));
        // F0 01F3
        gbc.setState(0x344f, 0xa54b, 0x6b30, 0x62dc, 0xd237, 0x2c4a, 0x1, 0x1);
        gbc.writeMem(0x344f, { 0xf0, 0x34 });
        gbc.writeMem(0xff34, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x3451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff34));
        // F0 01F4
        gbc.setState(0x9473, 0xe975, 0x79f0, 0x2e8a, 0x7b, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0x9473, { 0xf0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe975, gbc.sp());
        EXPECT(0x9475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9473));
        EXPECT(0xe1, gbc.readMem(0x9474));
        EXPECT(0x88, gbc.readMem(0xffe1));
        // F0 01F6
        gbc.setState(0xed69, 0xde3b, 0xbbf0, 0x729a, 0xf268, 0xd6b6, 0x0, 0x1);
        gbc.writeMem(0xed69, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xde3b, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xed69));
        EXPECT(0x79, gbc.readMem(0xed6a));
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 01F7
        gbc.setState(0x41de, 0x939b, 0x9180, 0xf13e, 0x5e63, 0xacc8, 0x0, 0x1);
        gbc.writeMem(0x41de, { 0xf0, 0x72 });
        gbc.writeMem(0xff72, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff72));
        // F0 01F8
        gbc.setState(0x54c3, 0xe1a7, 0x80e0, 0xed0d, 0x17b2, 0x7db2, 0x0, 0x1);
        gbc.writeMem(0x54c3, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe1a7, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 01F9
        gbc.setState(0x576a, 0xb33b, 0xd7a0, 0x70f9, 0xffe8, 0xe552, 0x1, 0x1);
        gbc.writeMem(0x576a, { 0xf0, 0x19 });
        gbc.writeMem(0xff19, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff19));
        // F0 01FA
        gbc.setState(0x7b1, 0xbd4c, 0x660, 0xcafb, 0x66d, 0x90f5, 0x1, 0x1);
        gbc.writeMem(0x7b1, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd4c, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 01FB
        gbc.setState(0x9566, 0x4efe, 0xf650, 0x91da, 0xe3b3, 0x37f, 0x0, 0x0);
        gbc.writeMem(0x9566, { 0xf0, 0x9b });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4efe, gbc.sp());
        EXPECT(0x9568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9566));
        EXPECT(0x9b, gbc.readMem(0x9567));
        EXPECT(0xfb, gbc.readMem(0xff9b));
        // F0 01FC
        gbc.setState(0xe436, 0xfa2e, 0x9f0, 0xb0cb, 0x883d, 0xf3c7, 0x0, 0x0);
        gbc.writeMem(0xe436, { 0xf0, 0x57 });
        gbc.writeMem(0xff57, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe436));
        EXPECT(0x57, gbc.readMem(0xe437));
        EXPECT(0xf1, gbc.readMem(0xff57));
        // F0 01FD
        gbc.setState(0xda94, 0xcfea, 0x3ce0, 0x1bfa, 0xfaae, 0xd951, 0x1, 0x0);
        gbc.writeMem(0xda94, { 0xf0, 0x4b });
        gbc.writeMem(0xff4b, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xda94));
        EXPECT(0x4b, gbc.readMem(0xda95));
        EXPECT(0xdf, gbc.readMem(0xff4b));
        // F0 01FF
        gbc.setState(0xdee9, 0x4a8b, 0xbc60, 0x489a, 0x65f7, 0x7b37, 0x1, 0x0);
        gbc.writeMem(0xdee9, { 0xf0, 0x23 });
        gbc.writeMem(0xff23, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0xdeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdee9));
        EXPECT(0x23, gbc.readMem(0xdeea));
        EXPECT(0x45, gbc.readMem(0xff23));
        // F0 0200
        gbc.setState(0x3a9b, 0x8607, 0xc100, 0x484e, 0xd36c, 0xc301, 0x0, 0x0);
        gbc.writeMem(0x3a9b, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 0201
        gbc.setState(0xc71e, 0xe91b, 0x2bb0, 0xf4b3, 0xfa94, 0x726b, 0x0, 0x1);
        gbc.writeMem(0xc71e, { 0xf0, 0x0 });
        gbc.writeMem(0xff00, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe91b, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc71e));
        EXPECT(0x0, gbc.readMem(0xc71f));
        EXPECT(0x3a, gbc.readMem(0xff00));
        // F0 0202
        gbc.setState(0x82cf, 0x864e, 0x4a50, 0x9ae8, 0x3c75, 0xff3b, 0x0, 0x1);
        gbc.writeMem(0x82cf, { 0xf0, 0x33 });
        gbc.writeMem(0xff33, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x82cf));
        EXPECT(0x33, gbc.readMem(0x82d0));
        EXPECT(0x28, gbc.readMem(0xff33));
        // F0 0203
        gbc.setState(0xaaeb, 0xb2b3, 0xe990, 0x5fcb, 0xe1d8, 0xb294, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0xf0, 0xac });
        gbc.writeMem(0xffac, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb2b3, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaaeb));
        EXPECT(0xac, gbc.readMem(0xaaec));
        EXPECT(0x36, gbc.readMem(0xffac));
        // F0 0204
        gbc.setState(0x6e51, 0xfb00, 0x7560, 0x3f1e, 0x81f8, 0xe09a, 0x1, 0x1);
        gbc.writeMem(0x6e51, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfb00, gbc.sp());
        EXPECT(0x6e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 0205
        gbc.setState(0x8acf, 0xf610, 0xd100, 0x82, 0xb13f, 0x820d, 0x0, 0x1);
        gbc.writeMem(0x8acf, { 0xf0, 0x9b });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0x8ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8acf));
        EXPECT(0x9b, gbc.readMem(0x8ad0));
        EXPECT(0xfb, gbc.readMem(0xff9b));
        // F0 0206
        gbc.setState(0x2a27, 0x4b2d, 0x4940, 0x7fde, 0x851e, 0x9d75, 0x0, 0x1);
        gbc.writeMem(0x2a27, { 0xf0, 0x14 });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4b2d, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff14));
        // F0 0207
        gbc.setState(0x9e87, 0x7b38, 0xd350, 0x535d, 0xc5b4, 0x447f, 0x0, 0x1);
        gbc.writeMem(0x9e87, { 0xf0, 0xe4 });
        gbc.writeMem(0xffe4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b38, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e87));
        EXPECT(0xe4, gbc.readMem(0x9e88));
        EXPECT(0xf, gbc.readMem(0xffe4));
        // F0 0208
        gbc.setState(0x46b3, 0xf864, 0x9760, 0xa389, 0xe291, 0xaba5, 0x0, 0x0);
        gbc.writeMem(0x46b3, { 0xf0, 0x8f });
        gbc.writeMem(0xff8f, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf864, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xff8f));
        // F0 0209
        gbc.setState(0xba5a, 0x5f81, 0x8db0, 0xe5ed, 0xf780, 0x3818, 0x1, 0x1);
        gbc.writeMem(0xba5a, { 0xf0, 0x2f });
        gbc.writeMem(0xff2f, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5f81, gbc.sp());
        EXPECT(0xba5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba5a));
        EXPECT(0x2f, gbc.readMem(0xba5b));
        EXPECT(0x91, gbc.readMem(0xff2f));
        // F0 020A
        gbc.setState(0x6f95, 0x3a09, 0x3c10, 0xfff, 0xc67b, 0xe787, 0x0, 0x0);
        gbc.writeMem(0x6f95, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x6f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 020B
        gbc.setState(0xc587, 0xd007, 0xea50, 0xe9e3, 0x56d4, 0x561d, 0x1, 0x1);
        gbc.writeMem(0xc587, { 0xf0, 0xe6 });
        gbc.writeMem(0xffe6, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd007, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc587));
        EXPECT(0xe6, gbc.readMem(0xc588));
        EXPECT(0x2c, gbc.readMem(0xffe6));
        // F0 020C
        gbc.setState(0x45fc, 0xb8b3, 0xbd30, 0x659, 0x1a23, 0x2cf8, 0x1, 0x0);
        gbc.writeMem(0x45fc, { 0xf0, 0x82 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0x45fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff82));
        // F0 020D
        gbc.setState(0x365e, 0xc8a8, 0xc580, 0x54d2, 0xd62, 0xfeff, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0xf0, 0x44 });
        gbc.writeMem(0xff44, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0x3660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff44));
        // F0 020E
        gbc.setState(0x8d9c, 0xa711, 0x76b0, 0x9a4e, 0x5c1b, 0x9c8e, 0x1, 0x0);
        gbc.writeMem(0x8d9c, { 0xf0, 0xa0 });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0x8d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8d9c));
        EXPECT(0xa0, gbc.readMem(0x8d9d));
        EXPECT(0x33, gbc.readMem(0xffa0));
        // F0 020F
        gbc.setState(0xa485, 0x72af, 0x85f0, 0x975e, 0x839f, 0xe735, 0x0, 0x0);
        gbc.writeMem(0xa485, { 0xf0, 0x65 });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x72af, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa485));
        EXPECT(0x65, gbc.readMem(0xa486));
        EXPECT(0xae, gbc.readMem(0xff65));
        // F0 0210
        gbc.setState(0x30d1, 0x282e, 0xb560, 0xab44, 0xf855, 0xaa8c, 0x1, 0x1);
        gbc.writeMem(0x30d1, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x30d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 0211
        gbc.setState(0x53fc, 0x1de, 0x8970, 0x8dbb, 0xe477, 0x56a2, 0x0, 0x0);
        gbc.writeMem(0x53fc, { 0xf0, 0x23 });
        gbc.writeMem(0xff23, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1de, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xff23));
        // F0 0212
        gbc.setState(0xd6ab, 0x2824, 0xbf80, 0xcbea, 0x96f1, 0x8f9d, 0x1, 0x1);
        gbc.writeMem(0xd6ab, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2824, gbc.sp());
        EXPECT(0xd6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd6ab));
        EXPECT(0x17, gbc.readMem(0xd6ac));
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 0213
        gbc.setState(0x6ff6, 0x1d23, 0x4910, 0x4c4a, 0xfdb5, 0xb320, 0x1, 0x0);
        gbc.writeMem(0x6ff6, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0x6ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 0214
        gbc.setState(0xcfb6, 0x9d54, 0xe330, 0x606b, 0x2c7, 0xb7fb, 0x1, 0x1);
        gbc.writeMem(0xcfb6, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9d54, gbc.sp());
        EXPECT(0xcfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcfb6));
        EXPECT(0x4e, gbc.readMem(0xcfb7));
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 0215
        gbc.setState(0xed, 0x674a, 0xe150, 0xe518, 0xa8a, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0xed, { 0xf0, 0x87 });
        gbc.writeMem(0xff87, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x674a, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff87));
        // F0 0216
        gbc.setState(0xc2d3, 0xdeb3, 0x5840, 0x7ad6, 0x69f6, 0x135c, 0x1, 0x1);
        gbc.writeMem(0xc2d3, { 0xf0, 0x60 });
        gbc.writeMem(0xff60, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc2d3));
        EXPECT(0x60, gbc.readMem(0xc2d4));
        EXPECT(0x82, gbc.readMem(0xff60));
        // F0 0217
        gbc.setState(0xb856, 0xc45d, 0x6ad0, 0x5848, 0xe11, 0xdfe0, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc45d, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb856));
        EXPECT(0x13, gbc.readMem(0xb857));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 0218
        gbc.setState(0x11c0, 0xa7d1, 0xef70, 0x58ba, 0x7343, 0xdca3, 0x0, 0x0);
        gbc.writeMem(0x11c0, { 0xf0, 0x9e });
        gbc.writeMem(0xff9e, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0x11c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xff9e));
        // F0 0219
        gbc.setState(0x75b5, 0xdfe7, 0xd050, 0xaada, 0x548a, 0x58a0, 0x0, 0x0);
        gbc.writeMem(0x75b5, { 0xf0, 0x8d });
        gbc.writeMem(0xff8d, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xff8d));
        // F0 021B
        gbc.setState(0x1443, 0x15ed, 0xa960, 0x9758, 0x69b5, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x1443, { 0xf0, 0xda });
        gbc.writeMem(0xffda, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x15ed, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xffda));
        // F0 021C
        gbc.setState(0xe9c6, 0x7582, 0x16f0, 0xfd8d, 0xc2f9, 0x918c, 0x1, 0x1);
        gbc.writeMem(0xe9c6, { 0xf0, 0xcf });
        gbc.writeMem(0xffcf, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0xe9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe9c6));
        EXPECT(0xcf, gbc.readMem(0xe9c7));
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // F0 021D
        gbc.setState(0x1e4, 0x35f6, 0xd010, 0x9ade, 0x8bfe, 0x6663, 0x0, 0x0);
        gbc.writeMem(0x1e4, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x35f6, gbc.sp());
        EXPECT(0x1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 021E
        gbc.setState(0x4aa9, 0x1f44, 0x6ce0, 0x73a7, 0x152, 0xab29, 0x1, 0x1);
        gbc.writeMem(0x4aa9, { 0xf0, 0x44 });
        gbc.writeMem(0xff44, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff44));
        // F0 021F
        gbc.setState(0x4487, 0xe72, 0x21a0, 0x355, 0xa2aa, 0xe4ae, 0x0, 0x0);
        gbc.writeMem(0x4487, { 0xf0, 0xdb });
        gbc.writeMem(0xffdb, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe72, gbc.sp());
        EXPECT(0x4489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xffdb));
        // F0 0220
        gbc.setState(0x94e0, 0xaae8, 0x11a0, 0xd105, 0x4dc3, 0x7400, 0x0, 0x0);
        gbc.writeMem(0x94e0, { 0xf0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x94e0));
        EXPECT(0xd0, gbc.readMem(0x94e1));
        EXPECT(0x63, gbc.readMem(0xffd0));
        // F0 0221
        gbc.setState(0xa133, 0x201f, 0xd30, 0x34de, 0x5a51, 0x8301, 0x0, 0x0);
        gbc.writeMem(0xa133, { 0xf0, 0x81 });
        gbc.writeMem(0xff81, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x201f, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa133));
        EXPECT(0x81, gbc.readMem(0xa134));
        EXPECT(0x19, gbc.readMem(0xff81));
        // F0 0222
        gbc.setState(0x1f91, 0xe713, 0xf7f0, 0xb5ec, 0xe3fb, 0x7e60, 0x0, 0x0);
        gbc.writeMem(0x1f91, { 0xf0, 0xd9 });
        gbc.writeMem(0xffd9, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffd9));
        // F0 0223
        gbc.setState(0x75ed, 0x1c81, 0x9de0, 0x83fe, 0xe80e, 0xb00e, 0x1, 0x0);
        gbc.writeMem(0x75ed, { 0xf0, 0xae });
        gbc.writeMem(0xffae, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1c81, gbc.sp());
        EXPECT(0x75ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xffae));
        // F0 0224
        gbc.setState(0x4cbb, 0x9a22, 0xf880, 0xcd9f, 0x289d, 0xeece, 0x1, 0x1);
        gbc.writeMem(0x4cbb, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 0225
        gbc.setState(0xcc77, 0xa17d, 0x6990, 0x8aa7, 0x1be5, 0x6b49, 0x1, 0x1);
        gbc.writeMem(0xcc77, { 0xf0, 0x4a });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa17d, gbc.sp());
        EXPECT(0xcc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcc77));
        EXPECT(0x4a, gbc.readMem(0xcc78));
        EXPECT(0x7e, gbc.readMem(0xff4a));
        // F0 0226
        gbc.setState(0x8a1e, 0x1fa8, 0xd8f0, 0x8802, 0x86e1, 0xe4c4, 0x1, 0x0);
        gbc.writeMem(0x8a1e, { 0xf0, 0x58 });
        gbc.writeMem(0xff58, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8a1e));
        EXPECT(0x58, gbc.readMem(0x8a1f));
        EXPECT(0x10, gbc.readMem(0xff58));
        // F0 0227
        gbc.setState(0x50d2, 0xb43c, 0xa4c0, 0xbeef, 0x628f, 0x4b30, 0x1, 0x1);
        gbc.writeMem(0x50d2, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0x50d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 0228
        gbc.setState(0xb36c, 0x8202, 0xb370, 0x5c2e, 0xdbe1, 0x6c30, 0x1, 0x0);
        gbc.writeMem(0xb36c, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb36c));
        EXPECT(0xf1, gbc.readMem(0xb36d));
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 0229
        gbc.setState(0xb9e5, 0xfde7, 0xa110, 0xda3a, 0xe6de, 0xde63, 0x1, 0x0);
        gbc.writeMem(0xb9e5, { 0xf0, 0x19 });
        gbc.writeMem(0xff19, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfde7, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb9e5));
        EXPECT(0x19, gbc.readMem(0xb9e6));
        EXPECT(0xe1, gbc.readMem(0xff19));
        // F0 022A
        gbc.setState(0x83bb, 0x8438, 0x6210, 0x319d, 0xbc78, 0xbe95, 0x1, 0x1);
        gbc.writeMem(0x83bb, { 0xf0, 0x82 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8438, gbc.sp());
        EXPECT(0x83bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83bb));
        EXPECT(0x82, gbc.readMem(0x83bc));
        EXPECT(0x5e, gbc.readMem(0xff82));
        // F0 022B
        gbc.setState(0x65ee, 0xa722, 0xde00, 0x184e, 0x59c4, 0x758a, 0x1, 0x1);
        gbc.writeMem(0x65ee, { 0xf0, 0x60 });
        gbc.writeMem(0xff60, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x65f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xff60));
        // F0 022C
        gbc.setState(0xdcdc, 0x34dc, 0x900, 0xfc17, 0xbef3, 0x8e00, 0x1, 0x0);
        gbc.writeMem(0xdcdc, { 0xf0, 0x72 });
        gbc.writeMem(0xff72, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdcdc));
        EXPECT(0x72, gbc.readMem(0xdcdd));
        EXPECT(0xc2, gbc.readMem(0xff72));
        // F0 022D
        gbc.setState(0x3233, 0xe48c, 0x3c40, 0xb312, 0x1097, 0x4b2a, 0x1, 0x0);
        gbc.writeMem(0x3233, { 0xf0, 0x3d });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe48c, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // F0 022E
        gbc.setState(0xbba8, 0x7989, 0xd7e0, 0x4562, 0xdfca, 0x9f11, 0x1, 0x0);
        gbc.writeMem(0xbba8, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7989, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbba8));
        EXPECT(0x25, gbc.readMem(0xbba9));
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 022F
        gbc.setState(0xcea0, 0xc9ba, 0x3b30, 0xd963, 0x3ea3, 0xff39, 0x1, 0x1);
        gbc.writeMem(0xcea0, { 0xf0, 0xba });
        gbc.writeMem(0xffba, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0xcea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcea0));
        EXPECT(0xba, gbc.readMem(0xcea1));
        EXPECT(0x88, gbc.readMem(0xffba));
        // F0 0230
        gbc.setState(0x1ce, 0xdb95, 0x6940, 0xdf1a, 0x27b9, 0x288e, 0x0, 0x1);
        gbc.writeMem(0x1ce, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdb95, gbc.sp());
        EXPECT(0x1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 0231
        gbc.setState(0x1926, 0xdce4, 0x7fc0, 0xd5bf, 0xf039, 0x97a4, 0x0, 0x1);
        gbc.writeMem(0x1926, { 0xf0, 0x9f });
        gbc.writeMem(0xff9f, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x1928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xff9f));
        // F0 0232
        gbc.setState(0xc9b4, 0x83af, 0x3670, 0xa781, 0xc03b, 0x55d3, 0x0, 0x0);
        gbc.writeMem(0xc9b4, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xc9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9b4));
        EXPECT(0x3f, gbc.readMem(0xc9b5));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 0233
        gbc.setState(0xa683, 0x131a, 0xbaa0, 0xd80d, 0xc764, 0xb7ae, 0x0, 0x0);
        gbc.writeMem(0xa683, { 0xf0, 0xb9 });
        gbc.writeMem(0xffb9, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0xa685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa683));
        EXPECT(0xb9, gbc.readMem(0xa684));
        EXPECT(0xff, gbc.readMem(0xffb9));
        // F0 0234
        gbc.setState(0x1e35, 0xc579, 0x8f00, 0x6fc9, 0xba11, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x1e35, { 0xf0, 0x5 });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x1e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff05));
        // F0 0235
        gbc.setState(0x3e27, 0x11bc, 0x95e0, 0x2f4a, 0x4c54, 0xa38e, 0x0, 0x1);
        gbc.writeMem(0x3e27, { 0xf0, 0x83 });
        gbc.writeMem(0xff83, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x11bc, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff83));
        // F0 0236
        gbc.setState(0x6f9b, 0xc3d4, 0xbc90, 0x45b4, 0x8021, 0x91e8, 0x1, 0x1);
        gbc.writeMem(0x6f9b, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc3d4, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 0237
        gbc.setState(0xa195, 0x89e2, 0x7230, 0x490, 0x3cbf, 0xf341, 0x0, 0x1);
        gbc.writeMem(0xa195, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0xa197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa195));
        EXPECT(0x70, gbc.readMem(0xa196));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 0239
        gbc.setState(0xc6a, 0xb04b, 0xad70, 0x1792, 0xcf4d, 0xe63d, 0x0, 0x0);
        gbc.writeMem(0xc6a, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb04b, gbc.sp());
        EXPECT(0xc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 023A
        gbc.setState(0xfd4, 0x5748, 0x3f50, 0x4f35, 0xc521, 0x440e, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 023B
        gbc.setState(0x6812, 0x2ee5, 0x9390, 0xb797, 0x8c2a, 0xa8ff, 0x0, 0x0);
        gbc.writeMem(0x6812, { 0xf0, 0xad });
        gbc.writeMem(0xffad, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2ee5, gbc.sp());
        EXPECT(0x6814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xffad));
        // F0 023C
        gbc.setState(0x2e1b, 0xf4b1, 0x24c0, 0x2400, 0x65b7, 0x81a9, 0x1, 0x1);
        gbc.writeMem(0x2e1b, { 0xf0, 0x1d });
        gbc.writeMem(0xff1d, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf4b1, gbc.sp());
        EXPECT(0x2e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff1d));
        // F0 023D
        gbc.setState(0x6abc, 0x953, 0x80, 0x4a3, 0xa6a7, 0x3489, 0x0, 0x0);
        gbc.writeMem(0x6abc, { 0xf0, 0x8b });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x6abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xff8b));
        // F0 023F
        gbc.setState(0xafa2, 0x2482, 0x520, 0xb978, 0x701c, 0x9422, 0x0, 0x0);
        gbc.writeMem(0xafa2, { 0xf0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2482, gbc.sp());
        EXPECT(0xafa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xafa2));
        EXPECT(0xb0, gbc.readMem(0xafa3));
        EXPECT(0x95, gbc.readMem(0xffb0));
        // F0 0240
        gbc.setState(0x3a0c, 0x21ca, 0x26e0, 0x6ef7, 0x8f2b, 0x9fc3, 0x1, 0x0);
        gbc.writeMem(0x3a0c, { 0xf0, 0xc7 });
        gbc.writeMem(0xffc7, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0x3a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xffc7));
        // F0 0241
        gbc.setState(0xc21, 0x3e68, 0x87b0, 0x2a67, 0xfacf, 0x39fb, 0x0, 0x0);
        gbc.writeMem(0xc21, { 0xf0, 0x8e });
        gbc.writeMem(0xff8e, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e68, gbc.sp());
        EXPECT(0xc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff8e));
        // F0 0242
        gbc.setState(0x37f6, 0x6f6f, 0xa120, 0xe070, 0x6e8f, 0xeb65, 0x1, 0x0);
        gbc.writeMem(0x37f6, { 0xf0, 0x9b });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0x37f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xff9b));
        // F0 0243
        gbc.setState(0x4879, 0x451b, 0xedf0, 0x7142, 0x6e8f, 0x590a, 0x1, 0x1);
        gbc.writeMem(0x4879, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x451b, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 0244
        gbc.setState(0xa3f, 0x7c2d, 0x80e0, 0xd39b, 0x59d5, 0x2420, 0x0, 0x0);
        gbc.writeMem(0xa3f, { 0xf0, 0x81 });
        gbc.writeMem(0xff81, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0xa41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xff81));
        // F0 0246
        gbc.setState(0x7b8c, 0xda07, 0xe170, 0x5d6c, 0xd39e, 0x6c71, 0x1, 0x0);
        gbc.writeMem(0x7b8c, { 0xf0, 0xc4 });
        gbc.writeMem(0xffc4, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xda07, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffc4));
        // F0 0247
        gbc.setState(0x50a1, 0x87fd, 0xed20, 0xaafd, 0xa077, 0xb470, 0x1, 0x0);
        gbc.writeMem(0x50a1, { 0xf0, 0x82 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0x50a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff82));
        // F0 0248
        gbc.setState(0xca87, 0x7c0, 0x63a0, 0x8e0d, 0xa237, 0xf3b6, 0x1, 0x1);
        gbc.writeMem(0xca87, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7c0, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xca87));
        EXPECT(0xb7, gbc.readMem(0xca88));
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 0249
        gbc.setState(0xcb4b, 0x2f24, 0xad70, 0xed0f, 0x636b, 0x1359, 0x0, 0x0);
        gbc.writeMem(0xcb4b, { 0xf0, 0x2d });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcb4b));
        EXPECT(0x2d, gbc.readMem(0xcb4c));
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // F0 024B
        gbc.setState(0x54d8, 0x7140, 0x5bf0, 0x4f3b, 0x3d37, 0xe6f1, 0x1, 0x0);
        gbc.writeMem(0x54d8, { 0xf0, 0xb4 });
        gbc.writeMem(0xffb4, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffb4));
        // F0 024C
        gbc.setState(0x733c, 0xb6b7, 0x7670, 0xb160, 0x1d0d, 0x3381, 0x1, 0x0);
        gbc.writeMem(0x733c, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x733e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 024D
        gbc.setState(0x1cc2, 0x6bc4, 0xd970, 0xc4a9, 0x4fe1, 0x8c7f, 0x1, 0x1);
        gbc.writeMem(0x1cc2, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x1cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 024E
        gbc.setState(0x59e9, 0xaa74, 0x18d0, 0x3b60, 0xcf31, 0xe1cf, 0x0, 0x0);
        gbc.writeMem(0x59e9, { 0xf0, 0x9b });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaa74, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xff9b));
        // F0 024F
        gbc.setState(0x174a, 0x1a5, 0xe210, 0x854e, 0x4069, 0x683b, 0x0, 0x1);
        gbc.writeMem(0x174a, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0x174c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 0250
        gbc.setState(0xaeda, 0x6404, 0xb730, 0x96d3, 0xdede, 0x4bf9, 0x0, 0x1);
        gbc.writeMem(0xaeda, { 0xf0, 0x43 });
        gbc.writeMem(0xff43, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6404, gbc.sp());
        EXPECT(0xaedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaeda));
        EXPECT(0x43, gbc.readMem(0xaedb));
        EXPECT(0x51, gbc.readMem(0xff43));
        // F0 0251
        gbc.setState(0x8f3a, 0x8dee, 0xc5d0, 0x9daa, 0x4fae, 0x2cf2, 0x0, 0x1);
        gbc.writeMem(0x8f3a, { 0xf0, 0xfa });
        gbc.writeMem(0xfffa, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8dee, gbc.sp());
        EXPECT(0x8f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8f3a));
        EXPECT(0xfa, gbc.readMem(0x8f3b));
        EXPECT(0xd5, gbc.readMem(0xfffa));
        // F0 0252
        gbc.setState(0x6487, 0x2247, 0x2a80, 0xdede, 0xd08a, 0x945c, 0x1, 0x1);
        gbc.writeMem(0x6487, { 0xf0, 0x3d });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // F0 0253
        gbc.setState(0x3487, 0xb1a8, 0x6ca0, 0x12ad, 0x5f8, 0x81dc, 0x1, 0x0);
        gbc.writeMem(0x3487, { 0xf0, 0xf8 });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // F0 0254
        gbc.setState(0x9066, 0xf1d4, 0x65e0, 0x7e90, 0xd295, 0xcfa8, 0x1, 0x1);
        gbc.writeMem(0x9066, { 0xf0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf1d4, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9066));
        EXPECT(0xe8, gbc.readMem(0x9067));
        EXPECT(0x25, gbc.readMem(0xffe8));
        // F0 0255
        gbc.setState(0x1b11, 0xbaf, 0x9fd0, 0x21e8, 0x76ce, 0x22bc, 0x0, 0x0);
        gbc.writeMem(0x1b11, { 0xf0, 0x29 });
        gbc.writeMem(0xff29, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbaf, gbc.sp());
        EXPECT(0x1b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff29));
        // F0 0256
        gbc.setState(0x6fb4, 0x687e, 0x54e0, 0xf3c, 0xdcdd, 0x4708, 0x1, 0x0);
        gbc.writeMem(0x6fb4, { 0xf0, 0x55 });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x687e, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff55));
        // F0 0257
        gbc.setState(0x2761, 0x1936, 0xf1b0, 0xb7df, 0xa808, 0xc33c, 0x0, 0x0);
        gbc.writeMem(0x2761, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 0258
        gbc.setState(0x6877, 0x1249, 0xb90, 0x77b9, 0x6d47, 0x7671, 0x0, 0x0);
        gbc.writeMem(0x6877, { 0xf0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1249, gbc.sp());
        EXPECT(0x6879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xffd8));
        // F0 0259
        gbc.setState(0xb35b, 0xa28c, 0x1a70, 0x5445, 0xe9ca, 0x3c34, 0x0, 0x0);
        gbc.writeMem(0xb35b, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb35b));
        EXPECT(0xfc, gbc.readMem(0xb35c));
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 025A
        gbc.setState(0xd06d, 0x9dbc, 0xabb0, 0x5763, 0xd651, 0xe914, 0x1, 0x1);
        gbc.writeMem(0xd06d, { 0xf0, 0x46 });
        gbc.writeMem(0xff46, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd06d));
        EXPECT(0x46, gbc.readMem(0xd06e));
        EXPECT(0xbc, gbc.readMem(0xff46));
        // F0 025B
        gbc.setState(0x4f9f, 0xfddb, 0x33b0, 0xb6c9, 0xa3c, 0x86f9, 0x1, 0x1);
        gbc.writeMem(0x4f9f, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x4fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 025C
        gbc.setState(0xca60, 0x4d31, 0xfaa0, 0x995b, 0x83c, 0xa077, 0x1, 0x1);
        gbc.writeMem(0xca60, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4d31, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xca60));
        EXPECT(0x79, gbc.readMem(0xca61));
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 025D
        gbc.setState(0x9959, 0xe9c6, 0x89b0, 0x7472, 0x79a8, 0xc46c, 0x0, 0x1);
        gbc.writeMem(0x9959, { 0xf0, 0xbe });
        gbc.writeMem(0xffbe, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe9c6, gbc.sp());
        EXPECT(0x995b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9959));
        EXPECT(0xbe, gbc.readMem(0x995a));
        EXPECT(0xdb, gbc.readMem(0xffbe));
        // F0 025E
        gbc.setState(0x315d, 0x62de, 0xe730, 0x4bba, 0x1fe0, 0x6cce, 0x1, 0x0);
        gbc.writeMem(0x315d, { 0xf0, 0x94 });
        gbc.writeMem(0xff94, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff94));
        // F0 025F
        gbc.setState(0xa4b9, 0xc684, 0x2380, 0x9663, 0xd599, 0x412a, 0x0, 0x1);
        gbc.writeMem(0xa4b9, { 0xf0, 0x73 });
        gbc.writeMem(0xff73, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0xa4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa4b9));
        EXPECT(0x73, gbc.readMem(0xa4ba));
        EXPECT(0x39, gbc.readMem(0xff73));
        // F0 0260
        gbc.setState(0xba57, 0x1b6, 0x7a80, 0x41e0, 0x2738, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0xba57, { 0xf0, 0x9f });
        gbc.writeMem(0xff9f, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0xba59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba57));
        EXPECT(0x9f, gbc.readMem(0xba58));
        EXPECT(0xe7, gbc.readMem(0xff9f));
        // F0 0261
        gbc.setState(0x34ab, 0x6e39, 0xe740, 0x6d43, 0xa885, 0x72fe, 0x1, 0x0);
        gbc.writeMem(0x34ab, { 0xf0, 0xf8 });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6e39, gbc.sp());
        EXPECT(0x34ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // F0 0262
        gbc.setState(0xddd2, 0xca3d, 0xf800, 0x73fb, 0xb550, 0xe92b, 0x1, 0x1);
        gbc.writeMem(0xddd2, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xca3d, gbc.sp());
        EXPECT(0xddd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xddd2));
        EXPECT(0xc, gbc.readMem(0xddd3));
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 0264
        gbc.setState(0x8f1, 0x7bfe, 0x77b0, 0x1272, 0x95e7, 0x407e, 0x1, 0x0);
        gbc.writeMem(0x8f1, { 0xf0, 0x4f });
        gbc.writeMem(0xff4f, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0x8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff4f));
        // F0 0265
        gbc.setState(0x92c4, 0x6273, 0xd770, 0x93e9, 0x649f, 0xd5d1, 0x0, 0x1);
        gbc.writeMem(0x92c4, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6273, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x92c4));
        EXPECT(0x36, gbc.readMem(0x92c5));
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 0266
        gbc.setState(0x56c3, 0xc471, 0x4910, 0xebaf, 0xdef9, 0x315f, 0x0, 0x1);
        gbc.writeMem(0x56c3, { 0xf0, 0xe9 });
        gbc.writeMem(0xffe9, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc471, gbc.sp());
        EXPECT(0x56c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xffe9));
        // F0 0267
        gbc.setState(0x23d4, 0xd4a, 0x2150, 0xa6d3, 0xf18b, 0x8cdb, 0x0, 0x0);
        gbc.writeMem(0x23d4, { 0xf0, 0x40 });
        gbc.writeMem(0xff40, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd4a, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xff40));
        // F0 0268
        gbc.setState(0x3c8f, 0x4e0b, 0x4940, 0xe2c5, 0x1409, 0x8cd8, 0x0, 0x1);
        gbc.writeMem(0x3c8f, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0x3c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 0269
        gbc.setState(0xed0d, 0x65ee, 0xdb90, 0xbd2b, 0xdc03, 0xc0fd, 0x0, 0x0);
        gbc.writeMem(0xed0d, { 0xf0, 0x24 });
        gbc.writeMem(0xff24, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xed0d));
        EXPECT(0x24, gbc.readMem(0xed0e));
        EXPECT(0x2c, gbc.readMem(0xff24));
        // F0 026A
        gbc.setState(0x82fa, 0xe97d, 0x7fa0, 0x324b, 0x184a, 0xd54e, 0x1, 0x1);
        gbc.writeMem(0x82fa, { 0xf0, 0xe1 });
        gbc.writeMem(0xffe1, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe97d, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x82fa));
        EXPECT(0xe1, gbc.readMem(0x82fb));
        EXPECT(0x88, gbc.readMem(0xffe1));
        // F0 026B
        gbc.setState(0x6db, 0x4ec0, 0x9600, 0x18e9, 0x8031, 0x4003, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4ec0, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 026C
        gbc.setState(0x5335, 0x502d, 0xedc0, 0x3fa, 0x427, 0x7354, 0x1, 0x0);
        gbc.writeMem(0x5335, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 026D
        gbc.setState(0x5566, 0xf924, 0xf920, 0x80c2, 0x368e, 0x33fc, 0x0, 0x0);
        gbc.writeMem(0x5566, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf924, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 026E
        gbc.setState(0xc27c, 0xa89e, 0x1960, 0xbf68, 0x4d00, 0x13bd, 0x0, 0x1);
        gbc.writeMem(0xc27c, { 0xf0, 0x51 });
        gbc.writeMem(0xff51, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc27c));
        EXPECT(0x51, gbc.readMem(0xc27d));
        EXPECT(0x4c, gbc.readMem(0xff51));
        // F0 026F
        gbc.setState(0x9a52, 0x69e5, 0x2560, 0xe3bb, 0x5690, 0x64a3, 0x1, 0x1);
        gbc.writeMem(0x9a52, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x69e5, gbc.sp());
        EXPECT(0x9a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9a52));
        EXPECT(0x31, gbc.readMem(0x9a53));
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 0270
        gbc.setState(0x8b94, 0x2692, 0xbc50, 0x7f1c, 0xc322, 0xbf08, 0x1, 0x1);
        gbc.writeMem(0x8b94, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8b94));
        EXPECT(0xa5, gbc.readMem(0x8b95));
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 0271
        gbc.setState(0xd98b, 0x7807, 0xf9d0, 0x9391, 0xca98, 0xb757, 0x0, 0x0);
        gbc.writeMem(0xd98b, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7807, gbc.sp());
        EXPECT(0xd98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd98b));
        EXPECT(0x9, gbc.readMem(0xd98c));
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 0272
        gbc.setState(0xcff3, 0xdf38, 0x14e0, 0x723a, 0x5d9b, 0x1190, 0x1, 0x0);
        gbc.writeMem(0xcff3, { 0xf0, 0x93 });
        gbc.writeMem(0xff93, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdf38, gbc.sp());
        EXPECT(0xcff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcff3));
        EXPECT(0x93, gbc.readMem(0xcff4));
        EXPECT(0x63, gbc.readMem(0xff93));
        // F0 0273
        gbc.setState(0x3677, 0x4eca, 0x1eb0, 0x5f58, 0x885d, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0x3677, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 0274
        gbc.setState(0x476a, 0x750c, 0xac30, 0xe866, 0x9b81, 0x6787, 0x1, 0x1);
        gbc.writeMem(0x476a, { 0xf0, 0x30 });
        gbc.writeMem(0xff30, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x750c, gbc.sp());
        EXPECT(0x476c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff30));
        // F0 0275
        gbc.setState(0xb618, 0x99b7, 0x310, 0x4b66, 0x73e8, 0xfed9, 0x0, 0x0);
        gbc.writeMem(0xb618, { 0xf0, 0x54 });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x99b7, gbc.sp());
        EXPECT(0xb61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb618));
        EXPECT(0x54, gbc.readMem(0xb619));
        EXPECT(0xa1, gbc.readMem(0xff54));
        // F0 0276
        gbc.setState(0x71a4, 0x99f6, 0xa160, 0xfbaa, 0x503e, 0x8f77, 0x0, 0x1);
        gbc.writeMem(0x71a4, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0x71a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 0277
        gbc.setState(0xa473, 0xdc32, 0xe350, 0xb6d7, 0x69f0, 0x132e, 0x1, 0x0);
        gbc.writeMem(0xa473, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdc32, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa473));
        EXPECT(0xd3, gbc.readMem(0xa474));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 0278
        gbc.setState(0xe7e1, 0x340b, 0xc920, 0x4a1a, 0x1cec, 0x447f, 0x1, 0x1);
        gbc.writeMem(0xe7e1, { 0xf0, 0xd1 });
        gbc.writeMem(0xffd1, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x340b, gbc.sp());
        EXPECT(0xe7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe7e1));
        EXPECT(0xd1, gbc.readMem(0xe7e2));
        EXPECT(0x4d, gbc.readMem(0xffd1));
        // F0 0279
        gbc.setState(0x23a9, 0xc138, 0xc820, 0x3f89, 0xb1d6, 0x2c52, 0x0, 0x1);
        gbc.writeMem(0x23a9, { 0xf0, 0x3b });
        gbc.writeMem(0xff3b, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0x23ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xff3b));
        // F0 027A
        gbc.setState(0xe80b, 0xeadd, 0x8690, 0x9b58, 0x81b2, 0x74f0, 0x0, 0x0);
        gbc.writeMem(0xe80b, { 0xf0, 0x1b });
        gbc.writeMem(0xff1b, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0xe80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe80b));
        EXPECT(0x1b, gbc.readMem(0xe80c));
        EXPECT(0xee, gbc.readMem(0xff1b));
        // F0 027B
        gbc.setState(0xd91e, 0xed20, 0xe2f0, 0x137d, 0x47eb, 0x9517, 0x0, 0x1);
        gbc.writeMem(0xd91e, { 0xf0, 0xec });
        gbc.writeMem(0xffec, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0xd920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd91e));
        EXPECT(0xec, gbc.readMem(0xd91f));
        EXPECT(0x9d, gbc.readMem(0xffec));
        // F0 027C
        gbc.setState(0x944c, 0x8cbc, 0xb380, 0x729e, 0x8075, 0xf75e, 0x0, 0x1);
        gbc.writeMem(0x944c, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8cbc, gbc.sp());
        EXPECT(0x944e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x944c));
        EXPECT(0x32, gbc.readMem(0x944d));
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 027D
        gbc.setState(0x790a, 0xe690, 0xb9a0, 0xff88, 0xf80d, 0xb1b, 0x1, 0x0);
        gbc.writeMem(0x790a, { 0xf0, 0x16 });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0x790c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // F0 027E
        gbc.setState(0x5c11, 0xd3a5, 0xec10, 0xc8bb, 0xddb7, 0x4c56, 0x0, 0x1);
        gbc.writeMem(0x5c11, { 0xf0, 0x38 });
        gbc.writeMem(0xff38, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0x5c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff38));
        // F0 027F
        gbc.setState(0x4270, 0x31d6, 0x65a0, 0xae88, 0xbfc4, 0xbefd, 0x1, 0x1);
        gbc.writeMem(0x4270, { 0xf0, 0x68 });
        gbc.writeMem(0xff68, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x31d6, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff68));
        // F0 0280
        gbc.setState(0xb4e0, 0xbd7b, 0x8750, 0x3ef2, 0xceb4, 0x1323, 0x1, 0x1);
        gbc.writeMem(0xb4e0, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbd7b, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb4e0));
        EXPECT(0x32, gbc.readMem(0xb4e1));
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 0281
        gbc.setState(0xb0d, 0x3ea6, 0xc270, 0xc5a8, 0x5d1d, 0xa2bc, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3ea6, gbc.sp());
        EXPECT(0xb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 0282
        gbc.setState(0x336c, 0x6b81, 0xb420, 0x4ce5, 0x3bb1, 0x1a4e, 0x0, 0x1);
        gbc.writeMem(0x336c, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6b81, gbc.sp());
        EXPECT(0x336e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 0283
        gbc.setState(0xc277, 0x16d0, 0x0, 0x40de, 0x9943, 0x4719, 0x1, 0x1);
        gbc.writeMem(0xc277, { 0xf0, 0xdb });
        gbc.writeMem(0xffdb, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc277));
        EXPECT(0xdb, gbc.readMem(0xc278));
        EXPECT(0x1e, gbc.readMem(0xffdb));
        // F0 0284
        gbc.setState(0x7e3b, 0x78d5, 0x51f0, 0x2137, 0x9c63, 0x3269, 0x1, 0x0);
        gbc.writeMem(0x7e3b, { 0xf0, 0xc0 });
        gbc.writeMem(0xffc0, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x78d5, gbc.sp());
        EXPECT(0x7e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xffc0));
        // F0 0285
        gbc.setState(0x47ee, 0xaa79, 0x98d0, 0x85e5, 0x9eaf, 0xa812, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xf0, 0x3a });
        gbc.writeMem(0xff3a, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaa79, gbc.sp());
        EXPECT(0x47f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xff3a));
        // F0 0286
        gbc.setState(0xcf6f, 0x4485, 0xefe0, 0x9f63, 0x62e7, 0x52cd, 0x1, 0x1);
        gbc.writeMem(0xcf6f, { 0xf0, 0x7a });
        gbc.writeMem(0xff7a, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4485, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcf6f));
        EXPECT(0x7a, gbc.readMem(0xcf70));
        EXPECT(0xc4, gbc.readMem(0xff7a));
        // F0 0287
        gbc.setState(0x38c8, 0xd324, 0xfb80, 0xb856, 0xbb1, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0x38c8, { 0xf0, 0xa6 });
        gbc.writeMem(0xffa6, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd324, gbc.sp());
        EXPECT(0x38ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffa6));
        // F0 0288
        gbc.setState(0x26fc, 0xb8eb, 0x6690, 0xcaf, 0x8cfb, 0x693e, 0x1, 0x0);
        gbc.writeMem(0x26fc, { 0xf0, 0xf8 });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb8eb, gbc.sp());
        EXPECT(0x26fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // F0 0289
        gbc.setState(0x7f00, 0xcf1a, 0x8410, 0xd727, 0x9347, 0x52e2, 0x0, 0x0);
        gbc.writeMem(0x7f00, { 0xf0, 0x0 });
        gbc.writeMem(0xff00, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcf1a, gbc.sp());
        EXPECT(0x7f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xff00));
        // F0 028A
        gbc.setState(0xedfa, 0xb686, 0x22b0, 0x956a, 0xe9de, 0xf165, 0x1, 0x0);
        gbc.writeMem(0xedfa, { 0xf0, 0x8b });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb686, gbc.sp());
        EXPECT(0xedfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xedfa));
        EXPECT(0x8b, gbc.readMem(0xedfb));
        EXPECT(0x23, gbc.readMem(0xff8b));
        // F0 028B
        gbc.setState(0xc33f, 0x7919, 0x6950, 0x7d3, 0x6552, 0xba52, 0x0, 0x1);
        gbc.writeMem(0xc33f, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7919, gbc.sp());
        EXPECT(0xc341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc33f));
        EXPECT(0x70, gbc.readMem(0xc340));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 028C
        gbc.setState(0x2e58, 0xa87, 0x2cf0, 0x9954, 0xfbb3, 0xe43f, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0xf0, 0xbd });
        gbc.writeMem(0xffbd, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa87, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xffbd));
        // F0 028D
        gbc.setState(0x2ef3, 0x2dd0, 0xbbc0, 0xadb2, 0x1b5b, 0x6cea, 0x1, 0x0);
        gbc.writeMem(0x2ef3, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 028E
        gbc.setState(0xae72, 0x85fd, 0xbda0, 0xeff1, 0xb782, 0x356e, 0x0, 0x0);
        gbc.writeMem(0xae72, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x85fd, gbc.sp());
        EXPECT(0xae74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae72));
        EXPECT(0xbf, gbc.readMem(0xae73));
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 028F
        gbc.setState(0xee99, 0xd527, 0x10e0, 0x260e, 0x1133, 0xe764, 0x1, 0x0);
        gbc.writeMem(0xee99, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd527, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xee99));
        EXPECT(0xed, gbc.readMem(0xee9a));
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 0290
        gbc.setState(0x1937, 0x79cc, 0x2b30, 0xafc8, 0x864d, 0x55eb, 0x0, 0x1);
        gbc.writeMem(0x1937, { 0xf0, 0x6f });
        gbc.writeMem(0xff6f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x79cc, gbc.sp());
        EXPECT(0x1939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xff6f));
        // F0 0291
        gbc.setState(0xe1e4, 0x6ef2, 0x42d0, 0x6447, 0x5f0e, 0xcf97, 0x0, 0x1);
        gbc.writeMem(0xe1e4, { 0xf0, 0xfd });
        gbc.writeMem(0xfffd, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe1e4));
        EXPECT(0xfd, gbc.readMem(0xe1e5));
        EXPECT(0xb7, gbc.readMem(0xfffd));
        // F0 0292
        gbc.setState(0xd6c2, 0xf062, 0xd7b0, 0x63ea, 0x92f7, 0x5257, 0x1, 0x0);
        gbc.writeMem(0xd6c2, { 0xf0, 0x85 });
        gbc.writeMem(0xff85, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0xd6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd6c2));
        EXPECT(0x85, gbc.readMem(0xd6c3));
        EXPECT(0x9e, gbc.readMem(0xff85));
        // F0 0293
        gbc.setState(0x4262, 0xda0f, 0xbee0, 0xdd14, 0xa22c, 0x7c8e, 0x1, 0x1);
        gbc.writeMem(0x4262, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xda0f, gbc.sp());
        EXPECT(0x4264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 0294
        gbc.setState(0x7630, 0xc3a9, 0xaa0, 0x834, 0xed6f, 0xfd22, 0x1, 0x1);
        gbc.writeMem(0x7630, { 0xf0, 0x7a });
        gbc.writeMem(0xff7a, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc3a9, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xff7a));
        // F0 0295
        gbc.setState(0x99e2, 0x840d, 0xb960, 0x4488, 0x422, 0x5943, 0x0, 0x1);
        gbc.writeMem(0x99e2, { 0xf0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x840d, gbc.sp());
        EXPECT(0x99e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x99e2));
        EXPECT(0xb6, gbc.readMem(0x99e3));
        EXPECT(0x46, gbc.readMem(0xffb6));
        // F0 0296
        gbc.setState(0xa747, 0xd838, 0xc5f0, 0x9724, 0xa85a, 0x6d33, 0x0, 0x1);
        gbc.writeMem(0xa747, { 0xf0, 0x71 });
        gbc.writeMem(0xff71, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd838, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa747));
        EXPECT(0x71, gbc.readMem(0xa748));
        EXPECT(0x4f, gbc.readMem(0xff71));
        // F0 0297
        gbc.setState(0x2624, 0xaf37, 0x3ab0, 0x31b0, 0xdd40, 0xa687, 0x0, 0x0);
        gbc.writeMem(0x2624, { 0xf0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0x2626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xfff2));
        // F0 0298
        gbc.setState(0x244e, 0x458a, 0xfcc0, 0xa44f, 0x60ad, 0x6e9b, 0x1, 0x0);
        gbc.writeMem(0x244e, { 0xf0, 0x92 });
        gbc.writeMem(0xff92, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x458a, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xff92));
        // F0 0299
        gbc.setState(0x4b98, 0x75cd, 0xf710, 0xd2db, 0xb024, 0xd80d, 0x0, 0x0);
        gbc.writeMem(0x4b98, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x75cd, gbc.sp());
        EXPECT(0x4b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 029A
        gbc.setState(0x38a5, 0x5054, 0x5860, 0x37ec, 0x3780, 0x90d7, 0x0, 0x0);
        gbc.writeMem(0x38a5, { 0xf0, 0x4f });
        gbc.writeMem(0xff4f, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5054, gbc.sp());
        EXPECT(0x38a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff4f));
        // F0 029B
        gbc.setState(0x6a5d, 0xea0, 0x90d0, 0x6cbf, 0x533, 0x9d02, 0x0, 0x1);
        gbc.writeMem(0x6a5d, { 0xf0, 0xbf });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xea0, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffbf));
        // F0 029D
        gbc.setState(0xe5fb, 0xaf5e, 0x4d20, 0x9640, 0x2fa1, 0x3694, 0x0, 0x1);
        gbc.writeMem(0xe5fb, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaf5e, gbc.sp());
        EXPECT(0xe5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe5fb));
        EXPECT(0x3f, gbc.readMem(0xe5fc));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 029E
        gbc.setState(0xa649, 0xdc5c, 0x8740, 0x2f0c, 0x2cd1, 0x4a5d, 0x1, 0x0);
        gbc.writeMem(0xa649, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdc5c, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa649));
        EXPECT(0xff, gbc.readMem(0xa64a));
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 029F
        gbc.setState(0x5427, 0xc289, 0xf890, 0x1b8f, 0x14ee, 0x19f, 0x0, 0x0);
        gbc.writeMem(0x5427, { 0xf0, 0xea });
        gbc.writeMem(0xffea, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xffea));
        // F0 02A0
        gbc.setState(0x5c3c, 0xf016, 0xa6d0, 0x87cc, 0xbc59, 0x1394, 0x1, 0x0);
        gbc.writeMem(0x5c3c, { 0xf0, 0x4 });
        gbc.writeMem(0xff04, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0x5c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff04));
        // F0 02A1
        gbc.setState(0x962b, 0xaa8b, 0x4da0, 0x60df, 0x2934, 0x67e4, 0x1, 0x1);
        gbc.writeMem(0x962b, { 0xf0, 0xdb });
        gbc.writeMem(0xffdb, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa8b, gbc.sp());
        EXPECT(0x962d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x962b));
        EXPECT(0xdb, gbc.readMem(0x962c));
        EXPECT(0x1e, gbc.readMem(0xffdb));
        // F0 02A2
        gbc.setState(0xa2a9, 0x5a89, 0xd8b0, 0x7b1e, 0x8849, 0xe48e, 0x1, 0x0);
        gbc.writeMem(0xa2a9, { 0xf0, 0x47 });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0xa2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa2a9));
        EXPECT(0x47, gbc.readMem(0xa2aa));
        EXPECT(0x98, gbc.readMem(0xff47));
        // F0 02A3
        gbc.setState(0xa8d0, 0x5038, 0xb650, 0x8ab, 0x1663, 0x9ecb, 0x1, 0x0);
        gbc.writeMem(0xa8d0, { 0xf0, 0x85 });
        gbc.writeMem(0xff85, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0xa8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa8d0));
        EXPECT(0x85, gbc.readMem(0xa8d1));
        EXPECT(0x9e, gbc.readMem(0xff85));
        // F0 02A4
        gbc.setState(0xe2c3, 0x81ae, 0xd4c0, 0xdcfc, 0x20a1, 0xca64, 0x1, 0x0);
        gbc.writeMem(0xe2c3, { 0xf0, 0xa8 });
        gbc.writeMem(0xffa8, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x81ae, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe2c3));
        EXPECT(0xa8, gbc.readMem(0xe2c4));
        EXPECT(0x85, gbc.readMem(0xffa8));
        // F0 02A5
        gbc.setState(0x681e, 0x1149, 0xec70, 0x52d9, 0xe6f8, 0xc848, 0x1, 0x1);
        gbc.writeMem(0x681e, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 02A6
        gbc.setState(0x3d0b, 0x4f37, 0x8200, 0xa490, 0xd324, 0xf010, 0x1, 0x0);
        gbc.writeMem(0x3d0b, { 0xf0, 0x5a });
        gbc.writeMem(0xff5a, { 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xff5a));
        // F0 02A7
        gbc.setState(0x1c91, 0x68f6, 0x18a0, 0x1d04, 0xcb88, 0xb6f3, 0x0, 0x0);
        gbc.writeMem(0x1c91, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x68f6, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 02A9
        gbc.setState(0x92c6, 0xb59a, 0x9290, 0xb032, 0xffab, 0xfdb6, 0x0, 0x0);
        gbc.writeMem(0x92c6, { 0xf0, 0x7b });
        gbc.writeMem(0xff7b, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x92c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x92c6));
        EXPECT(0x7b, gbc.readMem(0x92c7));
        EXPECT(0x6, gbc.readMem(0xff7b));
        // F0 02AB
        gbc.setState(0x53, 0x2e34, 0xad80, 0x235e, 0xa2e8, 0x778, 0x0, 0x0);
        gbc.writeMem(0x53, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2e34, gbc.sp());
        EXPECT(0x55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 02AC
        gbc.setState(0xbb0, 0x10d0, 0x2330, 0xff7e, 0x93df, 0x1506, 0x1, 0x1);
        gbc.writeMem(0xbb0, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 02AD
        gbc.setState(0x4d76, 0x2f22, 0x9cd0, 0xa561, 0x8837, 0x121d, 0x1, 0x1);
        gbc.writeMem(0x4d76, { 0xf0, 0x88 });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f22, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xff88));
        // F0 02AE
        gbc.setState(0x7bc3, 0xca00, 0xa970, 0xe7c2, 0xa96f, 0x2a7d, 0x1, 0x0);
        gbc.writeMem(0x7bc3, { 0xf0, 0x66 });
        gbc.writeMem(0xff66, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff66));
        // F0 02AF
        gbc.setState(0x7358, 0xf8df, 0x5180, 0x2ebb, 0x1534, 0x3290, 0x1, 0x0);
        gbc.writeMem(0x7358, { 0xf0, 0x86 });
        gbc.writeMem(0xff86, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf8df, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xff86));
        // F0 02B0
        gbc.setState(0x8339, 0xb179, 0x8350, 0x7812, 0x70d0, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0x8339, { 0xf0, 0xaf });
        gbc.writeMem(0xffaf, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8339));
        EXPECT(0xaf, gbc.readMem(0x833a));
        EXPECT(0x51, gbc.readMem(0xffaf));
        // F0 02B1
        gbc.setState(0xdad, 0xf571, 0xe710, 0xe726, 0xbf59, 0x95cf, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0xf0, 0x3b });
        gbc.writeMem(0xff3b, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xff3b));
        // F0 02B2
        gbc.setState(0xecd9, 0xc52a, 0x77d0, 0xcc10, 0x126, 0xc076, 0x1, 0x1);
        gbc.writeMem(0xecd9, { 0xf0, 0xa4 });
        gbc.writeMem(0xffa4, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0xecdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xecd9));
        EXPECT(0xa4, gbc.readMem(0xecda));
        EXPECT(0xb8, gbc.readMem(0xffa4));
        // F0 02B3
        gbc.setState(0xb492, 0x7b22, 0xee80, 0x603e, 0xd508, 0xb8ef, 0x1, 0x1);
        gbc.writeMem(0xb492, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb492));
        EXPECT(0x17, gbc.readMem(0xb493));
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 02B4
        gbc.setState(0xefbf, 0x9a55, 0x10d0, 0xbf7c, 0xf65b, 0x88a1, 0x1, 0x0);
        gbc.writeMem(0xefbf, { 0xf0, 0xfb });
        gbc.writeMem(0xfffb, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9a55, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xefbf));
        EXPECT(0xfb, gbc.readMem(0xefc0));
        EXPECT(0x5f, gbc.readMem(0xfffb));
        // F0 02B5
        gbc.setState(0xc36f, 0x2b99, 0xefa0, 0x7fda, 0x1082, 0xa78, 0x1, 0x0);
        gbc.writeMem(0xc36f, { 0xf0, 0xa7 });
        gbc.writeMem(0xffa7, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2b99, gbc.sp());
        EXPECT(0xc371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc36f));
        EXPECT(0xa7, gbc.readMem(0xc370));
        EXPECT(0xb5, gbc.readMem(0xffa7));
        // F0 02B6
        gbc.setState(0x434a, 0xdcbf, 0x4860, 0x7aca, 0xb0f4, 0x7817, 0x0, 0x0);
        gbc.writeMem(0x434a, { 0xf0, 0xb5 });
        gbc.writeMem(0xffb5, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0x434c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xffb5));
        // F0 02B7
        gbc.setState(0xd13, 0xfbcb, 0xc7b0, 0xec8b, 0x217d, 0x3ec5, 0x0, 0x1);
        gbc.writeMem(0xd13, { 0xf0, 0x74 });
        gbc.writeMem(0xff74, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfbcb, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff74));
        // F0 02B8
        gbc.setState(0x815d, 0x230a, 0xdcc0, 0x6658, 0xa0fd, 0xba44, 0x1, 0x0);
        gbc.writeMem(0x815d, { 0xf0, 0x57 });
        gbc.writeMem(0xff57, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x230a, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x815d));
        EXPECT(0x57, gbc.readMem(0x815e));
        EXPECT(0xf1, gbc.readMem(0xff57));
        // F0 02B9
        gbc.setState(0x154d, 0x1f0c, 0xbef0, 0x7505, 0xcc2c, 0x1823, 0x1, 0x1);
        gbc.writeMem(0x154d, { 0xf0, 0x37 });
        gbc.writeMem(0xff37, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x154f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xff37));
        // F0 02BA
        gbc.setState(0xac1f, 0xe79c, 0xef20, 0xfc21, 0x23d7, 0xa7db, 0x1, 0x1);
        gbc.writeMem(0xac1f, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe79c, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xac1f));
        EXPECT(0x3f, gbc.readMem(0xac20));
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 02BC
        gbc.setState(0x2b86, 0xaa38, 0x4ba0, 0x98a9, 0x55dc, 0x8601, 0x0, 0x1);
        gbc.writeMem(0x2b86, { 0xf0, 0xb3 });
        gbc.writeMem(0xffb3, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaa38, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xffb3));
        // F0 02BD
        gbc.setState(0x3a74, 0xa8a2, 0x9c20, 0xb0e2, 0x4371, 0x64b3, 0x0, 0x1);
        gbc.writeMem(0x3a74, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa8a2, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 02BE
        gbc.setState(0x42e6, 0xa975, 0x2f90, 0x3600, 0x3e5c, 0xf5ff, 0x1, 0x1);
        gbc.writeMem(0x42e6, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 02BF
        gbc.setState(0xa245, 0xaa2b, 0x3bc0, 0x201c, 0x7a94, 0x84a4, 0x1, 0x0);
        gbc.writeMem(0xa245, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaa2b, gbc.sp());
        EXPECT(0xa247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa245));
        EXPECT(0xe3, gbc.readMem(0xa246));
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 02C0
        gbc.setState(0x6388, 0xc5b8, 0xf160, 0xd3e5, 0x59b9, 0xf51a, 0x0, 0x0);
        gbc.writeMem(0x6388, { 0xf0, 0x98 });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc5b8, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff98));
        // F0 02C1
        gbc.setState(0xc9f2, 0x806c, 0x3670, 0x63ee, 0x8d90, 0x9426, 0x0, 0x0);
        gbc.writeMem(0xc9f2, { 0xf0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9f2));
        EXPECT(0xd8, gbc.readMem(0xc9f3));
        EXPECT(0x3, gbc.readMem(0xffd8));
        // F0 02C2
        gbc.setState(0xd303, 0x81c7, 0xf840, 0xbd9d, 0x49a, 0x68d, 0x0, 0x0);
        gbc.writeMem(0xd303, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x81c7, gbc.sp());
        EXPECT(0xd305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd303));
        EXPECT(0x97, gbc.readMem(0xd304));
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 02C3
        gbc.setState(0x4d19, 0xfb73, 0x5640, 0x8e02, 0x39ff, 0xc64b, 0x1, 0x1);
        gbc.writeMem(0x4d19, { 0xf0, 0xd9 });
        gbc.writeMem(0xffd9, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfb73, gbc.sp());
        EXPECT(0x4d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffd9));
        // F0 02C4
        gbc.setState(0xdb97, 0x1604, 0x1e70, 0x498c, 0xc9be, 0x5a0, 0x1, 0x1);
        gbc.writeMem(0xdb97, { 0xf0, 0x9f });
        gbc.writeMem(0xff9f, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0xdb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdb97));
        EXPECT(0x9f, gbc.readMem(0xdb98));
        EXPECT(0xe7, gbc.readMem(0xff9f));
        // F0 02C5
        gbc.setState(0x5ac3, 0xb8c9, 0x7260, 0x709, 0x9336, 0x6ade, 0x1, 0x1);
        gbc.writeMem(0x5ac3, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb8c9, gbc.sp());
        EXPECT(0x5ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 02C6
        gbc.setState(0xc16, 0xa47b, 0xccd0, 0x7f03, 0xca76, 0x2026, 0x0, 0x1);
        gbc.writeMem(0xc16, { 0xf0, 0x5d });
        gbc.writeMem(0xff5d, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0xc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff5d));
        // F0 02C8
        gbc.setState(0x15de, 0x1392, 0x2730, 0x29e0, 0x9ec3, 0x1e15, 0x0, 0x0);
        gbc.writeMem(0x15de, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x15e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 02C9
        gbc.setState(0x6b5d, 0xf1e3, 0x8fd0, 0xa361, 0x919f, 0xae0b, 0x0, 0x1);
        gbc.writeMem(0x6b5d, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf1e3, gbc.sp());
        EXPECT(0x6b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 02CA
        gbc.setState(0x5faf, 0xffb0, 0xab20, 0x66, 0x75de, 0x5c8e, 0x1, 0x0);
        gbc.writeMem(0x5faf, { 0xf0, 0x40 });
        gbc.writeMem(0xff40, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xffb0, gbc.sp());
        EXPECT(0x5fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xff40));
        // F0 02CB
        gbc.setState(0x5fbb, 0x282e, 0x64d0, 0x4c40, 0xb15d, 0xe4ef, 0x0, 0x0);
        gbc.writeMem(0x5fbb, { 0xf0, 0x60 });
        gbc.writeMem(0xff60, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x5fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xff60));
        // F0 02CC
        gbc.setState(0x7327, 0x3624, 0x1b90, 0xf3dc, 0x93d4, 0xfa29, 0x0, 0x0);
        gbc.writeMem(0x7327, { 0xf0, 0x88 });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xff88));
        // F0 02CD
        gbc.setState(0x1505, 0xf854, 0xa20, 0xc7b4, 0xa826, 0x1100, 0x1, 0x0);
        gbc.writeMem(0x1505, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf854, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 02CE
        gbc.setState(0xeb80, 0xa6dd, 0xd890, 0xeb2b, 0xd3d7, 0xa9ba, 0x0, 0x0);
        gbc.writeMem(0xeb80, { 0xf0, 0x71 });
        gbc.writeMem(0xff71, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0xeb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb80));
        EXPECT(0x71, gbc.readMem(0xeb81));
        EXPECT(0x4f, gbc.readMem(0xff71));
        // F0 02D1
        gbc.setState(0x9ba7, 0xb8c9, 0x8090, 0xe1e1, 0xd1e7, 0x7bb8, 0x0, 0x1);
        gbc.writeMem(0x9ba7, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb8c9, gbc.sp());
        EXPECT(0x9ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9ba7));
        EXPECT(0x63, gbc.readMem(0x9ba8));
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 02D2
        gbc.setState(0x273, 0x16fb, 0xf430, 0x5059, 0x3bc8, 0xce99, 0x0, 0x1);
        gbc.writeMem(0x273, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x16fb, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 02D3
        gbc.setState(0x1376, 0x58eb, 0x6b80, 0xc14a, 0x82eb, 0x9c05, 0x0, 0x1);
        gbc.writeMem(0x1376, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x58eb, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 02D4
        gbc.setState(0x5ef0, 0x1606, 0x41e0, 0x4847, 0x2697, 0x4248, 0x0, 0x1);
        gbc.writeMem(0x5ef0, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 02D5
        gbc.setState(0x917e, 0xaa9, 0x4190, 0x11e4, 0x68f8, 0xbfa0, 0x1, 0x0);
        gbc.writeMem(0x917e, { 0xf0, 0xba });
        gbc.writeMem(0xffba, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x917e));
        EXPECT(0xba, gbc.readMem(0x917f));
        EXPECT(0x88, gbc.readMem(0xffba));
        // F0 02D6
        gbc.setState(0x1ea3, 0xff3, 0x3ea0, 0x4e57, 0xd574, 0x6237, 0x0, 0x0);
        gbc.writeMem(0x1ea3, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0x1ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 02D8
        gbc.setState(0x7e57, 0x5b2e, 0x4790, 0x61a4, 0xdbd5, 0xe9bc, 0x1, 0x0);
        gbc.writeMem(0x7e57, { 0xf0, 0xbb });
        gbc.writeMem(0xffbb, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5b2e, gbc.sp());
        EXPECT(0x7e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xffbb));
        // F0 02D9
        gbc.setState(0x3ccd, 0x7cb, 0xd960, 0xf767, 0x65e4, 0xec1b, 0x1, 0x1);
        gbc.writeMem(0x3ccd, { 0xf0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7cb, gbc.sp());
        EXPECT(0x3ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xfff7));
        // F0 02DA
        gbc.setState(0xc1f4, 0xa679, 0x2610, 0x35a3, 0xfaaa, 0x18b, 0x1, 0x1);
        gbc.writeMem(0xc1f4, { 0xf0, 0xe0 });
        gbc.writeMem(0xffe0, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa679, gbc.sp());
        EXPECT(0xc1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc1f4));
        EXPECT(0xe0, gbc.readMem(0xc1f5));
        EXPECT(0x75, gbc.readMem(0xffe0));
        // F0 02DB
        gbc.setState(0x6247, 0x114f, 0xfad0, 0x4e44, 0x54b6, 0xb04c, 0x0, 0x1);
        gbc.writeMem(0x6247, { 0xf0, 0x3f });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x114f, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // F0 02DC
        gbc.setState(0xb551, 0xec92, 0xcbc0, 0xc81, 0x643, 0xb2ce, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xec92, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb551));
        EXPECT(0xe5, gbc.readMem(0xb552));
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 02DD
        gbc.setState(0x8872, 0x1d84, 0x7a80, 0xce6b, 0xc212, 0xa9bf, 0x1, 0x0);
        gbc.writeMem(0x8872, { 0xf0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1d84, gbc.sp());
        EXPECT(0x8874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8872));
        EXPECT(0xf9, gbc.readMem(0x8873));
        EXPECT(0x10, gbc.readMem(0xfff9));
        // F0 02DE
        gbc.setState(0x743c, 0x17db, 0x8dc0, 0xed34, 0x46c, 0xaa63, 0x0, 0x0);
        gbc.writeMem(0x743c, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0x743e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 02DF
        gbc.setState(0x2136, 0x9d93, 0x5e40, 0x8746, 0x7cce, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0x2136, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x2138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 02E0
        gbc.setState(0x439d, 0x7182, 0xa900, 0x162a, 0x7c9a, 0x9470, 0x0, 0x1);
        gbc.writeMem(0x439d, { 0xf0, 0x54 });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xff54));
        // F0 02E1
        gbc.setState(0x7b5f, 0x48cc, 0xa5e0, 0x8957, 0xc474, 0x1c81, 0x0, 0x1);
        gbc.writeMem(0x7b5f, { 0xf0, 0x40 });
        gbc.writeMem(0xff40, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x48cc, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xff40));
        // F0 02E2
        gbc.setState(0x15a2, 0xa34c, 0xe520, 0x806f, 0x3c89, 0x44a6, 0x0, 0x0);
        gbc.writeMem(0x15a2, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa34c, gbc.sp());
        EXPECT(0x15a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 02E3
        gbc.setState(0x7bb5, 0xa3c9, 0xb580, 0x1d9d, 0xcc3, 0xc0bb, 0x0, 0x0);
        gbc.writeMem(0x7bb5, { 0xf0, 0x14 });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa3c9, gbc.sp());
        EXPECT(0x7bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff14));
        // F0 02E4
        gbc.setState(0x6b92, 0x993d, 0x13a0, 0x6f91, 0xbb43, 0x3863, 0x1, 0x0);
        gbc.writeMem(0x6b92, { 0xf0, 0x3e });
        gbc.writeMem(0xff3e, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x993d, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xff3e));
        // F0 02E5
        gbc.setState(0x5f, 0x4c42, 0xe2e0, 0xd943, 0x4711, 0x5c66, 0x1, 0x1);
        gbc.writeMem(0x5f, { 0xf0, 0x7e });
        gbc.writeMem(0xff7e, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xff7e));
        // F0 02E6
        gbc.setState(0x8620, 0xe56f, 0xf8c0, 0x8bf8, 0x37f3, 0x2081, 0x0, 0x1);
        gbc.writeMem(0x8620, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe56f, gbc.sp());
        EXPECT(0x8622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8620));
        EXPECT(0xb, gbc.readMem(0x8621));
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 02E7
        gbc.setState(0x4c52, 0xfde6, 0xa080, 0x6076, 0xbd9e, 0x64d1, 0x1, 0x0);
        gbc.writeMem(0x4c52, { 0xf0, 0x63 });
        gbc.writeMem(0xff63, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff63));
        // F0 02E8
        gbc.setState(0x24a1, 0x47e3, 0x36b0, 0x23cb, 0x1a14, 0x4d56, 0x0, 0x1);
        gbc.writeMem(0x24a1, { 0xf0, 0x19 });
        gbc.writeMem(0xff19, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x47e3, gbc.sp());
        EXPECT(0x24a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff19));
        // F0 02E9
        gbc.setState(0xd433, 0x7e3e, 0x21f0, 0xf168, 0xf190, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0xd433, { 0xf0, 0x4a });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0xd435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd433));
        EXPECT(0x4a, gbc.readMem(0xd434));
        EXPECT(0x7e, gbc.readMem(0xff4a));
        // F0 02EA
        gbc.setState(0x3a18, 0x6f7c, 0xcb20, 0x8feb, 0x935e, 0x3152, 0x1, 0x1);
        gbc.writeMem(0x3a18, { 0xf0, 0xa });
        gbc.writeMem(0xff0a, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xff0a));
        // F0 02EB
        gbc.setState(0x367c, 0xa0d7, 0xa20, 0xca10, 0xa21a, 0xaac3, 0x1, 0x1);
        gbc.writeMem(0x367c, { 0xf0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfff9));
        // F0 02EC
        gbc.setState(0x37e1, 0xdfed, 0x7ea0, 0x82f6, 0x6fda, 0x7580, 0x0, 0x1);
        gbc.writeMem(0x37e1, { 0xf0, 0x8e });
        gbc.writeMem(0xff8e, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdfed, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff8e));
        // F0 02ED
        gbc.setState(0x6a14, 0xb524, 0x8e0, 0x4411, 0x7204, 0xc9ef, 0x1, 0x0);
        gbc.writeMem(0x6a14, { 0xf0, 0x6 });
        gbc.writeMem(0xff06, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb524, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xff06));
        // F0 02EE
        gbc.setState(0xeba6, 0xcfc6, 0x8da0, 0x92ac, 0xef20, 0xbf8a, 0x0, 0x1);
        gbc.writeMem(0xeba6, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0xeba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeba6));
        EXPECT(0x99, gbc.readMem(0xeba7));
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 02F0
        gbc.setState(0x78c6, 0x28b5, 0xb110, 0xd4, 0x93a1, 0x42a8, 0x1, 0x1);
        gbc.writeMem(0x78c6, { 0xf0, 0x8f });
        gbc.writeMem(0xff8f, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x28b5, gbc.sp());
        EXPECT(0x78c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xff8f));
        // F0 02F1
        gbc.setState(0x345e, 0x39c1, 0x510, 0xd9ed, 0xbf0f, 0xf2c6, 0x0, 0x1);
        gbc.writeMem(0x345e, { 0xf0, 0x4d });
        gbc.writeMem(0xff4d, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x3460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff4d));
        // F0 02F2
        gbc.setState(0x6b52, 0x1841, 0x3fd0, 0x7419, 0xbe84, 0x61a5, 0x1, 0x0);
        gbc.writeMem(0x6b52, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1841, gbc.sp());
        EXPECT(0x6b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 02F3
        gbc.setState(0xba21, 0x24c9, 0x59b0, 0x9bd8, 0x596c, 0x9d9a, 0x1, 0x0);
        gbc.writeMem(0xba21, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x24c9, gbc.sp());
        EXPECT(0xba23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba21));
        EXPECT(0xf0, gbc.readMem(0xba22));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 02F4
        gbc.setState(0xd413, 0xd989, 0x3ab0, 0x806a, 0x52e2, 0xeb68, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0xf0, 0x1 });
        gbc.writeMem(0xff01, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd989, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd413));
        EXPECT(0x1, gbc.readMem(0xd414));
        EXPECT(0x80, gbc.readMem(0xff01));
        // F0 02F5
        gbc.setState(0xd8c, 0xff37, 0xe20, 0xe564, 0x6064, 0x159b, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0xf0, 0x7f });
        gbc.writeMem(0xff7f, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xff37, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff7f));
        // F0 02F6
        gbc.setState(0xe163, 0x100f, 0x7810, 0xa912, 0x61c1, 0x9822, 0x1, 0x0);
        gbc.writeMem(0xe163, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x100f, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe163));
        EXPECT(0xed, gbc.readMem(0xe164));
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 02F7
        gbc.setState(0x6095, 0x4a25, 0x4a80, 0xd275, 0x35ab, 0x370f, 0x0, 0x1);
        gbc.writeMem(0x6095, { 0xf0, 0xd6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xffd6));
        // F0 02F8
        gbc.setState(0x2c2d, 0x1329, 0xc6f0, 0x61d9, 0xc729, 0xddbf, 0x0, 0x0);
        gbc.writeMem(0x2c2d, { 0xf0, 0x41 });
        gbc.writeMem(0xff41, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x2c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff41));
        // F0 02FA
        gbc.setState(0xd6fa, 0x53c7, 0xb730, 0xb588, 0x6cda, 0x803d, 0x1, 0x1);
        gbc.writeMem(0xd6fa, { 0xf0, 0x47 });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd6fa));
        EXPECT(0x47, gbc.readMem(0xd6fb));
        EXPECT(0x98, gbc.readMem(0xff47));
        // F0 02FB
        gbc.setState(0x8840, 0xf299, 0xc6c0, 0xc5b3, 0xc05d, 0x9a05, 0x1, 0x0);
        gbc.writeMem(0x8840, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf299, gbc.sp());
        EXPECT(0x8842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8840));
        EXPECT(0xff, gbc.readMem(0x8841));
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 02FC
        gbc.setState(0xaaec, 0x4458, 0x8690, 0xfde0, 0xd654, 0x3431, 0x1, 0x0);
        gbc.writeMem(0xaaec, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaaec));
        EXPECT(0x48, gbc.readMem(0xaaed));
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 02FD
        gbc.setState(0x1306, 0x75e0, 0xa4e0, 0xeee2, 0x9a88, 0x9404, 0x0, 0x0);
        gbc.writeMem(0x1306, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x75e0, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 02FE
        gbc.setState(0x90c6, 0xb31b, 0x3490, 0xea04, 0xda5d, 0xb1f4, 0x1, 0x1);
        gbc.writeMem(0x90c6, { 0xf0, 0xaf });
        gbc.writeMem(0xffaf, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x90c6));
        EXPECT(0xaf, gbc.readMem(0x90c7));
        EXPECT(0x51, gbc.readMem(0xffaf));
        // F0 02FF
        gbc.setState(0x8fa1, 0x7cdf, 0x7880, 0xf5a, 0x67e1, 0x23d5, 0x1, 0x1);
        gbc.writeMem(0x8fa1, { 0xf0, 0x4d });
        gbc.writeMem(0xff4d, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8fa1));
        EXPECT(0x4d, gbc.readMem(0x8fa2));
        EXPECT(0xe8, gbc.readMem(0xff4d));
        // F0 0300
        gbc.setState(0x1c52, 0xd2, 0x6b50, 0x2a96, 0x1a4b, 0xf39a, 0x1, 0x1);
        gbc.writeMem(0x1c52, { 0xf0, 0xc1 });
        gbc.writeMem(0xffc1, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd2, gbc.sp());
        EXPECT(0x1c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xffc1));
        // F0 0301
        gbc.setState(0xa2eb, 0x5f0a, 0xab0, 0xe0fe, 0x8b90, 0x8138, 0x0, 0x0);
        gbc.writeMem(0xa2eb, { 0xf0, 0x5f });
        gbc.writeMem(0xff5f, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0xa2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa2eb));
        EXPECT(0x5f, gbc.readMem(0xa2ec));
        EXPECT(0x11, gbc.readMem(0xff5f));
        // F0 0302
        gbc.setState(0xd578, 0x7b3a, 0xa80, 0xf352, 0xfa97, 0xd8d5, 0x1, 0x1);
        gbc.writeMem(0xd578, { 0xf0, 0x4 });
        gbc.writeMem(0xff04, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd578));
        EXPECT(0x4, gbc.readMem(0xd579));
        EXPECT(0x59, gbc.readMem(0xff04));
        // F0 0303
        gbc.setState(0x6c61, 0xfd88, 0x2350, 0xbe0d, 0x8a9, 0xda08, 0x1, 0x1);
        gbc.writeMem(0x6c61, { 0xf0, 0xcf });
        gbc.writeMem(0xffcf, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // F0 0304
        gbc.setState(0xc065, 0x6d58, 0x8030, 0x934, 0x8833, 0xf84, 0x0, 0x1);
        gbc.writeMem(0xc065, { 0xf0, 0x5b });
        gbc.writeMem(0xff5b, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6d58, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc065));
        EXPECT(0x5b, gbc.readMem(0xc066));
        EXPECT(0xff, gbc.readMem(0xff5b));
        // F0 0305
        gbc.setState(0x227b, 0x2c7f, 0xa830, 0xd1c8, 0xaa59, 0x2f97, 0x0, 0x0);
        gbc.writeMem(0x227b, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c7f, gbc.sp());
        EXPECT(0x227d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 0306
        gbc.setState(0xd94, 0x69bd, 0x450, 0x82b, 0xfbe3, 0x7a3c, 0x0, 0x0);
        gbc.writeMem(0xd94, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x69bd, gbc.sp());
        EXPECT(0xd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 0307
        gbc.setState(0x31e4, 0xe4c1, 0xa190, 0x96b1, 0x9d25, 0xdf5c, 0x1, 0x0);
        gbc.writeMem(0x31e4, { 0xf0, 0xce });
        gbc.writeMem(0xffce, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe4c1, gbc.sp());
        EXPECT(0x31e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xffce));
        // F0 0308
        gbc.setState(0x4e25, 0xe170, 0x4500, 0x9be6, 0x1b80, 0x6272, 0x1, 0x1);
        gbc.writeMem(0x4e25, { 0xf0, 0x64 });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0x4e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xff64));
        // F0 0309
        gbc.setState(0xc977, 0xe68a, 0xf620, 0x66eb, 0xe99, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xf0, 0x56 });
        gbc.writeMem(0xff56, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe68a, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc977));
        EXPECT(0x56, gbc.readMem(0xc978));
        EXPECT(0x31, gbc.readMem(0xff56));
        // F0 030A
        gbc.setState(0x7bf8, 0x24b3, 0x9750, 0x6b90, 0x52d0, 0x6d7, 0x1, 0x1);
        gbc.writeMem(0x7bf8, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 030B
        gbc.setState(0xcb15, 0x964d, 0xdef0, 0x500e, 0xb6ce, 0x54a5, 0x0, 0x1);
        gbc.writeMem(0xcb15, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x964d, gbc.sp());
        EXPECT(0xcb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcb15));
        EXPECT(0x32, gbc.readMem(0xcb16));
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 030C
        gbc.setState(0x35e1, 0xff69, 0xe690, 0x130a, 0x419d, 0x79b3, 0x0, 0x0);
        gbc.writeMem(0x35e1, { 0xf0, 0x1b });
        gbc.writeMem(0xff1b, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xff69, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xff1b));
        // F0 030D
        gbc.setState(0x7fbd, 0x2896, 0xedc0, 0x57dc, 0x1c62, 0xe407, 0x1, 0x0);
        gbc.writeMem(0x7fbd, { 0xf0, 0xa6 });
        gbc.writeMem(0xffa6, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0x7fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffa6));
        // F0 030E
        gbc.setState(0xebf2, 0x481e, 0x25d0, 0x8b53, 0x16a8, 0x49af, 0x0, 0x1);
        gbc.writeMem(0xebf2, { 0xf0, 0x5d });
        gbc.writeMem(0xff5d, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x481e, gbc.sp());
        EXPECT(0xebf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xebf2));
        EXPECT(0x5d, gbc.readMem(0xebf3));
        EXPECT(0x1a, gbc.readMem(0xff5d));
        // F0 030F
        gbc.setState(0x8647, 0xe27e, 0xb130, 0xd789, 0xe071, 0xba9, 0x1, 0x0);
        gbc.writeMem(0x8647, { 0xf0, 0xd3 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe27e, gbc.sp());
        EXPECT(0x8649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8647));
        EXPECT(0xd3, gbc.readMem(0x8648));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F0 0311
        gbc.setState(0x6045, 0xf695, 0xa3a0, 0x6f61, 0x4cba, 0xbf28, 0x0, 0x0);
        gbc.writeMem(0x6045, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf695, gbc.sp());
        EXPECT(0x6047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 0312
        gbc.setState(0xa0d2, 0xfe56, 0x9e70, 0xee16, 0x5893, 0x951e, 0x0, 0x0);
        gbc.writeMem(0xa0d2, { 0xf0, 0x2e });
        gbc.writeMem(0xff2e, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa0d2));
        EXPECT(0x2e, gbc.readMem(0xa0d3));
        EXPECT(0x86, gbc.readMem(0xff2e));
        // F0 0314
        gbc.setState(0x22f1, 0xe147, 0x9b10, 0x96e8, 0xa5d5, 0x8fff, 0x1, 0x1);
        gbc.writeMem(0x22f1, { 0xf0, 0xc7 });
        gbc.writeMem(0xffc7, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xffc7));
        // F0 0315
        gbc.setState(0x2586, 0x763f, 0xbd70, 0x9074, 0x74b, 0x8890, 0x1, 0x1);
        gbc.writeMem(0x2586, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x763f, gbc.sp());
        EXPECT(0x2588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 0316
        gbc.setState(0xc9a4, 0xa066, 0x5470, 0x6677, 0x13ab, 0x470b, 0x0, 0x0);
        gbc.writeMem(0xc9a4, { 0xf0, 0x8f });
        gbc.writeMem(0xff8f, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa066, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9a4));
        EXPECT(0x8f, gbc.readMem(0xc9a5));
        EXPECT(0x1c, gbc.readMem(0xff8f));
        // F0 0317
        gbc.setState(0x412, 0x7b, 0x5800, 0xc00e, 0x1243, 0xebd0, 0x1, 0x1);
        gbc.writeMem(0x412, { 0xf0, 0x7b });
        gbc.writeMem(0xff7b, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7b, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff7b));
        // F0 0318
        gbc.setState(0x32de, 0xa2bf, 0xf5c0, 0x2809, 0x88b6, 0x2819, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xf0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2bf, gbc.sp());
        EXPECT(0x32e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xffb2));
        // F0 0319
        gbc.setState(0xc58b, 0x67, 0xace0, 0xc42c, 0x8a79, 0x1cf2, 0x1, 0x0);
        gbc.writeMem(0xc58b, { 0xf0, 0xc });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc58b));
        EXPECT(0xc, gbc.readMem(0xc58c));
        EXPECT(0x94, gbc.readMem(0xff0c));
        // F0 031A
        gbc.setState(0x4444, 0x5df4, 0xa620, 0xcc15, 0xb549, 0xda87, 0x0, 0x1);
        gbc.writeMem(0x4444, { 0xf0, 0x6e });
        gbc.writeMem(0xff6e, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5df4, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff6e));
        // F0 031B
        gbc.setState(0x34f2, 0xe78f, 0x54e0, 0xb17d, 0x194d, 0xf65a, 0x1, 0x0);
        gbc.writeMem(0x34f2, { 0xf0, 0xc9 });
        gbc.writeMem(0xffc9, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xffc9));
        // F0 031C
        gbc.setState(0xdd94, 0x1820, 0x1480, 0xf675, 0x2e5d, 0xf8e8, 0x1, 0x1);
        gbc.writeMem(0xdd94, { 0xf0, 0xd4 });
        gbc.writeMem(0xffd4, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd94));
        EXPECT(0xd4, gbc.readMem(0xdd95));
        EXPECT(0x9f, gbc.readMem(0xffd4));
        // F0 031E
        gbc.setState(0x8d07, 0x86fe, 0x33d0, 0xf631, 0xafbe, 0x56ea, 0x1, 0x0);
        gbc.writeMem(0x8d07, { 0xf0, 0x52 });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8d07));
        EXPECT(0x52, gbc.readMem(0x8d08));
        EXPECT(0xa, gbc.readMem(0xff52));
        // F0 031F
        gbc.setState(0x5295, 0xfe, 0xfdc0, 0x656c, 0x83ac, 0xcd44, 0x1, 0x1);
        gbc.writeMem(0x5295, { 0xf0, 0xe7 });
        gbc.writeMem(0xffe7, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xffe7));
        // F0 0320
        gbc.setState(0xeb5d, 0x2233, 0x9830, 0x2a2, 0xccc9, 0x51ce, 0x1, 0x0);
        gbc.writeMem(0xeb5d, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0xeb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb5d));
        EXPECT(0xc6, gbc.readMem(0xeb5e));
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 0321
        gbc.setState(0x5107, 0xd765, 0xbea0, 0xa5dc, 0x9955, 0xc3cd, 0x0, 0x0);
        gbc.writeMem(0x5107, { 0xf0, 0xcd });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0x5109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xffcd));
        // F0 0322
        gbc.setState(0xa7ba, 0x9e57, 0x2b20, 0xf6cc, 0x8718, 0x2b1e, 0x1, 0x1);
        gbc.writeMem(0xa7ba, { 0xf0, 0x1c });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9e57, gbc.sp());
        EXPECT(0xa7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa7ba));
        EXPECT(0x1c, gbc.readMem(0xa7bb));
        EXPECT(0x94, gbc.readMem(0xff1c));
        // F0 0323
        gbc.setState(0xe6ba, 0x285a, 0x8f10, 0x6a9a, 0x9331, 0xd3eb, 0x0, 0x1);
        gbc.writeMem(0xe6ba, { 0xf0, 0x7c });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x285a, gbc.sp());
        EXPECT(0xe6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe6ba));
        EXPECT(0x7c, gbc.readMem(0xe6bb));
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // F0 0325
        gbc.setState(0x102e, 0x829e, 0x4a20, 0x7008, 0x69ca, 0x518b, 0x0, 0x1);
        gbc.writeMem(0x102e, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x829e, gbc.sp());
        EXPECT(0x1030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 0326
        gbc.setState(0xe56d, 0x8ea6, 0x4ca0, 0x4e39, 0x8b66, 0x474e, 0x1, 0x1);
        gbc.writeMem(0xe56d, { 0xf0, 0x70 });
        gbc.writeMem(0xff70, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ea6, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe56d));
        EXPECT(0x70, gbc.readMem(0xe56e));
        EXPECT(0xff, gbc.readMem(0xff70));
        // F0 0328
        gbc.setState(0x6f05, 0x19ec, 0x9e80, 0x7d9c, 0x1103, 0xa1b6, 0x1, 0x1);
        gbc.writeMem(0x6f05, { 0xf0, 0xbd });
        gbc.writeMem(0xffbd, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x19ec, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xffbd));
        // F0 0329
        gbc.setState(0xe2d1, 0xc905, 0x4780, 0x6a88, 0x8e64, 0x6b43, 0x1, 0x1);
        gbc.writeMem(0xe2d1, { 0xf0, 0xb4 });
        gbc.writeMem(0xffb4, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe2d1));
        EXPECT(0xb4, gbc.readMem(0xe2d2));
        EXPECT(0xec, gbc.readMem(0xffb4));
        // F0 032A
        gbc.setState(0xb479, 0x848c, 0xd670, 0xf7f7, 0xc24c, 0x8927, 0x0, 0x0);
        gbc.writeMem(0xb479, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x848c, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb479));
        EXPECT(0x5c, gbc.readMem(0xb47a));
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 032B
        gbc.setState(0xee35, 0x5f99, 0xbf40, 0x5afa, 0xa80e, 0xa264, 0x1, 0x0);
        gbc.writeMem(0xee35, { 0xf0, 0x58 });
        gbc.writeMem(0xff58, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5f99, gbc.sp());
        EXPECT(0xee37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xee35));
        EXPECT(0x58, gbc.readMem(0xee36));
        EXPECT(0x10, gbc.readMem(0xff58));
        // F0 032D
        gbc.setState(0x79f, 0x9b48, 0xeb40, 0xecea, 0x548f, 0x3c7b, 0x1, 0x1);
        gbc.writeMem(0x79f, { 0xf0, 0x95 });
        gbc.writeMem(0xff95, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9b48, gbc.sp());
        EXPECT(0x7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xff95));
        // F0 032E
        gbc.setState(0xb85b, 0xefc6, 0xd520, 0x3d16, 0xe216, 0x1cd7, 0x0, 0x0);
        gbc.writeMem(0xb85b, { 0xf0, 0x54 });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0xb85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb85b));
        EXPECT(0x54, gbc.readMem(0xb85c));
        EXPECT(0xa1, gbc.readMem(0xff54));
        // F0 032F
        gbc.setState(0x6036, 0xb16f, 0x9640, 0x49d, 0xda60, 0xcd40, 0x0, 0x1);
        gbc.writeMem(0x6036, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0x6038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 0330
        gbc.setState(0xbeed, 0xe755, 0x19a0, 0x2b5f, 0xf18d, 0xd59a, 0x1, 0x1);
        gbc.writeMem(0xbeed, { 0xf0, 0x3d });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbeed));
        EXPECT(0x3d, gbc.readMem(0xbeee));
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // F0 0331
        gbc.setState(0x9021, 0x8703, 0x4de0, 0x7a60, 0x31, 0xd5a8, 0x1, 0x1);
        gbc.writeMem(0x9021, { 0xf0, 0x6a });
        gbc.writeMem(0xff6a, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x9023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9021));
        EXPECT(0x6a, gbc.readMem(0x9022));
        EXPECT(0x79, gbc.readMem(0xff6a));
        // F0 0332
        gbc.setState(0xea7c, 0x2869, 0x4b50, 0x37c1, 0x1a71, 0x55dd, 0x0, 0x1);
        gbc.writeMem(0xea7c, { 0xf0, 0x3b });
        gbc.writeMem(0xff3b, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xea7c));
        EXPECT(0x3b, gbc.readMem(0xea7d));
        EXPECT(0xb2, gbc.readMem(0xff3b));
        // F0 0333
        gbc.setState(0x8f85, 0x2b6e, 0x8a0, 0x51c, 0x29f4, 0x6363, 0x1, 0x1);
        gbc.writeMem(0x8f85, { 0xf0, 0x24 });
        gbc.writeMem(0xff24, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8f85));
        EXPECT(0x24, gbc.readMem(0x8f86));
        EXPECT(0x2c, gbc.readMem(0xff24));
        // F0 0335
        gbc.setState(0x7e47, 0xe5a1, 0xd0c0, 0xbd73, 0x1ee3, 0x6a4, 0x0, 0x1);
        gbc.writeMem(0x7e47, { 0xf0, 0xb9 });
        gbc.writeMem(0xffb9, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xffb9));
        // F0 0336
        gbc.setState(0xbe84, 0x437b, 0x1d00, 0xdc4d, 0xac84, 0xb84d, 0x0, 0x1);
        gbc.writeMem(0xbe84, { 0xf0, 0x54 });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x437b, gbc.sp());
        EXPECT(0xbe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbe84));
        EXPECT(0x54, gbc.readMem(0xbe85));
        EXPECT(0xa1, gbc.readMem(0xff54));
        // F0 0337
        gbc.setState(0x3ab7, 0x47f8, 0xc3f0, 0x414b, 0x25d, 0x24e9, 0x1, 0x1);
        gbc.writeMem(0x3ab7, { 0xf0, 0x9c });
        gbc.writeMem(0xff9c, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x47f8, gbc.sp());
        EXPECT(0x3ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff9c));
        // F0 0338
        gbc.setState(0xcba4, 0xd51c, 0x8620, 0x706e, 0xed8f, 0xfdca, 0x0, 0x1);
        gbc.writeMem(0xcba4, { 0xf0, 0x68 });
        gbc.writeMem(0xff68, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0xcba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcba4));
        EXPECT(0x68, gbc.readMem(0xcba5));
        EXPECT(0xa2, gbc.readMem(0xff68));
        // F0 033A
        gbc.setState(0x51bd, 0x281c, 0x5030, 0xafc5, 0x4128, 0x88e, 0x0, 0x1);
        gbc.writeMem(0x51bd, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0x51bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 033B
        gbc.setState(0x262b, 0xaae2, 0xc3c0, 0x55fc, 0xa48b, 0x782e, 0x1, 0x1);
        gbc.writeMem(0x262b, { 0xf0, 0x41 });
        gbc.writeMem(0xff41, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaae2, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xff41));
        // F0 033C
        gbc.setState(0xc304, 0xd3b9, 0x2f90, 0x75da, 0x8089, 0x6064, 0x0, 0x0);
        gbc.writeMem(0xc304, { 0xf0, 0x8 });
        gbc.writeMem(0xff08, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0xc306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc304));
        EXPECT(0x8, gbc.readMem(0xc305));
        EXPECT(0x2b, gbc.readMem(0xff08));
        // F0 033D
        gbc.setState(0x15e9, 0xa838, 0x9960, 0x38cb, 0x9ac0, 0xb9c6, 0x1, 0x1);
        gbc.writeMem(0x15e9, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 033E
        gbc.setState(0xb6b6, 0x732b, 0xf9f0, 0x15c, 0xff7d, 0x77af, 0x1, 0x0);
        gbc.writeMem(0xb6b6, { 0xf0, 0x6b });
        gbc.writeMem(0xff6b, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb6b6));
        EXPECT(0x6b, gbc.readMem(0xb6b7));
        EXPECT(0x86, gbc.readMem(0xff6b));
        // F0 033F
        gbc.setState(0x36f0, 0x9b07, 0x6a90, 0xb4ab, 0x8a5b, 0x178f, 0x1, 0x1);
        gbc.writeMem(0x36f0, { 0xf0, 0xc6 });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffc6));
        // F0 0340
        gbc.setState(0xcdbe, 0xd34d, 0x36e0, 0x4afc, 0xb965, 0x800b, 0x1, 0x1);
        gbc.writeMem(0xcdbe, { 0xf0, 0x6c });
        gbc.writeMem(0xff6c, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcdbe));
        EXPECT(0x6c, gbc.readMem(0xcdbf));
        EXPECT(0xa8, gbc.readMem(0xff6c));
        // F0 0341
        gbc.setState(0xc9cd, 0xf2cc, 0x2110, 0xa8cc, 0x124, 0xc2e3, 0x1, 0x1);
        gbc.writeMem(0xc9cd, { 0xf0, 0xdd });
        gbc.writeMem(0xffdd, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2cc, gbc.sp());
        EXPECT(0xc9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc9cd));
        EXPECT(0xdd, gbc.readMem(0xc9ce));
        EXPECT(0xc4, gbc.readMem(0xffdd));
        // F0 0342
        gbc.setState(0x8b85, 0x6184, 0xf50, 0x5f2a, 0xb1bb, 0x4494, 0x1, 0x1);
        gbc.writeMem(0x8b85, { 0xf0, 0xf4 });
        gbc.writeMem(0xfff4, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6184, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8b85));
        EXPECT(0xf4, gbc.readMem(0x8b86));
        EXPECT(0xcf, gbc.readMem(0xfff4));
        // F0 0343
        gbc.setState(0x31b3, 0x4928, 0x2880, 0x449d, 0x4b65, 0x32e6, 0x0, 0x1);
        gbc.writeMem(0x31b3, { 0xf0, 0x35 });
        gbc.writeMem(0xff35, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4928, gbc.sp());
        EXPECT(0x31b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff35));
        // F0 0345
        gbc.setState(0x2f4f, 0xc801, 0xff30, 0xee94, 0x4163, 0xdbb2, 0x0, 0x0);
        gbc.writeMem(0x2f4f, { 0xf0, 0x97 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc801, gbc.sp());
        EXPECT(0x2f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F0 0346
        gbc.setState(0x7fa3, 0x965c, 0xef00, 0x1935, 0x7083, 0x3d42, 0x0, 0x0);
        gbc.writeMem(0x7fa3, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x965c, gbc.sp());
        EXPECT(0x7fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 0347
        gbc.setState(0xc3f8, 0x960b, 0x36b0, 0xced7, 0xa79a, 0x409b, 0x1, 0x1);
        gbc.writeMem(0xc3f8, { 0xf0, 0x36 });
        gbc.writeMem(0xff36, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x960b, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc3f8));
        EXPECT(0x36, gbc.readMem(0xc3f9));
        EXPECT(0xea, gbc.readMem(0xff36));
        // F0 0348
        gbc.setState(0xe13, 0x9255, 0x5bf0, 0xbf5, 0xdc51, 0x3499, 0x1, 0x1);
        gbc.writeMem(0xe13, { 0xf0, 0xd6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9255, gbc.sp());
        EXPECT(0xe15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xffd6));
        // F0 0349
        gbc.setState(0x6999, 0x4ba0, 0x1c0, 0x3f6e, 0x694f, 0x2458, 0x0, 0x1);
        gbc.writeMem(0x6999, { 0xf0, 0xc1 });
        gbc.writeMem(0xffc1, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0x699b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xffc1));
        // F0 034A
        gbc.setState(0x3bc2, 0x460d, 0xada0, 0xdbff, 0xc5f, 0xd3cb, 0x1, 0x1);
        gbc.writeMem(0x3bc2, { 0xf0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x3bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xffb6));
        // F0 034B
        gbc.setState(0x6306, 0x635d, 0x8730, 0x9864, 0xee30, 0xab16, 0x0, 0x1);
        gbc.writeMem(0x6306, { 0xf0, 0xfa });
        gbc.writeMem(0xfffa, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x635d, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xfffa));
        // F0 034C
        gbc.setState(0xa6d8, 0x9cb7, 0x53d0, 0x89f3, 0xe03c, 0xa165, 0x0, 0x0);
        gbc.writeMem(0xa6d8, { 0xf0, 0x4a });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9cb7, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa6d8));
        EXPECT(0x4a, gbc.readMem(0xa6d9));
        EXPECT(0x7e, gbc.readMem(0xff4a));
        // F0 034D
        gbc.setState(0x4df8, 0xdc3f, 0xd290, 0xf308, 0x406b, 0x426e, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0xf0, 0x98 });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc3f, gbc.sp());
        EXPECT(0x4dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff98));
        // F0 034E
        gbc.setState(0x43e2, 0x7ee9, 0xb600, 0xfdd8, 0xe2f3, 0x1b2b, 0x1, 0x1);
        gbc.writeMem(0x43e2, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7ee9, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 034F
        gbc.setState(0x9f00, 0xae8f, 0x2e30, 0xa2b, 0x2f7d, 0xb26f, 0x0, 0x1);
        gbc.writeMem(0x9f00, { 0xf0, 0xb2 });
        gbc.writeMem(0xffb2, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xae8f, gbc.sp());
        EXPECT(0x9f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9f00));
        EXPECT(0xb2, gbc.readMem(0x9f01));
        EXPECT(0x11, gbc.readMem(0xffb2));
        // F0 0350
        gbc.setState(0x671d, 0xccd7, 0x120, 0x945a, 0x1e9d, 0x69a9, 0x0, 0x0);
        gbc.writeMem(0x671d, { 0xf0, 0xe });
        gbc.writeMem(0xff0e, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xccd7, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xff0e));
        // F0 0351
        gbc.setState(0xe7e4, 0xc912, 0xa9b0, 0xf564, 0xb238, 0xc3a4, 0x0, 0x1);
        gbc.writeMem(0xe7e4, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc912, gbc.sp());
        EXPECT(0xe7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe7e4));
        EXPECT(0x17, gbc.readMem(0xe7e5));
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 0352
        gbc.setState(0x6403, 0x807, 0x18c0, 0x7393, 0xc816, 0x2a1b, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xf0, 0xcb });
        gbc.writeMem(0xffcb, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffcb));
        // F0 0353
        gbc.setState(0x5740, 0xaff3, 0x2390, 0x57a2, 0x8244, 0xb925, 0x0, 0x0);
        gbc.writeMem(0x5740, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 0354
        gbc.setState(0xc50e, 0x3fe1, 0xee20, 0x41cb, 0x22c3, 0xd09c, 0x0, 0x0);
        gbc.writeMem(0xc50e, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0xc510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc50e));
        EXPECT(0x10, gbc.readMem(0xc50f));
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 0355
        gbc.setState(0xb244, 0xc286, 0x2490, 0x52f5, 0x3b69, 0x4901, 0x0, 0x1);
        gbc.writeMem(0xb244, { 0xf0, 0x8d });
        gbc.writeMem(0xff8d, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc286, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb244));
        EXPECT(0x8d, gbc.readMem(0xb245));
        EXPECT(0xbf, gbc.readMem(0xff8d));
        // F0 0356
        gbc.setState(0x1a57, 0xf15f, 0x8540, 0xec82, 0xb6c, 0x15db, 0x1, 0x1);
        gbc.writeMem(0x1a57, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0x1a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 0357
        gbc.setState(0x824d, 0x2b82, 0x2770, 0x15ee, 0xccf6, 0xd4f2, 0x0, 0x0);
        gbc.writeMem(0x824d, { 0xf0, 0x8 });
        gbc.writeMem(0xff08, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x824d));
        EXPECT(0x8, gbc.readMem(0x824e));
        EXPECT(0x2b, gbc.readMem(0xff08));
        // F0 0358
        gbc.setState(0xd02e, 0xccd9, 0x5e30, 0xbb7e, 0x6c24, 0x3aad, 0x1, 0x1);
        gbc.writeMem(0xd02e, { 0xf0, 0x46 });
        gbc.writeMem(0xff46, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xccd9, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd02e));
        EXPECT(0x46, gbc.readMem(0xd02f));
        EXPECT(0xbc, gbc.readMem(0xff46));
        // F0 0359
        gbc.setState(0x49bf, 0xba3b, 0x5350, 0x455b, 0x6b9e, 0xcbbd, 0x0, 0x0);
        gbc.writeMem(0x49bf, { 0xf0, 0xba });
        gbc.writeMem(0xffba, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xba3b, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xffba));
        // F0 035A
        gbc.setState(0xa6d9, 0x1667, 0x27e0, 0x6bbf, 0x838c, 0xac69, 0x0, 0x0);
        gbc.writeMem(0xa6d9, { 0xf0, 0x9 });
        gbc.writeMem(0xff09, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0xa6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa6d9));
        EXPECT(0x9, gbc.readMem(0xa6da));
        EXPECT(0x53, gbc.readMem(0xff09));
        // F0 035C
        gbc.setState(0xb023, 0xdd61, 0x9f10, 0x8673, 0x1639, 0x70ae, 0x1, 0x1);
        gbc.writeMem(0xb023, { 0xf0, 0x6c });
        gbc.writeMem(0xff6c, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xb025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb023));
        EXPECT(0x6c, gbc.readMem(0xb024));
        EXPECT(0xa8, gbc.readMem(0xff6c));
        // F0 035D
        gbc.setState(0x9c24, 0x8343, 0xafa0, 0x4660, 0x69f1, 0x939d, 0x1, 0x0);
        gbc.writeMem(0x9c24, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8343, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9c24));
        EXPECT(0x8a, gbc.readMem(0x9c25));
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 035E
        gbc.setState(0x9dc7, 0xd111, 0x7b80, 0x57fd, 0xa3a, 0xadef, 0x1, 0x1);
        gbc.writeMem(0x9dc7, { 0xf0, 0xaa });
        gbc.writeMem(0xffaa, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd111, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9dc7));
        EXPECT(0xaa, gbc.readMem(0x9dc8));
        EXPECT(0x24, gbc.readMem(0xffaa));
        // F0 035F
        gbc.setState(0x57d5, 0x25a5, 0xbb70, 0x42a1, 0xf1dd, 0xd3b, 0x0, 0x0);
        gbc.writeMem(0x57d5, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x25a5, gbc.sp());
        EXPECT(0x57d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 0360
        gbc.setState(0xde9f, 0x8cff, 0x79a0, 0x2136, 0x2089, 0x8d, 0x0, 0x0);
        gbc.writeMem(0xde9f, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8cff, gbc.sp());
        EXPECT(0xdea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xde9f));
        EXPECT(0x1a, gbc.readMem(0xdea0));
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 0361
        gbc.setState(0x831e, 0x460c, 0x8850, 0xb8b8, 0x799a, 0xa701, 0x1, 0x0);
        gbc.writeMem(0x831e, { 0xf0, 0xf2 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x460c, gbc.sp());
        EXPECT(0x8320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x831e));
        EXPECT(0xf2, gbc.readMem(0x831f));
        EXPECT(0x98, gbc.readMem(0xfff2));
        // F0 0362
        gbc.setState(0x46ed, 0x3b3a, 0xb8e0, 0xed7b, 0x429a, 0xb7dd, 0x1, 0x1);
        gbc.writeMem(0x46ed, { 0xf0, 0x8c });
        gbc.writeMem(0xff8c, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0x46ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff8c));
        // F0 0363
        gbc.setState(0x4c5a, 0x8937, 0xe500, 0x22c0, 0xad86, 0x5d8, 0x0, 0x0);
        gbc.writeMem(0x4c5a, { 0xf0, 0x2c });
        gbc.writeMem(0xff2c, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff2c));
        // F0 0364
        gbc.setState(0xe7b9, 0x5770, 0x4980, 0xb43f, 0x62e4, 0x4e0b, 0x0, 0x0);
        gbc.writeMem(0xe7b9, { 0xf0, 0x50 });
        gbc.writeMem(0xff50, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0xe7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe7b9));
        EXPECT(0x50, gbc.readMem(0xe7ba));
        EXPECT(0x4a, gbc.readMem(0xff50));
        // F0 0365
        gbc.setState(0x20f3, 0x6aa4, 0x63b0, 0x9430, 0xfbf3, 0x6de6, 0x0, 0x0);
        gbc.writeMem(0x20f3, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0x20f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 0366
        gbc.setState(0xdb06, 0x55a0, 0x23d0, 0xc0e1, 0xb67, 0x8235, 0x0, 0x1);
        gbc.writeMem(0xdb06, { 0xf0, 0xbc });
        gbc.writeMem(0xffbc, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdb06));
        EXPECT(0xbc, gbc.readMem(0xdb07));
        EXPECT(0x4d, gbc.readMem(0xffbc));
        // F0 0368
        gbc.setState(0xd7b7, 0xd0f, 0xe7b0, 0xb302, 0x5048, 0x614d, 0x1, 0x1);
        gbc.writeMem(0xd7b7, { 0xf0, 0xfc });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd0f, gbc.sp());
        EXPECT(0xd7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd7b7));
        EXPECT(0xfc, gbc.readMem(0xd7b8));
        EXPECT(0x8b, gbc.readMem(0xfffc));
        // F0 0369
        gbc.setState(0xb6ff, 0x46ab, 0x5130, 0xe690, 0x76d8, 0x634c, 0x1, 0x0);
        gbc.writeMem(0xb6ff, { 0xf0, 0x27 });
        gbc.writeMem(0xff27, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x46ab, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb6ff));
        EXPECT(0x27, gbc.readMem(0xb700));
        EXPECT(0x3c, gbc.readMem(0xff27));
        // F0 036A
        gbc.setState(0x3a5f, 0x96e0, 0x9c70, 0xe27a, 0xb630, 0x2e07, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xf0, 0xc0 });
        gbc.writeMem(0xffc0, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x96e0, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xffc0));
        // F0 036B
        gbc.setState(0x9ccc, 0x6a8d, 0xd640, 0xd8d3, 0x9898, 0x6059, 0x1, 0x1);
        gbc.writeMem(0x9ccc, { 0xf0, 0xd8 });
        gbc.writeMem(0xffd8, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9ccc));
        EXPECT(0xd8, gbc.readMem(0x9ccd));
        EXPECT(0x3, gbc.readMem(0xffd8));
        // F0 036C
        gbc.setState(0x5fba, 0x81ab, 0x3f30, 0xe0db, 0x2f4c, 0xa4f2, 0x0, 0x1);
        gbc.writeMem(0x5fba, { 0xf0, 0xf1 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x81ab, gbc.sp());
        EXPECT(0x5fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfff1));
        // F0 036D
        gbc.setState(0x19b3, 0x406, 0x3fa0, 0xd3ef, 0x5d37, 0x22d1, 0x1, 0x1);
        gbc.writeMem(0x19b3, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 036E
        gbc.setState(0x48e1, 0xe44c, 0xbf50, 0x7cf7, 0x9e54, 0x19db, 0x0, 0x0);
        gbc.writeMem(0x48e1, { 0xf0, 0x28 });
        gbc.writeMem(0xff28, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe44c, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff28));
        // F0 036F
        gbc.setState(0xeb4d, 0xf62f, 0xd680, 0xfc73, 0x80bd, 0xc11c, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0xf0, 0xa5 });
        gbc.writeMem(0xffa5, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf62f, gbc.sp());
        EXPECT(0xeb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeb4d));
        EXPECT(0xa5, gbc.readMem(0xeb4e));
        EXPECT(0x9, gbc.readMem(0xffa5));
        // F0 0370
        gbc.setState(0xd2fb, 0x92cd, 0x54f0, 0x52a7, 0x8193, 0xbfed, 0x1, 0x1);
        gbc.writeMem(0xd2fb, { 0xf0, 0xe8 });
        gbc.writeMem(0xffe8, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x92cd, gbc.sp());
        EXPECT(0xd2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd2fb));
        EXPECT(0xe8, gbc.readMem(0xd2fc));
        EXPECT(0x25, gbc.readMem(0xffe8));
        // F0 0371
        gbc.setState(0x6c61, 0x7e85, 0xee40, 0xb534, 0x21b5, 0x91d3, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xf0, 0xcf });
        gbc.writeMem(0xffcf, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e85, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xffcf));
        // F0 0372
        gbc.setState(0x95ed, 0x8e47, 0x10f0, 0x7995, 0x8775, 0x1f35, 0x1, 0x1);
        gbc.writeMem(0x95ed, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x95ed));
        EXPECT(0x26, gbc.readMem(0x95ee));
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 0373
        gbc.setState(0x5361, 0x1a8b, 0xd790, 0x18f8, 0x5d41, 0xe1d9, 0x1, 0x0);
        gbc.writeMem(0x5361, { 0xf0, 0x17 });
        gbc.writeMem(0xff17, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a8b, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xff17));
        // F0 0374
        gbc.setState(0x5271, 0xe88f, 0x40, 0x7a03, 0x92a8, 0x966b, 0x1, 0x0);
        gbc.writeMem(0x5271, { 0xf0, 0x4f });
        gbc.writeMem(0xff4f, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0x5273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff4f));
        // F0 0375
        gbc.setState(0x99b2, 0x914b, 0x41d0, 0xc978, 0x8ca8, 0x7816, 0x1, 0x0);
        gbc.writeMem(0x99b2, { 0xf0, 0x93 });
        gbc.writeMem(0xff93, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x914b, gbc.sp());
        EXPECT(0x99b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x99b2));
        EXPECT(0x93, gbc.readMem(0x99b3));
        EXPECT(0x63, gbc.readMem(0xff93));
        // F0 0376
        gbc.setState(0x5d62, 0x4d36, 0xed70, 0x17d5, 0x9fe2, 0x3255, 0x1, 0x1);
        gbc.writeMem(0x5d62, { 0xf0, 0xd6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0x5d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xffd6));
        // F0 0377
        gbc.setState(0x38e8, 0xeaff, 0x7310, 0x5c2, 0x6402, 0xd73b, 0x0, 0x0);
        gbc.writeMem(0x38e8, { 0xf0, 0x47 });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeaff, gbc.sp());
        EXPECT(0x38ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xff47));
        // F0 0379
        gbc.setState(0xc93b, 0xf42c, 0x48f0, 0xe110, 0x71f4, 0x4e07, 0x1, 0x0);
        gbc.writeMem(0xc93b, { 0xf0, 0x2e });
        gbc.writeMem(0xff2e, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf42c, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc93b));
        EXPECT(0x2e, gbc.readMem(0xc93c));
        EXPECT(0x86, gbc.readMem(0xff2e));
        // F0 037A
        gbc.setState(0x6d28, 0xf6a4, 0xe430, 0xb9c, 0x995, 0xee43, 0x1, 0x1);
        gbc.writeMem(0x6d28, { 0xf0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf6a4, gbc.sp());
        EXPECT(0x6d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xffc2));
        // F0 037B
        gbc.setState(0x84f9, 0xbc39, 0xde50, 0xd5a2, 0x77af, 0x7f56, 0x1, 0x0);
        gbc.writeMem(0x84f9, { 0xf0, 0x8a });
        gbc.writeMem(0xff8a, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbc39, gbc.sp());
        EXPECT(0x84fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x84f9));
        EXPECT(0x8a, gbc.readMem(0x84fa));
        EXPECT(0xed, gbc.readMem(0xff8a));
        // F0 037C
        gbc.setState(0x740c, 0x101e, 0x7fd0, 0x78e7, 0xdfc7, 0xdd69, 0x0, 0x0);
        gbc.writeMem(0x740c, { 0xf0, 0x38 });
        gbc.writeMem(0xff38, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x740e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff38));
        // F0 037D
        gbc.setState(0x47e6, 0xd6c2, 0x8d80, 0xef34, 0x5e94, 0x5587, 0x1, 0x1);
        gbc.writeMem(0x47e6, { 0xf0, 0xc2 });
        gbc.writeMem(0xffc2, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd6c2, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xffc2));
        // F0 037E
        gbc.setState(0xb2f4, 0xf053, 0xf970, 0xcf4a, 0x2d70, 0x1184, 0x1, 0x1);
        gbc.writeMem(0xb2f4, { 0xf0, 0x7f });
        gbc.writeMem(0xff7f, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0xb2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb2f4));
        EXPECT(0x7f, gbc.readMem(0xb2f5));
        EXPECT(0x9, gbc.readMem(0xff7f));
        // F0 037F
        gbc.setState(0xdd8a, 0xa6cd, 0x2fe0, 0x5572, 0x3c91, 0xfc5, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xf0, 0x7a });
        gbc.writeMem(0xff7a, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa6cd, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd8a));
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        EXPECT(0xc4, gbc.readMem(0xff7a));
        // F0 0380
        gbc.setState(0x9e9c, 0x837e, 0x20e0, 0x3bdd, 0xbd0e, 0x7257, 0x1, 0x0);
        gbc.writeMem(0x9e9c, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x837e, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e9c));
        EXPECT(0xb1, gbc.readMem(0x9e9d));
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 0381
        gbc.setState(0x1c5, 0xeccb, 0x7d20, 0x2e54, 0xbfd2, 0xb40f, 0x1, 0x1);
        gbc.writeMem(0x1c5, { 0xf0, 0xdb });
        gbc.writeMem(0xffdb, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeccb, gbc.sp());
        EXPECT(0x1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xffdb));
        // F0 0382
        gbc.setState(0x8c4c, 0x1f3c, 0xbf90, 0x71f0, 0xd642, 0x509, 0x1, 0x1);
        gbc.writeMem(0x8c4c, { 0xf0, 0x10 });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1f3c, gbc.sp());
        EXPECT(0x8c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8c4c));
        EXPECT(0x10, gbc.readMem(0x8c4d));
        EXPECT(0xb7, gbc.readMem(0xff10));
        // F0 0383
        gbc.setState(0xe2e9, 0x5ef8, 0x8cf0, 0xea4d, 0x6d9, 0x20c7, 0x1, 0x1);
        gbc.writeMem(0xe2e9, { 0xf0, 0xf8 });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0xe2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe2e9));
        EXPECT(0xf8, gbc.readMem(0xe2ea));
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // F0 0384
        gbc.setState(0x1101, 0xd165, 0xd0, 0xa739, 0xa825, 0x94fe, 0x1, 0x0);
        gbc.writeMem(0x1101, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd165, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 0385
        gbc.setState(0x331f, 0x14c, 0xa4e0, 0x28f0, 0xb310, 0xa850, 0x0, 0x0);
        gbc.writeMem(0x331f, { 0xf0, 0xd0 });
        gbc.writeMem(0xffd0, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x14c, gbc.sp());
        EXPECT(0x3321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffd0));
        // F0 0386
        gbc.setState(0xb72, 0xbea8, 0x3850, 0x5a7d, 0x8b5b, 0x9cc6, 0x1, 0x1);
        gbc.writeMem(0xb72, { 0xf0, 0x83 });
        gbc.writeMem(0xff83, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff83));
        // F0 0387
        gbc.setState(0x30b8, 0xd9cf, 0xfd30, 0x99a3, 0xd968, 0xe038, 0x0, 0x1);
        gbc.writeMem(0x30b8, { 0xf0, 0x5 });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd9cf, gbc.sp());
        EXPECT(0x30ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff05));
        // F0 0388
        gbc.setState(0x7052, 0xb5c8, 0xd3e0, 0x8de6, 0x8f4b, 0x97ef, 0x1, 0x1);
        gbc.writeMem(0x7052, { 0xf0, 0xda });
        gbc.writeMem(0xffda, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xffda));
        // F0 0389
        gbc.setState(0xa667, 0xfb24, 0xe660, 0x2e1e, 0x9d77, 0x81a5, 0x1, 0x1);
        gbc.writeMem(0xa667, { 0xf0, 0xb0 });
        gbc.writeMem(0xffb0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa667));
        EXPECT(0xb0, gbc.readMem(0xa668));
        EXPECT(0x95, gbc.readMem(0xffb0));
        // F0 038A
        gbc.setState(0xd0e8, 0x7756, 0x2710, 0xc2d6, 0x9fa5, 0xd3d7, 0x1, 0x0);
        gbc.writeMem(0xd0e8, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7756, gbc.sp());
        EXPECT(0xd0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd0e8));
        EXPECT(0x13, gbc.readMem(0xd0e9));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 038C
        gbc.setState(0x892a, 0x738d, 0x8560, 0x7e29, 0x5df9, 0xc52b, 0x1, 0x0);
        gbc.writeMem(0x892a, { 0xf0, 0xb7 });
        gbc.writeMem(0xffb7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x738d, gbc.sp());
        EXPECT(0x892c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x892a));
        EXPECT(0xb7, gbc.readMem(0x892b));
        EXPECT(0x66, gbc.readMem(0xffb7));
        // F0 038D
        gbc.setState(0x9d8a, 0x6fc1, 0xe580, 0x457f, 0x707c, 0xdd71, 0x0, 0x1);
        gbc.writeMem(0x9d8a, { 0xf0, 0xfa });
        gbc.writeMem(0xfffa, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6fc1, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9d8a));
        EXPECT(0xfa, gbc.readMem(0x9d8b));
        EXPECT(0xd5, gbc.readMem(0xfffa));
        // F0 038E
        gbc.setState(0x49d0, 0xba33, 0xce40, 0xeb3f, 0x22bf, 0xbf2, 0x0, 0x0);
        gbc.writeMem(0x49d0, { 0xf0, 0xdc });
        gbc.writeMem(0xffdc, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x49d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xffdc));
        // F0 038F
        gbc.setState(0x66fd, 0x3b65, 0xa950, 0xdc13, 0x189, 0x9d5d, 0x1, 0x1);
        gbc.writeMem(0x66fd, { 0xf0, 0x2e });
        gbc.writeMem(0xff2e, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b65, gbc.sp());
        EXPECT(0x66ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xff2e));
        // F0 0390
        gbc.setState(0xd84, 0x81e, 0x2e70, 0x57b6, 0x107c, 0x9c33, 0x0, 0x1);
        gbc.writeMem(0xd84, { 0xf0, 0xe4 });
        gbc.writeMem(0xffe4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xffe4));
        // F0 0391
        gbc.setState(0x96bf, 0xa589, 0xcd80, 0xee87, 0x1645, 0x8270, 0x0, 0x0);
        gbc.writeMem(0x96bf, { 0xf0, 0xde });
        gbc.writeMem(0xffde, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa589, gbc.sp());
        EXPECT(0x96c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x96bf));
        EXPECT(0xde, gbc.readMem(0x96c0));
        EXPECT(0x87, gbc.readMem(0xffde));
        // F0 0392
        gbc.setState(0xbdf1, 0xa36, 0x1700, 0x730f, 0xf82, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0xbdf1, { 0xf0, 0xe3 });
        gbc.writeMem(0xffe3, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbdf1));
        EXPECT(0xe3, gbc.readMem(0xbdf2));
        EXPECT(0xf3, gbc.readMem(0xffe3));
        // F0 0393
        gbc.setState(0xa83f, 0xdaa1, 0xb40, 0x9470, 0xbe07, 0xe684, 0x1, 0x1);
        gbc.writeMem(0xa83f, { 0xf0, 0x66 });
        gbc.writeMem(0xff66, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0xa841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa83f));
        EXPECT(0x66, gbc.readMem(0xa840));
        EXPECT(0x2c, gbc.readMem(0xff66));
        // F0 0394
        gbc.setState(0x2679, 0xe6e9, 0x7950, 0xf182, 0x3728, 0x1e52, 0x0, 0x1);
        gbc.writeMem(0x2679, { 0xf0, 0x69 });
        gbc.writeMem(0xff69, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe6e9, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff69));
        // F0 0395
        gbc.setState(0x9445, 0xfd1b, 0x9290, 0x8ef1, 0x3e93, 0x5201, 0x1, 0x1);
        gbc.writeMem(0x9445, { 0xf0, 0xeb });
        gbc.writeMem(0xffeb, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9445));
        EXPECT(0xeb, gbc.readMem(0x9446));
        EXPECT(0xbb, gbc.readMem(0xffeb));
        // F0 0396
        gbc.setState(0x6eac, 0xf468, 0xc3f0, 0x5346, 0x43d, 0xbc76, 0x1, 0x1);
        gbc.writeMem(0x6eac, { 0xf0, 0xc8 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x6eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xffc8));
        // F0 0397
        gbc.setState(0xccda, 0xfb13, 0x99b0, 0xf21e, 0xbf3e, 0xc1f7, 0x1, 0x0);
        gbc.writeMem(0xccda, { 0xf0, 0x9b });
        gbc.writeMem(0xff9b, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0xccdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xccda));
        EXPECT(0x9b, gbc.readMem(0xccdb));
        EXPECT(0xfb, gbc.readMem(0xff9b));
        // F0 0398
        gbc.setState(0xe414, 0x3c7d, 0x6170, 0xed58, 0x9e25, 0x19b9, 0x0, 0x0);
        gbc.writeMem(0xe414, { 0xf0, 0x92 });
        gbc.writeMem(0xff92, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3c7d, gbc.sp());
        EXPECT(0xe416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe414));
        EXPECT(0x92, gbc.readMem(0xe415));
        EXPECT(0x1f, gbc.readMem(0xff92));
        // F0 0399
        gbc.setState(0x9360, 0xa0c8, 0x5a90, 0xf154, 0xdb8f, 0x232, 0x1, 0x1);
        gbc.writeMem(0x9360, { 0xf0, 0xa7 });
        gbc.writeMem(0xffa7, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa0c8, gbc.sp());
        EXPECT(0x9362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9360));
        EXPECT(0xa7, gbc.readMem(0x9361));
        EXPECT(0xb5, gbc.readMem(0xffa7));
        // F0 039A
        gbc.setState(0x5179, 0x1f97, 0xb80, 0x393d, 0xdccb, 0x3039, 0x1, 0x0);
        gbc.writeMem(0x5179, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1f97, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 039B
        gbc.setState(0x75a4, 0xc1cc, 0x6600, 0x1f85, 0xaec4, 0x7fc5, 0x1, 0x1);
        gbc.writeMem(0x75a4, { 0xf0, 0x8c });
        gbc.writeMem(0xff8c, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff8c));
        // F0 039C
        gbc.setState(0xe7af, 0x9cf1, 0xe600, 0x78a3, 0x8d07, 0x3a78, 0x1, 0x0);
        gbc.writeMem(0xe7af, { 0xf0, 0xed });
        gbc.writeMem(0xffed, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0xe7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe7af));
        EXPECT(0xed, gbc.readMem(0xe7b0));
        EXPECT(0xa9, gbc.readMem(0xffed));
        // F0 039D
        gbc.setState(0x54c2, 0xb17a, 0x39f0, 0x385, 0xb88a, 0xf593, 0x0, 0x1);
        gbc.writeMem(0x54c2, { 0xf0, 0xf7 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xfff7));
        // F0 039E
        gbc.setState(0x57e5, 0xb470, 0xcc0, 0xa2b1, 0xfa32, 0xea2e, 0x0, 0x0);
        gbc.writeMem(0x57e5, { 0xf0, 0x7a });
        gbc.writeMem(0xff7a, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb470, gbc.sp());
        EXPECT(0x57e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xff7a));
        // F0 039F
        gbc.setState(0x47da, 0xae98, 0x4160, 0x53b9, 0x2fd, 0xa376, 0x0, 0x1);
        gbc.writeMem(0x47da, { 0xf0, 0x5f });
        gbc.writeMem(0xff5f, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae98, gbc.sp());
        EXPECT(0x47dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xff5f));
        // F0 03A0
        gbc.setState(0x14d6, 0xa53f, 0x5680, 0x9d48, 0x62c6, 0xed5, 0x0, 0x0);
        gbc.writeMem(0x14d6, { 0xf0, 0x2a });
        gbc.writeMem(0xff2a, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa53f, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff2a));
        // F0 03A1
        gbc.setState(0x8a70, 0xf699, 0xc0b0, 0x7d6c, 0x52a8, 0x9944, 0x1, 0x1);
        gbc.writeMem(0x8a70, { 0xf0, 0xbb });
        gbc.writeMem(0xffbb, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8a70));
        EXPECT(0xbb, gbc.readMem(0x8a71));
        EXPECT(0x22, gbc.readMem(0xffbb));
        // F0 03A2
        gbc.setState(0xd364, 0x93b, 0x3ce0, 0x4802, 0x2bad, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0xd364, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x93b, gbc.sp());
        EXPECT(0xd366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd364));
        EXPECT(0xe5, gbc.readMem(0xd365));
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 03A3
        gbc.setState(0x41c7, 0x4e92, 0x4e0, 0x4bf6, 0xd302, 0x324f, 0x0, 0x0);
        gbc.writeMem(0x41c7, { 0xf0, 0x38 });
        gbc.writeMem(0xff38, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4e92, gbc.sp());
        EXPECT(0x41c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xff38));
        // F0 03A4
        gbc.setState(0xc220, 0x371f, 0x6f70, 0xeb5a, 0x6287, 0x70f3, 0x0, 0x1);
        gbc.writeMem(0xc220, { 0xf0, 0xf9 });
        gbc.writeMem(0xfff9, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x371f, gbc.sp());
        EXPECT(0xc222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc220));
        EXPECT(0xf9, gbc.readMem(0xc221));
        EXPECT(0x10, gbc.readMem(0xfff9));
        // F0 03A5
        gbc.setState(0xc85a, 0xedc9, 0xf220, 0x4308, 0x6e80, 0xf5e1, 0x0, 0x1);
        gbc.writeMem(0xc85a, { 0xf0, 0xf8 });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xedc9, gbc.sp());
        EXPECT(0xc85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc85a));
        EXPECT(0xf8, gbc.readMem(0xc85b));
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // F0 03A6
        gbc.setState(0xae3c, 0x10a3, 0x1e10, 0xe101, 0x35d7, 0xa3dc, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0xf0, 0x88 });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x10a3, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xae3c));
        EXPECT(0x88, gbc.readMem(0xae3d));
        EXPECT(0x49, gbc.readMem(0xff88));
        // F0 03A8
        gbc.setState(0xede3, 0xaf14, 0xb0c0, 0x42a3, 0xdb44, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0xede3, { 0xf0, 0xa1 });
        gbc.writeMem(0xffa1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0xede5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xede3));
        EXPECT(0xa1, gbc.readMem(0xede4));
        EXPECT(0xd0, gbc.readMem(0xffa1));
        // F0 03A9
        gbc.setState(0xa47b, 0xffce, 0x9370, 0xf2d5, 0x4af5, 0xf186, 0x0, 0x0);
        gbc.writeMem(0xa47b, { 0xf0, 0x8b });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xffce, gbc.sp());
        EXPECT(0xa47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa47b));
        EXPECT(0x8b, gbc.readMem(0xa47c));
        EXPECT(0x23, gbc.readMem(0xff8b));
        // F0 03AA
        gbc.setState(0x58b0, 0x1add, 0x6910, 0x7902, 0x14a, 0x7530, 0x0, 0x0);
        gbc.writeMem(0x58b0, { 0xf0, 0xef });
        gbc.writeMem(0xffef, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1add, gbc.sp());
        EXPECT(0x58b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xffef));
        // F0 03AB
        gbc.setState(0x4ec2, 0xe481, 0x4fd0, 0x444c, 0xb39, 0x64ef, 0x0, 0x1);
        gbc.writeMem(0x4ec2, { 0xf0, 0xb4 });
        gbc.writeMem(0xffb4, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe481, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffb4));
        // F0 03AC
        gbc.setState(0x29d5, 0xe1a, 0xc100, 0xbc05, 0x87f6, 0x5b47, 0x0, 0x0);
        gbc.writeMem(0x29d5, { 0xf0, 0x72 });
        gbc.writeMem(0xff72, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe1a, gbc.sp());
        EXPECT(0x29d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff72));
        // F0 03AD
        gbc.setState(0x41b0, 0x161, 0xb880, 0x5a67, 0xb729, 0x8f28, 0x1, 0x0);
        gbc.writeMem(0x41b0, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x161, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 03AE
        gbc.setState(0x2c65, 0x60bc, 0xc4e0, 0xaf30, 0x4bc2, 0xeb2, 0x1, 0x1);
        gbc.writeMem(0x2c65, { 0xf0, 0xfb });
        gbc.writeMem(0xfffb, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x2c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xfffb));
        // F0 03B0
        gbc.setState(0x1564, 0xe18a, 0xac70, 0xec05, 0x8e12, 0x2429, 0x0, 0x0);
        gbc.writeMem(0x1564, { 0xf0, 0xda });
        gbc.writeMem(0xffda, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0x1566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xffda));
        // F0 03B1
        gbc.setState(0x33f2, 0x6556, 0xbe70, 0x1b9a, 0xda9e, 0xc865, 0x1, 0x1);
        gbc.writeMem(0x33f2, { 0xf0, 0x92 });
        gbc.writeMem(0xff92, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0x33f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xff92));
        // F0 03B3
        gbc.setState(0xe01, 0x6729, 0x5040, 0x6bc5, 0xcb83, 0xf581, 0x1, 0x0);
        gbc.writeMem(0xe01, { 0xf0, 0x32 });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6729, gbc.sp());
        EXPECT(0xe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff32));
        // F0 03B4
        gbc.setState(0xbdc7, 0xf5e3, 0x10, 0xc9, 0x8bef, 0xb793, 0x1, 0x0);
        gbc.writeMem(0xbdc7, { 0xf0, 0xb6 });
        gbc.writeMem(0xffb6, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf5e3, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbdc7));
        EXPECT(0xb6, gbc.readMem(0xbdc8));
        EXPECT(0x46, gbc.readMem(0xffb6));
        // F0 03B5
        gbc.setState(0x665e, 0xe264, 0x12e0, 0x4657, 0xa3e9, 0x2abc, 0x1, 0x1);
        gbc.writeMem(0x665e, { 0xf0, 0x79 });
        gbc.writeMem(0xff79, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe264, gbc.sp());
        EXPECT(0x6660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff79));
        // F0 03B6
        gbc.setState(0x1890, 0xb000, 0xfc70, 0x9af2, 0xf379, 0x354, 0x0, 0x1);
        gbc.writeMem(0x1890, { 0xf0, 0x22 });
        gbc.writeMem(0xff22, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb000, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff22));
        // F0 03B7
        gbc.setState(0xb7fa, 0xab37, 0xde70, 0x68c1, 0x3ae8, 0xba0b, 0x0, 0x1);
        gbc.writeMem(0xb7fa, { 0xf0, 0x13 });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0xb7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb7fa));
        EXPECT(0x13, gbc.readMem(0xb7fb));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // F0 03B8
        gbc.setState(0xa8e2, 0x9769, 0x5180, 0x30bb, 0xf639, 0x13a7, 0x1, 0x0);
        gbc.writeMem(0xa8e2, { 0xf0, 0x12 });
        gbc.writeMem(0xff12, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9769, gbc.sp());
        EXPECT(0xa8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa8e2));
        EXPECT(0x12, gbc.readMem(0xa8e3));
        EXPECT(0x52, gbc.readMem(0xff12));
        // F0 03B9
        gbc.setState(0x9e52, 0x465, 0xf190, 0x7819, 0x7df9, 0xd33b, 0x0, 0x0);
        gbc.writeMem(0x9e52, { 0xf0, 0xb1 });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x465, gbc.sp());
        EXPECT(0x9e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e52));
        EXPECT(0xb1, gbc.readMem(0x9e53));
        EXPECT(0x63, gbc.readMem(0xffb1));
        // F0 03BA
        gbc.setState(0xa6ac, 0x28af, 0x2e00, 0x6fe, 0xd61e, 0x246c, 0x1, 0x1);
        gbc.writeMem(0xa6ac, { 0xf0, 0x29 });
        gbc.writeMem(0xff29, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa6ac));
        EXPECT(0x29, gbc.readMem(0xa6ad));
        EXPECT(0xa2, gbc.readMem(0xff29));
        // F0 03BB
        gbc.setState(0x4c24, 0xc547, 0xb470, 0xab38, 0xffc2, 0x8404, 0x0, 0x1);
        gbc.writeMem(0x4c24, { 0xf0, 0x1a });
        gbc.writeMem(0xff1a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0x4c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff1a));
        // F0 03BC
        gbc.setState(0x96c0, 0xb209, 0x14c0, 0xc9d9, 0xd4d6, 0xbbf9, 0x1, 0x1);
        gbc.writeMem(0x96c0, { 0xf0, 0x9d });
        gbc.writeMem(0xff9d, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x96c0));
        EXPECT(0x9d, gbc.readMem(0x96c1));
        EXPECT(0xc, gbc.readMem(0xff9d));
        // F0 03BD
        gbc.setState(0xe139, 0xd82b, 0xef00, 0x3f55, 0x4f3d, 0xe5d3, 0x0, 0x1);
        gbc.writeMem(0xe139, { 0xf0, 0x62 });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd82b, gbc.sp());
        EXPECT(0xe13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe139));
        EXPECT(0x62, gbc.readMem(0xe13a));
        EXPECT(0x1a, gbc.readMem(0xff62));
        // F0 03BE
        gbc.setState(0xc6d6, 0x7d15, 0x88e0, 0xc2ee, 0xf72, 0xe80c, 0x0, 0x1);
        gbc.writeMem(0xc6d6, { 0xf0, 0x82 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7d15, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc6d6));
        EXPECT(0x82, gbc.readMem(0xc6d7));
        EXPECT(0x5e, gbc.readMem(0xff82));
        // F0 03BF
        gbc.setState(0x27ea, 0xc1f5, 0x1aa0, 0x54fe, 0xf190, 0x7cdb, 0x0, 0x0);
        gbc.writeMem(0x27ea, { 0xf0, 0x9a });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0x27ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // F0 03C0
        gbc.setState(0xa592, 0xbffb, 0xf2c0, 0x4673, 0x30fe, 0x49e3, 0x1, 0x0);
        gbc.writeMem(0xa592, { 0xf0, 0xfb });
        gbc.writeMem(0xfffb, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0xa594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa592));
        EXPECT(0xfb, gbc.readMem(0xa593));
        EXPECT(0x5f, gbc.readMem(0xfffb));
        // F0 03C1
        gbc.setState(0x4a1d, 0xd020, 0x1920, 0x79f6, 0xebd8, 0x40f4, 0x0, 0x1);
        gbc.writeMem(0x4a1d, { 0xf0, 0xa6 });
        gbc.writeMem(0xffa6, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffa6));
        // F0 03C3
        gbc.setState(0xbc4b, 0xa570, 0x1360, 0x11eb, 0xe56b, 0x3069, 0x0, 0x1);
        gbc.writeMem(0xbc4b, { 0xf0, 0xdd });
        gbc.writeMem(0xffdd, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0xbc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbc4b));
        EXPECT(0xdd, gbc.readMem(0xbc4c));
        EXPECT(0xc4, gbc.readMem(0xffdd));
        // F0 03C4
        gbc.setState(0xcbbc, 0x6ea8, 0xfc50, 0x9292, 0xaca, 0xdefd, 0x1, 0x0);
        gbc.writeMem(0xcbbc, { 0xf0, 0x58 });
        gbc.writeMem(0xff58, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcbbc));
        EXPECT(0x58, gbc.readMem(0xcbbd));
        EXPECT(0x10, gbc.readMem(0xff58));
        // F0 03C5
        gbc.setState(0x6549, 0xba65, 0xb390, 0x8bfb, 0xc3f7, 0x9845, 0x0, 0x0);
        gbc.writeMem(0x6549, { 0xf0, 0x3d });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // F0 03C6
        gbc.setState(0xb474, 0x1ff2, 0xc970, 0x58b7, 0x69f8, 0xb856, 0x1, 0x0);
        gbc.writeMem(0xb474, { 0xf0, 0xac });
        gbc.writeMem(0xffac, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0xb476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb474));
        EXPECT(0xac, gbc.readMem(0xb475));
        EXPECT(0x36, gbc.readMem(0xffac));
        // F0 03C7
        gbc.setState(0x6b0e, 0x9eda, 0x98e0, 0x5bcf, 0xcb69, 0xb81e, 0x0, 0x1);
        gbc.writeMem(0x6b0e, { 0xf0, 0x6b });
        gbc.writeMem(0xff6b, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9eda, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xff6b));
        // F0 03C8
        gbc.setState(0x49cd, 0xe96a, 0xec40, 0xabf6, 0x1a97, 0x4fab, 0x0, 0x0);
        gbc.writeMem(0x49cd, { 0xf0, 0x99 });
        gbc.writeMem(0xff99, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff99));
        // F0 03C9
        gbc.setState(0xd14d, 0xff16, 0x1740, 0xf012, 0x3aa7, 0x5174, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0xf0, 0xff });
        gbc.writeMem(0xffff, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xff16, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd14d));
        EXPECT(0xff, gbc.readMem(0xd14e));
        EXPECT(0x11, gbc.readMem(0xffff));
        // F0 03CA
        gbc.setState(0x6107, 0xeddc, 0xdcb0, 0xefb8, 0x62b6, 0x68ee, 0x1, 0x0);
        gbc.writeMem(0x6107, { 0xf0, 0x5c });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeddc, gbc.sp());
        EXPECT(0x6109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff5c));
        // F0 03CB
        gbc.setState(0x726f, 0xf539, 0xbc70, 0x325d, 0x9795, 0x9f4d, 0x1, 0x0);
        gbc.writeMem(0x726f, { 0xf0, 0x91 });
        gbc.writeMem(0xff91, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xff91));
        // F0 03CC
        gbc.setState(0x42e0, 0x2981, 0x3040, 0x17de, 0x47d1, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x42e0, { 0xf0, 0x5b });
        gbc.writeMem(0xff5b, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff5b));
        // F0 03CD
        gbc.setState(0x60dc, 0xc0f4, 0xc9f0, 0xc650, 0x58ac, 0x1ff7, 0x0, 0x1);
        gbc.writeMem(0x60dc, { 0xf0, 0xac });
        gbc.writeMem(0xffac, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xffac));
        // F0 03CE
        gbc.setState(0xaed8, 0xc69, 0x9450, 0xb4f3, 0x4b26, 0x1714, 0x0, 0x0);
        gbc.writeMem(0xaed8, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc69, gbc.sp());
        EXPECT(0xaeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xaed8));
        EXPECT(0x4e, gbc.readMem(0xaed9));
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 03CF
        gbc.setState(0xbf0d, 0xdbe, 0xfad0, 0xf533, 0x751f, 0x4740, 0x0, 0x1);
        gbc.writeMem(0xbf0d, { 0xf0, 0xea });
        gbc.writeMem(0xffea, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbf0d));
        EXPECT(0xea, gbc.readMem(0xbf0e));
        EXPECT(0x9f, gbc.readMem(0xffea));
        // F0 03D0
        gbc.setState(0x1ca0, 0xd586, 0x4910, 0x980d, 0x5181, 0xaa5c, 0x0, 0x1);
        gbc.writeMem(0x1ca0, { 0xf0, 0x68 });
        gbc.writeMem(0xff68, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd586, gbc.sp());
        EXPECT(0x1ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff68));
        // F0 03D1
        gbc.setState(0x56cc, 0x7679, 0x23b0, 0x3b5, 0x9464, 0xde83, 0x0, 0x1);
        gbc.writeMem(0x56cc, { 0xf0, 0x26 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x56ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xff26));
        // F0 03D2
        gbc.setState(0x6c6b, 0xe188, 0x6d30, 0x6ef, 0x23ae, 0x367a, 0x0, 0x1);
        gbc.writeMem(0x6c6b, { 0xf0, 0xe5 });
        gbc.writeMem(0xffe5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe188, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // F0 03D3
        gbc.setState(0xb21f, 0x5a6a, 0x5180, 0x1c27, 0x3319, 0x9f6, 0x1, 0x0);
        gbc.writeMem(0xb21f, { 0xf0, 0xe9 });
        gbc.writeMem(0xffe9, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5a6a, gbc.sp());
        EXPECT(0xb221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb21f));
        EXPECT(0xe9, gbc.readMem(0xb220));
        EXPECT(0xc1, gbc.readMem(0xffe9));
        // F0 03D4
        gbc.setState(0x1cd0, 0x6ffd, 0x6d50, 0x24cd, 0x5f06, 0xfb0e, 0x1, 0x0);
        gbc.writeMem(0x1cd0, { 0xf0, 0x9d });
        gbc.writeMem(0xff9d, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff9d));
        // F0 03D6
        gbc.setState(0xa62c, 0x9de2, 0xa2b0, 0x9e71, 0xd359, 0x72b0, 0x0, 0x1);
        gbc.writeMem(0xa62c, { 0xf0, 0x48 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0xa62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa62c));
        EXPECT(0x48, gbc.readMem(0xa62d));
        EXPECT(0xad, gbc.readMem(0xff48));
        // F0 03D7
        gbc.setState(0x4980, 0xfa6b, 0x110, 0x1c3c, 0xea1, 0x8f89, 0x1, 0x0);
        gbc.writeMem(0x4980, { 0xf0, 0x4c });
        gbc.writeMem(0xff4c, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0x4982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xff4c));
        // F0 03DB
        gbc.setState(0x7dd8, 0xff71, 0xf860, 0x8adc, 0x535a, 0x5a01, 0x1, 0x0);
        gbc.writeMem(0x7dd8, { 0xf0, 0xb });
        gbc.writeMem(0xff0b, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xff71, gbc.sp());
        EXPECT(0x7dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff0b));
        // F0 03DC
        gbc.setState(0x4818, 0x6a80, 0xc610, 0x3af9, 0x6fa5, 0x37b4, 0x0, 0x0);
        gbc.writeMem(0x4818, { 0xf0, 0x4e });
        gbc.writeMem(0xff4e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6a80, gbc.sp());
        EXPECT(0x481a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff4e));
        // F0 03DD
        gbc.setState(0x429f, 0x918f, 0x7e0, 0xe5ae, 0x6170, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0x429f, { 0xf0, 0x85 });
        gbc.writeMem(0xff85, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x42a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff85));
        // F0 03DE
        gbc.setState(0x9753, 0xed10, 0x750, 0xfe74, 0x81ed, 0x20e2, 0x1, 0x1);
        gbc.writeMem(0x9753, { 0xf0, 0x1c });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0x9755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9753));
        EXPECT(0x1c, gbc.readMem(0x9754));
        EXPECT(0x94, gbc.readMem(0xff1c));
        // F0 03DF
        gbc.setState(0xdea5, 0x5453, 0x3660, 0xa5b4, 0x6f6c, 0x97a1, 0x1, 0x1);
        gbc.writeMem(0xdea5, { 0xf0, 0x8f });
        gbc.writeMem(0xff8f, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5453, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdea5));
        EXPECT(0x8f, gbc.readMem(0xdea6));
        EXPECT(0x1c, gbc.readMem(0xff8f));
        // F0 03E0
        gbc.setState(0xbf08, 0xe7ab, 0xddb0, 0x9fff, 0x6e8e, 0x88fc, 0x0, 0x0);
        gbc.writeMem(0xbf08, { 0xf0, 0xf0 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe7ab, gbc.sp());
        EXPECT(0xbf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbf08));
        EXPECT(0xf0, gbc.readMem(0xbf09));
        EXPECT(0xc0, gbc.readMem(0xfff0));
        // F0 03E1
        gbc.setState(0xdafb, 0xb1c4, 0xb000, 0xd6d1, 0x2c6a, 0x7fce, 0x0, 0x1);
        gbc.writeMem(0xdafb, { 0xf0, 0x67 });
        gbc.writeMem(0xff67, { 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdafb));
        EXPECT(0x67, gbc.readMem(0xdafc));
        EXPECT(0x27, gbc.readMem(0xff67));
        // F0 03E2
        gbc.setState(0x8e47, 0x5e1e, 0x5670, 0x5cb9, 0xb3da, 0x9b66, 0x0, 0x1);
        gbc.writeMem(0x8e47, { 0xf0, 0x3a });
        gbc.writeMem(0xff3a, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5e1e, gbc.sp());
        EXPECT(0x8e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8e47));
        EXPECT(0x3a, gbc.readMem(0x8e48));
        EXPECT(0xf0, gbc.readMem(0xff3a));
        // F0 03E3
        gbc.setState(0x83a2, 0x6bb7, 0x6890, 0x2688, 0x23e9, 0xb167, 0x1, 0x1);
        gbc.writeMem(0x83a2, { 0xf0, 0x31 });
        gbc.writeMem(0xff31, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6bb7, gbc.sp());
        EXPECT(0x83a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83a2));
        EXPECT(0x31, gbc.readMem(0x83a3));
        EXPECT(0x40, gbc.readMem(0xff31));
        // F0 03E4
        gbc.setState(0x4090, 0xb430, 0xa270, 0xda3, 0xb268, 0xd4a4, 0x0, 0x1);
        gbc.writeMem(0x4090, { 0xf0, 0xe7 });
        gbc.writeMem(0xffe7, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb430, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xffe7));
        // F0 03E5
        gbc.setState(0x48f5, 0x985, 0x4bb0, 0xfa1c, 0x1ea4, 0x1a36, 0x0, 0x1);
        gbc.writeMem(0x48f5, { 0xf0, 0x25 });
        gbc.writeMem(0xff25, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x985, gbc.sp());
        EXPECT(0x48f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xff25));
        // F0 03E6
        gbc.setState(0x5e87, 0x7f69, 0xc780, 0xddba, 0x1532, 0x4d0d, 0x1, 0x0);
        gbc.writeMem(0x5e87, { 0xf0, 0x71 });
        gbc.writeMem(0xff71, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xff71));
        // F0 03E7
        gbc.setState(0x6220, 0x6a48, 0xfce0, 0x548, 0x8c90, 0x9f40, 0x0, 0x1);
        gbc.writeMem(0x6220, { 0xf0, 0x6b });
        gbc.writeMem(0xff6b, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0x6222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xff6b));
    }
