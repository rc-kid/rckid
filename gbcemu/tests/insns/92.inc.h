    TEST(gbcemu, opcode_92) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 92 0000
        gbc.setState(0x993d, 0xc436, 0x13a0, 0x8de2, 0x133f, 0x6ee3, 0x1, 0x1);
        gbc.writeMem(0x993d, { 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc436, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x993d));
        // 92 0001
        gbc.setState(0x6dbf, 0x2057, 0x3f90, 0xb2d5, 0x53dd, 0xb476, 0x0, 0x0);
        gbc.writeMem(0x6dbf, { 0x92 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2057, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0002
        gbc.setState(0x5a86, 0x22fc, 0x6210, 0x5717, 0x6fe1, 0xf863, 0x0, 0x0);
        gbc.writeMem(0x5a86, { 0x92 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x22fc, gbc.sp());
        EXPECT(0x5a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0003
        gbc.setState(0x8c16, 0xf640, 0xe720, 0x8e99, 0xc8e, 0xc7dd, 0x1, 0x1);
        gbc.writeMem(0x8c16, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf640, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8c16));
        // 92 0004
        gbc.setState(0x3907, 0x432f, 0x2780, 0xcd6f, 0x6773, 0xa0d4, 0x0, 0x0);
        gbc.writeMem(0x3907, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x432f, gbc.sp());
        EXPECT(0x3908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0005
        gbc.setState(0x806b, 0x7766, 0x8260, 0x65ce, 0x59b4, 0xaf08, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0x92 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7766, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x806b));
        // 92 0006
        gbc.setState(0xd21a, 0x70b6, 0x5020, 0x7946, 0xe9ad, 0xf794, 0x0, 0x0);
        gbc.writeMem(0xd21a, { 0x92 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x70b6, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd21a));
        // 92 0007
        gbc.setState(0xcd73, 0x48b7, 0xeb0, 0xcd1b, 0x8eca, 0xb02a, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0x92 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x48b7, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcd73));
        // 92 0008
        gbc.setState(0x68af, 0xa041, 0x4250, 0x8ce0, 0x3d62, 0xaf12, 0x1, 0x1);
        gbc.writeMem(0x68af, { 0x92 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa041, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0009
        gbc.setState(0x8429, 0x7403, 0xac00, 0xfb1e, 0x82fc, 0x9928, 0x0, 0x1);
        gbc.writeMem(0x8429, { 0x92 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8429));
        // 92 000A
        gbc.setState(0xd096, 0x58d6, 0x9700, 0x47f4, 0x57bd, 0x9891, 0x1, 0x1);
        gbc.writeMem(0xd096, { 0x92 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x58d6, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd096));
        // 92 000B
        gbc.setState(0x69a0, 0x6c5f, 0x3400, 0x2476, 0x4288, 0xf976, 0x1, 0x0);
        gbc.writeMem(0x69a0, { 0x92 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 000C
        gbc.setState(0x9f94, 0xe7fe, 0x8af0, 0x44fb, 0x72d3, 0x3f7d, 0x0, 0x1);
        gbc.writeMem(0x9f94, { 0x92 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe7fe, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f94));
        // 92 000D
        gbc.setState(0x125d, 0x7546, 0x2630, 0xf1ec, 0xdb3c, 0xe068, 0x0, 0x0);
        gbc.writeMem(0x125d, { 0x92 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x125e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 000E
        gbc.setState(0x84b1, 0x8ec4, 0x2750, 0x775d, 0x8b76, 0x427e, 0x0, 0x1);
        gbc.writeMem(0x84b1, { 0x92 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8ec4, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x84b1));
        // 92 0010
        gbc.setState(0x5067, 0x7ada, 0x540, 0xb647, 0x5f42, 0x38a7, 0x1, 0x0);
        gbc.writeMem(0x5067, { 0x92 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7ada, gbc.sp());
        EXPECT(0x5068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0012
        gbc.setState(0x5702, 0xc81a, 0xfea0, 0x8366, 0x7ae0, 0x22e7, 0x1, 0x0);
        gbc.writeMem(0x5702, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0013
        gbc.setState(0x81bb, 0x8ecb, 0x2cb0, 0xc3b8, 0x5808, 0xf507, 0x1, 0x1);
        gbc.writeMem(0x81bb, { 0x92 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8ecb, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x81bb));
        // 92 0014
        gbc.setState(0xa18f, 0xd626, 0x4fe0, 0x760, 0x1d23, 0xd150, 0x1, 0x1);
        gbc.writeMem(0xa18f, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd626, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa18f));
        // 92 0015
        gbc.setState(0x5a49, 0x421a, 0x29b0, 0x3041, 0x5d74, 0x221a, 0x1, 0x0);
        gbc.writeMem(0x5a49, { 0x92 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0x5a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0016
        gbc.setState(0x671f, 0xabf1, 0x9ad0, 0xba7c, 0xbddb, 0x8828, 0x0, 0x1);
        gbc.writeMem(0x671f, { 0x92 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x6720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0017
        gbc.setState(0x51f5, 0xd5bb, 0x3180, 0x4bcf, 0xccae, 0xcfaf, 0x1, 0x0);
        gbc.writeMem(0x51f5, { 0x92 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0018
        gbc.setState(0xeee4, 0x1820, 0x8fb0, 0xbe03, 0xdaed, 0x719e, 0x0, 0x1);
        gbc.writeMem(0xeee4, { 0x92 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0xeee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeee4));
        // 92 0019
        gbc.setState(0x11db, 0xf1b1, 0x380, 0x9d4b, 0xf05d, 0x25aa, 0x0, 0x1);
        gbc.writeMem(0x11db, { 0x92 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf1b1, gbc.sp());
        EXPECT(0x11dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 001A
        gbc.setState(0x4c14, 0x2b8b, 0xa7b0, 0x4870, 0xe8a, 0x944f, 0x1, 0x1);
        gbc.writeMem(0x4c14, { 0x92 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2b8b, gbc.sp());
        EXPECT(0x4c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 001B
        gbc.setState(0x9db4, 0x5fea, 0xd750, 0xb723, 0x57f9, 0xe5f7, 0x0, 0x1);
        gbc.writeMem(0x9db4, { 0x92 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x9db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9db4));
        // 92 001C
        gbc.setState(0x3ccf, 0xd565, 0x7ae0, 0xe9cb, 0x2428, 0x92a9, 0x1, 0x0);
        gbc.writeMem(0x3ccf, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0x3cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 001E
        gbc.setState(0x4071, 0xfc8e, 0x3eb0, 0x65c1, 0xd1d6, 0xbf40, 0x1, 0x0);
        gbc.writeMem(0x4071, { 0x92 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 001F
        gbc.setState(0xe72c, 0x7e40, 0x3f50, 0xaa0c, 0xc33b, 0x133a, 0x0, 0x0);
        gbc.writeMem(0xe72c, { 0x92 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7e40, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe72c));
        // 92 0020
        gbc.setState(0x3298, 0xab67, 0x8590, 0x9404, 0x8de4, 0x221e, 0x0, 0x0);
        gbc.writeMem(0x3298, { 0x92 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xab67, gbc.sp());
        EXPECT(0x3299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0021
        gbc.setState(0x324f, 0x57be, 0x2a80, 0x80e7, 0xdcab, 0x30bf, 0x1, 0x1);
        gbc.writeMem(0x324f, { 0x92 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0022
        gbc.setState(0xd92, 0x9671, 0x6d20, 0x8e04, 0x4aff, 0x7a90, 0x0, 0x1);
        gbc.writeMem(0xd92, { 0x92 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0xd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0023
        gbc.setState(0x51a3, 0xc778, 0x7d00, 0xee91, 0x32e6, 0x4a99, 0x1, 0x1);
        gbc.writeMem(0x51a3, { 0x92 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0024
        gbc.setState(0x1de2, 0x3587, 0xbe20, 0xc8a1, 0xd3ae, 0xe27b, 0x0, 0x0);
        gbc.writeMem(0x1de2, { 0x92 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3587, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0025
        gbc.setState(0x4adf, 0x148b, 0xdd70, 0x54fc, 0xaa3, 0xed64, 0x1, 0x1);
        gbc.writeMem(0x4adf, { 0x92 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x148b, gbc.sp());
        EXPECT(0x4ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0026
        gbc.setState(0xd5c7, 0x2b5b, 0x6570, 0x84d9, 0x8480, 0x7785, 0x0, 0x0);
        gbc.writeMem(0xd5c7, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b5b, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd5c7));
        // 92 0027
        gbc.setState(0xabf8, 0x53e7, 0x16d0, 0x57e4, 0xcff, 0x4093, 0x0, 0x0);
        gbc.writeMem(0xabf8, { 0x92 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0xabf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xabf8));
        // 92 0028
        gbc.setState(0x151c, 0x988d, 0x31d0, 0x3dca, 0x1690, 0xdb27, 0x1, 0x1);
        gbc.writeMem(0x151c, { 0x92 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x988d, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0029
        gbc.setState(0x9a74, 0x9389, 0x1d10, 0xd155, 0x454b, 0xc559, 0x0, 0x0);
        gbc.writeMem(0x9a74, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9389, gbc.sp());
        EXPECT(0x9a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a74));
        // 92 002A
        gbc.setState(0x7932, 0x87c3, 0x1d80, 0xe02c, 0xd523, 0xed49, 0x0, 0x0);
        gbc.writeMem(0x7932, { 0x92 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 002B
        gbc.setState(0x6a50, 0xb7c9, 0xbd80, 0x5d62, 0xfe35, 0x6932, 0x0, 0x1);
        gbc.writeMem(0x6a50, { 0x92 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb7c9, gbc.sp());
        EXPECT(0x6a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 002C
        gbc.setState(0xa01c, 0xcdfa, 0x370, 0xb82b, 0x4a2b, 0xa93e, 0x0, 0x0);
        gbc.writeMem(0xa01c, { 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcdfa, gbc.sp());
        EXPECT(0xa01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa01c));
        // 92 002E
        gbc.setState(0x13fe, 0x7c09, 0xf700, 0x6ec, 0xf2e7, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x13fe, { 0x92 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7c09, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0030
        gbc.setState(0xd7f7, 0x2747, 0x9530, 0x895c, 0x88fa, 0xb446, 0x0, 0x0);
        gbc.writeMem(0xd7f7, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2747, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd7f7));
        // 92 0031
        gbc.setState(0xee55, 0xcbf1, 0x3af0, 0x1eff, 0x6736, 0xc2ac, 0x1, 0x1);
        gbc.writeMem(0xee55, { 0x92 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0xee56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xee55));
        // 92 0032
        gbc.setState(0x6837, 0x6142, 0x1d10, 0xaa0d, 0x9c3d, 0x7fd0, 0x1, 0x1);
        gbc.writeMem(0x6837, { 0x92 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6142, gbc.sp());
        EXPECT(0x6838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0033
        gbc.setState(0x3258, 0xf120, 0x4e50, 0x936b, 0xa239, 0x5d49, 0x1, 0x0);
        gbc.writeMem(0x3258, { 0x92 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0x3259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0034
        gbc.setState(0xc3e6, 0x16dc, 0xb200, 0x5e02, 0xfc5c, 0x9e30, 0x1, 0x1);
        gbc.writeMem(0xc3e6, { 0x92 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x16dc, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc3e6));
        // 92 0035
        gbc.setState(0xba56, 0x378c, 0x7cf0, 0x2a0, 0x9557, 0xbba9, 0x1, 0x0);
        gbc.writeMem(0xba56, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0xba57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba56));
        // 92 0036
        gbc.setState(0x50eb, 0x9c4a, 0x870, 0x34ee, 0x54d7, 0x23a2, 0x1, 0x1);
        gbc.writeMem(0x50eb, { 0x92 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9c4a, gbc.sp());
        EXPECT(0x50ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0037
        gbc.setState(0xc043, 0x2261, 0x5130, 0x9363, 0x797d, 0x2e9b, 0x0, 0x0);
        gbc.writeMem(0xc043, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0xc044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc043));
        // 92 0038
        gbc.setState(0xaafd, 0x3a74, 0x43d0, 0x3590, 0x108, 0x3a54, 0x1, 0x1);
        gbc.writeMem(0xaafd, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3a74, gbc.sp());
        EXPECT(0xaafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaafd));
        // 92 0039
        gbc.setState(0x4217, 0xcda, 0x4520, 0x268f, 0x9ffa, 0x7113, 0x0, 0x0);
        gbc.writeMem(0x4217, { 0x92 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcda, gbc.sp());
        EXPECT(0x4218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 003A
        gbc.setState(0xa7fb, 0xdf31, 0x8510, 0x62bf, 0x1678, 0xd45c, 0x1, 0x1);
        gbc.writeMem(0xa7fb, { 0x92 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0xa7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa7fb));
        // 92 003B
        gbc.setState(0x5278, 0xaaf3, 0xfac0, 0x1bf6, 0x806c, 0xf758, 0x0, 0x1);
        gbc.writeMem(0x5278, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 003D
        gbc.setState(0x8f35, 0xa193, 0x990, 0x1bde, 0x6ae3, 0x63, 0x0, 0x1);
        gbc.writeMem(0x8f35, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa193, gbc.sp());
        EXPECT(0x8f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f35));
        // 92 003E
        gbc.setState(0xa0ca, 0xd592, 0xd9d0, 0xd056, 0x5c74, 0xe176, 0x0, 0x1);
        gbc.writeMem(0xa0ca, { 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd592, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa0ca));
        // 92 003F
        gbc.setState(0x44f8, 0x1ff9, 0x7d10, 0x896f, 0xe044, 0xfe7b, 0x0, 0x0);
        gbc.writeMem(0x44f8, { 0x92 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0x44f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0040
        gbc.setState(0x2d7e, 0x7dc6, 0x4310, 0xfa8c, 0x9ed2, 0xa588, 0x0, 0x0);
        gbc.writeMem(0x2d7e, { 0x92 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7dc6, gbc.sp());
        EXPECT(0x2d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0041
        gbc.setState(0x7f, 0xe602, 0x7a90, 0x6d55, 0xff65, 0xaf57, 0x0, 0x0);
        gbc.writeMem(0x7f, { 0x92 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe602, gbc.sp());
        EXPECT(0x80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0042
        gbc.setState(0x6424, 0xf0a0, 0x7950, 0xd336, 0xe19, 0x161c, 0x1, 0x0);
        gbc.writeMem(0x6424, { 0x92 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf0a0, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0043
        gbc.setState(0xd9a4, 0x3e76, 0xec0, 0xba9, 0x94ad, 0x7161, 0x1, 0x0);
        gbc.writeMem(0xd9a4, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9a4));
        // 92 0044
        gbc.setState(0xa81c, 0x9233, 0x8700, 0xfc27, 0xba32, 0x457a, 0x1, 0x0);
        gbc.writeMem(0xa81c, { 0x92 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa81c));
        // 92 0045
        gbc.setState(0x95b6, 0xa736, 0x9d30, 0x5a81, 0x90e7, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x95b6, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa736, gbc.sp());
        EXPECT(0x95b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x95b6));
        // 92 0046
        gbc.setState(0x1a9e, 0x818d, 0x94a0, 0x5773, 0x7c10, 0x61d7, 0x1, 0x1);
        gbc.writeMem(0x1a9e, { 0x92 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x818d, gbc.sp());
        EXPECT(0x1a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0047
        gbc.setState(0x8a3c, 0x3281, 0x1d20, 0x8313, 0x99eb, 0x9988, 0x1, 0x0);
        gbc.writeMem(0x8a3c, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3281, gbc.sp());
        EXPECT(0x8a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8a3c));
        // 92 0048
        gbc.setState(0x309b, 0x14c9, 0x6bb0, 0xfc06, 0xc0a, 0x6bc4, 0x1, 0x0);
        gbc.writeMem(0x309b, { 0x92 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0x309c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0049
        gbc.setState(0x41b8, 0x52b5, 0x6010, 0x1532, 0x6b81, 0xdf71, 0x1, 0x0);
        gbc.writeMem(0x41b8, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x52b5, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 004A
        gbc.setState(0xc678, 0xc461, 0x47d0, 0x7e09, 0xcb9a, 0x785c, 0x1, 0x0);
        gbc.writeMem(0xc678, { 0x92 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc461, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc678));
        // 92 004B
        gbc.setState(0x7dcf, 0xfb6, 0x9b50, 0xaf1d, 0x788f, 0xb6f7, 0x0, 0x0);
        gbc.writeMem(0x7dcf, { 0x92 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x7dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 004C
        gbc.setState(0xeba1, 0x9015, 0x4510, 0x1069, 0xe65b, 0x6025, 0x0, 0x1);
        gbc.writeMem(0xeba1, { 0x92 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9015, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeba1));
        // 92 004E
        gbc.setState(0x2f1b, 0xa08b, 0xf240, 0x6811, 0x8a96, 0xaee9, 0x1, 0x1);
        gbc.writeMem(0x2f1b, { 0x92 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 004F
        gbc.setState(0x9c43, 0x3d1a, 0x8550, 0xb45d, 0xda2f, 0x48e, 0x1, 0x0);
        gbc.writeMem(0x9c43, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0x9c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9c43));
        // 92 0051
        gbc.setState(0xce37, 0x7311, 0x9ca0, 0x7870, 0x6e89, 0x69a5, 0x0, 0x0);
        gbc.writeMem(0xce37, { 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xce37));
        // 92 0052
        gbc.setState(0x4391, 0xe9a9, 0xe6c0, 0x4417, 0x8170, 0xca72, 0x0, 0x0);
        gbc.writeMem(0x4391, { 0x92 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe9a9, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0053
        gbc.setState(0xafd4, 0xffdb, 0xb1c0, 0x77d3, 0x2b76, 0x4616, 0x1, 0x0);
        gbc.writeMem(0xafd4, { 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0xafd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xafd4));
        // 92 0054
        gbc.setState(0x5e14, 0xd350, 0x56f0, 0x251d, 0xe5f6, 0x4ea4, 0x1, 0x0);
        gbc.writeMem(0x5e14, { 0x92 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0055
        gbc.setState(0x9206, 0xc1a5, 0xc800, 0xbba1, 0x5c95, 0xfcac, 0x1, 0x1);
        gbc.writeMem(0x9206, { 0x92 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc1a5, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9206));
        // 92 0056
        gbc.setState(0x2ad5, 0xcba1, 0x73d0, 0xb574, 0xda76, 0x84dc, 0x1, 0x1);
        gbc.writeMem(0x2ad5, { 0x92 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcba1, gbc.sp());
        EXPECT(0x2ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0057
        gbc.setState(0x5c60, 0x691, 0xe8a0, 0xeb31, 0x9fcc, 0x1ea9, 0x1, 0x1);
        gbc.writeMem(0x5c60, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x691, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0058
        gbc.setState(0xc765, 0x7e02, 0xa620, 0x3fdd, 0x4afc, 0xd80a, 0x1, 0x1);
        gbc.writeMem(0xc765, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0xc766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc765));
        // 92 0059
        gbc.setState(0x3ec9, 0xab3d, 0xa430, 0x6287, 0x8aa2, 0x2969, 0x1, 0x0);
        gbc.writeMem(0x3ec9, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xab3d, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 005A
        gbc.setState(0xa418, 0x462c, 0xa8d0, 0x42ae, 0x22a, 0x7ff, 0x0, 0x1);
        gbc.writeMem(0xa418, { 0x92 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x462c, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa418));
        // 92 005B
        gbc.setState(0x5b01, 0x1f28, 0x8560, 0x1da4, 0xfc67, 0x305c, 0x1, 0x0);
        gbc.writeMem(0x5b01, { 0x92 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 005C
        gbc.setState(0x973d, 0xef20, 0x2d70, 0x63cb, 0x6db8, 0x8d43, 0x0, 0x0);
        gbc.writeMem(0x973d, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef20, gbc.sp());
        EXPECT(0x973e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x973d));
        // 92 005D
        gbc.setState(0x17b2, 0x698, 0x4ce0, 0x51f5, 0x195e, 0xf402, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0x92 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0x17b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 005E
        gbc.setState(0x54c4, 0xc24b, 0x2d90, 0x8a2a, 0x256b, 0x4e09, 0x1, 0x0);
        gbc.writeMem(0x54c4, { 0x92 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc24b, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 005F
        gbc.setState(0xa04f, 0x2916, 0x6640, 0xb7fa, 0x15ee, 0xb1fc, 0x1, 0x1);
        gbc.writeMem(0xa04f, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2916, gbc.sp());
        EXPECT(0xa050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa04f));
        // 92 0060
        gbc.setState(0xa5c2, 0x3385, 0xab80, 0x5aa4, 0x8ce5, 0xc4aa, 0x0, 0x1);
        gbc.writeMem(0xa5c2, { 0x92 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3385, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa5c2));
        // 92 0061
        gbc.setState(0x5a59, 0xaa65, 0x7870, 0x18d7, 0x5ef, 0xb180, 0x0, 0x0);
        gbc.writeMem(0x5a59, { 0x92 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0062
        gbc.setState(0xe4a4, 0x741e, 0x13e0, 0x5c67, 0x80ef, 0xb4e7, 0x1, 0x1);
        gbc.writeMem(0xe4a4, { 0x92 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x741e, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe4a4));
        // 92 0063
        gbc.setState(0x2742, 0xc1, 0xd280, 0xf532, 0x870d, 0x6eb3, 0x0, 0x0);
        gbc.writeMem(0x2742, { 0x92 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0x2743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0064
        gbc.setState(0xd277, 0x1dc4, 0x93e0, 0x793a, 0x1476, 0xaa87, 0x1, 0x1);
        gbc.writeMem(0xd277, { 0x92 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1dc4, gbc.sp());
        EXPECT(0xd278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd277));
        // 92 0065
        gbc.setState(0x5a59, 0xece1, 0x5020, 0x474, 0x8578, 0xf201, 0x0, 0x1);
        gbc.writeMem(0x5a59, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0066
        gbc.setState(0xda27, 0x9ecb, 0x4f90, 0x1a66, 0x68b3, 0x761f, 0x0, 0x0);
        gbc.writeMem(0xda27, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9ecb, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xda27));
        // 92 0067
        gbc.setState(0x7d0a, 0xb1a5, 0x6320, 0xa1b, 0x3d6e, 0x6811, 0x1, 0x1);
        gbc.writeMem(0x7d0a, { 0x92 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0068
        gbc.setState(0x2e8b, 0x6d52, 0xd380, 0x3543, 0xecb0, 0x176, 0x0, 0x1);
        gbc.writeMem(0x2e8b, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x2e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0069
        gbc.setState(0xa0fb, 0xae8c, 0xbcd0, 0x7b4d, 0xb1ad, 0x38f8, 0x1, 0x0);
        gbc.writeMem(0xa0fb, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa0fb));
        // 92 006A
        gbc.setState(0xdf74, 0x8373, 0x9c60, 0x402, 0x3545, 0xc3c9, 0x0, 0x0);
        gbc.writeMem(0xdf74, { 0x92 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0xdf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdf74));
        // 92 006B
        gbc.setState(0x3096, 0x1511, 0x1c00, 0xef0, 0x4246, 0xf740, 0x0, 0x0);
        gbc.writeMem(0x3096, { 0x92 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1511, gbc.sp());
        EXPECT(0x3097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 006C
        gbc.setState(0x9261, 0x55b3, 0x3bf0, 0x8c1c, 0x173b, 0x4494, 0x1, 0x1);
        gbc.writeMem(0x9261, { 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x55b3, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9261));
        // 92 006D
        gbc.setState(0x8a32, 0x3ffc, 0xbba0, 0xe40c, 0x757f, 0xb7cf, 0x1, 0x1);
        gbc.writeMem(0x8a32, { 0x92 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3ffc, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8a32));
        // 92 006F
        gbc.setState(0xefb1, 0x15c8, 0x2eb0, 0xf691, 0x5b2f, 0x3fe2, 0x1, 0x1);
        gbc.writeMem(0xefb1, { 0x92 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xefb1));
        // 92 0070
        gbc.setState(0x7f13, 0x3989, 0x8cb0, 0x698b, 0x6f38, 0xbd5f, 0x0, 0x0);
        gbc.writeMem(0x7f13, { 0x92 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3989, gbc.sp());
        EXPECT(0x7f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0071
        gbc.setState(0x61c8, 0x1400, 0x3340, 0xc9fa, 0x4c5c, 0x87e0, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1400, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0072
        gbc.setState(0x28f2, 0x5dfb, 0xe370, 0xb194, 0x1864, 0xc0f8, 0x1, 0x1);
        gbc.writeMem(0x28f2, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0073
        gbc.setState(0x7d34, 0x6408, 0xbb80, 0x8c4d, 0x311e, 0x5e91, 0x1, 0x0);
        gbc.writeMem(0x7d34, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6408, gbc.sp());
        EXPECT(0x7d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0074
        gbc.setState(0x67b3, 0x86a2, 0xd020, 0x405a, 0x12d2, 0xb34a, 0x1, 0x0);
        gbc.writeMem(0x67b3, { 0x92 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x67b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0076
        gbc.setState(0x2ba8, 0xd177, 0xf2d0, 0xe2c6, 0x9798, 0xb292, 0x1, 0x1);
        gbc.writeMem(0x2ba8, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0077
        gbc.setState(0x15cb, 0xf780, 0x2390, 0xf72c, 0x5ea8, 0x52e7, 0x0, 0x1);
        gbc.writeMem(0x15cb, { 0x92 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf780, gbc.sp());
        EXPECT(0x15cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0078
        gbc.setState(0x417b, 0x2699, 0xe150, 0xa736, 0x9f, 0x2b50, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0x417c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0079
        gbc.setState(0x7b54, 0xa412, 0x2650, 0xede, 0x1b55, 0x6049, 0x0, 0x1);
        gbc.writeMem(0x7b54, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0x7b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 007A
        gbc.setState(0x2c06, 0xb877, 0x85f0, 0xa36d, 0x9d71, 0x441e, 0x0, 0x1);
        gbc.writeMem(0x2c06, { 0x92 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb877, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 007C
        gbc.setState(0xcdae, 0xac3b, 0x3c0, 0xf7c1, 0x2beb, 0x362c, 0x1, 0x0);
        gbc.writeMem(0xcdae, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xac3b, gbc.sp());
        EXPECT(0xcdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcdae));
        // 92 007D
        gbc.setState(0x1482, 0x2de9, 0xbc70, 0x8ee3, 0xe9e9, 0x7e04, 0x0, 0x1);
        gbc.writeMem(0x1482, { 0x92 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x1483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 007E
        gbc.setState(0x5823, 0xe738, 0x5a40, 0x28da, 0x8d49, 0xcfca, 0x1, 0x0);
        gbc.writeMem(0x5823, { 0x92 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0x5824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 007F
        gbc.setState(0x38b9, 0x678, 0xe30, 0xc377, 0x1d95, 0xe810, 0x0, 0x0);
        gbc.writeMem(0x38b9, { 0x92 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x38ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0080
        gbc.setState(0x3ef1, 0x118e, 0x3dd0, 0xab63, 0x7454, 0x7bca, 0x1, 0x1);
        gbc.writeMem(0x3ef1, { 0x92 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x118e, gbc.sp());
        EXPECT(0x3ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0081
        gbc.setState(0x941e, 0x5bab, 0x79b0, 0xbd92, 0x30af, 0xe7e6, 0x1, 0x0);
        gbc.writeMem(0x941e, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x941f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x941e));
        // 92 0082
        gbc.setState(0xc51f, 0xace9, 0x960, 0x17c3, 0xbaee, 0x5817, 0x0, 0x1);
        gbc.writeMem(0xc51f, { 0x92 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xace9, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc51f));
        // 92 0085
        gbc.setState(0x8d7d, 0xeb5, 0xa7a0, 0xe24, 0x6f13, 0x3f5f, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x92 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeb5, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8d7d));
        // 92 0086
        gbc.setState(0xa80a, 0x67c9, 0x8350, 0x7faf, 0x3a19, 0xe64, 0x1, 0x1);
        gbc.writeMem(0xa80a, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0xa80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa80a));
        // 92 0087
        gbc.setState(0x762d, 0x9285, 0xf360, 0x5a8c, 0x5b02, 0xe830, 0x0, 0x0);
        gbc.writeMem(0x762d, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9285, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0088
        gbc.setState(0x4dea, 0x8450, 0x6010, 0xe773, 0x441f, 0xf0f5, 0x0, 0x1);
        gbc.writeMem(0x4dea, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8450, gbc.sp());
        EXPECT(0x4deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0089
        gbc.setState(0xafbd, 0xde07, 0x72d0, 0x21f1, 0xc71d, 0xe20f, 0x0, 0x0);
        gbc.writeMem(0xafbd, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0xafbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xafbd));
        // 92 008A
        gbc.setState(0x5dfa, 0x4454, 0xd9a0, 0xea45, 0x1297, 0x4e47, 0x1, 0x1);
        gbc.writeMem(0x5dfa, { 0x92 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 008B
        gbc.setState(0xe780, 0x3d91, 0x50c0, 0x368, 0xe84f, 0xa06c, 0x0, 0x1);
        gbc.writeMem(0xe780, { 0x92 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d91, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe780));
        // 92 008C
        gbc.setState(0x27ac, 0xc14e, 0x3a50, 0xcf85, 0x5f73, 0x17cc, 0x1, 0x1);
        gbc.writeMem(0x27ac, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc14e, gbc.sp());
        EXPECT(0x27ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 008D
        gbc.setState(0x5bd5, 0xabe8, 0x8e30, 0xcc78, 0x3de9, 0x1e4c, 0x0, 0x0);
        gbc.writeMem(0x5bd5, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xabe8, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 008E
        gbc.setState(0xc75f, 0x8b32, 0xa70, 0x7af5, 0x4691, 0xe8c6, 0x0, 0x0);
        gbc.writeMem(0xc75f, { 0x92 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc75f));
        // 92 008F
        gbc.setState(0x71b, 0x2af5, 0x7440, 0x82c4, 0xecc6, 0xe523, 0x0, 0x1);
        gbc.writeMem(0x71b, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2af5, gbc.sp());
        EXPECT(0x71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0091
        gbc.setState(0x6e38, 0x7f7a, 0x73a0, 0x537a, 0x711e, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x6e38, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7f7a, gbc.sp());
        EXPECT(0x6e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0092
        gbc.setState(0xcc94, 0xe993, 0x3a10, 0x7103, 0x9fde, 0x7f59, 0x1, 0x1);
        gbc.writeMem(0xcc94, { 0x92 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0xcc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcc94));
        // 92 0093
        gbc.setState(0x8355, 0xfc0f, 0x5c10, 0x485a, 0x699a, 0xc305, 0x0, 0x1);
        gbc.writeMem(0x8355, { 0x92 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfc0f, gbc.sp());
        EXPECT(0x8356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8355));
        // 92 0094
        gbc.setState(0x9784, 0x23a, 0xfb90, 0x8d99, 0x422d, 0xd1dc, 0x0, 0x0);
        gbc.writeMem(0x9784, { 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23a, gbc.sp());
        EXPECT(0x9785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9784));
        // 92 0095
        gbc.setState(0xd14d, 0xe7d4, 0xb010, 0x8635, 0xd50d, 0xbf77, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd14d));
        // 92 0096
        gbc.setState(0x894d, 0xbd42, 0x1f0, 0x4938, 0xc573, 0xac37, 0x1, 0x0);
        gbc.writeMem(0x894d, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd42, gbc.sp());
        EXPECT(0x894e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x894d));
        // 92 0097
        gbc.setState(0xd807, 0x2734, 0x4e70, 0x1ec6, 0x7033, 0xcbb5, 0x1, 0x1);
        gbc.writeMem(0xd807, { 0x92 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2734, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd807));
        // 92 0098
        gbc.setState(0xe20f, 0x2213, 0x29c0, 0xb2b0, 0x4b4, 0xf085, 0x1, 0x1);
        gbc.writeMem(0xe20f, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2213, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe20f));
        // 92 0099
        gbc.setState(0x6e88, 0xb7c6, 0x8390, 0x7c5a, 0x4077, 0x840d, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0x92 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0x6e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 009A
        gbc.setState(0x1174, 0x94dc, 0x5ec0, 0x832e, 0x1bec, 0x8c83, 0x1, 0x0);
        gbc.writeMem(0x1174, { 0x92 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x94dc, gbc.sp());
        EXPECT(0x1175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 009B
        gbc.setState(0xa73f, 0x53aa, 0x53b0, 0x9ab7, 0xfadd, 0x2a30, 0x0, 0x0);
        gbc.writeMem(0xa73f, { 0x92 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0xa740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa73f));
        // 92 009C
        gbc.setState(0xa4d6, 0x61ab, 0x5790, 0xba5c, 0xdb75, 0x1ea3, 0x0, 0x0);
        gbc.writeMem(0xa4d6, { 0x92 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa4d6));
        // 92 009E
        gbc.setState(0x5c63, 0x163b, 0xfe00, 0xfff, 0x895f, 0x8056, 0x1, 0x0);
        gbc.writeMem(0x5c63, { 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x163b, gbc.sp());
        EXPECT(0x5c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 009F
        gbc.setState(0x544d, 0xe4ea, 0xb910, 0x9b2e, 0x87de, 0x2d1, 0x0, 0x1);
        gbc.writeMem(0x544d, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe4ea, gbc.sp());
        EXPECT(0x544e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00A0
        gbc.setState(0x45c2, 0xced9, 0xa040, 0x1c2a, 0xdee3, 0x5edc, 0x1, 0x0);
        gbc.writeMem(0x45c2, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xced9, gbc.sp());
        EXPECT(0x45c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00A2
        gbc.setState(0x65fc, 0xac86, 0x3190, 0xd9e1, 0x6280, 0x7e09, 0x0, 0x0);
        gbc.writeMem(0x65fc, { 0x92 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00A3
        gbc.setState(0xba4e, 0xc656, 0x5480, 0x32a3, 0xb6c9, 0xcc33, 0x1, 0x0);
        gbc.writeMem(0xba4e, { 0x92 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc656, gbc.sp());
        EXPECT(0xba4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba4e));
        // 92 00A4
        gbc.setState(0x219a, 0x12b, 0x7360, 0xeff6, 0xf0c, 0x4414, 0x1, 0x1);
        gbc.writeMem(0x219a, { 0x92 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00A5
        gbc.setState(0x3aed, 0x649, 0xb760, 0xcde9, 0xe6be, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x3aed, { 0x92 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00A6
        gbc.setState(0xb0b6, 0x7d09, 0x1d00, 0x84a9, 0x66dc, 0x9b83, 0x1, 0x1);
        gbc.writeMem(0xb0b6, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7d09, gbc.sp());
        EXPECT(0xb0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb0b6));
        // 92 00A7
        gbc.setState(0x8f43, 0x749, 0xbb80, 0xd7a3, 0x5b5c, 0xebcc, 0x0, 0x0);
        gbc.writeMem(0x8f43, { 0x92 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0x8f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f43));
        // 92 00A8
        gbc.setState(0xe2fb, 0x1269, 0x8640, 0x160e, 0x1883, 0x44a7, 0x1, 0x1);
        gbc.writeMem(0xe2fb, { 0x92 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0xe2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe2fb));
        // 92 00A9
        gbc.setState(0xad7f, 0x25fe, 0x2b60, 0xd36e, 0xa5ae, 0xc82e, 0x1, 0x0);
        gbc.writeMem(0xad7f, { 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xad7f));
        // 92 00AA
        gbc.setState(0xc114, 0xc778, 0x9c00, 0xad2c, 0x3301, 0x647f, 0x0, 0x0);
        gbc.writeMem(0xc114, { 0x92 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc114));
        // 92 00AB
        gbc.setState(0xa915, 0x9159, 0x58c0, 0xefe4, 0x4ad4, 0xea98, 0x0, 0x1);
        gbc.writeMem(0xa915, { 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa915));
        // 92 00AC
        gbc.setState(0x2bdf, 0x1063, 0x2cd0, 0xe234, 0xf1a3, 0xc073, 0x1, 0x0);
        gbc.writeMem(0x2bdf, { 0x92 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00AD
        gbc.setState(0x72ba, 0xb65e, 0xb630, 0x9a4c, 0xce2b, 0x5b2c, 0x0, 0x1);
        gbc.writeMem(0x72ba, { 0x92 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb65e, gbc.sp());
        EXPECT(0x72bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00AE
        gbc.setState(0x1e34, 0xa7c1, 0x22d0, 0xe99a, 0x6da4, 0x6136, 0x0, 0x0);
        gbc.writeMem(0x1e34, { 0x92 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa7c1, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00AF
        gbc.setState(0x8977, 0x601c, 0x2a00, 0xf65d, 0x8be9, 0xcd73, 0x0, 0x1);
        gbc.writeMem(0x8977, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8977));
        // 92 00B0
        gbc.setState(0x814, 0xb1b2, 0x68c0, 0x3742, 0x1722, 0x8087, 0x0, 0x0);
        gbc.writeMem(0x814, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00B1
        gbc.setState(0x48cd, 0x2733, 0xfee0, 0xf4f8, 0xe314, 0xcb8f, 0x0, 0x0);
        gbc.writeMem(0x48cd, { 0x92 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2733, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00B2
        gbc.setState(0xd11e, 0x60fd, 0x70c0, 0x8d7, 0xe07e, 0x8ee6, 0x1, 0x1);
        gbc.writeMem(0xd11e, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x60fd, gbc.sp());
        EXPECT(0xd11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd11e));
        // 92 00B3
        gbc.setState(0x945f, 0x1a94, 0xaf10, 0xd38d, 0xf5d3, 0x4a9f, 0x1, 0x1);
        gbc.writeMem(0x945f, { 0x92 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x945f));
        // 92 00B4
        gbc.setState(0xdbac, 0x42dc, 0xb3a0, 0x749, 0x7900, 0xff93, 0x1, 0x0);
        gbc.writeMem(0xdbac, { 0x92 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x42dc, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdbac));
        // 92 00B5
        gbc.setState(0x6f19, 0x951c, 0xf570, 0x825e, 0xd765, 0xf8de, 0x0, 0x1);
        gbc.writeMem(0x6f19, { 0x92 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00B6
        gbc.setState(0x4eef, 0xd856, 0x2910, 0x9755, 0xa187, 0xd2ee, 0x0, 0x0);
        gbc.writeMem(0x4eef, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00B7
        gbc.setState(0x3d8d, 0xfc4, 0x86c0, 0xbc70, 0xb13b, 0xd826, 0x0, 0x1);
        gbc.writeMem(0x3d8d, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00B8
        gbc.setState(0x172d, 0xa95f, 0x2710, 0xc607, 0x7b31, 0xc267, 0x0, 0x1);
        gbc.writeMem(0x172d, { 0x92 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00B9
        gbc.setState(0x9136, 0xb00c, 0x8000, 0x5bc6, 0xa6c4, 0x48d8, 0x1, 0x0);
        gbc.writeMem(0x9136, { 0x92 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb00c, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9136));
        // 92 00BA
        gbc.setState(0x573e, 0x87b4, 0x8ed0, 0x5b67, 0x7202, 0x3561, 0x0, 0x0);
        gbc.writeMem(0x573e, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x87b4, gbc.sp());
        EXPECT(0x573f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00BB
        gbc.setState(0x4238, 0xe7a2, 0x60c0, 0xfb56, 0xdeb5, 0x6176, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00BE
        gbc.setState(0xa2f5, 0x768a, 0x1110, 0xa043, 0x2bfd, 0x159e, 0x1, 0x0);
        gbc.writeMem(0xa2f5, { 0x92 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x768a, gbc.sp());
        EXPECT(0xa2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa2f5));
        // 92 00BF
        gbc.setState(0x7331, 0x31a6, 0xc540, 0x1ee2, 0x2f2e, 0xd2e3, 0x0, 0x1);
        gbc.writeMem(0x7331, { 0x92 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x31a6, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00C0
        gbc.setState(0xab2e, 0x9c62, 0xf220, 0x634a, 0x6290, 0xca41, 0x0, 0x0);
        gbc.writeMem(0xab2e, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xab2e));
        // 92 00C1
        gbc.setState(0xd2cd, 0x6a12, 0x9e70, 0x89c3, 0x6cb3, 0x480, 0x0, 0x1);
        gbc.writeMem(0xd2cd, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd2cd));
        // 92 00C4
        gbc.setState(0x5626, 0x20c3, 0xb6c0, 0x8756, 0x7a1c, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0x5626, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0x5627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00C5
        gbc.setState(0x5372, 0xab81, 0x62a0, 0xacc0, 0xcce9, 0x3fb7, 0x1, 0x0);
        gbc.writeMem(0x5372, { 0x92 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xab81, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00C6
        gbc.setState(0xe191, 0xf23f, 0x4be0, 0x9e40, 0x120f, 0xc29, 0x0, 0x1);
        gbc.writeMem(0xe191, { 0x92 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf23f, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe191));
        // 92 00C7
        gbc.setState(0xc25d, 0xc60b, 0x5290, 0x12a4, 0xecdc, 0x5d3c, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0x92 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc60b, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc25d));
        // 92 00C8
        gbc.setState(0x4381, 0xe683, 0x150, 0x85c8, 0x13c9, 0xb70f, 0x1, 0x1);
        gbc.writeMem(0x4381, { 0x92 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe683, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00C9
        gbc.setState(0xcdd4, 0x1c6e, 0x1220, 0xd24c, 0xa8ed, 0x8a06, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0x92 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1c6e, gbc.sp());
        EXPECT(0xcdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcdd4));
        // 92 00CA
        gbc.setState(0x676a, 0xb6d9, 0xb7e0, 0x5f45, 0x3ae5, 0xe99, 0x1, 0x0);
        gbc.writeMem(0x676a, { 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0x676b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00CB
        gbc.setState(0x93b3, 0xcef5, 0x8bd0, 0xb58f, 0x3e62, 0xedd9, 0x0, 0x0);
        gbc.writeMem(0x93b3, { 0x92 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0x93b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x93b3));
        // 92 00CC
        gbc.setState(0xe4ed, 0x1381, 0x4f60, 0xab7b, 0x336d, 0x2bfe, 0x0, 0x1);
        gbc.writeMem(0xe4ed, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0xe4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe4ed));
        // 92 00CD
        gbc.setState(0x1f0c, 0x411b, 0xd360, 0x4843, 0x8789, 0x2992, 0x0, 0x0);
        gbc.writeMem(0x1f0c, { 0x92 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x411b, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00CE
        gbc.setState(0x972c, 0xbfd, 0xb5c0, 0x5690, 0x3160, 0xe80d, 0x1, 0x1);
        gbc.writeMem(0x972c, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbfd, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x972c));
        // 92 00CF
        gbc.setState(0x8681, 0x6318, 0xc4d0, 0x1dfc, 0xdd46, 0x1dd, 0x0, 0x1);
        gbc.writeMem(0x8681, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8681));
        // 92 00D0
        gbc.setState(0x2cc8, 0xdf5, 0xf950, 0xcce2, 0x11c1, 0xa02b, 0x0, 0x1);
        gbc.writeMem(0x2cc8, { 0x92 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00D1
        gbc.setState(0x2217, 0x478a, 0x3ab0, 0xb665, 0x16d8, 0x4fea, 0x1, 0x1);
        gbc.writeMem(0x2217, { 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0x2218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00D2
        gbc.setState(0x6402, 0xb8bf, 0x8b60, 0xac1, 0xcbc9, 0xce06, 0x0, 0x1);
        gbc.writeMem(0x6402, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb8bf, gbc.sp());
        EXPECT(0x6403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00D3
        gbc.setState(0x9a13, 0x8a22, 0x3770, 0x639c, 0x976b, 0x76a4, 0x1, 0x0);
        gbc.writeMem(0x9a13, { 0x92 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8a22, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a13));
        // 92 00D4
        gbc.setState(0xa870, 0xed0a, 0x4940, 0xc88b, 0xb116, 0x4638, 0x0, 0x0);
        gbc.writeMem(0xa870, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa870));
        // 92 00D5
        gbc.setState(0x5bb, 0x9252, 0xd130, 0x7114, 0x9800, 0xd7b6, 0x0, 0x1);
        gbc.writeMem(0x5bb, { 0x92 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00D6
        gbc.setState(0x4842, 0x6a6e, 0x2240, 0x608e, 0x951c, 0x632c, 0x1, 0x1);
        gbc.writeMem(0x4842, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a6e, gbc.sp());
        EXPECT(0x4843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00D7
        gbc.setState(0xbed9, 0xa359, 0x8590, 0xb706, 0x6297, 0x9fff, 0x0, 0x1);
        gbc.writeMem(0xbed9, { 0x92 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbed9));
        // 92 00D8
        gbc.setState(0x7a31, 0x7ae3, 0x5140, 0x4e85, 0xb830, 0x2144, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0x92 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00D9
        gbc.setState(0x107, 0xd054, 0xbce0, 0x10c8, 0xb12c, 0x5784, 0x1, 0x0);
        gbc.writeMem(0x107, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd054, gbc.sp());
        EXPECT(0x108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00DA
        gbc.setState(0x664b, 0xdc74, 0x7bf0, 0xe1bc, 0x6e38, 0x5762, 0x1, 0x1);
        gbc.writeMem(0x664b, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0x664c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00DB
        gbc.setState(0x8ec4, 0xa38c, 0xff00, 0xdaef, 0xc29d, 0x3120, 0x1, 0x0);
        gbc.writeMem(0x8ec4, { 0x92 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0x8ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8ec4));
        // 92 00DC
        gbc.setState(0x3e9e, 0xcf4, 0xe8e0, 0x8c80, 0xcc06, 0xa784, 0x1, 0x1);
        gbc.writeMem(0x3e9e, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x3e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00DD
        gbc.setState(0x615d, 0xa7, 0xd400, 0x7a64, 0x35c6, 0x8df6, 0x0, 0x0);
        gbc.writeMem(0x615d, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00DE
        gbc.setState(0x204f, 0x3938, 0x6a60, 0xedc2, 0xf8a, 0x1fe8, 0x1, 0x1);
        gbc.writeMem(0x204f, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x2050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00DF
        gbc.setState(0x95e7, 0x5de4, 0x44c0, 0x7e0d, 0xd371, 0xf728, 0x0, 0x1);
        gbc.writeMem(0x95e7, { 0x92 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0x95e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x95e7));
        // 92 00E0
        gbc.setState(0x9043, 0x4aa5, 0xadc0, 0xbfdc, 0x623a, 0x862c, 0x1, 0x1);
        gbc.writeMem(0x9043, { 0x92 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4aa5, gbc.sp());
        EXPECT(0x9044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9043));
        // 92 00E1
        gbc.setState(0xc744, 0xafa8, 0x3ef0, 0xa64f, 0x7afa, 0x9c83, 0x1, 0x0);
        gbc.writeMem(0xc744, { 0x92 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc744));
        // 92 00E2
        gbc.setState(0xe0c6, 0x409d, 0x1cd0, 0xa5e9, 0x73fc, 0xc26c, 0x1, 0x1);
        gbc.writeMem(0xe0c6, { 0x92 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0xe0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe0c6));
        // 92 00E3
        gbc.setState(0x149b, 0xb9fb, 0xb2c0, 0xbbc5, 0xb266, 0x5683, 0x0, 0x0);
        gbc.writeMem(0x149b, { 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00E4
        gbc.setState(0x1f20, 0xb57d, 0x2700, 0x3ffe, 0xd110, 0x9bf7, 0x0, 0x0);
        gbc.writeMem(0x1f20, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb57d, gbc.sp());
        EXPECT(0x1f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00E5
        gbc.setState(0x7a4, 0x9350, 0x22f0, 0x406b, 0x7f07, 0x5a85, 0x0, 0x1);
        gbc.writeMem(0x7a4, { 0x92 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0x7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00E6
        gbc.setState(0xa6a, 0x62d0, 0x6f70, 0xce0e, 0xfaf, 0x6983, 0x1, 0x0);
        gbc.writeMem(0xa6a, { 0x92 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x62d0, gbc.sp());
        EXPECT(0xa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00E8
        gbc.setState(0x426b, 0x2dc2, 0xf980, 0x4810, 0xd5dd, 0xac21, 0x1, 0x0);
        gbc.writeMem(0x426b, { 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2dc2, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00E9
        gbc.setState(0xe706, 0x5bde, 0x6520, 0xcbcb, 0x8741, 0x2b1d, 0x0, 0x1);
        gbc.writeMem(0xe706, { 0x92 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5bde, gbc.sp());
        EXPECT(0xe707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe706));
        // 92 00EA
        gbc.setState(0xc993, 0x2b2c, 0xc3c0, 0x36d8, 0x7363, 0x2173, 0x0, 0x1);
        gbc.writeMem(0xc993, { 0x92 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2b2c, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc993));
        // 92 00EB
        gbc.setState(0xd911, 0x9976, 0x3320, 0x8495, 0x708c, 0xc49, 0x0, 0x1);
        gbc.writeMem(0xd911, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd911));
        // 92 00EC
        gbc.setState(0x2ea0, 0x9489, 0xcbd0, 0x314c, 0x1eb, 0x2581, 0x1, 0x0);
        gbc.writeMem(0x2ea0, { 0x92 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9489, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00ED
        gbc.setState(0x3e5a, 0xf9b9, 0x39c0, 0xb49a, 0x125d, 0xb056, 0x0, 0x1);
        gbc.writeMem(0x3e5a, { 0x92 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x3e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00EF
        gbc.setState(0x68e, 0x9a42, 0x9a10, 0x1771, 0xb54b, 0xf564, 0x0, 0x0);
        gbc.writeMem(0x68e, { 0x92 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00F0
        gbc.setState(0xed1f, 0xea3e, 0xdb90, 0x7098, 0x9f28, 0x8fbc, 0x1, 0x1);
        gbc.writeMem(0xed1f, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0xed20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xed1f));
        // 92 00F1
        gbc.setState(0x4a59, 0xbb15, 0xf790, 0xd835, 0x40d5, 0xf731, 0x1, 0x0);
        gbc.writeMem(0x4a59, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00F2
        gbc.setState(0x5d98, 0x399c, 0xd6d0, 0x56f2, 0xe164, 0x637c, 0x0, 0x0);
        gbc.writeMem(0x5d98, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x399c, gbc.sp());
        EXPECT(0x5d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00F4
        gbc.setState(0x8179, 0x8343, 0x3970, 0xd78d, 0x770b, 0x756c, 0x1, 0x1);
        gbc.writeMem(0x8179, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8343, gbc.sp());
        EXPECT(0x817a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8179));
        // 92 00F5
        gbc.setState(0xcb7f, 0x7ce6, 0x4330, 0x372f, 0xba87, 0x611c, 0x1, 0x1);
        gbc.writeMem(0xcb7f, { 0x92 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7ce6, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcb7f));
        // 92 00F6
        gbc.setState(0x22c3, 0x8b15, 0xe8c0, 0x7ef2, 0x406f, 0xa40e, 0x1, 0x1);
        gbc.writeMem(0x22c3, { 0x92 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00F7
        gbc.setState(0x523c, 0x1492, 0xdd10, 0x94bc, 0xdefb, 0x3cc4, 0x0, 0x1);
        gbc.writeMem(0x523c, { 0x92 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1492, gbc.sp());
        EXPECT(0x523d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00F8
        gbc.setState(0x70b7, 0xf5f5, 0x4090, 0x4e2b, 0x1b97, 0x947, 0x0, 0x1);
        gbc.writeMem(0x70b7, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00F9
        gbc.setState(0xd656, 0x3a08, 0x8b90, 0x687b, 0x7cb8, 0xd334, 0x1, 0x1);
        gbc.writeMem(0xd656, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0xd657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd656));
        // 92 00FA
        gbc.setState(0xd9d4, 0x9625, 0xc480, 0xe011, 0x7d54, 0x6d6f, 0x0, 0x0);
        gbc.writeMem(0xd9d4, { 0x92 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9d4));
        // 92 00FB
        gbc.setState(0x6c21, 0xb53, 0x28f0, 0xaa0d, 0x4d80, 0xa273, 0x1, 0x1);
        gbc.writeMem(0x6c21, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x6c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00FC
        gbc.setState(0x4f23, 0xc105, 0x2ab0, 0x91b7, 0x40b5, 0x1f0, 0x0, 0x0);
        gbc.writeMem(0x4f23, { 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc105, gbc.sp());
        EXPECT(0x4f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 00FD
        gbc.setState(0x649f, 0xdb63, 0xe800, 0xb3b9, 0x7d80, 0x1d10, 0x1, 0x1);
        gbc.writeMem(0x649f, { 0x92 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdb63, gbc.sp());
        EXPECT(0x64a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 00FE
        gbc.setState(0xe632, 0x91ea, 0x4d0, 0x8636, 0x27cd, 0xadad, 0x1, 0x1);
        gbc.writeMem(0xe632, { 0x92 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x91ea, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe632));
        // 92 00FF
        gbc.setState(0x9781, 0x68cd, 0xdf0, 0x7b2d, 0x771c, 0xe9d9, 0x1, 0x1);
        gbc.writeMem(0x9781, { 0x92 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9781));
        // 92 0100
        gbc.setState(0x87ff, 0x5e21, 0x580, 0xa9b0, 0x8f73, 0x914a, 0x1, 0x0);
        gbc.writeMem(0x87ff, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x8800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x87ff));
        // 92 0101
        gbc.setState(0xbef8, 0x3439, 0x0, 0x7ce0, 0xfda5, 0x5605, 0x0, 0x0);
        gbc.writeMem(0xbef8, { 0x92 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3439, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbef8));
        // 92 0102
        gbc.setState(0xd5a2, 0x42b2, 0xb1f0, 0xac6f, 0x5a95, 0x30f6, 0x1, 0x1);
        gbc.writeMem(0xd5a2, { 0x92 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0xd5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd5a2));
        // 92 0103
        gbc.setState(0xec30, 0xd5da, 0x88f0, 0x6b26, 0x6891, 0xa79b, 0x0, 0x1);
        gbc.writeMem(0xec30, { 0x92 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd5da, gbc.sp());
        EXPECT(0xec31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xec30));
        // 92 0104
        gbc.setState(0x16cf, 0x4e41, 0x6f0, 0xc89f, 0xfcec, 0x690f, 0x0, 0x1);
        gbc.writeMem(0x16cf, { 0x92 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4e41, gbc.sp());
        EXPECT(0x16d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0105
        gbc.setState(0x6209, 0xbc86, 0xa9c0, 0x9fa4, 0xa236, 0xc17c, 0x0, 0x0);
        gbc.writeMem(0x6209, { 0x92 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbc86, gbc.sp());
        EXPECT(0x620a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0106
        gbc.setState(0x5f05, 0x49b7, 0x5180, 0xe8a3, 0x9ec1, 0x5251, 0x0, 0x1);
        gbc.writeMem(0x5f05, { 0x92 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0107
        gbc.setState(0xb05, 0x968f, 0x7030, 0x3b42, 0xa26c, 0x9519, 0x1, 0x0);
        gbc.writeMem(0xb05, { 0x92 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x968f, gbc.sp());
        EXPECT(0xb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0108
        gbc.setState(0x8a68, 0x3974, 0xac60, 0xd20, 0x5701, 0x2278, 0x0, 0x0);
        gbc.writeMem(0x8a68, { 0x92 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3974, gbc.sp());
        EXPECT(0x8a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8a68));
        // 92 0109
        gbc.setState(0x1194, 0x570b, 0x8180, 0x7cd0, 0x67c3, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0x1194, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x1195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 010A
        gbc.setState(0x11e7, 0x458, 0x7430, 0x8b18, 0xef4e, 0xe48f, 0x0, 0x0);
        gbc.writeMem(0x11e7, { 0x92 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 010B
        gbc.setState(0x3208, 0x9d66, 0xf170, 0xb510, 0x318f, 0x9ac3, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9d66, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 010C
        gbc.setState(0xdc56, 0xbaab, 0x2490, 0x9126, 0x4b42, 0x2093, 0x0, 0x0);
        gbc.writeMem(0xdc56, { 0x92 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdc56));
        // 92 010D
        gbc.setState(0x719c, 0x519e, 0x81b0, 0x45fe, 0x91a9, 0xed36, 0x1, 0x1);
        gbc.writeMem(0x719c, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x519e, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 010E
        gbc.setState(0x69d0, 0xfaca, 0x4390, 0x9216, 0xd3e, 0xfd6e, 0x0, 0x0);
        gbc.writeMem(0x69d0, { 0x92 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfaca, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 010F
        gbc.setState(0x6818, 0x8757, 0xe20, 0x5cbb, 0xb244, 0x1bb9, 0x1, 0x0);
        gbc.writeMem(0x6818, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8757, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0110
        gbc.setState(0x624c, 0x64b5, 0x4bb0, 0x32ce, 0x8a6d, 0x896e, 0x1, 0x1);
        gbc.writeMem(0x624c, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0111
        gbc.setState(0x1b45, 0x2002, 0x570, 0x69d4, 0xc46, 0x5ff4, 0x0, 0x1);
        gbc.writeMem(0x1b45, { 0x92 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2002, gbc.sp());
        EXPECT(0x1b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0112
        gbc.setState(0xb9e9, 0x504e, 0xa010, 0x7e39, 0x6f88, 0x5058, 0x1, 0x1);
        gbc.writeMem(0xb9e9, { 0x92 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x504e, gbc.sp());
        EXPECT(0xb9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb9e9));
        // 92 0113
        gbc.setState(0xdb71, 0xe341, 0x7700, 0x2b6c, 0xa451, 0x1687, 0x0, 0x1);
        gbc.writeMem(0xdb71, { 0x92 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe341, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdb71));
        // 92 0114
        gbc.setState(0xc784, 0x8290, 0xbdc0, 0x6341, 0x3388, 0x5c12, 0x1, 0x1);
        gbc.writeMem(0xc784, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc784));
        // 92 0115
        gbc.setState(0x3f37, 0x8805, 0x7200, 0x3901, 0xee63, 0x958a, 0x0, 0x1);
        gbc.writeMem(0x3f37, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8805, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0116
        gbc.setState(0xa3aa, 0x9967, 0xb680, 0xb4be, 0x7fb1, 0x4a2a, 0x0, 0x1);
        gbc.writeMem(0xa3aa, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa3aa));
        // 92 0117
        gbc.setState(0xdfe3, 0x27de, 0x7dc0, 0xa86, 0x641, 0x3dff, 0x0, 0x1);
        gbc.writeMem(0xdfe3, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x27de, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdfe3));
        // 92 0118
        gbc.setState(0x5940, 0x6a92, 0x22b0, 0xa6, 0x7a1d, 0x5dfc, 0x0, 0x0);
        gbc.writeMem(0x5940, { 0x92 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6a92, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0119
        gbc.setState(0x3b23, 0x4d99, 0xb600, 0x3258, 0xb85b, 0x4b82, 0x1, 0x0);
        gbc.writeMem(0x3b23, { 0x92 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d99, gbc.sp());
        EXPECT(0x3b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 011A
        gbc.setState(0x1b56, 0x45fa, 0xa700, 0xd01b, 0x66e8, 0xa9c7, 0x1, 0x1);
        gbc.writeMem(0x1b56, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0x1b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 011B
        gbc.setState(0x55ba, 0xa6d8, 0x8a80, 0x71b0, 0x461e, 0xb653, 0x1, 0x1);
        gbc.writeMem(0x55ba, { 0x92 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa6d8, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 011C
        gbc.setState(0x8472, 0xdb6b, 0x4760, 0xe350, 0xf54d, 0xd44f, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0x92 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0x8473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8472));
        // 92 011D
        gbc.setState(0xe1a, 0xe194, 0xe6b0, 0xbcae, 0xb792, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0xe1a, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 011E
        gbc.setState(0x9823, 0x6188, 0x2a40, 0x6708, 0x5bd6, 0x579d, 0x1, 0x0);
        gbc.writeMem(0x9823, { 0x92 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0x9824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9823));
        // 92 011F
        gbc.setState(0x2956, 0x2472, 0x370, 0xe21, 0xd470, 0x45a4, 0x0, 0x0);
        gbc.writeMem(0x2956, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0120
        gbc.setState(0x3743, 0xfa05, 0xb5d0, 0x871a, 0xdfe2, 0x69dd, 0x0, 0x0);
        gbc.writeMem(0x3743, { 0x92 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfa05, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0121
        gbc.setState(0xcf5f, 0xff1e, 0xf590, 0x8bbf, 0x5953, 0xe515, 0x1, 0x1);
        gbc.writeMem(0xcf5f, { 0x92 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0xcf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcf5f));
        // 92 0122
        gbc.setState(0x8f94, 0x5662, 0xe4e0, 0x723c, 0x5e52, 0xb05f, 0x1, 0x0);
        gbc.writeMem(0x8f94, { 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5662, gbc.sp());
        EXPECT(0x8f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f94));
        // 92 0123
        gbc.setState(0x94ed, 0x97df, 0x3740, 0xcf5a, 0xd566, 0x45bc, 0x1, 0x0);
        gbc.writeMem(0x94ed, { 0x92 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x94ed));
        // 92 0124
        gbc.setState(0x2e1d, 0x896c, 0x5c70, 0xeb67, 0x91f1, 0xcd13, 0x0, 0x0);
        gbc.writeMem(0x2e1d, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x896c, gbc.sp());
        EXPECT(0x2e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0125
        gbc.setState(0x1cd2, 0x2eab, 0x8b60, 0x1266, 0x3b13, 0xf287, 0x1, 0x0);
        gbc.writeMem(0x1cd2, { 0x92 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0126
        gbc.setState(0x2ab5, 0xa9c2, 0x61e0, 0xefa2, 0xf142, 0x7227, 0x0, 0x1);
        gbc.writeMem(0x2ab5, { 0x92 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa9c2, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0127
        gbc.setState(0x86d5, 0xb94b, 0xb6a0, 0x3b56, 0x3ddd, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x86d5, { 0x92 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x86d5));
        // 92 0128
        gbc.setState(0x826e, 0xf17c, 0x72d0, 0x590, 0x75b9, 0xa65a, 0x0, 0x1);
        gbc.writeMem(0x826e, { 0x92 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x826e));
        // 92 0129
        gbc.setState(0x7c5e, 0x4ef3, 0xd6c0, 0x90b7, 0xf5f5, 0xc58c, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x7c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 012A
        gbc.setState(0xa82c, 0x9136, 0xc170, 0xde70, 0x6006, 0xd071, 0x1, 0x0);
        gbc.writeMem(0xa82c, { 0x92 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9136, gbc.sp());
        EXPECT(0xa82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa82c));
        // 92 012B
        gbc.setState(0x8a91, 0x2686, 0xb340, 0x198e, 0x4105, 0x7d2e, 0x1, 0x1);
        gbc.writeMem(0x8a91, { 0x92 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8a91));
        // 92 012C
        gbc.setState(0xa8b5, 0x6939, 0xc090, 0x3ec9, 0xabf8, 0x259f, 0x1, 0x0);
        gbc.writeMem(0xa8b5, { 0x92 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6939, gbc.sp());
        EXPECT(0xa8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa8b5));
        // 92 012D
        gbc.setState(0x7dd7, 0xd755, 0x2620, 0x927d, 0xe44f, 0x4218, 0x0, 0x1);
        gbc.writeMem(0x7dd7, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x7dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 012E
        gbc.setState(0x2e73, 0x5e75, 0x61a0, 0x67b2, 0x9e06, 0x3415, 0x1, 0x1);
        gbc.writeMem(0x2e73, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x2e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 012F
        gbc.setState(0x28ea, 0x2290, 0x2280, 0xfb50, 0xccf4, 0x1243, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0130
        gbc.setState(0x96a9, 0xd22, 0x7930, 0x30b, 0xb785, 0xd55e, 0x1, 0x0);
        gbc.writeMem(0x96a9, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x96a9));
        // 92 0131
        gbc.setState(0x397b, 0x3ba5, 0x4f0, 0xc8ba, 0xaa9a, 0xa740, 0x1, 0x1);
        gbc.writeMem(0x397b, { 0x92 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3ba5, gbc.sp());
        EXPECT(0x397c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0132
        gbc.setState(0x1826, 0x60bf, 0x7af0, 0xb27c, 0x4d91, 0xb793, 0x1, 0x0);
        gbc.writeMem(0x1826, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x1827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0133
        gbc.setState(0xd05a, 0x7188, 0xcff0, 0x29cc, 0x4b9d, 0x25af, 0x1, 0x0);
        gbc.writeMem(0xd05a, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7188, gbc.sp());
        EXPECT(0xd05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd05a));
        // 92 0134
        gbc.setState(0x774, 0x6f2a, 0xd120, 0x16c0, 0x7516, 0x7cef, 0x0, 0x1);
        gbc.writeMem(0x774, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6f2a, gbc.sp());
        EXPECT(0x775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0135
        gbc.setState(0xab2e, 0xb472, 0x7440, 0xc97f, 0x6df0, 0x4739, 0x0, 0x0);
        gbc.writeMem(0xab2e, { 0x92 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb472, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xab2e));
        // 92 0137
        gbc.setState(0x4685, 0xea78, 0x620, 0xe18a, 0x4ee2, 0x2f40, 0x0, 0x1);
        gbc.writeMem(0x4685, { 0x92 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xea78, gbc.sp());
        EXPECT(0x4686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0138
        gbc.setState(0x36f9, 0xbc1c, 0x1520, 0x4730, 0xd249, 0x7c52, 0x0, 0x1);
        gbc.writeMem(0x36f9, { 0x92 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0x36fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 013A
        gbc.setState(0xd7f1, 0x4fdd, 0x2500, 0xa525, 0x7c6, 0x2098, 0x0, 0x0);
        gbc.writeMem(0xd7f1, { 0x92 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4fdd, gbc.sp());
        EXPECT(0xd7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd7f1));
        // 92 013B
        gbc.setState(0x585a, 0x4b29, 0xa720, 0x1095, 0x9837, 0x610d, 0x1, 0x0);
        gbc.writeMem(0x585a, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0x585b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 013C
        gbc.setState(0xd044, 0x1c1b, 0x8510, 0xa974, 0x940f, 0x71a8, 0x0, 0x0);
        gbc.writeMem(0xd044, { 0x92 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd044));
        // 92 013D
        gbc.setState(0x7393, 0xe2e9, 0x220, 0x50f7, 0xbbad, 0x9c43, 0x0, 0x1);
        gbc.writeMem(0x7393, { 0x92 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe2e9, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 013E
        gbc.setState(0x8925, 0xc5d1, 0x4970, 0x945e, 0x3a1, 0x4cb, 0x0, 0x1);
        gbc.writeMem(0x8925, { 0x92 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0x8926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8925));
        // 92 013F
        gbc.setState(0x92c3, 0x4f42, 0x15b0, 0x4775, 0x6af2, 0x4576, 0x1, 0x0);
        gbc.writeMem(0x92c3, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x92c3));
        // 92 0140
        gbc.setState(0x634, 0xe2ec, 0x4170, 0xc4c0, 0x119f, 0xc7d2, 0x1, 0x0);
        gbc.writeMem(0x634, { 0x92 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe2ec, gbc.sp());
        EXPECT(0x635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0141
        gbc.setState(0x273b, 0xf5ce, 0x53a0, 0x165d, 0x9876, 0x8ddb, 0x1, 0x0);
        gbc.writeMem(0x273b, { 0x92 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5ce, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0142
        gbc.setState(0x911c, 0xe7ac, 0x2250, 0xc63d, 0xb8a6, 0x7e9, 0x1, 0x1);
        gbc.writeMem(0x911c, { 0x92 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0x911d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x911c));
        // 92 0143
        gbc.setState(0x41eb, 0x2344, 0x44c0, 0x553d, 0xb3fb, 0x5929, 0x0, 0x1);
        gbc.writeMem(0x41eb, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2344, gbc.sp());
        EXPECT(0x41ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0144
        gbc.setState(0xcb6c, 0xf916, 0xe5d0, 0xc669, 0x5c02, 0xcdd4, 0x1, 0x1);
        gbc.writeMem(0xcb6c, { 0x92 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf916, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcb6c));
        // 92 0145
        gbc.setState(0xd90a, 0xb5c7, 0xdc00, 0xe2de, 0xf776, 0x6dd1, 0x0, 0x0);
        gbc.writeMem(0xd90a, { 0x92 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb5c7, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd90a));
        // 92 0146
        gbc.setState(0x2b7d, 0x2804, 0xefe0, 0x6bf0, 0x576f, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x2b7d, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2804, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0147
        gbc.setState(0x6fdd, 0x779d, 0x7f60, 0xa93d, 0x5d53, 0x67fb, 0x1, 0x0);
        gbc.writeMem(0x6fdd, { 0x92 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0x6fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0148
        gbc.setState(0x9cab, 0x2371, 0x2d50, 0xf6d6, 0x72, 0xedf1, 0x0, 0x1);
        gbc.writeMem(0x9cab, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2371, gbc.sp());
        EXPECT(0x9cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9cab));
        // 92 0149
        gbc.setState(0x75ed, 0x5fec, 0x9db0, 0x27aa, 0xe698, 0x7a0d, 0x1, 0x0);
        gbc.writeMem(0x75ed, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 014A
        gbc.setState(0x33ad, 0xae4, 0xde0, 0x2206, 0xd953, 0x4502, 0x1, 0x1);
        gbc.writeMem(0x33ad, { 0x92 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xae4, gbc.sp());
        EXPECT(0x33ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 014B
        gbc.setState(0x3901, 0xb28f, 0x7f50, 0x6505, 0x5f49, 0xde62, 0x1, 0x1);
        gbc.writeMem(0x3901, { 0x92 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0x3902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 014C
        gbc.setState(0x6040, 0x42a0, 0x1d80, 0xd0a1, 0xb1f8, 0xbc7e, 0x1, 0x0);
        gbc.writeMem(0x6040, { 0x92 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x42a0, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 014D
        gbc.setState(0xcee7, 0xad89, 0x4850, 0x6ef4, 0xc589, 0x7211, 0x1, 0x0);
        gbc.writeMem(0xcee7, { 0x92 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcee7));
        // 92 014E
        gbc.setState(0x9fdd, 0xfcfc, 0x63f0, 0xd758, 0xa36b, 0x20c3, 0x1, 0x1);
        gbc.writeMem(0x9fdd, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x9fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9fdd));
        // 92 014F
        gbc.setState(0x8b0c, 0x4fff, 0x7a0, 0x6d88, 0xc3a8, 0x3d10, 0x1, 0x1);
        gbc.writeMem(0x8b0c, { 0x92 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0x8b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8b0c));
        // 92 0150
        gbc.setState(0xd19d, 0x1a98, 0xbea0, 0xccf8, 0x6c78, 0x7765, 0x0, 0x0);
        gbc.writeMem(0xd19d, { 0x92 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1a98, gbc.sp());
        EXPECT(0xd19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd19d));
        // 92 0151
        gbc.setState(0xeb85, 0x24f1, 0xee30, 0x7479, 0x9f69, 0x84f2, 0x1, 0x0);
        gbc.writeMem(0xeb85, { 0x92 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeb85));
        // 92 0152
        gbc.setState(0xe05f, 0x6023, 0xd780, 0x52cd, 0xd02, 0x511a, 0x0, 0x0);
        gbc.writeMem(0xe05f, { 0x92 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe05f));
        // 92 0153
        gbc.setState(0x70f7, 0xcb3d, 0x7b30, 0xe71d, 0xc5f2, 0x58d3, 0x0, 0x0);
        gbc.writeMem(0x70f7, { 0x92 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0154
        gbc.setState(0xc657, 0xa593, 0xfa60, 0xda05, 0x40a, 0xc004, 0x1, 0x1);
        gbc.writeMem(0xc657, { 0x92 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc657));
        // 92 0155
        gbc.setState(0x525d, 0xe980, 0xd3f0, 0x41e4, 0x1c66, 0x6368, 0x1, 0x0);
        gbc.writeMem(0x525d, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe980, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0156
        gbc.setState(0xb4b8, 0x8fb8, 0x25c0, 0xe2d0, 0x2c78, 0xaa48, 0x1, 0x1);
        gbc.writeMem(0xb4b8, { 0x92 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb4b8));
        // 92 0157
        gbc.setState(0x6af1, 0x9e02, 0x3090, 0x4f0a, 0x7601, 0x8575, 0x0, 0x1);
        gbc.writeMem(0x6af1, { 0x92 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9e02, gbc.sp());
        EXPECT(0x6af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0158
        gbc.setState(0x778, 0x7fce, 0x97e0, 0xeec3, 0x8d1a, 0x2c34, 0x1, 0x0);
        gbc.writeMem(0x778, { 0x92 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7fce, gbc.sp());
        EXPECT(0x779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0159
        gbc.setState(0xcec0, 0xe054, 0xac90, 0x8745, 0x1c9b, 0xa94c, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe054, gbc.sp());
        EXPECT(0xcec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcec0));
        // 92 015A
        gbc.setState(0x5661, 0x6a6c, 0xe6a0, 0xb027, 0xae5b, 0x8a69, 0x0, 0x1);
        gbc.writeMem(0x5661, { 0x92 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6a6c, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 015B
        gbc.setState(0x7d54, 0xb591, 0xb2d0, 0x8175, 0x2b0e, 0x71ec, 0x0, 0x1);
        gbc.writeMem(0x7d54, { 0x92 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0x7d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 015C
        gbc.setState(0xba89, 0xac57, 0x7c60, 0xb596, 0xe502, 0xa8b7, 0x1, 0x0);
        gbc.writeMem(0xba89, { 0x92 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0xba8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba89));
        // 92 015D
        gbc.setState(0x1cbe, 0x2cd4, 0x39d0, 0x8f88, 0xf98c, 0x5479, 0x1, 0x0);
        gbc.writeMem(0x1cbe, { 0x92 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0x1cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 015E
        gbc.setState(0xc638, 0x9fa9, 0x5e90, 0xcc0e, 0x5ba7, 0xf3a2, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0x92 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0xc639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc638));
        // 92 015F
        gbc.setState(0xecf9, 0x2fb1, 0xd7d0, 0x50ac, 0xa872, 0xbe06, 0x1, 0x1);
        gbc.writeMem(0xecf9, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2fb1, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xecf9));
        // 92 0160
        gbc.setState(0xa78c, 0xde1a, 0xcdc0, 0x949d, 0xf8b4, 0x87, 0x0, 0x1);
        gbc.writeMem(0xa78c, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xde1a, gbc.sp());
        EXPECT(0xa78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa78c));
        // 92 0161
        gbc.setState(0x7c4a, 0x8e12, 0x29e0, 0x247a, 0x8458, 0x3007, 0x0, 0x0);
        gbc.writeMem(0x7c4a, { 0x92 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x7c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0162
        gbc.setState(0x6c79, 0x5787, 0x3a40, 0xb0ec, 0xf12b, 0xc1dc, 0x1, 0x1);
        gbc.writeMem(0x6c79, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0163
        gbc.setState(0x168b, 0xfaf1, 0xe340, 0x7765, 0x73b, 0xecdd, 0x0, 0x0);
        gbc.writeMem(0x168b, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfaf1, gbc.sp());
        EXPECT(0x168c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0164
        gbc.setState(0x84c5, 0xc0af, 0x6980, 0x3eb4, 0xba68, 0x2a34, 0x0, 0x0);
        gbc.writeMem(0x84c5, { 0x92 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x84c5));
        // 92 0165
        gbc.setState(0x3db, 0xa0d7, 0x53b0, 0x387f, 0xf5f, 0x6483, 0x1, 0x0);
        gbc.writeMem(0x3db, { 0x92 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0166
        gbc.setState(0x875, 0xb61a, 0x2950, 0xd6af, 0xec9a, 0x847a, 0x1, 0x0);
        gbc.writeMem(0x875, { 0x92 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb61a, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0167
        gbc.setState(0xbe58, 0xfbe0, 0x1e10, 0xfc8c, 0x1bd8, 0xb1a2, 0x0, 0x0);
        gbc.writeMem(0xbe58, { 0x92 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbe58));
        // 92 0168
        gbc.setState(0x486f, 0xdb6, 0xdfa0, 0x4ab8, 0x94f, 0x24c6, 0x0, 0x1);
        gbc.writeMem(0x486f, { 0x92 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0169
        gbc.setState(0xb364, 0x1d23, 0x23d0, 0x4e0e, 0x2b61, 0x15f2, 0x0, 0x1);
        gbc.writeMem(0xb364, { 0x92 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0xb365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb364));
        // 92 016A
        gbc.setState(0x818b, 0x7416, 0x5940, 0x57c3, 0xab6, 0xecf, 0x1, 0x1);
        gbc.writeMem(0x818b, { 0x92 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x818b));
        // 92 016C
        gbc.setState(0x6156, 0xbf2e, 0x5610, 0x1225, 0x7c41, 0x3546, 0x1, 0x0);
        gbc.writeMem(0x6156, { 0x92 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbf2e, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 016D
        gbc.setState(0x870, 0xf6b1, 0xe030, 0x1b28, 0x2721, 0xcf48, 0x1, 0x1);
        gbc.writeMem(0x870, { 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 016E
        gbc.setState(0xbdbc, 0x333b, 0xb230, 0xce06, 0x33bb, 0x5d47, 0x0, 0x0);
        gbc.writeMem(0xbdbc, { 0x92 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0xbdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbdbc));
        // 92 016F
        gbc.setState(0xa645, 0x7541, 0xc1a0, 0x2092, 0x5e47, 0x89e0, 0x1, 0x1);
        gbc.writeMem(0xa645, { 0x92 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0xa646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa645));
        // 92 0170
        gbc.setState(0x7e01, 0xee9a, 0x7ef0, 0x8353, 0xe07b, 0xf0ef, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0x92 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0x7e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0171
        gbc.setState(0x8f6, 0x9cf4, 0x11a0, 0x35af, 0xe209, 0x5708, 0x1, 0x1);
        gbc.writeMem(0x8f6, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0172
        gbc.setState(0x9f88, 0xcb35, 0x1e20, 0x2470, 0x74c2, 0xee34, 0x0, 0x0);
        gbc.writeMem(0x9f88, { 0x92 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x9f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f88));
        // 92 0173
        gbc.setState(0x2431, 0x927b, 0xe620, 0x4da1, 0x5746, 0x646, 0x1, 0x0);
        gbc.writeMem(0x2431, { 0x92 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x927b, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0174
        gbc.setState(0xd87d, 0x7b40, 0x4690, 0x4073, 0x6581, 0xa984, 0x1, 0x0);
        gbc.writeMem(0xd87d, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b40, gbc.sp());
        EXPECT(0xd87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd87d));
        // 92 0175
        gbc.setState(0x9a7d, 0x589a, 0xcd0, 0x7259, 0xea2d, 0xd2dc, 0x1, 0x0);
        gbc.writeMem(0x9a7d, { 0x92 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a7d));
        // 92 0176
        gbc.setState(0x704a, 0xfe13, 0x5e40, 0x6102, 0x7836, 0xb767, 0x1, 0x1);
        gbc.writeMem(0x704a, { 0x92 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0177
        gbc.setState(0x115f, 0x39f7, 0x2e00, 0xacc6, 0x7a53, 0x6025, 0x0, 0x1);
        gbc.writeMem(0x115f, { 0x92 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0178
        gbc.setState(0x2813, 0x3c3f, 0x5c80, 0x6225, 0x618f, 0xbee6, 0x0, 0x0);
        gbc.writeMem(0x2813, { 0x92 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3c3f, gbc.sp());
        EXPECT(0x2814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0179
        gbc.setState(0xc830, 0x249c, 0x93c0, 0x6501, 0xf319, 0x734f, 0x1, 0x1);
        gbc.writeMem(0xc830, { 0x92 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0xc831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc830));
        // 92 017A
        gbc.setState(0x4000, 0x6f2f, 0x87d0, 0xe28d, 0x7a51, 0x9f4d, 0x1, 0x0);
        gbc.writeMem(0x4000, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 017B
        gbc.setState(0xe44, 0x774e, 0xd170, 0x76d7, 0x8c06, 0x862, 0x1, 0x1);
        gbc.writeMem(0xe44, { 0x92 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0xe45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 017D
        gbc.setState(0xdcde, 0x36e1, 0x5480, 0x4ff9, 0x5361, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0xdcde, { 0x92 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x36e1, gbc.sp());
        EXPECT(0xdcdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdcde));
        // 92 017E
        gbc.setState(0x74ad, 0xffe, 0xbd30, 0x391e, 0x59e0, 0x5282, 0x0, 0x1);
        gbc.writeMem(0x74ad, { 0x92 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x74ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 017F
        gbc.setState(0x3ef, 0x21ec, 0x9f70, 0xf98b, 0xc82f, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x3ef, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x21ec, gbc.sp());
        EXPECT(0x3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0180
        gbc.setState(0x988c, 0x3af, 0x9f30, 0x8a77, 0x7c5a, 0x494c, 0x0, 0x0);
        gbc.writeMem(0x988c, { 0x92 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3af, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x988c));
        // 92 0181
        gbc.setState(0xd266, 0x288d, 0x54b0, 0xf315, 0xd74d, 0x7641, 0x1, 0x1);
        gbc.writeMem(0xd266, { 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x288d, gbc.sp());
        EXPECT(0xd267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd266));
        // 92 0182
        gbc.setState(0x5b3e, 0xae9d, 0xdc30, 0x4f44, 0xa32c, 0x7d6f, 0x0, 0x1);
        gbc.writeMem(0x5b3e, { 0x92 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xae9d, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0183
        gbc.setState(0x4765, 0x8c02, 0x8540, 0x648a, 0x4ead, 0xf5f2, 0x0, 0x0);
        gbc.writeMem(0x4765, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8c02, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0184
        gbc.setState(0xe6e1, 0xd356, 0x3760, 0xa456, 0x6288, 0xb7ca, 0x0, 0x1);
        gbc.writeMem(0xe6e1, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe6e1));
        // 92 0185
        gbc.setState(0x20d5, 0xee0e, 0xe240, 0x1a6f, 0xc8d1, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0x20d5, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0x20d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0186
        gbc.setState(0xd44e, 0x46e0, 0x9010, 0x54a4, 0x5330, 0x7966, 0x0, 0x1);
        gbc.writeMem(0xd44e, { 0x92 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0xd44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd44e));
        // 92 0187
        gbc.setState(0x7d16, 0x8679, 0x65d0, 0x37b1, 0x6f6b, 0x7c06, 0x0, 0x0);
        gbc.writeMem(0x7d16, { 0x92 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0188
        gbc.setState(0x7f04, 0x7c8e, 0x64e0, 0xc91b, 0x8992, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x7f04, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7c8e, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0189
        gbc.setState(0x5a28, 0x89a2, 0xdef0, 0x4513, 0x57b9, 0x3126, 0x0, 0x1);
        gbc.writeMem(0x5a28, { 0x92 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0x5a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 018A
        gbc.setState(0x765, 0xe310, 0x9a50, 0x871b, 0xd4e9, 0x6599, 0x1, 0x0);
        gbc.writeMem(0x765, { 0x92 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe310, gbc.sp());
        EXPECT(0x766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 018B
        gbc.setState(0x3c6, 0xdf8f, 0x3160, 0x4ab, 0xc476, 0xa314, 0x1, 0x0);
        gbc.writeMem(0x3c6, { 0x92 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0x3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 018C
        gbc.setState(0x68d8, 0xc8fd, 0x24b0, 0x775a, 0xa757, 0xc63b, 0x1, 0x0);
        gbc.writeMem(0x68d8, { 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0x68d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 018D
        gbc.setState(0xe3b3, 0x9918, 0x48f0, 0x1d0d, 0x1120, 0x88ef, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe3b3));
        // 92 018E
        gbc.setState(0x624, 0xbca2, 0xd460, 0x9bb0, 0x3f, 0x2b06, 0x0, 0x0);
        gbc.writeMem(0x624, { 0x92 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 018F
        gbc.setState(0x5690, 0x2e5c, 0xe490, 0x47d1, 0x47f4, 0xb29, 0x0, 0x1);
        gbc.writeMem(0x5690, { 0x92 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0190
        gbc.setState(0x6ac5, 0xc4cd, 0xeac0, 0x682a, 0x8e7a, 0xb4b1, 0x0, 0x1);
        gbc.writeMem(0x6ac5, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc4cd, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0191
        gbc.setState(0x7875, 0x6e2e, 0xeb80, 0x8f35, 0xf779, 0x1afb, 0x1, 0x0);
        gbc.writeMem(0x7875, { 0x92 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0x7876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0192
        gbc.setState(0xdf56, 0xf3f1, 0x50a0, 0xe1b6, 0x7b00, 0xd2b3, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdf56));
        // 92 0193
        gbc.setState(0xded9, 0x860, 0x5290, 0xb493, 0x30f3, 0x4720, 0x1, 0x0);
        gbc.writeMem(0xded9, { 0x92 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0xdeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xded9));
        // 92 0194
        gbc.setState(0xbe3c, 0x2f5a, 0x9c0, 0xc93, 0x88f3, 0x7e0b, 0x0, 0x1);
        gbc.writeMem(0xbe3c, { 0x92 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2f5a, gbc.sp());
        EXPECT(0xbe3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbe3c));
        // 92 0195
        gbc.setState(0x69da, 0x7ca3, 0xcfc0, 0x7684, 0xae2e, 0x79ed, 0x0, 0x0);
        gbc.writeMem(0x69da, { 0x92 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7ca3, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0196
        gbc.setState(0x46, 0xdab2, 0x8060, 0x8766, 0x52f3, 0x3a2e, 0x0, 0x1);
        gbc.writeMem(0x46, { 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdab2, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0197
        gbc.setState(0x59f4, 0xf5d, 0x3f30, 0xf5a3, 0x96f3, 0xcead, 0x0, 0x0);
        gbc.writeMem(0x59f4, { 0x92 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0x59f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0198
        gbc.setState(0x8299, 0x2f0e, 0xf570, 0xa574, 0xe848, 0x6575, 0x1, 0x0);
        gbc.writeMem(0x8299, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8299));
        // 92 0199
        gbc.setState(0xaafb, 0xc306, 0xb3b0, 0x7099, 0x71c3, 0x181, 0x0, 0x1);
        gbc.writeMem(0xaafb, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaafb));
        // 92 019A
        gbc.setState(0xe3ad, 0x83d9, 0xbe60, 0x6082, 0xd428, 0x5d51, 0x1, 0x0);
        gbc.writeMem(0xe3ad, { 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0xe3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe3ad));
        // 92 019B
        gbc.setState(0xa224, 0x1df6, 0x3c30, 0xf995, 0x978, 0x3b52, 0x1, 0x1);
        gbc.writeMem(0xa224, { 0x92 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa224));
        // 92 019C
        gbc.setState(0x645b, 0xc19b, 0x8d20, 0x6a2c, 0x242d, 0x6b3d, 0x0, 0x1);
        gbc.writeMem(0x645b, { 0x92 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x645c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 019D
        gbc.setState(0x872b, 0xbc09, 0x6b0, 0x5871, 0x2bb6, 0xec51, 0x1, 0x0);
        gbc.writeMem(0x872b, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc09, gbc.sp());
        EXPECT(0x872c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x872b));
        // 92 019E
        gbc.setState(0xe3e6, 0x53d2, 0xc30, 0x1e21, 0x474e, 0x1eb0, 0x0, 0x1);
        gbc.writeMem(0xe3e6, { 0x92 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe3e6));
        // 92 019F
        gbc.setState(0xc9dd, 0xdbcc, 0x6520, 0xc3e0, 0x3927, 0x9e7c, 0x1, 0x1);
        gbc.writeMem(0xc9dd, { 0x92 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdbcc, gbc.sp());
        EXPECT(0xc9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc9dd));
        // 92 01A0
        gbc.setState(0x5276, 0xb3be, 0x41d0, 0x70be, 0xbf8b, 0xffe1, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0x5277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01A1
        gbc.setState(0x9d91, 0x3a54, 0xd470, 0xc53c, 0x694c, 0xd5f6, 0x1, 0x0);
        gbc.writeMem(0x9d91, { 0x92 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0x9d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9d91));
        // 92 01A2
        gbc.setState(0xb2ea, 0x6cd0, 0x5090, 0xa051, 0xa8cf, 0xec1f, 0x0, 0x1);
        gbc.writeMem(0xb2ea, { 0x92 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb2ea));
        // 92 01A3
        gbc.setState(0x8e55, 0x5197, 0x9c50, 0xc61a, 0x9ac1, 0x9236, 0x0, 0x0);
        gbc.writeMem(0x8e55, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5197, gbc.sp());
        EXPECT(0x8e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8e55));
        // 92 01A4
        gbc.setState(0x37e4, 0x6b2d, 0xcc30, 0xd00b, 0xf585, 0x2705, 0x0, 0x0);
        gbc.writeMem(0x37e4, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01A5
        gbc.setState(0x84f2, 0x87ac, 0x9450, 0x3f0f, 0x405e, 0xb5de, 0x1, 0x0);
        gbc.writeMem(0x84f2, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x87ac, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x84f2));
        // 92 01A6
        gbc.setState(0xba0f, 0xfe4c, 0xeb00, 0x807b, 0x53b5, 0x25b4, 0x0, 0x1);
        gbc.writeMem(0xba0f, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba0f));
        // 92 01A7
        gbc.setState(0xd4cf, 0xc86e, 0x3bb0, 0x7757, 0xd7cd, 0x3103, 0x1, 0x1);
        gbc.writeMem(0xd4cf, { 0x92 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc86e, gbc.sp());
        EXPECT(0xd4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd4cf));
        // 92 01A8
        gbc.setState(0x252, 0x77aa, 0xb7e0, 0xc2cc, 0xc223, 0x35b0, 0x0, 0x1);
        gbc.writeMem(0x252, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x77aa, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01A9
        gbc.setState(0xc553, 0x36c0, 0xda90, 0x9636, 0xa071, 0x6a50, 0x1, 0x1);
        gbc.writeMem(0xc553, { 0x92 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x36c0, gbc.sp());
        EXPECT(0xc554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc553));
        // 92 01AA
        gbc.setState(0x9183, 0xa515, 0x8040, 0x9963, 0xfb22, 0xd820, 0x1, 0x0);
        gbc.writeMem(0x9183, { 0x92 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa515, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9183));
        // 92 01AB
        gbc.setState(0x2536, 0x1b14, 0x7110, 0x901b, 0xc71f, 0x32df, 0x0, 0x1);
        gbc.writeMem(0x2536, { 0x92 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x2537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01AC
        gbc.setState(0xb6ef, 0x8cd, 0xe2a0, 0xadd0, 0xe0de, 0x2d0, 0x1, 0x1);
        gbc.writeMem(0xb6ef, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0xb6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb6ef));
        // 92 01AD
        gbc.setState(0xa26c, 0x4f20, 0x5180, 0x9a8a, 0x9e51, 0x1bf4, 0x1, 0x0);
        gbc.writeMem(0xa26c, { 0x92 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4f20, gbc.sp());
        EXPECT(0xa26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa26c));
        // 92 01AE
        gbc.setState(0xa42b, 0x41af, 0x3e70, 0x3ada, 0x3cc0, 0x3e34, 0x0, 0x1);
        gbc.writeMem(0xa42b, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa42b));
        // 92 01AF
        gbc.setState(0x813c, 0xb46d, 0xbf20, 0xf5ba, 0x39c1, 0x7a8, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb46d, gbc.sp());
        EXPECT(0x813d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x813c));
        // 92 01B1
        gbc.setState(0x8101, 0xfea2, 0xf4d0, 0x4ae7, 0xfff, 0x26b2, 0x0, 0x0);
        gbc.writeMem(0x8101, { 0x92 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfea2, gbc.sp());
        EXPECT(0x8102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8101));
        // 92 01B2
        gbc.setState(0x542e, 0xd027, 0xbae0, 0x4665, 0x2c4, 0x43f9, 0x0, 0x0);
        gbc.writeMem(0x542e, { 0x92 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd027, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01B3
        gbc.setState(0x564b, 0x6d42, 0xc880, 0xea65, 0x7351, 0x9887, 0x0, 0x0);
        gbc.writeMem(0x564b, { 0x92 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x564c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01B4
        gbc.setState(0xc9a3, 0xdbf7, 0x2d70, 0x7462, 0x3200, 0xb688, 0x1, 0x0);
        gbc.writeMem(0xc9a3, { 0x92 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc9a3));
        // 92 01B5
        gbc.setState(0x3ecb, 0x95f1, 0xd6e0, 0x41e5, 0xf0f5, 0xe154, 0x0, 0x0);
        gbc.writeMem(0x3ecb, { 0x92 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x95f1, gbc.sp());
        EXPECT(0x3ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01B6
        gbc.setState(0x4985, 0x516b, 0xd330, 0xa10, 0x1d4d, 0x9de2, 0x1, 0x1);
        gbc.writeMem(0x4985, { 0x92 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x4986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01B7
        gbc.setState(0x68c1, 0x70e3, 0xdd80, 0x9f5e, 0xeddf, 0xcb54, 0x1, 0x0);
        gbc.writeMem(0x68c1, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x70e3, gbc.sp());
        EXPECT(0x68c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01B8
        gbc.setState(0xcb6, 0x9114, 0x91a0, 0x40be, 0xb0b0, 0x522d, 0x1, 0x0);
        gbc.writeMem(0xcb6, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01B9
        gbc.setState(0x15b7, 0x7e57, 0xf3b0, 0x8ff1, 0x47a8, 0xac40, 0x0, 0x1);
        gbc.writeMem(0x15b7, { 0x92 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0x15b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01BA
        gbc.setState(0xbcd4, 0xb739, 0xe410, 0xf3a6, 0x1f4b, 0x38af, 0x0, 0x1);
        gbc.writeMem(0xbcd4, { 0x92 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0xbcd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbcd4));
        // 92 01BB
        gbc.setState(0x2d9, 0x4526, 0x4450, 0x9fd5, 0x7a1e, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x2d9, { 0x92 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4526, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01BC
        gbc.setState(0xc61e, 0xb165, 0x3970, 0xb556, 0xacf6, 0x49b4, 0x1, 0x0);
        gbc.writeMem(0xc61e, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb165, gbc.sp());
        EXPECT(0xc61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc61e));
        // 92 01BD
        gbc.setState(0x3e37, 0x7b04, 0x8c0, 0x46f5, 0x31c5, 0xde16, 0x0, 0x1);
        gbc.writeMem(0x3e37, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7b04, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01BE
        gbc.setState(0x78cd, 0xa49e, 0xffb0, 0x2591, 0x2328, 0xdfff, 0x0, 0x1);
        gbc.writeMem(0x78cd, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0x78ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01BF
        gbc.setState(0xb60, 0x439f, 0x8540, 0x19b5, 0x999e, 0x9bc5, 0x0, 0x1);
        gbc.writeMem(0xb60, { 0x92 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01C0
        gbc.setState(0x2e6d, 0x658d, 0x27d0, 0x679a, 0xa986, 0xa647, 0x0, 0x1);
        gbc.writeMem(0x2e6d, { 0x92 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x658d, gbc.sp());
        EXPECT(0x2e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01C2
        gbc.setState(0x4299, 0x6da2, 0x9650, 0x5ed3, 0xb1c9, 0xfa7d, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0x92 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01C3
        gbc.setState(0xdb6d, 0x8811, 0x9c50, 0xdafd, 0xcae1, 0xa674, 0x1, 0x1);
        gbc.writeMem(0xdb6d, { 0x92 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0xdb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdb6d));
        // 92 01C4
        gbc.setState(0x4841, 0x52c8, 0xa320, 0xfb3b, 0x465b, 0x471a, 0x1, 0x0);
        gbc.writeMem(0x4841, { 0x92 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01C5
        gbc.setState(0xd19b, 0xfdd1, 0xb330, 0xc2f2, 0x5cf6, 0xe00f, 0x0, 0x1);
        gbc.writeMem(0xd19b, { 0x92 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfdd1, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd19b));
        // 92 01C6
        gbc.setState(0x274e, 0xf99e, 0x4080, 0xe08a, 0xafb2, 0x7309, 0x1, 0x1);
        gbc.writeMem(0x274e, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf99e, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01C9
        gbc.setState(0x64d7, 0x5c6f, 0x8420, 0xd238, 0xa780, 0xbf44, 0x0, 0x0);
        gbc.writeMem(0x64d7, { 0x92 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c6f, gbc.sp());
        EXPECT(0x64d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01CA
        gbc.setState(0xa398, 0x168c, 0xe750, 0xd326, 0x249f, 0x1683, 0x0, 0x1);
        gbc.writeMem(0xa398, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x168c, gbc.sp());
        EXPECT(0xa399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa398));
        // 92 01CB
        gbc.setState(0x6a4d, 0xe89, 0xe150, 0x47b, 0xcd79, 0x3eb1, 0x1, 0x1);
        gbc.writeMem(0x6a4d, { 0x92 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x6a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01CC
        gbc.setState(0x13ed, 0x10d4, 0x4070, 0x873f, 0xfe6e, 0xa394, 0x0, 0x1);
        gbc.writeMem(0x13ed, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01CD
        gbc.setState(0x7f74, 0xb431, 0x3e10, 0xcf87, 0x9fef, 0xb448, 0x0, 0x0);
        gbc.writeMem(0x7f74, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0x7f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01CE
        gbc.setState(0xbae0, 0x6bd8, 0xbb30, 0x7ae7, 0x4599, 0x3b5c, 0x0, 0x0);
        gbc.writeMem(0xbae0, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6bd8, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbae0));
        // 92 01CF
        gbc.setState(0x579d, 0x98f7, 0xc1b0, 0x8e63, 0xa6fa, 0x1d2d, 0x1, 0x0);
        gbc.writeMem(0x579d, { 0x92 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x98f7, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01D0
        gbc.setState(0x2222, 0xbe28, 0xd490, 0x6c29, 0xa357, 0x9aa5, 0x0, 0x1);
        gbc.writeMem(0x2222, { 0x92 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01D2
        gbc.setState(0x3e1c, 0x982f, 0xbc50, 0x7e3d, 0xbdf0, 0x456d, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0x92 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x982f, gbc.sp());
        EXPECT(0x3e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01D3
        gbc.setState(0x1fd3, 0x74fe, 0x4330, 0xd977, 0x2bf, 0xfa9d, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x74fe, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01D5
        gbc.setState(0xc6c8, 0x3f4, 0x6af0, 0xa566, 0x4d88, 0xf62b, 0x0, 0x0);
        gbc.writeMem(0xc6c8, { 0x92 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0xc6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc6c8));
        // 92 01D6
        gbc.setState(0x4d2f, 0xc040, 0x4bb0, 0x42b6, 0x1939, 0xac3f, 0x0, 0x0);
        gbc.writeMem(0x4d2f, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc040, gbc.sp());
        EXPECT(0x4d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01D7
        gbc.setState(0x5b05, 0x5224, 0xd420, 0x9a2b, 0xf7e8, 0x3ab5, 0x0, 0x1);
        gbc.writeMem(0x5b05, { 0x92 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5224, gbc.sp());
        EXPECT(0x5b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01D8
        gbc.setState(0xa, 0xb23b, 0xad40, 0x5d99, 0xbfab, 0xcd1e, 0x1, 0x1);
        gbc.writeMem(0xa, { 0x92 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb23b, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01D9
        gbc.setState(0x9dda, 0xb885, 0x2440, 0x9b37, 0xbff4, 0xc714, 0x1, 0x1);
        gbc.writeMem(0x9dda, { 0x92 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb885, gbc.sp());
        EXPECT(0x9ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9dda));
        // 92 01DA
        gbc.setState(0xad41, 0x9ebd, 0x1cf0, 0x4e5, 0x867d, 0x25d9, 0x1, 0x0);
        gbc.writeMem(0xad41, { 0x92 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xad41));
        // 92 01DB
        gbc.setState(0x24ee, 0x825d, 0x27b0, 0xe61b, 0xcf9, 0x118a, 0x1, 0x0);
        gbc.writeMem(0x24ee, { 0x92 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01DC
        gbc.setState(0xa8d0, 0x36de, 0x79d0, 0x8b43, 0x86cc, 0x5ffc, 0x0, 0x1);
        gbc.writeMem(0xa8d0, { 0x92 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x36de, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa8d0));
        // 92 01DE
        gbc.setState(0x2902, 0xe0de, 0x6db0, 0x285b, 0xd406, 0xcab5, 0x0, 0x1);
        gbc.writeMem(0x2902, { 0x92 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe0de, gbc.sp());
        EXPECT(0x2903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01DF
        gbc.setState(0xc312, 0x5cba, 0x9710, 0xe2b3, 0xe0d6, 0x40c0, 0x0, 0x1);
        gbc.writeMem(0xc312, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0xc313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc312));
        // 92 01E0
        gbc.setState(0x49c6, 0x40ed, 0xf020, 0x72e3, 0x431a, 0x86b6, 0x0, 0x1);
        gbc.writeMem(0x49c6, { 0x92 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0x49c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01E1
        gbc.setState(0x5598, 0xef75, 0xfc0, 0xddb8, 0x21dd, 0x64da, 0x1, 0x0);
        gbc.writeMem(0x5598, { 0x92 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xef75, gbc.sp());
        EXPECT(0x5599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01E2
        gbc.setState(0x9a13, 0x2d22, 0x1c20, 0xe14e, 0x5970, 0x5d8e, 0x0, 0x1);
        gbc.writeMem(0x9a13, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d22, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a13));
        // 92 01E3
        gbc.setState(0xeb50, 0xe578, 0xffc0, 0xebf4, 0x89f3, 0x5929, 0x1, 0x1);
        gbc.writeMem(0xeb50, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeb50));
        // 92 01E4
        gbc.setState(0x5317, 0x2bb6, 0x1c0, 0xb3c7, 0x74c0, 0x8902, 0x0, 0x0);
        gbc.writeMem(0x5317, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2bb6, gbc.sp());
        EXPECT(0x5318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01E5
        gbc.setState(0xd496, 0xcbbb, 0xb9e0, 0x5647, 0xeed1, 0x2ad7, 0x0, 0x0);
        gbc.writeMem(0xd496, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0xd497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd496));
        // 92 01E6
        gbc.setState(0xabe0, 0x5000, 0x3e30, 0x49, 0x73d9, 0xc474, 0x0, 0x1);
        gbc.writeMem(0xabe0, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5000, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xabe0));
        // 92 01E7
        gbc.setState(0xd3d, 0x9b79, 0x4ce0, 0x44a6, 0x9b5b, 0xc109, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0x92 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9b79, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01E9
        gbc.setState(0x1287, 0x2c1c, 0x54f0, 0x1e01, 0x4628, 0xdb47, 0x0, 0x0);
        gbc.writeMem(0x1287, { 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2c1c, gbc.sp());
        EXPECT(0x1288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01EA
        gbc.setState(0x82c0, 0xcae8, 0x5b10, 0x8144, 0xa5cc, 0x797f, 0x1, 0x1);
        gbc.writeMem(0x82c0, { 0x92 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x82c0));
        // 92 01EB
        gbc.setState(0x3be4, 0xfc6a, 0x1b40, 0xda71, 0xa875, 0xbf41, 0x0, 0x0);
        gbc.writeMem(0x3be4, { 0x92 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0x3be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01EC
        gbc.setState(0x6fe2, 0x38e2, 0x480, 0x63b8, 0xc08, 0xd494, 0x1, 0x0);
        gbc.writeMem(0x6fe2, { 0x92 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x6fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01ED
        gbc.setState(0x4d77, 0xb14, 0x43c0, 0x44b3, 0x410, 0xe15d, 0x1, 0x1);
        gbc.writeMem(0x4d77, { 0x92 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb14, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01EE
        gbc.setState(0x831f, 0x59d0, 0x8a40, 0xc346, 0x8afe, 0x5804, 0x1, 0x1);
        gbc.writeMem(0x831f, { 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x59d0, gbc.sp());
        EXPECT(0x8320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x831f));
        // 92 01EF
        gbc.setState(0xa779, 0x6fe7, 0xfec0, 0xc5d7, 0xcce9, 0xcdb5, 0x1, 0x0);
        gbc.writeMem(0xa779, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6fe7, gbc.sp());
        EXPECT(0xa77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa779));
        // 92 01F0
        gbc.setState(0x5141, 0x6979, 0x3320, 0x6b3f, 0xd286, 0xdfd5, 0x0, 0x0);
        gbc.writeMem(0x5141, { 0x92 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6979, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01F1
        gbc.setState(0x5363, 0x345, 0xd720, 0xd58f, 0x98ed, 0x7f71, 0x0, 0x1);
        gbc.writeMem(0x5363, { 0x92 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01F2
        gbc.setState(0xc04, 0x6436, 0xc200, 0xbe75, 0xc1b0, 0x2076, 0x1, 0x0);
        gbc.writeMem(0xc04, { 0x92 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0xc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01F3
        gbc.setState(0x6ebe, 0x8266, 0x3c90, 0x9aa8, 0xba0b, 0xa05c, 0x0, 0x0);
        gbc.writeMem(0x6ebe, { 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8266, gbc.sp());
        EXPECT(0x6ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01F4
        gbc.setState(0x5561, 0x8d3d, 0x2a70, 0xef9e, 0x7cae, 0x1174, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0x92 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01F5
        gbc.setState(0x980f, 0x8812, 0xc590, 0x4235, 0xb721, 0xbb3e, 0x0, 0x1);
        gbc.writeMem(0x980f, { 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0x9810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x980f));
        // 92 01F6
        gbc.setState(0x4319, 0x7f3c, 0x9e90, 0xffb2, 0x9ed3, 0xf70, 0x0, 0x0);
        gbc.writeMem(0x4319, { 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0x431a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 01F7
        gbc.setState(0xd9b1, 0xc8d1, 0x3eb0, 0x9852, 0xbb2b, 0xed29, 0x1, 0x1);
        gbc.writeMem(0xd9b1, { 0x92 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc8d1, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9b1));
        // 92 01F8
        gbc.setState(0x3116, 0x6865, 0x1610, 0x29b5, 0x483b, 0xfc50, 0x0, 0x1);
        gbc.writeMem(0x3116, { 0x92 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6865, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01F9
        gbc.setState(0xeff9, 0x601d, 0xf1d0, 0x1c8a, 0xa0ef, 0xcbe1, 0x1, 0x0);
        gbc.writeMem(0xeff9, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeff9));
        // 92 01FA
        gbc.setState(0xb111, 0xe79e, 0x2ca0, 0x3ec4, 0x9374, 0x2035, 0x0, 0x0);
        gbc.writeMem(0xb111, { 0x92 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb111));
        // 92 01FB
        gbc.setState(0x8a10, 0x692f, 0xa7e0, 0x452c, 0x51b2, 0xc6fd, 0x1, 0x0);
        gbc.writeMem(0x8a10, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8a10));
        // 92 01FC
        gbc.setState(0xcefb, 0xcbbd, 0x9770, 0xce5d, 0x8f79, 0x6620, 0x0, 0x0);
        gbc.writeMem(0xcefb, { 0x92 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcbbd, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcefb));
        // 92 01FD
        gbc.setState(0x97e, 0x6952, 0x2930, 0x7db0, 0xa8ef, 0xa990, 0x0, 0x1);
        gbc.writeMem(0x97e, { 0x92 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6952, gbc.sp());
        EXPECT(0x97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 01FE
        gbc.setState(0x8c66, 0xa2e0, 0xd2c0, 0xdb34, 0x3803, 0xbd71, 0x1, 0x1);
        gbc.writeMem(0x8c66, { 0x92 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa2e0, gbc.sp());
        EXPECT(0x8c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8c66));
        // 92 01FF
        gbc.setState(0xacd5, 0x548a, 0x470, 0x7435, 0x8396, 0xaee7, 0x0, 0x1);
        gbc.writeMem(0xacd5, { 0x92 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x548a, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xacd5));
        // 92 0200
        gbc.setState(0xe9cb, 0x64b4, 0x8ad0, 0x3b1f, 0x4b1b, 0x991, 0x1, 0x0);
        gbc.writeMem(0xe9cb, { 0x92 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0xe9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe9cb));
        // 92 0201
        gbc.setState(0x9479, 0xfaea, 0x37a0, 0x5e7f, 0x8c2e, 0x58d7, 0x0, 0x0);
        gbc.writeMem(0x9479, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0x947a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9479));
        // 92 0202
        gbc.setState(0xb856, 0x6903, 0x1f0, 0xf928, 0x1d8f, 0x2955, 0x0, 0x1);
        gbc.writeMem(0xb856, { 0x92 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6903, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb856));
        // 92 0203
        gbc.setState(0x17e1, 0xabb0, 0x4b40, 0x498a, 0x7146, 0x62f8, 0x0, 0x1);
        gbc.writeMem(0x17e1, { 0x92 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xabb0, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0204
        gbc.setState(0x1aaf, 0xff18, 0x2a00, 0x65d3, 0xdc9c, 0x54c1, 0x0, 0x1);
        gbc.writeMem(0x1aaf, { 0x92 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0205
        gbc.setState(0xac50, 0x2bd5, 0x8e00, 0x9176, 0xa674, 0xa43f, 0x0, 0x0);
        gbc.writeMem(0xac50, { 0x92 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2bd5, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xac50));
        // 92 0206
        gbc.setState(0x4c08, 0x2950, 0xbac0, 0xeee1, 0xa58, 0x881c, 0x1, 0x0);
        gbc.writeMem(0x4c08, { 0x92 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0207
        gbc.setState(0xec22, 0x8961, 0xa7d0, 0x5bf, 0x4844, 0xd1ff, 0x1, 0x0);
        gbc.writeMem(0xec22, { 0x92 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8961, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xec22));
        // 92 0208
        gbc.setState(0x49b0, 0x63bd, 0xb7e0, 0xc2a0, 0xe3fe, 0xbb48, 0x0, 0x1);
        gbc.writeMem(0x49b0, { 0x92 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x63bd, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0209
        gbc.setState(0x9163, 0x2e52, 0xbfc0, 0x1986, 0x9cd, 0xf662, 0x1, 0x0);
        gbc.writeMem(0x9163, { 0x92 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0x9164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9163));
        // 92 020A
        gbc.setState(0x8f64, 0x8acd, 0x8100, 0xbcba, 0x94ff, 0x95b7, 0x0, 0x1);
        gbc.writeMem(0x8f64, { 0x92 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8acd, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f64));
        // 92 020B
        gbc.setState(0xbe2f, 0x7484, 0xda80, 0xadbe, 0xd3ee, 0x76a0, 0x0, 0x0);
        gbc.writeMem(0xbe2f, { 0x92 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xbe30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbe2f));
        // 92 020D
        gbc.setState(0xf33, 0xd95d, 0x64c0, 0x521e, 0x29d5, 0x2a22, 0x0, 0x1);
        gbc.writeMem(0xf33, { 0x92 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd95d, gbc.sp());
        EXPECT(0xf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 020E
        gbc.setState(0x61b9, 0x7ad9, 0x41e0, 0xd9dc, 0xd7a2, 0x2b7d, 0x0, 0x0);
        gbc.writeMem(0x61b9, { 0x92 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ad9, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 020F
        gbc.setState(0x86c4, 0x15b0, 0x2750, 0x6da6, 0xb0cb, 0x9d87, 0x1, 0x0);
        gbc.writeMem(0x86c4, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x15b0, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x86c4));
        // 92 0210
        gbc.setState(0x4264, 0x8e34, 0x4180, 0x98ef, 0x872b, 0x2931, 0x0, 0x1);
        gbc.writeMem(0x4264, { 0x92 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0211
        gbc.setState(0x7930, 0x3860, 0x1ed0, 0x5e3f, 0x5697, 0x63fb, 0x0, 0x0);
        gbc.writeMem(0x7930, { 0x92 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0x7931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0212
        gbc.setState(0xa84f, 0xfecd, 0x5150, 0xcf1b, 0xb62f, 0x1c7c, 0x1, 0x0);
        gbc.writeMem(0xa84f, { 0x92 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0xa850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa84f));
        // 92 0213
        gbc.setState(0x1f5a, 0x8453, 0x25e0, 0x80ba, 0x626, 0x4209, 0x1, 0x1);
        gbc.writeMem(0x1f5a, { 0x92 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0214
        gbc.setState(0x7afd, 0x254b, 0x7aa0, 0x6897, 0x6d2, 0xd76c, 0x1, 0x0);
        gbc.writeMem(0x7afd, { 0x92 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0x7afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0215
        gbc.setState(0x508e, 0xac57, 0x3fb0, 0x7b23, 0x86bb, 0x1fbf, 0x0, 0x1);
        gbc.writeMem(0x508e, { 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0216
        gbc.setState(0xd00c, 0x1cc4, 0xe640, 0x6285, 0x56c4, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0xd00c, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0xd00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd00c));
        // 92 0217
        gbc.setState(0x5126, 0x325a, 0xadc0, 0x88e, 0x3357, 0x4d58, 0x0, 0x0);
        gbc.writeMem(0x5126, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x325a, gbc.sp());
        EXPECT(0x5127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0218
        gbc.setState(0xc5cc, 0x6221, 0xc990, 0x1a3f, 0x18c5, 0x878a, 0x1, 0x1);
        gbc.writeMem(0xc5cc, { 0x92 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6221, gbc.sp());
        EXPECT(0xc5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc5cc));
        // 92 0219
        gbc.setState(0x4e11, 0xb9c0, 0xabe0, 0x9ee5, 0xb31, 0x4766, 0x1, 0x0);
        gbc.writeMem(0x4e11, { 0x92 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb9c0, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 021A
        gbc.setState(0x79c4, 0xacfd, 0xfa80, 0x24c7, 0x2293, 0xd289, 0x0, 0x1);
        gbc.writeMem(0x79c4, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0x79c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 021B
        gbc.setState(0xb6f4, 0x6581, 0x5580, 0xf56a, 0xdb4b, 0x6250, 0x1, 0x0);
        gbc.writeMem(0xb6f4, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6581, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb6f4));
        // 92 021C
        gbc.setState(0x4e8e, 0x30af, 0x2390, 0x137, 0xf045, 0xc38c, 0x1, 0x0);
        gbc.writeMem(0x4e8e, { 0x92 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 021D
        gbc.setState(0xaa11, 0x5846, 0x7530, 0x34a3, 0xc7a1, 0xcd, 0x0, 0x1);
        gbc.writeMem(0xaa11, { 0x92 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaa11));
        // 92 021E
        gbc.setState(0xd842, 0x560d, 0xeea0, 0x1321, 0x56f2, 0x78b3, 0x0, 0x1);
        gbc.writeMem(0xd842, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0xd843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd842));
        // 92 0220
        gbc.setState(0x9353, 0x434d, 0x3500, 0x7010, 0x1850, 0xceed, 0x1, 0x0);
        gbc.writeMem(0x9353, { 0x92 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9353));
        // 92 0221
        gbc.setState(0x76df, 0x5a49, 0x1ab0, 0xf86d, 0xde15, 0xa5b7, 0x1, 0x1);
        gbc.writeMem(0x76df, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0222
        gbc.setState(0xb6c1, 0xe8f4, 0xa1b0, 0x193e, 0xf0c, 0x2135, 0x0, 0x1);
        gbc.writeMem(0xb6c1, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0xb6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb6c1));
        // 92 0223
        gbc.setState(0x8ff4, 0xe5a7, 0x8b50, 0xd877, 0x5dcb, 0x1839, 0x1, 0x0);
        gbc.writeMem(0x8ff4, { 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe5a7, gbc.sp());
        EXPECT(0x8ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8ff4));
        // 92 0224
        gbc.setState(0xc1c6, 0x10e5, 0xffa0, 0x5f2c, 0xb1fd, 0x375d, 0x1, 0x0);
        gbc.writeMem(0xc1c6, { 0x92 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0xc1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc1c6));
        // 92 0225
        gbc.setState(0x91ab, 0x3f49, 0x7f70, 0xaea6, 0x8a2e, 0x3670, 0x1, 0x0);
        gbc.writeMem(0x91ab, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f49, gbc.sp());
        EXPECT(0x91ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x91ab));
        // 92 0226
        gbc.setState(0x1441, 0x331, 0x7ba0, 0x63a3, 0x11fa, 0xb712, 0x0, 0x0);
        gbc.writeMem(0x1441, { 0x92 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0228
        gbc.setState(0xe3ba, 0x67ab, 0xc2d0, 0xddf0, 0x1714, 0x3b49, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0xe3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe3ba));
        // 92 0229
        gbc.setState(0x2052, 0x7c54, 0x6f40, 0xe758, 0x60a4, 0x6f4f, 0x1, 0x0);
        gbc.writeMem(0x2052, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x2053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 022A
        gbc.setState(0x9de1, 0x2016, 0x5840, 0xb810, 0xc609, 0x81de, 0x0, 0x1);
        gbc.writeMem(0x9de1, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9de1));
        // 92 022B
        gbc.setState(0x7422, 0xaf29, 0x8df0, 0x9673, 0x653e, 0xc92b, 0x1, 0x1);
        gbc.writeMem(0x7422, { 0x92 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0x7423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 022C
        gbc.setState(0x7ca2, 0x1e8f, 0x1470, 0x24ba, 0x654, 0xee20, 0x0, 0x0);
        gbc.writeMem(0x7ca2, { 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1e8f, gbc.sp());
        EXPECT(0x7ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 022D
        gbc.setState(0xca8e, 0x709a, 0x1080, 0x57c9, 0x7f30, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0xca8e, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xca8e));
        // 92 022E
        gbc.setState(0x1cc5, 0x4796, 0x6450, 0x24ed, 0x99da, 0x4a2a, 0x1, 0x1);
        gbc.writeMem(0x1cc5, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0x1cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 022F
        gbc.setState(0x1c9f, 0x581f, 0x1ea0, 0xcdc1, 0x93b0, 0xbe75, 0x0, 0x0);
        gbc.writeMem(0x1c9f, { 0x92 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x1ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0230
        gbc.setState(0xde4b, 0x7442, 0xd540, 0x89f, 0xa5f2, 0x7986, 0x1, 0x1);
        gbc.writeMem(0xde4b, { 0x92 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7442, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xde4b));
        // 92 0231
        gbc.setState(0x1e77, 0xaa03, 0xf730, 0x7de, 0xee0, 0xfe43, 0x1, 0x0);
        gbc.writeMem(0x1e77, { 0x92 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaa03, gbc.sp());
        EXPECT(0x1e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0232
        gbc.setState(0x5611, 0x6bd8, 0x8900, 0xb64c, 0xd6f2, 0xcbb7, 0x0, 0x1);
        gbc.writeMem(0x5611, { 0x92 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6bd8, gbc.sp());
        EXPECT(0x5612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0233
        gbc.setState(0x5a29, 0x2a9b, 0x3500, 0x44c1, 0xb116, 0x2118, 0x1, 0x0);
        gbc.writeMem(0x5a29, { 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2a9b, gbc.sp());
        EXPECT(0x5a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0234
        gbc.setState(0xed56, 0x5b68, 0x84b0, 0x8e6f, 0xe07, 0xe1f2, 0x0, 0x1);
        gbc.writeMem(0xed56, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5b68, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xed56));
        // 92 0235
        gbc.setState(0x8e79, 0x3764, 0xe210, 0xcbe6, 0x4b0, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x8e79, { 0x92 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0x8e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8e79));
        // 92 0236
        gbc.setState(0xccb7, 0x6452, 0x4530, 0xe167, 0x5dfd, 0xf14, 0x0, 0x1);
        gbc.writeMem(0xccb7, { 0x92 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6452, gbc.sp());
        EXPECT(0xccb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xccb7));
        // 92 0237
        gbc.setState(0xbbf8, 0x24df, 0xd80, 0x4bcd, 0x6ee4, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0xbbf8, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x24df, gbc.sp());
        EXPECT(0xbbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbbf8));
        // 92 0238
        gbc.setState(0xae0c, 0x6253, 0x14f0, 0x2cd7, 0xccc1, 0x6ab5, 0x1, 0x1);
        gbc.writeMem(0xae0c, { 0x92 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6253, gbc.sp());
        EXPECT(0xae0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xae0c));
        // 92 0239
        gbc.setState(0xe595, 0x2bf6, 0xd320, 0x2053, 0xa647, 0x7540, 0x1, 0x0);
        gbc.writeMem(0xe595, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2bf6, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe595));
        // 92 023A
        gbc.setState(0x9dd8, 0x3a62, 0xc770, 0xe37a, 0x2b97, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x9dd8, { 0x92 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9dd8));
        // 92 023B
        gbc.setState(0x4e0e, 0xb797, 0xc080, 0x1151, 0xfeeb, 0xa8eb, 0x0, 0x0);
        gbc.writeMem(0x4e0e, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x4e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 023C
        gbc.setState(0x959a, 0xce3b, 0x8cc0, 0x7b9f, 0xd55c, 0x698, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xce3b, gbc.sp());
        EXPECT(0x959b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x959a));
        // 92 023D
        gbc.setState(0x19a7, 0x9a06, 0x29e0, 0x61d6, 0x72d2, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x19a7, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9a06, gbc.sp());
        EXPECT(0x19a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 023E
        gbc.setState(0xae21, 0xd22, 0x1500, 0x6b41, 0x1308, 0x8cb4, 0x0, 0x0);
        gbc.writeMem(0xae21, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0xae22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xae21));
        // 92 023F
        gbc.setState(0x3328, 0xa223, 0x5ce0, 0x9669, 0x3c61, 0x34b5, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0x92 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0240
        gbc.setState(0x172, 0xed8e, 0x1710, 0xce8e, 0xebc6, 0x5f87, 0x1, 0x1);
        gbc.writeMem(0x172, { 0x92 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0241
        gbc.setState(0x33bf, 0x4afb, 0x3370, 0x368e, 0x76d2, 0xf19c, 0x0, 0x0);
        gbc.writeMem(0x33bf, { 0x92 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4afb, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0242
        gbc.setState(0x9f59, 0xb41f, 0xc050, 0x7c18, 0xfde5, 0x8127, 0x0, 0x0);
        gbc.writeMem(0x9f59, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f59));
        // 92 0243
        gbc.setState(0xd0af, 0x3a28, 0xa4c0, 0xe35d, 0xb77f, 0xd705, 0x1, 0x1);
        gbc.writeMem(0xd0af, { 0x92 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3a28, gbc.sp());
        EXPECT(0xd0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd0af));
        // 92 0245
        gbc.setState(0x5f73, 0x984b, 0xee90, 0x4c83, 0x790e, 0x6600, 0x0, 0x1);
        gbc.writeMem(0x5f73, { 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x984b, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0246
        gbc.setState(0x1ab9, 0x4a38, 0xd410, 0x70c7, 0xa00f, 0x54fb, 0x1, 0x1);
        gbc.writeMem(0x1ab9, { 0x92 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0247
        gbc.setState(0x1bca, 0xe8d8, 0x43a0, 0xce0d, 0xd335, 0xd2d1, 0x0, 0x0);
        gbc.writeMem(0x1bca, { 0x92 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe8d8, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0248
        gbc.setState(0x745, 0x8277, 0x5510, 0xa9d8, 0x30e2, 0x508, 0x1, 0x0);
        gbc.writeMem(0x745, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0249
        gbc.setState(0xe3f8, 0x3163, 0x7660, 0x766d, 0xdab6, 0x4c86, 0x1, 0x1);
        gbc.writeMem(0xe3f8, { 0x92 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3163, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe3f8));
        // 92 024A
        gbc.setState(0xcde7, 0xe3df, 0xc610, 0xdf16, 0x84c3, 0xcfdd, 0x1, 0x0);
        gbc.writeMem(0xcde7, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe3df, gbc.sp());
        EXPECT(0xcde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcde7));
        // 92 024B
        gbc.setState(0x45ab, 0xb04a, 0x3bb0, 0x313, 0xc341, 0x52f, 0x0, 0x1);
        gbc.writeMem(0x45ab, { 0x92 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb04a, gbc.sp());
        EXPECT(0x45ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 024C
        gbc.setState(0x4b7f, 0xadec, 0x7c50, 0x85a7, 0x7b98, 0x6734, 0x0, 0x0);
        gbc.writeMem(0x4b7f, { 0x92 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xadec, gbc.sp());
        EXPECT(0x4b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 024D
        gbc.setState(0xe272, 0x786b, 0x1be0, 0x3e57, 0x237b, 0xe24c, 0x0, 0x1);
        gbc.writeMem(0xe272, { 0x92 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe272));
        // 92 024E
        gbc.setState(0xd7d5, 0x8b51, 0xb500, 0x5072, 0x747e, 0x5746, 0x1, 0x1);
        gbc.writeMem(0xd7d5, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b51, gbc.sp());
        EXPECT(0xd7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd7d5));
        // 92 024F
        gbc.setState(0x24b9, 0x8583, 0xa390, 0x3f31, 0x4a1b, 0xa50, 0x1, 0x1);
        gbc.writeMem(0x24b9, { 0x92 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8583, gbc.sp());
        EXPECT(0x24ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0250
        gbc.setState(0xd0b3, 0xefe3, 0x97a0, 0xe1ce, 0x4e93, 0x44e0, 0x0, 0x1);
        gbc.writeMem(0xd0b3, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0xd0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd0b3));
        // 92 0251
        gbc.setState(0xdd58, 0x637e, 0xfac0, 0xbccf, 0x2473, 0xf617, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0x92 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x637e, gbc.sp());
        EXPECT(0xdd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdd58));
        // 92 0252
        gbc.setState(0xe1ef, 0x2038, 0x4240, 0xf364, 0xe571, 0x6014, 0x1, 0x0);
        gbc.writeMem(0xe1ef, { 0x92 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0xe1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe1ef));
        // 92 0254
        gbc.setState(0x4bc0, 0x8e0, 0xc710, 0x702a, 0x34cb, 0x6e46, 0x0, 0x1);
        gbc.writeMem(0x4bc0, { 0x92 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0x4bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0255
        gbc.setState(0xcfba, 0x3c5, 0xffd0, 0xeb81, 0x8e8e, 0x7495, 0x1, 0x1);
        gbc.writeMem(0xcfba, { 0x92 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcfba));
        // 92 0256
        gbc.setState(0xa611, 0x22d0, 0x6070, 0x3bc0, 0xb625, 0x64c1, 0x1, 0x1);
        gbc.writeMem(0xa611, { 0x92 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x22d0, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa611));
        // 92 0257
        gbc.setState(0x339a, 0x1468, 0x1f90, 0x176f, 0xb45b, 0xaaca, 0x1, 0x1);
        gbc.writeMem(0x339a, { 0x92 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1468, gbc.sp());
        EXPECT(0x339b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0258
        gbc.setState(0xe15d, 0xa152, 0x7f10, 0x6839, 0x2050, 0xce57, 0x1, 0x0);
        gbc.writeMem(0xe15d, { 0x92 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe15d));
        // 92 0259
        gbc.setState(0x45d2, 0x3250, 0xaea0, 0x4d1a, 0xa8f4, 0x4dd6, 0x1, 0x1);
        gbc.writeMem(0x45d2, { 0x92 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3250, gbc.sp());
        EXPECT(0x45d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 025A
        gbc.setState(0xae8e, 0x4f6c, 0x2d50, 0x31b6, 0x55db, 0x3127, 0x1, 0x1);
        gbc.writeMem(0xae8e, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4f6c, gbc.sp());
        EXPECT(0xae8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xae8e));
        // 92 025B
        gbc.setState(0x31a5, 0x9bdf, 0x3160, 0x1ce4, 0x6418, 0xd878, 0x0, 0x1);
        gbc.writeMem(0x31a5, { 0x92 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9bdf, gbc.sp());
        EXPECT(0x31a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 025D
        gbc.setState(0x3197, 0x2cac, 0x30a0, 0x70ff, 0xbb0e, 0xa38e, 0x1, 0x0);
        gbc.writeMem(0x3197, { 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2cac, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 025E
        gbc.setState(0x9f5c, 0x5b2b, 0x8d00, 0xe959, 0x5edf, 0xbe24, 0x1, 0x0);
        gbc.writeMem(0x9f5c, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b2b, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f5c));
        // 92 025F
        gbc.setState(0x13d9, 0x2ef5, 0xc2b0, 0x646e, 0x25b7, 0x3189, 0x1, 0x0);
        gbc.writeMem(0x13d9, { 0x92 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0260
        gbc.setState(0x13f8, 0x9c14, 0xfb00, 0x11b5, 0x4643, 0x1799, 0x1, 0x1);
        gbc.writeMem(0x13f8, { 0x92 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0x13f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0261
        gbc.setState(0x8c77, 0xb8c3, 0xfb60, 0x4cb1, 0x1260, 0x92c7, 0x0, 0x0);
        gbc.writeMem(0x8c77, { 0x92 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb8c3, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8c77));
        // 92 0262
        gbc.setState(0xe4c3, 0x7dc0, 0x7360, 0xc6d8, 0xd6a3, 0xd49c, 0x0, 0x0);
        gbc.writeMem(0xe4c3, { 0x92 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0xe4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe4c3));
        // 92 0263
        gbc.setState(0x8619, 0x972e, 0x49a0, 0xfcc2, 0x6eca, 0xb527, 0x0, 0x1);
        gbc.writeMem(0x8619, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x972e, gbc.sp());
        EXPECT(0x861a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8619));
        // 92 0264
        gbc.setState(0x6e42, 0x80e0, 0xf0f0, 0xb639, 0xc41c, 0x7925, 0x0, 0x0);
        gbc.writeMem(0x6e42, { 0x92 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0x6e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0265
        gbc.setState(0x1d6f, 0x4721, 0xfe30, 0xbc93, 0x535b, 0x968d, 0x1, 0x1);
        gbc.writeMem(0x1d6f, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4721, gbc.sp());
        EXPECT(0x1d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0266
        gbc.setState(0xd010, 0x5c3f, 0x6940, 0x58e2, 0x9e63, 0x3140, 0x1, 0x0);
        gbc.writeMem(0xd010, { 0x92 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd010));
        // 92 0268
        gbc.setState(0xb3dd, 0xc86a, 0x920, 0xd73f, 0xafd5, 0x4248, 0x1, 0x1);
        gbc.writeMem(0xb3dd, { 0x92 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0xb3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb3dd));
        // 92 0269
        gbc.setState(0xf52, 0xe071, 0x9730, 0xf672, 0x6b89, 0xe979, 0x0, 0x1);
        gbc.writeMem(0xf52, { 0x92 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0xf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 026A
        gbc.setState(0x79f2, 0x36c3, 0xbb40, 0x1bb1, 0x6707, 0x654a, 0x0, 0x0);
        gbc.writeMem(0x79f2, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x36c3, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 026B
        gbc.setState(0x400b, 0xb19e, 0x3690, 0xb8cc, 0x9ca0, 0xedc8, 0x0, 0x0);
        gbc.writeMem(0x400b, { 0x92 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0x400c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 026C
        gbc.setState(0x6b82, 0x9f76, 0xb060, 0xda7, 0xc4ff, 0xdb41, 0x0, 0x0);
        gbc.writeMem(0x6b82, { 0x92 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x6b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 026D
        gbc.setState(0xb624, 0x4db8, 0x1e0, 0x53d9, 0x9d12, 0xd139, 0x0, 0x0);
        gbc.writeMem(0xb624, { 0x92 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4db8, gbc.sp());
        EXPECT(0xb625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb624));
        // 92 026E
        gbc.setState(0x902f, 0x639e, 0x58f0, 0x17dc, 0xcaff, 0xaca7, 0x1, 0x1);
        gbc.writeMem(0x902f, { 0x92 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x639e, gbc.sp());
        EXPECT(0x9030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x902f));
        // 92 026F
        gbc.setState(0xd4d9, 0x9866, 0xf3f0, 0x7b11, 0xafb, 0x87ed, 0x1, 0x1);
        gbc.writeMem(0xd4d9, { 0x92 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9866, gbc.sp());
        EXPECT(0xd4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd4d9));
        // 92 0270
        gbc.setState(0x36f9, 0xb23f, 0x5210, 0xff3a, 0x1c60, 0x7ba7, 0x0, 0x1);
        gbc.writeMem(0x36f9, { 0x92 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb23f, gbc.sp());
        EXPECT(0x36fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0271
        gbc.setState(0x8482, 0x2462, 0x4300, 0x7661, 0xfe71, 0xe1f9, 0x0, 0x0);
        gbc.writeMem(0x8482, { 0x92 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2462, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8482));
        // 92 0272
        gbc.setState(0x755d, 0xb0e9, 0x7270, 0x3e8e, 0x49b7, 0xa5a6, 0x0, 0x1);
        gbc.writeMem(0x755d, { 0x92 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x755e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0273
        gbc.setState(0x7d96, 0xb413, 0x7380, 0x768d, 0x309c, 0x7db3, 0x1, 0x1);
        gbc.writeMem(0x7d96, { 0x92 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb413, gbc.sp());
        EXPECT(0x7d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0274
        gbc.setState(0x7324, 0xae84, 0x5300, 0xaa69, 0x5228, 0x88b5, 0x1, 0x0);
        gbc.writeMem(0x7324, { 0x92 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0275
        gbc.setState(0x2873, 0x1e87, 0x9de0, 0xa754, 0x861e, 0x8667, 0x0, 0x1);
        gbc.writeMem(0x2873, { 0x92 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1e87, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0276
        gbc.setState(0x7b9e, 0x6c33, 0xeaf0, 0xb6f9, 0x6dfe, 0xdebf, 0x1, 0x1);
        gbc.writeMem(0x7b9e, { 0x92 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0277
        gbc.setState(0x383f, 0x52a, 0xe170, 0x97de, 0xb424, 0xb84e, 0x1, 0x1);
        gbc.writeMem(0x383f, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0x3840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0278
        gbc.setState(0xca9f, 0xc21d, 0xc630, 0xf2f4, 0x15fe, 0x8bf3, 0x1, 0x1);
        gbc.writeMem(0xca9f, { 0x92 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xcaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xca9f));
        // 92 027A
        gbc.setState(0xbb8b, 0xb1c5, 0xa670, 0x8ec9, 0x6577, 0x6fe1, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb1c5, gbc.sp());
        EXPECT(0xbb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbb8b));
        // 92 027B
        gbc.setState(0x1a33, 0xdec8, 0x9010, 0x2440, 0x2379, 0x63a2, 0x1, 0x0);
        gbc.writeMem(0x1a33, { 0x92 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 027C
        gbc.setState(0x4cec, 0xc816, 0x6250, 0x1fd9, 0xd855, 0x531b, 0x0, 0x0);
        gbc.writeMem(0x4cec, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc816, gbc.sp());
        EXPECT(0x4ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 027D
        gbc.setState(0x3def, 0x706e, 0x7530, 0x9934, 0x8bb1, 0x76f5, 0x0, 0x1);
        gbc.writeMem(0x3def, { 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 027E
        gbc.setState(0xa44e, 0x6ae9, 0xfbb0, 0xde20, 0x37e5, 0xb8e2, 0x1, 0x0);
        gbc.writeMem(0xa44e, { 0x92 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ae9, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa44e));
        // 92 027F
        gbc.setState(0x5aaf, 0xa86a, 0xc4c0, 0x1a8d, 0xddff, 0x46b7, 0x0, 0x0);
        gbc.writeMem(0x5aaf, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa86a, gbc.sp());
        EXPECT(0x5ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0280
        gbc.setState(0xc6a4, 0x8efb, 0xf5b0, 0xc749, 0x4c3d, 0xc4, 0x0, 0x0);
        gbc.writeMem(0xc6a4, { 0x92 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc6a4));
        // 92 0281
        gbc.setState(0x3f61, 0x5623, 0xf4c0, 0x7012, 0xe1d8, 0x17a1, 0x0, 0x1);
        gbc.writeMem(0x3f61, { 0x92 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x3f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0282
        gbc.setState(0x38d8, 0x4686, 0xf3e0, 0x43d9, 0xe87b, 0x417a, 0x0, 0x0);
        gbc.writeMem(0x38d8, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4686, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0283
        gbc.setState(0xc968, 0x8b20, 0x9360, 0x18d0, 0x641, 0xe60e, 0x1, 0x1);
        gbc.writeMem(0xc968, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8b20, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc968));
        // 92 0285
        gbc.setState(0x1650, 0x7dc0, 0x9720, 0x725a, 0x9b79, 0xc824, 0x0, 0x1);
        gbc.writeMem(0x1650, { 0x92 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x1651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0286
        gbc.setState(0x1a5a, 0x4c9, 0x9970, 0x2db0, 0x6cd7, 0xa1a6, 0x1, 0x0);
        gbc.writeMem(0x1a5a, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c9, gbc.sp());
        EXPECT(0x1a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0287
        gbc.setState(0x9568, 0x2317, 0x6fe0, 0x7b9d, 0x982c, 0x41ff, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9568));
        // 92 0288
        gbc.setState(0x87d3, 0xc25b, 0x5a40, 0x256b, 0x2344, 0xf699, 0x0, 0x0);
        gbc.writeMem(0x87d3, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc25b, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x87d3));
        // 92 0289
        gbc.setState(0x7abd, 0x7f57, 0xf10, 0x6237, 0x7e53, 0x6c30, 0x0, 0x1);
        gbc.writeMem(0x7abd, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7f57, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 028B
        gbc.setState(0x14f1, 0x3458, 0x9b50, 0x4d11, 0x7b74, 0xbb4b, 0x0, 0x1);
        gbc.writeMem(0x14f1, { 0x92 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3458, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 028C
        gbc.setState(0xea94, 0xf37e, 0x2df0, 0x36ef, 0x937e, 0xebf5, 0x0, 0x1);
        gbc.writeMem(0xea94, { 0x92 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf37e, gbc.sp());
        EXPECT(0xea95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xea94));
        // 92 028D
        gbc.setState(0xaeea, 0x9b9, 0x8dd0, 0x12a1, 0x7115, 0x1fc4, 0x0, 0x1);
        gbc.writeMem(0xaeea, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9b9, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaeea));
        // 92 028E
        gbc.setState(0x7eb, 0x81b9, 0xae60, 0xa589, 0xfefa, 0x792a, 0x1, 0x1);
        gbc.writeMem(0x7eb, { 0x92 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0x7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 028F
        gbc.setState(0x6f55, 0xe67e, 0x1610, 0xdc0d, 0x1186, 0x582c, 0x1, 0x0);
        gbc.writeMem(0x6f55, { 0x92 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0290
        gbc.setState(0x7c8, 0x20e5, 0xb510, 0xba15, 0xa890, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0x7c8, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x20e5, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0291
        gbc.setState(0xc3ac, 0xf199, 0x980, 0x1ed2, 0xebc5, 0x7ddf, 0x0, 0x1);
        gbc.writeMem(0xc3ac, { 0x92 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf199, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc3ac));
        // 92 0292
        gbc.setState(0x69cc, 0x3b7c, 0x5e60, 0x3050, 0xf380, 0x3203, 0x0, 0x1);
        gbc.writeMem(0x69cc, { 0x92 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0293
        gbc.setState(0x3b1, 0xae4, 0x2280, 0xdc80, 0xc63d, 0x2131, 0x0, 0x1);
        gbc.writeMem(0x3b1, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xae4, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0294
        gbc.setState(0x631f, 0xbd8f, 0x4aa0, 0xca6d, 0xf4cb, 0xe032, 0x1, 0x1);
        gbc.writeMem(0x631f, { 0x92 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x6320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0296
        gbc.setState(0x3519, 0x62e2, 0xae30, 0xfa03, 0xbe37, 0x1e31, 0x0, 0x0);
        gbc.writeMem(0x3519, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x62e2, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0297
        gbc.setState(0xb96f, 0xd1aa, 0xba50, 0xac84, 0xcaa7, 0xfd9c, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd1aa, gbc.sp());
        EXPECT(0xb970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb96f));
        // 92 0298
        gbc.setState(0x7edf, 0xa3f5, 0xeb10, 0x6b55, 0xff0e, 0x8b33, 0x0, 0x1);
        gbc.writeMem(0x7edf, { 0x92 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0299
        gbc.setState(0x908f, 0x3b82, 0x5b00, 0x8891, 0xcde5, 0x34cc, 0x1, 0x0);
        gbc.writeMem(0x908f, { 0x92 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x908f));
        // 92 029A
        gbc.setState(0xec1a, 0x5307, 0xdcc0, 0x1135, 0xbaee, 0x5750, 0x1, 0x0);
        gbc.writeMem(0xec1a, { 0x92 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0xec1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xec1a));
        // 92 029B
        gbc.setState(0x4dc5, 0x28e6, 0x7b0, 0x5428, 0x7350, 0xda3d, 0x0, 0x0);
        gbc.writeMem(0x4dc5, { 0x92 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x28e6, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 029C
        gbc.setState(0xe70c, 0xe4a8, 0xb750, 0x791d, 0xd6b0, 0xeb12, 0x1, 0x0);
        gbc.writeMem(0xe70c, { 0x92 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe70c));
        // 92 029D
        gbc.setState(0xc9ca, 0xf4c2, 0xefb0, 0xf870, 0xb2, 0x870b, 0x1, 0x1);
        gbc.writeMem(0xc9ca, { 0x92 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf4c2, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc9ca));
        // 92 029E
        gbc.setState(0x704d, 0x7365, 0xa350, 0x3c8c, 0x2c75, 0x9a31, 0x1, 0x1);
        gbc.writeMem(0x704d, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7365, gbc.sp());
        EXPECT(0x704e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 029F
        gbc.setState(0x3d5d, 0x9fb, 0x4f10, 0xe30a, 0xfaca, 0xec23, 0x0, 0x0);
        gbc.writeMem(0x3d5d, { 0x92 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9fb, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02A0
        gbc.setState(0xd16a, 0xcdb6, 0xb0, 0xde1b, 0x1ec8, 0x281d, 0x0, 0x0);
        gbc.writeMem(0xd16a, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd16a));
        // 92 02A1
        gbc.setState(0x6784, 0x5435, 0xef50, 0xc864, 0xf670, 0xa3c5, 0x1, 0x0);
        gbc.writeMem(0x6784, { 0x92 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0x6785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02A2
        gbc.setState(0x8760, 0xfe0f, 0xbea0, 0x5df0, 0xdc1c, 0x1c51, 0x1, 0x1);
        gbc.writeMem(0x8760, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfe0f, gbc.sp());
        EXPECT(0x8761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8760));
        // 92 02A3
        gbc.setState(0x9748, 0xb12f, 0x2dc0, 0xf64f, 0x892c, 0x7d34, 0x1, 0x1);
        gbc.writeMem(0x9748, { 0x92 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9748));
        // 92 02A4
        gbc.setState(0xb0db, 0x8670, 0x4ce0, 0x387c, 0x4472, 0xcba2, 0x1, 0x1);
        gbc.writeMem(0xb0db, { 0x92 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0xb0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb0db));
        // 92 02A5
        gbc.setState(0xd06c, 0xf0b4, 0x5570, 0x4466, 0xded3, 0x813a, 0x1, 0x1);
        gbc.writeMem(0xd06c, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd06c));
        // 92 02A6
        gbc.setState(0x935b, 0x7f7c, 0xb7c0, 0xffe9, 0x89c2, 0x1aa, 0x0, 0x1);
        gbc.writeMem(0x935b, { 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f7c, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x935b));
        // 92 02A7
        gbc.setState(0xb7bf, 0x2809, 0x12a0, 0xad65, 0x5de, 0xa0b, 0x0, 0x1);
        gbc.writeMem(0xb7bf, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb7bf));
        // 92 02A8
        gbc.setState(0x94b8, 0xc93d, 0xec10, 0xc3f4, 0x5de8, 0x14e, 0x1, 0x1);
        gbc.writeMem(0x94b8, { 0x92 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc93d, gbc.sp());
        EXPECT(0x94b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x94b8));
        // 92 02A9
        gbc.setState(0x59b6, 0x457f, 0xfc00, 0x2f1a, 0x8b01, 0x4def, 0x0, 0x1);
        gbc.writeMem(0x59b6, { 0x92 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02AA
        gbc.setState(0xd616, 0x4cfc, 0x3510, 0xcaa1, 0x4f79, 0x8f5a, 0x0, 0x0);
        gbc.writeMem(0xd616, { 0x92 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0xd617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd616));
        // 92 02AB
        gbc.setState(0xc692, 0xcd82, 0xa080, 0x2f21, 0xc60, 0xb221, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0x92 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc692));
        // 92 02AC
        gbc.setState(0xa81b, 0xfe84, 0x650, 0xe01c, 0xe100, 0x34c1, 0x1, 0x0);
        gbc.writeMem(0xa81b, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0xa81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa81b));
        // 92 02AD
        gbc.setState(0xc2aa, 0x9252, 0xafa0, 0xe792, 0xb92e, 0x77ba, 0x1, 0x0);
        gbc.writeMem(0xc2aa, { 0x92 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc2aa));
        // 92 02AE
        gbc.setState(0x3944, 0x30fe, 0x9850, 0x62ef, 0xf797, 0xf95, 0x0, 0x1);
        gbc.writeMem(0x3944, { 0x92 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x30fe, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02AF
        gbc.setState(0x262a, 0xe289, 0x2010, 0xe6c, 0xb723, 0x4cff, 0x0, 0x1);
        gbc.writeMem(0x262a, { 0x92 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x262b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02B0
        gbc.setState(0x92dd, 0x7201, 0xb4f0, 0xff9c, 0x5c78, 0x691b, 0x0, 0x0);
        gbc.writeMem(0x92dd, { 0x92 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7201, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x92dd));
        // 92 02B1
        gbc.setState(0x49cd, 0xebb0, 0x3c50, 0x66e9, 0x261a, 0x27df, 0x0, 0x1);
        gbc.writeMem(0x49cd, { 0x92 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xebb0, gbc.sp());
        EXPECT(0x49ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02B2
        gbc.setState(0x7710, 0x906c, 0xfd50, 0x1944, 0x65dc, 0xf4b3, 0x0, 0x1);
        gbc.writeMem(0x7710, { 0x92 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02B3
        gbc.setState(0xb3c1, 0xd31a, 0x35e0, 0xac43, 0xa500, 0xbd01, 0x1, 0x1);
        gbc.writeMem(0xb3c1, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd31a, gbc.sp());
        EXPECT(0xb3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb3c1));
        // 92 02B4
        gbc.setState(0xe044, 0x2d1d, 0xc5a0, 0x9233, 0x75fb, 0x8f19, 0x1, 0x1);
        gbc.writeMem(0xe044, { 0x92 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2d1d, gbc.sp());
        EXPECT(0xe045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe044));
        // 92 02B5
        gbc.setState(0x3813, 0xe72a, 0x60c0, 0xf8d5, 0xe0d0, 0x8333, 0x1, 0x1);
        gbc.writeMem(0x3813, { 0x92 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02B7
        gbc.setState(0x90e4, 0x17db, 0x7d70, 0xf63e, 0x56e6, 0xdd00, 0x1, 0x1);
        gbc.writeMem(0x90e4, { 0x92 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x90e4));
        // 92 02B8
        gbc.setState(0xac25, 0x94f4, 0x9220, 0x8134, 0x4954, 0x3e2c, 0x0, 0x1);
        gbc.writeMem(0xac25, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0xac26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xac25));
        // 92 02B9
        gbc.setState(0x43c, 0x74dc, 0x9f60, 0x73ad, 0x896, 0x4224, 0x0, 0x0);
        gbc.writeMem(0x43c, { 0x92 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x74dc, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02BB
        gbc.setState(0xa9a2, 0x2ebb, 0x3490, 0x3bf0, 0xcc42, 0x96b1, 0x1, 0x0);
        gbc.writeMem(0xa9a2, { 0x92 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ebb, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa9a2));
        // 92 02BC
        gbc.setState(0x9823, 0x6b14, 0xb570, 0x6a1, 0xd342, 0xbbc3, 0x1, 0x1);
        gbc.writeMem(0x9823, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x9824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9823));
        // 92 02BD
        gbc.setState(0x7ec5, 0xdb79, 0xe6c0, 0xebfd, 0x26f4, 0xde12, 0x1, 0x1);
        gbc.writeMem(0x7ec5, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb79, gbc.sp());
        EXPECT(0x7ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02BE
        gbc.setState(0x26a1, 0xc02a, 0x3b50, 0x874c, 0x8fc4, 0xbba0, 0x0, 0x1);
        gbc.writeMem(0x26a1, { 0x92 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc02a, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02BF
        gbc.setState(0x926f, 0x2c74, 0x98b0, 0x88c2, 0x5ce1, 0x14d, 0x1, 0x0);
        gbc.writeMem(0x926f, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2c74, gbc.sp());
        EXPECT(0x9270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x926f));
        // 92 02C0
        gbc.setState(0xf95, 0x56ae, 0x8a20, 0x3c8e, 0xb659, 0xb37f, 0x1, 0x0);
        gbc.writeMem(0xf95, { 0x92 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0xf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02C1
        gbc.setState(0xcdaf, 0xce41, 0xdbe0, 0x438a, 0x4ae3, 0x87da, 0x0, 0x1);
        gbc.writeMem(0xcdaf, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcdaf));
        // 92 02C2
        gbc.setState(0xc9c4, 0x737b, 0x59e0, 0xe8f, 0xe36a, 0xad8c, 0x1, 0x0);
        gbc.writeMem(0xc9c4, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc9c4));
        // 92 02C3
        gbc.setState(0xdabd, 0xea79, 0x2960, 0xd61a, 0x193e, 0x9d77, 0x1, 0x0);
        gbc.writeMem(0xdabd, { 0x92 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xea79, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdabd));
        // 92 02C4
        gbc.setState(0xddcb, 0x7743, 0xab10, 0x6590, 0x793f, 0x64ec, 0x0, 0x1);
        gbc.writeMem(0xddcb, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xddcb));
        // 92 02C5
        gbc.setState(0xb2d1, 0x13c5, 0x1050, 0x13b, 0xdd08, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0xb2d1, { 0x92 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x13c5, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb2d1));
        // 92 02C6
        gbc.setState(0x8d7b, 0xfa63, 0x6a50, 0xb9c6, 0x3970, 0xe95, 0x0, 0x1);
        gbc.writeMem(0x8d7b, { 0x92 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0x8d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8d7b));
        // 92 02C7
        gbc.setState(0x5dd1, 0xe035, 0xe910, 0x8476, 0xa99a, 0x2d88, 0x0, 0x0);
        gbc.writeMem(0x5dd1, { 0x92 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02C8
        gbc.setState(0x9f06, 0x3919, 0x92a0, 0xab97, 0x51b, 0x2510, 0x0, 0x1);
        gbc.writeMem(0x9f06, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3919, gbc.sp());
        EXPECT(0x9f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f06));
        // 92 02C9
        gbc.setState(0x7a47, 0xd8db, 0xc000, 0x9d9b, 0x5e6d, 0x4a86, 0x1, 0x1);
        gbc.writeMem(0x7a47, { 0x92 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd8db, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02CA
        gbc.setState(0xdf7f, 0x1b09, 0x9a70, 0xaeec, 0xb731, 0x3de5, 0x0, 0x0);
        gbc.writeMem(0xdf7f, { 0x92 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1b09, gbc.sp());
        EXPECT(0xdf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdf7f));
        // 92 02CB
        gbc.setState(0xc4f1, 0x26d8, 0x9150, 0xfe8, 0x36a9, 0xad10, 0x0, 0x1);
        gbc.writeMem(0xc4f1, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc4f1));
        // 92 02CC
        gbc.setState(0xa64, 0xcccc, 0x9cc0, 0x3398, 0x9a97, 0x3550, 0x1, 0x0);
        gbc.writeMem(0xa64, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0xa65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02CD
        gbc.setState(0xc8af, 0x3ab1, 0xd80, 0x1c33, 0x1950, 0x8607, 0x0, 0x0);
        gbc.writeMem(0xc8af, { 0x92 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3ab1, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc8af));
        // 92 02CE
        gbc.setState(0x407d, 0x931, 0xf830, 0x38b8, 0x2235, 0x6e27, 0x1, 0x1);
        gbc.writeMem(0x407d, { 0x92 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0x407e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02CF
        gbc.setState(0x2b01, 0xe414, 0x2a10, 0xb69f, 0x187f, 0x53c6, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0x92 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02D0
        gbc.setState(0x9282, 0xe306, 0xf9a0, 0xcf93, 0x9e21, 0x7a2f, 0x0, 0x1);
        gbc.writeMem(0x9282, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x9283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9282));
        // 92 02D1
        gbc.setState(0x1b3, 0x7c04, 0x280, 0xa6ea, 0x1233, 0x8f1d, 0x1, 0x0);
        gbc.writeMem(0x1b3, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0x1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02D2
        gbc.setState(0x5644, 0x9695, 0x9490, 0x497e, 0xb19b, 0xb6d1, 0x1, 0x1);
        gbc.writeMem(0x5644, { 0x92 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9695, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02D3
        gbc.setState(0xd8ed, 0x6f78, 0x7d80, 0xcd3f, 0x3fd2, 0xbed7, 0x1, 0x1);
        gbc.writeMem(0xd8ed, { 0x92 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0xd8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd8ed));
        // 92 02D4
        gbc.setState(0x2653, 0x1668, 0xef90, 0x383f, 0xdff1, 0x9144, 0x1, 0x1);
        gbc.writeMem(0x2653, { 0x92 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1668, gbc.sp());
        EXPECT(0x2654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02D5
        gbc.setState(0xd01, 0x6f43, 0xd510, 0x1d34, 0xd276, 0x503c, 0x0, 0x1);
        gbc.writeMem(0xd01, { 0x92 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6f43, gbc.sp());
        EXPECT(0xd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02D6
        gbc.setState(0x3aed, 0x7859, 0xc820, 0xe993, 0x3c33, 0x67d5, 0x0, 0x1);
        gbc.writeMem(0x3aed, { 0x92 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02D7
        gbc.setState(0xb514, 0x5023, 0x1160, 0x969d, 0xca2c, 0xdb43, 0x1, 0x1);
        gbc.writeMem(0xb514, { 0x92 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5023, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb514));
        // 92 02D9
        gbc.setState(0x2528, 0x661b, 0x5960, 0x7501, 0xf35e, 0x4a9b, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0x92 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x661b, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02DA
        gbc.setState(0x18a2, 0xf389, 0x470, 0xace9, 0x4a1c, 0x77e7, 0x0, 0x1);
        gbc.writeMem(0x18a2, { 0x92 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02DB
        gbc.setState(0x54c3, 0x4570, 0xa0a0, 0xf72a, 0x56d7, 0x2eb1, 0x1, 0x0);
        gbc.writeMem(0x54c3, { 0x92 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4570, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02DC
        gbc.setState(0x37e7, 0x1c89, 0x1540, 0x613c, 0x444d, 0x8db4, 0x0, 0x0);
        gbc.writeMem(0x37e7, { 0x92 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1c89, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02DD
        gbc.setState(0xc51, 0xf8e4, 0xcbb0, 0x2c8f, 0xeca2, 0x6b20, 0x1, 0x1);
        gbc.writeMem(0xc51, { 0x92 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0xc52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02DE
        gbc.setState(0x479a, 0x9ed, 0x2aa0, 0x215, 0xeb6, 0xd102, 0x0, 0x1);
        gbc.writeMem(0x479a, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0x479b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02DF
        gbc.setState(0xa308, 0x8a0f, 0xb660, 0xd50d, 0x54b8, 0x422c, 0x1, 0x0);
        gbc.writeMem(0xa308, { 0x92 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8a0f, gbc.sp());
        EXPECT(0xa309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa308));
        // 92 02E0
        gbc.setState(0x361c, 0xa1d8, 0x7f50, 0x1873, 0x2b4a, 0x1ba2, 0x0, 0x0);
        gbc.writeMem(0x361c, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa1d8, gbc.sp());
        EXPECT(0x361d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02E1
        gbc.setState(0x15ea, 0x45c4, 0x3420, 0x6335, 0xe061, 0x2a21, 0x1, 0x1);
        gbc.writeMem(0x15ea, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x45c4, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02E2
        gbc.setState(0x3155, 0xcb26, 0xdda0, 0x27ac, 0xa402, 0xd41c, 0x1, 0x1);
        gbc.writeMem(0x3155, { 0x92 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02E3
        gbc.setState(0x549c, 0x2087, 0xac60, 0xd648, 0x3438, 0xa433, 0x0, 0x1);
        gbc.writeMem(0x549c, { 0x92 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2087, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02E4
        gbc.setState(0xdbab, 0x4a7c, 0x2db0, 0xb8a5, 0xd51f, 0xab2b, 0x1, 0x0);
        gbc.writeMem(0xdbab, { 0x92 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4a7c, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdbab));
        // 92 02E5
        gbc.setState(0xc68f, 0xee47, 0x8040, 0xf83a, 0xbe5a, 0xb5f6, 0x0, 0x1);
        gbc.writeMem(0xc68f, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee47, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc68f));
        // 92 02E6
        gbc.setState(0x6a1b, 0x9ed7, 0x76a0, 0xc720, 0x8954, 0x759, 0x0, 0x1);
        gbc.writeMem(0x6a1b, { 0x92 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9ed7, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02E7
        gbc.setState(0x9f61, 0x9808, 0x4ba0, 0xeb84, 0x31c6, 0xf1ea, 0x1, 0x0);
        gbc.writeMem(0x9f61, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x9f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9f61));
        // 92 02E8
        gbc.setState(0x81e, 0x62d0, 0xf5c0, 0xa9a5, 0x69d, 0xc5c2, 0x1, 0x1);
        gbc.writeMem(0x81e, { 0x92 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x62d0, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02E9
        gbc.setState(0x9531, 0x96e7, 0xf510, 0xdd7c, 0xebbb, 0xebc6, 0x1, 0x1);
        gbc.writeMem(0x9531, { 0x92 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x96e7, gbc.sp());
        EXPECT(0x9532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9531));
        // 92 02EA
        gbc.setState(0x53d5, 0x26ae, 0x4aa0, 0x611a, 0x665d, 0x930, 0x1, 0x1);
        gbc.writeMem(0x53d5, { 0x92 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x26ae, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02EB
        gbc.setState(0xdd97, 0x8cf1, 0x5780, 0xaa9f, 0x8214, 0xf645, 0x1, 0x0);
        gbc.writeMem(0xdd97, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8cf1, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdd97));
        // 92 02EC
        gbc.setState(0x564d, 0xe116, 0x4400, 0x2973, 0xb72b, 0x8c0, 0x1, 0x0);
        gbc.writeMem(0x564d, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe116, gbc.sp());
        EXPECT(0x564e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02ED
        gbc.setState(0xd2d0, 0xbe25, 0xbb60, 0x85ee, 0xc62a, 0x404f, 0x1, 0x1);
        gbc.writeMem(0xd2d0, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbe25, gbc.sp());
        EXPECT(0xd2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd2d0));
        // 92 02EE
        gbc.setState(0x3c5b, 0x1eea, 0x8da0, 0xaf85, 0x430a, 0x3cc2, 0x1, 0x0);
        gbc.writeMem(0x3c5b, { 0x92 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x3c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02EF
        gbc.setState(0x9ec2, 0xaf20, 0xa640, 0xfffe, 0x99e4, 0x6842, 0x1, 0x1);
        gbc.writeMem(0x9ec2, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaf20, gbc.sp());
        EXPECT(0x9ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9ec2));
        // 92 02F0
        gbc.setState(0x1984, 0x910a, 0xfd50, 0x7c9c, 0x96bb, 0x5126, 0x0, 0x1);
        gbc.writeMem(0x1984, { 0x92 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x910a, gbc.sp());
        EXPECT(0x1985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02F1
        gbc.setState(0x19c9, 0x804f, 0x7410, 0x37c, 0x436, 0xcc19, 0x0, 0x1);
        gbc.writeMem(0x19c9, { 0x92 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x19ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02F2
        gbc.setState(0x14fd, 0xa72c, 0x9230, 0x1429, 0xb019, 0xb62c, 0x0, 0x1);
        gbc.writeMem(0x14fd, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02F3
        gbc.setState(0x9d4e, 0x64fd, 0xe810, 0xea8d, 0xbd20, 0xa0ee, 0x1, 0x0);
        gbc.writeMem(0x9d4e, { 0x92 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x9d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9d4e));
        // 92 02F4
        gbc.setState(0x9750, 0x5b08, 0xea40, 0x7358, 0x6efa, 0xf640, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0x92 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0x9751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9750));
        // 92 02F5
        gbc.setState(0xa50d, 0x4c69, 0xaf60, 0x319d, 0xa288, 0x296d, 0x0, 0x1);
        gbc.writeMem(0xa50d, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa50d));
        // 92 02F6
        gbc.setState(0x908a, 0x5dd4, 0x5260, 0x660, 0x9b01, 0xc883, 0x1, 0x1);
        gbc.writeMem(0x908a, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5dd4, gbc.sp());
        EXPECT(0x908b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x908a));
        // 92 02F7
        gbc.setState(0x3dc9, 0xd81, 0x1b70, 0xe753, 0xd184, 0x86d2, 0x0, 0x1);
        gbc.writeMem(0x3dc9, { 0x92 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02F8
        gbc.setState(0xdc8, 0xd852, 0x2a60, 0xa8ea, 0xec54, 0xd156, 0x0, 0x0);
        gbc.writeMem(0xdc8, { 0x92 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd852, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02F9
        gbc.setState(0x817b, 0x767a, 0x2d30, 0xf1cc, 0x32ac, 0x6c74, 0x0, 0x1);
        gbc.writeMem(0x817b, { 0x92 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x767a, gbc.sp());
        EXPECT(0x817c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x817b));
        // 92 02FA
        gbc.setState(0xaaf1, 0xdf84, 0xd400, 0xe35c, 0xe959, 0x708a, 0x1, 0x1);
        gbc.writeMem(0xaaf1, { 0x92 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaaf1));
        // 92 02FB
        gbc.setState(0xd89f, 0xdc66, 0x5550, 0x4431, 0xf1c5, 0x3712, 0x1, 0x0);
        gbc.writeMem(0xd89f, { 0x92 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd89f));
        // 92 02FC
        gbc.setState(0xdcc3, 0x2f94, 0x4ea0, 0x3298, 0xfda5, 0xee98, 0x0, 0x1);
        gbc.writeMem(0xdcc3, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f94, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdcc3));
        // 92 02FD
        gbc.setState(0x14fe, 0xa675, 0x90c0, 0x98de, 0x214b, 0x8c43, 0x0, 0x1);
        gbc.writeMem(0x14fe, { 0x92 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x14ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 02FE
        gbc.setState(0xdda, 0x91ea, 0x5f0, 0xa733, 0x7e21, 0x9e11, 0x1, 0x1);
        gbc.writeMem(0xdda, { 0x92 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x91ea, gbc.sp());
        EXPECT(0xddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 02FF
        gbc.setState(0xc03c, 0xeb9c, 0x1b10, 0xd461, 0xf6a4, 0x474a, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeb9c, gbc.sp());
        EXPECT(0xc03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc03c));
        // 92 0300
        gbc.setState(0x9a7e, 0xc9a5, 0x6ca0, 0x8bad, 0x5225, 0x403a, 0x1, 0x1);
        gbc.writeMem(0x9a7e, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc9a5, gbc.sp());
        EXPECT(0x9a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a7e));
        // 92 0301
        gbc.setState(0xac83, 0x6c59, 0xa50, 0xf3ce, 0xca99, 0x3ff8, 0x0, 0x1);
        gbc.writeMem(0xac83, { 0x92 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0xac84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xac83));
        // 92 0302
        gbc.setState(0x527f, 0x2667, 0x29d0, 0x697c, 0xe7a7, 0x9117, 0x1, 0x1);
        gbc.writeMem(0x527f, { 0x92 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0303
        gbc.setState(0x2a9b, 0x2da8, 0x7a70, 0x187c, 0xc64b, 0xdcb, 0x0, 0x0);
        gbc.writeMem(0x2a9b, { 0x92 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0304
        gbc.setState(0xefbd, 0x8f0e, 0x11f0, 0xdf9a, 0xd0eb, 0x9a3c, 0x1, 0x0);
        gbc.writeMem(0xefbd, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8f0e, gbc.sp());
        EXPECT(0xefbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xefbd));
        // 92 0305
        gbc.setState(0xe1ad, 0xfb68, 0xa560, 0xcd4, 0x9385, 0x35c4, 0x1, 0x0);
        gbc.writeMem(0xe1ad, { 0x92 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0xe1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe1ad));
        // 92 0306
        gbc.setState(0xe798, 0x9517, 0xdec0, 0xf907, 0x95e2, 0x3dec, 0x0, 0x0);
        gbc.writeMem(0xe798, { 0x92 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9517, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe798));
        // 92 0307
        gbc.setState(0x5a20, 0xad96, 0xb520, 0x8b0e, 0x7609, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x5a20, { 0x92 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0308
        gbc.setState(0x6bd2, 0x2e4, 0xc7b0, 0x784f, 0xb183, 0x9df4, 0x0, 0x0);
        gbc.writeMem(0x6bd2, { 0x92 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 030A
        gbc.setState(0x3281, 0xbd23, 0xcf40, 0x3ccf, 0xe54, 0xc0a9, 0x1, 0x1);
        gbc.writeMem(0x3281, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbd23, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 030C
        gbc.setState(0x11a7, 0xa700, 0x5db0, 0x6c5e, 0xbdb8, 0x2d40, 0x1, 0x0);
        gbc.writeMem(0x11a7, { 0x92 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 030D
        gbc.setState(0x8444, 0x430b, 0x3410, 0x27e4, 0xbab8, 0x954d, 0x0, 0x1);
        gbc.writeMem(0x8444, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x430b, gbc.sp());
        EXPECT(0x8445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8444));
        // 92 030F
        gbc.setState(0xcc0a, 0x76c4, 0x9600, 0x69c, 0x4253, 0xc151, 0x1, 0x0);
        gbc.writeMem(0xcc0a, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x76c4, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcc0a));
        // 92 0310
        gbc.setState(0xe962, 0x8808, 0x4ae0, 0x221c, 0xef19, 0x6ba6, 0x1, 0x0);
        gbc.writeMem(0xe962, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8808, gbc.sp());
        EXPECT(0xe963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe962));
        // 92 0311
        gbc.setState(0xefa3, 0x9659, 0xab00, 0xc1d, 0xd31a, 0x57df, 0x1, 0x0);
        gbc.writeMem(0xefa3, { 0x92 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0xefa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xefa3));
        // 92 0312
        gbc.setState(0x1e31, 0x52a8, 0xc0d0, 0xdb47, 0x8689, 0xd1b8, 0x1, 0x0);
        gbc.writeMem(0x1e31, { 0x92 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x1e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0313
        gbc.setState(0xe877, 0x1ada, 0xe910, 0x98ac, 0xd6a2, 0xbc72, 0x0, 0x0);
        gbc.writeMem(0xe877, { 0x92 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ada, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe877));
        // 92 0314
        gbc.setState(0xa8b4, 0x2b41, 0x6350, 0x75b5, 0xdc42, 0x7d38, 0x1, 0x0);
        gbc.writeMem(0xa8b4, { 0x92 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0xa8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa8b4));
        // 92 0315
        gbc.setState(0xcdbe, 0x619, 0xe480, 0x12ee, 0x6aa8, 0xa5d1, 0x1, 0x1);
        gbc.writeMem(0xcdbe, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcdbe));
        // 92 0316
        gbc.setState(0x5e2, 0xcf5f, 0x9370, 0xfff8, 0xe4b, 0x1822, 0x1, 0x0);
        gbc.writeMem(0x5e2, { 0x92 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0317
        gbc.setState(0xd092, 0x6fc4, 0x62c0, 0xb751, 0x7bbc, 0x52b2, 0x1, 0x0);
        gbc.writeMem(0xd092, { 0x92 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6fc4, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd092));
        // 92 0318
        gbc.setState(0x90c7, 0x39d9, 0x2ee0, 0x3c23, 0x9cd3, 0xd389, 0x1, 0x1);
        gbc.writeMem(0x90c7, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x90c7));
        // 92 0319
        gbc.setState(0x7de, 0xaba8, 0x8510, 0x9dd8, 0x34fa, 0x4564, 0x0, 0x0);
        gbc.writeMem(0x7de, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaba8, gbc.sp());
        EXPECT(0x7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 031A
        gbc.setState(0x26b4, 0xcbf4, 0x390, 0x93b6, 0xcc5e, 0xacaf, 0x0, 0x1);
        gbc.writeMem(0x26b4, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcbf4, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 031B
        gbc.setState(0x805b, 0x42b7, 0xd7a0, 0x9e17, 0x241e, 0x4897, 0x0, 0x1);
        gbc.writeMem(0x805b, { 0x92 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0x805c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x805b));
        // 92 031C
        gbc.setState(0x5014, 0x911a, 0x4fb0, 0xf9eb, 0x4df5, 0x82ef, 0x1, 0x1);
        gbc.writeMem(0x5014, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 031D
        gbc.setState(0x20e6, 0x9f9e, 0x8480, 0x68b8, 0x41b9, 0xecb6, 0x0, 0x0);
        gbc.writeMem(0x20e6, { 0x92 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0x20e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 031E
        gbc.setState(0x69a8, 0x36f2, 0x3da0, 0x612e, 0xba58, 0xddc1, 0x1, 0x1);
        gbc.writeMem(0x69a8, { 0x92 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x69a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 031F
        gbc.setState(0xa2bc, 0x25b7, 0xff90, 0x7b74, 0xf7ee, 0x1b8b, 0x1, 0x0);
        gbc.writeMem(0xa2bc, { 0x92 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x25b7, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa2bc));
        // 92 0320
        gbc.setState(0x459f, 0x202b, 0xf880, 0x50d4, 0x9b72, 0x8eda, 0x1, 0x1);
        gbc.writeMem(0x459f, { 0x92 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0x45a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0321
        gbc.setState(0x9a73, 0x40aa, 0xca50, 0x7504, 0x19bc, 0xa0a5, 0x1, 0x1);
        gbc.writeMem(0x9a73, { 0x92 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0x9a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9a73));
        // 92 0322
        gbc.setState(0xa914, 0x9a6e, 0x4b0, 0xba12, 0xa9b9, 0x24a, 0x1, 0x1);
        gbc.writeMem(0xa914, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9a6e, gbc.sp());
        EXPECT(0xa915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa914));
        // 92 0323
        gbc.setState(0x7a25, 0xa5f, 0x2b20, 0xf64, 0x8dc4, 0xec4, 0x1, 0x0);
        gbc.writeMem(0x7a25, { 0x92 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa5f, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0324
        gbc.setState(0x462b, 0x72ba, 0xa570, 0x9085, 0x15f5, 0x8222, 0x1, 0x1);
        gbc.writeMem(0x462b, { 0x92 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x72ba, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0326
        gbc.setState(0x6fcc, 0x1486, 0xa10, 0x6ba0, 0xcccc, 0x92fa, 0x0, 0x1);
        gbc.writeMem(0x6fcc, { 0x92 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0327
        gbc.setState(0x2a60, 0xed6d, 0x2ef0, 0x8d1d, 0xdc57, 0xbf5d, 0x0, 0x0);
        gbc.writeMem(0x2a60, { 0x92 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xed6d, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0328
        gbc.setState(0xc550, 0x3ddd, 0xc4c0, 0x8b08, 0x52bc, 0x50f, 0x1, 0x1);
        gbc.writeMem(0xc550, { 0x92 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3ddd, gbc.sp());
        EXPECT(0xc551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc550));
        // 92 0329
        gbc.setState(0x6f5f, 0xe4d9, 0x9e50, 0xe7a2, 0x2ff7, 0xead4, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0x92 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 032A
        gbc.setState(0xef54, 0x30aa, 0xc170, 0xce0e, 0x84e8, 0x60a3, 0x0, 0x0);
        gbc.writeMem(0xef54, { 0x92 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x30aa, gbc.sp());
        EXPECT(0xef55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xef54));
        // 92 032B
        gbc.setState(0xb04, 0xdac1, 0x7b90, 0xc3e9, 0xac88, 0x41f1, 0x0, 0x0);
        gbc.writeMem(0xb04, { 0x92 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdac1, gbc.sp());
        EXPECT(0xb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 032C
        gbc.setState(0x2d5b, 0x96d3, 0x7ea0, 0xbd3a, 0xc9c6, 0x10a8, 0x0, 0x0);
        gbc.writeMem(0x2d5b, { 0x92 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x96d3, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 032D
        gbc.setState(0x3c2a, 0x6b75, 0x98f0, 0xdc77, 0x4a54, 0xf34d, 0x1, 0x0);
        gbc.writeMem(0x3c2a, { 0x92 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6b75, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 032E
        gbc.setState(0x8df1, 0x51ef, 0x8aa0, 0x915d, 0x60bc, 0x9872, 0x0, 0x1);
        gbc.writeMem(0x8df1, { 0x92 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51ef, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8df1));
        // 92 032F
        gbc.setState(0xb0c1, 0xf457, 0x3f20, 0x9978, 0xa577, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0xb0c1, { 0x92 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0xb0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb0c1));
        // 92 0330
        gbc.setState(0xa05c, 0x80d4, 0xfeb0, 0x7996, 0x29da, 0x2a41, 0x0, 0x0);
        gbc.writeMem(0xa05c, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x80d4, gbc.sp());
        EXPECT(0xa05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa05c));
        // 92 0331
        gbc.setState(0x2764, 0x2d52, 0xe320, 0x2716, 0xba99, 0x7637, 0x1, 0x1);
        gbc.writeMem(0x2764, { 0x92 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0x2765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0332
        gbc.setState(0xe29b, 0x88e6, 0x6e30, 0xec59, 0x935a, 0xc727, 0x1, 0x0);
        gbc.writeMem(0xe29b, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x88e6, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe29b));
        // 92 0333
        gbc.setState(0x21fe, 0xdc43, 0x3990, 0xb22d, 0x2790, 0xbc27, 0x0, 0x1);
        gbc.writeMem(0x21fe, { 0x92 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdc43, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0334
        gbc.setState(0x3846, 0xe6e8, 0xa310, 0x6231, 0x8ab6, 0x9205, 0x1, 0x1);
        gbc.writeMem(0x3846, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe6e8, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0335
        gbc.setState(0x1ad3, 0xe0be, 0x2c50, 0xfb81, 0x57bc, 0xd7e8, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe0be, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0336
        gbc.setState(0x25a3, 0xafdb, 0x660, 0xe76f, 0x26d7, 0xd8f6, 0x0, 0x0);
        gbc.writeMem(0x25a3, { 0x92 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xafdb, gbc.sp());
        EXPECT(0x25a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0337
        gbc.setState(0xf85, 0x22b9, 0x3f40, 0x85e4, 0xf0d4, 0x1181, 0x1, 0x0);
        gbc.writeMem(0xf85, { 0x92 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0xf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0338
        gbc.setState(0x8c7e, 0x438e, 0x1ee0, 0x2d9c, 0xcd8f, 0xa480, 0x1, 0x1);
        gbc.writeMem(0x8c7e, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0x8c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8c7e));
        // 92 0339
        gbc.setState(0x8b09, 0x27ac, 0xf6c0, 0x790e, 0x63e0, 0x4676, 0x1, 0x0);
        gbc.writeMem(0x8b09, { 0x92 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8b09));
        // 92 033A
        gbc.setState(0xa090, 0x18a6, 0x8920, 0x4f46, 0x9646, 0xc904, 0x1, 0x0);
        gbc.writeMem(0xa090, { 0x92 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa090));
        // 92 033B
        gbc.setState(0x21c7, 0x4d9e, 0x6220, 0x6407, 0x6281, 0xfaf2, 0x0, 0x1);
        gbc.writeMem(0x21c7, { 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4d9e, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 033C
        gbc.setState(0x38f3, 0x5878, 0xd0b0, 0xefaf, 0x69bb, 0xd23e, 0x1, 0x1);
        gbc.writeMem(0x38f3, { 0x92 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0x38f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 033E
        gbc.setState(0xa659, 0x780d, 0x370, 0x45c3, 0xb327, 0x9020, 0x1, 0x0);
        gbc.writeMem(0xa659, { 0x92 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x780d, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa659));
        // 92 0340
        gbc.setState(0xbf3f, 0x9381, 0xba0, 0xbe29, 0xcf54, 0xa70a, 0x0, 0x0);
        gbc.writeMem(0xbf3f, { 0x92 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9381, gbc.sp());
        EXPECT(0xbf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbf3f));
        // 92 0341
        gbc.setState(0x263c, 0xf230, 0xe140, 0x637e, 0xe6e6, 0xe27b, 0x1, 0x0);
        gbc.writeMem(0x263c, { 0x92 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0342
        gbc.setState(0xadcc, 0x8515, 0x31b0, 0x3216, 0x4083, 0xd0f1, 0x0, 0x1);
        gbc.writeMem(0xadcc, { 0x92 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8515, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xadcc));
        // 92 0343
        gbc.setState(0xb9e2, 0x1a30, 0x1e80, 0x76f4, 0xd4b4, 0xe6fb, 0x0, 0x0);
        gbc.writeMem(0xb9e2, { 0x92 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1a30, gbc.sp());
        EXPECT(0xb9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb9e2));
        // 92 0344
        gbc.setState(0xcf69, 0xdfef, 0xe140, 0x60e2, 0xc06b, 0x18aa, 0x0, 0x1);
        gbc.writeMem(0xcf69, { 0x92 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdfef, gbc.sp());
        EXPECT(0xcf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcf69));
        // 92 0345
        gbc.setState(0x95b4, 0x3f74, 0x3470, 0x6171, 0xae98, 0xc8b8, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3f74, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x95b4));
        // 92 0347
        gbc.setState(0x5e6d, 0x76ea, 0x3cd0, 0xe971, 0x20ba, 0x79c5, 0x1, 0x0);
        gbc.writeMem(0x5e6d, { 0x92 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x76ea, gbc.sp());
        EXPECT(0x5e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0348
        gbc.setState(0x8ab0, 0xe3f1, 0x190, 0x3757, 0xfda4, 0x9de5, 0x1, 0x1);
        gbc.writeMem(0x8ab0, { 0x92 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe3f1, gbc.sp());
        EXPECT(0x8ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8ab0));
        // 92 0349
        gbc.setState(0x9da5, 0x8dbb, 0xa8f0, 0xae7f, 0xf51a, 0xaa46, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0x92 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8dbb, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9da5));
        // 92 034A
        gbc.setState(0x942, 0xaf3d, 0xbbb0, 0xfe63, 0xc282, 0xa4f8, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x92 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaf3d, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 034B
        gbc.setState(0xa3d, 0x5333, 0xf560, 0x955b, 0x369, 0x777, 0x1, 0x1);
        gbc.writeMem(0xa3d, { 0x92 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5333, gbc.sp());
        EXPECT(0xa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 034C
        gbc.setState(0x94d, 0x8a8, 0xc80, 0xe280, 0xeba4, 0x430b, 0x1, 0x0);
        gbc.writeMem(0x94d, { 0x92 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8a8, gbc.sp());
        EXPECT(0x94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 034D
        gbc.setState(0xe801, 0xb081, 0x5530, 0xef18, 0xbad, 0xd5a3, 0x0, 0x0);
        gbc.writeMem(0xe801, { 0x92 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0xe802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe801));
        // 92 034E
        gbc.setState(0x1180, 0xe988, 0xd660, 0x1c07, 0xd97f, 0x81de, 0x1, 0x1);
        gbc.writeMem(0x1180, { 0x92 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe988, gbc.sp());
        EXPECT(0x1181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 034F
        gbc.setState(0x8eb3, 0xd1e4, 0xcbc0, 0x3136, 0xeff3, 0xf09b, 0x0, 0x0);
        gbc.writeMem(0x8eb3, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x8eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8eb3));
        // 92 0350
        gbc.setState(0xe9e8, 0x509d, 0xf870, 0x1f0b, 0x8116, 0xb230, 0x1, 0x1);
        gbc.writeMem(0xe9e8, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0xe9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe9e8));
        // 92 0351
        gbc.setState(0x5bbd, 0xfd14, 0xdc40, 0x6f8d, 0xd6c8, 0x247, 0x1, 0x0);
        gbc.writeMem(0x5bbd, { 0x92 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd14, gbc.sp());
        EXPECT(0x5bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0352
        gbc.setState(0xd069, 0x7879, 0x6750, 0x4dd3, 0xebe6, 0x6386, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x92 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7879, gbc.sp());
        EXPECT(0xd06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd069));
        // 92 0353
        gbc.setState(0x62bc, 0xdafe, 0x57f0, 0x330e, 0x260a, 0xbc45, 0x1, 0x0);
        gbc.writeMem(0x62bc, { 0x92 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdafe, gbc.sp());
        EXPECT(0x62bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0354
        gbc.setState(0xe794, 0x3ebd, 0x4450, 0xca57, 0x74d9, 0x1fbf, 0x0, 0x1);
        gbc.writeMem(0xe794, { 0x92 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe794));
        // 92 0355
        gbc.setState(0x5a68, 0x6282, 0xdf50, 0x708c, 0x132b, 0x5f2f, 0x1, 0x1);
        gbc.writeMem(0x5a68, { 0x92 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6282, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0356
        gbc.setState(0xce1b, 0x26f0, 0x2090, 0xfd0c, 0xcdc1, 0xae9d, 0x1, 0x1);
        gbc.writeMem(0xce1b, { 0x92 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x26f0, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xce1b));
        // 92 0357
        gbc.setState(0x9eb5, 0x8bd5, 0xc3c0, 0xd768, 0x6848, 0x9a89, 0x0, 0x0);
        gbc.writeMem(0x9eb5, { 0x92 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x9eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9eb5));
        // 92 0358
        gbc.setState(0x46c1, 0xa398, 0x4a20, 0xe2c0, 0x3de9, 0xbf33, 0x0, 0x0);
        gbc.writeMem(0x46c1, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa398, gbc.sp());
        EXPECT(0x46c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0359
        gbc.setState(0x513a, 0xa4fd, 0x36c0, 0xd6e2, 0x4c66, 0x16ba, 0x0, 0x1);
        gbc.writeMem(0x513a, { 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 035A
        gbc.setState(0xc6af, 0x3161, 0xd4c0, 0x704c, 0xf9e4, 0x2b80, 0x1, 0x0);
        gbc.writeMem(0xc6af, { 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3161, gbc.sp());
        EXPECT(0xc6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc6af));
        // 92 035B
        gbc.setState(0xca3d, 0xb7be, 0xdc10, 0xba99, 0x68f8, 0x6871, 0x1, 0x0);
        gbc.writeMem(0xca3d, { 0x92 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0xca3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xca3d));
        // 92 035C
        gbc.setState(0x1975, 0xaa22, 0x8860, 0xf462, 0x79b4, 0xbe3a, 0x1, 0x1);
        gbc.writeMem(0x1975, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa22, gbc.sp());
        EXPECT(0x1976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 035D
        gbc.setState(0x5697, 0x3ce4, 0xf7a0, 0x8a7f, 0x8e3f, 0x33c4, 0x1, 0x1);
        gbc.writeMem(0x5697, { 0x92 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3ce4, gbc.sp());
        EXPECT(0x5698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 035E
        gbc.setState(0x6d90, 0xa2f5, 0x46e0, 0xfaf1, 0x751c, 0xb3df, 0x0, 0x1);
        gbc.writeMem(0x6d90, { 0x92 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 035F
        gbc.setState(0x67b5, 0x923c, 0xda90, 0x1566, 0x8ce, 0xfcec, 0x1, 0x1);
        gbc.writeMem(0x67b5, { 0x92 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x923c, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0360
        gbc.setState(0x396d, 0xdb90, 0x9550, 0x7083, 0xc0b0, 0x1e04, 0x1, 0x0);
        gbc.writeMem(0x396d, { 0x92 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdb90, gbc.sp());
        EXPECT(0x396e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0361
        gbc.setState(0x676, 0xf683, 0x2460, 0x7cc6, 0xa432, 0xacd9, 0x1, 0x0);
        gbc.writeMem(0x676, { 0x92 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf683, gbc.sp());
        EXPECT(0x677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0362
        gbc.setState(0xec15, 0x407f, 0xebd0, 0x7ec8, 0xec2c, 0x634c, 0x1, 0x0);
        gbc.writeMem(0xec15, { 0x92 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xec15));
        // 92 0363
        gbc.setState(0x300e, 0xae77, 0xcda0, 0xc5a9, 0xa8be, 0x563c, 0x1, 0x1);
        gbc.writeMem(0x300e, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0364
        gbc.setState(0x850e, 0x510d, 0x9f10, 0x722, 0x69f2, 0x3c91, 0x0, 0x1);
        gbc.writeMem(0x850e, { 0x92 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x510d, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x850e));
        // 92 0365
        gbc.setState(0xc300, 0x245c, 0x7830, 0xe448, 0xd97c, 0xbe6, 0x0, 0x1);
        gbc.writeMem(0xc300, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc300));
        // 92 0366
        gbc.setState(0xecb2, 0x518f, 0x75f0, 0x18ff, 0xe82b, 0x2844, 0x1, 0x0);
        gbc.writeMem(0xecb2, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x518f, gbc.sp());
        EXPECT(0xecb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xecb2));
        // 92 0367
        gbc.setState(0xa090, 0xe7ce, 0xdf40, 0x6f, 0x9a27, 0x244f, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0x92 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe7ce, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa090));
        // 92 0368
        gbc.setState(0x25f3, 0x6c1, 0xd840, 0x64db, 0x5856, 0x4041, 0x1, 0x1);
        gbc.writeMem(0x25f3, { 0x92 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0369
        gbc.setState(0x9394, 0xd953, 0xb540, 0x347c, 0x6449, 0x1404, 0x0, 0x0);
        gbc.writeMem(0x9394, { 0x92 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd953, gbc.sp());
        EXPECT(0x9395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9394));
        // 92 036A
        gbc.setState(0x1722, 0xf8e4, 0x7e10, 0xc121, 0x7109, 0x42a8, 0x0, 0x1);
        gbc.writeMem(0x1722, { 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0x1723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 036C
        gbc.setState(0x2f9d, 0x7c4f, 0xf510, 0x16ba, 0x3e34, 0x1cd8, 0x1, 0x1);
        gbc.writeMem(0x2f9d, { 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7c4f, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 036D
        gbc.setState(0x49b8, 0xf83b, 0x7090, 0x3310, 0xbe25, 0xb4c6, 0x0, 0x0);
        gbc.writeMem(0x49b8, { 0x92 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0x49b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 036E
        gbc.setState(0xaa58, 0x29d0, 0x6470, 0xb4db, 0x7728, 0xda9e, 0x1, 0x0);
        gbc.writeMem(0xaa58, { 0x92 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x29d0, gbc.sp());
        EXPECT(0xaa59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaa58));
        // 92 036F
        gbc.setState(0x77a1, 0x57cb, 0xe0c0, 0xcf00, 0xc830, 0x69ee, 0x0, 0x0);
        gbc.writeMem(0x77a1, { 0x92 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x57cb, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0370
        gbc.setState(0x8848, 0xa935, 0x5130, 0x9934, 0x12d3, 0xdc2e, 0x0, 0x0);
        gbc.writeMem(0x8848, { 0x92 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa935, gbc.sp());
        EXPECT(0x8849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8848));
        // 92 0371
        gbc.setState(0x1715, 0x91ad, 0x8f00, 0xff47, 0x84e0, 0xb49b, 0x1, 0x0);
        gbc.writeMem(0x1715, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x91ad, gbc.sp());
        EXPECT(0x1716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0373
        gbc.setState(0x3465, 0x6a15, 0xdd10, 0xa6b5, 0x6353, 0x891f, 0x1, 0x0);
        gbc.writeMem(0x3465, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a15, gbc.sp());
        EXPECT(0x3466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0374
        gbc.setState(0xdabd, 0x55e, 0x8760, 0x4db7, 0x9200, 0x71b3, 0x0, 0x1);
        gbc.writeMem(0xdabd, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdabd));
        // 92 0375
        gbc.setState(0xb38d, 0xd3ee, 0x3160, 0x3e9e, 0x3a5e, 0xd89f, 0x1, 0x0);
        gbc.writeMem(0xb38d, { 0x92 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb38d));
        // 92 0377
        gbc.setState(0x6d28, 0x8931, 0x48e0, 0x30f8, 0x8652, 0x721a, 0x1, 0x0);
        gbc.writeMem(0x6d28, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0378
        gbc.setState(0xd553, 0xf80b, 0x9120, 0x958e, 0x2b20, 0x42a0, 0x1, 0x1);
        gbc.writeMem(0xd553, { 0x92 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf80b, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd553));
        // 92 0379
        gbc.setState(0xde7d, 0x43, 0xae10, 0xd50a, 0x8af1, 0x85e9, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x43, gbc.sp());
        EXPECT(0xde7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xde7d));
        // 92 037A
        gbc.setState(0x7c16, 0x26bf, 0xf7e0, 0x9405, 0x7d1b, 0x4b0d, 0x1, 0x1);
        gbc.writeMem(0x7c16, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 037B
        gbc.setState(0xb675, 0xcb6b, 0x2770, 0x617e, 0x6a5c, 0xdf59, 0x1, 0x0);
        gbc.writeMem(0xb675, { 0x92 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcb6b, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb675));
        // 92 037C
        gbc.setState(0xdae9, 0x9d17, 0x58d0, 0x9910, 0x392d, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0xdae9, { 0x92 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d17, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdae9));
        // 92 037D
        gbc.setState(0x9b10, 0x45d8, 0x5460, 0x2167, 0xe1f5, 0xe0ac, 0x1, 0x1);
        gbc.writeMem(0x9b10, { 0x92 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0x9b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9b10));
        // 92 037E
        gbc.setState(0x78ab, 0xf6, 0x97a0, 0xffeb, 0x7ea3, 0x92a, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf6, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 037F
        gbc.setState(0xc3ce, 0x31cc, 0xfe70, 0xb6ec, 0xcdd2, 0xdaf4, 0x1, 0x0);
        gbc.writeMem(0xc3ce, { 0x92 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x31cc, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc3ce));
        // 92 0380
        gbc.setState(0x1c89, 0xae26, 0xe80, 0x3119, 0xf5a5, 0x426c, 0x1, 0x0);
        gbc.writeMem(0x1c89, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xae26, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0381
        gbc.setState(0x4fec, 0x1dc0, 0x9950, 0x89ab, 0x8e00, 0x8634, 0x1, 0x1);
        gbc.writeMem(0x4fec, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1dc0, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0382
        gbc.setState(0x73a, 0x64f9, 0x5060, 0xa469, 0x1ccb, 0x6f7f, 0x0, 0x1);
        gbc.writeMem(0x73a, { 0x92 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0383
        gbc.setState(0x2ced, 0x60d9, 0x8320, 0x6ea9, 0xa792, 0xdec0, 0x1, 0x1);
        gbc.writeMem(0x2ced, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0x2cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0384
        gbc.setState(0x8de2, 0xc839, 0x2f40, 0xcc8, 0x463, 0x7e07, 0x0, 0x0);
        gbc.writeMem(0x8de2, { 0x92 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8de2));
        // 92 0385
        gbc.setState(0x7d17, 0xb8de, 0x3bc0, 0x8eda, 0xce7, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0x7d17, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb8de, gbc.sp());
        EXPECT(0x7d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0386
        gbc.setState(0x1f78, 0xdbb3, 0x1d00, 0xd11, 0x2558, 0x4d10, 0x0, 0x1);
        gbc.writeMem(0x1f78, { 0x92 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdbb3, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0387
        gbc.setState(0xd6ab, 0x94d7, 0x40c0, 0x81ef, 0xb5ee, 0x4df4, 0x1, 0x1);
        gbc.writeMem(0xd6ab, { 0x92 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0xd6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd6ab));
        // 92 0389
        gbc.setState(0x21a8, 0x704c, 0x2400, 0xf3dd, 0x9c36, 0xce74, 0x0, 0x0);
        gbc.writeMem(0x21a8, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 038A
        gbc.setState(0x4fe4, 0x8b5a, 0x4860, 0x4840, 0xa8ba, 0x861e, 0x1, 0x0);
        gbc.writeMem(0x4fe4, { 0x92 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8b5a, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 038B
        gbc.setState(0xa00f, 0xa5b4, 0xd4c0, 0x4566, 0x9f9b, 0xb15f, 0x1, 0x1);
        gbc.writeMem(0xa00f, { 0x92 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa5b4, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa00f));
        // 92 038C
        gbc.setState(0xbe59, 0xe2e0, 0x6040, 0x98ad, 0x3159, 0x27ba, 0x1, 0x1);
        gbc.writeMem(0xbe59, { 0x92 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbe59));
        // 92 038D
        gbc.setState(0xc7df, 0x2d29, 0x40b0, 0x27e5, 0x46f9, 0x97a, 0x0, 0x1);
        gbc.writeMem(0xc7df, { 0x92 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2d29, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc7df));
        // 92 038E
        gbc.setState(0xcfa2, 0xe984, 0x4820, 0x8ad2, 0xd177, 0xf97d, 0x0, 0x1);
        gbc.writeMem(0xcfa2, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe984, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcfa2));
        // 92 038F
        gbc.setState(0xc52b, 0x18b1, 0xa770, 0x8f06, 0x167e, 0x21bd, 0x0, 0x1);
        gbc.writeMem(0xc52b, { 0x92 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc52b));
        // 92 0390
        gbc.setState(0x745a, 0xf727, 0x3060, 0xbb1, 0x3660, 0xc209, 0x1, 0x1);
        gbc.writeMem(0x745a, { 0x92 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0x745b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0391
        gbc.setState(0x4067, 0xe273, 0xd3d0, 0x54ec, 0x61bb, 0x146e, 0x1, 0x1);
        gbc.writeMem(0x4067, { 0x92 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x4068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0392
        gbc.setState(0x8e35, 0x803e, 0xbc50, 0xde26, 0xc30b, 0x5f77, 0x1, 0x0);
        gbc.writeMem(0x8e35, { 0x92 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x803e, gbc.sp());
        EXPECT(0x8e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8e35));
        // 92 0393
        gbc.setState(0x33ee, 0x5bcb, 0xd490, 0xaa3c, 0x9a0e, 0x1cda, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0x92 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0394
        gbc.setState(0xc998, 0xf4a, 0xef90, 0x463f, 0xb8cc, 0x79a0, 0x0, 0x0);
        gbc.writeMem(0xc998, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf4a, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc998));
        // 92 0395
        gbc.setState(0xc3f2, 0xd5b7, 0x4cf0, 0x920a, 0x3c89, 0x86d0, 0x0, 0x1);
        gbc.writeMem(0xc3f2, { 0x92 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0xc3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc3f2));
        // 92 0397
        gbc.setState(0x11ea, 0xdf2c, 0xc6d0, 0x99e4, 0xa126, 0x2682, 0x1, 0x1);
        gbc.writeMem(0x11ea, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 0398
        gbc.setState(0x64e7, 0x92dc, 0x3680, 0x315d, 0x5a0e, 0x247, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x92dc, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 0399
        gbc.setState(0x7ab3, 0x85, 0x61b0, 0x5b58, 0x7121, 0x2efc, 0x0, 0x0);
        gbc.writeMem(0x7ab3, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 039A
        gbc.setState(0xda56, 0x17e4, 0xd9a0, 0xbbb7, 0xd471, 0xbc32, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0x92 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x17e4, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xda56));
        // 92 039B
        gbc.setState(0xaeb1, 0xc9f7, 0x3350, 0xaa28, 0xf8c2, 0xf8fe, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0x92 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaeb1));
        // 92 039C
        gbc.setState(0x56b6, 0x8212, 0xbd30, 0x9720, 0x8651, 0x43ce, 0x1, 0x1);
        gbc.writeMem(0x56b6, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8212, gbc.sp());
        EXPECT(0x56b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 039D
        gbc.setState(0x2747, 0x5780, 0xc30, 0x8a17, 0x28f8, 0xa00f, 0x1, 0x1);
        gbc.writeMem(0x2747, { 0x92 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5780, gbc.sp());
        EXPECT(0x2748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 039F
        gbc.setState(0xe6f, 0x665a, 0xcad0, 0xfdac, 0xc960, 0x2301, 0x0, 0x0);
        gbc.writeMem(0xe6f, { 0x92 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x665a, gbc.sp());
        EXPECT(0xe70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03A0
        gbc.setState(0xc27c, 0xb045, 0xa5c0, 0x739d, 0xb03f, 0xd713, 0x1, 0x0);
        gbc.writeMem(0xc27c, { 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb045, gbc.sp());
        EXPECT(0xc27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc27c));
        // 92 03A1
        gbc.setState(0xa091, 0x5388, 0x10e0, 0x55a, 0x43e1, 0x20da, 0x1, 0x0);
        gbc.writeMem(0xa091, { 0x92 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5388, gbc.sp());
        EXPECT(0xa092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa091));
        // 92 03A2
        gbc.setState(0xaa54, 0xd123, 0x380, 0xcc8b, 0x4212, 0xbdac, 0x0, 0x1);
        gbc.writeMem(0xaa54, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd123, gbc.sp());
        EXPECT(0xaa55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaa54));
        // 92 03A3
        gbc.setState(0x539e, 0x78f4, 0xa080, 0x82e3, 0x5164, 0x63a4, 0x1, 0x1);
        gbc.writeMem(0x539e, { 0x92 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x78f4, gbc.sp());
        EXPECT(0x539f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03A4
        gbc.setState(0x10cb, 0x1b89, 0xb20, 0x24a6, 0x835b, 0x13a3, 0x1, 0x1);
        gbc.writeMem(0x10cb, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1b89, gbc.sp());
        EXPECT(0x10cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03A5
        gbc.setState(0xe915, 0x70a8, 0x3320, 0xc81b, 0xa6a9, 0xf291, 0x1, 0x0);
        gbc.writeMem(0xe915, { 0x92 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0xe916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe915));
        // 92 03A6
        gbc.setState(0x404c, 0x9ac5, 0xfc0, 0xb7e8, 0xfe66, 0xaed5, 0x1, 0x1);
        gbc.writeMem(0x404c, { 0x92 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ac5, gbc.sp());
        EXPECT(0x404d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03A7
        gbc.setState(0x1a41, 0x1091, 0x30c0, 0xc84, 0x3144, 0x74f6, 0x1, 0x1);
        gbc.writeMem(0x1a41, { 0x92 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x1a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03A8
        gbc.setState(0x9cee, 0xbb60, 0xb5d0, 0xd348, 0x3362, 0x6b01, 0x1, 0x1);
        gbc.writeMem(0x9cee, { 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9cee));
        // 92 03A9
        gbc.setState(0xe9f3, 0xda3b, 0x5ee0, 0x5182, 0x9965, 0xc885, 0x0, 0x1);
        gbc.writeMem(0xe9f3, { 0x92 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0xe9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe9f3));
        // 92 03AA
        gbc.setState(0x86ee, 0x4be5, 0xad80, 0x681b, 0x3338, 0xb4b9, 0x1, 0x0);
        gbc.writeMem(0x86ee, { 0x92 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0x86ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x86ee));
        // 92 03AB
        gbc.setState(0xa7a2, 0xfa99, 0xd660, 0xb4b2, 0xcbad, 0x137b, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa7a2));
        // 92 03AC
        gbc.setState(0x9fcf, 0x119d, 0xe290, 0xc0fa, 0x1145, 0xc940, 0x1, 0x1);
        gbc.writeMem(0x9fcf, { 0x92 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9fcf));
        // 92 03AD
        gbc.setState(0xe6e7, 0x6c72, 0x62a0, 0xf4c8, 0x4ba3, 0x9bf1, 0x0, 0x1);
        gbc.writeMem(0xe6e7, { 0x92 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c72, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe6e7));
        // 92 03AE
        gbc.setState(0xfda, 0x987a, 0x6440, 0xc242, 0x29b8, 0xc8dd, 0x1, 0x0);
        gbc.writeMem(0xfda, { 0x92 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x987a, gbc.sp());
        EXPECT(0xfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03AF
        gbc.setState(0xd7fe, 0x52dc, 0xbe50, 0x2f78, 0x8309, 0x14c9, 0x1, 0x1);
        gbc.writeMem(0xd7fe, { 0x92 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x52dc, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd7fe));
        // 92 03B0
        gbc.setState(0xaab5, 0xbe77, 0xbae0, 0x7afa, 0x9c3c, 0x6066, 0x1, 0x0);
        gbc.writeMem(0xaab5, { 0x92 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xaab5));
        // 92 03B1
        gbc.setState(0xb7ad, 0x892a, 0x2510, 0xa6dc, 0x1723, 0x4bf0, 0x0, 0x1);
        gbc.writeMem(0xb7ad, { 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x892a, gbc.sp());
        EXPECT(0xb7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb7ad));
        // 92 03B2
        gbc.setState(0x8437, 0x6f16, 0xe190, 0x4b98, 0xdf40, 0xec06, 0x1, 0x0);
        gbc.writeMem(0x8437, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6f16, gbc.sp());
        EXPECT(0x8438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8437));
        // 92 03B3
        gbc.setState(0x58f9, 0xb776, 0x3770, 0x7854, 0x76da, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0x58f9, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb776, gbc.sp());
        EXPECT(0x58fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03B4
        gbc.setState(0x31eb, 0xca3e, 0xfba0, 0x5bb3, 0xc587, 0x7217, 0x0, 0x0);
        gbc.writeMem(0x31eb, { 0x92 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xca3e, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03B5
        gbc.setState(0x1c24, 0xc44f, 0xc830, 0xf4de, 0x6527, 0x39ca, 0x1, 0x1);
        gbc.writeMem(0x1c24, { 0x92 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc44f, gbc.sp());
        EXPECT(0x1c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03B6
        gbc.setState(0x7e72, 0xc942, 0x1320, 0x7a70, 0x3c38, 0xfee3, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc942, gbc.sp());
        EXPECT(0x7e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03B7
        gbc.setState(0x4bde, 0xc124, 0x4290, 0x554e, 0xcc8d, 0x161d, 0x0, 0x1);
        gbc.writeMem(0x4bde, { 0x92 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc124, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03B8
        gbc.setState(0xbacd, 0xa381, 0x6630, 0x9c50, 0xd7e4, 0xec0b, 0x1, 0x1);
        gbc.writeMem(0xbacd, { 0x92 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbacd));
        // 92 03B9
        gbc.setState(0x30ec, 0x5b52, 0xd5b0, 0xd923, 0xeb6a, 0x6458, 0x1, 0x1);
        gbc.writeMem(0x30ec, { 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5b52, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03BA
        gbc.setState(0xbd0c, 0xca72, 0x7990, 0xbfcc, 0xd663, 0xe980, 0x0, 0x0);
        gbc.writeMem(0xbd0c, { 0x92 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0xbd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbd0c));
        // 92 03BD
        gbc.setState(0xece7, 0xf8f1, 0xbf50, 0x74d4, 0x1b9f, 0xa17f, 0x0, 0x0);
        gbc.writeMem(0xece7, { 0x92 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf8f1, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xece7));
        // 92 03BE
        gbc.setState(0x44ce, 0xf875, 0x7fd0, 0x3db2, 0x2bea, 0x7308, 0x1, 0x0);
        gbc.writeMem(0x44ce, { 0x92 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf875, gbc.sp());
        EXPECT(0x44cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03BF
        gbc.setState(0x6bad, 0x19e5, 0xbac0, 0xa709, 0x3ba9, 0x896a, 0x0, 0x0);
        gbc.writeMem(0x6bad, { 0x92 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0x6bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03C1
        gbc.setState(0x85df, 0xfdd, 0xeef0, 0x1998, 0x3de7, 0xe523, 0x1, 0x0);
        gbc.writeMem(0x85df, { 0x92 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x85df));
        // 92 03C2
        gbc.setState(0xe52d, 0xabe3, 0x20f0, 0xd2ee, 0x1142, 0x5685, 0x1, 0x0);
        gbc.writeMem(0xe52d, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe52d));
        // 92 03C3
        gbc.setState(0x404a, 0x75cd, 0xacb0, 0x1160, 0x228d, 0x88d7, 0x1, 0x1);
        gbc.writeMem(0x404a, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x75cd, gbc.sp());
        EXPECT(0x404b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03C4
        gbc.setState(0xd121, 0xa4dc, 0x5c20, 0xbff4, 0xbd19, 0xf104, 0x0, 0x0);
        gbc.writeMem(0xd121, { 0x92 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa4dc, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd121));
        // 92 03C5
        gbc.setState(0xc5d5, 0x16c8, 0x67f0, 0xf2a1, 0xe286, 0x6fa5, 0x0, 0x1);
        gbc.writeMem(0xc5d5, { 0x92 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x16c8, gbc.sp());
        EXPECT(0xc5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc5d5));
        // 92 03C6
        gbc.setState(0xc5b7, 0xd806, 0x9ee0, 0xd2dd, 0x209b, 0xdb59, 0x1, 0x1);
        gbc.writeMem(0xc5b7, { 0x92 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0xc5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc5b7));
        // 92 03C7
        gbc.setState(0x1ae4, 0xeae3, 0xc290, 0x7935, 0x3cf, 0x3b11, 0x0, 0x1);
        gbc.writeMem(0x1ae4, { 0x92 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0x1ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03C8
        gbc.setState(0xfcf, 0xc6d9, 0xa700, 0x24c9, 0xd7f4, 0x30bd, 0x0, 0x1);
        gbc.writeMem(0xfcf, { 0x92 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0xfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03C9
        gbc.setState(0xbd8b, 0xc196, 0xf140, 0x3c9b, 0x15fd, 0x44ea, 0x0, 0x0);
        gbc.writeMem(0xbd8b, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc196, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbd8b));
        // 92 03CA
        gbc.setState(0x3033, 0xcaf0, 0xf320, 0xbd46, 0x8caf, 0x75f3, 0x1, 0x0);
        gbc.writeMem(0x3033, { 0x92 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcaf0, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03CB
        gbc.setState(0x230, 0xc08, 0xa500, 0x46ba, 0x8f0a, 0x220e, 0x1, 0x0);
        gbc.writeMem(0x230, { 0x92 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc08, gbc.sp());
        EXPECT(0x231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03CC
        gbc.setState(0x572d, 0xac74, 0xdea0, 0x1e65, 0xea6, 0xaed1, 0x1, 0x0);
        gbc.writeMem(0x572d, { 0x92 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac74, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03CD
        gbc.setState(0x9592, 0xa53d, 0xd80, 0x95d9, 0x81f9, 0x9ad0, 0x0, 0x0);
        gbc.writeMem(0x9592, { 0x92 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa53d, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9592));
        // 92 03CE
        gbc.setState(0x59f3, 0xc75f, 0x4ad0, 0x984c, 0x4845, 0x1ef6, 0x1, 0x0);
        gbc.writeMem(0x59f3, { 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x59f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03CF
        gbc.setState(0x64b8, 0xc1c2, 0x8c50, 0x6f2c, 0x76a9, 0x581c, 0x1, 0x0);
        gbc.writeMem(0x64b8, { 0x92 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc1c2, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03D1
        gbc.setState(0x5456, 0x1b14, 0x14d0, 0xa1db, 0x16af, 0xa59, 0x1, 0x0);
        gbc.writeMem(0x5456, { 0x92 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03D2
        gbc.setState(0xa916, 0x5d65, 0xacc0, 0x9b42, 0x20f3, 0xc59f, 0x0, 0x1);
        gbc.writeMem(0xa916, { 0x92 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5d65, gbc.sp());
        EXPECT(0xa917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa916));
        // 92 03D3
        gbc.setState(0x8cc0, 0xf99c, 0x2e70, 0xe06c, 0x14a9, 0xce5c, 0x1, 0x1);
        gbc.writeMem(0x8cc0, { 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8cc0));
        // 92 03D4
        gbc.setState(0x1391, 0xacd9, 0xdf20, 0x79f6, 0xfd09, 0xefa3, 0x1, 0x0);
        gbc.writeMem(0x1391, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xacd9, gbc.sp());
        EXPECT(0x1392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03D5
        gbc.setState(0xbb60, 0x6c63, 0xea30, 0x9af6, 0xb880, 0xba17, 0x0, 0x0);
        gbc.writeMem(0xbb60, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0xbb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbb60));
        // 92 03D6
        gbc.setState(0xe832, 0x2756, 0xa730, 0x2be1, 0xa2a1, 0x38c3, 0x0, 0x0);
        gbc.writeMem(0xe832, { 0x92 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2756, gbc.sp());
        EXPECT(0xe833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe832));
        // 92 03D7
        gbc.setState(0x544, 0x6235, 0xec00, 0x2965, 0x15c7, 0x8a3c, 0x1, 0x1);
        gbc.writeMem(0x544, { 0x92 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6235, gbc.sp());
        EXPECT(0x545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03D8
        gbc.setState(0x64aa, 0x1f95, 0x8450, 0x4e3f, 0x5de2, 0xae85, 0x1, 0x0);
        gbc.writeMem(0x64aa, { 0x92 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f95, gbc.sp());
        EXPECT(0x64ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03D9
        gbc.setState(0x7af6, 0xcb22, 0x1d40, 0x597e, 0xc16d, 0x81b2, 0x1, 0x1);
        gbc.writeMem(0x7af6, { 0x92 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcb22, gbc.sp());
        EXPECT(0x7af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03DA
        gbc.setState(0x29d2, 0xc408, 0xa7d0, 0xa1e7, 0xeb06, 0xe03e, 0x0, 0x1);
        gbc.writeMem(0x29d2, { 0x92 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc408, gbc.sp());
        EXPECT(0x29d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03DB
        gbc.setState(0xd9f3, 0x9ae4, 0x1030, 0xf7ba, 0x2e06, 0x3b6c, 0x0, 0x0);
        gbc.writeMem(0xd9f3, { 0x92 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9f3));
        // 92 03DC
        gbc.setState(0x7ea9, 0x85a5, 0x6d60, 0x72cf, 0x87ce, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0x92 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03DD
        gbc.setState(0xd63e, 0xfa31, 0xc480, 0x74f1, 0x524, 0xf695, 0x0, 0x0);
        gbc.writeMem(0xd63e, { 0x92 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0xd63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd63e));
        // 92 03DE
        gbc.setState(0x3387, 0xd9da, 0xc2d0, 0x7b7e, 0xdfb4, 0x4d3c, 0x1, 0x0);
        gbc.writeMem(0x3387, { 0x92 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x3388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03DF
        gbc.setState(0x6814, 0xa5a2, 0xe40, 0x3e9c, 0x32f0, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0x6814, { 0x92 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa5a2, gbc.sp());
        EXPECT(0x6815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03E1
        gbc.setState(0x9af3, 0x553c, 0xc8e0, 0xf713, 0xaf7e, 0x4327, 0x1, 0x0);
        gbc.writeMem(0x9af3, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x553c, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9af3));
        // 92 03E2
        gbc.setState(0x18be, 0x64ae, 0xd290, 0xd65b, 0x722d, 0x6524, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0x92 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 92 03E3
        gbc.setState(0x3e32, 0x67a2, 0xe560, 0x99e5, 0xf550, 0x9c34, 0x1, 0x0);
        gbc.writeMem(0x3e32, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 92 03E4
        gbc.setState(0x85ec, 0x486a, 0x6370, 0xb202, 0x44b7, 0xde00, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0x92 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x486a, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x85ec));
        // 92 03E5
        gbc.setState(0xb375, 0xdb72, 0x2a30, 0xaaa5, 0x9f55, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0xb375, { 0x92 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0xb376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb375));
        // 92 03E6
        gbc.setState(0xd969, 0x428a, 0xf640, 0xcf5b, 0x7efb, 0x79c5, 0x0, 0x1);
        gbc.writeMem(0xd969, { 0x92 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd969));
        // 92 03E7
        gbc.setState(0x1ebe, 0xf38f, 0xe7e0, 0x74e3, 0xc35c, 0x327a, 0x1, 0x0);
        gbc.writeMem(0x1ebe, { 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf38f, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
