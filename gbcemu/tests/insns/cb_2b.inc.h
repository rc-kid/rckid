    TEST(gbcemu, opcode_cb_2b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 2B 0000
        gbc.setState(0xe196, 0x9238, 0xbbd0, 0x921d, 0x47ce, 0x2d18, 0x1, 0x1);
        gbc.writeMem(0xe196, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xe198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe196));
        EXPECT(0x2b, gbc.readMem(0xe197));
        // CB 2B 0001
        gbc.setState(0xccb8, 0x17bc, 0xba80, 0x50a2, 0xf18, 0x7898, 0x1, 0x1);
        gbc.writeMem(0xccb8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xccba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb8));
        EXPECT(0x2b, gbc.readMem(0xccb9));
        // CB 2B 0002
        gbc.setState(0x93aa, 0xbd46, 0x7620, 0xf86e, 0xd2, 0x7e2a, 0x1, 0x1);
        gbc.writeMem(0x93aa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x93ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93aa));
        EXPECT(0x2b, gbc.readMem(0x93ab));
        // CB 2B 0003
        gbc.setState(0xceb0, 0x90a5, 0x87e0, 0xa853, 0x5c58, 0xec4b, 0x1, 0x1);
        gbc.writeMem(0xceb0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x90a5, gbc.sp());
        EXPECT(0xceb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb0));
        EXPECT(0x2b, gbc.readMem(0xceb1));
        // CB 2B 0004
        gbc.setState(0xb457, 0xfb9a, 0x1dc0, 0xa077, 0xc64e, 0x92b6, 0x0, 0x1);
        gbc.writeMem(0xb457, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb457));
        EXPECT(0x2b, gbc.readMem(0xb458));
        // CB 2B 0005
        gbc.setState(0x369, 0x14bd, 0x76e0, 0x1933, 0xa033, 0x9d19, 0x1, 0x1);
        gbc.writeMem(0x369, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x14bd, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0006
        gbc.setState(0xef0a, 0x2a17, 0xea0, 0xeb56, 0xe45d, 0xa1f2, 0x0, 0x1);
        gbc.writeMem(0xef0a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0xef0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0a));
        EXPECT(0x2b, gbc.readMem(0xef0b));
        // CB 2B 0007
        gbc.setState(0x97c3, 0xc393, 0x8e80, 0x9635, 0x6611, 0x6fa, 0x0, 0x1);
        gbc.writeMem(0x97c3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc393, gbc.sp());
        EXPECT(0x97c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c3));
        EXPECT(0x2b, gbc.readMem(0x97c4));
        // CB 2B 0008
        gbc.setState(0xc159, 0x4dda, 0x1b80, 0x857d, 0x9f52, 0x68d1, 0x0, 0x1);
        gbc.writeMem(0xc159, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4dda, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc159));
        EXPECT(0x2b, gbc.readMem(0xc15a));
        // CB 2B 0009
        gbc.setState(0x5af2, 0x5a75, 0x9b50, 0x75c7, 0x2b56, 0xe612, 0x0, 0x0);
        gbc.writeMem(0x5af2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5a75, gbc.sp());
        EXPECT(0x5af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 000A
        gbc.setState(0x2e71, 0xaec2, 0xc0f0, 0x71c0, 0x248b, 0xce23, 0x1, 0x1);
        gbc.writeMem(0x2e71, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 000B
        gbc.setState(0xb270, 0xd701, 0xd460, 0x6f9f, 0xa2f5, 0xe02b, 0x0, 0x0);
        gbc.writeMem(0xb270, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0xb272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb270));
        EXPECT(0x2b, gbc.readMem(0xb271));
        // CB 2B 000C
        gbc.setState(0x6e18, 0xb988, 0xe840, 0xce33, 0x268d, 0xe120, 0x1, 0x1);
        gbc.writeMem(0x6e18, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb988, gbc.sp());
        EXPECT(0x6e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 000D
        gbc.setState(0x5724, 0x5881, 0x8d00, 0xe75c, 0xd2a5, 0x6a0, 0x1, 0x0);
        gbc.writeMem(0x5724, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5881, gbc.sp());
        EXPECT(0x5726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 000E
        gbc.setState(0x2795, 0x58d1, 0x91f0, 0xbfeb, 0xb1a0, 0x65a6, 0x1, 0x1);
        gbc.writeMem(0x2795, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 000F
        gbc.setState(0x7f1, 0xdb33, 0xb370, 0x238d, 0x5a94, 0x85cc, 0x0, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdb33, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0012
        gbc.setState(0xe461, 0x1009, 0x5500, 0xb4f8, 0x3b31, 0x7218, 0x1, 0x0);
        gbc.writeMem(0xe461, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1009, gbc.sp());
        EXPECT(0xe463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe461));
        EXPECT(0x2b, gbc.readMem(0xe462));
        // CB 2B 0013
        gbc.setState(0xb340, 0x972e, 0x90, 0xb21d, 0x9274, 0x60f7, 0x0, 0x1);
        gbc.writeMem(0xb340, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x972e, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb340));
        EXPECT(0x2b, gbc.readMem(0xb341));
        // CB 2B 0015
        gbc.setState(0xd3ba, 0xbad6, 0x58c0, 0xe5b4, 0x4151, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0xd3ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbad6, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ba));
        EXPECT(0x2b, gbc.readMem(0xd3bb));
        // CB 2B 0016
        gbc.setState(0x4742, 0x3829, 0x6260, 0xdafe, 0xd176, 0xd283, 0x1, 0x1);
        gbc.writeMem(0x4742, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3829, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0017
        gbc.setState(0x7438, 0x5f35, 0xf4c0, 0xaf9f, 0xdeb9, 0xae5e, 0x0, 0x1);
        gbc.writeMem(0x7438, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x743a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0018
        gbc.setState(0x10a, 0x7c65, 0xf560, 0x3478, 0x6a9, 0x672f, 0x0, 0x1);
        gbc.writeMem(0x10a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c65, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0019
        gbc.setState(0x212, 0x19d1, 0x8630, 0x1c1e, 0x30d0, 0x6bcb, 0x0, 0x1);
        gbc.writeMem(0x212, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x19d1, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 001A
        gbc.setState(0xe119, 0x9af1, 0x7e0, 0xf64f, 0xca8, 0x9a08, 0x0, 0x1);
        gbc.writeMem(0xe119, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9af1, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe119));
        EXPECT(0x2b, gbc.readMem(0xe11a));
        // CB 2B 001B
        gbc.setState(0xbb38, 0x91d3, 0x8b0, 0x76c8, 0x9fc7, 0x7d3c, 0x1, 0x1);
        gbc.writeMem(0xbb38, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0x2b, gbc.readMem(0xbb39));
        // CB 2B 001C
        gbc.setState(0xd780, 0x624, 0xd460, 0x9177, 0x6fb3, 0xdcaa, 0x1, 0x1);
        gbc.writeMem(0xd780, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x624, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd780));
        EXPECT(0x2b, gbc.readMem(0xd781));
        // CB 2B 001D
        gbc.setState(0xb04e, 0xcfcc, 0x9ce0, 0x6174, 0xce8e, 0x6701, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04e));
        EXPECT(0x2b, gbc.readMem(0xb04f));
        // CB 2B 001E
        gbc.setState(0x475, 0xc9f1, 0xa630, 0xdf24, 0x95cf, 0xe5d9, 0x0, 0x0);
        gbc.writeMem(0x475, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0x477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 001F
        gbc.setState(0x245, 0x3149, 0x2b80, 0x4269, 0x80dc, 0x829a, 0x1, 0x0);
        gbc.writeMem(0x245, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0020
        gbc.setState(0xc9a1, 0xbcaf, 0xde0, 0x75dc, 0xae5, 0xce8b, 0x0, 0x0);
        gbc.writeMem(0xc9a1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbcaf, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a1));
        EXPECT(0x2b, gbc.readMem(0xc9a2));
        // CB 2B 0022
        gbc.setState(0x356c, 0xd847, 0x1630, 0x182f, 0xdc97, 0xb9d0, 0x0, 0x1);
        gbc.writeMem(0x356c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd847, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0024
        gbc.setState(0xae30, 0xb1, 0xdaa0, 0xd2fe, 0xff8a, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0xae30, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb1, gbc.sp());
        EXPECT(0xae32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae30));
        EXPECT(0x2b, gbc.readMem(0xae31));
        // CB 2B 0025
        gbc.setState(0x7388, 0x7ce1, 0xc7d0, 0x6171, 0x4188, 0xa83f, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7ce1, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0026
        gbc.setState(0x96f1, 0xb19e, 0xb070, 0x6c41, 0x276, 0x150a, 0x0, 0x1);
        gbc.writeMem(0x96f1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f1));
        EXPECT(0x2b, gbc.readMem(0x96f2));
        // CB 2B 0027
        gbc.setState(0xe8af, 0x67fe, 0x4d0, 0xd91d, 0x4978, 0x703f, 0x1, 0x0);
        gbc.writeMem(0xe8af, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x67fe, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0x2b, gbc.readMem(0xe8b0));
        // CB 2B 0028
        gbc.setState(0xcd02, 0x7625, 0x8790, 0xb28, 0xed53, 0x3221, 0x1, 0x1);
        gbc.writeMem(0xcd02, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7625, gbc.sp());
        EXPECT(0xcd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd02));
        EXPECT(0x2b, gbc.readMem(0xcd03));
        // CB 2B 0029
        gbc.setState(0x21c7, 0x9ad7, 0xb7d0, 0x27cd, 0x7be5, 0x82ef, 0x1, 0x0);
        gbc.writeMem(0x21c7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0x21c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 002A
        gbc.setState(0x2838, 0x4fb8, 0x3130, 0x79ab, 0x115b, 0x2491, 0x1, 0x0);
        gbc.writeMem(0x2838, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 002B
        gbc.setState(0xe38c, 0x1125, 0xed20, 0x5e23, 0xdcb9, 0xc2d2, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1125, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38c));
        EXPECT(0x2b, gbc.readMem(0xe38d));
        // CB 2B 002C
        gbc.setState(0x2b27, 0xf18f, 0x10d0, 0xfffa, 0x8f24, 0x812, 0x1, 0x0);
        gbc.writeMem(0x2b27, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0x2b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 002D
        gbc.setState(0xbc72, 0xf2b3, 0xf200, 0xdd10, 0x1f08, 0x4cc5, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf2b3, gbc.sp());
        EXPECT(0xbc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc72));
        EXPECT(0x2b, gbc.readMem(0xbc73));
        // CB 2B 002E
        gbc.setState(0x5fd4, 0xc20b, 0x3de0, 0xbda8, 0x634b, 0xadb9, 0x0, 0x1);
        gbc.writeMem(0x5fd4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 002F
        gbc.setState(0xaeee, 0x45e1, 0xe200, 0xf644, 0x1690, 0x10de, 0x1, 0x1);
        gbc.writeMem(0xaeee, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x45e1, gbc.sp());
        EXPECT(0xaef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeee));
        EXPECT(0x2b, gbc.readMem(0xaeef));
        // CB 2B 0030
        gbc.setState(0x478e, 0x6524, 0xf180, 0xc955, 0x32c7, 0x90c8, 0x1, 0x1);
        gbc.writeMem(0x478e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6524, gbc.sp());
        EXPECT(0x4790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0031
        gbc.setState(0x6dd6, 0x4add, 0x8a10, 0x8fa4, 0xf536, 0xbc2a, 0x1, 0x1);
        gbc.writeMem(0x6dd6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4add, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0032
        gbc.setState(0x8972, 0x466b, 0x7460, 0x5cb6, 0xe7d3, 0x6da9, 0x0, 0x1);
        gbc.writeMem(0x8972, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8972));
        EXPECT(0x2b, gbc.readMem(0x8973));
        // CB 2B 0033
        gbc.setState(0x23fa, 0xc2e8, 0x1fa0, 0x539d, 0xf25d, 0x9178, 0x0, 0x0);
        gbc.writeMem(0x23fa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0034
        gbc.setState(0x6566, 0xeef7, 0x6720, 0x1cae, 0xb7b3, 0xcbfd, 0x0, 0x1);
        gbc.writeMem(0x6566, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x6568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0035
        gbc.setState(0x2da, 0xc576, 0xf950, 0xe0d9, 0x9b34, 0x3acb, 0x1, 0x0);
        gbc.writeMem(0x2da, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc576, gbc.sp());
        EXPECT(0x2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0036
        gbc.setState(0xe5cd, 0x4d9, 0xc510, 0xb0c5, 0xfe6, 0xbc0b, 0x1, 0x1);
        gbc.writeMem(0xe5cd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xe5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cd));
        EXPECT(0x2b, gbc.readMem(0xe5ce));
        // CB 2B 0037
        gbc.setState(0x4c02, 0xf87d, 0xe3d0, 0x91b5, 0x88ed, 0x9254, 0x0, 0x1);
        gbc.writeMem(0x4c02, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0038
        gbc.setState(0xdf95, 0xf530, 0xb3c0, 0xbb12, 0x35e1, 0xd507, 0x1, 0x1);
        gbc.writeMem(0xdf95, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf95));
        EXPECT(0x2b, gbc.readMem(0xdf96));
        // CB 2B 0039
        gbc.setState(0xabfa, 0x4e8a, 0x9650, 0xa122, 0x9903, 0xcc4b, 0x1, 0x1);
        gbc.writeMem(0xabfa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfa));
        EXPECT(0x2b, gbc.readMem(0xabfb));
        // CB 2B 003A
        gbc.setState(0x46c5, 0x21a0, 0x73c0, 0x513e, 0x30d3, 0x5ca4, 0x1, 0x0);
        gbc.writeMem(0x46c5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x21a0, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 003B
        gbc.setState(0x6f7a, 0x4e53, 0x9ec0, 0xca06, 0x8512, 0x6e45, 0x0, 0x1);
        gbc.writeMem(0x6f7a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 003C
        gbc.setState(0x6f61, 0xcc75, 0xe040, 0x1fe6, 0xee25, 0x1780, 0x0, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcc75, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 003D
        gbc.setState(0x139, 0x38d5, 0xe30, 0x2886, 0xa18b, 0x6ad3, 0x1, 0x1);
        gbc.writeMem(0x139, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x38d5, gbc.sp());
        EXPECT(0x13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 003E
        gbc.setState(0x596a, 0x5784, 0x5960, 0x425e, 0x1b68, 0x5ff4, 0x1, 0x1);
        gbc.writeMem(0x596a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 003F
        gbc.setState(0xa979, 0xce50, 0xddf0, 0xfc3b, 0x9852, 0x8c1b, 0x0, 0x0);
        gbc.writeMem(0xa979, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xce50, gbc.sp());
        EXPECT(0xa97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa979));
        EXPECT(0x2b, gbc.readMem(0xa97a));
        // CB 2B 0040
        gbc.setState(0x2c08, 0x9d02, 0xbca0, 0x258d, 0xef75, 0xa028, 0x1, 0x1);
        gbc.writeMem(0x2c08, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d02, gbc.sp());
        EXPECT(0x2c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0041
        gbc.setState(0xe8c0, 0x2ac6, 0x7160, 0x4baf, 0x8ea7, 0x6e9b, 0x1, 0x1);
        gbc.writeMem(0xe8c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2ac6, gbc.sp());
        EXPECT(0xe8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c0));
        EXPECT(0x2b, gbc.readMem(0xe8c1));
        // CB 2B 0042
        gbc.setState(0x1293, 0xaab9, 0x6f20, 0xa953, 0x1e2a, 0xfeaf, 0x0, 0x1);
        gbc.writeMem(0x1293, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0x1295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0043
        gbc.setState(0xed7c, 0x5e08, 0x9db0, 0x8041, 0xfebb, 0xd77, 0x1, 0x0);
        gbc.writeMem(0xed7c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7c));
        EXPECT(0x2b, gbc.readMem(0xed7d));
        // CB 2B 0044
        gbc.setState(0xcda9, 0x77cf, 0x8c20, 0xd5c9, 0x3b67, 0x9536, 0x1, 0x1);
        gbc.writeMem(0xcda9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x77cf, gbc.sp());
        EXPECT(0xcdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda9));
        EXPECT(0x2b, gbc.readMem(0xcdaa));
        // CB 2B 0045
        gbc.setState(0x12fc, 0x3c1d, 0x43f0, 0xd627, 0xa158, 0x30c9, 0x0, 0x0);
        gbc.writeMem(0x12fc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0046
        gbc.setState(0x80b6, 0x4f8f, 0xdb20, 0xf564, 0x303f, 0x1c06, 0x0, 0x0);
        gbc.writeMem(0x80b6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0x80b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b6));
        EXPECT(0x2b, gbc.readMem(0x80b7));
        // CB 2B 0047
        gbc.setState(0xbc68, 0x4ecb, 0x37a0, 0x78ce, 0x5007, 0x5c4e, 0x1, 0x1);
        gbc.writeMem(0xbc68, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4ecb, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc68));
        EXPECT(0x2b, gbc.readMem(0xbc69));
        // CB 2B 0048
        gbc.setState(0x844, 0x95bb, 0x7370, 0xa169, 0xb8d7, 0xa552, 0x1, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0049
        gbc.setState(0x5622, 0x5b18, 0x4f00, 0x2dc6, 0x65e8, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5b18, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 004A
        gbc.setState(0xbc8d, 0xb92a, 0x5310, 0xf56b, 0x1d0c, 0xf791, 0x1, 0x1);
        gbc.writeMem(0xbc8d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0x2b, gbc.readMem(0xbc8e));
        // CB 2B 004B
        gbc.setState(0x9f48, 0x7886, 0x2190, 0x1aed, 0x4c6, 0x58a9, 0x0, 0x0);
        gbc.writeMem(0x9f48, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f48));
        EXPECT(0x2b, gbc.readMem(0x9f49));
        // CB 2B 004C
        gbc.setState(0x8f0f, 0xc3c7, 0x3890, 0x3599, 0x9aef, 0x393b, 0x1, 0x1);
        gbc.writeMem(0x8f0f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0f));
        EXPECT(0x2b, gbc.readMem(0x8f10));
        // CB 2B 004D
        gbc.setState(0xb36a, 0xe7cc, 0x2c10, 0x1c81, 0xeae, 0xda63, 0x0, 0x0);
        gbc.writeMem(0xb36a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36a));
        EXPECT(0x2b, gbc.readMem(0xb36b));
        // CB 2B 004E
        gbc.setState(0x66b0, 0xa568, 0x36f0, 0x565f, 0x5a0e, 0x6bb9, 0x1, 0x1);
        gbc.writeMem(0x66b0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0x66b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 004F
        gbc.setState(0x7460, 0xdea3, 0x3280, 0x8ac6, 0xb60f, 0x5cb0, 0x0, 0x0);
        gbc.writeMem(0x7460, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdea3, gbc.sp());
        EXPECT(0x7462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0050
        gbc.setState(0x5569, 0x3c63, 0x1070, 0x441d, 0x4e3b, 0xf81, 0x1, 0x1);
        gbc.writeMem(0x5569, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3c63, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0051
        gbc.setState(0xa00f, 0xa591, 0x380, 0x7228, 0x798c, 0x9c4d, 0x0, 0x1);
        gbc.writeMem(0xa00f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa591, gbc.sp());
        EXPECT(0xa011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00f));
        EXPECT(0x2b, gbc.readMem(0xa010));
        // CB 2B 0052
        gbc.setState(0xaec4, 0x281c, 0xa4d0, 0x67f5, 0x6afb, 0xe99c, 0x1, 0x1);
        gbc.writeMem(0xaec4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec4));
        EXPECT(0x2b, gbc.readMem(0xaec5));
        // CB 2B 0053
        gbc.setState(0x289a, 0x52be, 0xcb20, 0x1e64, 0x95f2, 0x32ce, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0054
        gbc.setState(0x4a06, 0xbbfe, 0xf9a0, 0x79b5, 0x55d0, 0x9b80, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbbfe, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0055
        gbc.setState(0x2880, 0xd06d, 0x33b0, 0x5054, 0xcce6, 0x24b7, 0x0, 0x0);
        gbc.writeMem(0x2880, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd06d, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0056
        gbc.setState(0xea16, 0xde78, 0x6890, 0x886d, 0x3460, 0x62ce, 0x1, 0x0);
        gbc.writeMem(0xea16, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0xea18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea16));
        EXPECT(0x2b, gbc.readMem(0xea17));
        // CB 2B 0057
        gbc.setState(0x66db, 0x1065, 0x7060, 0x243b, 0xda63, 0x91ec, 0x1, 0x0);
        gbc.writeMem(0x66db, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0058
        gbc.setState(0xeac0, 0x3ba8, 0x4480, 0x651b, 0x69a3, 0x4715, 0x0, 0x0);
        gbc.writeMem(0xeac0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3ba8, gbc.sp());
        EXPECT(0xeac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac0));
        EXPECT(0x2b, gbc.readMem(0xeac1));
        // CB 2B 0059
        gbc.setState(0x17a0, 0x477a, 0xf370, 0xcffb, 0x397a, 0xaef9, 0x0, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0x17a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 005A
        gbc.setState(0x8db7, 0xc40d, 0x65e0, 0x7a48, 0x53b3, 0xe900, 0x0, 0x1);
        gbc.writeMem(0x8db7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc40d, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db7));
        EXPECT(0x2b, gbc.readMem(0x8db8));
        // CB 2B 005B
        gbc.setState(0x687e, 0x2bbe, 0x1c50, 0x41bf, 0x964b, 0x9d5, 0x1, 0x1);
        gbc.writeMem(0x687e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bbe, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 005C
        gbc.setState(0x667b, 0x69cd, 0x6700, 0x4385, 0xb241, 0x8cdb, 0x1, 0x1);
        gbc.writeMem(0x667b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 005D
        gbc.setState(0x5461, 0xec74, 0xfb20, 0x740d, 0xe44, 0x739a, 0x0, 0x0);
        gbc.writeMem(0x5461, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 005E
        gbc.setState(0xbdb0, 0x96d4, 0xb40, 0xadd6, 0x8a99, 0x4d08, 0x0, 0x1);
        gbc.writeMem(0xbdb0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x96d4, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb0));
        EXPECT(0x2b, gbc.readMem(0xbdb1));
        // CB 2B 005F
        gbc.setState(0x9ee7, 0x3704, 0xc260, 0xf6e4, 0xb0db, 0xe375, 0x1, 0x1);
        gbc.writeMem(0x9ee7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3704, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee7));
        EXPECT(0x2b, gbc.readMem(0x9ee8));
        // CB 2B 0060
        gbc.setState(0x46f6, 0x67c4, 0x69e0, 0x1537, 0x8d8b, 0xf0f8, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0062
        gbc.setState(0x2367, 0xf5d, 0xe060, 0x7577, 0xa3ad, 0x3de4, 0x0, 0x1);
        gbc.writeMem(0x2367, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0063
        gbc.setState(0x6773, 0x4641, 0x7b50, 0xd709, 0xc6e2, 0x340b, 0x1, 0x0);
        gbc.writeMem(0x6773, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0x6775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0064
        gbc.setState(0x2463, 0xce60, 0x9ec0, 0x90bd, 0x5b36, 0x1c6b, 0x1, 0x0);
        gbc.writeMem(0x2463, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xce60, gbc.sp());
        EXPECT(0x2465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0065
        gbc.setState(0x72bc, 0x77d0, 0xb140, 0x976c, 0xcb43, 0x1c5a, 0x0, 0x1);
        gbc.writeMem(0x72bc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x77d0, gbc.sp());
        EXPECT(0x72be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0066
        gbc.setState(0xd11e, 0x4903, 0x6b30, 0x448d, 0xb4c1, 0xaec6, 0x0, 0x0);
        gbc.writeMem(0xd11e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4903, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11e));
        EXPECT(0x2b, gbc.readMem(0xd11f));
        // CB 2B 0067
        gbc.setState(0xb433, 0x41ff, 0x7cf0, 0xab39, 0xa848, 0xc696, 0x1, 0x1);
        gbc.writeMem(0xb433, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x41ff, gbc.sp());
        EXPECT(0xb435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb433));
        EXPECT(0x2b, gbc.readMem(0xb434));
        // CB 2B 0068
        gbc.setState(0xa8ea, 0x6d5c, 0x4a70, 0xd733, 0xeeac, 0xa0e3, 0x0, 0x0);
        gbc.writeMem(0xa8ea, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6d5c, gbc.sp());
        EXPECT(0xa8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ea));
        EXPECT(0x2b, gbc.readMem(0xa8eb));
        // CB 2B 0069
        gbc.setState(0xbad4, 0xd711, 0xc6d0, 0xe03, 0xac6c, 0x6136, 0x1, 0x0);
        gbc.writeMem(0xbad4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd711, gbc.sp());
        EXPECT(0xbad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad4));
        EXPECT(0x2b, gbc.readMem(0xbad5));
        // CB 2B 006A
        gbc.setState(0xa7b4, 0x1c56, 0x4a00, 0x65ba, 0x6cd6, 0xc998, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1c56, gbc.sp());
        EXPECT(0xa7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b4));
        EXPECT(0x2b, gbc.readMem(0xa7b5));
        // CB 2B 006B
        gbc.setState(0x47e3, 0x7d07, 0xbd20, 0x5710, 0x1bee, 0x4e25, 0x0, 0x1);
        gbc.writeMem(0x47e3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 006C
        gbc.setState(0xa297, 0x337d, 0x94d0, 0x1b1b, 0x457c, 0x325b, 0x1, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa297));
        EXPECT(0x2b, gbc.readMem(0xa298));
        // CB 2B 006D
        gbc.setState(0x771a, 0x4abd, 0xcf80, 0x8a1d, 0x4405, 0x8f36, 0x1, 0x1);
        gbc.writeMem(0x771a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 006E
        gbc.setState(0x88ca, 0x2309, 0x570, 0x90f3, 0x1de, 0x4a75, 0x0, 0x0);
        gbc.writeMem(0x88ca, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2309, gbc.sp());
        EXPECT(0x88cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ca));
        EXPECT(0x2b, gbc.readMem(0x88cb));
        // CB 2B 006F
        gbc.setState(0xeb59, 0x485f, 0xba70, 0x73c0, 0xd52a, 0x6ef, 0x0, 0x1);
        gbc.writeMem(0xeb59, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb59));
        EXPECT(0x2b, gbc.readMem(0xeb5a));
        // CB 2B 0070
        gbc.setState(0xec36, 0xc199, 0x5cc0, 0xe484, 0xce92, 0x1e74, 0x0, 0x0);
        gbc.writeMem(0xec36, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc199, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec36));
        EXPECT(0x2b, gbc.readMem(0xec37));
        // CB 2B 0071
        gbc.setState(0x774a, 0x3b50, 0x8b60, 0xf3f6, 0xfc69, 0x2656, 0x1, 0x1);
        gbc.writeMem(0x774a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3b50, gbc.sp());
        EXPECT(0x774c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0072
        gbc.setState(0xee19, 0x425e, 0x4510, 0x7acc, 0x20e, 0x76ae, 0x0, 0x1);
        gbc.writeMem(0xee19, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x425e, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee19));
        EXPECT(0x2b, gbc.readMem(0xee1a));
        // CB 2B 0073
        gbc.setState(0xad48, 0x80, 0x51f0, 0x2f73, 0x9968, 0xe58e, 0x1, 0x1);
        gbc.writeMem(0xad48, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad48));
        EXPECT(0x2b, gbc.readMem(0xad49));
        // CB 2B 0074
        gbc.setState(0x5f3c, 0x7828, 0x50f0, 0xa17c, 0xfb91, 0x3c, 0x0, 0x1);
        gbc.writeMem(0x5f3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0075
        gbc.setState(0x75c0, 0xdcd3, 0x49e0, 0x53cc, 0xbd74, 0xc12f, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdcd3, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0076
        gbc.setState(0xdacb, 0xe50c, 0x14d0, 0x1547, 0x31e2, 0xf200, 0x0, 0x1);
        gbc.writeMem(0xdacb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe50c, gbc.sp());
        EXPECT(0xdacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacb));
        EXPECT(0x2b, gbc.readMem(0xdacc));
        // CB 2B 0077
        gbc.setState(0x1cd4, 0xfbdd, 0xb1e0, 0x3e32, 0x80a6, 0xd55c, 0x0, 0x1);
        gbc.writeMem(0x1cd4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfbdd, gbc.sp());
        EXPECT(0x1cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0078
        gbc.setState(0x7636, 0xce1a, 0x62b0, 0x2d0a, 0x9b3e, 0x8b74, 0x1, 0x0);
        gbc.writeMem(0x7636, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0079
        gbc.setState(0x9492, 0x517, 0x250, 0xac89, 0x2bef, 0x6183, 0x0, 0x1);
        gbc.writeMem(0x9492, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x517, gbc.sp());
        EXPECT(0x9494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9492));
        EXPECT(0x2b, gbc.readMem(0x9493));
        // CB 2B 007A
        gbc.setState(0x67e6, 0x4fa8, 0x2f90, 0xc5b5, 0xee26, 0x2c14, 0x0, 0x1);
        gbc.writeMem(0x67e6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0x67e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 007B
        gbc.setState(0x925a, 0x4494, 0xbc50, 0x8f78, 0x695f, 0x9e6a, 0x1, 0x0);
        gbc.writeMem(0x925a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4494, gbc.sp());
        EXPECT(0x925c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925a));
        EXPECT(0x2b, gbc.readMem(0x925b));
        // CB 2B 007C
        gbc.setState(0xbda8, 0xf2bb, 0x590, 0x522b, 0xbda3, 0x3df4, 0x0, 0x1);
        gbc.writeMem(0xbda8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf2bb, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0x2b, gbc.readMem(0xbda9));
        // CB 2B 007D
        gbc.setState(0x73f4, 0xc183, 0x1480, 0x19d7, 0x6a6, 0x7422, 0x1, 0x0);
        gbc.writeMem(0x73f4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc183, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 007E
        gbc.setState(0x1fba, 0xfe9, 0x8e60, 0x4928, 0x8b89, 0xd98e, 0x1, 0x0);
        gbc.writeMem(0x1fba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0x1fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 007F
        gbc.setState(0x1576, 0x8ef5, 0xb680, 0x161b, 0xbd04, 0x226e, 0x1, 0x1);
        gbc.writeMem(0x1576, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x1578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0080
        gbc.setState(0xa02d, 0x3ce2, 0xa480, 0x53a6, 0x76a6, 0xb2cf, 0x1, 0x0);
        gbc.writeMem(0xa02d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3ce2, gbc.sp());
        EXPECT(0xa02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02d));
        EXPECT(0x2b, gbc.readMem(0xa02e));
        // CB 2B 0081
        gbc.setState(0x1ebd, 0x5c1a, 0x9c10, 0xf5f8, 0x4017, 0xf4f3, 0x0, 0x1);
        gbc.writeMem(0x1ebd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0082
        gbc.setState(0xedae, 0x4957, 0x7eb0, 0x323a, 0x4372, 0x4ea8, 0x0, 0x0);
        gbc.writeMem(0xedae, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4957, gbc.sp());
        EXPECT(0xedb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedae));
        EXPECT(0x2b, gbc.readMem(0xedaf));
        // CB 2B 0083
        gbc.setState(0x129e, 0xcaa6, 0xa20, 0x4137, 0xcae1, 0x40f0, 0x1, 0x0);
        gbc.writeMem(0x129e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcaa6, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0084
        gbc.setState(0x9660, 0xbfde, 0xe780, 0x8445, 0x9d4c, 0xac63, 0x1, 0x0);
        gbc.writeMem(0x9660, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0x9662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9660));
        EXPECT(0x2b, gbc.readMem(0x9661));
        // CB 2B 0085
        gbc.setState(0x8581, 0x3fa1, 0xb250, 0x5fcb, 0xda99, 0x4b35, 0x1, 0x1);
        gbc.writeMem(0x8581, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3fa1, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8581));
        EXPECT(0x2b, gbc.readMem(0x8582));
        // CB 2B 0086
        gbc.setState(0xa39f, 0xdfba, 0xe5b0, 0x7945, 0xb9a, 0x73b4, 0x1, 0x1);
        gbc.writeMem(0xa39f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0xa3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39f));
        EXPECT(0x2b, gbc.readMem(0xa3a0));
        // CB 2B 0087
        gbc.setState(0xcf87, 0x5864, 0x7f70, 0xe27b, 0xd4bc, 0x6c24, 0x1, 0x1);
        gbc.writeMem(0xcf87, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0xcf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf87));
        EXPECT(0x2b, gbc.readMem(0xcf88));
        // CB 2B 0088
        gbc.setState(0xad76, 0x523c, 0x98b0, 0xa10f, 0xb66c, 0xde95, 0x1, 0x1);
        gbc.writeMem(0xad76, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x523c, gbc.sp());
        EXPECT(0xad78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad76));
        EXPECT(0x2b, gbc.readMem(0xad77));
        // CB 2B 0089
        gbc.setState(0xaa16, 0xdda2, 0x6cd0, 0xa0de, 0xe4ce, 0x41a1, 0x0, 0x1);
        gbc.writeMem(0xaa16, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0xaa18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa16));
        EXPECT(0x2b, gbc.readMem(0xaa17));
        // CB 2B 008A
        gbc.setState(0x9d6f, 0xbcf7, 0x1d20, 0xde8e, 0xd69d, 0xa4d3, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbcf7, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6f));
        EXPECT(0x2b, gbc.readMem(0x9d70));
        // CB 2B 008B
        gbc.setState(0x2603, 0x5fd4, 0xc520, 0x9b66, 0x4978, 0xd33e, 0x0, 0x1);
        gbc.writeMem(0x2603, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5fd4, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 008C
        gbc.setState(0x4d89, 0x6029, 0x1190, 0x2e4d, 0xfa88, 0x80a2, 0x1, 0x1);
        gbc.writeMem(0x4d89, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6029, gbc.sp());
        EXPECT(0x4d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 008D
        gbc.setState(0x80dd, 0x2860, 0xf2d0, 0xfd3, 0xf2dd, 0xa562, 0x0, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2860, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dd));
        EXPECT(0x2b, gbc.readMem(0x80de));
        // CB 2B 008E
        gbc.setState(0x23d3, 0x8fa6, 0x61e0, 0xacd0, 0x295, 0xc245, 0x0, 0x0);
        gbc.writeMem(0x23d3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8fa6, gbc.sp());
        EXPECT(0x23d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 008F
        gbc.setState(0x764f, 0x947f, 0xe5b0, 0xde3c, 0xec92, 0x4744, 0x1, 0x1);
        gbc.writeMem(0x764f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x947f, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0090
        gbc.setState(0xcf98, 0x8af, 0x1400, 0xbea4, 0x9492, 0xb493, 0x1, 0x0);
        gbc.writeMem(0xcf98, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8af, gbc.sp());
        EXPECT(0xcf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf98));
        EXPECT(0x2b, gbc.readMem(0xcf99));
        // CB 2B 0091
        gbc.setState(0x7bbb, 0xfd78, 0x7500, 0xe494, 0x2f12, 0x9b17, 0x1, 0x0);
        gbc.writeMem(0x7bbb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfd78, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0092
        gbc.setState(0x3ee7, 0x2d87, 0x6ba0, 0xf4f6, 0x1ae6, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0x3ee7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2d87, gbc.sp());
        EXPECT(0x3ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0093
        gbc.setState(0x61cf, 0xe194, 0x28e0, 0xc96e, 0xcc09, 0xdf2c, 0x0, 0x1);
        gbc.writeMem(0x61cf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0x61d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0094
        gbc.setState(0x7b2b, 0x1eef, 0x3cd0, 0xae45, 0xcedc, 0xecde, 0x0, 0x0);
        gbc.writeMem(0x7b2b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1eef, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0095
        gbc.setState(0x280f, 0xc271, 0x2500, 0x79e1, 0xa9ae, 0xb5bf, 0x1, 0x1);
        gbc.writeMem(0x280f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x2811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0096
        gbc.setState(0x20f6, 0x6e2d, 0x9f90, 0xd3cb, 0x82a8, 0x99cf, 0x1, 0x1);
        gbc.writeMem(0x20f6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6e2d, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0097
        gbc.setState(0x65a7, 0x38ce, 0x17b0, 0xb47f, 0x2c6e, 0x479f, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x38ce, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0098
        gbc.setState(0x1c32, 0x1c19, 0x2fa0, 0xff3f, 0x66ff, 0x172b, 0x0, 0x0);
        gbc.writeMem(0x1c32, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1c19, gbc.sp());
        EXPECT(0x1c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0099
        gbc.setState(0x41e1, 0xf463, 0x2ad0, 0x88ce, 0xb2f1, 0x3bf4, 0x1, 0x0);
        gbc.writeMem(0x41e1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf463, gbc.sp());
        EXPECT(0x41e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 009A
        gbc.setState(0x9910, 0xad66, 0xa030, 0xcf3e, 0xeaf2, 0x1210, 0x1, 0x1);
        gbc.writeMem(0x9910, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xad66, gbc.sp());
        EXPECT(0x9912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9910));
        EXPECT(0x2b, gbc.readMem(0x9911));
        // CB 2B 009B
        gbc.setState(0x9209, 0x168, 0x2140, 0x9aa5, 0x1ef6, 0xdcfa, 0x1, 0x1);
        gbc.writeMem(0x9209, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x168, gbc.sp());
        EXPECT(0x920b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9209));
        EXPECT(0x2b, gbc.readMem(0x920a));
        // CB 2B 009C
        gbc.setState(0x789e, 0x5ad9, 0x1f40, 0xeaf6, 0xd853, 0x8673, 0x0, 0x0);
        gbc.writeMem(0x789e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5ad9, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 009D
        gbc.setState(0x8f7b, 0x3695, 0xd3b0, 0x8594, 0x90ee, 0xe07f, 0x0, 0x1);
        gbc.writeMem(0x8f7b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7b));
        EXPECT(0x2b, gbc.readMem(0x8f7c));
        // CB 2B 009E
        gbc.setState(0xd5ed, 0x4a5a, 0x1e30, 0xe1bb, 0xce2e, 0xd094, 0x0, 0x1);
        gbc.writeMem(0xd5ed, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0xd5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ed));
        EXPECT(0x2b, gbc.readMem(0xd5ee));
        // CB 2B 009F
        gbc.setState(0x84ab, 0xbe13, 0xcb30, 0x4435, 0x3223, 0x9d44, 0x0, 0x1);
        gbc.writeMem(0x84ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbe13, gbc.sp());
        EXPECT(0x84ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ab));
        EXPECT(0x2b, gbc.readMem(0x84ac));
        // CB 2B 00A0
        gbc.setState(0x70fa, 0xaa3e, 0x6f60, 0xe7a7, 0xba5c, 0x1238, 0x1, 0x1);
        gbc.writeMem(0x70fa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00A1
        gbc.setState(0xc697, 0x75ce, 0x17a0, 0xf0f4, 0x47f0, 0xae2e, 0x1, 0x0);
        gbc.writeMem(0xc697, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75ce, gbc.sp());
        EXPECT(0xc699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc697));
        EXPECT(0x2b, gbc.readMem(0xc698));
        // CB 2B 00A2
        gbc.setState(0x4e56, 0xa7e6, 0xcdd0, 0x7f05, 0x627b, 0x5df6, 0x1, 0x1);
        gbc.writeMem(0x4e56, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa7e6, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00A3
        gbc.setState(0x5594, 0x6788, 0x8b0, 0x317c, 0xf021, 0x5761, 0x0, 0x0);
        gbc.writeMem(0x5594, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6788, gbc.sp());
        EXPECT(0x5596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00A4
        gbc.setState(0x188b, 0x6d5, 0xd30, 0x9a02, 0x578a, 0x5b62, 0x1, 0x1);
        gbc.writeMem(0x188b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6d5, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00A5
        gbc.setState(0x9361, 0x8edf, 0x2e30, 0xf9a6, 0xda5c, 0x7b87, 0x0, 0x0);
        gbc.writeMem(0x9361, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9361));
        EXPECT(0x2b, gbc.readMem(0x9362));
        // CB 2B 00A7
        gbc.setState(0xc436, 0x870a, 0xab40, 0xb75e, 0xca73, 0x4fa7, 0x1, 0x1);
        gbc.writeMem(0xc436, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc436));
        EXPECT(0x2b, gbc.readMem(0xc437));
        // CB 2B 00A8
        gbc.setState(0x51b2, 0xff58, 0x5ae0, 0xd3c1, 0x33a5, 0x5ce, 0x0, 0x0);
        gbc.writeMem(0x51b2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x51b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00A9
        gbc.setState(0xe21a, 0x14a4, 0x3220, 0xaa56, 0xbd20, 0x71eb, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0x2b, gbc.readMem(0xe21b));
        // CB 2B 00AA
        gbc.setState(0x38be, 0x1687, 0x6bf0, 0xda7f, 0x7ba5, 0x9e12, 0x1, 0x0);
        gbc.writeMem(0x38be, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1687, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00AB
        gbc.setState(0x6811, 0xdc78, 0xe410, 0x7ce6, 0x7e7a, 0x92fd, 0x0, 0x0);
        gbc.writeMem(0x6811, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00AC
        gbc.setState(0x257a, 0xdddd, 0x1ce0, 0x9782, 0xfcf8, 0x90a9, 0x0, 0x1);
        gbc.writeMem(0x257a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdddd, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00AE
        gbc.setState(0x3b58, 0xbb57, 0x90d0, 0x7706, 0x927e, 0x9d5a, 0x0, 0x1);
        gbc.writeMem(0x3b58, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00AF
        gbc.setState(0x26be, 0xfcc, 0x9150, 0x476, 0xf17, 0x36f9, 0x0, 0x1);
        gbc.writeMem(0x26be, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00B0
        gbc.setState(0xe66d, 0xcabc, 0x91b0, 0x4eb, 0xd48f, 0xbc2b, 0x0, 0x0);
        gbc.writeMem(0xe66d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0xe66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66d));
        EXPECT(0x2b, gbc.readMem(0xe66e));
        // CB 2B 00B1
        gbc.setState(0x1c12, 0x7a2c, 0x6010, 0xee3d, 0x6741, 0xfaf3, 0x1, 0x1);
        gbc.writeMem(0x1c12, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7a2c, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00B2
        gbc.setState(0xcb25, 0xb51d, 0x42c0, 0x3733, 0x45bb, 0x13cb, 0x1, 0x0);
        gbc.writeMem(0xcb25, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb51d, gbc.sp());
        EXPECT(0xcb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb25));
        EXPECT(0x2b, gbc.readMem(0xcb26));
        // CB 2B 00B3
        gbc.setState(0xee0c, 0x4f40, 0xbaf0, 0x92c7, 0x3302, 0xe805, 0x1, 0x1);
        gbc.writeMem(0xee0c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f40, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0c));
        EXPECT(0x2b, gbc.readMem(0xee0d));
        // CB 2B 00B4
        gbc.setState(0xdd10, 0x5cbe, 0x1220, 0xf11b, 0x2d3b, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0xdd10, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0xdd12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd10));
        EXPECT(0x2b, gbc.readMem(0xdd11));
        // CB 2B 00B5
        gbc.setState(0x2a38, 0x13f0, 0xc3b0, 0x7986, 0x9417, 0x9c63, 0x1, 0x0);
        gbc.writeMem(0x2a38, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00B6
        gbc.setState(0x5a46, 0x6938, 0x5ea0, 0x5426, 0xff7c, 0x2eae, 0x1, 0x1);
        gbc.writeMem(0x5a46, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6938, gbc.sp());
        EXPECT(0x5a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00B7
        gbc.setState(0xd49b, 0x4294, 0x2980, 0xed69, 0xd0a7, 0xa427, 0x1, 0x0);
        gbc.writeMem(0xd49b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4294, gbc.sp());
        EXPECT(0xd49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49b));
        EXPECT(0x2b, gbc.readMem(0xd49c));
        // CB 2B 00B8
        gbc.setState(0x659, 0x3503, 0x4a40, 0xefc1, 0x171b, 0x3c2e, 0x0, 0x1);
        gbc.writeMem(0x659, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0x65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00BA
        gbc.setState(0x782d, 0x8252, 0x1510, 0xf1d2, 0xf57b, 0x44fa, 0x0, 0x0);
        gbc.writeMem(0x782d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0x782f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00BB
        gbc.setState(0x60f2, 0xf64e, 0xe020, 0x2ad6, 0x28f2, 0x876c, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0x60f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00BC
        gbc.setState(0x625c, 0x516f, 0x4470, 0x1d02, 0x78c4, 0xf14, 0x0, 0x0);
        gbc.writeMem(0x625c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0x625e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00BD
        gbc.setState(0xe99f, 0x716d, 0xcce0, 0x71c8, 0xdcec, 0x4126, 0x0, 0x0);
        gbc.writeMem(0xe99f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x716d, gbc.sp());
        EXPECT(0xe9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99f));
        EXPECT(0x2b, gbc.readMem(0xe9a0));
        // CB 2B 00BE
        gbc.setState(0x3c8a, 0x9639, 0x52b0, 0x424a, 0x1037, 0xfede, 0x1, 0x1);
        gbc.writeMem(0x3c8a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00BF
        gbc.setState(0x72d2, 0x75e, 0xdc20, 0xb60c, 0xe181, 0x95a9, 0x0, 0x0);
        gbc.writeMem(0x72d2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x75e, gbc.sp());
        EXPECT(0x72d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00C0
        gbc.setState(0x8daa, 0x8f60, 0x3e80, 0x1062, 0xcf05, 0x33ef, 0x0, 0x1);
        gbc.writeMem(0x8daa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8f60, gbc.sp());
        EXPECT(0x8dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daa));
        EXPECT(0x2b, gbc.readMem(0x8dab));
        // CB 2B 00C1
        gbc.setState(0x148f, 0x2f9c, 0x85d0, 0xca77, 0xfdd5, 0x7bce, 0x0, 0x0);
        gbc.writeMem(0x148f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2f9c, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00C2
        gbc.setState(0x26bd, 0x2a33, 0x9fc0, 0xc37f, 0xfbf3, 0x7d8b, 0x0, 0x1);
        gbc.writeMem(0x26bd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2a33, gbc.sp());
        EXPECT(0x26bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00C3
        gbc.setState(0xb670, 0xa26d, 0x6030, 0x55cf, 0x841b, 0x14a8, 0x1, 0x1);
        gbc.writeMem(0xb670, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa26d, gbc.sp());
        EXPECT(0xb672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb670));
        EXPECT(0x2b, gbc.readMem(0xb671));
        // CB 2B 00C4
        gbc.setState(0x49c7, 0xa04d, 0xd800, 0xb624, 0xde54, 0x2752, 0x0, 0x0);
        gbc.writeMem(0x49c7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x49c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00C5
        gbc.setState(0xc378, 0x7c9e, 0xa550, 0xa5fd, 0x68ac, 0x35c9, 0x1, 0x1);
        gbc.writeMem(0xc378, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c9e, gbc.sp());
        EXPECT(0xc37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc378));
        EXPECT(0x2b, gbc.readMem(0xc379));
        // CB 2B 00C6
        gbc.setState(0x7bf0, 0x76a3, 0xc4a0, 0xf8dc, 0x672a, 0xaa16, 0x0, 0x0);
        gbc.writeMem(0x7bf0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0x7bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00C7
        gbc.setState(0x7470, 0x72, 0x9500, 0xaef5, 0x2a47, 0x46c5, 0x0, 0x1);
        gbc.writeMem(0x7470, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x72, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00C8
        gbc.setState(0x658, 0x549, 0xfa30, 0x58ee, 0xc07e, 0xb424, 0x0, 0x1);
        gbc.writeMem(0x658, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00C9
        gbc.setState(0x4a51, 0x6965, 0x7ec0, 0x55f1, 0x9096, 0xd583, 0x1, 0x1);
        gbc.writeMem(0x4a51, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0x4a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00CA
        gbc.setState(0x4f51, 0x9b72, 0xc6d0, 0xe39a, 0xf566, 0x6291, 0x0, 0x0);
        gbc.writeMem(0x4f51, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0x4f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00CB
        gbc.setState(0x77c4, 0x272c, 0x5340, 0x4006, 0xfb48, 0x9b60, 0x0, 0x1);
        gbc.writeMem(0x77c4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x272c, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00CC
        gbc.setState(0x9121, 0xb013, 0x83b0, 0x9c22, 0xe456, 0x21c7, 0x1, 0x0);
        gbc.writeMem(0x9121, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x9123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9121));
        EXPECT(0x2b, gbc.readMem(0x9122));
        // CB 2B 00CD
        gbc.setState(0x4b20, 0xc3f, 0xe80, 0x9ab3, 0x89ac, 0xd385, 0x1, 0x0);
        gbc.writeMem(0x4b20, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc3f, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00CE
        gbc.setState(0xac74, 0x85a0, 0xd920, 0x753a, 0x87ea, 0xf14, 0x1, 0x0);
        gbc.writeMem(0xac74, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0xac76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac74));
        EXPECT(0x2b, gbc.readMem(0xac75));
        // CB 2B 00D0
        gbc.setState(0x69ff, 0xc7e5, 0x1060, 0x6d5e, 0x2c8e, 0xd588, 0x1, 0x1);
        gbc.writeMem(0x69ff, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc7e5, gbc.sp());
        EXPECT(0x6a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00D1
        gbc.setState(0x9ae4, 0xd3fa, 0x9230, 0x8999, 0xe997, 0x5caf, 0x0, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae4));
        EXPECT(0x2b, gbc.readMem(0x9ae5));
        // CB 2B 00D2
        gbc.setState(0x7b22, 0xb10e, 0xb560, 0xe51, 0xe24b, 0x6e61, 0x0, 0x1);
        gbc.writeMem(0x7b22, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00D3
        gbc.setState(0xb237, 0x2a9a, 0xfd0, 0x5a58, 0x5382, 0x45bb, 0x0, 0x0);
        gbc.writeMem(0xb237, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0xb239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb237));
        EXPECT(0x2b, gbc.readMem(0xb238));
        // CB 2B 00D4
        gbc.setState(0xea42, 0x76ed, 0x4510, 0xf270, 0xa8b1, 0xf14b, 0x1, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea42));
        EXPECT(0x2b, gbc.readMem(0xea43));
        // CB 2B 00D5
        gbc.setState(0x38f2, 0x8e28, 0x15e0, 0x5977, 0x3af7, 0xa3cf, 0x0, 0x1);
        gbc.writeMem(0x38f2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8e28, gbc.sp());
        EXPECT(0x38f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00D6
        gbc.setState(0xdfe5, 0x18b6, 0x1180, 0x1e8d, 0x1a78, 0xcc25, 0x0, 0x0);
        gbc.writeMem(0xdfe5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0xdfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe5));
        EXPECT(0x2b, gbc.readMem(0xdfe6));
        // CB 2B 00D7
        gbc.setState(0x83c6, 0xad7c, 0xbee0, 0x1357, 0x3c08, 0xcbd3, 0x0, 0x1);
        gbc.writeMem(0x83c6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xad7c, gbc.sp());
        EXPECT(0x83c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c6));
        EXPECT(0x2b, gbc.readMem(0x83c7));
        // CB 2B 00D8
        gbc.setState(0x81a4, 0x16b4, 0x5510, 0xb648, 0xe273, 0x9cae, 0x0, 0x0);
        gbc.writeMem(0x81a4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a4));
        EXPECT(0x2b, gbc.readMem(0x81a5));
        // CB 2B 00D9
        gbc.setState(0x1eae, 0x9f00, 0x83e0, 0xb53f, 0x4d3e, 0x765e, 0x0, 0x0);
        gbc.writeMem(0x1eae, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9f00, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00DA
        gbc.setState(0xd2c4, 0x88cd, 0xdcb0, 0x146b, 0xad21, 0x53be, 0x1, 0x0);
        gbc.writeMem(0xd2c4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x88cd, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c4));
        EXPECT(0x2b, gbc.readMem(0xd2c5));
        // CB 2B 00DB
        gbc.setState(0x2ea8, 0xce9f, 0x56b0, 0x7aaa, 0x1229, 0x9a28, 0x1, 0x1);
        gbc.writeMem(0x2ea8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00DC
        gbc.setState(0x897b, 0x9b17, 0x6bf0, 0x5dbf, 0xca3d, 0xced5, 0x1, 0x0);
        gbc.writeMem(0x897b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9b17, gbc.sp());
        EXPECT(0x897d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897b));
        EXPECT(0x2b, gbc.readMem(0x897c));
        // CB 2B 00DD
        gbc.setState(0xa878, 0xf16f, 0x4700, 0xe2b8, 0x38a, 0xe15c, 0x0, 0x0);
        gbc.writeMem(0xa878, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xa87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa878));
        EXPECT(0x2b, gbc.readMem(0xa879));
        // CB 2B 00DE
        gbc.setState(0xcdbc, 0xf111, 0xfae0, 0x64ea, 0x9ffc, 0xe3eb, 0x1, 0x1);
        gbc.writeMem(0xcdbc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0xcdbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbc));
        EXPECT(0x2b, gbc.readMem(0xcdbd));
        // CB 2B 00DF
        gbc.setState(0xa8e3, 0x3e74, 0x84f0, 0x6bf9, 0xcb3d, 0x2a8d, 0x1, 0x1);
        gbc.writeMem(0xa8e3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3e74, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e3));
        EXPECT(0x2b, gbc.readMem(0xa8e4));
        // CB 2B 00E0
        gbc.setState(0x6c61, 0x24bc, 0x79c0, 0xe34f, 0x65fc, 0xf484, 0x1, 0x1);
        gbc.writeMem(0x6c61, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x24bc, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00E1
        gbc.setState(0x94ba, 0x433d, 0xd860, 0x1fde, 0x6292, 0x14a, 0x1, 0x0);
        gbc.writeMem(0x94ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x433d, gbc.sp());
        EXPECT(0x94bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ba));
        EXPECT(0x2b, gbc.readMem(0x94bb));
        // CB 2B 00E2
        gbc.setState(0x9ab5, 0x8075, 0xbd50, 0x9756, 0xb22e, 0x442b, 0x1, 0x1);
        gbc.writeMem(0x9ab5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8075, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab5));
        EXPECT(0x2b, gbc.readMem(0x9ab6));
        // CB 2B 00E3
        gbc.setState(0x42c, 0x2260, 0x2950, 0x3bf4, 0x9a3d, 0x57d2, 0x0, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00E4
        gbc.setState(0x62c8, 0x81b6, 0xbb20, 0xa4ad, 0x8e6d, 0xd5e6, 0x0, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00E5
        gbc.setState(0x470, 0xb14c, 0x5a00, 0x2700, 0x9e6a, 0x60ac, 0x0, 0x1);
        gbc.writeMem(0x470, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb14c, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00E6
        gbc.setState(0xe9e3, 0x770d, 0xe850, 0xcbeb, 0x4bdd, 0xac5a, 0x0, 0x1);
        gbc.writeMem(0xe9e3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0xe9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e3));
        EXPECT(0x2b, gbc.readMem(0xe9e4));
        // CB 2B 00E7
        gbc.setState(0xc7b0, 0x84f8, 0x56b0, 0x9a8f, 0xca1e, 0xae58, 0x1, 0x1);
        gbc.writeMem(0xc7b0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x84f8, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0x2b, gbc.readMem(0xc7b1));
        // CB 2B 00E8
        gbc.setState(0xc2c7, 0x7bb4, 0xa410, 0x5289, 0xa187, 0xb6f5, 0x1, 0x0);
        gbc.writeMem(0xc2c7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7bb4, gbc.sp());
        EXPECT(0xc2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c7));
        EXPECT(0x2b, gbc.readMem(0xc2c8));
        // CB 2B 00E9
        gbc.setState(0xd334, 0x6b74, 0xb1e0, 0x9cd5, 0x3465, 0xa93e, 0x1, 0x0);
        gbc.writeMem(0xd334, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd334));
        EXPECT(0x2b, gbc.readMem(0xd335));
        // CB 2B 00EA
        gbc.setState(0xcd94, 0xe170, 0xf1a0, 0x96c2, 0xd226, 0xcf82, 0x0, 0x1);
        gbc.writeMem(0xcd94, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd94));
        EXPECT(0x2b, gbc.readMem(0xcd95));
        // CB 2B 00EB
        gbc.setState(0xafd6, 0x76c7, 0x85a0, 0x8c49, 0xd87c, 0x1f9a, 0x0, 0x1);
        gbc.writeMem(0xafd6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x76c7, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd6));
        EXPECT(0x2b, gbc.readMem(0xafd7));
        // CB 2B 00EC
        gbc.setState(0x639a, 0xd03f, 0x7d50, 0xde7b, 0x1cf8, 0x3df6, 0x0, 0x1);
        gbc.writeMem(0x639a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0x639c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00ED
        gbc.setState(0x19e1, 0x17e2, 0xbc70, 0xf3fd, 0x6cd0, 0x89e4, 0x0, 0x1);
        gbc.writeMem(0x19e1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00EE
        gbc.setState(0x88a3, 0x74b0, 0x9350, 0x69c8, 0x7985, 0x4f54, 0x1, 0x0);
        gbc.writeMem(0x88a3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x74b0, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a3));
        EXPECT(0x2b, gbc.readMem(0x88a4));
        // CB 2B 00EF
        gbc.setState(0xb328, 0x22ed, 0x7a00, 0xce68, 0x5e26, 0x1cb0, 0x0, 0x1);
        gbc.writeMem(0xb328, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x22ed, gbc.sp());
        EXPECT(0xb32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb328));
        EXPECT(0x2b, gbc.readMem(0xb329));
        // CB 2B 00F0
        gbc.setState(0x700d, 0x8fd0, 0xb800, 0xd532, 0x9cd5, 0x9f5f, 0x0, 0x0);
        gbc.writeMem(0x700d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00F1
        gbc.setState(0xc803, 0xf2d9, 0x5500, 0x3881, 0x3f1, 0x2a83, 0x0, 0x1);
        gbc.writeMem(0xc803, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf2d9, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc803));
        EXPECT(0x2b, gbc.readMem(0xc804));
        // CB 2B 00F2
        gbc.setState(0xe96f, 0x826, 0x7730, 0xc9ab, 0xc2c5, 0x8ddc, 0x1, 0x0);
        gbc.writeMem(0xe96f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x826, gbc.sp());
        EXPECT(0xe971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96f));
        EXPECT(0x2b, gbc.readMem(0xe970));
        // CB 2B 00F4
        gbc.setState(0x39a6, 0xa330, 0x7f50, 0x43a2, 0xcd5f, 0x1ed1, 0x1, 0x1);
        gbc.writeMem(0x39a6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa330, gbc.sp());
        EXPECT(0x39a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00F5
        gbc.setState(0x20a0, 0xd279, 0x7e10, 0x20d4, 0xfe58, 0x435e, 0x0, 0x1);
        gbc.writeMem(0x20a0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd279, gbc.sp());
        EXPECT(0x20a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00F6
        gbc.setState(0xc643, 0x5d0c, 0x7f90, 0xfd41, 0xd7cf, 0x4090, 0x1, 0x0);
        gbc.writeMem(0xc643, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5d0c, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc643));
        EXPECT(0x2b, gbc.readMem(0xc644));
        // CB 2B 00F7
        gbc.setState(0x6ec3, 0x70a3, 0x20, 0x1808, 0x8e9a, 0x3daf, 0x1, 0x0);
        gbc.writeMem(0x6ec3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x70a3, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00F8
        gbc.setState(0x5ddc, 0xedc0, 0x9a00, 0x444c, 0x6f32, 0x714, 0x0, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x5dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00F9
        gbc.setState(0x33c9, 0xe450, 0x4e10, 0x4d82, 0x6764, 0x8323, 0x1, 0x1);
        gbc.writeMem(0x33c9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe450, gbc.sp());
        EXPECT(0x33cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00FB
        gbc.setState(0x1a42, 0x42d6, 0x3a00, 0x10d9, 0x8cbe, 0x7ff6, 0x0, 0x1);
        gbc.writeMem(0x1a42, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x42d6, gbc.sp());
        EXPECT(0x1a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00FC
        gbc.setState(0xefe1, 0x6af1, 0xae50, 0x7564, 0x92cd, 0x933, 0x1, 0x1);
        gbc.writeMem(0xefe1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6af1, gbc.sp());
        EXPECT(0xefe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe1));
        EXPECT(0x2b, gbc.readMem(0xefe2));
        // CB 2B 00FD
        gbc.setState(0x76f9, 0x13fa, 0xeeb0, 0x2057, 0xd4f4, 0xd231, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x13fa, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 00FE
        gbc.setState(0x785f, 0xd269, 0x9210, 0xf5f1, 0x75f5, 0xeec9, 0x0, 0x0);
        gbc.writeMem(0x785f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 00FF
        gbc.setState(0xa9b3, 0x2ecc, 0x7690, 0x478d, 0xfa6d, 0xc202, 0x0, 0x1);
        gbc.writeMem(0xa9b3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2ecc, gbc.sp());
        EXPECT(0xa9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b3));
        EXPECT(0x2b, gbc.readMem(0xa9b4));
        // CB 2B 0100
        gbc.setState(0x83cb, 0xbc58, 0x3f50, 0x3d8c, 0x9ca, 0xf751, 0x0, 0x0);
        gbc.writeMem(0x83cb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc58, gbc.sp());
        EXPECT(0x83cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cb));
        EXPECT(0x2b, gbc.readMem(0x83cc));
        // CB 2B 0101
        gbc.setState(0xbda1, 0xc6b1, 0x3cf0, 0xb2ab, 0xceab, 0x6abd, 0x0, 0x0);
        gbc.writeMem(0xbda1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda1));
        EXPECT(0x2b, gbc.readMem(0xbda2));
        // CB 2B 0102
        gbc.setState(0x5d26, 0x3157, 0xcfc0, 0xf0ea, 0xc1f3, 0x2993, 0x1, 0x0);
        gbc.writeMem(0x5d26, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3157, gbc.sp());
        EXPECT(0x5d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0103
        gbc.setState(0x72f6, 0x7433, 0x85a0, 0xe778, 0xc080, 0x2022, 0x1, 0x1);
        gbc.writeMem(0x72f6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0104
        gbc.setState(0xd4c7, 0x2611, 0xc780, 0xfcbb, 0xbbca, 0x7585, 0x1, 0x1);
        gbc.writeMem(0xd4c7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0xd4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c7));
        EXPECT(0x2b, gbc.readMem(0xd4c8));
        // CB 2B 0105
        gbc.setState(0x852, 0xa722, 0x40, 0x5c91, 0xa182, 0x7979, 0x0, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0106
        gbc.setState(0xe6e8, 0xe47f, 0xffe0, 0xddb3, 0xc5d6, 0x3ade, 0x1, 0x1);
        gbc.writeMem(0xe6e8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e8));
        EXPECT(0x2b, gbc.readMem(0xe6e9));
        // CB 2B 0107
        gbc.setState(0x4bc1, 0xaf13, 0x3850, 0x70df, 0x1817, 0xf36c, 0x1, 0x0);
        gbc.writeMem(0x4bc1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x4bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0108
        gbc.setState(0x95f3, 0x1b31, 0xb0, 0xe9ef, 0x3b54, 0x2010, 0x0, 0x0);
        gbc.writeMem(0x95f3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1b31, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f3));
        EXPECT(0x2b, gbc.readMem(0x95f4));
        // CB 2B 0109
        gbc.setState(0x43, 0xb66, 0xae20, 0xf8f9, 0xa84c, 0xf142, 0x1, 0x1);
        gbc.writeMem(0x43, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 010A
        gbc.setState(0x491, 0xf847, 0xb8d0, 0xd0fc, 0x311f, 0x6f52, 0x1, 0x1);
        gbc.writeMem(0x491, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf847, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 010B
        gbc.setState(0x87fa, 0x32b5, 0x9fb0, 0x58d2, 0x7893, 0x4e2a, 0x0, 0x1);
        gbc.writeMem(0x87fa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fa));
        EXPECT(0x2b, gbc.readMem(0x87fb));
        // CB 2B 010D
        gbc.setState(0x7756, 0xe0f0, 0x3920, 0xfa52, 0xe57a, 0x2172, 0x1, 0x0);
        gbc.writeMem(0x7756, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 010E
        gbc.setState(0x6715, 0xf2dd, 0xe1f0, 0xd6fd, 0x732a, 0x56d3, 0x0, 0x1);
        gbc.writeMem(0x6715, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x6717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0110
        gbc.setState(0x9438, 0xe176, 0x5280, 0x14b6, 0x2e3a, 0xd01c, 0x0, 0x1);
        gbc.writeMem(0x9438, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe176, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9438));
        EXPECT(0x2b, gbc.readMem(0x9439));
        // CB 2B 0111
        gbc.setState(0x988c, 0x675f, 0xf1a0, 0xfcba, 0x9135, 0xfd94, 0x0, 0x0);
        gbc.writeMem(0x988c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x675f, gbc.sp());
        EXPECT(0x988e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988c));
        EXPECT(0x2b, gbc.readMem(0x988d));
        // CB 2B 0112
        gbc.setState(0x98a8, 0xfd7f, 0x3ea0, 0xfb3e, 0xd7fe, 0x4556, 0x0, 0x1);
        gbc.writeMem(0x98a8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfd7f, gbc.sp());
        EXPECT(0x98aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a8));
        EXPECT(0x2b, gbc.readMem(0x98a9));
        // CB 2B 0113
        gbc.setState(0x2a03, 0xd137, 0x7400, 0xdbe0, 0x594b, 0xa41d, 0x0, 0x1);
        gbc.writeMem(0x2a03, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0x2a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0114
        gbc.setState(0x883c, 0x406, 0x27b0, 0xc83a, 0x8b, 0x16af, 0x1, 0x1);
        gbc.writeMem(0x883c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883c));
        EXPECT(0x2b, gbc.readMem(0x883d));
        // CB 2B 0116
        gbc.setState(0x2897, 0x9156, 0x9840, 0x903e, 0x601a, 0x254f, 0x1, 0x0);
        gbc.writeMem(0x2897, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0117
        gbc.setState(0x8983, 0x97d7, 0xf80, 0xd277, 0xd874, 0x805, 0x0, 0x1);
        gbc.writeMem(0x8983, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x97d7, gbc.sp());
        EXPECT(0x8985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8983));
        EXPECT(0x2b, gbc.readMem(0x8984));
        // CB 2B 0118
        gbc.setState(0x21c4, 0xcc4a, 0x5860, 0x9339, 0xa169, 0xf172, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcc4a, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0119
        gbc.setState(0xa18e, 0xdeb5, 0x41c0, 0x184, 0x996c, 0x9775, 0x0, 0x0);
        gbc.writeMem(0xa18e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdeb5, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18e));
        EXPECT(0x2b, gbc.readMem(0xa18f));
        // CB 2B 011A
        gbc.setState(0x8bd8, 0x5013, 0x54a0, 0x3b01, 0x44ea, 0x7d41, 0x0, 0x1);
        gbc.writeMem(0x8bd8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5013, gbc.sp());
        EXPECT(0x8bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd8));
        EXPECT(0x2b, gbc.readMem(0x8bd9));
        // CB 2B 011B
        gbc.setState(0x90ab, 0xea65, 0xf380, 0xe7f, 0x67d3, 0x8374, 0x0, 0x0);
        gbc.writeMem(0x90ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xea65, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ab));
        EXPECT(0x2b, gbc.readMem(0x90ac));
        // CB 2B 011C
        gbc.setState(0x2eb6, 0xb837, 0xae0, 0x6330, 0x9d1c, 0x2aa5, 0x1, 0x0);
        gbc.writeMem(0x2eb6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb837, gbc.sp());
        EXPECT(0x2eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 011D
        gbc.setState(0xd273, 0xbd32, 0x49c0, 0xa46d, 0x5f02, 0xc18f, 0x1, 0x0);
        gbc.writeMem(0xd273, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbd32, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd273));
        EXPECT(0x2b, gbc.readMem(0xd274));
        // CB 2B 011E
        gbc.setState(0xe51f, 0x6551, 0x6fa0, 0xc6df, 0x1f5, 0xf905, 0x0, 0x0);
        gbc.writeMem(0xe51f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51f));
        EXPECT(0x2b, gbc.readMem(0xe520));
        // CB 2B 011F
        gbc.setState(0x7b2c, 0x3399, 0x76c0, 0x4fab, 0x6bff, 0xb014, 0x1, 0x1);
        gbc.writeMem(0x7b2c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3399, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0120
        gbc.setState(0xdfe6, 0xa172, 0x20e0, 0xf79, 0x498b, 0x14a2, 0x1, 0x0);
        gbc.writeMem(0xdfe6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0xdfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe6));
        EXPECT(0x2b, gbc.readMem(0xdfe7));
        // CB 2B 0121
        gbc.setState(0x2813, 0x6696, 0x5860, 0x5970, 0xf544, 0x13e7, 0x1, 0x0);
        gbc.writeMem(0x2813, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0122
        gbc.setState(0x9e29, 0x2cd3, 0x980, 0xfc8d, 0x25c1, 0x724d, 0x1, 0x0);
        gbc.writeMem(0x9e29, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x9e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e29));
        EXPECT(0x2b, gbc.readMem(0x9e2a));
        // CB 2B 0123
        gbc.setState(0x21f0, 0xc28a, 0xc430, 0xd50f, 0x42d4, 0xba1f, 0x0, 0x1);
        gbc.writeMem(0x21f0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc28a, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0124
        gbc.setState(0xa1c3, 0x1f78, 0x2ad0, 0xa769, 0x20ef, 0xa779, 0x0, 0x0);
        gbc.writeMem(0xa1c3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xa1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c3));
        EXPECT(0x2b, gbc.readMem(0xa1c4));
        // CB 2B 0125
        gbc.setState(0x13a7, 0x975c, 0xe3a0, 0x7b4e, 0xc587, 0xd78b, 0x1, 0x1);
        gbc.writeMem(0x13a7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x975c, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0126
        gbc.setState(0xce73, 0x4417, 0x26e0, 0xec2c, 0x5ed4, 0x8865, 0x0, 0x0);
        gbc.writeMem(0xce73, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4417, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce73));
        EXPECT(0x2b, gbc.readMem(0xce74));
        // CB 2B 0127
        gbc.setState(0x1e7b, 0x8f86, 0x6ab0, 0x7911, 0x3fc4, 0x2c6b, 0x0, 0x1);
        gbc.writeMem(0x1e7b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x1e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0128
        gbc.setState(0x120e, 0x8745, 0x8200, 0xbdac, 0xedae, 0x7777, 0x0, 0x0);
        gbc.writeMem(0x120e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0129
        gbc.setState(0x576a, 0x90a0, 0x670, 0xeaa9, 0x3a6a, 0x5567, 0x1, 0x1);
        gbc.writeMem(0x576a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x90a0, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 012A
        gbc.setState(0xb48, 0x358d, 0x5280, 0x5c4e, 0x5d43, 0xbea8, 0x1, 0x0);
        gbc.writeMem(0xb48, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0xb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 012B
        gbc.setState(0x212a, 0x61bf, 0x9860, 0xac16, 0xf2ed, 0x46ee, 0x0, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x61bf, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 012C
        gbc.setState(0x68af, 0x520f, 0x8c50, 0x5113, 0xd54f, 0xf5d3, 0x0, 0x0);
        gbc.writeMem(0x68af, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 012D
        gbc.setState(0xa604, 0xfc79, 0xf80, 0x7b9, 0x2cf2, 0x8202, 0x1, 0x0);
        gbc.writeMem(0xa604, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc79, gbc.sp());
        EXPECT(0xa606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa604));
        EXPECT(0x2b, gbc.readMem(0xa605));
        // CB 2B 012E
        gbc.setState(0xb736, 0x57f2, 0xd300, 0x6fdd, 0x6cd2, 0xaad1, 0x0, 0x1);
        gbc.writeMem(0xb736, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb736));
        EXPECT(0x2b, gbc.readMem(0xb737));
        // CB 2B 012F
        gbc.setState(0x96ff, 0x36ce, 0x6f00, 0xdc44, 0xe062, 0x476b, 0x1, 0x0);
        gbc.writeMem(0x96ff, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x36ce, gbc.sp());
        EXPECT(0x9701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ff));
        EXPECT(0x2b, gbc.readMem(0x9700));
        // CB 2B 0130
        gbc.setState(0xe66f, 0xf3f2, 0x2940, 0x6367, 0x1db3, 0xd0df, 0x1, 0x1);
        gbc.writeMem(0xe66f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf3f2, gbc.sp());
        EXPECT(0xe671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66f));
        EXPECT(0x2b, gbc.readMem(0xe670));
        // CB 2B 0131
        gbc.setState(0xb533, 0xf00, 0x92c0, 0x7101, 0x821e, 0xae8, 0x0, 0x0);
        gbc.writeMem(0xb533, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf00, gbc.sp());
        EXPECT(0xb535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb533));
        EXPECT(0x2b, gbc.readMem(0xb534));
        // CB 2B 0132
        gbc.setState(0xef67, 0xb6e7, 0x8f30, 0x3bd2, 0x61ff, 0xe509, 0x1, 0x0);
        gbc.writeMem(0xef67, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef67));
        EXPECT(0x2b, gbc.readMem(0xef68));
        // CB 2B 0133
        gbc.setState(0x4805, 0x9aab, 0x24b0, 0xb672, 0xf24e, 0xa07f, 0x0, 0x0);
        gbc.writeMem(0x4805, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9aab, gbc.sp());
        EXPECT(0x4807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0134
        gbc.setState(0x486, 0x5cac, 0xc940, 0x8e7e, 0xbb52, 0xa8d9, 0x0, 0x1);
        gbc.writeMem(0x486, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5cac, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0135
        gbc.setState(0x92c0, 0x71de, 0x9d20, 0x7e17, 0xe74d, 0x59db, 0x1, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c0));
        EXPECT(0x2b, gbc.readMem(0x92c1));
        // CB 2B 0136
        gbc.setState(0x3037, 0x3608, 0xad40, 0xa7f0, 0x690e, 0x6631, 0x0, 0x1);
        gbc.writeMem(0x3037, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0x3039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0137
        gbc.setState(0xca6a, 0x6acf, 0x9610, 0x3f29, 0x6c8d, 0x6a9b, 0x0, 0x0);
        gbc.writeMem(0xca6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0xca6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6a));
        EXPECT(0x2b, gbc.readMem(0xca6b));
        // CB 2B 0138
        gbc.setState(0x2cd0, 0x20ef, 0x13d0, 0xb729, 0xf52, 0x1d7, 0x1, 0x1);
        gbc.writeMem(0x2cd0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x2cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0139
        gbc.setState(0x1a78, 0x835a, 0xe600, 0x829f, 0x1c2a, 0x50a5, 0x0, 0x0);
        gbc.writeMem(0x1a78, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x835a, gbc.sp());
        EXPECT(0x1a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 013A
        gbc.setState(0x2b1d, 0x9029, 0x4c20, 0xcb8c, 0x1ecc, 0x5b6b, 0x1, 0x0);
        gbc.writeMem(0x2b1d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9029, gbc.sp());
        EXPECT(0x2b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 013C
        gbc.setState(0x474b, 0xe591, 0xa040, 0x2c13, 0x8f42, 0x3fba, 0x1, 0x0);
        gbc.writeMem(0x474b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x474d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 013D
        gbc.setState(0x1695, 0xfe0c, 0x2980, 0x3717, 0xd244, 0x828, 0x0, 0x0);
        gbc.writeMem(0x1695, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfe0c, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 013E
        gbc.setState(0x1aef, 0xd334, 0x6f30, 0x6197, 0x5cc8, 0xe9a2, 0x0, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd334, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0140
        gbc.setState(0xafe3, 0xed74, 0x6060, 0x88d5, 0x252a, 0xdea5, 0x0, 0x1);
        gbc.writeMem(0xafe3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed74, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe3));
        EXPECT(0x2b, gbc.readMem(0xafe4));
        // CB 2B 0141
        gbc.setState(0x81bd, 0x8974, 0x6fb0, 0x574b, 0x8f33, 0xcf3c, 0x1, 0x1);
        gbc.writeMem(0x81bd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x81bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bd));
        EXPECT(0x2b, gbc.readMem(0x81be));
        // CB 2B 0142
        gbc.setState(0x6348, 0x734a, 0x62a0, 0xb016, 0xf7fb, 0xbc00, 0x0, 0x1);
        gbc.writeMem(0x6348, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0143
        gbc.setState(0x3c31, 0x105d, 0xa200, 0x4f09, 0xfa5b, 0x5de9, 0x1, 0x0);
        gbc.writeMem(0x3c31, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x105d, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0144
        gbc.setState(0x946b, 0x9901, 0x9720, 0x2834, 0xf2cd, 0x217e, 0x0, 0x1);
        gbc.writeMem(0x946b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9901, gbc.sp());
        EXPECT(0x946d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946b));
        EXPECT(0x2b, gbc.readMem(0x946c));
        // CB 2B 0145
        gbc.setState(0x498e, 0x9400, 0xb00, 0xfec8, 0xc6b3, 0xa55b, 0x0, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0146
        gbc.setState(0xb1ce, 0x2fe4, 0x7af0, 0x4fc5, 0x8a31, 0xad5a, 0x0, 0x0);
        gbc.writeMem(0xb1ce, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2fe4, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0x2b, gbc.readMem(0xb1cf));
        // CB 2B 0147
        gbc.setState(0x62b3, 0xe06d, 0xf630, 0xe78d, 0xbb45, 0x409c, 0x1, 0x1);
        gbc.writeMem(0x62b3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x62b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0148
        gbc.setState(0xadc7, 0x29e6, 0x7150, 0x15d0, 0xe961, 0x4f1c, 0x0, 0x0);
        gbc.writeMem(0xadc7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x29e6, gbc.sp());
        EXPECT(0xadc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc7));
        EXPECT(0x2b, gbc.readMem(0xadc8));
        // CB 2B 0149
        gbc.setState(0x11ba, 0x988, 0x6bc0, 0x93c4, 0x7f20, 0xd6d8, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 014A
        gbc.setState(0x2c71, 0xd6a0, 0xc5e0, 0xcbd4, 0x3296, 0xec88, 0x1, 0x1);
        gbc.writeMem(0x2c71, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 014B
        gbc.setState(0xb052, 0xd119, 0x2000, 0x31f3, 0x5370, 0x7e50, 0x1, 0x1);
        gbc.writeMem(0xb052, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd119, gbc.sp());
        EXPECT(0xb054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb052));
        EXPECT(0x2b, gbc.readMem(0xb053));
        // CB 2B 014C
        gbc.setState(0x59ee, 0x75c1, 0xa190, 0xe6a7, 0x2444, 0xe90, 0x1, 0x1);
        gbc.writeMem(0x59ee, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x59f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 014D
        gbc.setState(0x5f87, 0x8878, 0xecd0, 0x78d9, 0xdf17, 0xe3a, 0x1, 0x0);
        gbc.writeMem(0x5f87, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8878, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 014E
        gbc.setState(0x62a9, 0xa78b, 0xd700, 0x2214, 0x5ceb, 0xa9a9, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 014F
        gbc.setState(0x2e1e, 0xa492, 0x2680, 0xe0f4, 0xe480, 0xbea0, 0x0, 0x1);
        gbc.writeMem(0x2e1e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa492, gbc.sp());
        EXPECT(0x2e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0152
        gbc.setState(0x5301, 0xb462, 0x3ff0, 0x5277, 0x1a80, 0x6a31, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb462, gbc.sp());
        EXPECT(0x5303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0153
        gbc.setState(0x541a, 0x9670, 0x9ef0, 0x91cf, 0xa234, 0xd304, 0x0, 0x0);
        gbc.writeMem(0x541a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0155
        gbc.setState(0x725b, 0xd309, 0x5b0, 0xcaaf, 0xc750, 0xf20, 0x1, 0x0);
        gbc.writeMem(0x725b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd309, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0156
        gbc.setState(0x128b, 0x9648, 0x33d0, 0xa5a1, 0xe7e2, 0xa45b, 0x0, 0x1);
        gbc.writeMem(0x128b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0157
        gbc.setState(0x23ca, 0x5a67, 0x95f0, 0x96f, 0x1c9f, 0x766d, 0x1, 0x1);
        gbc.writeMem(0x23ca, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0158
        gbc.setState(0xd41b, 0x6908, 0x8950, 0x28d8, 0x41be, 0xfcf5, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6908, gbc.sp());
        EXPECT(0xd41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41b));
        EXPECT(0x2b, gbc.readMem(0xd41c));
        // CB 2B 0159
        gbc.setState(0x894e, 0x9f5e, 0xdd0, 0x39f0, 0x491, 0x1905, 0x1, 0x0);
        gbc.writeMem(0x894e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f5e, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894e));
        EXPECT(0x2b, gbc.readMem(0x894f));
        // CB 2B 015A
        gbc.setState(0x13fb, 0x1b7d, 0xb870, 0x6f81, 0xf46, 0xca2c, 0x0, 0x1);
        gbc.writeMem(0x13fb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0x13fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 015B
        gbc.setState(0x7991, 0xa086, 0x6710, 0xd611, 0x2f2f, 0xa844, 0x1, 0x0);
        gbc.writeMem(0x7991, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0x7993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 015C
        gbc.setState(0xb39a, 0x656, 0xe3b0, 0xc06, 0x4ac5, 0x5351, 0x1, 0x1);
        gbc.writeMem(0xb39a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0xb39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39a));
        EXPECT(0x2b, gbc.readMem(0xb39b));
        // CB 2B 015D
        gbc.setState(0x1d36, 0x8fc0, 0x2720, 0x7124, 0x8b76, 0xf97c, 0x1, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8fc0, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 015E
        gbc.setState(0xdda1, 0x9b9d, 0x62c0, 0x4c0, 0x9c0, 0x3d65, 0x1, 0x0);
        gbc.writeMem(0xdda1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9b9d, gbc.sp());
        EXPECT(0xdda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda1));
        EXPECT(0x2b, gbc.readMem(0xdda2));
        // CB 2B 015F
        gbc.setState(0xad02, 0xe084, 0x12f0, 0x289d, 0x39e9, 0xa989, 0x0, 0x0);
        gbc.writeMem(0xad02, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad02));
        EXPECT(0x2b, gbc.readMem(0xad03));
        // CB 2B 0160
        gbc.setState(0xc0fe, 0x6945, 0xd1b0, 0x6e5e, 0xb18b, 0xefd4, 0x0, 0x1);
        gbc.writeMem(0xc0fe, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fe));
        EXPECT(0x2b, gbc.readMem(0xc0ff));
        // CB 2B 0161
        gbc.setState(0x88a5, 0x9922, 0x8d30, 0x7a3c, 0xe441, 0xb54b, 0x1, 0x1);
        gbc.writeMem(0x88a5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0x88a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a5));
        EXPECT(0x2b, gbc.readMem(0x88a6));
        // CB 2B 0162
        gbc.setState(0xc703, 0xd94d, 0x74a0, 0xf8b1, 0x278f, 0x392, 0x0, 0x0);
        gbc.writeMem(0xc703, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc703));
        EXPECT(0x2b, gbc.readMem(0xc704));
        // CB 2B 0164
        gbc.setState(0xd584, 0x1ca2, 0xe300, 0x460d, 0x7b44, 0xd220, 0x0, 0x0);
        gbc.writeMem(0xd584, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd584));
        EXPECT(0x2b, gbc.readMem(0xd585));
        // CB 2B 0165
        gbc.setState(0xdf12, 0xb274, 0x7660, 0x4ec, 0xa4e3, 0x19ef, 0x1, 0x0);
        gbc.writeMem(0xdf12, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb274, gbc.sp());
        EXPECT(0xdf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf12));
        EXPECT(0x2b, gbc.readMem(0xdf13));
        // CB 2B 0166
        gbc.setState(0xab0b, 0x4c39, 0xbcd0, 0xc252, 0x2c2, 0xa0e0, 0x0, 0x1);
        gbc.writeMem(0xab0b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4c39, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0b));
        EXPECT(0x2b, gbc.readMem(0xab0c));
        // CB 2B 0167
        gbc.setState(0xe9bb, 0xa9cc, 0x6dd0, 0x5135, 0x3789, 0x7da0, 0x1, 0x1);
        gbc.writeMem(0xe9bb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0xe9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bb));
        EXPECT(0x2b, gbc.readMem(0xe9bc));
        // CB 2B 0168
        gbc.setState(0xa2c0, 0xf358, 0x8d40, 0xb72b, 0x8ae7, 0x1c97, 0x1, 0x0);
        gbc.writeMem(0xa2c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf358, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c0));
        EXPECT(0x2b, gbc.readMem(0xa2c1));
        // CB 2B 0169
        gbc.setState(0x1b73, 0x4fe, 0x89d0, 0xd9d5, 0xddfa, 0xaca8, 0x0, 0x0);
        gbc.writeMem(0x1b73, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4fe, gbc.sp());
        EXPECT(0x1b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 016A
        gbc.setState(0xa345, 0x1d4b, 0x1c50, 0xfff, 0x9fdb, 0x8ec0, 0x1, 0x0);
        gbc.writeMem(0xa345, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa345));
        EXPECT(0x2b, gbc.readMem(0xa346));
        // CB 2B 016B
        gbc.setState(0x4d7c, 0x8d02, 0xc740, 0xa779, 0xc103, 0x346, 0x0, 0x1);
        gbc.writeMem(0x4d7c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8d02, gbc.sp());
        EXPECT(0x4d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 016C
        gbc.setState(0x3862, 0xfc88, 0xde20, 0x21fa, 0xb01b, 0x6521, 0x1, 0x0);
        gbc.writeMem(0x3862, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0x3864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 016D
        gbc.setState(0x37d0, 0xc7cd, 0xec10, 0x3385, 0x6877, 0xb3b8, 0x1, 0x0);
        gbc.writeMem(0x37d0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc7cd, gbc.sp());
        EXPECT(0x37d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 016E
        gbc.setState(0xc93, 0x145b, 0x7690, 0x831e, 0x7d47, 0xc9c1, 0x0, 0x1);
        gbc.writeMem(0xc93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 016F
        gbc.setState(0x39, 0xbc26, 0x5900, 0x8794, 0x2fa2, 0x7d1a, 0x0, 0x0);
        gbc.writeMem(0x39, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc26, gbc.sp());
        EXPECT(0x3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0170
        gbc.setState(0xb1b9, 0x5b66, 0xf690, 0x3db2, 0xd2e1, 0x876f, 0x0, 0x1);
        gbc.writeMem(0xb1b9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b9));
        EXPECT(0x2b, gbc.readMem(0xb1ba));
        // CB 2B 0171
        gbc.setState(0x288e, 0xae97, 0x570, 0x7469, 0x5052, 0xbd50, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xae97, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0172
        gbc.setState(0x4358, 0xab26, 0xe5b0, 0x3fc4, 0x2718, 0x68a6, 0x0, 0x1);
        gbc.writeMem(0x4358, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xab26, gbc.sp());
        EXPECT(0x435a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0173
        gbc.setState(0x4d6e, 0x80fd, 0xbce0, 0x2a96, 0x688f, 0x9a74, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x80fd, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0175
        gbc.setState(0x7052, 0xb735, 0xa790, 0xb320, 0x70ed, 0x3e14, 0x0, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb735, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0176
        gbc.setState(0xdf9c, 0xe45f, 0xe260, 0x62d0, 0xbbbb, 0xc02b, 0x0, 0x0);
        gbc.writeMem(0xdf9c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe45f, gbc.sp());
        EXPECT(0xdf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9c));
        EXPECT(0x2b, gbc.readMem(0xdf9d));
        // CB 2B 0177
        gbc.setState(0x567b, 0xac5b, 0x7520, 0xa42, 0xcfac, 0xbe96, 0x0, 0x0);
        gbc.writeMem(0x567b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0x567d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0178
        gbc.setState(0x6fd, 0x9376, 0xa00, 0xdc39, 0x27ce, 0xb73d, 0x0, 0x1);
        gbc.writeMem(0x6fd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9376, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0179
        gbc.setState(0x41d0, 0x7482, 0x1c20, 0x8afe, 0xf92, 0x3e4f, 0x0, 0x0);
        gbc.writeMem(0x41d0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 017A
        gbc.setState(0xc637, 0xa3c2, 0x7f50, 0x6315, 0xcb0d, 0x11d0, 0x1, 0x1);
        gbc.writeMem(0xc637, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xc639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc637));
        EXPECT(0x2b, gbc.readMem(0xc638));
        // CB 2B 017B
        gbc.setState(0x4298, 0x343f, 0x63f0, 0x2cc1, 0x81fe, 0x3146, 0x1, 0x1);
        gbc.writeMem(0x4298, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x343f, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 017C
        gbc.setState(0x80f3, 0xa8c1, 0xef60, 0x8ee0, 0xea66, 0x5bd8, 0x0, 0x1);
        gbc.writeMem(0x80f3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa8c1, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f3));
        EXPECT(0x2b, gbc.readMem(0x80f4));
        // CB 2B 017D
        gbc.setState(0xbe39, 0x9163, 0xf0a0, 0xec86, 0x2725, 0x2ff6, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe39));
        EXPECT(0x2b, gbc.readMem(0xbe3a));
        // CB 2B 017F
        gbc.setState(0x100b, 0x2a7b, 0xedf0, 0xc8ae, 0x7579, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x100b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2a7b, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0180
        gbc.setState(0xd910, 0x7964, 0x25c0, 0xf351, 0xbdb7, 0xfde7, 0x0, 0x0);
        gbc.writeMem(0xd910, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd910));
        EXPECT(0x2b, gbc.readMem(0xd911));
        // CB 2B 0181
        gbc.setState(0xeb88, 0x4e64, 0x5c50, 0xb0e5, 0xae4e, 0x188a, 0x0, 0x1);
        gbc.writeMem(0xeb88, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb88));
        EXPECT(0x2b, gbc.readMem(0xeb89));
        // CB 2B 0183
        gbc.setState(0xc8f3, 0x2667, 0xad0, 0xb1ea, 0x32b, 0x62b6, 0x0, 0x0);
        gbc.writeMem(0xc8f3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f3));
        EXPECT(0x2b, gbc.readMem(0xc8f4));
        // CB 2B 0184
        gbc.setState(0xd1c1, 0x7589, 0xc600, 0x2ef6, 0xddec, 0x6a9b, 0x0, 0x0);
        gbc.writeMem(0xd1c1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7589, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c1));
        EXPECT(0x2b, gbc.readMem(0xd1c2));
        // CB 2B 0185
        gbc.setState(0x755a, 0x42dd, 0xb690, 0x846, 0xa293, 0x846a, 0x1, 0x0);
        gbc.writeMem(0x755a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0186
        gbc.setState(0xcb9e, 0xd743, 0x8af0, 0x4056, 0xd6e, 0xca69, 0x0, 0x0);
        gbc.writeMem(0xcb9e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0xcba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9e));
        EXPECT(0x2b, gbc.readMem(0xcb9f));
        // CB 2B 0187
        gbc.setState(0x7ee8, 0xdf06, 0xcee0, 0x1e05, 0x90c, 0xebec, 0x1, 0x0);
        gbc.writeMem(0x7ee8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf06, gbc.sp());
        EXPECT(0x7eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0188
        gbc.setState(0x47bf, 0x7ef0, 0x4780, 0xc8ab, 0xd25, 0x878, 0x1, 0x1);
        gbc.writeMem(0x47bf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7ef0, gbc.sp());
        EXPECT(0x47c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0189
        gbc.setState(0x6ef6, 0x9954, 0x95e0, 0x174f, 0x6d40, 0xa976, 0x1, 0x0);
        gbc.writeMem(0x6ef6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9954, gbc.sp());
        EXPECT(0x6ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 018A
        gbc.setState(0x4520, 0x7ad, 0x89a0, 0xc1d2, 0x3306, 0xa9f1, 0x1, 0x1);
        gbc.writeMem(0x4520, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 018B
        gbc.setState(0x3841, 0x3484, 0x770, 0x82e4, 0x3d0c, 0x3fc5, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3484, gbc.sp());
        EXPECT(0x3843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 018C
        gbc.setState(0xbc16, 0xa896, 0x8310, 0xd63f, 0x18fd, 0xce66, 0x1, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc16));
        EXPECT(0x2b, gbc.readMem(0xbc17));
        // CB 2B 018D
        gbc.setState(0x516c, 0x626b, 0x6d80, 0x354e, 0x3ce7, 0x7390, 0x0, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x626b, gbc.sp());
        EXPECT(0x516e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 018E
        gbc.setState(0xa685, 0xd1e6, 0xd100, 0x50cb, 0x4582, 0x99b3, 0x1, 0x0);
        gbc.writeMem(0xa685, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd1e6, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa685));
        EXPECT(0x2b, gbc.readMem(0xa686));
        // CB 2B 018F
        gbc.setState(0x7bc5, 0xc45a, 0xa490, 0x351b, 0xbe4b, 0x84cc, 0x1, 0x1);
        gbc.writeMem(0x7bc5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc45a, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0190
        gbc.setState(0xcf3e, 0xd04c, 0xd050, 0xe209, 0x7e7d, 0xa93d, 0x1, 0x1);
        gbc.writeMem(0xcf3e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0xcf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3e));
        EXPECT(0x2b, gbc.readMem(0xcf3f));
        // CB 2B 0191
        gbc.setState(0x515e, 0x348b, 0x9b90, 0x3e99, 0x6010, 0x4de0, 0x0, 0x0);
        gbc.writeMem(0x515e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x348b, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0192
        gbc.setState(0x4958, 0x8244, 0x5940, 0xe299, 0xbd76, 0x983d, 0x1, 0x1);
        gbc.writeMem(0x4958, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0193
        gbc.setState(0x5c01, 0xe36f, 0x27d0, 0xb153, 0x63c0, 0xa243, 0x0, 0x0);
        gbc.writeMem(0x5c01, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0194
        gbc.setState(0x4fdd, 0xaeab, 0x5350, 0xced4, 0x5a03, 0x406f, 0x1, 0x0);
        gbc.writeMem(0x4fdd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaeab, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0195
        gbc.setState(0x9056, 0x58, 0xc620, 0xfe96, 0xbed9, 0x718e, 0x1, 0x0);
        gbc.writeMem(0x9056, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9056));
        EXPECT(0x2b, gbc.readMem(0x9057));
        // CB 2B 0196
        gbc.setState(0xd54f, 0x3346, 0xb450, 0xbb95, 0xe445, 0x7ebd, 0x1, 0x0);
        gbc.writeMem(0xd54f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54f));
        EXPECT(0x2b, gbc.readMem(0xd550));
        // CB 2B 0197
        gbc.setState(0x86d, 0xaa58, 0xab60, 0xa4a0, 0x6165, 0xf15, 0x1, 0x1);
        gbc.writeMem(0x86d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaa58, gbc.sp());
        EXPECT(0x86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0198
        gbc.setState(0x9c07, 0x3f3f, 0x5b0, 0x8850, 0xc1f1, 0xfcec, 0x0, 0x0);
        gbc.writeMem(0x9c07, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3f3f, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c07));
        EXPECT(0x2b, gbc.readMem(0x9c08));
        // CB 2B 0199
        gbc.setState(0xbe09, 0xf513, 0x5c60, 0x1d0b, 0x5b1e, 0xd941, 0x0, 0x1);
        gbc.writeMem(0xbe09, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe09));
        EXPECT(0x2b, gbc.readMem(0xbe0a));
        // CB 2B 019A
        gbc.setState(0xe4dc, 0x7369, 0x2a40, 0x9223, 0xc023, 0x948d, 0x0, 0x1);
        gbc.writeMem(0xe4dc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7369, gbc.sp());
        EXPECT(0xe4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4dc));
        EXPECT(0x2b, gbc.readMem(0xe4dd));
        // CB 2B 019B
        gbc.setState(0x177c, 0xc2db, 0xfb70, 0x7d33, 0xd2d3, 0xca7d, 0x0, 0x0);
        gbc.writeMem(0x177c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc2db, gbc.sp());
        EXPECT(0x177e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 019C
        gbc.setState(0x5822, 0x1af7, 0xb400, 0xb37f, 0x6806, 0xc5bf, 0x0, 0x0);
        gbc.writeMem(0x5822, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1af7, gbc.sp());
        EXPECT(0x5824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 019D
        gbc.setState(0xb93f, 0xbc94, 0x9d0, 0x747a, 0xcf50, 0xe451, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc94, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93f));
        EXPECT(0x2b, gbc.readMem(0xb940));
        // CB 2B 019E
        gbc.setState(0x3949, 0xe9fb, 0xef60, 0x6c47, 0x82ae, 0x7e5e, 0x0, 0x1);
        gbc.writeMem(0x3949, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 019F
        gbc.setState(0x2279, 0x52f0, 0x5870, 0x688d, 0xa05d, 0x6c6d, 0x0, 0x0);
        gbc.writeMem(0x2279, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x52f0, gbc.sp());
        EXPECT(0x227b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01A0
        gbc.setState(0xe5ff, 0x3631, 0x4a30, 0x322, 0x6afd, 0xdf2f, 0x0, 0x0);
        gbc.writeMem(0xe5ff, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3631, gbc.sp());
        EXPECT(0xe601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ff));
        EXPECT(0x2b, gbc.readMem(0xe600));
        // CB 2B 01A1
        gbc.setState(0xa7a5, 0xbe54, 0x8f40, 0x56b8, 0xeb77, 0xd3df, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a5));
        EXPECT(0x2b, gbc.readMem(0xa7a6));
        // CB 2B 01A3
        gbc.setState(0x4512, 0xc94c, 0x19e0, 0xd0fd, 0xf1d4, 0xf845, 0x1, 0x0);
        gbc.writeMem(0x4512, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x4514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01A4
        gbc.setState(0xa458, 0x5287, 0x6da0, 0x8eaa, 0xe04e, 0xb539, 0x0, 0x0);
        gbc.writeMem(0xa458, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5287, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa458));
        EXPECT(0x2b, gbc.readMem(0xa459));
        // CB 2B 01A5
        gbc.setState(0x1fd0, 0xeb75, 0x55c0, 0xc798, 0x45da, 0x33d9, 0x0, 0x1);
        gbc.writeMem(0x1fd0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeb75, gbc.sp());
        EXPECT(0x1fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01A6
        gbc.setState(0xefce, 0xe885, 0x1310, 0x17ad, 0xfe6b, 0x4102, 0x0, 0x1);
        gbc.writeMem(0xefce, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0x2b, gbc.readMem(0xefcf));
        // CB 2B 01A7
        gbc.setState(0x3046, 0x75d6, 0x4940, 0x55c3, 0x2594, 0x317b, 0x1, 0x1);
        gbc.writeMem(0x3046, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x75d6, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01A8
        gbc.setState(0x4f6a, 0xb6d9, 0x9760, 0x310, 0x4fe1, 0xf2b6, 0x0, 0x0);
        gbc.writeMem(0x4f6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01A9
        gbc.setState(0x75c1, 0xf7f8, 0xafc0, 0x9011, 0x35d, 0x8c6e, 0x1, 0x0);
        gbc.writeMem(0x75c1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf7f8, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01AA
        gbc.setState(0xdc3b, 0xb0e2, 0x6ed0, 0x65ac, 0x2aad, 0x713, 0x1, 0x1);
        gbc.writeMem(0xdc3b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3b));
        EXPECT(0x2b, gbc.readMem(0xdc3c));
        // CB 2B 01AC
        gbc.setState(0xea12, 0x5627, 0xda10, 0x5990, 0xf9b2, 0xb5be, 0x0, 0x0);
        gbc.writeMem(0xea12, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0xea14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea12));
        EXPECT(0x2b, gbc.readMem(0xea13));
        // CB 2B 01AD
        gbc.setState(0x985a, 0xd1ee, 0x82c0, 0xf39b, 0xfd3f, 0xc524, 0x1, 0x0);
        gbc.writeMem(0x985a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd1ee, gbc.sp());
        EXPECT(0x985c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985a));
        EXPECT(0x2b, gbc.readMem(0x985b));
        // CB 2B 01AE
        gbc.setState(0xad18, 0xb638, 0x8e60, 0xcf00, 0x4524, 0xc092, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0xad1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad18));
        EXPECT(0x2b, gbc.readMem(0xad19));
        // CB 2B 01AF
        gbc.setState(0xacc6, 0xe1, 0xdbe0, 0x3397, 0xdd9b, 0xdd3b, 0x1, 0x1);
        gbc.writeMem(0xacc6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0xacc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc6));
        EXPECT(0x2b, gbc.readMem(0xacc7));
        // CB 2B 01B0
        gbc.setState(0xe439, 0xa02, 0x12a0, 0xfcc8, 0xef66, 0x7f44, 0x1, 0x0);
        gbc.writeMem(0xe439, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa02, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe439));
        EXPECT(0x2b, gbc.readMem(0xe43a));
        // CB 2B 01B2
        gbc.setState(0x43e2, 0xa258, 0xea60, 0x94e7, 0x10a4, 0x318a, 0x1, 0x0);
        gbc.writeMem(0x43e2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa258, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01B3
        gbc.setState(0x597c, 0x8107, 0x9990, 0xe4b7, 0x58da, 0xeab9, 0x0, 0x0);
        gbc.writeMem(0x597c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8107, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01B4
        gbc.setState(0xd4c5, 0x4cfd, 0xdac0, 0xe35a, 0x3370, 0xe5c, 0x1, 0x0);
        gbc.writeMem(0xd4c5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c5));
        EXPECT(0x2b, gbc.readMem(0xd4c6));
        // CB 2B 01B5
        gbc.setState(0x78ba, 0x8689, 0x9b60, 0xe5fe, 0xcb84, 0xbee4, 0x1, 0x0);
        gbc.writeMem(0x78ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8689, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01B6
        gbc.setState(0x5e07, 0xe7dc, 0xb670, 0x889c, 0xf3ad, 0x1d84, 0x1, 0x1);
        gbc.writeMem(0x5e07, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0x5e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01B7
        gbc.setState(0xed6c, 0xb3e4, 0xbdd0, 0x1b9c, 0x7219, 0x66ae, 0x1, 0x1);
        gbc.writeMem(0xed6c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb3e4, gbc.sp());
        EXPECT(0xed6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6c));
        EXPECT(0x2b, gbc.readMem(0xed6d));
        // CB 2B 01B8
        gbc.setState(0xe28d, 0x8404, 0x580, 0x7ec3, 0x4a12, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28d));
        EXPECT(0x2b, gbc.readMem(0xe28e));
        // CB 2B 01B9
        gbc.setState(0x43e, 0x3a5a, 0x23e0, 0x2d1f, 0xb2e, 0x4682, 0x1, 0x0);
        gbc.writeMem(0x43e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01BA
        gbc.setState(0x3f4, 0x573e, 0x7990, 0x31c4, 0xaad1, 0x83ac, 0x1, 0x1);
        gbc.writeMem(0x3f4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x573e, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01BB
        gbc.setState(0xdde7, 0x44a7, 0x4790, 0x42ad, 0x1c75, 0x6112, 0x1, 0x1);
        gbc.writeMem(0xdde7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde7));
        EXPECT(0x2b, gbc.readMem(0xdde8));
        // CB 2B 01BC
        gbc.setState(0x35e5, 0x2d88, 0x5180, 0xa857, 0x8772, 0x2e60, 0x0, 0x0);
        gbc.writeMem(0x35e5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2d88, gbc.sp());
        EXPECT(0x35e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01BD
        gbc.setState(0xb7c0, 0x9cc7, 0xa280, 0x4463, 0x1e4c, 0x712e, 0x0, 0x0);
        gbc.writeMem(0xb7c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9cc7, gbc.sp());
        EXPECT(0xb7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c0));
        EXPECT(0x2b, gbc.readMem(0xb7c1));
        // CB 2B 01BE
        gbc.setState(0x8aa0, 0x31d7, 0x3470, 0xad5c, 0x4029, 0x45a4, 0x0, 0x1);
        gbc.writeMem(0x8aa0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0x8aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa0));
        EXPECT(0x2b, gbc.readMem(0x8aa1));
        // CB 2B 01BF
        gbc.setState(0x56a, 0xc83, 0x31c0, 0x2730, 0x3665, 0x1626, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01C0
        gbc.setState(0x44de, 0xd324, 0x1e90, 0x79f, 0xbcfa, 0x48a3, 0x1, 0x0);
        gbc.writeMem(0x44de, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd324, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01C1
        gbc.setState(0xa7e2, 0x8ebe, 0x9330, 0x8b27, 0x41f0, 0xc3b, 0x0, 0x1);
        gbc.writeMem(0xa7e2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8ebe, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e2));
        EXPECT(0x2b, gbc.readMem(0xa7e3));
        // CB 2B 01C2
        gbc.setState(0x1867, 0xdc6d, 0x8370, 0xf28b, 0xf423, 0x8f03, 0x0, 0x1);
        gbc.writeMem(0x1867, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0x1869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01C3
        gbc.setState(0xa568, 0xc3a1, 0xf270, 0x1125, 0x336d, 0xacee, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa568));
        EXPECT(0x2b, gbc.readMem(0xa569));
        // CB 2B 01C4
        gbc.setState(0x2215, 0x588b, 0x5ea0, 0xdab5, 0x844e, 0x8e74, 0x0, 0x0);
        gbc.writeMem(0x2215, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x588b, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01C5
        gbc.setState(0xd650, 0x538b, 0x3ae0, 0x1fd, 0xc1c, 0xb47a, 0x1, 0x1);
        gbc.writeMem(0xd650, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x538b, gbc.sp());
        EXPECT(0xd652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd650));
        EXPECT(0x2b, gbc.readMem(0xd651));
        // CB 2B 01C6
        gbc.setState(0xe04a, 0x6999, 0x2d00, 0x269d, 0x36e8, 0x71b2, 0x1, 0x1);
        gbc.writeMem(0xe04a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0xe04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04a));
        EXPECT(0x2b, gbc.readMem(0xe04b));
        // CB 2B 01C7
        gbc.setState(0x53e9, 0x73cc, 0x3670, 0xff08, 0xc216, 0x4497, 0x1, 0x0);
        gbc.writeMem(0x53e9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x73cc, gbc.sp());
        EXPECT(0x53eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01C8
        gbc.setState(0x78df, 0xb8ed, 0x88b0, 0x3be0, 0x3c8b, 0xfd2c, 0x0, 0x0);
        gbc.writeMem(0x78df, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8ed, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01C9
        gbc.setState(0xc8e0, 0xd806, 0x70e0, 0x25a8, 0x90dc, 0x8600, 0x1, 0x1);
        gbc.writeMem(0xc8e0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e0));
        EXPECT(0x2b, gbc.readMem(0xc8e1));
        // CB 2B 01CA
        gbc.setState(0x83ea, 0xb109, 0xed70, 0xc838, 0x591f, 0xf739, 0x1, 0x0);
        gbc.writeMem(0x83ea, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb109, gbc.sp());
        EXPECT(0x83ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ea));
        EXPECT(0x2b, gbc.readMem(0x83eb));
        // CB 2B 01CB
        gbc.setState(0xe67f, 0x26e0, 0xbec0, 0x1230, 0xd2ec, 0x586f, 0x1, 0x0);
        gbc.writeMem(0xe67f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x26e0, gbc.sp());
        EXPECT(0xe681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67f));
        EXPECT(0x2b, gbc.readMem(0xe680));
        // CB 2B 01CC
        gbc.setState(0xeca4, 0x547b, 0xf690, 0xcfe9, 0x5ee4, 0x69fd, 0x1, 0x1);
        gbc.writeMem(0xeca4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca4));
        EXPECT(0x2b, gbc.readMem(0xeca5));
        // CB 2B 01CD
        gbc.setState(0x6831, 0xb1bc, 0x8c00, 0xbbcd, 0x4f54, 0x6077, 0x0, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb1bc, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01CE
        gbc.setState(0x49e0, 0x76ac, 0xc0c0, 0xc166, 0x37c0, 0x1ec9, 0x1, 0x0);
        gbc.writeMem(0x49e0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01CF
        gbc.setState(0x734e, 0xbdfd, 0x5f30, 0x8737, 0x639a, 0x6715, 0x0, 0x1);
        gbc.writeMem(0x734e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x7350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01D0
        gbc.setState(0xbb5, 0x60ba, 0x2750, 0x6122, 0x5910, 0x81a4, 0x0, 0x1);
        gbc.writeMem(0xbb5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x60ba, gbc.sp());
        EXPECT(0xbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01D1
        gbc.setState(0x8431, 0xd19f, 0x9320, 0x1f0e, 0x2291, 0x23c0, 0x1, 0x0);
        gbc.writeMem(0x8431, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8431));
        EXPECT(0x2b, gbc.readMem(0x8432));
        // CB 2B 01D2
        gbc.setState(0x5679, 0x3aea, 0xe6e0, 0xa0d7, 0xe405, 0x8bf3, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3aea, gbc.sp());
        EXPECT(0x567b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01D3
        gbc.setState(0xefd4, 0xe527, 0x45c0, 0x428, 0x6ff, 0x2ced, 0x0, 0x0);
        gbc.writeMem(0xefd4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0xefd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd4));
        EXPECT(0x2b, gbc.readMem(0xefd5));
        // CB 2B 01D4
        gbc.setState(0x3555, 0xff29, 0x120, 0xabc3, 0xb06b, 0xc88e, 0x0, 0x0);
        gbc.writeMem(0x3555, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xff29, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01D5
        gbc.setState(0x7322, 0x1be5, 0xd6b0, 0x8a26, 0x1524, 0xb77d, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1be5, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01D6
        gbc.setState(0xeeec, 0x241e, 0x3520, 0xfe0b, 0xbe71, 0x89bf, 0x0, 0x1);
        gbc.writeMem(0xeeec, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x241e, gbc.sp());
        EXPECT(0xeeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeec));
        EXPECT(0x2b, gbc.readMem(0xeeed));
        // CB 2B 01D7
        gbc.setState(0x5b9f, 0x49f3, 0xbd30, 0xe667, 0x68bd, 0xa566, 0x1, 0x1);
        gbc.writeMem(0x5b9f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x49f3, gbc.sp());
        EXPECT(0x5ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01D8
        gbc.setState(0x1598, 0x6235, 0xe960, 0xa144, 0xc26, 0x59bd, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6235, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01D9
        gbc.setState(0x602d, 0xb0bc, 0xba70, 0xc293, 0xceb4, 0xf22d, 0x0, 0x0);
        gbc.writeMem(0x602d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01DA
        gbc.setState(0x588f, 0x589f, 0x8cb0, 0xa393, 0xab61, 0x4ab6, 0x0, 0x0);
        gbc.writeMem(0x588f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x5891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01DB
        gbc.setState(0x9a43, 0xea1d, 0xf740, 0x19e8, 0x71eb, 0x9493, 0x0, 0x0);
        gbc.writeMem(0x9a43, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xea1d, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a43));
        EXPECT(0x2b, gbc.readMem(0x9a44));
        // CB 2B 01DC
        gbc.setState(0x40e1, 0x69e7, 0xe300, 0xda09, 0xc09b, 0x5356, 0x0, 0x0);
        gbc.writeMem(0x40e1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01DD
        gbc.setState(0xcf77, 0x8b22, 0x2e40, 0x58fd, 0x50b6, 0x4f46, 0x0, 0x0);
        gbc.writeMem(0xcf77, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0xcf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf77));
        EXPECT(0x2b, gbc.readMem(0xcf78));
        // CB 2B 01DE
        gbc.setState(0x7121, 0x206d, 0xf3b0, 0x43a8, 0x5160, 0xd357, 0x1, 0x1);
        gbc.writeMem(0x7121, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x7123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01DF
        gbc.setState(0xc296, 0x25d7, 0x7230, 0x430, 0x4c7c, 0x75fe, 0x1, 0x0);
        gbc.writeMem(0xc296, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc296));
        EXPECT(0x2b, gbc.readMem(0xc297));
        // CB 2B 01E0
        gbc.setState(0x541, 0xe837, 0xcdc0, 0xc2ef, 0x74b3, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0x541, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe837, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01E1
        gbc.setState(0xb287, 0xf8d9, 0x7bd0, 0x6080, 0xc8e, 0x24ba, 0x0, 0x0);
        gbc.writeMem(0xb287, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf8d9, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb287));
        EXPECT(0x2b, gbc.readMem(0xb288));
        // CB 2B 01E2
        gbc.setState(0x320, 0xf2d2, 0xb9e0, 0xc98e, 0xee97, 0xe5a, 0x0, 0x1);
        gbc.writeMem(0x320, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf2d2, gbc.sp());
        EXPECT(0x322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01E3
        gbc.setState(0xa328, 0xbc98, 0x9b70, 0x10c, 0x363f, 0xbc2d, 0x1, 0x0);
        gbc.writeMem(0xa328, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0xa32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa328));
        EXPECT(0x2b, gbc.readMem(0xa329));
        // CB 2B 01E4
        gbc.setState(0x6a66, 0x4c9e, 0xf170, 0x2f95, 0xf1cd, 0xdbf0, 0x0, 0x1);
        gbc.writeMem(0x6a66, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x6a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01E5
        gbc.setState(0x280b, 0x82ca, 0x99a0, 0xc4f9, 0xaa9f, 0x40cd, 0x1, 0x1);
        gbc.writeMem(0x280b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01E6
        gbc.setState(0xe864, 0xa743, 0x22b0, 0xbf3f, 0x2267, 0x6e2e, 0x1, 0x1);
        gbc.writeMem(0xe864, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe864));
        EXPECT(0x2b, gbc.readMem(0xe865));
        // CB 2B 01E7
        gbc.setState(0xd5af, 0xc499, 0xa260, 0x9521, 0x512d, 0x532c, 0x1, 0x1);
        gbc.writeMem(0xd5af, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc499, gbc.sp());
        EXPECT(0xd5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5af));
        EXPECT(0x2b, gbc.readMem(0xd5b0));
        // CB 2B 01E8
        gbc.setState(0x14ff, 0x5044, 0x5450, 0x76c6, 0x137a, 0x7c02, 0x0, 0x0);
        gbc.writeMem(0x14ff, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0x1501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01E9
        gbc.setState(0x6bc6, 0xd2e3, 0xb4b0, 0xe225, 0xeded, 0x73e, 0x1, 0x1);
        gbc.writeMem(0x6bc6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd2e3, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01EA
        gbc.setState(0x1e4d, 0xd050, 0xfc60, 0xfe55, 0xcd27, 0x3100, 0x1, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd050, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01EB
        gbc.setState(0x96b2, 0x83f1, 0x7eb0, 0x8cf8, 0x9e34, 0x11bb, 0x1, 0x1);
        gbc.writeMem(0x96b2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x83f1, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b2));
        EXPECT(0x2b, gbc.readMem(0x96b3));
        // CB 2B 01EC
        gbc.setState(0xd4bf, 0xd46a, 0x3270, 0x1c38, 0xf760, 0xd2cf, 0x1, 0x1);
        gbc.writeMem(0xd4bf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0xd4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bf));
        EXPECT(0x2b, gbc.readMem(0xd4c0));
        // CB 2B 01ED
        gbc.setState(0x9732, 0x160a, 0xd430, 0x53a2, 0xc845, 0x97c5, 0x0, 0x1);
        gbc.writeMem(0x9732, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0x9734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9732));
        EXPECT(0x2b, gbc.readMem(0x9733));
        // CB 2B 01EE
        gbc.setState(0x7696, 0xf06, 0x3290, 0xb5a1, 0x1d7d, 0xd519, 0x1, 0x0);
        gbc.writeMem(0x7696, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf06, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01EF
        gbc.setState(0x770c, 0xe6c4, 0x76c0, 0x31a5, 0x3651, 0x3688, 0x0, 0x0);
        gbc.writeMem(0x770c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01F0
        gbc.setState(0xca52, 0x806d, 0xc6e0, 0xb03d, 0x56f7, 0x58a8, 0x0, 0x1);
        gbc.writeMem(0xca52, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x806d, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca52));
        EXPECT(0x2b, gbc.readMem(0xca53));
        // CB 2B 01F1
        gbc.setState(0x789d, 0x6847, 0x4280, 0xb041, 0x466c, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x789d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6847, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01F2
        gbc.setState(0x7eaf, 0x1095, 0x2680, 0xe710, 0xeb41, 0xa88f, 0x0, 0x1);
        gbc.writeMem(0x7eaf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1095, gbc.sp());
        EXPECT(0x7eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01F3
        gbc.setState(0xd8fe, 0x3dff, 0xe090, 0xe71, 0xe3df, 0x6ef3, 0x0, 0x1);
        gbc.writeMem(0xd8fe, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3dff, gbc.sp());
        EXPECT(0xd900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fe));
        EXPECT(0x2b, gbc.readMem(0xd8ff));
        // CB 2B 01F4
        gbc.setState(0x24b1, 0x16bc, 0xc700, 0xb349, 0x8905, 0x2436, 0x1, 0x1);
        gbc.writeMem(0x24b1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0x24b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01F5
        gbc.setState(0x7206, 0x23b6, 0x9400, 0x23db, 0x740, 0x56e5, 0x1, 0x1);
        gbc.writeMem(0x7206, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x23b6, gbc.sp());
        EXPECT(0x7208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01F6
        gbc.setState(0xa225, 0xcb4a, 0xfaf0, 0x1400, 0x9265, 0x805c, 0x1, 0x1);
        gbc.writeMem(0xa225, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa225));
        EXPECT(0x2b, gbc.readMem(0xa226));
        // CB 2B 01F7
        gbc.setState(0x7dc4, 0x6d29, 0xae70, 0xfd67, 0xeeeb, 0x75be, 0x1, 0x0);
        gbc.writeMem(0x7dc4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6d29, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01F8
        gbc.setState(0x9e03, 0xaddd, 0x2b0, 0x666, 0x98db, 0x9eb2, 0x0, 0x1);
        gbc.writeMem(0x9e03, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaddd, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e03));
        EXPECT(0x2b, gbc.readMem(0x9e04));
        // CB 2B 01F9
        gbc.setState(0xa6ba, 0xfb1b, 0x5e80, 0xc18b, 0xc378, 0x25, 0x0, 0x1);
        gbc.writeMem(0xa6ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ba));
        EXPECT(0x2b, gbc.readMem(0xa6bb));
        // CB 2B 01FA
        gbc.setState(0xc35c, 0x5821, 0x2ec0, 0x4db4, 0xa1e9, 0xa2fe, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5821, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35c));
        EXPECT(0x2b, gbc.readMem(0xc35d));
        // CB 2B 01FB
        gbc.setState(0x78d7, 0xf396, 0x7e70, 0xc944, 0xf559, 0x2640, 0x1, 0x1);
        gbc.writeMem(0x78d7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0x78d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01FC
        gbc.setState(0x9d30, 0xa690, 0xfe30, 0x8be9, 0x3809, 0x5450, 0x0, 0x0);
        gbc.writeMem(0x9d30, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa690, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d30));
        EXPECT(0x2b, gbc.readMem(0x9d31));
        // CB 2B 01FD
        gbc.setState(0x651, 0x617, 0x1500, 0xc6f8, 0x63df, 0xcdd8, 0x0, 0x0);
        gbc.writeMem(0x651, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0x653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 01FE
        gbc.setState(0x3298, 0x9f87, 0x75f0, 0x3584, 0x5fac, 0x99a7, 0x0, 0x1);
        gbc.writeMem(0x3298, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f87, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 01FF
        gbc.setState(0xee4d, 0xb43f, 0x6ee0, 0x5fa, 0x3138, 0x461d, 0x0, 0x1);
        gbc.writeMem(0xee4d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb43f, gbc.sp());
        EXPECT(0xee4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4d));
        EXPECT(0x2b, gbc.readMem(0xee4e));
        // CB 2B 0200
        gbc.setState(0xc6, 0x12d6, 0xb910, 0xca0f, 0x35a4, 0x9b75, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x12d6, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0201
        gbc.setState(0x5a8a, 0xea0, 0x5530, 0x29ea, 0x999c, 0x4ae, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xea0, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0202
        gbc.setState(0xa25a, 0x7965, 0x4e60, 0x7396, 0x4c13, 0xc73c, 0x1, 0x0);
        gbc.writeMem(0xa25a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25a));
        EXPECT(0x2b, gbc.readMem(0xa25b));
        // CB 2B 0204
        gbc.setState(0xdf5c, 0x445a, 0xefd0, 0x2ce1, 0x2a5e, 0x73d8, 0x0, 0x1);
        gbc.writeMem(0xdf5c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x445a, gbc.sp());
        EXPECT(0xdf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5c));
        EXPECT(0x2b, gbc.readMem(0xdf5d));
        // CB 2B 0205
        gbc.setState(0xb4da, 0x5744, 0x3b80, 0xc2e0, 0x498a, 0x42a3, 0x1, 0x0);
        gbc.writeMem(0xb4da, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5744, gbc.sp());
        EXPECT(0xb4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4da));
        EXPECT(0x2b, gbc.readMem(0xb4db));
        // CB 2B 0206
        gbc.setState(0x5025, 0xe99c, 0xe140, 0x84a8, 0x3b4d, 0x97b8, 0x1, 0x0);
        gbc.writeMem(0x5025, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe99c, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0207
        gbc.setState(0x2709, 0xf350, 0xfab0, 0x7608, 0x4e7, 0xb8a, 0x0, 0x0);
        gbc.writeMem(0x2709, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0208
        gbc.setState(0xbca3, 0x65c8, 0xca50, 0xd46e, 0x8430, 0xd6c4, 0x0, 0x1);
        gbc.writeMem(0xbca3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x65c8, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca3));
        EXPECT(0x2b, gbc.readMem(0xbca4));
        // CB 2B 0209
        gbc.setState(0xced7, 0x3389, 0x51a0, 0x7d3a, 0xf280, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0xced7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced7));
        EXPECT(0x2b, gbc.readMem(0xced8));
        // CB 2B 020A
        gbc.setState(0x8084, 0xab0a, 0x4a10, 0x5bd3, 0xaf06, 0x5f02, 0x0, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xab0a, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0x2b, gbc.readMem(0x8085));
        // CB 2B 020B
        gbc.setState(0xac5c, 0xc3aa, 0x21a0, 0x7f01, 0x65b5, 0x90ac, 0x0, 0x0);
        gbc.writeMem(0xac5c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc3aa, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5c));
        EXPECT(0x2b, gbc.readMem(0xac5d));
        // CB 2B 020C
        gbc.setState(0xb1f9, 0x1e01, 0xb260, 0xbfcd, 0xca7f, 0xae04, 0x0, 0x1);
        gbc.writeMem(0xb1f9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1e01, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f9));
        EXPECT(0x2b, gbc.readMem(0xb1fa));
        // CB 2B 020D
        gbc.setState(0xdcd4, 0x30e6, 0x15b0, 0x546f, 0xe59c, 0x907b, 0x0, 0x0);
        gbc.writeMem(0xdcd4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x30e6, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd4));
        EXPECT(0x2b, gbc.readMem(0xdcd5));
        // CB 2B 020E
        gbc.setState(0x8f46, 0x10ee, 0x2970, 0x9b44, 0xaa83, 0x86af, 0x1, 0x0);
        gbc.writeMem(0x8f46, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0x8f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f46));
        EXPECT(0x2b, gbc.readMem(0x8f47));
        // CB 2B 020F
        gbc.setState(0xdef, 0x5cfa, 0x8ba0, 0xa904, 0x92d2, 0x3c42, 0x1, 0x0);
        gbc.writeMem(0xdef, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5cfa, gbc.sp());
        EXPECT(0xdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0210
        gbc.setState(0x88a1, 0x76f3, 0x6930, 0xc823, 0xdcc0, 0xf655, 0x0, 0x0);
        gbc.writeMem(0x88a1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x76f3, gbc.sp());
        EXPECT(0x88a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a1));
        EXPECT(0x2b, gbc.readMem(0x88a2));
        // CB 2B 0211
        gbc.setState(0x504c, 0xf8a1, 0xa280, 0x8c89, 0x759c, 0xfd4c, 0x0, 0x0);
        gbc.writeMem(0x504c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0x504e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0212
        gbc.setState(0x4aa2, 0x43fa, 0x5140, 0x1afd, 0xbdbc, 0xdc9e, 0x0, 0x0);
        gbc.writeMem(0x4aa2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0x4aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0213
        gbc.setState(0x4877, 0x787c, 0x3650, 0x4b5e, 0x44ff, 0x23f0, 0x1, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0x4879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0214
        gbc.setState(0xb29b, 0xb06d, 0xa360, 0xcef3, 0x930c, 0xc679, 0x0, 0x0);
        gbc.writeMem(0xb29b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb06d, gbc.sp());
        EXPECT(0xb29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29b));
        EXPECT(0x2b, gbc.readMem(0xb29c));
        // CB 2B 0215
        gbc.setState(0x6db2, 0x2cd2, 0x22f0, 0x858b, 0xbe91, 0x2953, 0x0, 0x1);
        gbc.writeMem(0x6db2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2cd2, gbc.sp());
        EXPECT(0x6db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0216
        gbc.setState(0x1623, 0x294e, 0x1490, 0x7b64, 0x86ee, 0xfa3, 0x1, 0x0);
        gbc.writeMem(0x1623, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x294e, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0217
        gbc.setState(0xdc61, 0x8641, 0xf910, 0x35e4, 0x22cb, 0x3c25, 0x0, 0x1);
        gbc.writeMem(0xdc61, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8641, gbc.sp());
        EXPECT(0xdc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc61));
        EXPECT(0x2b, gbc.readMem(0xdc62));
        // CB 2B 0218
        gbc.setState(0x146b, 0xed1a, 0x7eb0, 0x10e2, 0x19be, 0xc33f, 0x0, 0x1);
        gbc.writeMem(0x146b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x146d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0219
        gbc.setState(0x1552, 0x5bf9, 0xc6c0, 0xb255, 0xee8c, 0x3d25, 0x1, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 021A
        gbc.setState(0xde60, 0x5a4f, 0xc380, 0x1ca9, 0xcab, 0x954c, 0x0, 0x1);
        gbc.writeMem(0xde60, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0xde62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde60));
        EXPECT(0x2b, gbc.readMem(0xde61));
        // CB 2B 021B
        gbc.setState(0x9b51, 0x8505, 0x7760, 0x2a20, 0x18a0, 0xe974, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8505, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b51));
        EXPECT(0x2b, gbc.readMem(0x9b52));
        // CB 2B 021C
        gbc.setState(0x7b07, 0x9442, 0x8650, 0x56ab, 0x80ad, 0xed60, 0x1, 0x1);
        gbc.writeMem(0x7b07, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9442, gbc.sp());
        EXPECT(0x7b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 021D
        gbc.setState(0xacd0, 0x1b6b, 0x65b0, 0x627, 0x3cd9, 0x1ece, 0x0, 0x0);
        gbc.writeMem(0xacd0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1b6b, gbc.sp());
        EXPECT(0xacd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd0));
        EXPECT(0x2b, gbc.readMem(0xacd1));
        // CB 2B 021E
        gbc.setState(0xea3c, 0x743, 0xd280, 0xfcc6, 0x8dd6, 0xdbe0, 0x1, 0x1);
        gbc.writeMem(0xea3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0xea3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3c));
        EXPECT(0x2b, gbc.readMem(0xea3d));
        // CB 2B 021F
        gbc.setState(0xe730, 0x9e95, 0x9560, 0xe2c, 0x6e2, 0xc7c9, 0x1, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9e95, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe730));
        EXPECT(0x2b, gbc.readMem(0xe731));
        // CB 2B 0220
        gbc.setState(0x303f, 0x8cae, 0x8870, 0x740c, 0xd53f, 0xf7bb, 0x0, 0x0);
        gbc.writeMem(0x303f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8cae, gbc.sp());
        EXPECT(0x3041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0221
        gbc.setState(0x8d74, 0xee2e, 0xd440, 0x2d91, 0xb913, 0x4593, 0x1, 0x0);
        gbc.writeMem(0x8d74, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xee2e, gbc.sp());
        EXPECT(0x8d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d74));
        EXPECT(0x2b, gbc.readMem(0x8d75));
        // CB 2B 0222
        gbc.setState(0x95c5, 0xfcd1, 0x83f0, 0x8bd7, 0x3b2, 0xf8fc, 0x1, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfcd1, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c5));
        EXPECT(0x2b, gbc.readMem(0x95c6));
        // CB 2B 0223
        gbc.setState(0xd480, 0x7825, 0xa70, 0x4fc4, 0x6ebf, 0x4977, 0x0, 0x0);
        gbc.writeMem(0xd480, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xd482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd480));
        EXPECT(0x2b, gbc.readMem(0xd481));
        // CB 2B 0224
        gbc.setState(0xb8fa, 0xb232, 0xc170, 0x31cd, 0xc0e9, 0xb793, 0x0, 0x0);
        gbc.writeMem(0xb8fa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb232, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fa));
        EXPECT(0x2b, gbc.readMem(0xb8fb));
        // CB 2B 0225
        gbc.setState(0x5fcf, 0x34a9, 0x1400, 0xe233, 0x63b3, 0xdde5, 0x0, 0x1);
        gbc.writeMem(0x5fcf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x34a9, gbc.sp());
        EXPECT(0x5fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0226
        gbc.setState(0x44ab, 0x774d, 0x4060, 0x601c, 0x1511, 0x15dd, 0x1, 0x1);
        gbc.writeMem(0x44ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x44ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0227
        gbc.setState(0x9363, 0x2f1d, 0x8e80, 0x2277, 0x895, 0xaeaf, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9363));
        EXPECT(0x2b, gbc.readMem(0x9364));
        // CB 2B 0228
        gbc.setState(0x2f8e, 0x163e, 0xcc20, 0xeb99, 0x996e, 0x28d6, 0x1, 0x1);
        gbc.writeMem(0x2f8e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x163e, gbc.sp());
        EXPECT(0x2f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0229
        gbc.setState(0xaff5, 0xe022, 0xecf0, 0x4562, 0xb036, 0x9711, 0x1, 0x0);
        gbc.writeMem(0xaff5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0xaff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff5));
        EXPECT(0x2b, gbc.readMem(0xaff6));
        // CB 2B 022A
        gbc.setState(0xca1, 0x69ca, 0xde80, 0x1058, 0x4916, 0xc5b8, 0x1, 0x1);
        gbc.writeMem(0xca1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0xca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 022B
        gbc.setState(0xc95, 0x62ae, 0x9f90, 0x2771, 0x4367, 0xb892, 0x0, 0x1);
        gbc.writeMem(0xc95, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62ae, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 022C
        gbc.setState(0x4041, 0xc7e1, 0xd5c0, 0xf933, 0x50bb, 0xb482, 0x1, 0x1);
        gbc.writeMem(0x4041, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 022D
        gbc.setState(0xcb3d, 0x3308, 0x1850, 0x6b6, 0x5bad, 0xf69d, 0x1, 0x1);
        gbc.writeMem(0xcb3d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3d));
        EXPECT(0x2b, gbc.readMem(0xcb3e));
        // CB 2B 022E
        gbc.setState(0x8a79, 0xdde5, 0xb380, 0xf92d, 0xbdca, 0x5bd1, 0x1, 0x1);
        gbc.writeMem(0x8a79, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0x8a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a79));
        EXPECT(0x2b, gbc.readMem(0x8a7a));
        // CB 2B 022F
        gbc.setState(0xa187, 0x9283, 0xe250, 0x55ef, 0xde94, 0x6be8, 0x1, 0x1);
        gbc.writeMem(0xa187, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9283, gbc.sp());
        EXPECT(0xa189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa187));
        EXPECT(0x2b, gbc.readMem(0xa188));
        // CB 2B 0231
        gbc.setState(0x4877, 0x3be0, 0x4f30, 0x4b25, 0x45a4, 0xe493, 0x1, 0x0);
        gbc.writeMem(0x4877, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0x4879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0232
        gbc.setState(0x6cb4, 0x8eaa, 0x9dc0, 0x1988, 0x7868, 0x131a, 0x0, 0x0);
        gbc.writeMem(0x6cb4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0233
        gbc.setState(0xe037, 0x3c07, 0xa740, 0x42e2, 0x5a23, 0x9982, 0x1, 0x0);
        gbc.writeMem(0xe037, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3c07, gbc.sp());
        EXPECT(0xe039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe037));
        EXPECT(0x2b, gbc.readMem(0xe038));
        // CB 2B 0234
        gbc.setState(0x2c3c, 0xff21, 0x1820, 0x315a, 0x48f5, 0x1974, 0x1, 0x0);
        gbc.writeMem(0x2c3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xff21, gbc.sp());
        EXPECT(0x2c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0235
        gbc.setState(0x318, 0x865d, 0x42a0, 0xd95f, 0x2b16, 0x862b, 0x1, 0x1);
        gbc.writeMem(0x318, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x865d, gbc.sp());
        EXPECT(0x31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0236
        gbc.setState(0xae85, 0x6733, 0x2680, 0xf7f5, 0x1d93, 0x91aa, 0x1, 0x0);
        gbc.writeMem(0xae85, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0xae87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae85));
        EXPECT(0x2b, gbc.readMem(0xae86));
        // CB 2B 0238
        gbc.setState(0x56dc, 0x4693, 0x710, 0xed56, 0xe45a, 0xf25d, 0x1, 0x0);
        gbc.writeMem(0x56dc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4693, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0239
        gbc.setState(0x647e, 0x9c7f, 0x47b0, 0xd43b, 0xe300, 0x67b6, 0x0, 0x1);
        gbc.writeMem(0x647e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0x6480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 023A
        gbc.setState(0xdabb, 0x236d, 0xeed0, 0xa1f6, 0xf6cf, 0xb449, 0x1, 0x1);
        gbc.writeMem(0xdabb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x236d, gbc.sp());
        EXPECT(0xdabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabb));
        EXPECT(0x2b, gbc.readMem(0xdabc));
        // CB 2B 023B
        gbc.setState(0x4a6e, 0x21e8, 0x6870, 0xd8c3, 0x9618, 0xe796, 0x0, 0x0);
        gbc.writeMem(0x4a6e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x21e8, gbc.sp());
        EXPECT(0x4a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 023C
        gbc.setState(0x72ab, 0xdaa3, 0x4080, 0x45f2, 0x33de, 0x62d6, 0x0, 0x0);
        gbc.writeMem(0x72ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdaa3, gbc.sp());
        EXPECT(0x72ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 023D
        gbc.setState(0x9df0, 0xa816, 0xcae0, 0x5384, 0x857, 0x4c2f, 0x0, 0x1);
        gbc.writeMem(0x9df0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa816, gbc.sp());
        EXPECT(0x9df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df0));
        EXPECT(0x2b, gbc.readMem(0x9df1));
        // CB 2B 023E
        gbc.setState(0x2e57, 0x5f2e, 0xd920, 0x8848, 0x4adf, 0xc4d4, 0x1, 0x0);
        gbc.writeMem(0x2e57, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5f2e, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 023F
        gbc.setState(0x291d, 0xe8b7, 0x610, 0x7194, 0x37cd, 0x2019, 0x0, 0x1);
        gbc.writeMem(0x291d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe8b7, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0240
        gbc.setState(0x3144, 0x1ccc, 0x71e0, 0x94a0, 0x46c8, 0xdabf, 0x0, 0x0);
        gbc.writeMem(0x3144, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1ccc, gbc.sp());
        EXPECT(0x3146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0241
        gbc.setState(0x9e13, 0x7f15, 0xc140, 0xac7a, 0x2ede, 0x412e, 0x1, 0x1);
        gbc.writeMem(0x9e13, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7f15, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e13));
        EXPECT(0x2b, gbc.readMem(0x9e14));
        // CB 2B 0242
        gbc.setState(0xa186, 0xbd1c, 0xab50, 0x6241, 0xb8ed, 0xd61a, 0x1, 0x0);
        gbc.writeMem(0xa186, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbd1c, gbc.sp());
        EXPECT(0xa188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa186));
        EXPECT(0x2b, gbc.readMem(0xa187));
        // CB 2B 0243
        gbc.setState(0x69fd, 0x1385, 0x3240, 0xc42d, 0xa9d8, 0xd654, 0x1, 0x1);
        gbc.writeMem(0x69fd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0x69ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0245
        gbc.setState(0x6f97, 0x556d, 0xe0e0, 0x733c, 0xeb04, 0x73ee, 0x1, 0x1);
        gbc.writeMem(0x6f97, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0x6f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0246
        gbc.setState(0x8529, 0xdea1, 0x3970, 0x5e87, 0x86a, 0x5181, 0x0, 0x1);
        gbc.writeMem(0x8529, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdea1, gbc.sp());
        EXPECT(0x852b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8529));
        EXPECT(0x2b, gbc.readMem(0x852a));
        // CB 2B 0247
        gbc.setState(0x568b, 0x7996, 0x9650, 0x26bc, 0x7451, 0xcc86, 0x1, 0x1);
        gbc.writeMem(0x568b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0x568d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0248
        gbc.setState(0x1d97, 0x8fc9, 0x360, 0x10ea, 0x75d8, 0xc1c4, 0x0, 0x1);
        gbc.writeMem(0x1d97, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x1d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0249
        gbc.setState(0xe032, 0x243e, 0xf2f0, 0xbeb0, 0x40e2, 0x1f53, 0x0, 0x1);
        gbc.writeMem(0xe032, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x243e, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe032));
        EXPECT(0x2b, gbc.readMem(0xe033));
        // CB 2B 024A
        gbc.setState(0xbe3d, 0xe57f, 0x7f10, 0x6126, 0xfeea, 0xdb08, 0x0, 0x1);
        gbc.writeMem(0xbe3d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe57f, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3d));
        EXPECT(0x2b, gbc.readMem(0xbe3e));
        // CB 2B 024C
        gbc.setState(0xe1, 0xf3e2, 0xc8a0, 0x6f9b, 0x25d, 0xdd38, 0x0, 0x0);
        gbc.writeMem(0xe1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 024D
        gbc.setState(0x6d8d, 0x1d32, 0xf170, 0x3b8e, 0xf8b8, 0x2879, 0x0, 0x1);
        gbc.writeMem(0x6d8d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1d32, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 024F
        gbc.setState(0x53e6, 0x7d89, 0x6430, 0x27fe, 0xec2e, 0x6380, 0x0, 0x1);
        gbc.writeMem(0x53e6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0250
        gbc.setState(0x44e, 0xc8a, 0x8610, 0x4310, 0xbf2e, 0x1214, 0x0, 0x1);
        gbc.writeMem(0x44e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0251
        gbc.setState(0xc631, 0x1ead, 0x5fd0, 0x99e0, 0x14a2, 0xbbf4, 0x0, 0x0);
        gbc.writeMem(0xc631, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ead, gbc.sp());
        EXPECT(0xc633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc631));
        EXPECT(0x2b, gbc.readMem(0xc632));
        // CB 2B 0252
        gbc.setState(0xcd7d, 0x9732, 0x4d60, 0xe19b, 0xff61, 0x9bce, 0x1, 0x1);
        gbc.writeMem(0xcd7d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9732, gbc.sp());
        EXPECT(0xcd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7d));
        EXPECT(0x2b, gbc.readMem(0xcd7e));
        // CB 2B 0253
        gbc.setState(0xe6e8, 0x996c, 0x2610, 0xc03e, 0xf9cf, 0x4ea2, 0x0, 0x0);
        gbc.writeMem(0xe6e8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x996c, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e8));
        EXPECT(0x2b, gbc.readMem(0xe6e9));
        // CB 2B 0254
        gbc.setState(0xe419, 0xb1c6, 0x7cc0, 0xddb5, 0x4e58, 0x8485, 0x0, 0x0);
        gbc.writeMem(0xe419, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb1c6, gbc.sp());
        EXPECT(0xe41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe419));
        EXPECT(0x2b, gbc.readMem(0xe41a));
        // CB 2B 0255
        gbc.setState(0xbd21, 0x185, 0x2980, 0x20ab, 0xa31d, 0x9a29, 0x1, 0x1);
        gbc.writeMem(0xbd21, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x185, gbc.sp());
        EXPECT(0xbd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd21));
        EXPECT(0x2b, gbc.readMem(0xbd22));
        // CB 2B 0256
        gbc.setState(0x33d0, 0xfed, 0xd4b0, 0xeafc, 0x6057, 0x9145, 0x0, 0x0);
        gbc.writeMem(0x33d0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfed, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0257
        gbc.setState(0x866b, 0xaa6d, 0x4da0, 0xfa8b, 0xf219, 0x277e, 0x1, 0x0);
        gbc.writeMem(0x866b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa6d, gbc.sp());
        EXPECT(0x866d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866b));
        EXPECT(0x2b, gbc.readMem(0x866c));
        // CB 2B 0258
        gbc.setState(0x4d4d, 0x7d90, 0xb600, 0x7d8b, 0x2ab7, 0x66ea, 0x1, 0x1);
        gbc.writeMem(0x4d4d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7d90, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0259
        gbc.setState(0xa9b8, 0xea92, 0x8a20, 0x2b99, 0x17f6, 0x44b2, 0x1, 0x1);
        gbc.writeMem(0xa9b8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea92, gbc.sp());
        EXPECT(0xa9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b8));
        EXPECT(0x2b, gbc.readMem(0xa9b9));
        // CB 2B 025A
        gbc.setState(0xa664, 0x573f, 0xccc0, 0xbd12, 0x1e07, 0x251, 0x0, 0x0);
        gbc.writeMem(0xa664, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x573f, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa664));
        EXPECT(0x2b, gbc.readMem(0xa665));
        // CB 2B 025B
        gbc.setState(0x3a8d, 0x39c4, 0xa160, 0xd1ce, 0x53e8, 0x5101, 0x0, 0x1);
        gbc.writeMem(0x3a8d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x39c4, gbc.sp());
        EXPECT(0x3a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 025C
        gbc.setState(0x84e0, 0xb94c, 0x8570, 0x2177, 0xcda7, 0x12b1, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb94c, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e0));
        EXPECT(0x2b, gbc.readMem(0x84e1));
        // CB 2B 025D
        gbc.setState(0xaab0, 0xd09c, 0xcfb0, 0xc209, 0xa551, 0xdb4, 0x1, 0x0);
        gbc.writeMem(0xaab0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd09c, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab0));
        EXPECT(0x2b, gbc.readMem(0xaab1));
        // CB 2B 025E
        gbc.setState(0xc760, 0xc89c, 0x3ab0, 0xf03, 0x8ee6, 0xdd25, 0x1, 0x1);
        gbc.writeMem(0xc760, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc89c, gbc.sp());
        EXPECT(0xc762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc760));
        EXPECT(0x2b, gbc.readMem(0xc761));
        // CB 2B 0260
        gbc.setState(0x1768, 0xf6ea, 0x3e50, 0xef5f, 0x6143, 0xc877, 0x1, 0x0);
        gbc.writeMem(0x1768, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf6ea, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0261
        gbc.setState(0x2b94, 0xa7db, 0xf230, 0xdada, 0x4387, 0x7791, 0x0, 0x1);
        gbc.writeMem(0x2b94, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0262
        gbc.setState(0x618b, 0x9e3, 0x49a0, 0x59be, 0xe8aa, 0x5b2e, 0x1, 0x1);
        gbc.writeMem(0x618b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9e3, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0263
        gbc.setState(0x7bd, 0x384a, 0xb080, 0x9bc5, 0xe93f, 0xaae0, 0x1, 0x1);
        gbc.writeMem(0x7bd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x384a, gbc.sp());
        EXPECT(0x7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0264
        gbc.setState(0x18cf, 0xc9b8, 0xd6c0, 0x1963, 0x2621, 0x4e31, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc9b8, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0265
        gbc.setState(0xd1d7, 0x645d, 0xa0a0, 0xb041, 0x70bf, 0xbcc9, 0x1, 0x1);
        gbc.writeMem(0xd1d7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x645d, gbc.sp());
        EXPECT(0xd1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d7));
        EXPECT(0x2b, gbc.readMem(0xd1d8));
        // CB 2B 0266
        gbc.setState(0x4f49, 0x1b8f, 0x53e0, 0xc961, 0xb663, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0x4f49, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1b8f, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0268
        gbc.setState(0x53e5, 0x13d1, 0x8b60, 0xefae, 0x5a87, 0xc4aa, 0x0, 0x0);
        gbc.writeMem(0x53e5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x13d1, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0269
        gbc.setState(0xdf14, 0xabe5, 0x8cb0, 0x7cbb, 0x7293, 0x3909, 0x0, 0x0);
        gbc.writeMem(0xdf14, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xabe5, gbc.sp());
        EXPECT(0xdf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf14));
        EXPECT(0x2b, gbc.readMem(0xdf15));
        // CB 2B 026A
        gbc.setState(0xd0e9, 0xfa76, 0x6c10, 0xd898, 0xd98f, 0x6d87, 0x0, 0x1);
        gbc.writeMem(0xd0e9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0xd0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e9));
        EXPECT(0x2b, gbc.readMem(0xd0ea));
        // CB 2B 026C
        gbc.setState(0x9c64, 0xa4c7, 0xa050, 0x4a76, 0x97f9, 0xdde1, 0x1, 0x0);
        gbc.writeMem(0x9c64, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0x2b, gbc.readMem(0x9c65));
        // CB 2B 026D
        gbc.setState(0x52ab, 0x1cfc, 0xc4e0, 0x85f4, 0xfe7, 0x61a, 0x1, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1cfc, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 026E
        gbc.setState(0x8068, 0x1b55, 0x2560, 0xe504, 0x27e0, 0xa224, 0x0, 0x1);
        gbc.writeMem(0x8068, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b55, gbc.sp());
        EXPECT(0x806a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8068));
        EXPECT(0x2b, gbc.readMem(0x8069));
        // CB 2B 026F
        gbc.setState(0xbd6a, 0x87e7, 0xe420, 0xe252, 0xa489, 0x4598, 0x1, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x87e7, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6a));
        EXPECT(0x2b, gbc.readMem(0xbd6b));
        // CB 2B 0270
        gbc.setState(0x166c, 0x5c66, 0x3360, 0xf32, 0xb0d1, 0x1ab6, 0x0, 0x0);
        gbc.writeMem(0x166c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5c66, gbc.sp());
        EXPECT(0x166e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0271
        gbc.setState(0x527e, 0xf5f3, 0x47d0, 0x464, 0x6f1b, 0xc36, 0x1, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0272
        gbc.setState(0xe9bc, 0x2bc, 0xecd0, 0xfa96, 0xfd6d, 0xf21b, 0x1, 0x0);
        gbc.writeMem(0xe9bc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2bc, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bc));
        EXPECT(0x2b, gbc.readMem(0xe9bd));
        // CB 2B 0273
        gbc.setState(0xdfec, 0xeb0b, 0x1530, 0x90d7, 0xd111, 0xa2e0, 0x1, 0x0);
        gbc.writeMem(0xdfec, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfec));
        EXPECT(0x2b, gbc.readMem(0xdfed));
        // CB 2B 0274
        gbc.setState(0xd71c, 0x7873, 0xbb50, 0xf10d, 0xc324, 0xc04e, 0x0, 0x1);
        gbc.writeMem(0xd71c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7873, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71c));
        EXPECT(0x2b, gbc.readMem(0xd71d));
        // CB 2B 0275
        gbc.setState(0x4aa8, 0x9dec, 0x4210, 0x32c0, 0xf969, 0xe1b0, 0x1, 0x1);
        gbc.writeMem(0x4aa8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x4aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0276
        gbc.setState(0xed40, 0xe727, 0xfbf0, 0xd50a, 0xc0a3, 0x7735, 0x1, 0x1);
        gbc.writeMem(0xed40, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0xed42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed40));
        EXPECT(0x2b, gbc.readMem(0xed41));
        // CB 2B 0277
        gbc.setState(0x62ec, 0x68c7, 0x9080, 0x4843, 0x8ad8, 0xbd31, 0x0, 0x1);
        gbc.writeMem(0x62ec, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0278
        gbc.setState(0x9fe2, 0x93d2, 0x58b0, 0xc066, 0x36f3, 0x7258, 0x1, 0x1);
        gbc.writeMem(0x9fe2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x93d2, gbc.sp());
        EXPECT(0x9fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe2));
        EXPECT(0x2b, gbc.readMem(0x9fe3));
        // CB 2B 0279
        gbc.setState(0x8350, 0x71f9, 0x33f0, 0x9cc, 0x8c46, 0x95b6, 0x1, 0x1);
        gbc.writeMem(0x8350, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x71f9, gbc.sp());
        EXPECT(0x8352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8350));
        EXPECT(0x2b, gbc.readMem(0x8351));
        // CB 2B 027A
        gbc.setState(0x58b6, 0x1bc2, 0xd700, 0xe0f0, 0x8e38, 0x4e8f, 0x0, 0x0);
        gbc.writeMem(0x58b6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1bc2, gbc.sp());
        EXPECT(0x58b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 027B
        gbc.setState(0x3979, 0x1910, 0x9760, 0x6d0, 0xf207, 0x79b8, 0x1, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1910, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 027C
        gbc.setState(0x8e26, 0x276e, 0x17f0, 0xbd43, 0x35d, 0xe323, 0x0, 0x0);
        gbc.writeMem(0x8e26, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x2b, gbc.readMem(0x8e27));
        // CB 2B 027D
        gbc.setState(0x3930, 0xe5ba, 0x6430, 0xa8b9, 0xad43, 0x5e89, 0x0, 0x1);
        gbc.writeMem(0x3930, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0x3932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 027E
        gbc.setState(0x8728, 0x2fb6, 0x8b90, 0x8680, 0x99a9, 0x7715, 0x1, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8728));
        EXPECT(0x2b, gbc.readMem(0x8729));
        // CB 2B 027F
        gbc.setState(0xdd88, 0x2043, 0x87d0, 0x186, 0xf8ca, 0x33a9, 0x1, 0x1);
        gbc.writeMem(0xdd88, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd88));
        EXPECT(0x2b, gbc.readMem(0xdd89));
        // CB 2B 0280
        gbc.setState(0x7523, 0x390d, 0x1f80, 0xd99d, 0x74a0, 0x893, 0x0, 0x0);
        gbc.writeMem(0x7523, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x390d, gbc.sp());
        EXPECT(0x7525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0281
        gbc.setState(0x924b, 0x6e24, 0x8be0, 0x9289, 0x72f1, 0x39fa, 0x1, 0x1);
        gbc.writeMem(0x924b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e24, gbc.sp());
        EXPECT(0x924d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924b));
        EXPECT(0x2b, gbc.readMem(0x924c));
        // CB 2B 0282
        gbc.setState(0x5e56, 0xec57, 0x1920, 0xce89, 0xfcef, 0xe964, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xec57, gbc.sp());
        EXPECT(0x5e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0283
        gbc.setState(0xa993, 0xd8a2, 0xa1e0, 0x40f0, 0x32a2, 0x7bf3, 0x1, 0x1);
        gbc.writeMem(0xa993, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0xa995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa993));
        EXPECT(0x2b, gbc.readMem(0xa994));
        // CB 2B 0284
        gbc.setState(0x6f18, 0x4a17, 0x68c0, 0x5e51, 0x4ef0, 0x9014, 0x0, 0x0);
        gbc.writeMem(0x6f18, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4a17, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0285
        gbc.setState(0xd5d8, 0x509b, 0x2720, 0x84e2, 0x73c5, 0xd25f, 0x1, 0x1);
        gbc.writeMem(0xd5d8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x509b, gbc.sp());
        EXPECT(0xd5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d8));
        EXPECT(0x2b, gbc.readMem(0xd5d9));
        // CB 2B 0286
        gbc.setState(0xd34f, 0x41b2, 0x5ef0, 0xdf4e, 0x94b, 0x6dd2, 0x1, 0x1);
        gbc.writeMem(0xd34f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34f));
        EXPECT(0x2b, gbc.readMem(0xd350));
        // CB 2B 0287
        gbc.setState(0x7a40, 0xedc0, 0x3070, 0xf315, 0x449, 0x31bd, 0x1, 0x0);
        gbc.writeMem(0x7a40, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0288
        gbc.setState(0x8de1, 0x8990, 0xdd50, 0x727, 0x682f, 0x9829, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8990, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0x2b, gbc.readMem(0x8de2));
        // CB 2B 0289
        gbc.setState(0x78c0, 0x7035, 0x21a0, 0x378f, 0xb139, 0x3114, 0x0, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7035, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 028A
        gbc.setState(0x8e5f, 0xfbe, 0x6500, 0xa28a, 0x5667, 0xcbcc, 0x0, 0x0);
        gbc.writeMem(0x8e5f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5f));
        EXPECT(0x2b, gbc.readMem(0x8e60));
        // CB 2B 028B
        gbc.setState(0x8e76, 0x7472, 0x6fa0, 0x849a, 0x1c0e, 0x8dbb, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7472, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e76));
        EXPECT(0x2b, gbc.readMem(0x8e77));
        // CB 2B 028C
        gbc.setState(0xcbed, 0xecd2, 0x3b50, 0x60b3, 0xe4c4, 0xc54c, 0x1, 0x1);
        gbc.writeMem(0xcbed, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbed));
        EXPECT(0x2b, gbc.readMem(0xcbee));
        // CB 2B 028D
        gbc.setState(0x8425, 0xf590, 0xcd50, 0x7caa, 0x465, 0x7456, 0x1, 0x1);
        gbc.writeMem(0x8425, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0x8427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8425));
        EXPECT(0x2b, gbc.readMem(0x8426));
        // CB 2B 028E
        gbc.setState(0x1742, 0x279e, 0xcfa0, 0xfa18, 0x7394, 0x43d0, 0x0, 0x1);
        gbc.writeMem(0x1742, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 028F
        gbc.setState(0xe1b4, 0x86c4, 0x7810, 0x40d4, 0xeeb, 0xbb9b, 0x0, 0x1);
        gbc.writeMem(0xe1b4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x86c4, gbc.sp());
        EXPECT(0xe1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b4));
        EXPECT(0x2b, gbc.readMem(0xe1b5));
        // CB 2B 0290
        gbc.setState(0x18c, 0xb3d1, 0xb220, 0xbab2, 0xf54f, 0x166b, 0x0, 0x1);
        gbc.writeMem(0x18c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0x18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0291
        gbc.setState(0xdefe, 0x8a9d, 0x76f0, 0xae4e, 0x5da, 0xb0f1, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8a9d, gbc.sp());
        EXPECT(0xdf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefe));
        EXPECT(0x2b, gbc.readMem(0xdeff));
        // CB 2B 0292
        gbc.setState(0xc0a6, 0x6637, 0x7bc0, 0x68fd, 0x51a3, 0xcdce, 0x1, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0x2b, gbc.readMem(0xc0a7));
        // CB 2B 0293
        gbc.setState(0x2080, 0x4ac2, 0xb70, 0x11e1, 0xdbbb, 0x41ca, 0x0, 0x0);
        gbc.writeMem(0x2080, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4ac2, gbc.sp());
        EXPECT(0x2082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0294
        gbc.setState(0xe929, 0x5611, 0x4cd0, 0xba5d, 0x1592, 0xda6e, 0x1, 0x1);
        gbc.writeMem(0xe929, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5611, gbc.sp());
        EXPECT(0xe92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe929));
        EXPECT(0x2b, gbc.readMem(0xe92a));
        // CB 2B 0295
        gbc.setState(0xe48b, 0xf11f, 0x99d0, 0x72e8, 0xc39d, 0xfa61, 0x0, 0x1);
        gbc.writeMem(0xe48b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf11f, gbc.sp());
        EXPECT(0xe48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48b));
        EXPECT(0x2b, gbc.readMem(0xe48c));
        // CB 2B 0296
        gbc.setState(0x839, 0x4369, 0xc440, 0x7e52, 0x95a5, 0xca4c, 0x0, 0x1);
        gbc.writeMem(0x839, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0297
        gbc.setState(0xc455, 0x8176, 0xe3a0, 0xc267, 0xdbc5, 0x703a, 0x1, 0x0);
        gbc.writeMem(0xc455, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8176, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0x2b, gbc.readMem(0xc456));
        // CB 2B 0298
        gbc.setState(0x6062, 0x6b95, 0x6960, 0x5884, 0xcf7c, 0x5aeb, 0x1, 0x0);
        gbc.writeMem(0x6062, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0x6064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 029A
        gbc.setState(0x9f73, 0xb537, 0xbde0, 0xd41, 0xa766, 0x96bf, 0x0, 0x0);
        gbc.writeMem(0x9f73, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb537, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x2b, gbc.readMem(0x9f74));
        // CB 2B 029B
        gbc.setState(0x4a13, 0x8c69, 0xc620, 0xbceb, 0x131f, 0xbf65, 0x0, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 029C
        gbc.setState(0x2aa2, 0x5700, 0x720, 0x366c, 0x8ca8, 0x4e35, 0x1, 0x1);
        gbc.writeMem(0x2aa2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0x2aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 029D
        gbc.setState(0xc1df, 0x2926, 0x530, 0x8949, 0x446a, 0x17f2, 0x0, 0x0);
        gbc.writeMem(0xc1df, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2926, gbc.sp());
        EXPECT(0xc1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1df));
        EXPECT(0x2b, gbc.readMem(0xc1e0));
        // CB 2B 029E
        gbc.setState(0xa5d7, 0x8590, 0xe720, 0x82d, 0xe6a7, 0x3e2a, 0x1, 0x0);
        gbc.writeMem(0xa5d7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8590, gbc.sp());
        EXPECT(0xa5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d7));
        EXPECT(0x2b, gbc.readMem(0xa5d8));
        // CB 2B 02A0
        gbc.setState(0xcf27, 0x1978, 0xc960, 0xee4e, 0xb3ef, 0xf15f, 0x1, 0x1);
        gbc.writeMem(0xcf27, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0xcf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf27));
        EXPECT(0x2b, gbc.readMem(0xcf28));
        // CB 2B 02A1
        gbc.setState(0x9472, 0xdbbd, 0x93e0, 0x5da0, 0x4933, 0xc73f, 0x0, 0x1);
        gbc.writeMem(0x9472, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x9474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9472));
        EXPECT(0x2b, gbc.readMem(0x9473));
        // CB 2B 02A2
        gbc.setState(0xbfa0, 0x8f16, 0x7400, 0x9fc4, 0xf1bb, 0x93da, 0x1, 0x0);
        gbc.writeMem(0xbfa0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8f16, gbc.sp());
        EXPECT(0xbfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa0));
        EXPECT(0x2b, gbc.readMem(0xbfa1));
        // CB 2B 02A3
        gbc.setState(0x2639, 0x1ff1, 0xb5a0, 0x4d3e, 0xb51f, 0xba59, 0x0, 0x1);
        gbc.writeMem(0x2639, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1ff1, gbc.sp());
        EXPECT(0x263b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02A4
        gbc.setState(0xe6d8, 0x2f02, 0xaa00, 0x6078, 0xedba, 0x34de, 0x0, 0x0);
        gbc.writeMem(0xe6d8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f02, gbc.sp());
        EXPECT(0xe6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d8));
        EXPECT(0x2b, gbc.readMem(0xe6d9));
        // CB 2B 02A5
        gbc.setState(0x11ee, 0xe5c6, 0x2a00, 0x2c16, 0x3008, 0xa12, 0x1, 0x0);
        gbc.writeMem(0x11ee, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x11f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02A6
        gbc.setState(0xdf63, 0x5ae0, 0x9280, 0x7128, 0x6720, 0x1147, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0xdf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf63));
        EXPECT(0x2b, gbc.readMem(0xdf64));
        // CB 2B 02A7
        gbc.setState(0x40d4, 0x14ac, 0xcde0, 0x99b3, 0x3ec0, 0x9da2, 0x0, 0x0);
        gbc.writeMem(0x40d4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x14ac, gbc.sp());
        EXPECT(0x40d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02A8
        gbc.setState(0x192, 0xdd5b, 0x960, 0x6775, 0xd962, 0xc8a1, 0x0, 0x0);
        gbc.writeMem(0x192, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02A9
        gbc.setState(0xa559, 0xeeb3, 0xacb0, 0xfaba, 0x22eb, 0xb4e1, 0x1, 0x1);
        gbc.writeMem(0xa559, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeeb3, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0x2b, gbc.readMem(0xa55a));
        // CB 2B 02AA
        gbc.setState(0xaea3, 0x2e57, 0x4a10, 0x7732, 0x487e, 0xdb42, 0x0, 0x1);
        gbc.writeMem(0xaea3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2e57, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea3));
        EXPECT(0x2b, gbc.readMem(0xaea4));
        // CB 2B 02AB
        gbc.setState(0x8d61, 0xe086, 0x9200, 0x55d4, 0xc1fa, 0xc7ba, 0x0, 0x0);
        gbc.writeMem(0x8d61, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe086, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0x2b, gbc.readMem(0x8d62));
        // CB 2B 02AC
        gbc.setState(0x47f5, 0x7082, 0x5550, 0xd94c, 0x8855, 0x9cab, 0x1, 0x0);
        gbc.writeMem(0x47f5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7082, gbc.sp());
        EXPECT(0x47f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02AE
        gbc.setState(0x6665, 0x390a, 0xb4e0, 0x3a01, 0xec26, 0x7e0b, 0x1, 0x0);
        gbc.writeMem(0x6665, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0x6667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02AF
        gbc.setState(0x6a62, 0x9ce2, 0xf9d0, 0x75f, 0xab00, 0x8c07, 0x0, 0x0);
        gbc.writeMem(0x6a62, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02B0
        gbc.setState(0x109e, 0x475f, 0x3ab0, 0x17af, 0xef73, 0x7286, 0x1, 0x0);
        gbc.writeMem(0x109e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x475f, gbc.sp());
        EXPECT(0x10a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02B1
        gbc.setState(0xc292, 0x655d, 0x1190, 0x7dff, 0xe551, 0xbd39, 0x1, 0x0);
        gbc.writeMem(0xc292, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0xc294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc292));
        EXPECT(0x2b, gbc.readMem(0xc293));
        // CB 2B 02B2
        gbc.setState(0x8272, 0xf966, 0x67d0, 0xa6dd, 0x2136, 0xf093, 0x0, 0x1);
        gbc.writeMem(0x8272, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0x8274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8272));
        EXPECT(0x2b, gbc.readMem(0x8273));
        // CB 2B 02B3
        gbc.setState(0xe20b, 0x2c34, 0x6a30, 0x9ff5, 0xb16d, 0x4f29, 0x0, 0x1);
        gbc.writeMem(0xe20b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20b));
        EXPECT(0x2b, gbc.readMem(0xe20c));
        // CB 2B 02B4
        gbc.setState(0xd965, 0x3c06, 0x5800, 0x74bb, 0xbef, 0x44c0, 0x1, 0x0);
        gbc.writeMem(0xd965, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3c06, gbc.sp());
        EXPECT(0xd967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd965));
        EXPECT(0x2b, gbc.readMem(0xd966));
        // CB 2B 02B5
        gbc.setState(0xc07e, 0x9e59, 0x45a0, 0xf838, 0x3cb2, 0xf545, 0x1, 0x1);
        gbc.writeMem(0xc07e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9e59, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07e));
        EXPECT(0x2b, gbc.readMem(0xc07f));
        // CB 2B 02B6
        gbc.setState(0x9685, 0x9907, 0x99d0, 0xd28a, 0xb3f7, 0x85bd, 0x0, 0x1);
        gbc.writeMem(0x9685, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9907, gbc.sp());
        EXPECT(0x9687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9685));
        EXPECT(0x2b, gbc.readMem(0x9686));
        // CB 2B 02B7
        gbc.setState(0x2f5, 0x556c, 0xa1e0, 0xad8c, 0xd159, 0xb18d, 0x1, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x556c, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02B8
        gbc.setState(0xba48, 0x7f40, 0xd710, 0x5e12, 0xab85, 0x8cb6, 0x0, 0x1);
        gbc.writeMem(0xba48, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba48));
        EXPECT(0x2b, gbc.readMem(0xba49));
        // CB 2B 02B9
        gbc.setState(0x9561, 0xd66b, 0xfd30, 0x8e9d, 0x2783, 0x4880, 0x0, 0x1);
        gbc.writeMem(0x9561, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd66b, gbc.sp());
        EXPECT(0x9563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9561));
        EXPECT(0x2b, gbc.readMem(0x9562));
        // CB 2B 02BA
        gbc.setState(0x9a2e, 0x342d, 0x9f00, 0xe762, 0x1f52, 0x789a, 0x0, 0x0);
        gbc.writeMem(0x9a2e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2e));
        EXPECT(0x2b, gbc.readMem(0x9a2f));
        // CB 2B 02BB
        gbc.setState(0xe23d, 0xbc8a, 0xcc70, 0x4b8b, 0xa807, 0x29bc, 0x1, 0x1);
        gbc.writeMem(0xe23d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbc8a, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23d));
        EXPECT(0x2b, gbc.readMem(0xe23e));
        // CB 2B 02BC
        gbc.setState(0x9f6a, 0xc9c, 0xac00, 0x48cb, 0x2c4b, 0x9272, 0x0, 0x1);
        gbc.writeMem(0x9f6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc9c, gbc.sp());
        EXPECT(0x9f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6a));
        EXPECT(0x2b, gbc.readMem(0x9f6b));
        // CB 2B 02BD
        gbc.setState(0x4dd2, 0xb4e3, 0xe8f0, 0x5f16, 0x3af3, 0x473c, 0x0, 0x1);
        gbc.writeMem(0x4dd2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02BE
        gbc.setState(0x5171, 0xb197, 0x820, 0x5900, 0x1722, 0x1f43, 0x1, 0x1);
        gbc.writeMem(0x5171, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb197, gbc.sp());
        EXPECT(0x5173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02BF
        gbc.setState(0xda3e, 0xcf63, 0x6d0, 0xd343, 0x4b34, 0x37ab, 0x1, 0x1);
        gbc.writeMem(0xda3e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcf63, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3e));
        EXPECT(0x2b, gbc.readMem(0xda3f));
        // CB 2B 02C0
        gbc.setState(0x1846, 0x9a0b, 0x5060, 0xcff3, 0x7d46, 0x377, 0x0, 0x1);
        gbc.writeMem(0x1846, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9a0b, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02C1
        gbc.setState(0xeb93, 0x7c93, 0x83d0, 0x503, 0x53f9, 0x308d, 0x1, 0x0);
        gbc.writeMem(0xeb93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0xeb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb93));
        EXPECT(0x2b, gbc.readMem(0xeb94));
        // CB 2B 02C2
        gbc.setState(0xe4b9, 0xf9a8, 0x9450, 0x970b, 0x759, 0x707b, 0x0, 0x0);
        gbc.writeMem(0xe4b9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0xe4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b9));
        EXPECT(0x2b, gbc.readMem(0xe4ba));
        // CB 2B 02C3
        gbc.setState(0x8415, 0x6f93, 0xafa0, 0xfd2b, 0x1a60, 0xdf23, 0x1, 0x0);
        gbc.writeMem(0x8415, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6f93, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8415));
        EXPECT(0x2b, gbc.readMem(0x8416));
        // CB 2B 02C4
        gbc.setState(0x3aa9, 0x18f9, 0x3b90, 0x5c6c, 0x57b6, 0x86bf, 0x0, 0x1);
        gbc.writeMem(0x3aa9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x18f9, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02C5
        gbc.setState(0xce93, 0xbd4c, 0x3d60, 0xac83, 0x8fe6, 0xa1b7, 0x0, 0x1);
        gbc.writeMem(0xce93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbd4c, gbc.sp());
        EXPECT(0xce95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce93));
        EXPECT(0x2b, gbc.readMem(0xce94));
        // CB 2B 02C6
        gbc.setState(0xe764, 0x73e6, 0x5c10, 0x132d, 0xb09c, 0xf1ff, 0x1, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0x2b, gbc.readMem(0xe765));
        // CB 2B 02C7
        gbc.setState(0x8de9, 0x3000, 0xfda0, 0xa00b, 0x27ac, 0x6226, 0x1, 0x0);
        gbc.writeMem(0x8de9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x8deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de9));
        EXPECT(0x2b, gbc.readMem(0x8dea));
        // CB 2B 02C8
        gbc.setState(0x287b, 0x4b2f, 0x640, 0x8fa7, 0xbf1e, 0x66f, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4b2f, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02C9
        gbc.setState(0xc5aa, 0x24bb, 0x1500, 0x3e6, 0x4be4, 0xd650, 0x1, 0x1);
        gbc.writeMem(0xc5aa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x24bb, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5aa));
        EXPECT(0x2b, gbc.readMem(0xc5ab));
        // CB 2B 02CA
        gbc.setState(0x3027, 0x2942, 0x9400, 0xf8aa, 0x6fd4, 0xcf17, 0x1, 0x1);
        gbc.writeMem(0x3027, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2942, gbc.sp());
        EXPECT(0x3029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02CB
        gbc.setState(0x5036, 0x63d2, 0x66e0, 0xe1b9, 0xe829, 0xa655, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02CC
        gbc.setState(0x5459, 0xc529, 0xb00, 0x5631, 0xd0e, 0x41e9, 0x1, 0x1);
        gbc.writeMem(0x5459, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc529, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02CD
        gbc.setState(0xde05, 0xb62f, 0x79a0, 0x321d, 0xa242, 0x5864, 0x1, 0x1);
        gbc.writeMem(0xde05, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb62f, gbc.sp());
        EXPECT(0xde07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde05));
        EXPECT(0x2b, gbc.readMem(0xde06));
        // CB 2B 02CF
        gbc.setState(0x2753, 0xd13b, 0x8bb0, 0x570e, 0xe2b9, 0xda7a, 0x1, 0x0);
        gbc.writeMem(0x2753, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd13b, gbc.sp());
        EXPECT(0x2755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02D0
        gbc.setState(0xa13e, 0x9e8c, 0x56c0, 0xe234, 0x5498, 0x34a5, 0x1, 0x1);
        gbc.writeMem(0xa13e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9e8c, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13e));
        EXPECT(0x2b, gbc.readMem(0xa13f));
        // CB 2B 02D1
        gbc.setState(0x1156, 0x6ec6, 0xe240, 0x3098, 0x4a2f, 0x6e44, 0x1, 0x0);
        gbc.writeMem(0x1156, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6ec6, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02D2
        gbc.setState(0x3477, 0xf536, 0xf5d0, 0x9116, 0x7482, 0x8fa9, 0x1, 0x1);
        gbc.writeMem(0x3477, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf536, gbc.sp());
        EXPECT(0x3479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02D3
        gbc.setState(0x90d2, 0x1a22, 0xca90, 0x64fb, 0x4b1f, 0x2710, 0x0, 0x1);
        gbc.writeMem(0x90d2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d2));
        EXPECT(0x2b, gbc.readMem(0x90d3));
        // CB 2B 02D4
        gbc.setState(0xcece, 0xe87a, 0x28f0, 0x6149, 0xfcd1, 0x238e, 0x0, 0x0);
        gbc.writeMem(0xcece, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe87a, gbc.sp());
        EXPECT(0xced0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcece));
        EXPECT(0x2b, gbc.readMem(0xcecf));
        // CB 2B 02D5
        gbc.setState(0x7730, 0x8a2c, 0x1240, 0x679e, 0xe60c, 0xaa0c, 0x0, 0x1);
        gbc.writeMem(0x7730, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02D6
        gbc.setState(0x2bc3, 0xa0d5, 0xe590, 0x54fe, 0x436c, 0x2c02, 0x0, 0x1);
        gbc.writeMem(0x2bc3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02D7
        gbc.setState(0x43fc, 0x3f56, 0xfcd0, 0x625d, 0x5424, 0xc2fa, 0x1, 0x1);
        gbc.writeMem(0x43fc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f56, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02D8
        gbc.setState(0x9dba, 0x6827, 0x4540, 0x2bfc, 0xdf6c, 0x6a73, 0x1, 0x1);
        gbc.writeMem(0x9dba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0x9dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dba));
        EXPECT(0x2b, gbc.readMem(0x9dbb));
        // CB 2B 02D9
        gbc.setState(0x13b8, 0xaa19, 0xeab0, 0x6c38, 0x3e3b, 0x9eb3, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaa19, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02DA
        gbc.setState(0x88c8, 0x73fe, 0x44f0, 0x1138, 0x638e, 0xf65b, 0x1, 0x0);
        gbc.writeMem(0x88c8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x73fe, gbc.sp());
        EXPECT(0x88ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c8));
        EXPECT(0x2b, gbc.readMem(0x88c9));
        // CB 2B 02DB
        gbc.setState(0xe25e, 0x81c4, 0xf0, 0xbaf1, 0xfb2b, 0x7eef, 0x1, 0x1);
        gbc.writeMem(0xe25e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x81c4, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25e));
        EXPECT(0x2b, gbc.readMem(0xe25f));
        // CB 2B 02DC
        gbc.setState(0x90da, 0x4cad, 0x2c90, 0x1f92, 0x569f, 0x29ea, 0x1, 0x0);
        gbc.writeMem(0x90da, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4cad, gbc.sp());
        EXPECT(0x90dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90da));
        EXPECT(0x2b, gbc.readMem(0x90db));
        // CB 2B 02DD
        gbc.setState(0x4dce, 0x490b, 0xaf0, 0xbaa9, 0x3c5b, 0x829c, 0x0, 0x0);
        gbc.writeMem(0x4dce, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x490b, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02DE
        gbc.setState(0xb17c, 0x68e2, 0xaac0, 0x254c, 0x1ab3, 0x358d, 0x1, 0x0);
        gbc.writeMem(0xb17c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x68e2, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0x2b, gbc.readMem(0xb17d));
        // CB 2B 02DF
        gbc.setState(0x657c, 0x15a8, 0xbbc0, 0x6633, 0xfb46, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x15a8, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02E0
        gbc.setState(0xb85a, 0xa0f3, 0x8fb0, 0x9b3c, 0x45f7, 0x4dc5, 0x1, 0x1);
        gbc.writeMem(0xb85a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa0f3, gbc.sp());
        EXPECT(0xb85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85a));
        EXPECT(0x2b, gbc.readMem(0xb85b));
        // CB 2B 02E1
        gbc.setState(0xcbb0, 0x791e, 0x8e0, 0xc52c, 0x3998, 0x20fc, 0x0, 0x1);
        gbc.writeMem(0xcbb0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x791e, gbc.sp());
        EXPECT(0xcbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb0));
        EXPECT(0x2b, gbc.readMem(0xcbb1));
        // CB 2B 02E2
        gbc.setState(0x14e3, 0x6274, 0x7660, 0xc0c3, 0x3ca5, 0xe2ec, 0x0, 0x1);
        gbc.writeMem(0x14e3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6274, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02E3
        gbc.setState(0xb328, 0x6212, 0xf440, 0x3512, 0xacb5, 0xb6ee, 0x1, 0x1);
        gbc.writeMem(0xb328, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6212, gbc.sp());
        EXPECT(0xb32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb328));
        EXPECT(0x2b, gbc.readMem(0xb329));
        // CB 2B 02E4
        gbc.setState(0x2122, 0xe4e8, 0x4c0, 0xac3e, 0x185f, 0xb7f8, 0x0, 0x1);
        gbc.writeMem(0x2122, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0x2124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02E5
        gbc.setState(0x13c9, 0xb9e2, 0x5480, 0x12f7, 0xff54, 0x6376, 0x1, 0x0);
        gbc.writeMem(0x13c9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb9e2, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02E6
        gbc.setState(0x3ae9, 0xaefc, 0x6f60, 0xfeef, 0x9242, 0xba4a, 0x1, 0x1);
        gbc.writeMem(0x3ae9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaefc, gbc.sp());
        EXPECT(0x3aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02E9
        gbc.setState(0xdccc, 0x9487, 0xfb80, 0x3e74, 0x4417, 0xf626, 0x1, 0x1);
        gbc.writeMem(0xdccc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccc));
        EXPECT(0x2b, gbc.readMem(0xdccd));
        // CB 2B 02EA
        gbc.setState(0x9357, 0x16d1, 0xd070, 0x1735, 0x48be, 0x3751, 0x0, 0x1);
        gbc.writeMem(0x9357, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x16d1, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9357));
        EXPECT(0x2b, gbc.readMem(0x9358));
        // CB 2B 02EB
        gbc.setState(0x1cf4, 0x709f, 0xe8d0, 0xe4d9, 0xccca, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0x1cf4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x709f, gbc.sp());
        EXPECT(0x1cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02EC
        gbc.setState(0xd9e0, 0x4d6b, 0x13d0, 0x9988, 0x3624, 0x8c38, 0x0, 0x0);
        gbc.writeMem(0xd9e0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4d6b, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e0));
        EXPECT(0x2b, gbc.readMem(0xd9e1));
        // CB 2B 02ED
        gbc.setState(0x5414, 0x2305, 0xfaf0, 0x4380, 0x5b95, 0xdbb8, 0x0, 0x0);
        gbc.writeMem(0x5414, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02EE
        gbc.setState(0xa6e2, 0xc243, 0x86a0, 0x1ac, 0xb3ba, 0x68a0, 0x0, 0x1);
        gbc.writeMem(0xa6e2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc243, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e2));
        EXPECT(0x2b, gbc.readMem(0xa6e3));
        // CB 2B 02EF
        gbc.setState(0xb5a8, 0xbc5a, 0xada0, 0x4ca3, 0x44e6, 0x59a9, 0x1, 0x1);
        gbc.writeMem(0xb5a8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbc5a, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a8));
        EXPECT(0x2b, gbc.readMem(0xb5a9));
        // CB 2B 02F0
        gbc.setState(0x3c13, 0x6b6c, 0x5ca0, 0x3f22, 0xb116, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x3c13, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0x3c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02F1
        gbc.setState(0x1e43, 0x6732, 0xcd60, 0x637a, 0xb193, 0x2ec7, 0x1, 0x0);
        gbc.writeMem(0x1e43, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02F2
        gbc.setState(0x1374, 0xa5f2, 0xfbb0, 0xdc04, 0x2504, 0x949c, 0x0, 0x1);
        gbc.writeMem(0x1374, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0x1376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02F3
        gbc.setState(0x510, 0x8ab8, 0x2c60, 0x7774, 0x1644, 0x45d6, 0x0, 0x0);
        gbc.writeMem(0x510, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8ab8, gbc.sp());
        EXPECT(0x512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02F4
        gbc.setState(0xdb3c, 0xd3ff, 0xfc10, 0x15be, 0x7870, 0xdc6a, 0x0, 0x0);
        gbc.writeMem(0xdb3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd3ff, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3c));
        EXPECT(0x2b, gbc.readMem(0xdb3d));
        // CB 2B 02F5
        gbc.setState(0x9bee, 0xb5ea, 0x8c40, 0x6ba1, 0x685b, 0xdba5, 0x1, 0x1);
        gbc.writeMem(0x9bee, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0x9bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bee));
        EXPECT(0x2b, gbc.readMem(0x9bef));
        // CB 2B 02F6
        gbc.setState(0x9af0, 0x6306, 0x76d0, 0x38be, 0x364b, 0x3598, 0x0, 0x1);
        gbc.writeMem(0x9af0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af0));
        EXPECT(0x2b, gbc.readMem(0x9af1));
        // CB 2B 02F7
        gbc.setState(0x302e, 0xad19, 0x9bd0, 0x22e2, 0xb649, 0xd824, 0x1, 0x1);
        gbc.writeMem(0x302e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02F8
        gbc.setState(0x2db8, 0x400c, 0xf2d0, 0xb195, 0x59ff, 0x2088, 0x1, 0x1);
        gbc.writeMem(0x2db8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x400c, gbc.sp());
        EXPECT(0x2dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02F9
        gbc.setState(0x2fd0, 0x7420, 0x5600, 0xbb09, 0x7aaa, 0x715c, 0x1, 0x1);
        gbc.writeMem(0x2fd0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7420, gbc.sp());
        EXPECT(0x2fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02FA
        gbc.setState(0xd4fe, 0x8f06, 0xb0, 0x23fe, 0xabd9, 0x959b, 0x0, 0x1);
        gbc.writeMem(0xd4fe, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8f06, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fe));
        EXPECT(0x2b, gbc.readMem(0xd4ff));
        // CB 2B 02FB
        gbc.setState(0x4b9, 0xeeb8, 0x7220, 0xd8ea, 0x8e62, 0xc128, 0x1, 0x1);
        gbc.writeMem(0x4b9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xeeb8, gbc.sp());
        EXPECT(0x4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 02FC
        gbc.setState(0x55c3, 0x4c96, 0x2160, 0xe29c, 0x5601, 0x255d, 0x1, 0x0);
        gbc.writeMem(0x55c3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 02FD
        gbc.setState(0xa514, 0xea3d, 0xc0a0, 0xd9de, 0xf469, 0x1726, 0x1, 0x1);
        gbc.writeMem(0xa514, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xea3d, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa514));
        EXPECT(0x2b, gbc.readMem(0xa515));
        // CB 2B 02FE
        gbc.setState(0x8956, 0x4297, 0x5850, 0xa173, 0x72db, 0x51c9, 0x0, 0x1);
        gbc.writeMem(0x8956, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0x8958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8956));
        EXPECT(0x2b, gbc.readMem(0x8957));
        // CB 2B 02FF
        gbc.setState(0x6e63, 0x6d6d, 0xdd70, 0xd18a, 0x88a7, 0x5fd9, 0x0, 0x0);
        gbc.writeMem(0x6e63, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6d6d, gbc.sp());
        EXPECT(0x6e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0300
        gbc.setState(0x9d3b, 0x4a32, 0x7410, 0x72ca, 0x262b, 0xeb64, 0x1, 0x0);
        gbc.writeMem(0x9d3b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4a32, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3b));
        EXPECT(0x2b, gbc.readMem(0x9d3c));
        // CB 2B 0301
        gbc.setState(0x3873, 0x99d1, 0x5e30, 0xd96c, 0xf6ab, 0x34e2, 0x1, 0x0);
        gbc.writeMem(0x3873, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x99d1, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0302
        gbc.setState(0x24b1, 0x4ab8, 0x9f50, 0xf382, 0xd488, 0xcf8, 0x0, 0x1);
        gbc.writeMem(0x24b1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ab8, gbc.sp());
        EXPECT(0x24b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0303
        gbc.setState(0xb70a, 0x269f, 0xa620, 0x3f3d, 0xbd3a, 0x3f0f, 0x1, 0x1);
        gbc.writeMem(0xb70a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x269f, gbc.sp());
        EXPECT(0xb70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70a));
        EXPECT(0x2b, gbc.readMem(0xb70b));
        // CB 2B 0304
        gbc.setState(0xda93, 0x2ab3, 0xe9e0, 0x2ae0, 0xb00f, 0xfbe, 0x1, 0x1);
        gbc.writeMem(0xda93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2ab3, gbc.sp());
        EXPECT(0xda95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda93));
        EXPECT(0x2b, gbc.readMem(0xda94));
        // CB 2B 0305
        gbc.setState(0x9960, 0x3b18, 0xf70, 0x7c42, 0xd003, 0xb197, 0x0, 0x0);
        gbc.writeMem(0x9960, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3b18, gbc.sp());
        EXPECT(0x9962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9960));
        EXPECT(0x2b, gbc.readMem(0x9961));
        // CB 2B 0306
        gbc.setState(0xcaea, 0x96b4, 0x2dc0, 0x202b, 0x3310, 0x3867, 0x0, 0x0);
        gbc.writeMem(0xcaea, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaea));
        EXPECT(0x2b, gbc.readMem(0xcaeb));
        // CB 2B 0307
        gbc.setState(0xbd59, 0xfeb1, 0x5c50, 0xe90d, 0xa3ff, 0x5da2, 0x0, 0x0);
        gbc.writeMem(0xbd59, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0xbd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd59));
        EXPECT(0x2b, gbc.readMem(0xbd5a));
        // CB 2B 0308
        gbc.setState(0x47a6, 0xbca, 0xc0d0, 0xc153, 0xcfe, 0x28f0, 0x0, 0x0);
        gbc.writeMem(0x47a6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbca, gbc.sp());
        EXPECT(0x47a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0309
        gbc.setState(0xa4f0, 0x5496, 0x6b20, 0x33cb, 0xaef0, 0xd61b, 0x0, 0x1);
        gbc.writeMem(0xa4f0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5496, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f0));
        EXPECT(0x2b, gbc.readMem(0xa4f1));
        // CB 2B 030A
        gbc.setState(0xe51e, 0x3249, 0x1a60, 0xfb8f, 0x7fad, 0x50a3, 0x0, 0x1);
        gbc.writeMem(0xe51e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3249, gbc.sp());
        EXPECT(0xe520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51e));
        EXPECT(0x2b, gbc.readMem(0xe51f));
        // CB 2B 030B
        gbc.setState(0xcbcb, 0x7490, 0x3bf0, 0x2c0b, 0x6c89, 0xb904, 0x1, 0x1);
        gbc.writeMem(0xcbcb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0xcbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbcb));
        EXPECT(0x2b, gbc.readMem(0xcbcc));
        // CB 2B 030C
        gbc.setState(0xe02b, 0xdc01, 0x8a10, 0xea04, 0x5a14, 0x4d44, 0x0, 0x0);
        gbc.writeMem(0xe02b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc01, gbc.sp());
        EXPECT(0xe02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02b));
        EXPECT(0x2b, gbc.readMem(0xe02c));
        // CB 2B 030D
        gbc.setState(0x81c4, 0x52c2, 0xf110, 0xddf1, 0x843f, 0xf2f0, 0x0, 0x0);
        gbc.writeMem(0x81c4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c4));
        EXPECT(0x2b, gbc.readMem(0x81c5));
        // CB 2B 030E
        gbc.setState(0xdb8c, 0x196a, 0x9bf0, 0x620a, 0x697c, 0x5f53, 0x0, 0x0);
        gbc.writeMem(0xdb8c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8c));
        EXPECT(0x2b, gbc.readMem(0xdb8d));
        // CB 2B 030F
        gbc.setState(0xd6ec, 0xe575, 0x6490, 0x437d, 0xc1c2, 0x9a6f, 0x0, 0x0);
        gbc.writeMem(0xd6ec, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0xd6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ec));
        EXPECT(0x2b, gbc.readMem(0xd6ed));
        // CB 2B 0310
        gbc.setState(0x6e24, 0xa89e, 0xae80, 0x696c, 0xe493, 0xe5bb, 0x1, 0x0);
        gbc.writeMem(0x6e24, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0311
        gbc.setState(0x7e56, 0x967, 0x4cf0, 0x129e, 0x14fe, 0xb0cd, 0x1, 0x0);
        gbc.writeMem(0x7e56, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0312
        gbc.setState(0x5ae5, 0xe3, 0x3690, 0x89cd, 0xdd2, 0xb18e, 0x1, 0x1);
        gbc.writeMem(0x5ae5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe3, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0313
        gbc.setState(0x5529, 0xd07a, 0xa690, 0x2579, 0x1e64, 0x505e, 0x1, 0x0);
        gbc.writeMem(0x5529, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd07a, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0314
        gbc.setState(0x8cab, 0xc2f9, 0x7960, 0x3fe, 0xaaee, 0x287, 0x0, 0x1);
        gbc.writeMem(0x8cab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc2f9, gbc.sp());
        EXPECT(0x8cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cab));
        EXPECT(0x2b, gbc.readMem(0x8cac));
        // CB 2B 0315
        gbc.setState(0xb128, 0xbbd7, 0x1fd0, 0x6627, 0x1b36, 0x6c2f, 0x1, 0x1);
        gbc.writeMem(0xb128, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbbd7, gbc.sp());
        EXPECT(0xb12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb128));
        EXPECT(0x2b, gbc.readMem(0xb129));
        // CB 2B 0316
        gbc.setState(0x5cb5, 0x9c3c, 0x1e10, 0x9bce, 0x2815, 0xcdaa, 0x0, 0x0);
        gbc.writeMem(0x5cb5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c3c, gbc.sp());
        EXPECT(0x5cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0317
        gbc.setState(0xd5a9, 0x283e, 0x39d0, 0x4f66, 0xef11, 0x932b, 0x1, 0x0);
        gbc.writeMem(0xd5a9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x283e, gbc.sp());
        EXPECT(0xd5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a9));
        EXPECT(0x2b, gbc.readMem(0xd5aa));
        // CB 2B 0318
        gbc.setState(0x3152, 0x654, 0xe5a0, 0xd169, 0xc2f9, 0x8b14, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x654, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0319
        gbc.setState(0xd7f1, 0x3c3f, 0x4e0, 0xd990, 0xd31f, 0xe316, 0x0, 0x1);
        gbc.writeMem(0xd7f1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3c3f, gbc.sp());
        EXPECT(0xd7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f1));
        EXPECT(0x2b, gbc.readMem(0xd7f2));
        // CB 2B 031A
        gbc.setState(0x6130, 0x8b40, 0x9480, 0x5885, 0x348f, 0x264c, 0x0, 0x1);
        gbc.writeMem(0x6130, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8b40, gbc.sp());
        EXPECT(0x6132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 031B
        gbc.setState(0xefda, 0x8671, 0x2cd0, 0xeec3, 0x2a6a, 0x1ac1, 0x0, 0x0);
        gbc.writeMem(0xefda, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xefdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefda));
        EXPECT(0x2b, gbc.readMem(0xefdb));
        // CB 2B 031D
        gbc.setState(0xd027, 0xc99c, 0xbd00, 0x9b7a, 0xcf21, 0x324d, 0x0, 0x0);
        gbc.writeMem(0xd027, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc99c, gbc.sp());
        EXPECT(0xd029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd027));
        EXPECT(0x2b, gbc.readMem(0xd028));
        // CB 2B 031E
        gbc.setState(0x34e4, 0x73f0, 0x3020, 0xf94c, 0xef25, 0x73cf, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 031F
        gbc.setState(0xccb7, 0xee6d, 0x49f0, 0xc47d, 0xa6ad, 0x8283, 0x1, 0x0);
        gbc.writeMem(0xccb7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb7));
        EXPECT(0x2b, gbc.readMem(0xccb8));
        // CB 2B 0320
        gbc.setState(0x7de7, 0xa616, 0x9ea0, 0x285f, 0x2669, 0x6dca, 0x0, 0x0);
        gbc.writeMem(0x7de7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa616, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0321
        gbc.setState(0x3b93, 0x49be, 0xa0f0, 0x7558, 0x8a, 0x76e, 0x1, 0x0);
        gbc.writeMem(0x3b93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x49be, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0322
        gbc.setState(0xaa8c, 0x934a, 0xc0a0, 0x9538, 0xa2a0, 0x5623, 0x1, 0x0);
        gbc.writeMem(0xaa8c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x934a, gbc.sp());
        EXPECT(0xaa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8c));
        EXPECT(0x2b, gbc.readMem(0xaa8d));
        // CB 2B 0323
        gbc.setState(0x6243, 0xa41c, 0xf160, 0xfdd9, 0x83eb, 0x93f8, 0x0, 0x0);
        gbc.writeMem(0x6243, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x6245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0325
        gbc.setState(0x988c, 0x693a, 0xda0, 0xb96b, 0x4754, 0x8357, 0x1, 0x1);
        gbc.writeMem(0x988c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x693a, gbc.sp());
        EXPECT(0x988e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988c));
        EXPECT(0x2b, gbc.readMem(0x988d));
        // CB 2B 0326
        gbc.setState(0x99a5, 0xd169, 0xff00, 0xdd62, 0x9121, 0x2400, 0x0, 0x1);
        gbc.writeMem(0x99a5, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0x99a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a5));
        EXPECT(0x2b, gbc.readMem(0x99a6));
        // CB 2B 0327
        gbc.setState(0x3e85, 0xa5e1, 0x7640, 0xf916, 0xf41b, 0xb51f, 0x1, 0x1);
        gbc.writeMem(0x3e85, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa5e1, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0328
        gbc.setState(0x4d54, 0x917c, 0x8b20, 0x9acd, 0x69cf, 0x927c, 0x0, 0x1);
        gbc.writeMem(0x4d54, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0329
        gbc.setState(0xae27, 0xcdf8, 0xc960, 0xbff9, 0xa17, 0x9cd8, 0x0, 0x1);
        gbc.writeMem(0xae27, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcdf8, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae27));
        EXPECT(0x2b, gbc.readMem(0xae28));
        // CB 2B 032A
        gbc.setState(0xcfb, 0x6135, 0xdbe0, 0xbf90, 0x8dc5, 0x76d1, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0xcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 032B
        gbc.setState(0xb170, 0x3b07, 0x4800, 0x2e7, 0xb5d2, 0x534f, 0x1, 0x1);
        gbc.writeMem(0xb170, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb170));
        EXPECT(0x2b, gbc.readMem(0xb171));
        // CB 2B 032C
        gbc.setState(0x8196, 0xe2b0, 0x7cc0, 0xda1d, 0xcb89, 0xc6dc, 0x0, 0x1);
        gbc.writeMem(0x8196, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe2b0, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0x2b, gbc.readMem(0x8197));
        // CB 2B 032D
        gbc.setState(0x7e37, 0xe1f8, 0x3d60, 0x991d, 0x5fb4, 0x88d3, 0x1, 0x0);
        gbc.writeMem(0x7e37, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe1f8, gbc.sp());
        EXPECT(0x7e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 032E
        gbc.setState(0x49a3, 0xcdc4, 0xe910, 0x75f1, 0x2855, 0x6a5d, 0x1, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 032F
        gbc.setState(0x5ce3, 0xa51c, 0x9a40, 0x8002, 0x81a4, 0x6781, 0x0, 0x1);
        gbc.writeMem(0x5ce3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0x5ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0330
        gbc.setState(0x58bd, 0xe42c, 0x6d90, 0xa239, 0x5a87, 0x12d1, 0x1, 0x1);
        gbc.writeMem(0x58bd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0331
        gbc.setState(0x31fa, 0x1920, 0x51f0, 0xdc6e, 0x26d5, 0xc84c, 0x0, 0x1);
        gbc.writeMem(0x31fa, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0332
        gbc.setState(0x5e59, 0xe960, 0x3d40, 0x3249, 0xcc30, 0x343b, 0x1, 0x1);
        gbc.writeMem(0x5e59, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x5e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0333
        gbc.setState(0x787c, 0x5a3e, 0x67a0, 0x4f2c, 0x5fe7, 0xf3fc, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x787e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0334
        gbc.setState(0x835, 0x483, 0x5b60, 0xccdd, 0x3a51, 0x50a8, 0x0, 0x0);
        gbc.writeMem(0x835, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x483, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0335
        gbc.setState(0x4151, 0xcb39, 0x2800, 0x7c4e, 0xd57b, 0x1860, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0336
        gbc.setState(0xbd78, 0xc878, 0x33a0, 0x16b0, 0x53cf, 0x557f, 0x0, 0x1);
        gbc.writeMem(0xbd78, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc878, gbc.sp());
        EXPECT(0xbd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd78));
        EXPECT(0x2b, gbc.readMem(0xbd79));
        // CB 2B 0337
        gbc.setState(0x2862, 0xd641, 0x5a0, 0xac6b, 0x6601, 0x86f5, 0x0, 0x0);
        gbc.writeMem(0x2862, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd641, gbc.sp());
        EXPECT(0x2864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0338
        gbc.setState(0x6603, 0x4a66, 0x45b0, 0xae08, 0xfefd, 0x458b, 0x1, 0x1);
        gbc.writeMem(0x6603, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0339
        gbc.setState(0xe0a3, 0x6f58, 0x9d40, 0x2142, 0xd529, 0x9d59, 0x0, 0x1);
        gbc.writeMem(0xe0a3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0xe0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a3));
        EXPECT(0x2b, gbc.readMem(0xe0a4));
        // CB 2B 033A
        gbc.setState(0x6ab0, 0x3c19, 0xaef0, 0xfcc4, 0x82bd, 0xeb51, 0x1, 0x0);
        gbc.writeMem(0x6ab0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 033B
        gbc.setState(0x8ccc, 0x63af, 0xec30, 0xfe86, 0x3835, 0xcb56, 0x0, 0x0);
        gbc.writeMem(0x8ccc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x63af, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccc));
        EXPECT(0x2b, gbc.readMem(0x8ccd));
        // CB 2B 033C
        gbc.setState(0x24d8, 0x4499, 0x5d10, 0xfe8c, 0x6c3c, 0xd952, 0x0, 0x1);
        gbc.writeMem(0x24d8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4499, gbc.sp());
        EXPECT(0x24da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 033D
        gbc.setState(0x7867, 0xbd12, 0xd780, 0xd72b, 0x302f, 0x3f2f, 0x0, 0x0);
        gbc.writeMem(0x7867, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbd12, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 033E
        gbc.setState(0x23a1, 0xe9d0, 0x5fe0, 0x10df, 0x4ede, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x23a1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe9d0, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0340
        gbc.setState(0x7504, 0x2564, 0x7620, 0x7eec, 0xde05, 0xef82, 0x1, 0x1);
        gbc.writeMem(0x7504, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0341
        gbc.setState(0xa838, 0xd373, 0x1050, 0xb887, 0x9de4, 0xce8f, 0x0, 0x1);
        gbc.writeMem(0xa838, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa838));
        EXPECT(0x2b, gbc.readMem(0xa839));
        // CB 2B 0342
        gbc.setState(0xeb83, 0xe66a, 0xf2b0, 0x4f34, 0x1888, 0xfed3, 0x1, 0x0);
        gbc.writeMem(0xeb83, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0xeb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb83));
        EXPECT(0x2b, gbc.readMem(0xeb84));
        // CB 2B 0344
        gbc.setState(0x70c1, 0x4767, 0xc480, 0x4991, 0x7d04, 0xc660, 0x0, 0x1);
        gbc.writeMem(0x70c1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4767, gbc.sp());
        EXPECT(0x70c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0345
        gbc.setState(0x940a, 0xe0dc, 0x25c0, 0xee29, 0xc76f, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x940a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe0dc, gbc.sp());
        EXPECT(0x940c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940a));
        EXPECT(0x2b, gbc.readMem(0x940b));
        // CB 2B 0346
        gbc.setState(0x8136, 0x3c51, 0x9020, 0x6665, 0x2117, 0xbd78, 0x1, 0x0);
        gbc.writeMem(0x8136, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8136));
        EXPECT(0x2b, gbc.readMem(0x8137));
        // CB 2B 0347
        gbc.setState(0x1d39, 0xd342, 0x4f80, 0x73b3, 0xc6f6, 0x97b4, 0x1, 0x0);
        gbc.writeMem(0x1d39, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd342, gbc.sp());
        EXPECT(0x1d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0348
        gbc.setState(0x5c1c, 0x4f15, 0x8cb0, 0x1428, 0x2eb9, 0x153d, 0x0, 0x1);
        gbc.writeMem(0x5c1c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0349
        gbc.setState(0x9bd3, 0xef60, 0xeac0, 0xd6d8, 0x275, 0x3a61, 0x0, 0x0);
        gbc.writeMem(0x9bd3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef60, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd3));
        EXPECT(0x2b, gbc.readMem(0x9bd4));
        // CB 2B 034A
        gbc.setState(0x916d, 0xa56a, 0xfdd0, 0xef90, 0x6b34, 0x298, 0x0, 0x1);
        gbc.writeMem(0x916d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916d));
        EXPECT(0x2b, gbc.readMem(0x916e));
        // CB 2B 034B
        gbc.setState(0xe9b1, 0xf039, 0xfdf0, 0xbbf5, 0xfdc7, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0xe9b1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf039, gbc.sp());
        EXPECT(0xe9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b1));
        EXPECT(0x2b, gbc.readMem(0xe9b2));
        // CB 2B 034C
        gbc.setState(0x9dc6, 0x56ed, 0xec00, 0xd991, 0x9c8c, 0x2529, 0x0, 0x0);
        gbc.writeMem(0x9dc6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x9dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc6));
        EXPECT(0x2b, gbc.readMem(0x9dc7));
        // CB 2B 034D
        gbc.setState(0x9e97, 0xa45, 0xfbd0, 0xbe21, 0x1b88, 0x7e13, 0x0, 0x1);
        gbc.writeMem(0x9e97, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e97));
        EXPECT(0x2b, gbc.readMem(0x9e98));
        // CB 2B 034E
        gbc.setState(0xc0f, 0x3314, 0x5a90, 0x28d2, 0x2d5a, 0x3200, 0x1, 0x1);
        gbc.writeMem(0xc0f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 034F
        gbc.setState(0x9865, 0xebc3, 0xd390, 0x9c8c, 0xd919, 0x16b6, 0x0, 0x0);
        gbc.writeMem(0x9865, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xebc3, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9865));
        EXPECT(0x2b, gbc.readMem(0x9866));
        // CB 2B 0350
        gbc.setState(0xc950, 0x4ff1, 0xf040, 0x61bf, 0x93cf, 0xb60a, 0x1, 0x1);
        gbc.writeMem(0xc950, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0xc952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc950));
        EXPECT(0x2b, gbc.readMem(0xc951));
        // CB 2B 0351
        gbc.setState(0x90f6, 0xfc2, 0xda00, 0x9d1c, 0x21ae, 0x6657, 0x0, 0x1);
        gbc.writeMem(0x90f6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f6));
        EXPECT(0x2b, gbc.readMem(0x90f7));
        // CB 2B 0352
        gbc.setState(0xd947, 0x73de, 0x58a0, 0x3829, 0x158b, 0x6837, 0x1, 0x0);
        gbc.writeMem(0xd947, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x73de, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd947));
        EXPECT(0x2b, gbc.readMem(0xd948));
        // CB 2B 0353
        gbc.setState(0x3403, 0xa783, 0xc3d0, 0xce2b, 0x4158, 0xa299, 0x0, 0x0);
        gbc.writeMem(0x3403, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0354
        gbc.setState(0x319a, 0xe48f, 0xe440, 0x675c, 0x5505, 0x3c42, 0x0, 0x1);
        gbc.writeMem(0x319a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x319c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0355
        gbc.setState(0xd73e, 0x6404, 0x5fc0, 0xf6ad, 0xe07a, 0x2bb, 0x1, 0x0);
        gbc.writeMem(0xd73e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6404, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73e));
        EXPECT(0x2b, gbc.readMem(0xd73f));
        // CB 2B 0356
        gbc.setState(0x86da, 0xd5ec, 0xa080, 0xa0da, 0x600d, 0x701e, 0x1, 0x0);
        gbc.writeMem(0x86da, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd5ec, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86da));
        EXPECT(0x2b, gbc.readMem(0x86db));
        // CB 2B 0357
        gbc.setState(0xa306, 0xc90b, 0x190, 0x45a1, 0xb5e4, 0xb6b4, 0x0, 0x1);
        gbc.writeMem(0xa306, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc90b, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa306));
        EXPECT(0x2b, gbc.readMem(0xa307));
        // CB 2B 0358
        gbc.setState(0xaf15, 0xff02, 0x7160, 0x5b9e, 0xbb88, 0x370, 0x0, 0x0);
        gbc.writeMem(0xaf15, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xff02, gbc.sp());
        EXPECT(0xaf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf15));
        EXPECT(0x2b, gbc.readMem(0xaf16));
        // CB 2B 0359
        gbc.setState(0x53dc, 0x238a, 0x52d0, 0x2bf9, 0x28c1, 0x7428, 0x0, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x238a, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 035A
        gbc.setState(0x9f55, 0xb3be, 0xdcd0, 0x4ad9, 0xa48e, 0xd1, 0x1, 0x1);
        gbc.writeMem(0x9f55, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0x9f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f55));
        EXPECT(0x2b, gbc.readMem(0x9f56));
        // CB 2B 035B
        gbc.setState(0x8745, 0x6380, 0x8c90, 0x126d, 0x4431, 0xc99d, 0x0, 0x1);
        gbc.writeMem(0x8745, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8745));
        EXPECT(0x2b, gbc.readMem(0x8746));
        // CB 2B 035C
        gbc.setState(0x856e, 0xae10, 0x1610, 0x3b51, 0xad1b, 0xd196, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xae10, gbc.sp());
        EXPECT(0x8570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856e));
        EXPECT(0x2b, gbc.readMem(0x856f));
        // CB 2B 035D
        gbc.setState(0x3640, 0xdce1, 0xa210, 0xa89, 0x4775, 0xc03a, 0x1, 0x0);
        gbc.writeMem(0x3640, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 035E
        gbc.setState(0xcbbf, 0x42f3, 0xdfc0, 0x1964, 0xd59e, 0x7c76, 0x1, 0x0);
        gbc.writeMem(0xcbbf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x42f3, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbf));
        EXPECT(0x2b, gbc.readMem(0xcbc0));
        // CB 2B 035F
        gbc.setState(0x47d3, 0x6729, 0x150, 0xa246, 0xb84b, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6729, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0360
        gbc.setState(0xc0a2, 0xe149, 0x2320, 0x2880, 0xb5b7, 0x3630, 0x1, 0x1);
        gbc.writeMem(0xc0a2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe149, gbc.sp());
        EXPECT(0xc0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a2));
        EXPECT(0x2b, gbc.readMem(0xc0a3));
        // CB 2B 0362
        gbc.setState(0xa9c7, 0x1aad, 0x77d0, 0x6a0a, 0x1850, 0xef1, 0x1, 0x0);
        gbc.writeMem(0xa9c7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c7));
        EXPECT(0x2b, gbc.readMem(0xa9c8));
        // CB 2B 0363
        gbc.setState(0x9c1c, 0x9137, 0x5170, 0x6bd4, 0xbd32, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x9c1c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9137, gbc.sp());
        EXPECT(0x9c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1c));
        EXPECT(0x2b, gbc.readMem(0x9c1d));
        // CB 2B 0364
        gbc.setState(0x80e7, 0xe252, 0x7ab0, 0xee25, 0x1684, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe252, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0x2b, gbc.readMem(0x80e8));
        // CB 2B 0366
        gbc.setState(0x4b4a, 0x2ba2, 0xf590, 0xc724, 0x684e, 0x9f68, 0x1, 0x1);
        gbc.writeMem(0x4b4a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0367
        gbc.setState(0xa3ad, 0xc6b1, 0x2b70, 0xc1c0, 0x6f5b, 0x3bbf, 0x0, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x2b, gbc.readMem(0xa3ae));
        // CB 2B 0368
        gbc.setState(0xc271, 0x143e, 0x7980, 0xc738, 0x55cf, 0xf3d9, 0x1, 0x1);
        gbc.writeMem(0xc271, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x143e, gbc.sp());
        EXPECT(0xc273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc271));
        EXPECT(0x2b, gbc.readMem(0xc272));
        // CB 2B 0369
        gbc.setState(0x1a41, 0xe836, 0xf550, 0xd39, 0xd8d3, 0xa922, 0x0, 0x1);
        gbc.writeMem(0x1a41, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe836, gbc.sp());
        EXPECT(0x1a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 036A
        gbc.setState(0x85c1, 0xf2b4, 0xdfb0, 0x114c, 0xa8d7, 0xe51f, 0x1, 0x1);
        gbc.writeMem(0x85c1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf2b4, gbc.sp());
        EXPECT(0x85c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c1));
        EXPECT(0x2b, gbc.readMem(0x85c2));
        // CB 2B 036B
        gbc.setState(0x51ec, 0xfb6e, 0x2cb0, 0x9316, 0x1073, 0x844, 0x0, 0x0);
        gbc.writeMem(0x51ec, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0x51ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 036C
        gbc.setState(0x140, 0xfb43, 0x1ec0, 0xad80, 0x3726, 0x1ec7, 0x1, 0x1);
        gbc.writeMem(0x140, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0x142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 036D
        gbc.setState(0x35de, 0x5128, 0x9860, 0x347f, 0x6d40, 0x1569, 0x0, 0x1);
        gbc.writeMem(0x35de, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 036E
        gbc.setState(0x311, 0x21cc, 0x15c0, 0x3c06, 0x50bb, 0x941a, 0x1, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 036F
        gbc.setState(0x1d93, 0x7346, 0x31c0, 0x7126, 0x41bf, 0xb779, 0x1, 0x1);
        gbc.writeMem(0x1d93, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7346, gbc.sp());
        EXPECT(0x1d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0370
        gbc.setState(0xe9be, 0x4511, 0x47a0, 0xd02d, 0x6c3, 0xddea, 0x0, 0x1);
        gbc.writeMem(0xe9be, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4511, gbc.sp());
        EXPECT(0xe9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9be));
        EXPECT(0x2b, gbc.readMem(0xe9bf));
        // CB 2B 0371
        gbc.setState(0xbf22, 0xb5ee, 0xa5c0, 0xb513, 0x62ca, 0xacf8, 0x0, 0x1);
        gbc.writeMem(0xbf22, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb5ee, gbc.sp());
        EXPECT(0xbf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf22));
        EXPECT(0x2b, gbc.readMem(0xbf23));
        // CB 2B 0372
        gbc.setState(0x1133, 0x582, 0x8e00, 0x375a, 0x8a33, 0x5910, 0x1, 0x0);
        gbc.writeMem(0x1133, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x1135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0373
        gbc.setState(0xbbc0, 0x3a99, 0xf640, 0xd3a2, 0xce4b, 0x6261, 0x0, 0x1);
        gbc.writeMem(0xbbc0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3a99, gbc.sp());
        EXPECT(0xbbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc0));
        EXPECT(0x2b, gbc.readMem(0xbbc1));
        // CB 2B 0374
        gbc.setState(0x5609, 0x26c7, 0xa5d0, 0xeabc, 0xc839, 0xfa5f, 0x1, 0x1);
        gbc.writeMem(0x5609, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x26c7, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0376
        gbc.setState(0x5ada, 0xcd0, 0xd3a0, 0xbd55, 0xdae, 0x5ff2, 0x0, 0x1);
        gbc.writeMem(0x5ada, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcd0, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0377
        gbc.setState(0x6f9e, 0xaadc, 0xd520, 0xf509, 0x5353, 0x3f24, 0x0, 0x1);
        gbc.writeMem(0x6f9e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0x6fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0378
        gbc.setState(0xafba, 0x3e64, 0x3b90, 0xa373, 0x2b49, 0x2a3c, 0x0, 0x1);
        gbc.writeMem(0xafba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3e64, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafba));
        EXPECT(0x2b, gbc.readMem(0xafbb));
        // CB 2B 0379
        gbc.setState(0x7bf8, 0x4b7d, 0xb800, 0x3d75, 0x2ca6, 0x66a9, 0x1, 0x1);
        gbc.writeMem(0x7bf8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 037A
        gbc.setState(0xe1cd, 0xfd4f, 0xef30, 0x1c6c, 0x84e8, 0xb796, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfd4f, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cd));
        EXPECT(0x2b, gbc.readMem(0xe1ce));
        // CB 2B 037C
        gbc.setState(0xdb9b, 0xb831, 0xf2c0, 0x8655, 0x399c, 0x2fd1, 0x0, 0x1);
        gbc.writeMem(0xdb9b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0x2b, gbc.readMem(0xdb9c));
        // CB 2B 037D
        gbc.setState(0x9ff9, 0x1b56, 0xf750, 0xcbf6, 0xad7c, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0x9ff9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1b56, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff9));
        EXPECT(0x2b, gbc.readMem(0x9ffa));
        // CB 2B 037E
        gbc.setState(0xb536, 0x1288, 0xdbc0, 0xb2c, 0x8f54, 0xd706, 0x0, 0x0);
        gbc.writeMem(0xb536, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1288, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0x2b, gbc.readMem(0xb537));
        // CB 2B 037F
        gbc.setState(0xb5e1, 0xca0c, 0xd970, 0x7cd3, 0xe7e6, 0xe136, 0x0, 0x0);
        gbc.writeMem(0xb5e1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xca0c, gbc.sp());
        EXPECT(0xb5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e1));
        EXPECT(0x2b, gbc.readMem(0xb5e2));
        // CB 2B 0380
        gbc.setState(0x13fd, 0x7263, 0x3300, 0x4ea3, 0x49e2, 0xfae3, 0x1, 0x0);
        gbc.writeMem(0x13fd, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0381
        gbc.setState(0xa21e, 0x1d38, 0x90c0, 0x7b25, 0xc01c, 0xa7dd, 0x1, 0x0);
        gbc.writeMem(0xa21e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1d38, gbc.sp());
        EXPECT(0xa220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21e));
        EXPECT(0x2b, gbc.readMem(0xa21f));
        // CB 2B 0382
        gbc.setState(0xa4f3, 0xc43, 0x6250, 0x22f1, 0xf333, 0x3cd, 0x0, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc43, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0x2b, gbc.readMem(0xa4f4));
        // CB 2B 0383
        gbc.setState(0xc558, 0x168, 0xa6a0, 0xd893, 0xae33, 0xe3e7, 0x1, 0x1);
        gbc.writeMem(0xc558, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x168, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc558));
        EXPECT(0x2b, gbc.readMem(0xc559));
        // CB 2B 0384
        gbc.setState(0x7772, 0xc788, 0x2530, 0xd0d, 0x85a2, 0xb300, 0x1, 0x1);
        gbc.writeMem(0x7772, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0x7774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0385
        gbc.setState(0x19b8, 0x6f64, 0x1dc0, 0xbe23, 0x4b7a, 0x4038, 0x1, 0x0);
        gbc.writeMem(0x19b8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6f64, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0386
        gbc.setState(0x5187, 0xe368, 0xf2e0, 0x3f47, 0x5a9b, 0x43f7, 0x0, 0x1);
        gbc.writeMem(0x5187, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0x5189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0387
        gbc.setState(0xc216, 0xf572, 0xd4b0, 0x5787, 0xb646, 0x1f2c, 0x0, 0x0);
        gbc.writeMem(0xc216, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf572, gbc.sp());
        EXPECT(0xc218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc216));
        EXPECT(0x2b, gbc.readMem(0xc217));
        // CB 2B 0388
        gbc.setState(0x8823, 0xaef3, 0xeb70, 0xb006, 0xf468, 0x4999, 0x0, 0x1);
        gbc.writeMem(0x8823, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8823));
        EXPECT(0x2b, gbc.readMem(0x8824));
        // CB 2B 0389
        gbc.setState(0x3096, 0xccf9, 0xb6c0, 0x75b0, 0x2bc1, 0xe190, 0x1, 0x0);
        gbc.writeMem(0x3096, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xccf9, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 038A
        gbc.setState(0x2507, 0xf1a9, 0x7a80, 0x1aeb, 0x523f, 0x2430, 0x1, 0x1);
        gbc.writeMem(0x2507, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0x2509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 038B
        gbc.setState(0x9d5c, 0xbbdf, 0x3170, 0xf3c2, 0x838d, 0x1c41, 0x1, 0x1);
        gbc.writeMem(0x9d5c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbbdf, gbc.sp());
        EXPECT(0x9d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5c));
        EXPECT(0x2b, gbc.readMem(0x9d5d));
        // CB 2B 038C
        gbc.setState(0xadc4, 0x404f, 0x37c0, 0x1c10, 0x9421, 0x1310, 0x1, 0x1);
        gbc.writeMem(0xadc4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x404f, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc4));
        EXPECT(0x2b, gbc.readMem(0xadc5));
        // CB 2B 038D
        gbc.setState(0x72c, 0xc93, 0x2360, 0xb344, 0xc87, 0x538f, 0x1, 0x0);
        gbc.writeMem(0x72c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc93, gbc.sp());
        EXPECT(0x72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 038E
        gbc.setState(0x124, 0x7747, 0x3170, 0x25f1, 0xca1b, 0xe40a, 0x0, 0x0);
        gbc.writeMem(0x124, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7747, gbc.sp());
        EXPECT(0x126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 038F
        gbc.setState(0x8ca3, 0xc819, 0x2920, 0xa44e, 0x4611, 0x2134, 0x1, 0x1);
        gbc.writeMem(0x8ca3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca3));
        EXPECT(0x2b, gbc.readMem(0x8ca4));
        // CB 2B 0390
        gbc.setState(0x8181, 0x85fc, 0x90d0, 0xdf0a, 0x3344, 0x2a6e, 0x0, 0x1);
        gbc.writeMem(0x8181, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8181));
        EXPECT(0x2b, gbc.readMem(0x8182));
        // CB 2B 0391
        gbc.setState(0xea6a, 0x9dd6, 0x60, 0xa7d3, 0x2bad, 0x1643, 0x0, 0x0);
        gbc.writeMem(0xea6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0xea6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6a));
        EXPECT(0x2b, gbc.readMem(0xea6b));
        // CB 2B 0392
        gbc.setState(0xc224, 0xd080, 0xd7f0, 0x4acc, 0x1cc8, 0x69f9, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc224));
        EXPECT(0x2b, gbc.readMem(0xc225));
        // CB 2B 0393
        gbc.setState(0x77de, 0x74c1, 0x2120, 0xe8a6, 0x45d5, 0x7d99, 0x0, 0x1);
        gbc.writeMem(0x77de, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x74c1, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 0394
        gbc.setState(0xcc6a, 0x73f2, 0x8ba0, 0x6669, 0x9173, 0xd7d6, 0x1, 0x1);
        gbc.writeMem(0xcc6a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x73f2, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6a));
        EXPECT(0x2b, gbc.readMem(0xcc6b));
        // CB 2B 0395
        gbc.setState(0x230, 0x1e68, 0x2ad0, 0x49e6, 0xf278, 0x3363, 0x1, 0x0);
        gbc.writeMem(0x230, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0397
        gbc.setState(0x6f79, 0xe166, 0x8700, 0xec67, 0x4e80, 0xbdc6, 0x1, 0x0);
        gbc.writeMem(0x6f79, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0x6f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 0398
        gbc.setState(0x8255, 0x4bc6, 0x9cd0, 0x2c33, 0xfa93, 0x3cc3, 0x0, 0x1);
        gbc.writeMem(0x8255, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x8257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8255));
        EXPECT(0x2b, gbc.readMem(0x8256));
        // CB 2B 0399
        gbc.setState(0x253, 0xbf04, 0x4cb0, 0x815f, 0xf79d, 0x1b67, 0x1, 0x0);
        gbc.writeMem(0x253, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf04, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 039A
        gbc.setState(0x3d97, 0xabb6, 0x91c0, 0x56a1, 0x9122, 0x5d59, 0x1, 0x0);
        gbc.writeMem(0x3d97, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xabb6, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 039B
        gbc.setState(0x564f, 0x5ef5, 0x4f0, 0x899e, 0xbebf, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5ef5, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 039C
        gbc.setState(0xd0ba, 0x358, 0x63f0, 0xbbf0, 0x375a, 0x5e41, 0x0, 0x1);
        gbc.writeMem(0xd0ba, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x358, gbc.sp());
        EXPECT(0xd0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ba));
        EXPECT(0x2b, gbc.readMem(0xd0bb));
        // CB 2B 039D
        gbc.setState(0x700b, 0xccde, 0x8d00, 0x2d09, 0xed30, 0x30a5, 0x1, 0x1);
        gbc.writeMem(0x700b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0x700d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 039E
        gbc.setState(0xa2fc, 0x3f9d, 0x2da0, 0xf9fa, 0xfa28, 0x14f5, 0x0, 0x0);
        gbc.writeMem(0xa2fc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0xa2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fc));
        EXPECT(0x2b, gbc.readMem(0xa2fd));
        // CB 2B 039F
        gbc.setState(0xc7, 0x11e2, 0xfaa0, 0x2f50, 0xd554, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0xc7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03A0
        gbc.setState(0xe39c, 0x508, 0x5e50, 0xe06c, 0xb033, 0xa491, 0x1, 0x1);
        gbc.writeMem(0xe39c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x508, gbc.sp());
        EXPECT(0xe39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39c));
        EXPECT(0x2b, gbc.readMem(0xe39d));
        // CB 2B 03A1
        gbc.setState(0x7b58, 0xaa5a, 0xd370, 0xc773, 0x81d3, 0xd8fb, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa5a, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03A2
        gbc.setState(0x5db9, 0xe402, 0xe470, 0xd808, 0xa5a0, 0x29f5, 0x1, 0x1);
        gbc.writeMem(0x5db9, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe402, gbc.sp());
        EXPECT(0x5dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03A3
        gbc.setState(0x433b, 0x2dcc, 0x6420, 0xd0f2, 0xab61, 0xca5f, 0x1, 0x0);
        gbc.writeMem(0x433b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03A4
        gbc.setState(0x38d7, 0xa214, 0x4e30, 0xfc67, 0x3975, 0x54fb, 0x0, 0x1);
        gbc.writeMem(0x38d7, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03A6
        gbc.setState(0x5209, 0x627c, 0x130, 0x29a8, 0x9ca, 0xf26f, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x627c, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03A7
        gbc.setState(0x2a76, 0x1670, 0x6110, 0x6576, 0xe6cc, 0xfd43, 0x1, 0x1);
        gbc.writeMem(0x2a76, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1670, gbc.sp());
        EXPECT(0x2a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03A8
        gbc.setState(0xe950, 0x9738, 0xac30, 0xc6f8, 0x42cb, 0x4862, 0x0, 0x0);
        gbc.writeMem(0xe950, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9738, gbc.sp());
        EXPECT(0xe952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe950));
        EXPECT(0x2b, gbc.readMem(0xe951));
        // CB 2B 03A9
        gbc.setState(0xb102, 0x9ffa, 0xce80, 0x9733, 0x9fd3, 0xb19b, 0x0, 0x1);
        gbc.writeMem(0xb102, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9ffa, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb102));
        EXPECT(0x2b, gbc.readMem(0xb103));
        // CB 2B 03AA
        gbc.setState(0xb608, 0x43da, 0x5d10, 0x16, 0x8cc2, 0x5897, 0x1, 0x0);
        gbc.writeMem(0xb608, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x43da, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb608));
        EXPECT(0x2b, gbc.readMem(0xb609));
        // CB 2B 03AB
        gbc.setState(0x60be, 0xd076, 0xc100, 0x2c1d, 0xec78, 0x7d81, 0x1, 0x0);
        gbc.writeMem(0x60be, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd076, gbc.sp());
        EXPECT(0x60c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03AC
        gbc.setState(0x5c0d, 0xd747, 0x4090, 0x619b, 0xc59e, 0x93bf, 0x0, 0x0);
        gbc.writeMem(0x5c0d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd747, gbc.sp());
        EXPECT(0x5c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03AD
        gbc.setState(0x9f15, 0x56f5, 0xee30, 0xc46, 0x77d, 0xd37, 0x0, 0x0);
        gbc.writeMem(0x9f15, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0x9f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f15));
        EXPECT(0x2b, gbc.readMem(0x9f16));
        // CB 2B 03AE
        gbc.setState(0xc64b, 0x70a3, 0xf490, 0xb328, 0xb04a, 0x12ee, 0x0, 0x0);
        gbc.writeMem(0xc64b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x70a3, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0x2b, gbc.readMem(0xc64c));
        // CB 2B 03AF
        gbc.setState(0x9a23, 0x3a6e, 0x47c0, 0xb595, 0xc436, 0xf016, 0x0, 0x0);
        gbc.writeMem(0x9a23, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3a6e, gbc.sp());
        EXPECT(0x9a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a23));
        EXPECT(0x2b, gbc.readMem(0x9a24));
        // CB 2B 03B0
        gbc.setState(0xb278, 0x4b3, 0x10f0, 0x5c1b, 0x1419, 0xc694, 0x0, 0x0);
        gbc.writeMem(0xb278, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0xb27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb278));
        EXPECT(0x2b, gbc.readMem(0xb279));
        // CB 2B 03B1
        gbc.setState(0x29ab, 0x80f, 0x34d0, 0x6c5b, 0xaaba, 0x124, 0x1, 0x0);
        gbc.writeMem(0x29ab, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03B2
        gbc.setState(0x5550, 0xe685, 0x5aa0, 0xec4a, 0xa66b, 0x399d, 0x0, 0x0);
        gbc.writeMem(0x5550, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03B3
        gbc.setState(0x9d5f, 0x1eac, 0xed20, 0x562d, 0x7ed6, 0x3ac, 0x1, 0x1);
        gbc.writeMem(0x9d5f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1eac, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0x2b, gbc.readMem(0x9d60));
        // CB 2B 03B4
        gbc.setState(0x21ca, 0x541f, 0xfe60, 0x569f, 0x52d6, 0x30f, 0x1, 0x0);
        gbc.writeMem(0x21ca, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0x21cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03B5
        gbc.setState(0x5931, 0x4f6c, 0xd5a0, 0xa8eb, 0x4c89, 0x9acb, 0x1, 0x1);
        gbc.writeMem(0x5931, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4f6c, gbc.sp());
        EXPECT(0x5933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03B6
        gbc.setState(0x8c72, 0x35df, 0xd500, 0x7172, 0xe39d, 0xc36c, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35df, gbc.sp());
        EXPECT(0x8c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c72));
        EXPECT(0x2b, gbc.readMem(0x8c73));
        // CB 2B 03B7
        gbc.setState(0x807a, 0x7d52, 0xa090, 0xc44d, 0xa1b9, 0x5198, 0x1, 0x0);
        gbc.writeMem(0x807a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0x807c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807a));
        EXPECT(0x2b, gbc.readMem(0x807b));
        // CB 2B 03B8
        gbc.setState(0x410e, 0x1c9, 0x1e0, 0x90b3, 0x74bd, 0xcd68, 0x1, 0x0);
        gbc.writeMem(0x410e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1c9, gbc.sp());
        EXPECT(0x4110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03B9
        gbc.setState(0x620e, 0xab37, 0x1c30, 0x13d0, 0xb716, 0xb845, 0x1, 0x1);
        gbc.writeMem(0x620e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0x6210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03BB
        gbc.setState(0xaad3, 0x1503, 0x90e0, 0xb49a, 0xa02e, 0x2b78, 0x1, 0x0);
        gbc.writeMem(0xaad3, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0x2b, gbc.readMem(0xaad4));
        // CB 2B 03BC
        gbc.setState(0x7a3c, 0x4260, 0x9e80, 0xd793, 0x2b74, 0xf05a, 0x1, 0x1);
        gbc.writeMem(0x7a3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4260, gbc.sp());
        EXPECT(0x7a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03BD
        gbc.setState(0x29d1, 0x528f, 0xa320, 0x7db4, 0xec62, 0x7358, 0x1, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0x29d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03BF
        gbc.setState(0x9903, 0xc6c6, 0x5310, 0xc085, 0x8d05, 0x5bd, 0x0, 0x0);
        gbc.writeMem(0x9903, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc6c6, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9903));
        EXPECT(0x2b, gbc.readMem(0x9904));
        // CB 2B 03C0
        gbc.setState(0xa2d6, 0x1603, 0xe550, 0x21b4, 0xec1e, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0xa2d6, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1603, gbc.sp());
        EXPECT(0xa2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d6));
        EXPECT(0x2b, gbc.readMem(0xa2d7));
        // CB 2B 03C1
        gbc.setState(0x589a, 0x7a11, 0x2880, 0x2012, 0x181e, 0x6cfc, 0x0, 0x1);
        gbc.writeMem(0x589a, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03C2
        gbc.setState(0x677e, 0x3d21, 0x82e0, 0x5946, 0xf658, 0xdec4, 0x0, 0x0);
        gbc.writeMem(0x677e, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x6780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03C3
        gbc.setState(0xb997, 0x3579, 0x26d0, 0x50a4, 0x8c0, 0x32bf, 0x0, 0x0);
        gbc.writeMem(0xb997, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3579, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb997));
        EXPECT(0x2b, gbc.readMem(0xb998));
        // CB 2B 03C4
        gbc.setState(0xa755, 0x11cd, 0xa360, 0x7c04, 0x2deb, 0x3cb5, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x11cd, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa755));
        EXPECT(0x2b, gbc.readMem(0xa756));
        // CB 2B 03C5
        gbc.setState(0xa5cf, 0xc5db, 0x78e0, 0xa130, 0x16f0, 0x1fea, 0x1, 0x0);
        gbc.writeMem(0xa5cf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc5db, gbc.sp());
        EXPECT(0xa5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cf));
        EXPECT(0x2b, gbc.readMem(0xa5d0));
        // CB 2B 03C6
        gbc.setState(0xec2, 0xece5, 0xd10, 0xdbeb, 0xe474, 0x37b9, 0x0, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xece5, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03C7
        gbc.setState(0x1d90, 0xde1e, 0xee20, 0xaba4, 0xc158, 0xfd87, 0x1, 0x0);
        gbc.writeMem(0x1d90, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0x1d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03C8
        gbc.setState(0x55a4, 0x88dc, 0x2b70, 0xbc8a, 0xf2d8, 0xb841, 0x0, 0x1);
        gbc.writeMem(0x55a4, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03C9
        gbc.setState(0x29dc, 0xa8f2, 0x7410, 0x9cfc, 0xd9e5, 0x6adb, 0x1, 0x0);
        gbc.writeMem(0x29dc, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa8f2, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03CA
        gbc.setState(0xa56, 0xa0f2, 0x6350, 0x990b, 0xa577, 0x63b, 0x1, 0x1);
        gbc.writeMem(0xa56, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa0f2, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03CB
        gbc.setState(0x396b, 0xd984, 0x7250, 0x42e8, 0x3f4a, 0xd754, 0x1, 0x0);
        gbc.writeMem(0x396b, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0x396d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03CC
        gbc.setState(0xce9d, 0xbd6e, 0x2630, 0xfa59, 0x4033, 0x9d78, 0x0, 0x0);
        gbc.writeMem(0xce9d, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0xce9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9d));
        EXPECT(0x2b, gbc.readMem(0xce9e));
        // CB 2B 03CD
        gbc.setState(0x9b56, 0xef8b, 0x4180, 0x4df1, 0x9a8b, 0xdb92, 0x1, 0x1);
        gbc.writeMem(0x9b56, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xef8b, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b56));
        EXPECT(0x2b, gbc.readMem(0x9b57));
        // CB 2B 03CE
        gbc.setState(0x4578, 0xf4e, 0x1630, 0xe3e0, 0xa28d, 0x4514, 0x1, 0x1);
        gbc.writeMem(0x4578, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03CF
        gbc.setState(0x1b34, 0xeaf8, 0xd0a0, 0x5b56, 0x28e4, 0x61d9, 0x1, 0x1);
        gbc.writeMem(0x1b34, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x1b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03D0
        gbc.setState(0x3a26, 0x304a, 0xa6a0, 0xc404, 0xa4, 0xf513, 0x1, 0x1);
        gbc.writeMem(0x3a26, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x304a, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03D1
        gbc.setState(0x8750, 0xc19e, 0x71d0, 0x64eb, 0x748d, 0xdab8, 0x0, 0x1);
        gbc.writeMem(0x8750, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc19e, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0x2b, gbc.readMem(0x8751));
        // CB 2B 03D2
        gbc.setState(0x7313, 0xa465, 0x1220, 0xe92f, 0x7529, 0x8865, 0x0, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa465, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03D3
        gbc.setState(0xa154, 0x6d5a, 0xc070, 0xc32b, 0x698c, 0xa236, 0x0, 0x0);
        gbc.writeMem(0xa154, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6d5a, gbc.sp());
        EXPECT(0xa156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa154));
        EXPECT(0x2b, gbc.readMem(0xa155));
        // CB 2B 03D4
        gbc.setState(0xe262, 0xcebb, 0xc580, 0x9dd9, 0x1662, 0xec3e, 0x0, 0x1);
        gbc.writeMem(0xe262, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0xe264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe262));
        EXPECT(0x2b, gbc.readMem(0xe263));
        // CB 2B 03D5
        gbc.setState(0x7422, 0xd200, 0x25a0, 0x4661, 0xd60e, 0x461d, 0x1, 0x1);
        gbc.writeMem(0x7422, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0x7424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03D6
        gbc.setState(0x56f1, 0x610d, 0x1cc0, 0x5154, 0x909c, 0x80f9, 0x0, 0x1);
        gbc.writeMem(0x56f1, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03D8
        gbc.setState(0x4f73, 0x3646, 0x1750, 0x28d0, 0xc58f, 0xc15c, 0x1, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3646, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03D9
        gbc.setState(0x5591, 0x28a8, 0x7ff0, 0x264c, 0x78de, 0xb7ba, 0x1, 0x0);
        gbc.writeMem(0x5591, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x5593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2B 03DA
        gbc.setState(0xdb99, 0xd770, 0x4f00, 0x509c, 0xa247, 0xe084, 0x1, 0x1);
        gbc.writeMem(0xdb99, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd770, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb99));
        EXPECT(0x2b, gbc.readMem(0xdb9a));
        // CB 2B 03DB
        gbc.setState(0x2e18, 0xf10a, 0xf1d0, 0xd28c, 0xdac9, 0x5e2a, 0x1, 0x0);
        gbc.writeMem(0x2e18, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0x2e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03DC
        gbc.setState(0xc5c0, 0x876d, 0xce60, 0xadb0, 0x986d, 0x9444, 0x1, 0x1);
        gbc.writeMem(0xc5c0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x876d, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c0));
        EXPECT(0x2b, gbc.readMem(0xc5c1));
        // CB 2B 03DD
        gbc.setState(0x2940, 0x82b2, 0x2a40, 0x13be, 0x6ee3, 0x69db, 0x1, 0x0);
        gbc.writeMem(0x2940, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x82b2, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03DE
        gbc.setState(0x4423, 0x2c1d, 0xd200, 0x4d82, 0x8faf, 0x6f7c, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2c1d, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03DF
        gbc.setState(0xcbd0, 0x7c6, 0xcbe0, 0x32c4, 0x3ae1, 0xd79e, 0x1, 0x0);
        gbc.writeMem(0xcbd0, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c6, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd0));
        EXPECT(0x2b, gbc.readMem(0xcbd1));
        // CB 2B 03E0
        gbc.setState(0xba3c, 0xe2e2, 0x6a50, 0x4160, 0xf173, 0x9cfc, 0x1, 0x0);
        gbc.writeMem(0xba3c, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0xba3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3c));
        EXPECT(0x2b, gbc.readMem(0xba3d));
        // CB 2B 03E1
        gbc.setState(0xaf35, 0xac70, 0x98b0, 0x869a, 0x5e54, 0xd537, 0x1, 0x0);
        gbc.writeMem(0xaf35, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xac70, gbc.sp());
        EXPECT(0xaf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf35));
        EXPECT(0x2b, gbc.readMem(0xaf36));
        // CB 2B 03E2
        gbc.setState(0xed8f, 0x484e, 0xa40, 0x18b4, 0x4984, 0x78ea, 0x0, 0x0);
        gbc.writeMem(0xed8f, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x484e, gbc.sp());
        EXPECT(0xed91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8f));
        EXPECT(0x2b, gbc.readMem(0xed90));
        // CB 2B 03E3
        gbc.setState(0xaedf, 0xfbac, 0x870, 0xb1d, 0x10d, 0x4183, 0x0, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedf));
        EXPECT(0x2b, gbc.readMem(0xaee0));
        // CB 2B 03E4
        gbc.setState(0x7f95, 0x903c, 0xb270, 0x6ec0, 0xdcfb, 0xa74a, 0x1, 0x0);
        gbc.writeMem(0x7f95, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2B 03E5
        gbc.setState(0x84a8, 0xbbf0, 0x93d0, 0xfb2, 0x3695, 0xb615, 0x1, 0x1);
        gbc.writeMem(0x84a8, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbbf0, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0x2b, gbc.readMem(0x84a9));
        // CB 2B 03E6
        gbc.setState(0xa737, 0xd03, 0x15d0, 0x2297, 0xf8e9, 0xbf80, 0x0, 0x1);
        gbc.writeMem(0xa737, { 0xcb, 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa737));
        EXPECT(0x2b, gbc.readMem(0xa738));
    }
