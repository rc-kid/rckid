    TEST(gbcemu, opcode_82) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 82 0000
        gbc.setState(0xde05, 0x2494, 0xc710, 0x9a01, 0x5dc3, 0x39c7, 0x0, 0x1);
        gbc.writeMem(0xde05, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0xde06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xde05));
        // 82 0001
        gbc.setState(0xe284, 0x86ba, 0x87a0, 0x87dd, 0x4fde, 0x5c9b, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0x82 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x86ba, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe284));
        // 82 0002
        gbc.setState(0x779c, 0xc4aa, 0x22e0, 0xd938, 0xb19, 0x1c55, 0x0, 0x1);
        gbc.writeMem(0x779c, { 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4aa, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0003
        gbc.setState(0x6258, 0x446, 0x1cf0, 0xa9f2, 0x1070, 0xc2be, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0004
        gbc.setState(0xc6da, 0xeab7, 0x11e0, 0x47a5, 0xd8d3, 0x67be, 0x0, 0x0);
        gbc.writeMem(0xc6da, { 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0xc6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc6da));
        // 82 0005
        gbc.setState(0x266a, 0x9442, 0x8e40, 0xae55, 0xbb42, 0xcc66, 0x0, 0x1);
        gbc.writeMem(0x266a, { 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9442, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0006
        gbc.setState(0xd4d0, 0x1d01, 0x2c50, 0xf07c, 0xcf1d, 0xc8e0, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0x82 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1d01, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd4d0));
        // 82 0007
        gbc.setState(0x75bd, 0x4f1, 0x5630, 0xeb5d, 0x1ea3, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x75bd, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0x75be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0008
        gbc.setState(0x40b5, 0xee21, 0x1c90, 0xa60b, 0x58e4, 0x6a9d, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0009
        gbc.setState(0x1282, 0x672f, 0xa440, 0x1d6c, 0x9fb9, 0xd81a, 0x1, 0x0);
        gbc.writeMem(0x1282, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x672f, gbc.sp());
        EXPECT(0x1283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 000A
        gbc.setState(0x79f0, 0x7a4f, 0x2480, 0x692b, 0xefba, 0x7979, 0x0, 0x0);
        gbc.writeMem(0x79f0, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 000B
        gbc.setState(0x5e9c, 0xa65e, 0xf670, 0x976f, 0x5f06, 0xe1f, 0x0, 0x0);
        gbc.writeMem(0x5e9c, { 0x82 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa65e, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 000C
        gbc.setState(0x7e1e, 0x7f54, 0x68c0, 0xc048, 0x6ffa, 0x6612, 0x1, 0x1);
        gbc.writeMem(0x7e1e, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 000D
        gbc.setState(0xa6, 0x7f00, 0x6ef0, 0xca99, 0x3902, 0x36df, 0x0, 0x0);
        gbc.writeMem(0xa6, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 000E
        gbc.setState(0x4eb6, 0xfac9, 0x7b50, 0x5e35, 0xd39b, 0x21f6, 0x0, 0x0);
        gbc.writeMem(0x4eb6, { 0x82 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 000F
        gbc.setState(0xe9f6, 0x81c2, 0x9da0, 0x2fe0, 0x3a27, 0xef2d, 0x0, 0x1);
        gbc.writeMem(0xe9f6, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x81c2, gbc.sp());
        EXPECT(0xe9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe9f6));
        // 82 0010
        gbc.setState(0x4044, 0x57f8, 0x9df0, 0x8962, 0xe872, 0x58a6, 0x1, 0x0);
        gbc.writeMem(0x4044, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x57f8, gbc.sp());
        EXPECT(0x4045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0011
        gbc.setState(0x834c, 0x15a6, 0xb8a0, 0x7f65, 0xf455, 0xb1, 0x1, 0x0);
        gbc.writeMem(0x834c, { 0x82 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x15a6, gbc.sp());
        EXPECT(0x834d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x834c));
        // 82 0013
        gbc.setState(0xa4d6, 0x5c69, 0xb760, 0xf2b5, 0xee1, 0x2719, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0x82 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5c69, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa4d6));
        // 82 0014
        gbc.setState(0xe770, 0xe1b8, 0x97c0, 0xd7fd, 0xe428, 0xd431, 0x0, 0x1);
        gbc.writeMem(0xe770, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe1b8, gbc.sp());
        EXPECT(0xe771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe770));
        // 82 0015
        gbc.setState(0x26bc, 0x66a6, 0x4320, 0x89cf, 0x6d08, 0x6a8b, 0x1, 0x1);
        gbc.writeMem(0x26bc, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0016
        gbc.setState(0x7c23, 0x5835, 0x3320, 0x5a7d, 0x6712, 0x1a96, 0x1, 0x0);
        gbc.writeMem(0x7c23, { 0x82 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0017
        gbc.setState(0x42c4, 0x8e3f, 0xfb80, 0xea1d, 0x1d96, 0xdc0c, 0x0, 0x1);
        gbc.writeMem(0x42c4, { 0x82 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0x42c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0019
        gbc.setState(0xce16, 0x8c04, 0x7170, 0xc557, 0xc06c, 0x17, 0x0, 0x0);
        gbc.writeMem(0xce16, { 0x82 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8c04, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xce16));
        // 82 001A
        gbc.setState(0xc0e, 0xa7f4, 0x4210, 0x5d07, 0x85d2, 0x444f, 0x0, 0x1);
        gbc.writeMem(0xc0e, { 0x82 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa7f4, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 001B
        gbc.setState(0x7e67, 0xa07f, 0xd7c0, 0xfe6f, 0xc453, 0x5501, 0x1, 0x0);
        gbc.writeMem(0x7e67, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa07f, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 001D
        gbc.setState(0x554a, 0xed60, 0xb1d0, 0xfad2, 0x9edc, 0x149d, 0x0, 0x0);
        gbc.writeMem(0x554a, { 0x82 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xed60, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 001E
        gbc.setState(0x621e, 0xd421, 0x8df0, 0xc0a5, 0x3ff6, 0xc1b9, 0x1, 0x1);
        gbc.writeMem(0x621e, { 0x82 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0x621f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 001F
        gbc.setState(0x7a56, 0x5299, 0xc740, 0x1fc9, 0x9b66, 0xc7c2, 0x0, 0x1);
        gbc.writeMem(0x7a56, { 0x82 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0x7a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0020
        gbc.setState(0xcd9c, 0xc1be, 0xd130, 0x8eb2, 0xebd, 0xa15a, 0x0, 0x0);
        gbc.writeMem(0xcd9c, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcd9c));
        // 82 0021
        gbc.setState(0x9ae0, 0x21c3, 0xc3a0, 0x64ad, 0x8da1, 0x69ea, 0x0, 0x1);
        gbc.writeMem(0x9ae0, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x21c3, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9ae0));
        // 82 0022
        gbc.setState(0x923a, 0x8d72, 0xbd70, 0x552d, 0x81df, 0x3a36, 0x1, 0x0);
        gbc.writeMem(0x923a, { 0x82 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8d72, gbc.sp());
        EXPECT(0x923b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x923a));
        // 82 0023
        gbc.setState(0x3559, 0x18db, 0x4e60, 0xe914, 0x6b0d, 0x5213, 0x1, 0x1);
        gbc.writeMem(0x3559, { 0x82 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x18db, gbc.sp());
        EXPECT(0x355a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0024
        gbc.setState(0xe6e2, 0x74de, 0x2190, 0xdf6d, 0xb002, 0x4334, 0x0, 0x0);
        gbc.writeMem(0xe6e2, { 0x82 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x74de, gbc.sp());
        EXPECT(0xe6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe6e2));
        // 82 0025
        gbc.setState(0xdc28, 0x76fc, 0x5b70, 0xf186, 0xe261, 0x7ee1, 0x1, 0x1);
        gbc.writeMem(0xdc28, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0xdc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdc28));
        // 82 0026
        gbc.setState(0x7fe2, 0x8d34, 0x18c0, 0xe5f, 0x2536, 0x51dd, 0x1, 0x1);
        gbc.writeMem(0x7fe2, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8d34, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0027
        gbc.setState(0x3c9a, 0x78a6, 0x3a70, 0x8bb0, 0x79db, 0x696a, 0x0, 0x1);
        gbc.writeMem(0x3c9a, { 0x82 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0x3c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0028
        gbc.setState(0xaf77, 0xfa65, 0x870, 0x7e5f, 0xb2, 0xcd7b, 0x0, 0x0);
        gbc.writeMem(0xaf77, { 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xaf77));
        // 82 0029
        gbc.setState(0xcd4b, 0x58ff, 0x9c60, 0xc718, 0x1083, 0xe970, 0x0, 0x1);
        gbc.writeMem(0xcd4b, { 0x82 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x58ff, gbc.sp());
        EXPECT(0xcd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcd4b));
        // 82 002A
        gbc.setState(0x420a, 0xf4a2, 0x7c90, 0xdae8, 0xe477, 0x8183, 0x0, 0x0);
        gbc.writeMem(0x420a, { 0x82 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf4a2, gbc.sp());
        EXPECT(0x420b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 002B
        gbc.setState(0x77b5, 0xe2cd, 0x1bf0, 0x871a, 0x5257, 0x4b01, 0x0, 0x0);
        gbc.writeMem(0x77b5, { 0x82 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0x77b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 002C
        gbc.setState(0xac13, 0xf360, 0x2c80, 0x1d70, 0x2526, 0x50fc, 0x0, 0x0);
        gbc.writeMem(0xac13, { 0x82 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf360, gbc.sp());
        EXPECT(0xac14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xac13));
        // 82 002D
        gbc.setState(0xdb10, 0x37fe, 0x1540, 0xb62c, 0x4584, 0x2430, 0x1, 0x0);
        gbc.writeMem(0xdb10, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x37fe, gbc.sp());
        EXPECT(0xdb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdb10));
        // 82 002E
        gbc.setState(0x59ef, 0x7659, 0x10a0, 0x58c5, 0x8630, 0xba50, 0x0, 0x1);
        gbc.writeMem(0x59ef, { 0x82 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7659, gbc.sp());
        EXPECT(0x59f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 002F
        gbc.setState(0x84d9, 0x30ed, 0x34c0, 0xa47d, 0xb455, 0x5094, 0x0, 0x1);
        gbc.writeMem(0x84d9, { 0x82 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x84da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x84d9));
        // 82 0030
        gbc.setState(0x67a9, 0xc7f0, 0x1fc0, 0x6cc4, 0x69d5, 0x686, 0x1, 0x0);
        gbc.writeMem(0x67a9, { 0x82 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x67aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0031
        gbc.setState(0x90a9, 0x146c, 0x36a0, 0xc575, 0xdd42, 0x2d06, 0x0, 0x0);
        gbc.writeMem(0x90a9, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x146c, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90a9));
        // 82 0032
        gbc.setState(0x1c6f, 0x9bc6, 0xbd30, 0xcebd, 0x4896, 0x3807, 0x1, 0x1);
        gbc.writeMem(0x1c6f, { 0x82 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0x1c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0033
        gbc.setState(0x769e, 0x16ce, 0x4610, 0x9b95, 0xde4b, 0x70d9, 0x0, 0x1);
        gbc.writeMem(0x769e, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0x769f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0034
        gbc.setState(0x7acd, 0x8f6c, 0x9600, 0xf742, 0xfe11, 0x883e, 0x0, 0x1);
        gbc.writeMem(0x7acd, { 0x82 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8f6c, gbc.sp());
        EXPECT(0x7ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0035
        gbc.setState(0x53b5, 0x7a72, 0x5f70, 0x84de, 0xd351, 0xb3f1, 0x1, 0x0);
        gbc.writeMem(0x53b5, { 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7a72, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0036
        gbc.setState(0x486f, 0xb26e, 0xb430, 0xa6e0, 0xcf93, 0xdc83, 0x1, 0x0);
        gbc.writeMem(0x486f, { 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb26e, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0037
        gbc.setState(0x9e6e, 0xd49f, 0xf740, 0x9ec6, 0x18b3, 0x8bc8, 0x0, 0x1);
        gbc.writeMem(0x9e6e, { 0x82 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd49f, gbc.sp());
        EXPECT(0x9e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9e6e));
        // 82 0038
        gbc.setState(0xb469, 0x6a0a, 0xb6e0, 0x226f, 0x37a0, 0x836b, 0x0, 0x1);
        gbc.writeMem(0xb469, { 0x82 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb469));
        // 82 0039
        gbc.setState(0x13, 0x86b2, 0x8e20, 0x31d, 0x4d02, 0x2830, 0x0, 0x1);
        gbc.writeMem(0x13, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0x14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 003A
        gbc.setState(0xbb4b, 0x57b3, 0x4b70, 0x3bdf, 0x10e7, 0x5b5a, 0x1, 0x1);
        gbc.writeMem(0xbb4b, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x57b3, gbc.sp());
        EXPECT(0xbb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb4b));
        // 82 003B
        gbc.setState(0xbb9d, 0x4262, 0x6d10, 0xf5c7, 0x215f, 0xdbd0, 0x0, 0x1);
        gbc.writeMem(0xbb9d, { 0x82 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb9d));
        // 82 003C
        gbc.setState(0x81e4, 0xa31c, 0xf570, 0x7829, 0xd9cb, 0x9828, 0x1, 0x0);
        gbc.writeMem(0x81e4, { 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa31c, gbc.sp());
        EXPECT(0x81e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x81e4));
        // 82 003E
        gbc.setState(0x866b, 0x9988, 0xc600, 0xa243, 0xd4d9, 0xa885, 0x0, 0x1);
        gbc.writeMem(0x866b, { 0x82 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9988, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x866b));
        // 82 003F
        gbc.setState(0x88c6, 0xd371, 0xcbc0, 0x1917, 0x8fef, 0x6e1d, 0x1, 0x1);
        gbc.writeMem(0x88c6, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd371, gbc.sp());
        EXPECT(0x88c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x88c6));
        // 82 0040
        gbc.setState(0x4577, 0xe77d, 0xbd0, 0x8c91, 0x33f3, 0x793f, 0x1, 0x0);
        gbc.writeMem(0x4577, { 0x82 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe77d, gbc.sp());
        EXPECT(0x4578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0041
        gbc.setState(0x228a, 0x5d77, 0xffb0, 0xe343, 0x1630, 0x89e8, 0x1, 0x0);
        gbc.writeMem(0x228a, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5d77, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0042
        gbc.setState(0x8458, 0x953a, 0x8650, 0xc639, 0xe3e6, 0x975c, 0x0, 0x1);
        gbc.writeMem(0x8458, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8458));
        // 82 0043
        gbc.setState(0x9ad9, 0xaa9a, 0x6fa0, 0x49e2, 0x8ff4, 0x651e, 0x0, 0x1);
        gbc.writeMem(0x9ad9, { 0x82 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9ad9));
        // 82 0044
        gbc.setState(0x68, 0x8794, 0xcdb0, 0x1cb2, 0xa31f, 0x5fa, 0x0, 0x1);
        gbc.writeMem(0x68, { 0x82 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0045
        gbc.setState(0xe57a, 0xe44c, 0x5d00, 0xf85b, 0x7603, 0x4923, 0x1, 0x1);
        gbc.writeMem(0xe57a, { 0x82 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe44c, gbc.sp());
        EXPECT(0xe57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe57a));
        // 82 0046
        gbc.setState(0x53e5, 0xed81, 0xe7a0, 0x4904, 0x3714, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0x53e5, { 0x82 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0x53e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0047
        gbc.setState(0x277e, 0x35a, 0x8fd0, 0x7353, 0xb0a0, 0x919c, 0x0, 0x1);
        gbc.writeMem(0x277e, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0048
        gbc.setState(0xdabf, 0x7833, 0xc850, 0x74, 0x1fe4, 0x920d, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7833, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdabf));
        // 82 0049
        gbc.setState(0xed22, 0x3039, 0x2b70, 0x393a, 0x8a77, 0xa0b4, 0x1, 0x0);
        gbc.writeMem(0xed22, { 0x82 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xed22));
        // 82 004A
        gbc.setState(0x8648, 0x16c4, 0x6f30, 0xadbe, 0x1b8c, 0x927a, 0x0, 0x0);
        gbc.writeMem(0x8648, { 0x82 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0x8649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8648));
        // 82 004B
        gbc.setState(0x39ed, 0x2def, 0xd460, 0x541e, 0x9041, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0x39ed, { 0x82 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2def, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 004C
        gbc.setState(0x4fbb, 0x9c90, 0xdc30, 0x5852, 0x4523, 0x1703, 0x1, 0x0);
        gbc.writeMem(0x4fbb, { 0x82 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9c90, gbc.sp());
        EXPECT(0x4fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 004D
        gbc.setState(0x3df2, 0x1276, 0xd920, 0x6de9, 0x9f6c, 0xdb2f, 0x0, 0x1);
        gbc.writeMem(0x3df2, { 0x82 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1276, gbc.sp());
        EXPECT(0x3df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 004E
        gbc.setState(0xc152, 0xbc2c, 0x1510, 0x7409, 0x968f, 0x4157, 0x0, 0x0);
        gbc.writeMem(0xc152, { 0x82 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0xc153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc152));
        // 82 004F
        gbc.setState(0x19bd, 0xeb15, 0xe920, 0x4cea, 0x3c92, 0x178, 0x1, 0x0);
        gbc.writeMem(0x19bd, { 0x82 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeb15, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0050
        gbc.setState(0xb1c7, 0x4e6e, 0x9d30, 0x8cf7, 0x1340, 0xff28, 0x0, 0x0);
        gbc.writeMem(0xb1c7, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4e6e, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb1c7));
        // 82 0051
        gbc.setState(0x370a, 0x4d1d, 0x8b70, 0x987a, 0xc3ee, 0xdc03, 0x0, 0x1);
        gbc.writeMem(0x370a, { 0x82 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0x370b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0052
        gbc.setState(0x61b7, 0x950a, 0x7160, 0xf2b1, 0xee91, 0xc86a, 0x0, 0x0);
        gbc.writeMem(0x61b7, { 0x82 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0053
        gbc.setState(0x29a4, 0x3260, 0x5d80, 0xe0a6, 0x50a6, 0xa727, 0x0, 0x0);
        gbc.writeMem(0x29a4, { 0x82 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x29a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0054
        gbc.setState(0x2611, 0xef5e, 0xaff0, 0x8bb6, 0xc26a, 0xc63a, 0x0, 0x1);
        gbc.writeMem(0x2611, { 0x82 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xef5e, gbc.sp());
        EXPECT(0x2612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0056
        gbc.setState(0xbbaa, 0xc8b9, 0xeb00, 0x71ff, 0x1b40, 0xd617, 0x1, 0x0);
        gbc.writeMem(0xbbaa, { 0x82 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbbaa));
        // 82 0057
        gbc.setState(0x1703, 0x987d, 0x6fc0, 0x5adc, 0xf4dd, 0x9ea2, 0x0, 0x1);
        gbc.writeMem(0x1703, { 0x82 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x987d, gbc.sp());
        EXPECT(0x1704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0058
        gbc.setState(0xa5a8, 0x1522, 0x97c0, 0x9f37, 0xd403, 0xe0e1, 0x0, 0x0);
        gbc.writeMem(0xa5a8, { 0x82 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1522, gbc.sp());
        EXPECT(0xa5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa5a8));
        // 82 0059
        gbc.setState(0xd14b, 0x25d, 0x4a20, 0xe848, 0x7370, 0x2729, 0x1, 0x0);
        gbc.writeMem(0xd14b, { 0x82 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xd14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd14b));
        // 82 005A
        gbc.setState(0x15aa, 0x699f, 0x7850, 0x1be1, 0x77a9, 0xfdbd, 0x0, 0x0);
        gbc.writeMem(0x15aa, { 0x82 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x699f, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 005B
        gbc.setState(0x1760, 0x14f7, 0x1ee0, 0xecc6, 0xdc87, 0x5648, 0x1, 0x1);
        gbc.writeMem(0x1760, { 0x82 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0x1761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 005C
        gbc.setState(0x6d97, 0xe2ee, 0x16a0, 0x7565, 0xbb5c, 0x91f4, 0x0, 0x1);
        gbc.writeMem(0x6d97, { 0x82 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe2ee, gbc.sp());
        EXPECT(0x6d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 005D
        gbc.setState(0xbe01, 0x9be7, 0x2250, 0xd4e3, 0x6b1, 0x3d9d, 0x1, 0x0);
        gbc.writeMem(0xbe01, { 0x82 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9be7, gbc.sp());
        EXPECT(0xbe02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbe01));
        // 82 005E
        gbc.setState(0xd41f, 0xd364, 0x3060, 0xc1a9, 0x1900, 0xcc45, 0x0, 0x1);
        gbc.writeMem(0xd41f, { 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd41f));
        // 82 0060
        gbc.setState(0x22bc, 0x2c19, 0xf9e0, 0x5e82, 0x1c25, 0xf818, 0x0, 0x1);
        gbc.writeMem(0x22bc, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2c19, gbc.sp());
        EXPECT(0x22bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0061
        gbc.setState(0x3ce9, 0x7e79, 0xdc80, 0xac26, 0x543e, 0x36f1, 0x0, 0x1);
        gbc.writeMem(0x3ce9, { 0x82 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7e79, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0062
        gbc.setState(0xc42c, 0xec24, 0x77e0, 0x5bc3, 0xb3f5, 0xfcda, 0x0, 0x1);
        gbc.writeMem(0xc42c, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc42c));
        // 82 0063
        gbc.setState(0x42ec, 0xe3ea, 0x30b0, 0x55c3, 0xa5ca, 0x56b8, 0x0, 0x1);
        gbc.writeMem(0x42ec, { 0x82 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe3ea, gbc.sp());
        EXPECT(0x42ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0064
        gbc.setState(0x959f, 0xd76f, 0x5fd0, 0x35c, 0xa897, 0xc41f, 0x0, 0x0);
        gbc.writeMem(0x959f, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd76f, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x959f));
        // 82 0065
        gbc.setState(0xc5d8, 0x1e28, 0x8a0, 0xeb86, 0xf514, 0xfa19, 0x0, 0x0);
        gbc.writeMem(0xc5d8, { 0x82 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1e28, gbc.sp());
        EXPECT(0xc5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc5d8));
        // 82 0066
        gbc.setState(0x4e43, 0xb96d, 0xcb10, 0x5f6d, 0x83e, 0x5611, 0x1, 0x1);
        gbc.writeMem(0x4e43, { 0x82 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb96d, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0067
        gbc.setState(0xe634, 0x5795, 0x5990, 0x6873, 0x8ead, 0xf923, 0x0, 0x0);
        gbc.writeMem(0xe634, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5795, gbc.sp());
        EXPECT(0xe635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe634));
        // 82 0068
        gbc.setState(0xd872, 0xd8d1, 0x2470, 0xe1b7, 0x7a10, 0x3b65, 0x1, 0x1);
        gbc.writeMem(0xd872, { 0x82 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd8d1, gbc.sp());
        EXPECT(0xd873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd872));
        // 82 0069
        gbc.setState(0x7136, 0xf4cf, 0xe0e0, 0x85bc, 0xbadb, 0x3b88, 0x0, 0x1);
        gbc.writeMem(0x7136, { 0x82 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf4cf, gbc.sp());
        EXPECT(0x7137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 006A
        gbc.setState(0xe041, 0xb4f6, 0xfdf0, 0x38bc, 0xbbc5, 0xf76d, 0x0, 0x0);
        gbc.writeMem(0xe041, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb4f6, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe041));
        // 82 006B
        gbc.setState(0x3915, 0x18fc, 0xd470, 0xb82e, 0x16a4, 0x8f83, 0x0, 0x1);
        gbc.writeMem(0x3915, { 0x82 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x18fc, gbc.sp());
        EXPECT(0x3916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 006C
        gbc.setState(0x43f, 0x7863, 0xd00, 0xb688, 0x8b62, 0x7aad, 0x0, 0x0);
        gbc.writeMem(0x43f, { 0x82 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7863, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 006D
        gbc.setState(0x2e20, 0xd6bd, 0xa770, 0xa620, 0x2876, 0xa619, 0x0, 0x0);
        gbc.writeMem(0x2e20, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 006E
        gbc.setState(0xf50, 0xca9c, 0x8260, 0xfa63, 0xde30, 0x4219, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0x82 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 006F
        gbc.setState(0xd342, 0xedee, 0xe820, 0x7505, 0xb837, 0x6dfd, 0x1, 0x0);
        gbc.writeMem(0xd342, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xedee, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd342));
        // 82 0071
        gbc.setState(0xd8cc, 0xc73a, 0x7900, 0xfa40, 0x61fa, 0x8be6, 0x0, 0x1);
        gbc.writeMem(0xd8cc, { 0x82 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd8cc));
        // 82 0072
        gbc.setState(0x4022, 0x7b10, 0xd4d0, 0xb9c3, 0xdc52, 0x40ae, 0x1, 0x1);
        gbc.writeMem(0x4022, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7b10, gbc.sp());
        EXPECT(0x4023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0073
        gbc.setState(0x4be8, 0x3c95, 0x9f00, 0x98e2, 0xa438, 0xcd2d, 0x0, 0x1);
        gbc.writeMem(0x4be8, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0x4be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0074
        gbc.setState(0x1c7b, 0xa31f, 0xd80, 0x44d6, 0x36a5, 0xf4fd, 0x1, 0x0);
        gbc.writeMem(0x1c7b, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0x1c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0075
        gbc.setState(0x8686, 0x8bf5, 0x9010, 0xcb3a, 0x50aa, 0xb4e4, 0x0, 0x1);
        gbc.writeMem(0x8686, { 0x82 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8bf5, gbc.sp());
        EXPECT(0x8687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8686));
        // 82 0076
        gbc.setState(0x7875, 0x709e, 0x200, 0x86ee, 0x28dd, 0x68b, 0x0, 0x0);
        gbc.writeMem(0x7875, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0x7876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0077
        gbc.setState(0x3aa2, 0xc3f9, 0xe310, 0x593e, 0x67a0, 0x23d2, 0x1, 0x0);
        gbc.writeMem(0x3aa2, { 0x82 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0x3aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0078
        gbc.setState(0x994c, 0x9e3f, 0x58c0, 0x654f, 0x4c17, 0xee06, 0x1, 0x0);
        gbc.writeMem(0x994c, { 0x82 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9e3f, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x994c));
        // 82 0079
        gbc.setState(0xd841, 0x1e14, 0xb570, 0x9bdb, 0xfa3, 0x1fb6, 0x1, 0x1);
        gbc.writeMem(0xd841, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0xd842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd841));
        // 82 007A
        gbc.setState(0x6cd9, 0x6edc, 0x5c50, 0xd41f, 0x22c7, 0xc509, 0x0, 0x0);
        gbc.writeMem(0x6cd9, { 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 007B
        gbc.setState(0xa3e4, 0x87d2, 0x2570, 0xe356, 0xf7f7, 0x9d63, 0x1, 0x1);
        gbc.writeMem(0xa3e4, { 0x82 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x87d2, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa3e4));
        // 82 007C
        gbc.setState(0x6077, 0x8bae, 0x7ea0, 0x311a, 0xdf88, 0x6307, 0x0, 0x1);
        gbc.writeMem(0x6077, { 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8bae, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 007D
        gbc.setState(0x4398, 0x3d3b, 0x8980, 0x765f, 0x8a68, 0x8817, 0x1, 0x1);
        gbc.writeMem(0x4398, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 007E
        gbc.setState(0xd969, 0xa6f9, 0xbf50, 0x48a5, 0x65c7, 0xfbfb, 0x0, 0x0);
        gbc.writeMem(0xd969, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd969));
        // 82 007F
        gbc.setState(0x746, 0xb339, 0x29a0, 0x8a06, 0x353c, 0x6efd, 0x1, 0x1);
        gbc.writeMem(0x746, { 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0080
        gbc.setState(0x69b1, 0x8e6a, 0x6b60, 0x30b5, 0x6df1, 0xe308, 0x1, 0x1);
        gbc.writeMem(0x69b1, { 0x82 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0081
        gbc.setState(0x29dd, 0x1980, 0xb8f0, 0xce8b, 0x2e48, 0x17ff, 0x0, 0x0);
        gbc.writeMem(0x29dd, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1980, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0082
        gbc.setState(0xa5b7, 0x9b91, 0xfbc0, 0xc62c, 0x5f56, 0xa8f0, 0x1, 0x1);
        gbc.writeMem(0xa5b7, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9b91, gbc.sp());
        EXPECT(0xa5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa5b7));
        // 82 0083
        gbc.setState(0x8e45, 0x9672, 0xe8f0, 0xc257, 0x129f, 0x7a6b, 0x0, 0x0);
        gbc.writeMem(0x8e45, { 0x82 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0x8e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8e45));
        // 82 0084
        gbc.setState(0x487b, 0x1482, 0xd8a0, 0x68ad, 0xaa8b, 0x39bd, 0x1, 0x0);
        gbc.writeMem(0x487b, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1482, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0085
        gbc.setState(0xd8a2, 0xf4ee, 0xdce0, 0x9dba, 0x2de4, 0x395f, 0x1, 0x0);
        gbc.writeMem(0xd8a2, { 0x82 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf4ee, gbc.sp());
        EXPECT(0xd8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd8a2));
        // 82 0087
        gbc.setState(0xa043, 0x1f04, 0xbd80, 0x16d4, 0xf6a7, 0x133, 0x1, 0x1);
        gbc.writeMem(0xa043, { 0x82 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xa044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa043));
        // 82 0088
        gbc.setState(0x6f11, 0x2aaa, 0x2df0, 0xb8cb, 0xb009, 0x7750, 0x0, 0x0);
        gbc.writeMem(0x6f11, { 0x82 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2aaa, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0089
        gbc.setState(0x597f, 0xad88, 0xc430, 0xb4b1, 0x4fe9, 0x38d7, 0x1, 0x1);
        gbc.writeMem(0x597f, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xad88, gbc.sp());
        EXPECT(0x5980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 008A
        gbc.setState(0x4d28, 0xa01a, 0x760, 0x289d, 0x7f65, 0x3776, 0x0, 0x0);
        gbc.writeMem(0x4d28, { 0x82 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0x4d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 008B
        gbc.setState(0xc334, 0xc6ba, 0x890, 0x1e3c, 0xc0dd, 0x7060, 0x0, 0x0);
        gbc.writeMem(0xc334, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0xc335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc334));
        // 82 008C
        gbc.setState(0x2936, 0x8743, 0x51c0, 0xd66e, 0x42b2, 0x83e0, 0x0, 0x0);
        gbc.writeMem(0x2936, { 0x82 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8743, gbc.sp());
        EXPECT(0x2937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 008D
        gbc.setState(0xb190, 0xb0b0, 0x1af0, 0xd338, 0xe3d3, 0xc127, 0x1, 0x0);
        gbc.writeMem(0xb190, { 0x82 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb190));
        // 82 008F
        gbc.setState(0xb253, 0x5f95, 0x9110, 0x9b6d, 0x2d13, 0xf886, 0x0, 0x0);
        gbc.writeMem(0xb253, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5f95, gbc.sp());
        EXPECT(0xb254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb253));
        // 82 0090
        gbc.setState(0x6f45, 0xeb01, 0xc2d0, 0x315, 0x71cd, 0x7da2, 0x0, 0x0);
        gbc.writeMem(0x6f45, { 0x82 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb01, gbc.sp());
        EXPECT(0x6f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0091
        gbc.setState(0x3150, 0xe8cc, 0xe6e0, 0xef37, 0xca82, 0x61a2, 0x0, 0x0);
        gbc.writeMem(0x3150, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe8cc, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0092
        gbc.setState(0xe815, 0xd5ea, 0xbe00, 0xab45, 0x363c, 0xa1e2, 0x0, 0x0);
        gbc.writeMem(0xe815, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd5ea, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe815));
        // 82 0093
        gbc.setState(0x756, 0xa9bb, 0x8dd0, 0xd38e, 0x5ad8, 0x48a6, 0x1, 0x0);
        gbc.writeMem(0x756, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0x757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0094
        gbc.setState(0x2ae, 0x5217, 0x5ff0, 0x9227, 0x4832, 0x871b, 0x1, 0x1);
        gbc.writeMem(0x2ae, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0095
        gbc.setState(0x44cb, 0x9c82, 0x2a0, 0xa7d5, 0xc2fd, 0x41ec, 0x0, 0x1);
        gbc.writeMem(0x44cb, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9c82, gbc.sp());
        EXPECT(0x44cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0096
        gbc.setState(0x4fa3, 0x3c1c, 0x2580, 0x4ad4, 0xbc2f, 0xa225, 0x1, 0x1);
        gbc.writeMem(0x4fa3, { 0x82 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0097
        gbc.setState(0xb629, 0x8314, 0x1920, 0xb8ea, 0x9288, 0x4f1, 0x1, 0x1);
        gbc.writeMem(0xb629, { 0x82 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xb62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb629));
        // 82 0098
        gbc.setState(0x792a, 0xb8f, 0xedb0, 0x5d9, 0x771a, 0xcf96, 0x1, 0x1);
        gbc.writeMem(0x792a, { 0x82 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb8f, gbc.sp());
        EXPECT(0x792b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0099
        gbc.setState(0x7182, 0x966d, 0x6ec0, 0x37f1, 0xa5f0, 0x287f, 0x1, 0x1);
        gbc.writeMem(0x7182, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x966d, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 009A
        gbc.setState(0x77a9, 0x3954, 0xd2f0, 0x4ca2, 0xcc9e, 0xd683, 0x0, 0x1);
        gbc.writeMem(0x77a9, { 0x82 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3954, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 009B
        gbc.setState(0x586d, 0x5889, 0x660, 0x2397, 0xd790, 0xc3ce, 0x1, 0x0);
        gbc.writeMem(0x586d, { 0x82 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5889, gbc.sp());
        EXPECT(0x586e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 009C
        gbc.setState(0xc92e, 0x7836, 0xa660, 0x85db, 0xbc32, 0x35e6, 0x0, 0x0);
        gbc.writeMem(0xc92e, { 0x82 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc92e));
        // 82 009D
        gbc.setState(0xb36d, 0x3992, 0xce70, 0xd2ea, 0x42ae, 0x32ba, 0x1, 0x1);
        gbc.writeMem(0xb36d, { 0x82 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3992, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb36d));
        // 82 009E
        gbc.setState(0xb5be, 0x5293, 0xf7c0, 0x4340, 0x588f, 0x3de6, 0x1, 0x1);
        gbc.writeMem(0xb5be, { 0x82 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5293, gbc.sp());
        EXPECT(0xb5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb5be));
        // 82 009F
        gbc.setState(0x1425, 0x3286, 0xc5d0, 0x9337, 0x3b7a, 0x3518, 0x1, 0x0);
        gbc.writeMem(0x1425, { 0x82 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3286, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00A0
        gbc.setState(0x3a6c, 0x226f, 0x560, 0x2ad0, 0x53a4, 0xc65a, 0x1, 0x0);
        gbc.writeMem(0x3a6c, { 0x82 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x3a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00A1
        gbc.setState(0x9f36, 0x3e8d, 0xe9d0, 0x4980, 0x8454, 0xf54f, 0x0, 0x1);
        gbc.writeMem(0x9f36, { 0x82 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3e8d, gbc.sp());
        EXPECT(0x9f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9f36));
        // 82 00A2
        gbc.setState(0x1ae2, 0xfce4, 0x7cb0, 0xd9d, 0x4f7e, 0xf6f2, 0x1, 0x1);
        gbc.writeMem(0x1ae2, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfce4, gbc.sp());
        EXPECT(0x1ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00A3
        gbc.setState(0xd264, 0xacb7, 0xc470, 0xc69a, 0xc5cd, 0xa0d3, 0x0, 0x1);
        gbc.writeMem(0xd264, { 0x82 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd264));
        // 82 00A4
        gbc.setState(0x53ec, 0x8092, 0x4120, 0x77f0, 0xb84c, 0xbf5b, 0x0, 0x1);
        gbc.writeMem(0x53ec, { 0x82 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8092, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00A5
        gbc.setState(0x2ec, 0x8df2, 0x960, 0xbd9c, 0xd362, 0xa9d6, 0x0, 0x1);
        gbc.writeMem(0x2ec, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0x2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00A6
        gbc.setState(0x7efd, 0x956d, 0xdfd0, 0xeec2, 0xed95, 0xb57b, 0x1, 0x1);
        gbc.writeMem(0x7efd, { 0x82 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x956d, gbc.sp());
        EXPECT(0x7efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00A8
        gbc.setState(0x49e5, 0xb1e0, 0x6380, 0x1d1e, 0xfa7f, 0x84ef, 0x1, 0x1);
        gbc.writeMem(0x49e5, { 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0x49e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00A9
        gbc.setState(0x90ca, 0x6949, 0x7a10, 0x2355, 0x983f, 0x23a7, 0x1, 0x1);
        gbc.writeMem(0x90ca, { 0x82 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0x90cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90ca));
        // 82 00AA
        gbc.setState(0x5667, 0xf07d, 0x3d30, 0xa0eb, 0xf919, 0xb902, 0x0, 0x1);
        gbc.writeMem(0x5667, { 0x82 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf07d, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00AB
        gbc.setState(0x342d, 0x4357, 0x390, 0x469e, 0xf1b2, 0xf534, 0x1, 0x1);
        gbc.writeMem(0x342d, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x342e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00AC
        gbc.setState(0x83e, 0xaa1b, 0x3f20, 0xbd3f, 0x9a3c, 0x7469, 0x0, 0x1);
        gbc.writeMem(0x83e, { 0x82 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaa1b, gbc.sp());
        EXPECT(0x83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00AD
        gbc.setState(0x5beb, 0x8ce8, 0xaad0, 0x313f, 0xefd0, 0xcb5c, 0x1, 0x0);
        gbc.writeMem(0x5beb, { 0x82 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8ce8, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00AE
        gbc.setState(0xe547, 0x1b62, 0x4350, 0x22ac, 0xe248, 0x3b66, 0x1, 0x1);
        gbc.writeMem(0xe547, { 0x82 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0xe548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe547));
        // 82 00AF
        gbc.setState(0x757f, 0x98d, 0xded0, 0xdb6b, 0x2088, 0x2e16, 0x1, 0x1);
        gbc.writeMem(0x757f, { 0x82 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0x7580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00B0
        gbc.setState(0x8e56, 0xa92e, 0x8c20, 0x4cc7, 0xd3ee, 0x6098, 0x1, 0x0);
        gbc.writeMem(0x8e56, { 0x82 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x8e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8e56));
        // 82 00B1
        gbc.setState(0x549c, 0x85cc, 0x6060, 0xd5f6, 0x1a50, 0xb016, 0x0, 0x0);
        gbc.writeMem(0x549c, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x85cc, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00B2
        gbc.setState(0xc827, 0x4edb, 0xbbd0, 0x16cf, 0x4d01, 0x4fed, 0x0, 0x0);
        gbc.writeMem(0xc827, { 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4edb, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc827));
        // 82 00B4
        gbc.setState(0xee54, 0xa9a0, 0x49a0, 0x3396, 0xe139, 0xc16, 0x0, 0x0);
        gbc.writeMem(0xee54, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa9a0, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xee54));
        // 82 00B5
        gbc.setState(0xa7e9, 0xd4e9, 0x5dc0, 0x4cbc, 0x7f1e, 0xafd3, 0x0, 0x1);
        gbc.writeMem(0xa7e9, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd4e9, gbc.sp());
        EXPECT(0xa7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7e9));
        // 82 00B6
        gbc.setState(0xb00f, 0xfe9a, 0x4f90, 0x7646, 0x842f, 0xc9dd, 0x1, 0x0);
        gbc.writeMem(0xb00f, { 0x82 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfe9a, gbc.sp());
        EXPECT(0xb010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb00f));
        // 82 00B7
        gbc.setState(0xe208, 0x629, 0xafe0, 0x3646, 0x9ab, 0xd3e3, 0x1, 0x0);
        gbc.writeMem(0xe208, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x629, gbc.sp());
        EXPECT(0xe209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe208));
        // 82 00B8
        gbc.setState(0x85b4, 0x4670, 0xdd10, 0x38be, 0xd7ab, 0xb86a, 0x0, 0x0);
        gbc.writeMem(0x85b4, { 0x82 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4670, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x85b4));
        // 82 00B9
        gbc.setState(0xe447, 0x8611, 0x3b80, 0xf50b, 0x4bc7, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0xe447, { 0x82 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8611, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe447));
        // 82 00BA
        gbc.setState(0x5893, 0x6907, 0x99f0, 0x82a8, 0x2a31, 0xa9fc, 0x0, 0x1);
        gbc.writeMem(0x5893, { 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0x5894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00BB
        gbc.setState(0x5b56, 0x121, 0xcbb0, 0xe93f, 0xf96b, 0x88d8, 0x0, 0x1);
        gbc.writeMem(0x5b56, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x121, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00BC
        gbc.setState(0x412f, 0x9541, 0x8330, 0xa592, 0x746a, 0xd2ed, 0x1, 0x1);
        gbc.writeMem(0x412f, { 0x82 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9541, gbc.sp());
        EXPECT(0x4130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00BD
        gbc.setState(0x310b, 0x2fad, 0x4ae0, 0x5743, 0x7ef4, 0xb130, 0x1, 0x0);
        gbc.writeMem(0x310b, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2fad, gbc.sp());
        EXPECT(0x310c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00BE
        gbc.setState(0xd9cd, 0x65cf, 0xf40, 0x3e85, 0x9bf5, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0xd9cd, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0xd9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd9cd));
        // 82 00BF
        gbc.setState(0xdcaf, 0x12df, 0x5d30, 0x684d, 0x32cc, 0x9e50, 0x1, 0x1);
        gbc.writeMem(0xdcaf, { 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x12df, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdcaf));
        // 82 00C0
        gbc.setState(0x34be, 0x7273, 0x3f10, 0xaa24, 0x40e1, 0xf1f0, 0x0, 0x0);
        gbc.writeMem(0x34be, { 0x82 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7273, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00C1
        gbc.setState(0x2ac9, 0xc167, 0xd710, 0x90b0, 0x3ccb, 0x8e5b, 0x1, 0x0);
        gbc.writeMem(0x2ac9, { 0x82 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0x2aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00C2
        gbc.setState(0xe9f7, 0xe653, 0x7bd0, 0x4c56, 0x22cb, 0x5566, 0x0, 0x0);
        gbc.writeMem(0xe9f7, { 0x82 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe9f7));
        // 82 00C3
        gbc.setState(0xd44f, 0x6c4c, 0xde50, 0x615d, 0x9e8f, 0xa64f, 0x1, 0x1);
        gbc.writeMem(0xd44f, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c4c, gbc.sp());
        EXPECT(0xd450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd44f));
        // 82 00C4
        gbc.setState(0xb5ab, 0x40d, 0xe500, 0x66c7, 0x66d8, 0xd32a, 0x0, 0x1);
        gbc.writeMem(0xb5ab, { 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0xb5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb5ab));
        // 82 00C5
        gbc.setState(0x1488, 0x4ac0, 0x17e0, 0xaef6, 0xc545, 0x5c5e, 0x0, 0x0);
        gbc.writeMem(0x1488, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ac0, gbc.sp());
        EXPECT(0x1489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00C6
        gbc.setState(0x492f, 0xc374, 0x9c0, 0x68f8, 0xb22f, 0x851e, 0x0, 0x1);
        gbc.writeMem(0x492f, { 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc374, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00C7
        gbc.setState(0x5334, 0xbea8, 0x7700, 0xbc4b, 0xe9d4, 0x3150, 0x0, 0x1);
        gbc.writeMem(0x5334, { 0x82 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00C8
        gbc.setState(0xeec7, 0x422e, 0x3ea0, 0x1a55, 0xb9c3, 0x5d6d, 0x0, 0x0);
        gbc.writeMem(0xeec7, { 0x82 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x422e, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeec7));
        // 82 00C9
        gbc.setState(0x2242, 0x2b2f, 0xedb0, 0x6d67, 0xda38, 0x1ef3, 0x0, 0x1);
        gbc.writeMem(0x2242, { 0x82 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b2f, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00CA
        gbc.setState(0xc356, 0xa78c, 0xa700, 0x2a06, 0xdd72, 0xb94, 0x1, 0x1);
        gbc.writeMem(0xc356, { 0x82 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0xc357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc356));
        // 82 00CB
        gbc.setState(0xbf10, 0xaebe, 0xd150, 0x24ab, 0x400, 0x9094, 0x1, 0x0);
        gbc.writeMem(0xbf10, { 0x82 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaebe, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf10));
        // 82 00CC
        gbc.setState(0x1bbc, 0xd3c5, 0x4d60, 0x512d, 0xc900, 0xa63d, 0x0, 0x1);
        gbc.writeMem(0x1bbc, { 0x82 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd3c5, gbc.sp());
        EXPECT(0x1bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00CD
        gbc.setState(0x54a6, 0x49a, 0x93a0, 0x7b53, 0xee51, 0x6b59, 0x0, 0x0);
        gbc.writeMem(0x54a6, { 0x82 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0x54a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00CE
        gbc.setState(0x8352, 0x7574, 0xf390, 0x70ba, 0xda0c, 0xaf20, 0x1, 0x1);
        gbc.writeMem(0x8352, { 0x82 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7574, gbc.sp());
        EXPECT(0x8353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8352));
        // 82 00CF
        gbc.setState(0xd9e8, 0xed58, 0xffb0, 0xeef5, 0x7b4f, 0x1c23, 0x1, 0x1);
        gbc.writeMem(0xd9e8, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0xd9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd9e8));
        // 82 00D0
        gbc.setState(0x8f33, 0x565f, 0xcf60, 0xfc4c, 0x583c, 0xa47b, 0x0, 0x0);
        gbc.writeMem(0x8f33, { 0x82 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x565f, gbc.sp());
        EXPECT(0x8f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8f33));
        // 82 00D1
        gbc.setState(0x9a4e, 0x31d8, 0xeb20, 0x65ad, 0xc569, 0xaec9, 0x1, 0x1);
        gbc.writeMem(0x9a4e, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9a4e));
        // 82 00D2
        gbc.setState(0x580a, 0xf5d5, 0x4620, 0xb4f3, 0x1171, 0x71d3, 0x0, 0x0);
        gbc.writeMem(0x580a, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf5d5, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00D3
        gbc.setState(0xc0d1, 0x17f4, 0x52d0, 0x739c, 0x4672, 0x41c0, 0x0, 0x1);
        gbc.writeMem(0xc0d1, { 0x82 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc0d1));
        // 82 00D4
        gbc.setState(0x4196, 0x365c, 0x2e60, 0xe81f, 0x6ec6, 0xb099, 0x1, 0x0);
        gbc.writeMem(0x4196, { 0x82 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0x4197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00D5
        gbc.setState(0x1cf8, 0x4466, 0x6370, 0x70b, 0xb585, 0x7db3, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0x82 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00D7
        gbc.setState(0x1e42, 0xcca7, 0x5110, 0xc3b0, 0xdad5, 0xbf53, 0x0, 0x0);
        gbc.writeMem(0x1e42, { 0x82 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcca7, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00D8
        gbc.setState(0x125c, 0xab3c, 0x46a0, 0xe43e, 0x6d53, 0x6fdd, 0x0, 0x1);
        gbc.writeMem(0x125c, { 0x82 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xab3c, gbc.sp());
        EXPECT(0x125d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00D9
        gbc.setState(0x2adb, 0x70f6, 0x1420, 0x3726, 0x2b73, 0x71e5, 0x1, 0x0);
        gbc.writeMem(0x2adb, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x70f6, gbc.sp());
        EXPECT(0x2adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00DA
        gbc.setState(0xe63c, 0x93ed, 0xc090, 0x3ed1, 0x1908, 0x6617, 0x0, 0x0);
        gbc.writeMem(0xe63c, { 0x82 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x93ed, gbc.sp());
        EXPECT(0xe63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe63c));
        // 82 00DB
        gbc.setState(0x5a0e, 0x7ec8, 0xf640, 0x78ba, 0x9b42, 0xfec, 0x0, 0x1);
        gbc.writeMem(0x5a0e, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ec8, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00DC
        gbc.setState(0x3440, 0x936d, 0x8b80, 0x81de, 0x6448, 0x1ab7, 0x0, 0x1);
        gbc.writeMem(0x3440, { 0x82 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x936d, gbc.sp());
        EXPECT(0x3441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00DD
        gbc.setState(0x548e, 0x21c5, 0xf210, 0x8e12, 0x8f6f, 0xfc1c, 0x0, 0x0);
        gbc.writeMem(0x548e, { 0x82 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x21c5, gbc.sp());
        EXPECT(0x548f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00DE
        gbc.setState(0x177b, 0xda20, 0xdcc0, 0x4c5d, 0xac50, 0x6e6c, 0x1, 0x0);
        gbc.writeMem(0x177b, { 0x82 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xda20, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00DF
        gbc.setState(0xd71f, 0x73ae, 0xe830, 0xc2bb, 0x22a1, 0x9823, 0x1, 0x0);
        gbc.writeMem(0xd71f, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x73ae, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd71f));
        // 82 00E1
        gbc.setState(0xef2e, 0xa2d3, 0x9080, 0x7ad1, 0x7ca, 0xd8a3, 0x1, 0x0);
        gbc.writeMem(0xef2e, { 0x82 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa2d3, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xef2e));
        // 82 00E2
        gbc.setState(0x9176, 0xeda3, 0xd7c0, 0x38f5, 0xdecc, 0xe7c6, 0x0, 0x0);
        gbc.writeMem(0x9176, { 0x82 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9176));
        // 82 00E3
        gbc.setState(0xe1f6, 0x6281, 0xc9e0, 0xfba1, 0x9533, 0xd6d0, 0x0, 0x0);
        gbc.writeMem(0xe1f6, { 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe1f6));
        // 82 00E4
        gbc.setState(0xe54e, 0xf136, 0x97a0, 0xe8e4, 0xf5ee, 0x2ab9, 0x1, 0x0);
        gbc.writeMem(0xe54e, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0xe54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe54e));
        // 82 00E5
        gbc.setState(0x6230, 0x6d0b, 0xa40, 0xf694, 0xb9fc, 0x9caf, 0x0, 0x0);
        gbc.writeMem(0x6230, { 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6d0b, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00E6
        gbc.setState(0x8aeb, 0x5a6f, 0xc970, 0x540c, 0x8286, 0x5c57, 0x0, 0x1);
        gbc.writeMem(0x8aeb, { 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5a6f, gbc.sp());
        EXPECT(0x8aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8aeb));
        // 82 00E7
        gbc.setState(0xa1ba, 0x3f7b, 0xcb0, 0x64b1, 0x8a3b, 0x6e77, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0x82 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3f7b, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa1ba));
        // 82 00E8
        gbc.setState(0xb510, 0x44df, 0x55f0, 0x66b7, 0x210, 0x56c8, 0x1, 0x1);
        gbc.writeMem(0xb510, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb510));
        // 82 00E9
        gbc.setState(0x8a3f, 0x7686, 0x3110, 0xeac8, 0xfe1c, 0x7a7, 0x1, 0x0);
        gbc.writeMem(0x8a3f, { 0x82 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7686, gbc.sp());
        EXPECT(0x8a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a3f));
        // 82 00EA
        gbc.setState(0x62d0, 0xfb05, 0xaf30, 0x2e8f, 0x7b86, 0xa825, 0x1, 0x0);
        gbc.writeMem(0x62d0, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00EB
        gbc.setState(0x28c8, 0x8425, 0x7e70, 0xf686, 0xb224, 0x2e9, 0x0, 0x1);
        gbc.writeMem(0x28c8, { 0x82 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0x28c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00EC
        gbc.setState(0x458b, 0x6d52, 0x16d0, 0x38eb, 0xea16, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0x458b, { 0x82 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x458c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00ED
        gbc.setState(0x5cb4, 0x34f, 0x3d10, 0x194f, 0xed68, 0x7fc2, 0x1, 0x0);
        gbc.writeMem(0x5cb4, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00EE
        gbc.setState(0x819e, 0x70a0, 0x6550, 0x9891, 0xa302, 0xa1e0, 0x1, 0x1);
        gbc.writeMem(0x819e, { 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0x819f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x819e));
        // 82 00EF
        gbc.setState(0x1202, 0xf0c1, 0xa1a0, 0x7c4a, 0xf012, 0xb54d, 0x1, 0x0);
        gbc.writeMem(0x1202, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf0c1, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00F0
        gbc.setState(0xc6c7, 0x4d6a, 0x5cc0, 0x8d1b, 0x9aeb, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xc6c7, { 0x82 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0xc6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc6c7));
        // 82 00F1
        gbc.setState(0x30f5, 0x59e8, 0xe560, 0x9833, 0xc939, 0x3426, 0x1, 0x0);
        gbc.writeMem(0x30f5, { 0x82 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x59e8, gbc.sp());
        EXPECT(0x30f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00F2
        gbc.setState(0xa744, 0xe64f, 0xc790, 0x8052, 0xb9c9, 0xdbd2, 0x1, 0x0);
        gbc.writeMem(0xa744, { 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe64f, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa744));
        // 82 00F3
        gbc.setState(0x679b, 0x907e, 0x2a50, 0xfe24, 0x9ba8, 0x48c7, 0x0, 0x0);
        gbc.writeMem(0x679b, { 0x82 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00F4
        gbc.setState(0x1cbb, 0xb56e, 0xd6a0, 0x5df8, 0x6dfe, 0x3de4, 0x0, 0x0);
        gbc.writeMem(0x1cbb, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0x1cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00F5
        gbc.setState(0x10ba, 0x8b95, 0x6bf0, 0xcccf, 0xb594, 0x4d9c, 0x1, 0x1);
        gbc.writeMem(0x10ba, { 0x82 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8b95, gbc.sp());
        EXPECT(0x10bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00F6
        gbc.setState(0x7e1f, 0xa566, 0xa170, 0x8c6c, 0x1da6, 0x3724, 0x1, 0x1);
        gbc.writeMem(0x7e1f, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa566, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 00F7
        gbc.setState(0x7513, 0xf38e, 0x7080, 0xfea3, 0x9d1b, 0xda7a, 0x1, 0x1);
        gbc.writeMem(0x7513, { 0x82 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf38e, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00F8
        gbc.setState(0x9496, 0xbffc, 0xb430, 0x291b, 0xdaf2, 0xa1a9, 0x0, 0x1);
        gbc.writeMem(0x9496, { 0x82 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbffc, gbc.sp());
        EXPECT(0x9497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9496));
        // 82 00F9
        gbc.setState(0xb6ca, 0x33b2, 0xda70, 0x29fb, 0xa333, 0x1d8f, 0x0, 0x0);
        gbc.writeMem(0xb6ca, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x33b2, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb6ca));
        // 82 00FA
        gbc.setState(0xc7ff, 0xecca, 0x6a0, 0x392e, 0x85b0, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0xc7ff, { 0x82 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xecca, gbc.sp());
        EXPECT(0xc800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc7ff));
        // 82 00FB
        gbc.setState(0x4e32, 0x7845, 0xce60, 0x31df, 0x83bf, 0xcc47, 0x0, 0x0);
        gbc.writeMem(0x4e32, { 0x82 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7845, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 00FC
        gbc.setState(0x9f79, 0xf437, 0x5070, 0x3acf, 0xd98, 0xe99b, 0x1, 0x0);
        gbc.writeMem(0x9f79, { 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9f79));
        // 82 00FD
        gbc.setState(0xd82c, 0x8f8e, 0x1f30, 0x22cb, 0x3514, 0x770e, 0x0, 0x0);
        gbc.writeMem(0xd82c, { 0x82 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f8e, gbc.sp());
        EXPECT(0xd82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd82c));
        // 82 00FE
        gbc.setState(0xa6f0, 0x3583, 0x5140, 0x5a6f, 0xcfcc, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0xa6f0, { 0x82 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0xa6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa6f0));
        // 82 00FF
        gbc.setState(0x2400, 0x9082, 0x14c0, 0xa5ab, 0x53a5, 0xd7f, 0x1, 0x0);
        gbc.writeMem(0x2400, { 0x82 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0100
        gbc.setState(0x9951, 0xbfe6, 0xc370, 0xf14b, 0x5c64, 0x8dcf, 0x1, 0x0);
        gbc.writeMem(0x9951, { 0x82 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbfe6, gbc.sp());
        EXPECT(0x9952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9951));
        // 82 0101
        gbc.setState(0x8fc3, 0x38e2, 0xd990, 0xf370, 0xd2bb, 0x304, 0x1, 0x0);
        gbc.writeMem(0x8fc3, { 0x82 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x8fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8fc3));
        // 82 0102
        gbc.setState(0x9821, 0xf92a, 0x0, 0x8d34, 0xaf1b, 0x49b6, 0x0, 0x1);
        gbc.writeMem(0x9821, { 0x82 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf92a, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9821));
        // 82 0103
        gbc.setState(0xa150, 0x8753, 0x4120, 0x8b78, 0x654d, 0x2465, 0x0, 0x0);
        gbc.writeMem(0xa150, { 0x82 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8753, gbc.sp());
        EXPECT(0xa151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa150));
        // 82 0104
        gbc.setState(0x8798, 0x5e1d, 0x3f90, 0x15d6, 0xc5a2, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0x8798, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8798));
        // 82 0105
        gbc.setState(0x4c27, 0x7dbc, 0xf790, 0xf6dd, 0x18c2, 0x4222, 0x1, 0x1);
        gbc.writeMem(0x4c27, { 0x82 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0x4c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0106
        gbc.setState(0xb721, 0x2bb0, 0x4f0, 0x9422, 0x6dd3, 0xe7da, 0x0, 0x0);
        gbc.writeMem(0xb721, { 0x82 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2bb0, gbc.sp());
        EXPECT(0xb722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb721));
        // 82 0107
        gbc.setState(0x15a6, 0x7dc, 0x1dc0, 0xa5ea, 0xb2bf, 0x340f, 0x0, 0x0);
        gbc.writeMem(0x15a6, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0x15a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0108
        gbc.setState(0x13ef, 0xcdeb, 0xa180, 0x325d, 0xd145, 0x9ae0, 0x1, 0x1);
        gbc.writeMem(0x13ef, { 0x82 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0x13f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0109
        gbc.setState(0xcd19, 0x2642, 0xe6f0, 0xbbf9, 0xba64, 0x7005, 0x1, 0x0);
        gbc.writeMem(0xcd19, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2642, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcd19));
        // 82 010A
        gbc.setState(0x2ef1, 0x156a, 0x3250, 0x1b7b, 0x5b5e, 0xf232, 0x1, 0x1);
        gbc.writeMem(0x2ef1, { 0x82 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x156a, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 010B
        gbc.setState(0xec3c, 0xd99d, 0xdee0, 0x8a86, 0x808b, 0x5153, 0x1, 0x0);
        gbc.writeMem(0xec3c, { 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd99d, gbc.sp());
        EXPECT(0xec3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xec3c));
        // 82 010C
        gbc.setState(0x4af5, 0x1828, 0x3ab0, 0xe871, 0xb3a9, 0x1e05, 0x1, 0x1);
        gbc.writeMem(0x4af5, { 0x82 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0x4af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 010D
        gbc.setState(0x4cd7, 0x1e87, 0x9ae0, 0xbbfe, 0x4bca, 0xd3c6, 0x0, 0x0);
        gbc.writeMem(0x4cd7, { 0x82 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1e87, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 010E
        gbc.setState(0x56a6, 0xe757, 0x8e00, 0x5b60, 0x1cd0, 0x8fd1, 0x1, 0x0);
        gbc.writeMem(0x56a6, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 010F
        gbc.setState(0xe84c, 0xec33, 0xa430, 0x36a4, 0xbab9, 0x222, 0x0, 0x1);
        gbc.writeMem(0xe84c, { 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe84c));
        // 82 0110
        gbc.setState(0x1d66, 0x42db, 0x3010, 0x558e, 0x753d, 0xa594, 0x0, 0x0);
        gbc.writeMem(0x1d66, { 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x42db, gbc.sp());
        EXPECT(0x1d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0111
        gbc.setState(0xae59, 0x6182, 0x7960, 0x62da, 0x245, 0xa3be, 0x0, 0x0);
        gbc.writeMem(0xae59, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6182, gbc.sp());
        EXPECT(0xae5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xae59));
        // 82 0112
        gbc.setState(0xab30, 0xc, 0x7970, 0x3412, 0x2744, 0xbe1d, 0x0, 0x0);
        gbc.writeMem(0xab30, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0xab31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xab30));
        // 82 0113
        gbc.setState(0x4714, 0x1499, 0xac70, 0x9470, 0xe0c5, 0x7426, 0x1, 0x1);
        gbc.writeMem(0x4714, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1499, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0114
        gbc.setState(0x1c5e, 0x7f5f, 0x9fd0, 0x74b1, 0x8f1e, 0x625f, 0x0, 0x0);
        gbc.writeMem(0x1c5e, { 0x82 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7f5f, gbc.sp());
        EXPECT(0x1c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0115
        gbc.setState(0x47af, 0x45c7, 0x78e0, 0xcda8, 0x911c, 0xf929, 0x1, 0x1);
        gbc.writeMem(0x47af, { 0x82 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x45c7, gbc.sp());
        EXPECT(0x47b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0116
        gbc.setState(0x4f8f, 0x9bfb, 0xe160, 0x9b88, 0x81e, 0x7aa1, 0x1, 0x1);
        gbc.writeMem(0x4f8f, { 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0x4f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0117
        gbc.setState(0x6661, 0x27b6, 0x9c40, 0xb3f4, 0xee00, 0xd54d, 0x1, 0x1);
        gbc.writeMem(0x6661, { 0x82 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x27b6, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0118
        gbc.setState(0xb05f, 0xaa2b, 0xc830, 0xf03c, 0x875f, 0x6cf9, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0x82 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa2b, gbc.sp());
        EXPECT(0xb060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb05f));
        // 82 0119
        gbc.setState(0x6e3e, 0x7f2d, 0x27d0, 0x5890, 0x7d94, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0x6e3e, { 0x82 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 011A
        gbc.setState(0x3e01, 0x673c, 0x89c0, 0x2b66, 0xb854, 0x550d, 0x1, 0x0);
        gbc.writeMem(0x3e01, { 0x82 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x673c, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 011B
        gbc.setState(0x202c, 0xae12, 0x52a0, 0xca73, 0x1498, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0x82 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae12, gbc.sp());
        EXPECT(0x202d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 011C
        gbc.setState(0x4f5e, 0x8a98, 0x40, 0xa0e7, 0x2859, 0xa25c, 0x0, 0x0);
        gbc.writeMem(0x4f5e, { 0x82 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8a98, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 011D
        gbc.setState(0x9138, 0x5903, 0x77f0, 0xb00b, 0x961c, 0xf221, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0x82 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5903, gbc.sp());
        EXPECT(0x9139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9138));
        // 82 011E
        gbc.setState(0x4c3b, 0x3b91, 0xae0, 0x5c52, 0xd3ad, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0x4c3b, { 0x82 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3b91, gbc.sp());
        EXPECT(0x4c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 011F
        gbc.setState(0x5a7d, 0xace1, 0x340, 0xd2ea, 0x66ba, 0x2ef, 0x0, 0x0);
        gbc.writeMem(0x5a7d, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xace1, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0120
        gbc.setState(0x1089, 0xc3bf, 0xcb60, 0x59a8, 0x4f41, 0x9342, 0x0, 0x0);
        gbc.writeMem(0x1089, { 0x82 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0121
        gbc.setState(0x3383, 0xa110, 0x1b0, 0xf20d, 0x3a66, 0x3868, 0x1, 0x0);
        gbc.writeMem(0x3383, { 0x82 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa110, gbc.sp());
        EXPECT(0x3384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0122
        gbc.setState(0x3cdf, 0xbf90, 0xcd0, 0x2628, 0xbc39, 0x6469, 0x1, 0x0);
        gbc.writeMem(0x3cdf, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbf90, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0123
        gbc.setState(0x4295, 0x55, 0xd3f0, 0xe02d, 0x65bd, 0xc26c, 0x1, 0x0);
        gbc.writeMem(0x4295, { 0x82 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x55, gbc.sp());
        EXPECT(0x4296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0124
        gbc.setState(0xbd4d, 0xd71b, 0xd650, 0x7212, 0xbf85, 0xc6ee, 0x1, 0x1);
        gbc.writeMem(0xbd4d, { 0x82 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd71b, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbd4d));
        // 82 0125
        gbc.setState(0x72ce, 0x56eb, 0x65b0, 0xfd7f, 0x53b4, 0xf00b, 0x0, 0x0);
        gbc.writeMem(0x72ce, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x56eb, gbc.sp());
        EXPECT(0x72cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0126
        gbc.setState(0xa610, 0xbc59, 0x8db0, 0xa7a6, 0x3d8c, 0x349e, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0x82 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa610));
        // 82 0127
        gbc.setState(0x96b6, 0x1c61, 0x51a0, 0xa717, 0x67cc, 0x1f59, 0x1, 0x1);
        gbc.writeMem(0x96b6, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x96b6));
        // 82 0128
        gbc.setState(0x10d2, 0xf3d3, 0x8420, 0xb16c, 0x92a, 0xd31e, 0x0, 0x0);
        gbc.writeMem(0x10d2, { 0x82 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf3d3, gbc.sp());
        EXPECT(0x10d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0129
        gbc.setState(0x957e, 0xc1b4, 0xd00, 0xda53, 0x3480, 0x8e0d, 0x0, 0x0);
        gbc.writeMem(0x957e, { 0x82 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x957e));
        // 82 012A
        gbc.setState(0xa3f2, 0x44c0, 0x5ce0, 0xb82b, 0x5b89, 0xc33d, 0x0, 0x0);
        gbc.writeMem(0xa3f2, { 0x82 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x44c0, gbc.sp());
        EXPECT(0xa3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa3f2));
        // 82 012B
        gbc.setState(0x7a4f, 0x86ef, 0x92a0, 0xc4ae, 0x2251, 0x3fb2, 0x0, 0x1);
        gbc.writeMem(0x7a4f, { 0x82 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x86ef, gbc.sp());
        EXPECT(0x7a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 012D
        gbc.setState(0xafef, 0xb74f, 0x9820, 0xeb4, 0xedff, 0xf750, 0x1, 0x1);
        gbc.writeMem(0xafef, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb74f, gbc.sp());
        EXPECT(0xaff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xafef));
        // 82 012E
        gbc.setState(0x7ec, 0xe99d, 0x7dd0, 0xd90f, 0x9868, 0x1952, 0x0, 0x0);
        gbc.writeMem(0x7ec, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe99d, gbc.sp());
        EXPECT(0x7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 012F
        gbc.setState(0xafe7, 0x7b92, 0x7ed0, 0x6fee, 0x64c0, 0xd888, 0x1, 0x1);
        gbc.writeMem(0xafe7, { 0x82 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xafe7));
        // 82 0130
        gbc.setState(0xdb0f, 0x693e, 0x7290, 0x161a, 0x8655, 0x8f48, 0x0, 0x0);
        gbc.writeMem(0xdb0f, { 0x82 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x693e, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdb0f));
        // 82 0131
        gbc.setState(0x67a1, 0xdeb0, 0x8720, 0x749c, 0x21ee, 0xb159, 0x1, 0x0);
        gbc.writeMem(0x67a1, { 0x82 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdeb0, gbc.sp());
        EXPECT(0x67a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0132
        gbc.setState(0x857, 0xa8ab, 0xbc20, 0xe66b, 0xaaec, 0x2b9f, 0x0, 0x0);
        gbc.writeMem(0x857, { 0x82 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0x858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0133
        gbc.setState(0x7aaa, 0x42c1, 0x680, 0x1d0a, 0xdbc1, 0x40a0, 0x0, 0x0);
        gbc.writeMem(0x7aaa, { 0x82 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x42c1, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0134
        gbc.setState(0x6f5a, 0x3bd7, 0xa660, 0x76f8, 0x2aa3, 0x23ad, 0x0, 0x1);
        gbc.writeMem(0x6f5a, { 0x82 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x6f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0135
        gbc.setState(0x1c0, 0x5cf1, 0x29e0, 0x7c2b, 0x8c53, 0xab32, 0x0, 0x1);
        gbc.writeMem(0x1c0, { 0x82 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0x1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0136
        gbc.setState(0x52b0, 0xcc85, 0xd7d0, 0x4535, 0x452d, 0x353d, 0x1, 0x1);
        gbc.writeMem(0x52b0, { 0x82 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0x52b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0137
        gbc.setState(0xcc3, 0x9d3d, 0x6be0, 0x934a, 0xb4dc, 0xf3d9, 0x1, 0x0);
        gbc.writeMem(0xcc3, { 0x82 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9d3d, gbc.sp());
        EXPECT(0xcc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0138
        gbc.setState(0xdf8e, 0x9033, 0x2060, 0xf87b, 0xd4d9, 0x78b7, 0x1, 0x0);
        gbc.writeMem(0xdf8e, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0xdf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdf8e));
        // 82 0139
        gbc.setState(0xbc69, 0xf685, 0xcf70, 0xb7d8, 0x66fe, 0x4e22, 0x1, 0x1);
        gbc.writeMem(0xbc69, { 0x82 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf685, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbc69));
        // 82 013A
        gbc.setState(0x3543, 0x8d27, 0x63e0, 0xa9ff, 0xe143, 0x2006, 0x1, 0x1);
        gbc.writeMem(0x3543, { 0x82 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0x3544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 013B
        gbc.setState(0x8182, 0xb2e9, 0x1970, 0x629f, 0x32b8, 0xaa1c, 0x0, 0x0);
        gbc.writeMem(0x8182, { 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb2e9, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8182));
        // 82 013C
        gbc.setState(0xbff, 0xb374, 0x7570, 0xba1f, 0xc80c, 0x170, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb374, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 013D
        gbc.setState(0xe1e2, 0xf330, 0x9c40, 0x703b, 0x22a4, 0x737e, 0x1, 0x1);
        gbc.writeMem(0xe1e2, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf330, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe1e2));
        // 82 013E
        gbc.setState(0x37da, 0x11a3, 0xd20, 0xfc6d, 0xd389, 0xbe89, 0x1, 0x0);
        gbc.writeMem(0x37da, { 0x82 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x11a3, gbc.sp());
        EXPECT(0x37db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 013F
        gbc.setState(0x5d72, 0xd9f2, 0x8a60, 0x8533, 0x7bdf, 0x6bd1, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0x82 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd9f2, gbc.sp());
        EXPECT(0x5d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0140
        gbc.setState(0x826c, 0x3f34, 0xe4f0, 0x74e5, 0xd3ae, 0x382d, 0x1, 0x0);
        gbc.writeMem(0x826c, { 0x82 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3f34, gbc.sp());
        EXPECT(0x826d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x826c));
        // 82 0141
        gbc.setState(0xceb6, 0x9b4e, 0x3380, 0x1d8f, 0x4902, 0xe1ad, 0x0, 0x0);
        gbc.writeMem(0xceb6, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9b4e, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xceb6));
        // 82 0142
        gbc.setState(0xcdb3, 0xafff, 0xda20, 0x4ec0, 0xfdcb, 0x1e0, 0x0, 0x0);
        gbc.writeMem(0xcdb3, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xafff, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcdb3));
        // 82 0144
        gbc.setState(0x5c0, 0x53a5, 0x6fe0, 0xfd07, 0x36f9, 0x402d, 0x0, 0x1);
        gbc.writeMem(0x5c0, { 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0x5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0145
        gbc.setState(0xcc39, 0x2b33, 0x8950, 0xa183, 0xf02c, 0xc347, 0x0, 0x1);
        gbc.writeMem(0xcc39, { 0x82 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0xcc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc39));
        // 82 0146
        gbc.setState(0xeda3, 0x547b, 0x7b10, 0x9c7d, 0x1a36, 0xca9a, 0x0, 0x1);
        gbc.writeMem(0xeda3, { 0x82 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0xeda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeda3));
        // 82 0147
        gbc.setState(0xc3b1, 0xb4cb, 0xb80, 0x9d96, 0xffcc, 0xbadf, 0x1, 0x0);
        gbc.writeMem(0xc3b1, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc3b1));
        // 82 0148
        gbc.setState(0x7e41, 0x7784, 0xb9a0, 0x6e6f, 0x1fab, 0x597c, 0x0, 0x1);
        gbc.writeMem(0x7e41, { 0x82 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7784, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0149
        gbc.setState(0x995e, 0x4427, 0xda30, 0x472a, 0xadc, 0x1c17, 0x0, 0x1);
        gbc.writeMem(0x995e, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0x995f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x995e));
        // 82 014A
        gbc.setState(0x3225, 0x54bc, 0x19c0, 0x5430, 0x7246, 0x1b45, 0x1, 0x0);
        gbc.writeMem(0x3225, { 0x82 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 014B
        gbc.setState(0x446a, 0xf079, 0xa190, 0xd503, 0x5046, 0x4780, 0x1, 0x1);
        gbc.writeMem(0x446a, { 0x82 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0x446b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 014C
        gbc.setState(0x547, 0xf767, 0x9300, 0x4d83, 0x96e9, 0x5ae8, 0x1, 0x0);
        gbc.writeMem(0x547, { 0x82 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 014D
        gbc.setState(0xe04, 0x56c2, 0x60, 0xa8f4, 0xc98f, 0xcb6c, 0x1, 0x0);
        gbc.writeMem(0xe04, { 0x82 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 014E
        gbc.setState(0x17d2, 0x1829, 0x9050, 0x8f8f, 0x57b1, 0xa83b, 0x1, 0x0);
        gbc.writeMem(0x17d2, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1829, gbc.sp());
        EXPECT(0x17d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 014F
        gbc.setState(0x6ac0, 0x3a57, 0x5120, 0x6673, 0x8dd1, 0x7a83, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0x82 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3a57, gbc.sp());
        EXPECT(0x6ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0150
        gbc.setState(0x35d9, 0x7c25, 0x6a50, 0xc349, 0xedab, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x35d9, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7c25, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0151
        gbc.setState(0x8a10, 0x5f9c, 0x8e50, 0xa699, 0x2612, 0xf11a, 0x1, 0x1);
        gbc.writeMem(0x8a10, { 0x82 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f9c, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a10));
        // 82 0152
        gbc.setState(0xd849, 0x9af2, 0xf7d0, 0xaee5, 0xd018, 0x5870, 0x0, 0x0);
        gbc.writeMem(0xd849, { 0x82 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9af2, gbc.sp());
        EXPECT(0xd84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd849));
        // 82 0153
        gbc.setState(0x6ca2, 0x9304, 0xb9b0, 0xdbcc, 0xa785, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0x82 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0154
        gbc.setState(0x68e6, 0x83af, 0xa260, 0x642c, 0x42a3, 0xb4a1, 0x0, 0x1);
        gbc.writeMem(0x68e6, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0155
        gbc.setState(0x2f6a, 0x48b8, 0x6ee0, 0xb218, 0x27dd, 0xb91f, 0x1, 0x0);
        gbc.writeMem(0x2f6a, { 0x82 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x48b8, gbc.sp());
        EXPECT(0x2f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0156
        gbc.setState(0x82f8, 0x85bd, 0xa070, 0xf809, 0xdafc, 0xc4a0, 0x0, 0x1);
        gbc.writeMem(0x82f8, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x82f8));
        // 82 0157
        gbc.setState(0x8027, 0xdb, 0xae70, 0xea92, 0x109c, 0x5ba9, 0x1, 0x1);
        gbc.writeMem(0x8027, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdb, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8027));
        // 82 0158
        gbc.setState(0xeda8, 0x466f, 0xe310, 0xe059, 0x9df7, 0xc48d, 0x0, 0x1);
        gbc.writeMem(0xeda8, { 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0xeda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeda8));
        // 82 0159
        gbc.setState(0x2786, 0x2c10, 0x1d0, 0x8472, 0xd34d, 0xf81f, 0x1, 0x0);
        gbc.writeMem(0x2786, { 0x82 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2c10, gbc.sp());
        EXPECT(0x2787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 015A
        gbc.setState(0xe48e, 0xa618, 0x1030, 0x71e0, 0x1fc8, 0x509c, 0x1, 0x0);
        gbc.writeMem(0xe48e, { 0x82 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0xe48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe48e));
        // 82 015B
        gbc.setState(0x20fa, 0x14da, 0xcf40, 0x877b, 0x23a3, 0xa9b8, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0x82 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14da, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 015C
        gbc.setState(0x56f2, 0xc350, 0x7a60, 0xd92f, 0x9d, 0x2834, 0x0, 0x1);
        gbc.writeMem(0x56f2, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 015E
        gbc.setState(0x2b34, 0xe231, 0xb700, 0x34f9, 0xd5eb, 0x1cd, 0x0, 0x1);
        gbc.writeMem(0x2b34, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe231, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 015F
        gbc.setState(0x1e7d, 0x5ebb, 0x7a90, 0xaef, 0x65da, 0xb557, 0x0, 0x1);
        gbc.writeMem(0x1e7d, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0x1e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0160
        gbc.setState(0xe08e, 0x7bef, 0x30b0, 0x52b8, 0x8e92, 0xeaf, 0x0, 0x0);
        gbc.writeMem(0xe08e, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0xe08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe08e));
        // 82 0161
        gbc.setState(0xbf2e, 0x2081, 0x170, 0xda14, 0xff9c, 0xdba1, 0x1, 0x0);
        gbc.writeMem(0xbf2e, { 0x82 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0xbf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf2e));
        // 82 0162
        gbc.setState(0x15, 0x22df, 0x2e80, 0x82da, 0x4a6a, 0xaba9, 0x1, 0x1);
        gbc.writeMem(0x15, { 0x82 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x22df, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0163
        gbc.setState(0xbf78, 0xe36b, 0xd470, 0x9635, 0xeb76, 0x5802, 0x0, 0x1);
        gbc.writeMem(0xbf78, { 0x82 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0xbf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf78));
        // 82 0164
        gbc.setState(0x33da, 0x6e5, 0x9e10, 0xd5eb, 0x8e32, 0x248e, 0x0, 0x0);
        gbc.writeMem(0x33da, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6e5, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0165
        gbc.setState(0x94eb, 0xd80e, 0x1fd0, 0x262, 0xe740, 0x5880, 0x0, 0x0);
        gbc.writeMem(0x94eb, { 0x82 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd80e, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x94eb));
        // 82 0166
        gbc.setState(0x9cad, 0xa358, 0xc910, 0x5ba1, 0x6762, 0x2765, 0x0, 0x0);
        gbc.writeMem(0x9cad, { 0x82 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0x9cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9cad));
        // 82 0167
        gbc.setState(0xaf6f, 0xbda1, 0x16e0, 0x9941, 0xb9eb, 0xf9aa, 0x0, 0x1);
        gbc.writeMem(0xaf6f, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbda1, gbc.sp());
        EXPECT(0xaf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xaf6f));
        // 82 0168
        gbc.setState(0x67bd, 0x1c8c, 0x4100, 0xec89, 0x6966, 0x2f11, 0x0, 0x0);
        gbc.writeMem(0x67bd, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1c8c, gbc.sp());
        EXPECT(0x67be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0169
        gbc.setState(0x5c55, 0x4bf3, 0x4920, 0xf6aa, 0x8177, 0x9711, 0x1, 0x1);
        gbc.writeMem(0x5c55, { 0x82 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4bf3, gbc.sp());
        EXPECT(0x5c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 016A
        gbc.setState(0x9820, 0x2145, 0x47d0, 0xc9a7, 0xc84d, 0x6887, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0x82 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2145, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9820));
        // 82 016B
        gbc.setState(0xd5d4, 0xe76a, 0x4700, 0xc0d4, 0x94d0, 0xe61b, 0x0, 0x0);
        gbc.writeMem(0xd5d4, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe76a, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd5d4));
        // 82 016C
        gbc.setState(0x33ea, 0x4ec9, 0x7470, 0x953e, 0xc6b0, 0xffc7, 0x0, 0x1);
        gbc.writeMem(0x33ea, { 0x82 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4ec9, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 016D
        gbc.setState(0x4a68, 0xf9fb, 0x290, 0x2edf, 0x59f1, 0xa2e8, 0x1, 0x1);
        gbc.writeMem(0x4a68, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x4a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 016E
        gbc.setState(0x88c6, 0xec02, 0x9e00, 0x6493, 0x812e, 0xec82, 0x0, 0x1);
        gbc.writeMem(0x88c6, { 0x82 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec02, gbc.sp());
        EXPECT(0x88c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x88c6));
        // 82 016F
        gbc.setState(0x8e97, 0xfa9, 0x30d0, 0x7ffe, 0x913e, 0x7778, 0x1, 0x1);
        gbc.writeMem(0x8e97, { 0x82 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfa9, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8e97));
        // 82 0170
        gbc.setState(0xe615, 0x20a3, 0xb720, 0x39d8, 0x748, 0x7921, 0x0, 0x1);
        gbc.writeMem(0xe615, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x20a3, gbc.sp());
        EXPECT(0xe616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe615));
        // 82 0171
        gbc.setState(0x31f2, 0x5295, 0x5fa0, 0x9111, 0x674a, 0xd279, 0x0, 0x0);
        gbc.writeMem(0x31f2, { 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0173
        gbc.setState(0x480a, 0xf0ce, 0x5120, 0xb9d, 0xb217, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0x480a, { 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0175
        gbc.setState(0x5c27, 0x268d, 0xf480, 0x7045, 0xeb8b, 0xcbd8, 0x1, 0x0);
        gbc.writeMem(0x5c27, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0176
        gbc.setState(0x4bb3, 0x49d5, 0xc740, 0xc8a0, 0xe4c3, 0x6b28, 0x1, 0x1);
        gbc.writeMem(0x4bb3, { 0x82 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0x4bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0177
        gbc.setState(0xa828, 0x2a44, 0xb70, 0x3a60, 0xc161, 0xae88, 0x1, 0x0);
        gbc.writeMem(0xa828, { 0x82 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2a44, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa828));
        // 82 0178
        gbc.setState(0xd829, 0xa774, 0x8c70, 0xf3da, 0x4d1, 0x6eb3, 0x0, 0x0);
        gbc.writeMem(0xd829, { 0x82 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd829));
        // 82 0179
        gbc.setState(0xcfa7, 0x2278, 0xe4a0, 0xcf11, 0x4a21, 0x67f1, 0x0, 0x1);
        gbc.writeMem(0xcfa7, { 0x82 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2278, gbc.sp());
        EXPECT(0xcfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcfa7));
        // 82 017A
        gbc.setState(0xc38b, 0xdde8, 0x3980, 0xf71a, 0x7751, 0x7f52, 0x0, 0x0);
        gbc.writeMem(0xc38b, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0xc38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc38b));
        // 82 017B
        gbc.setState(0x83c6, 0x6ee8, 0xae40, 0xf3e3, 0x3116, 0x4371, 0x1, 0x0);
        gbc.writeMem(0x83c6, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x83c6));
        // 82 017C
        gbc.setState(0xdd8f, 0xa402, 0x8370, 0x3ccb, 0x2aa5, 0xdfe, 0x0, 0x1);
        gbc.writeMem(0xdd8f, { 0x82 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa402, gbc.sp());
        EXPECT(0xdd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdd8f));
        // 82 017D
        gbc.setState(0x383a, 0x80be, 0x96b0, 0x56fd, 0x23a, 0x5f6c, 0x1, 0x0);
        gbc.writeMem(0x383a, { 0x82 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0x383b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 017E
        gbc.setState(0x7a66, 0x867, 0x8a40, 0x6c68, 0x6bb1, 0x908e, 0x1, 0x1);
        gbc.writeMem(0x7a66, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x867, gbc.sp());
        EXPECT(0x7a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 017F
        gbc.setState(0xbd4, 0x4081, 0x4140, 0xce7e, 0x7ff1, 0x8bb2, 0x0, 0x1);
        gbc.writeMem(0xbd4, { 0x82 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4081, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0180
        gbc.setState(0x72a, 0x6884, 0xf490, 0x48e5, 0xdcdb, 0xdb10, 0x1, 0x0);
        gbc.writeMem(0x72a, { 0x82 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0x72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0181
        gbc.setState(0xc75d, 0x488c, 0xbb0, 0x825, 0x4f23, 0x2efa, 0x0, 0x0);
        gbc.writeMem(0xc75d, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x488c, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc75d));
        // 82 0182
        gbc.setState(0x60fc, 0x4124, 0xcb30, 0xc6cc, 0x7413, 0x63ad, 0x0, 0x1);
        gbc.writeMem(0x60fc, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4124, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0184
        gbc.setState(0x1045, 0xdc31, 0x13e0, 0x1447, 0x65df, 0xbabe, 0x0, 0x0);
        gbc.writeMem(0x1045, { 0x82 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x1046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0185
        gbc.setState(0xc45f, 0x680e, 0xd080, 0xcfca, 0x5a77, 0xc163, 0x0, 0x0);
        gbc.writeMem(0xc45f, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc45f));
        // 82 0186
        gbc.setState(0x5ea9, 0xa417, 0xfc70, 0x7807, 0x79c7, 0x3d67, 0x0, 0x1);
        gbc.writeMem(0x5ea9, { 0x82 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa417, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0187
        gbc.setState(0x9f67, 0x657e, 0xbef0, 0x2db8, 0xc55d, 0xb8d3, 0x1, 0x0);
        gbc.writeMem(0x9f67, { 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x657e, gbc.sp());
        EXPECT(0x9f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9f67));
        // 82 0188
        gbc.setState(0x75f1, 0x6dae, 0xce70, 0x5908, 0xa377, 0xe103, 0x1, 0x0);
        gbc.writeMem(0x75f1, { 0x82 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6dae, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0189
        gbc.setState(0x7c9a, 0x1f20, 0x3c90, 0x4bcd, 0x7fd2, 0x5b00, 0x0, 0x0);
        gbc.writeMem(0x7c9a, { 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1f20, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 018A
        gbc.setState(0xad3d, 0x835a, 0x5090, 0x3df7, 0xafb2, 0x8149, 0x1, 0x0);
        gbc.writeMem(0xad3d, { 0x82 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x835a, gbc.sp());
        EXPECT(0xad3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xad3d));
        // 82 018B
        gbc.setState(0x7f90, 0xd102, 0x5c50, 0xb82a, 0x99a1, 0x26ca, 0x0, 0x1);
        gbc.writeMem(0x7f90, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd102, gbc.sp());
        EXPECT(0x7f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 018C
        gbc.setState(0xab9f, 0x85a6, 0x2710, 0x8b39, 0x6313, 0x46c8, 0x1, 0x0);
        gbc.writeMem(0xab9f, { 0x82 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xab9f));
        // 82 018D
        gbc.setState(0x717, 0x5a5d, 0xe320, 0x565, 0x1249, 0x592b, 0x1, 0x0);
        gbc.writeMem(0x717, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5a5d, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 018E
        gbc.setState(0x7635, 0x532b, 0xe8e0, 0x2f96, 0x7d20, 0xd33b, 0x1, 0x1);
        gbc.writeMem(0x7635, { 0x82 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 018F
        gbc.setState(0xa4fd, 0x19f7, 0xd340, 0x2f4b, 0x374c, 0xeb5a, 0x1, 0x0);
        gbc.writeMem(0xa4fd, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x19f7, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa4fd));
        // 82 0190
        gbc.setState(0x6339, 0x1cdb, 0x8f00, 0x6c43, 0x7a08, 0xee1a, 0x0, 0x0);
        gbc.writeMem(0x6339, { 0x82 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0191
        gbc.setState(0xbf60, 0xa848, 0xc340, 0x9592, 0x96ea, 0x4f7, 0x1, 0x0);
        gbc.writeMem(0xbf60, { 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa848, gbc.sp());
        EXPECT(0xbf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf60));
        // 82 0192
        gbc.setState(0x5339, 0xfd16, 0x3ea0, 0xd9a4, 0x1932, 0xc29a, 0x0, 0x0);
        gbc.writeMem(0x5339, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x533a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0193
        gbc.setState(0x2cec, 0xc08c, 0xb80, 0xcddb, 0xd368, 0x670d, 0x0, 0x1);
        gbc.writeMem(0x2cec, { 0x82 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x2ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0194
        gbc.setState(0xbf8a, 0x9e4f, 0xeb50, 0xb6d0, 0x308, 0xff5f, 0x0, 0x0);
        gbc.writeMem(0xbf8a, { 0x82 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf8a));
        // 82 0195
        gbc.setState(0x19c5, 0x226a, 0x3860, 0x8820, 0x9cbc, 0x582c, 0x0, 0x1);
        gbc.writeMem(0x19c5, { 0x82 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0x19c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0197
        gbc.setState(0x790d, 0xc062, 0xbe80, 0x272e, 0x811a, 0xb41, 0x1, 0x1);
        gbc.writeMem(0x790d, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc062, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0198
        gbc.setState(0xd05c, 0x90de, 0x8240, 0x1230, 0x492f, 0x1cd5, 0x1, 0x1);
        gbc.writeMem(0xd05c, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x90de, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd05c));
        // 82 0199
        gbc.setState(0x6e7, 0x9585, 0xa650, 0xeae8, 0x5ce7, 0x5307, 0x0, 0x1);
        gbc.writeMem(0x6e7, { 0x82 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9585, gbc.sp());
        EXPECT(0x6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 019A
        gbc.setState(0x5e82, 0xfea8, 0x7af0, 0x5e41, 0xc1ca, 0x6fdb, 0x1, 0x0);
        gbc.writeMem(0x5e82, { 0x82 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0x5e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 019B
        gbc.setState(0x4085, 0x282c, 0xbd60, 0x62bd, 0x3759, 0x94e5, 0x0, 0x1);
        gbc.writeMem(0x4085, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 019C
        gbc.setState(0x694b, 0xac35, 0xc430, 0x7781, 0xd763, 0x70a7, 0x1, 0x0);
        gbc.writeMem(0x694b, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xac35, gbc.sp());
        EXPECT(0x694c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 019D
        gbc.setState(0x408f, 0x12db, 0x9ab0, 0x9731, 0x18b5, 0x3cba, 0x1, 0x0);
        gbc.writeMem(0x408f, { 0x82 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0x4090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 019E
        gbc.setState(0x17be, 0xef57, 0xe7b0, 0xf5a0, 0x43a8, 0x98cd, 0x1, 0x0);
        gbc.writeMem(0x17be, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xef57, gbc.sp());
        EXPECT(0x17bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 019F
        gbc.setState(0xe322, 0x26ce, 0xe200, 0x1c63, 0x486, 0x20f1, 0x1, 0x0);
        gbc.writeMem(0xe322, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe322));
        // 82 01A0
        gbc.setState(0x9672, 0x66e7, 0x40d0, 0x2af9, 0xe622, 0x58b, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0x82 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x66e7, gbc.sp());
        EXPECT(0x9673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9672));
        // 82 01A1
        gbc.setState(0xf4c, 0xf75c, 0x29b0, 0x9211, 0x89d1, 0x476e, 0x0, 0x1);
        gbc.writeMem(0xf4c, { 0x82 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf75c, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01A2
        gbc.setState(0xbfe0, 0x8d64, 0x19b0, 0xcd57, 0xbb7f, 0x3002, 0x0, 0x0);
        gbc.writeMem(0xbfe0, { 0x82 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8d64, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbfe0));
        // 82 01A3
        gbc.setState(0x3c2a, 0x88d4, 0xd80, 0xd9a0, 0x7ff4, 0x15eb, 0x0, 0x0);
        gbc.writeMem(0x3c2a, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01A4
        gbc.setState(0x8346, 0x84b6, 0xa80, 0xe135, 0xdd, 0xa14f, 0x0, 0x0);
        gbc.writeMem(0x8346, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0x8347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8346));
        // 82 01A5
        gbc.setState(0xcc97, 0x2602, 0x2e00, 0x1310, 0x64b4, 0x1f38, 0x0, 0x1);
        gbc.writeMem(0xcc97, { 0x82 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2602, gbc.sp());
        EXPECT(0xcc98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc97));
        // 82 01A6
        gbc.setState(0x3b7, 0x29d9, 0x6280, 0x1918, 0x4332, 0x57c9, 0x0, 0x0);
        gbc.writeMem(0x3b7, { 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01A7
        gbc.setState(0x60dd, 0x3a5b, 0xf480, 0x9942, 0xf45a, 0xea32, 0x1, 0x1);
        gbc.writeMem(0x60dd, { 0x82 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01A8
        gbc.setState(0x5f88, 0xa9a2, 0xb100, 0x7fe1, 0x49c6, 0x2f58, 0x1, 0x0);
        gbc.writeMem(0x5f88, { 0x82 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01A9
        gbc.setState(0xbee8, 0x1104, 0x44c0, 0x34f2, 0xa632, 0xa5a0, 0x0, 0x1);
        gbc.writeMem(0xbee8, { 0x82 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1104, gbc.sp());
        EXPECT(0xbee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbee8));
        // 82 01AA
        gbc.setState(0xe79b, 0x4fbf, 0xa350, 0x7e06, 0xd8e5, 0x3f54, 0x1, 0x0);
        gbc.writeMem(0xe79b, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4fbf, gbc.sp());
        EXPECT(0xe79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe79b));
        // 82 01AB
        gbc.setState(0xdfff, 0x6155, 0x4e00, 0x8c63, 0xdec3, 0x56d9, 0x0, 0x0);
        gbc.writeMem(0xdfff, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6155, gbc.sp());
        EXPECT(0xe000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdfff));
        // 82 01AC
        gbc.setState(0x82e6, 0x79c8, 0xd0, 0x46a5, 0xadbc, 0xa9ff, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0x82 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x82e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x82e6));
        // 82 01AD
        gbc.setState(0xe57c, 0x7b7e, 0x5180, 0xf094, 0x8d77, 0x676, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0x82 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7b7e, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe57c));
        // 82 01AE
        gbc.setState(0x39d0, 0xd64f, 0xbf00, 0x6d91, 0x9e83, 0x6f41, 0x0, 0x0);
        gbc.writeMem(0x39d0, { 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01B0
        gbc.setState(0xb76b, 0xf416, 0xdd70, 0x4b10, 0x5d23, 0xa840, 0x0, 0x1);
        gbc.writeMem(0xb76b, { 0x82 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb76b));
        // 82 01B1
        gbc.setState(0xc6c0, 0x42d3, 0x1210, 0x1c7a, 0x1d83, 0x1d52, 0x1, 0x1);
        gbc.writeMem(0xc6c0, { 0x82 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x42d3, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc6c0));
        // 82 01B2
        gbc.setState(0x2956, 0xb3c8, 0x99a0, 0x56fe, 0x35c3, 0xc9a4, 0x1, 0x0);
        gbc.writeMem(0x2956, { 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01B3
        gbc.setState(0x9a28, 0xb480, 0x2ef0, 0x55d1, 0x5e22, 0x8c19, 0x0, 0x0);
        gbc.writeMem(0x9a28, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0x9a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9a28));
        // 82 01B4
        gbc.setState(0x8d84, 0xfbaa, 0x3260, 0x7ddd, 0xe54, 0x310a, 0x0, 0x0);
        gbc.writeMem(0x8d84, { 0x82 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8d84));
        // 82 01B5
        gbc.setState(0x653, 0x54a3, 0x9ab0, 0xd454, 0x6803, 0x194, 0x1, 0x0);
        gbc.writeMem(0x653, { 0x82 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x54a3, gbc.sp());
        EXPECT(0x654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01B6
        gbc.setState(0x10a8, 0x62b7, 0xd640, 0x7212, 0xa888, 0x9c51, 0x0, 0x0);
        gbc.writeMem(0x10a8, { 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0x10a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01B8
        gbc.setState(0x299f, 0xa097, 0xd0a0, 0x26fc, 0xa483, 0x21c2, 0x1, 0x0);
        gbc.writeMem(0x299f, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa097, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01B9
        gbc.setState(0xb5b, 0x4f49, 0x5a80, 0xacce, 0x9728, 0xa55f, 0x1, 0x1);
        gbc.writeMem(0xb5b, { 0x82 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4f49, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01BA
        gbc.setState(0xe617, 0x57c, 0xc210, 0x174, 0x2f, 0x649e, 0x1, 0x0);
        gbc.writeMem(0xe617, { 0x82 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe617));
        // 82 01BB
        gbc.setState(0x580e, 0x64d, 0xf900, 0xd28, 0x13ec, 0xf017, 0x0, 0x1);
        gbc.writeMem(0x580e, { 0x82 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0x580f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01BC
        gbc.setState(0x35e4, 0x2b6d, 0xeb50, 0x6805, 0x42e2, 0xe00b, 0x0, 0x0);
        gbc.writeMem(0x35e4, { 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b6d, gbc.sp());
        EXPECT(0x35e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01BD
        gbc.setState(0x54c9, 0xf6fe, 0x2d70, 0x4f2f, 0x9c22, 0x9432, 0x0, 0x0);
        gbc.writeMem(0x54c9, { 0x82 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01BE
        gbc.setState(0xe4ba, 0xc678, 0xd7e0, 0x40ae, 0xbcaa, 0x63dc, 0x0, 0x1);
        gbc.writeMem(0xe4ba, { 0x82 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0xe4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe4ba));
        // 82 01BF
        gbc.setState(0x6a1c, 0xca38, 0x66e0, 0x8d7d, 0xe78, 0x6d0f, 0x0, 0x0);
        gbc.writeMem(0x6a1c, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0x6a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01C0
        gbc.setState(0xd049, 0x3e6b, 0x6700, 0xe97f, 0xb524, 0xe9fd, 0x1, 0x1);
        gbc.writeMem(0xd049, { 0x82 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3e6b, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd049));
        // 82 01C1
        gbc.setState(0x5db0, 0xc3e0, 0xed90, 0x50c7, 0xef3b, 0xad06, 0x0, 0x1);
        gbc.writeMem(0x5db0, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc3e0, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01C2
        gbc.setState(0x60c0, 0x3bcb, 0x3ea0, 0xcf84, 0x105, 0xd2fa, 0x0, 0x1);
        gbc.writeMem(0x60c0, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01C3
        gbc.setState(0xe52, 0x2459, 0x30d0, 0x1430, 0x5652, 0x463b, 0x1, 0x0);
        gbc.writeMem(0xe52, { 0x82 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01C5
        gbc.setState(0xd545, 0x1adc, 0x2bc0, 0x7307, 0x5009, 0x17b4, 0x1, 0x0);
        gbc.writeMem(0xd545, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xd546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd545));
        // 82 01C6
        gbc.setState(0xe000, 0xeb41, 0x3070, 0xb7be, 0xd036, 0xc7e5, 0x1, 0x0);
        gbc.writeMem(0xe000, { 0x82 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeb41, gbc.sp());
        EXPECT(0xe001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe000));
        // 82 01C7
        gbc.setState(0xd70a, 0x4716, 0xf3a0, 0xff65, 0x5661, 0x6723, 0x1, 0x1);
        gbc.writeMem(0xd70a, { 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd70a));
        // 82 01C8
        gbc.setState(0x4f64, 0xee15, 0x3e20, 0x8304, 0xb7a9, 0x1648, 0x0, 0x0);
        gbc.writeMem(0x4f64, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01C9
        gbc.setState(0xbc1d, 0x2fb0, 0x2c50, 0x7df6, 0xb8d1, 0x9077, 0x0, 0x1);
        gbc.writeMem(0xbc1d, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0xbc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbc1d));
        // 82 01CA
        gbc.setState(0x3682, 0xa53e, 0xa6f0, 0xab73, 0xecbf, 0xf6c4, 0x0, 0x0);
        gbc.writeMem(0x3682, { 0x82 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa53e, gbc.sp());
        EXPECT(0x3683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01CB
        gbc.setState(0xcb43, 0x6deb, 0xa490, 0xf89d, 0x453b, 0x3e88, 0x0, 0x0);
        gbc.writeMem(0xcb43, { 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6deb, gbc.sp());
        EXPECT(0xcb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcb43));
        // 82 01CC
        gbc.setState(0x55fe, 0xd1d, 0x7ed0, 0x323a, 0xe699, 0x2e3c, 0x0, 0x0);
        gbc.writeMem(0x55fe, { 0x82 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd1d, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01CD
        gbc.setState(0x81c9, 0x53aa, 0xee20, 0x5ef5, 0xc455, 0x34c2, 0x1, 0x1);
        gbc.writeMem(0x81c9, { 0x82 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x81c9));
        // 82 01CE
        gbc.setState(0x51e9, 0x9d09, 0xbb40, 0x7ea1, 0x9b8e, 0xd884, 0x0, 0x1);
        gbc.writeMem(0x51e9, { 0x82 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9d09, gbc.sp());
        EXPECT(0x51ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01CF
        gbc.setState(0x9f1e, 0x1633, 0xc390, 0x7b96, 0xfdce, 0x1321, 0x0, 0x0);
        gbc.writeMem(0x9f1e, { 0x82 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1633, gbc.sp());
        EXPECT(0x9f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9f1e));
        // 82 01D0
        gbc.setState(0x35b3, 0xae49, 0x6450, 0xe2f7, 0xdf5a, 0x1c11, 0x0, 0x0);
        gbc.writeMem(0x35b3, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae49, gbc.sp());
        EXPECT(0x35b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01D1
        gbc.setState(0x7ac2, 0x653e, 0xa090, 0x3549, 0xce, 0xe929, 0x1, 0x0);
        gbc.writeMem(0x7ac2, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x7ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01D2
        gbc.setState(0xd064, 0x735e, 0x780, 0x5841, 0x755a, 0xa683, 0x1, 0x1);
        gbc.writeMem(0xd064, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x735e, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd064));
        // 82 01D3
        gbc.setState(0x8342, 0x7891, 0x4e40, 0x5c10, 0x2eba, 0xf9f3, 0x1, 0x1);
        gbc.writeMem(0x8342, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8342));
        // 82 01D4
        gbc.setState(0xbcb6, 0x9424, 0x1ed0, 0x3e63, 0xde72, 0x7d6b, 0x1, 0x0);
        gbc.writeMem(0xbcb6, { 0x82 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0xbcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbcb6));
        // 82 01D6
        gbc.setState(0xd963, 0xee15, 0x74c0, 0xc9e5, 0xbf76, 0xa41c, 0x0, 0x0);
        gbc.writeMem(0xd963, { 0x82 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0xd964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd963));
        // 82 01D7
        gbc.setState(0xd132, 0xfdc2, 0x86e0, 0x4009, 0x9083, 0x4c90, 0x1, 0x1);
        gbc.writeMem(0xd132, { 0x82 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0xd133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd132));
        // 82 01D8
        gbc.setState(0xce98, 0x98d9, 0x5450, 0x63c, 0xd866, 0xdb5e, 0x0, 0x0);
        gbc.writeMem(0xce98, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x98d9, gbc.sp());
        EXPECT(0xce99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xce98));
        // 82 01D9
        gbc.setState(0x53fa, 0x5e2c, 0x8510, 0xdbed, 0xb776, 0x6bea, 0x0, 0x1);
        gbc.writeMem(0x53fa, { 0x82 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e2c, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01DA
        gbc.setState(0xe831, 0x9d3c, 0xc850, 0x5990, 0xbb9b, 0xc836, 0x1, 0x1);
        gbc.writeMem(0xe831, { 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9d3c, gbc.sp());
        EXPECT(0xe832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe831));
        // 82 01DB
        gbc.setState(0x2f39, 0x55fb, 0x560, 0x56f0, 0x7698, 0x4495, 0x0, 0x0);
        gbc.writeMem(0x2f39, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0x2f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01DC
        gbc.setState(0xd8c1, 0xa699, 0x8150, 0xfa56, 0xda6f, 0x4683, 0x0, 0x0);
        gbc.writeMem(0xd8c1, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa699, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd8c1));
        // 82 01DD
        gbc.setState(0x98d2, 0xe429, 0xbe30, 0xef78, 0xba91, 0xc2b8, 0x0, 0x1);
        gbc.writeMem(0x98d2, { 0x82 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe429, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x98d2));
        // 82 01DE
        gbc.setState(0x262, 0x87ee, 0x3d30, 0x9242, 0xf52b, 0x9461, 0x1, 0x0);
        gbc.writeMem(0x262, { 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x87ee, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01DF
        gbc.setState(0xec83, 0xc768, 0x49a0, 0x3026, 0xc5a9, 0x9eb7, 0x0, 0x0);
        gbc.writeMem(0xec83, { 0x82 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc768, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xec83));
        // 82 01E0
        gbc.setState(0xcffa, 0x9778, 0xaf70, 0x846a, 0x15fe, 0xc95e, 0x1, 0x1);
        gbc.writeMem(0xcffa, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9778, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcffa));
        // 82 01E1
        gbc.setState(0x5db9, 0x9615, 0xbb30, 0xda8e, 0x5acc, 0x770e, 0x0, 0x1);
        gbc.writeMem(0x5db9, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9615, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01E2
        gbc.setState(0xa015, 0xfffa, 0x6e60, 0xb223, 0xe099, 0xe9eb, 0x1, 0x1);
        gbc.writeMem(0xa015, { 0x82 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfffa, gbc.sp());
        EXPECT(0xa016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa015));
        // 82 01E3
        gbc.setState(0xae89, 0x6c35, 0xea0, 0x86fe, 0x7b3, 0xdf09, 0x1, 0x0);
        gbc.writeMem(0xae89, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xae89));
        // 82 01E4
        gbc.setState(0x32e6, 0x7213, 0x3960, 0xdbd5, 0xb3f, 0xd0a, 0x0, 0x0);
        gbc.writeMem(0x32e6, { 0x82 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x32e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01E5
        gbc.setState(0x5159, 0x7c5b, 0x9300, 0x461a, 0x36cf, 0x126c, 0x1, 0x1);
        gbc.writeMem(0x5159, { 0x82 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0x515a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01E6
        gbc.setState(0x3470, 0x6b4f, 0x80e0, 0xd212, 0x4bad, 0xb6b2, 0x1, 0x0);
        gbc.writeMem(0x3470, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6b4f, gbc.sp());
        EXPECT(0x3471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01E7
        gbc.setState(0xbfbd, 0xa43f, 0xffc0, 0xf1dc, 0xeae, 0x9464, 0x1, 0x1);
        gbc.writeMem(0xbfbd, { 0x82 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa43f, gbc.sp());
        EXPECT(0xbfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbfbd));
        // 82 01E8
        gbc.setState(0xbe1a, 0x7095, 0x1620, 0xacdf, 0xc930, 0xc857, 0x1, 0x1);
        gbc.writeMem(0xbe1a, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0xbe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbe1a));
        // 82 01E9
        gbc.setState(0x58d0, 0x5e80, 0x680, 0xb09a, 0xe9e1, 0xac, 0x1, 0x1);
        gbc.writeMem(0x58d0, { 0x82 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x58d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01EA
        gbc.setState(0x3f04, 0xe3fa, 0xcc00, 0x859, 0xcfaf, 0xb3e3, 0x0, 0x1);
        gbc.writeMem(0x3f04, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe3fa, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01EB
        gbc.setState(0x201c, 0x6a34, 0x96c0, 0xa29f, 0x5992, 0xcc65, 0x0, 0x0);
        gbc.writeMem(0x201c, { 0x82 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6a34, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01EC
        gbc.setState(0xb651, 0xc7f3, 0x33f0, 0x5e6e, 0x93a9, 0xbc0d, 0x0, 0x0);
        gbc.writeMem(0xb651, { 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc7f3, gbc.sp());
        EXPECT(0xb652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb651));
        // 82 01ED
        gbc.setState(0x289a, 0x7863, 0x8ce0, 0x4a81, 0xf35a, 0x4138, 0x1, 0x1);
        gbc.writeMem(0x289a, { 0x82 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7863, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01EE
        gbc.setState(0x8b29, 0xf4ac, 0xe250, 0xfecf, 0xa63f, 0x5b80, 0x0, 0x0);
        gbc.writeMem(0x8b29, { 0x82 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x8b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8b29));
        // 82 01EF
        gbc.setState(0xe74c, 0x43c3, 0x4fd0, 0xedf3, 0x84ca, 0x6d91, 0x0, 0x0);
        gbc.writeMem(0xe74c, { 0x82 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x43c3, gbc.sp());
        EXPECT(0xe74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe74c));
        // 82 01F0
        gbc.setState(0x73fb, 0x5cc0, 0x6780, 0x1df2, 0x7010, 0xa1bb, 0x1, 0x1);
        gbc.writeMem(0x73fb, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5cc0, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01F1
        gbc.setState(0xbefd, 0xa0f, 0x3070, 0x7a4d, 0xd717, 0x3fdd, 0x0, 0x1);
        gbc.writeMem(0xbefd, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa0f, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbefd));
        // 82 01F2
        gbc.setState(0x126e, 0xe491, 0xc380, 0x7a26, 0xed3f, 0xe81b, 0x1, 0x1);
        gbc.writeMem(0x126e, { 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe491, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01F3
        gbc.setState(0xcc99, 0x4a89, 0x35e0, 0x14aa, 0x5c53, 0x24d6, 0x1, 0x0);
        gbc.writeMem(0xcc99, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc99));
        // 82 01F4
        gbc.setState(0xd7cb, 0x466a, 0x2100, 0x5983, 0x64f7, 0xe4a0, 0x0, 0x0);
        gbc.writeMem(0xd7cb, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0xd7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd7cb));
        // 82 01F5
        gbc.setState(0x2dd2, 0x1a73, 0xa690, 0xaaf2, 0x7cdf, 0x40d9, 0x1, 0x0);
        gbc.writeMem(0x2dd2, { 0x82 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x2dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01F6
        gbc.setState(0x8a22, 0x93b, 0xba70, 0xed81, 0xed43, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0x8a22, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x93b, gbc.sp());
        EXPECT(0x8a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a22));
        // 82 01F7
        gbc.setState(0xc68b, 0x4b2a, 0x5a30, 0x2f55, 0x1615, 0x7ec6, 0x1, 0x0);
        gbc.writeMem(0xc68b, { 0x82 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b2a, gbc.sp());
        EXPECT(0xc68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc68b));
        // 82 01F8
        gbc.setState(0x35f3, 0x840c, 0xa550, 0xdc98, 0x7f01, 0x3786, 0x1, 0x0);
        gbc.writeMem(0x35f3, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0x35f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01F9
        gbc.setState(0xdd0, 0xa2a7, 0x90c0, 0x48f, 0x743d, 0x77f3, 0x0, 0x0);
        gbc.writeMem(0xdd0, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa2a7, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01FA
        gbc.setState(0x7ba3, 0x7fdd, 0x1280, 0x4ba9, 0xb2fe, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0x7ba3, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7fdd, gbc.sp());
        EXPECT(0x7ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01FB
        gbc.setState(0x7c3, 0xc284, 0xc690, 0x4e4c, 0x4cee, 0x3e7c, 0x0, 0x1);
        gbc.writeMem(0x7c3, { 0x82 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc284, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01FC
        gbc.setState(0x742, 0xe557, 0x30f0, 0x1e71, 0x5520, 0xa2b6, 0x0, 0x0);
        gbc.writeMem(0x742, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 01FD
        gbc.setState(0x7735, 0x1dbb, 0xb850, 0x12dd, 0x73e3, 0x3ee7, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0x82 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1dbb, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01FE
        gbc.setState(0x13ca, 0xe9ed, 0xa640, 0xbce3, 0xf70e, 0xc504, 0x0, 0x0);
        gbc.writeMem(0x13ca, { 0x82 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe9ed, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 01FF
        gbc.setState(0x28e0, 0xdd46, 0xca00, 0x607e, 0xaa57, 0x7f81, 0x1, 0x1);
        gbc.writeMem(0x28e0, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x28e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0200
        gbc.setState(0x345c, 0x6b5d, 0xc070, 0xfa88, 0xeae6, 0x2cb8, 0x1, 0x1);
        gbc.writeMem(0x345c, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0201
        gbc.setState(0x444d, 0x1e50, 0xc610, 0x5a36, 0x929, 0x6f9e, 0x0, 0x0);
        gbc.writeMem(0x444d, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1e50, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0202
        gbc.setState(0x5cbb, 0x7ede, 0xbaf0, 0x28ae, 0xdc8c, 0x4aab, 0x0, 0x1);
        gbc.writeMem(0x5cbb, { 0x82 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ede, gbc.sp());
        EXPECT(0x5cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0203
        gbc.setState(0x6b4, 0x73c1, 0xf400, 0xd64b, 0xcda0, 0xb68f, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0x82 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0204
        gbc.setState(0xc1be, 0xa206, 0xbb50, 0xc972, 0x9282, 0xc33c, 0x0, 0x0);
        gbc.writeMem(0xc1be, { 0x82 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc1be));
        // 82 0206
        gbc.setState(0xe3ce, 0xeb7b, 0x2900, 0xa8b, 0x303, 0x2a60, 0x0, 0x0);
        gbc.writeMem(0xe3ce, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb7b, gbc.sp());
        EXPECT(0xe3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe3ce));
        // 82 0207
        gbc.setState(0x3729, 0x6598, 0xccd0, 0x8921, 0xa54, 0x4d2c, 0x0, 0x0);
        gbc.writeMem(0x3729, { 0x82 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0x372a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0208
        gbc.setState(0x3599, 0xbff1, 0x370, 0x6fc0, 0xab75, 0x1710, 0x1, 0x0);
        gbc.writeMem(0x3599, { 0x82 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0x359a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0209
        gbc.setState(0xbdad, 0x6ab2, 0xc280, 0x1f1c, 0x1987, 0xa9bf, 0x1, 0x0);
        gbc.writeMem(0xbdad, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbdad));
        // 82 020A
        gbc.setState(0x7c63, 0x279e, 0x2f30, 0x5df9, 0xa14f, 0xb284, 0x0, 0x1);
        gbc.writeMem(0x7c63, { 0x82 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 020B
        gbc.setState(0xb1f1, 0xfa42, 0x9310, 0x834, 0x7d45, 0x9473, 0x1, 0x1);
        gbc.writeMem(0xb1f1, { 0x82 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb1f1));
        // 82 020C
        gbc.setState(0x5d51, 0x44a1, 0xcc10, 0xa121, 0x1190, 0x6cc7, 0x1, 0x0);
        gbc.writeMem(0x5d51, { 0x82 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0x5d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 020D
        gbc.setState(0x7f85, 0x8247, 0x4630, 0x6c24, 0x1334, 0x4f27, 0x1, 0x0);
        gbc.writeMem(0x7f85, { 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x7f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 020E
        gbc.setState(0x410c, 0x5711, 0x8a00, 0xda8c, 0x9029, 0xc7b4, 0x0, 0x1);
        gbc.writeMem(0x410c, { 0x82 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0x410d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 020F
        gbc.setState(0x50d1, 0x20e9, 0x1fe0, 0x2b14, 0xabc3, 0xf582, 0x1, 0x0);
        gbc.writeMem(0x50d1, { 0x82 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x20e9, gbc.sp());
        EXPECT(0x50d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0210
        gbc.setState(0x6f85, 0x800e, 0xde00, 0x3917, 0xdc1b, 0x2f49, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0x82 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x6f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0211
        gbc.setState(0x38d, 0xcb0a, 0xf540, 0xd13c, 0xce23, 0xa213, 0x1, 0x0);
        gbc.writeMem(0x38d, { 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb0a, gbc.sp());
        EXPECT(0x38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0212
        gbc.setState(0x16e3, 0xccc8, 0x3aa0, 0xefb6, 0xcd08, 0xc4b5, 0x0, 0x0);
        gbc.writeMem(0x16e3, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xccc8, gbc.sp());
        EXPECT(0x16e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0213
        gbc.setState(0xd723, 0x8e2, 0x3ef0, 0x16b4, 0x4361, 0xb834, 0x1, 0x1);
        gbc.writeMem(0xd723, { 0x82 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8e2, gbc.sp());
        EXPECT(0xd724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd723));
        // 82 0214
        gbc.setState(0xd463, 0xf679, 0x1ef0, 0x2ced, 0xd698, 0x5632, 0x1, 0x0);
        gbc.writeMem(0xd463, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0xd464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd463));
        // 82 0215
        gbc.setState(0xca6e, 0x7747, 0x8a60, 0xb4ef, 0x817a, 0x8df1, 0x1, 0x1);
        gbc.writeMem(0xca6e, { 0x82 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7747, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xca6e));
        // 82 0216
        gbc.setState(0x6049, 0xa775, 0xea10, 0x94d9, 0xfa18, 0x55f7, 0x1, 0x1);
        gbc.writeMem(0x6049, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa775, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0217
        gbc.setState(0x7c0f, 0x434d, 0xab80, 0x7d0c, 0x588d, 0x1b70, 0x1, 0x0);
        gbc.writeMem(0x7c0f, { 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x7c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0218
        gbc.setState(0x8e4, 0x7b33, 0xcd90, 0x3778, 0x6b4c, 0x40ec, 0x0, 0x0);
        gbc.writeMem(0x8e4, { 0x82 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7b33, gbc.sp());
        EXPECT(0x8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0219
        gbc.setState(0x4c46, 0x888f, 0xb520, 0x6aeb, 0x1ad9, 0xe814, 0x0, 0x1);
        gbc.writeMem(0x4c46, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 021A
        gbc.setState(0xb4fe, 0x1476, 0x9160, 0x5b6f, 0xa22b, 0xbf9f, 0x1, 0x0);
        gbc.writeMem(0xb4fe, { 0x82 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0xb4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb4fe));
        // 82 021B
        gbc.setState(0xab9f, 0x8d1b, 0x940, 0xfcca, 0x56c3, 0x120a, 0x0, 0x1);
        gbc.writeMem(0xab9f, { 0x82 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xab9f));
        // 82 021C
        gbc.setState(0xdde2, 0x901d, 0xc0, 0x5865, 0x4284, 0xd107, 0x0, 0x0);
        gbc.writeMem(0xdde2, { 0x82 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x901d, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdde2));
        // 82 021D
        gbc.setState(0xac30, 0xc5ee, 0x8050, 0x2533, 0x2740, 0xdf70, 0x1, 0x0);
        gbc.writeMem(0xac30, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc5ee, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xac30));
        // 82 021E
        gbc.setState(0xbebb, 0xa529, 0x30, 0x2c5c, 0x1716, 0x65c0, 0x1, 0x0);
        gbc.writeMem(0xbebb, { 0x82 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa529, gbc.sp());
        EXPECT(0xbebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbebb));
        // 82 021F
        gbc.setState(0x5e68, 0x7295, 0x6f70, 0xe3b, 0xe9f6, 0x19c6, 0x0, 0x0);
        gbc.writeMem(0x5e68, { 0x82 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0220
        gbc.setState(0xc705, 0x5966, 0x19c0, 0x7d08, 0x905c, 0xdc29, 0x1, 0x1);
        gbc.writeMem(0xc705, { 0x82 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5966, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc705));
        // 82 0221
        gbc.setState(0x4cb0, 0x9403, 0x9930, 0xec54, 0xf4c4, 0x8a47, 0x0, 0x1);
        gbc.writeMem(0x4cb0, { 0x82 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0222
        gbc.setState(0xa114, 0x8551, 0x88f0, 0xb727, 0xac03, 0x575c, 0x1, 0x0);
        gbc.writeMem(0xa114, { 0x82 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0xa115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa114));
        // 82 0223
        gbc.setState(0x1a3b, 0xd799, 0xe010, 0x4262, 0x5abb, 0x3c28, 0x0, 0x1);
        gbc.writeMem(0x1a3b, { 0x82 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0224
        gbc.setState(0xa2a1, 0x3248, 0xacb0, 0xd0f1, 0xac7a, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0xa2a1, { 0x82 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa2a1));
        // 82 0225
        gbc.setState(0x614c, 0x140, 0x67b0, 0x19f2, 0xc22b, 0xe5d4, 0x1, 0x0);
        gbc.writeMem(0x614c, { 0x82 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x140, gbc.sp());
        EXPECT(0x614d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0226
        gbc.setState(0x63f3, 0x407f, 0xa030, 0x6d6b, 0x79b7, 0x21f2, 0x1, 0x0);
        gbc.writeMem(0x63f3, { 0x82 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0227
        gbc.setState(0x6cd0, 0xa7f0, 0xb300, 0xe088, 0x5ded, 0xdec, 0x1, 0x0);
        gbc.writeMem(0x6cd0, { 0x82 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa7f0, gbc.sp());
        EXPECT(0x6cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0228
        gbc.setState(0xb386, 0x7491, 0xb3c0, 0x280d, 0x80b3, 0xa208, 0x1, 0x0);
        gbc.writeMem(0xb386, { 0x82 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb386));
        // 82 0229
        gbc.setState(0xd0b4, 0xff4e, 0xc3b0, 0x6806, 0xa682, 0x673, 0x1, 0x0);
        gbc.writeMem(0xd0b4, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0xd0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd0b4));
        // 82 022A
        gbc.setState(0xb626, 0xb014, 0x9710, 0x1043, 0xd979, 0x9ada, 0x0, 0x0);
        gbc.writeMem(0xb626, { 0x82 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb014, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb626));
        // 82 022B
        gbc.setState(0x419f, 0x140, 0x8f0, 0x75b2, 0x746e, 0x125d, 0x0, 0x0);
        gbc.writeMem(0x419f, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x140, gbc.sp());
        EXPECT(0x41a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 022C
        gbc.setState(0xd165, 0x1fab, 0x1b90, 0xfba1, 0x351a, 0xb839, 0x0, 0x0);
        gbc.writeMem(0xd165, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd165));
        // 82 022D
        gbc.setState(0x709b, 0x62ec, 0xf120, 0xe480, 0x3de6, 0xfc40, 0x0, 0x0);
        gbc.writeMem(0x709b, { 0x82 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x62ec, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 022F
        gbc.setState(0x27a4, 0x1a80, 0x3810, 0x79e3, 0x8a19, 0xa2c5, 0x1, 0x1);
        gbc.writeMem(0x27a4, { 0x82 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1a80, gbc.sp());
        EXPECT(0x27a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0230
        gbc.setState(0x13d7, 0x8842, 0x7c40, 0xf891, 0xd448, 0xbf20, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0231
        gbc.setState(0x8301, 0xa1a5, 0xfc30, 0x3311, 0xbc5e, 0x3364, 0x0, 0x1);
        gbc.writeMem(0x8301, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8301));
        // 82 0232
        gbc.setState(0xca46, 0x9717, 0x1ab0, 0xd6f, 0x8e04, 0x8e7d, 0x0, 0x1);
        gbc.writeMem(0xca46, { 0x82 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9717, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xca46));
        // 82 0233
        gbc.setState(0x8a42, 0x70db, 0x2510, 0xbe57, 0xf86d, 0x91c2, 0x1, 0x1);
        gbc.writeMem(0x8a42, { 0x82 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a42));
        // 82 0235
        gbc.setState(0x99c2, 0xbcce, 0x9850, 0x50f2, 0xc42f, 0xf109, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0x82 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x99c2));
        // 82 0236
        gbc.setState(0xbace, 0x878b, 0x1320, 0xada3, 0xdd72, 0x74ea, 0x0, 0x1);
        gbc.writeMem(0xbace, { 0x82 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x878b, gbc.sp());
        EXPECT(0xbacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbace));
        // 82 0237
        gbc.setState(0x1b54, 0x5bea, 0x8bf0, 0xee00, 0x406e, 0x4515, 0x0, 0x0);
        gbc.writeMem(0x1b54, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5bea, gbc.sp());
        EXPECT(0x1b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0238
        gbc.setState(0x1bd8, 0xf401, 0x40e0, 0x4c10, 0x411c, 0x127a, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0x82 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x1bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0239
        gbc.setState(0xb9ef, 0x576b, 0xead0, 0xddc, 0xf0e4, 0x2355, 0x0, 0x1);
        gbc.writeMem(0xb9ef, { 0x82 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x576b, gbc.sp());
        EXPECT(0xb9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb9ef));
        // 82 023A
        gbc.setState(0xdb9d, 0x2354, 0x5e70, 0xa8b6, 0x96e7, 0x292d, 0x1, 0x0);
        gbc.writeMem(0xdb9d, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0xdb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdb9d));
        // 82 023B
        gbc.setState(0x8d68, 0x6f37, 0xdd70, 0xdbd0, 0x6fd8, 0x832c, 0x0, 0x1);
        gbc.writeMem(0x8d68, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0x8d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8d68));
        // 82 023C
        gbc.setState(0x1ded, 0xf03d, 0x37b0, 0x3d48, 0x7572, 0xd79b, 0x1, 0x1);
        gbc.writeMem(0x1ded, { 0x82 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 023D
        gbc.setState(0x30a, 0xe9c7, 0xabe0, 0x9953, 0x150c, 0x98a1, 0x0, 0x0);
        gbc.writeMem(0x30a, { 0x82 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe9c7, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 023E
        gbc.setState(0x205b, 0x5241, 0xca0, 0x9968, 0x94f7, 0xd854, 0x1, 0x1);
        gbc.writeMem(0x205b, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5241, gbc.sp());
        EXPECT(0x205c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 023F
        gbc.setState(0xce5, 0x1820, 0xbc50, 0xdbfe, 0xfb9b, 0x1d91, 0x1, 0x0);
        gbc.writeMem(0xce5, { 0x82 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0241
        gbc.setState(0x86e8, 0x157c, 0x54c0, 0xba47, 0x2750, 0x7a29, 0x0, 0x1);
        gbc.writeMem(0x86e8, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0x86e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x86e8));
        // 82 0242
        gbc.setState(0x6180, 0xc620, 0xb300, 0x569e, 0x35ad, 0xf5b5, 0x1, 0x1);
        gbc.writeMem(0x6180, { 0x82 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc620, gbc.sp());
        EXPECT(0x6181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0243
        gbc.setState(0x8186, 0x3260, 0xa140, 0x92d, 0x9cdb, 0x3bf6, 0x1, 0x0);
        gbc.writeMem(0x8186, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8186));
        // 82 0244
        gbc.setState(0x9d4f, 0xb9, 0xbbc0, 0xbfe6, 0x8ff6, 0xc0ff, 0x0, 0x1);
        gbc.writeMem(0x9d4f, { 0x82 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x9d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9d4f));
        // 82 0245
        gbc.setState(0x38b6, 0xcba8, 0xfc90, 0x127d, 0xb56, 0xd672, 0x0, 0x0);
        gbc.writeMem(0x38b6, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcba8, gbc.sp());
        EXPECT(0x38b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0246
        gbc.setState(0x25b4, 0xae9d, 0x15b0, 0x7af9, 0x86a3, 0x6bd5, 0x0, 0x0);
        gbc.writeMem(0x25b4, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xae9d, gbc.sp());
        EXPECT(0x25b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0247
        gbc.setState(0x6699, 0x5f24, 0x9f10, 0xf2cf, 0x50fe, 0x2178, 0x0, 0x0);
        gbc.writeMem(0x6699, { 0x82 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5f24, gbc.sp());
        EXPECT(0x669a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0248
        gbc.setState(0x309d, 0x5204, 0xb830, 0x156c, 0x2e9a, 0x1a35, 0x0, 0x0);
        gbc.writeMem(0x309d, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0249
        gbc.setState(0xb58f, 0xa8fe, 0x1a0, 0x1074, 0x5d6f, 0x2e81, 0x1, 0x0);
        gbc.writeMem(0xb58f, { 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0xb590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb58f));
        // 82 024A
        gbc.setState(0xd1cc, 0x6cd5, 0x5910, 0x2c85, 0x1e57, 0xd4ac, 0x1, 0x0);
        gbc.writeMem(0xd1cc, { 0x82 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6cd5, gbc.sp());
        EXPECT(0xd1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd1cc));
        // 82 024B
        gbc.setState(0x8b43, 0x6a18, 0xe8f0, 0x7698, 0xfe56, 0x9a91, 0x1, 0x0);
        gbc.writeMem(0x8b43, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0x8b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8b43));
        // 82 024C
        gbc.setState(0xc6a3, 0x3b41, 0x2930, 0xfcea, 0xf121, 0xf441, 0x1, 0x0);
        gbc.writeMem(0xc6a3, { 0x82 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b41, gbc.sp());
        EXPECT(0xc6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc6a3));
        // 82 024D
        gbc.setState(0x6497, 0x6891, 0xe570, 0x1828, 0xb233, 0x683d, 0x1, 0x1);
        gbc.writeMem(0x6497, { 0x82 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6891, gbc.sp());
        EXPECT(0x6498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 024E
        gbc.setState(0x567b, 0xaa89, 0x7650, 0x975b, 0x1a10, 0x4294, 0x1, 0x1);
        gbc.writeMem(0x567b, { 0x82 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaa89, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 024F
        gbc.setState(0xb1e6, 0x50ad, 0xa8f0, 0x1766, 0xd52c, 0x87e7, 0x1, 0x1);
        gbc.writeMem(0xb1e6, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x50ad, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb1e6));
        // 82 0250
        gbc.setState(0x17d2, 0xc031, 0x8ca0, 0xe432, 0x540d, 0xabe8, 0x1, 0x1);
        gbc.writeMem(0x17d2, { 0x82 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc031, gbc.sp());
        EXPECT(0x17d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0251
        gbc.setState(0xc9e6, 0xde8f, 0x7410, 0x5cab, 0x804c, 0x8588, 0x1, 0x1);
        gbc.writeMem(0xc9e6, { 0x82 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde8f, gbc.sp());
        EXPECT(0xc9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc9e6));
        // 82 0252
        gbc.setState(0x80a2, 0xab3, 0x4490, 0x9395, 0x2a16, 0x4f42, 0x0, 0x0);
        gbc.writeMem(0x80a2, { 0x82 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x80a2));
        // 82 0253
        gbc.setState(0x5ccc, 0xb509, 0xc380, 0xaea2, 0xd632, 0xd001, 0x0, 0x0);
        gbc.writeMem(0x5ccc, { 0x82 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb509, gbc.sp());
        EXPECT(0x5ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0254
        gbc.setState(0xd106, 0x9843, 0x2470, 0xfca, 0x652e, 0x6fed, 0x0, 0x1);
        gbc.writeMem(0xd106, { 0x82 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9843, gbc.sp());
        EXPECT(0xd107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd106));
        // 82 0255
        gbc.setState(0xb27, 0x313c, 0xc840, 0x33df, 0xf16, 0x16f7, 0x0, 0x1);
        gbc.writeMem(0xb27, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x313c, gbc.sp());
        EXPECT(0xb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0256
        gbc.setState(0xc606, 0x4225, 0x37f0, 0x7e64, 0xf38d, 0xb2f7, 0x0, 0x1);
        gbc.writeMem(0xc606, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0xc607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc606));
        // 82 0257
        gbc.setState(0x63ed, 0x559f, 0xeba0, 0x93c1, 0x54e0, 0xa6bc, 0x1, 0x0);
        gbc.writeMem(0x63ed, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x559f, gbc.sp());
        EXPECT(0x63ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0258
        gbc.setState(0x4724, 0xdfa1, 0x9180, 0xc498, 0x737d, 0xc897, 0x0, 0x0);
        gbc.writeMem(0x4724, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdfa1, gbc.sp());
        EXPECT(0x4725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0259
        gbc.setState(0x4435, 0x8c0b, 0x3f80, 0xd685, 0x5840, 0x9d03, 0x1, 0x0);
        gbc.writeMem(0x4435, { 0x82 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8c0b, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 025A
        gbc.setState(0xd87c, 0xbedc, 0x7510, 0xfe8d, 0xb589, 0x16ca, 0x1, 0x0);
        gbc.writeMem(0xd87c, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbedc, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd87c));
        // 82 025C
        gbc.setState(0x81cf, 0xbf87, 0x7f40, 0x3831, 0x963d, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x81cf, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf87, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x81cf));
        // 82 025D
        gbc.setState(0xb05d, 0x9763, 0xdc0, 0x2ab1, 0x321f, 0x45ef, 0x1, 0x1);
        gbc.writeMem(0xb05d, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb05d));
        // 82 025E
        gbc.setState(0xc9a4, 0x560d, 0x4020, 0xab53, 0xcc11, 0x5077, 0x0, 0x0);
        gbc.writeMem(0xc9a4, { 0x82 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc9a4));
        // 82 025F
        gbc.setState(0xb144, 0xd09b, 0x53c0, 0x358f, 0xb089, 0x28d5, 0x0, 0x0);
        gbc.writeMem(0xb144, { 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd09b, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb144));
        // 82 0260
        gbc.setState(0xb11a, 0x23a9, 0x8c00, 0xbbf4, 0x9991, 0x8078, 0x0, 0x1);
        gbc.writeMem(0xb11a, { 0x82 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb11a));
        // 82 0261
        gbc.setState(0xa87b, 0x1cbb, 0x9b0, 0xb236, 0xfba7, 0x6911, 0x1, 0x1);
        gbc.writeMem(0xa87b, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa87b));
        // 82 0262
        gbc.setState(0x20c7, 0xeac1, 0x2e00, 0xd0cb, 0xfffb, 0xfe4f, 0x0, 0x1);
        gbc.writeMem(0x20c7, { 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xeac1, gbc.sp());
        EXPECT(0x20c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0263
        gbc.setState(0x49a5, 0x6296, 0x54f0, 0xb0dd, 0x8872, 0xa2a2, 0x0, 0x1);
        gbc.writeMem(0x49a5, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6296, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0264
        gbc.setState(0x42d8, 0x29c9, 0x4930, 0x91aa, 0x793, 0x2a51, 0x1, 0x1);
        gbc.writeMem(0x42d8, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x29c9, gbc.sp());
        EXPECT(0x42d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0265
        gbc.setState(0x7aa2, 0xb491, 0x9f50, 0x7c66, 0x3536, 0xa362, 0x0, 0x1);
        gbc.writeMem(0x7aa2, { 0x82 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb491, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0266
        gbc.setState(0x1e2b, 0xd0f0, 0xdc90, 0x88ec, 0xbeca, 0xaa55, 0x0, 0x0);
        gbc.writeMem(0x1e2b, { 0x82 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd0f0, gbc.sp());
        EXPECT(0x1e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0267
        gbc.setState(0xc519, 0xe0bf, 0xa690, 0xf455, 0x31fd, 0xb598, 0x0, 0x0);
        gbc.writeMem(0xc519, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe0bf, gbc.sp());
        EXPECT(0xc51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc519));
        // 82 0268
        gbc.setState(0xd380, 0xff67, 0xf020, 0xe4c3, 0xddfa, 0xe5b8, 0x0, 0x0);
        gbc.writeMem(0xd380, { 0x82 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xff67, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd380));
        // 82 0269
        gbc.setState(0x4c5c, 0x89d7, 0x4250, 0x47f7, 0x2ab7, 0xe3e, 0x1, 0x0);
        gbc.writeMem(0x4c5c, { 0x82 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0x4c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 026A
        gbc.setState(0x148a, 0xcec5, 0x9f80, 0x215b, 0xe59f, 0x402, 0x0, 0x1);
        gbc.writeMem(0x148a, { 0x82 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcec5, gbc.sp());
        EXPECT(0x148b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 026B
        gbc.setState(0x8737, 0x2b96, 0x7b90, 0x3c3c, 0x7e75, 0x292b, 0x0, 0x0);
        gbc.writeMem(0x8737, { 0x82 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x8738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8737));
        // 82 026C
        gbc.setState(0x9488, 0xac84, 0xfc70, 0x5c3e, 0x16bc, 0x6273, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0x82 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9488));
        // 82 026D
        gbc.setState(0xaecb, 0x8ebb, 0x1500, 0xa2fb, 0x75d0, 0x4526, 0x0, 0x1);
        gbc.writeMem(0xaecb, { 0x82 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xaecb));
        // 82 026E
        gbc.setState(0xe647, 0x6a9a, 0x250, 0x5576, 0xcf04, 0xde08, 0x1, 0x1);
        gbc.writeMem(0xe647, { 0x82 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a9a, gbc.sp());
        EXPECT(0xe648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe647));
        // 82 0270
        gbc.setState(0xeca6, 0x493d, 0x90d0, 0x4f01, 0x7fa1, 0x3485, 0x1, 0x0);
        gbc.writeMem(0xeca6, { 0x82 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x493d, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeca6));
        // 82 0271
        gbc.setState(0xa392, 0x59b6, 0x4300, 0xdcc1, 0xa0db, 0x3239, 0x0, 0x0);
        gbc.writeMem(0xa392, { 0x82 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa392));
        // 82 0272
        gbc.setState(0x41a9, 0xf10a, 0x8ff0, 0xbdae, 0x27, 0x9421, 0x0, 0x0);
        gbc.writeMem(0x41a9, { 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0273
        gbc.setState(0xabdf, 0x9a6b, 0xd0f0, 0x9436, 0x72ad, 0xa1c, 0x1, 0x0);
        gbc.writeMem(0xabdf, { 0x82 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xabdf));
        // 82 0274
        gbc.setState(0xbafc, 0xd63a, 0x4d40, 0x3528, 0x55c7, 0x19be, 0x0, 0x1);
        gbc.writeMem(0xbafc, { 0x82 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd63a, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbafc));
        // 82 0275
        gbc.setState(0xcbd, 0x6f7e, 0x8770, 0xc3f8, 0x9edf, 0xa7ac, 0x1, 0x0);
        gbc.writeMem(0xcbd, { 0x82 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6f7e, gbc.sp());
        EXPECT(0xcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0276
        gbc.setState(0x82b9, 0x4426, 0x4520, 0x4813, 0x1732, 0x4a0e, 0x0, 0x1);
        gbc.writeMem(0x82b9, { 0x82 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0x82ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x82b9));
        // 82 0277
        gbc.setState(0x924b, 0x5723, 0xa560, 0xabb, 0x4c0a, 0xa08d, 0x1, 0x1);
        gbc.writeMem(0x924b, { 0x82 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5723, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x924b));
        // 82 0278
        gbc.setState(0x4282, 0x8c25, 0x1dc0, 0xcfb6, 0x7ab0, 0x9550, 0x0, 0x1);
        gbc.writeMem(0x4282, { 0x82 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8c25, gbc.sp());
        EXPECT(0x4283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0279
        gbc.setState(0x58c4, 0x2e5c, 0xccc0, 0x63eb, 0x4f76, 0x4cf6, 0x1, 0x1);
        gbc.writeMem(0x58c4, { 0x82 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x58c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 027A
        gbc.setState(0x87da, 0x2cca, 0xb0e0, 0xf06e, 0xbe57, 0x87d7, 0x0, 0x0);
        gbc.writeMem(0x87da, { 0x82 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2cca, gbc.sp());
        EXPECT(0x87db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x87da));
        // 82 027B
        gbc.setState(0x8847, 0x4b63, 0xf1f0, 0x802e, 0x20f3, 0xc1f, 0x0, 0x1);
        gbc.writeMem(0x8847, { 0x82 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8847));
        // 82 027D
        gbc.setState(0x6c7, 0x4465, 0xcd70, 0x6050, 0x70b7, 0x7cec, 0x0, 0x0);
        gbc.writeMem(0x6c7, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 027F
        gbc.setState(0x2d9c, 0xf41a, 0x400, 0xa22d, 0xaf3c, 0x86e2, 0x0, 0x0);
        gbc.writeMem(0x2d9c, { 0x82 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x2d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0281
        gbc.setState(0xa7e7, 0x563f, 0x8880, 0x330d, 0xf4ab, 0xbbeb, 0x0, 0x1);
        gbc.writeMem(0xa7e7, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x563f, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7e7));
        // 82 0282
        gbc.setState(0xd6fe, 0x8521, 0x97f0, 0xd043, 0x2bf, 0xdaf2, 0x0, 0x1);
        gbc.writeMem(0xd6fe, { 0x82 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0xd6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd6fe));
        // 82 0283
        gbc.setState(0xb144, 0x3cf6, 0xeea0, 0x74c3, 0xece9, 0xcdc4, 0x0, 0x0);
        gbc.writeMem(0xb144, { 0x82 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3cf6, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb144));
        // 82 0284
        gbc.setState(0xe967, 0xc060, 0x5fe0, 0x3c8a, 0xdcf9, 0xe39b, 0x1, 0x0);
        gbc.writeMem(0xe967, { 0x82 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc060, gbc.sp());
        EXPECT(0xe968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe967));
        // 82 0285
        gbc.setState(0xd535, 0x1866, 0x6280, 0x3a39, 0x5fdb, 0xd650, 0x1, 0x1);
        gbc.writeMem(0xd535, { 0x82 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd535));
        // 82 0286
        gbc.setState(0x8902, 0x7bd3, 0x12f0, 0x10c, 0x1de1, 0xcce8, 0x0, 0x1);
        gbc.writeMem(0x8902, { 0x82 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8902));
        // 82 0287
        gbc.setState(0x43d4, 0x7504, 0x9bf0, 0x7cce, 0xe442, 0x9bd6, 0x0, 0x1);
        gbc.writeMem(0x43d4, { 0x82 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7504, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0288
        gbc.setState(0xdb21, 0xb799, 0xa6f0, 0x4237, 0xac3a, 0x6d66, 0x0, 0x0);
        gbc.writeMem(0xdb21, { 0x82 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb799, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdb21));
        // 82 028B
        gbc.setState(0xe9a3, 0x826f, 0x5850, 0x66f, 0x3133, 0x2406, 0x0, 0x1);
        gbc.writeMem(0xe9a3, { 0x82 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x826f, gbc.sp());
        EXPECT(0xe9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe9a3));
        // 82 028C
        gbc.setState(0x8073, 0x7d5b, 0xda70, 0x8a80, 0x811a, 0xa823, 0x1, 0x0);
        gbc.writeMem(0x8073, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0x8074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8073));
        // 82 028D
        gbc.setState(0x17f8, 0x8781, 0xa390, 0xdcbb, 0x113e, 0xedcb, 0x0, 0x1);
        gbc.writeMem(0x17f8, { 0x82 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0x17f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 028E
        gbc.setState(0x1103, 0xd82, 0xdfc0, 0xa673, 0x2da5, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0x1103, { 0x82 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 028F
        gbc.setState(0x950d, 0x8667, 0x1bd0, 0xd762, 0xd08d, 0x1279, 0x1, 0x1);
        gbc.writeMem(0x950d, { 0x82 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8667, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x950d));
        // 82 0290
        gbc.setState(0x76a4, 0xd3a5, 0x1f80, 0xe4c5, 0x346a, 0xe3bc, 0x0, 0x0);
        gbc.writeMem(0x76a4, { 0x82 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0291
        gbc.setState(0x6f85, 0xa843, 0x3180, 0xcf56, 0x8703, 0x8e0d, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0x82 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa843, gbc.sp());
        EXPECT(0x6f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0292
        gbc.setState(0x7b9a, 0x8f4f, 0xf340, 0x6b66, 0xa829, 0xe4c, 0x1, 0x1);
        gbc.writeMem(0x7b9a, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8f4f, gbc.sp());
        EXPECT(0x7b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0293
        gbc.setState(0x9d04, 0x693c, 0xbe10, 0xd342, 0xa578, 0xdbe0, 0x1, 0x1);
        gbc.writeMem(0x9d04, { 0x82 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x693c, gbc.sp());
        EXPECT(0x9d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9d04));
        // 82 0294
        gbc.setState(0xd120, 0x3d53, 0xef70, 0x4d31, 0x91bc, 0x78a3, 0x1, 0x0);
        gbc.writeMem(0xd120, { 0x82 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0xd121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd120));
        // 82 0295
        gbc.setState(0xa3d3, 0x7716, 0x7e0, 0x41a7, 0x2582, 0x5943, 0x1, 0x1);
        gbc.writeMem(0xa3d3, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7716, gbc.sp());
        EXPECT(0xa3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa3d3));
        // 82 0297
        gbc.setState(0x3b3c, 0xf942, 0xe830, 0x41c7, 0xbf38, 0xbe84, 0x1, 0x1);
        gbc.writeMem(0x3b3c, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf942, gbc.sp());
        EXPECT(0x3b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0298
        gbc.setState(0xc1aa, 0x5c26, 0x1900, 0xb8b3, 0xd50c, 0x8b79, 0x1, 0x0);
        gbc.writeMem(0xc1aa, { 0x82 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5c26, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc1aa));
        // 82 0299
        gbc.setState(0x5faf, 0xaebe, 0xb2d0, 0x6af, 0xcbac, 0xc0b8, 0x1, 0x1);
        gbc.writeMem(0x5faf, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaebe, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 029A
        gbc.setState(0xf94, 0x1146, 0x57f0, 0xce1a, 0x629e, 0x25ff, 0x1, 0x1);
        gbc.writeMem(0xf94, { 0x82 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1146, gbc.sp());
        EXPECT(0xf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 029B
        gbc.setState(0x21df, 0xff4f, 0x4d20, 0xdef3, 0xdc2, 0x99df, 0x1, 0x1);
        gbc.writeMem(0x21df, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 029C
        gbc.setState(0x40a, 0x3474, 0xc7c0, 0xd82b, 0x9230, 0x3990, 0x0, 0x0);
        gbc.writeMem(0x40a, { 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3474, gbc.sp());
        EXPECT(0x40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 029D
        gbc.setState(0x872f, 0x2217, 0x8240, 0xd5ef, 0x3774, 0xdd53, 0x0, 0x0);
        gbc.writeMem(0x872f, { 0x82 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2217, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x872f));
        // 82 029E
        gbc.setState(0xe0b8, 0x1a4d, 0x8ff0, 0xb5f7, 0x200e, 0x67ec, 0x0, 0x1);
        gbc.writeMem(0xe0b8, { 0x82 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe0b8));
        // 82 02A0
        gbc.setState(0xa138, 0xc89c, 0x98c0, 0xdaee, 0x2ab7, 0xee81, 0x0, 0x1);
        gbc.writeMem(0xa138, { 0x82 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc89c, gbc.sp());
        EXPECT(0xa139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa138));
        // 82 02A1
        gbc.setState(0x7d37, 0xf507, 0x9c60, 0xc355, 0xa106, 0xeff, 0x0, 0x0);
        gbc.writeMem(0x7d37, { 0x82 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02A2
        gbc.setState(0x4a27, 0x8a2c, 0x9a40, 0xf612, 0x9b6, 0xcb3b, 0x1, 0x0);
        gbc.writeMem(0x4a27, { 0x82 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02A3
        gbc.setState(0x94f6, 0xeda4, 0xada0, 0x918d, 0x252e, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x94f6, { 0x82 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeda4, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x94f6));
        // 82 02A4
        gbc.setState(0x71a3, 0x17b3, 0xab50, 0x6ec9, 0xcbe6, 0xa613, 0x0, 0x1);
        gbc.writeMem(0x71a3, { 0x82 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x17b3, gbc.sp());
        EXPECT(0x71a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02A5
        gbc.setState(0x3a79, 0x5cf8, 0x8480, 0x2d9c, 0x5323, 0x547b, 0x0, 0x1);
        gbc.writeMem(0x3a79, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5cf8, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02A7
        gbc.setState(0x6719, 0x9eda, 0x9b50, 0x6c18, 0xd29c, 0x2202, 0x0, 0x0);
        gbc.writeMem(0x6719, { 0x82 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9eda, gbc.sp());
        EXPECT(0x671a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02A9
        gbc.setState(0x3ff7, 0x972b, 0x8cf0, 0xa2ca, 0x959f, 0x4db8, 0x0, 0x1);
        gbc.writeMem(0x3ff7, { 0x82 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x972b, gbc.sp());
        EXPECT(0x3ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02AA
        gbc.setState(0xa7d6, 0xd9d9, 0x10c0, 0xe6d5, 0xb322, 0xb7ed, 0x0, 0x0);
        gbc.writeMem(0xa7d6, { 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7d6));
        // 82 02AB
        gbc.setState(0xb83f, 0x42bf, 0xdcd0, 0x2630, 0x1fcb, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0xb83f, { 0x82 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0xb840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb83f));
        // 82 02AC
        gbc.setState(0xa3a1, 0x2a92, 0x75a0, 0xafd8, 0x4f6b, 0x838e, 0x1, 0x0);
        gbc.writeMem(0xa3a1, { 0x82 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2a92, gbc.sp());
        EXPECT(0xa3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa3a1));
        // 82 02AD
        gbc.setState(0x5046, 0x2e71, 0x330, 0xa82d, 0x71a4, 0xacae, 0x0, 0x0);
        gbc.writeMem(0x5046, { 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2e71, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02AE
        gbc.setState(0x834a, 0xb0b8, 0x4ec0, 0xb336, 0x55, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0x834a, { 0x82 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x834a));
        // 82 02AF
        gbc.setState(0xa2e3, 0x966b, 0xbef0, 0xd3c, 0x1735, 0x452c, 0x0, 0x1);
        gbc.writeMem(0xa2e3, { 0x82 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x966b, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa2e3));
        // 82 02B0
        gbc.setState(0x247b, 0x199f, 0x4600, 0xbe2a, 0x15c0, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0x247b, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x199f, gbc.sp());
        EXPECT(0x247c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02B1
        gbc.setState(0x7fb2, 0xf472, 0x23f0, 0xf8b6, 0xf350, 0x3693, 0x0, 0x0);
        gbc.writeMem(0x7fb2, { 0x82 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0x7fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02B2
        gbc.setState(0xa211, 0xba24, 0x9580, 0xb99f, 0x8f54, 0xba63, 0x1, 0x1);
        gbc.writeMem(0xa211, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xba24, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa211));
        // 82 02B3
        gbc.setState(0xbbf7, 0xd454, 0xb320, 0x5ce2, 0xc980, 0x7528, 0x0, 0x1);
        gbc.writeMem(0xbbf7, { 0x82 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0xbbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbbf7));
        // 82 02B4
        gbc.setState(0x4f2, 0x7c19, 0x97a0, 0xcd8a, 0x8a87, 0xf132, 0x0, 0x1);
        gbc.writeMem(0x4f2, { 0x82 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7c19, gbc.sp());
        EXPECT(0x4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02B5
        gbc.setState(0x9840, 0xb54d, 0xbb60, 0x92b8, 0x9ea8, 0x8cb, 0x0, 0x0);
        gbc.writeMem(0x9840, { 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9840));
        // 82 02B6
        gbc.setState(0xa33a, 0x8445, 0xb760, 0x30f1, 0x2f90, 0xf9f2, 0x0, 0x1);
        gbc.writeMem(0xa33a, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8445, gbc.sp());
        EXPECT(0xa33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa33a));
        // 82 02B7
        gbc.setState(0xd529, 0x262e, 0x3420, 0x60b0, 0x8b85, 0x65ec, 0x1, 0x1);
        gbc.writeMem(0xd529, { 0x82 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd529));
        // 82 02B8
        gbc.setState(0x8691, 0x8cd9, 0xa070, 0x3159, 0xc9a7, 0x60a7, 0x0, 0x1);
        gbc.writeMem(0x8691, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0x8692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8691));
        // 82 02B9
        gbc.setState(0xa995, 0xdfda, 0x1c60, 0x36eb, 0xf48f, 0x33ec, 0x1, 0x1);
        gbc.writeMem(0xa995, { 0x82 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa995));
        // 82 02BA
        gbc.setState(0x3e5, 0x1d0, 0x9510, 0xab2a, 0x4e9f, 0x93af, 0x1, 0x0);
        gbc.writeMem(0x3e5, { 0x82 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0x3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02BB
        gbc.setState(0xe1f1, 0x78b7, 0xbc10, 0xae85, 0xc687, 0x30f0, 0x0, 0x1);
        gbc.writeMem(0xe1f1, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x78b7, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe1f1));
        // 82 02BC
        gbc.setState(0xcde2, 0x86ae, 0x1780, 0x6e11, 0xfd8f, 0x608c, 0x0, 0x0);
        gbc.writeMem(0xcde2, { 0x82 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0xcde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcde2));
        // 82 02BD
        gbc.setState(0xeb2c, 0x7a62, 0x99c0, 0xf65b, 0xc65c, 0xa7b0, 0x0, 0x1);
        gbc.writeMem(0xeb2c, { 0x82 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7a62, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeb2c));
        // 82 02BE
        gbc.setState(0x1362, 0xa12f, 0x8fc0, 0x59, 0x368f, 0x4d56, 0x1, 0x1);
        gbc.writeMem(0x1362, { 0x82 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa12f, gbc.sp());
        EXPECT(0x1363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02BF
        gbc.setState(0x3519, 0x5b1d, 0x7810, 0x9444, 0x5142, 0x62d3, 0x0, 0x1);
        gbc.writeMem(0x3519, { 0x82 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5b1d, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02C0
        gbc.setState(0xa8ee, 0xd4ed, 0x8b00, 0x2cc9, 0x9e41, 0x8754, 0x1, 0x1);
        gbc.writeMem(0xa8ee, { 0x82 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0xa8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa8ee));
        // 82 02C1
        gbc.setState(0xc059, 0xb94, 0x16a0, 0x8ee1, 0x35a, 0x3bc2, 0x0, 0x0);
        gbc.writeMem(0xc059, { 0x82 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0xc05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc059));
        // 82 02C2
        gbc.setState(0x3ef3, 0x68f, 0x2700, 0x429d, 0x882d, 0x26b9, 0x0, 0x1);
        gbc.writeMem(0x3ef3, { 0x82 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x68f, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02C3
        gbc.setState(0x36c0, 0xbd03, 0xdce0, 0x4e26, 0x8761, 0xf6b5, 0x0, 0x1);
        gbc.writeMem(0x36c0, { 0x82 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02C4
        gbc.setState(0x6384, 0x3750, 0xb840, 0x25dd, 0xbb37, 0xdf45, 0x1, 0x0);
        gbc.writeMem(0x6384, { 0x82 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3750, gbc.sp());
        EXPECT(0x6385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02C5
        gbc.setState(0x3f9e, 0x5263, 0x6020, 0x98c7, 0x3062, 0xda07, 0x1, 0x0);
        gbc.writeMem(0x3f9e, { 0x82 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02C6
        gbc.setState(0x25b7, 0x2d9d, 0x90f0, 0x4d69, 0x63d0, 0xd366, 0x0, 0x1);
        gbc.writeMem(0x25b7, { 0x82 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x25b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02C7
        gbc.setState(0x977e, 0x41e2, 0x4f90, 0xcb9, 0x3e49, 0x2cf, 0x1, 0x1);
        gbc.writeMem(0x977e, { 0x82 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x41e2, gbc.sp());
        EXPECT(0x977f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x977e));
        // 82 02C8
        gbc.setState(0xb05a, 0xf15c, 0x7460, 0x4b56, 0x4a27, 0xde50, 0x0, 0x0);
        gbc.writeMem(0xb05a, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf15c, gbc.sp());
        EXPECT(0xb05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb05a));
        // 82 02C9
        gbc.setState(0xa78b, 0x4a1e, 0x10d0, 0x4dbf, 0x816f, 0x9265, 0x0, 0x0);
        gbc.writeMem(0xa78b, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4a1e, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa78b));
        // 82 02CA
        gbc.setState(0x9206, 0xbc03, 0x1a0, 0x1ba5, 0x618f, 0xdb6c, 0x1, 0x0);
        gbc.writeMem(0x9206, { 0x82 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbc03, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9206));
        // 82 02CB
        gbc.setState(0x98fd, 0x9d7f, 0xcc90, 0xd2b3, 0x7dd7, 0x4d00, 0x1, 0x1);
        gbc.writeMem(0x98fd, { 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0x98fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x98fd));
        // 82 02CC
        gbc.setState(0xb64f, 0x2ee7, 0x8100, 0x3239, 0x90ea, 0xa8c, 0x0, 0x1);
        gbc.writeMem(0xb64f, { 0x82 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0xb650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb64f));
        // 82 02CD
        gbc.setState(0xe31f, 0x285c, 0x6270, 0x7ad1, 0x926, 0xbdb9, 0x0, 0x1);
        gbc.writeMem(0xe31f, { 0x82 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x285c, gbc.sp());
        EXPECT(0xe320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe31f));
        // 82 02CE
        gbc.setState(0x2d63, 0xca25, 0xe240, 0xd933, 0xd9fe, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0x2d63, { 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x2d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02CF
        gbc.setState(0x1b47, 0xed0c, 0xb170, 0x63b5, 0xa9c8, 0xb297, 0x1, 0x0);
        gbc.writeMem(0x1b47, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0x1b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02D0
        gbc.setState(0xc0b, 0x275f, 0x2970, 0x664, 0xd106, 0x8979, 0x1, 0x1);
        gbc.writeMem(0xc0b, { 0x82 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x275f, gbc.sp());
        EXPECT(0xc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02D1
        gbc.setState(0xa545, 0xc136, 0xab50, 0xb94d, 0xbb4f, 0x7a84, 0x1, 0x0);
        gbc.writeMem(0xa545, { 0x82 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa545));
        // 82 02D2
        gbc.setState(0x5674, 0xf81c, 0xe3f0, 0xfd49, 0xac2e, 0x7a46, 0x1, 0x1);
        gbc.writeMem(0x5674, { 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf81c, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02D3
        gbc.setState(0x1e0d, 0xf3ab, 0x1920, 0xa83d, 0xca79, 0x3c21, 0x0, 0x0);
        gbc.writeMem(0x1e0d, { 0x82 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf3ab, gbc.sp());
        EXPECT(0x1e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02D4
        gbc.setState(0x87c7, 0x13d0, 0xc0a0, 0x18ae, 0xfe42, 0x325d, 0x1, 0x1);
        gbc.writeMem(0x87c7, { 0x82 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x87c7));
        // 82 02D5
        gbc.setState(0x8f9e, 0x7d6, 0x2bf0, 0x57e8, 0x6833, 0xe8cf, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0x82 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7d6, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8f9e));
        // 82 02D6
        gbc.setState(0x3c9b, 0x9373, 0xd2a0, 0xc58c, 0xefb4, 0x79cb, 0x0, 0x1);
        gbc.writeMem(0x3c9b, { 0x82 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9373, gbc.sp());
        EXPECT(0x3c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02D7
        gbc.setState(0x280c, 0x60c2, 0xef70, 0x197a, 0x3eb0, 0x87ca, 0x0, 0x0);
        gbc.writeMem(0x280c, { 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x60c2, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02D9
        gbc.setState(0xcad4, 0x4e73, 0x4b90, 0x4e13, 0x5340, 0xf8ee, 0x1, 0x1);
        gbc.writeMem(0xcad4, { 0x82 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e73, gbc.sp());
        EXPECT(0xcad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcad4));
        // 82 02DA
        gbc.setState(0x69be, 0xcbe1, 0x18a0, 0x9506, 0x34d0, 0x387d, 0x0, 0x1);
        gbc.writeMem(0x69be, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02DB
        gbc.setState(0x1ac6, 0x78e3, 0xdba0, 0xbfbf, 0x8e1c, 0x3541, 0x0, 0x0);
        gbc.writeMem(0x1ac6, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x78e3, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02DC
        gbc.setState(0x6ee, 0x5f37, 0x36e0, 0xf583, 0xb385, 0xf76b, 0x0, 0x1);
        gbc.writeMem(0x6ee, { 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5f37, gbc.sp());
        EXPECT(0x6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02DE
        gbc.setState(0x2cd8, 0x5875, 0x9930, 0x71bd, 0x8b08, 0xd1aa, 0x1, 0x1);
        gbc.writeMem(0x2cd8, { 0x82 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5875, gbc.sp());
        EXPECT(0x2cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02DF
        gbc.setState(0x3246, 0x4163, 0x2200, 0xb6e, 0xdbf0, 0x9370, 0x1, 0x0);
        gbc.writeMem(0x3246, { 0x82 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4163, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02E0
        gbc.setState(0x54a2, 0xea78, 0x4430, 0x6cdf, 0x7c70, 0x9a14, 0x1, 0x1);
        gbc.writeMem(0x54a2, { 0x82 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xea78, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02E1
        gbc.setState(0x682c, 0xf91a, 0xc6c0, 0xcc86, 0xda, 0x85dc, 0x1, 0x0);
        gbc.writeMem(0x682c, { 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x682d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02E2
        gbc.setState(0x9824, 0xd31f, 0xc060, 0x2d92, 0xb1cc, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0x9824, { 0x82 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd31f, gbc.sp());
        EXPECT(0x9825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9824));
        // 82 02E3
        gbc.setState(0x90cc, 0x85ad, 0xcee0, 0xa4d2, 0x1e72, 0xbb99, 0x1, 0x0);
        gbc.writeMem(0x90cc, { 0x82 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x85ad, gbc.sp());
        EXPECT(0x90cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90cc));
        // 82 02E4
        gbc.setState(0x8d3e, 0x8c7b, 0xc440, 0x79bb, 0xa0f3, 0x295a, 0x1, 0x1);
        gbc.writeMem(0x8d3e, { 0x82 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8c7b, gbc.sp());
        EXPECT(0x8d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8d3e));
        // 82 02E5
        gbc.setState(0x919c, 0xf5a6, 0xdae0, 0xe504, 0x6439, 0x2e4e, 0x0, 0x1);
        gbc.writeMem(0x919c, { 0x82 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0x919d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x919c));
        // 82 02E6
        gbc.setState(0xc725, 0xf397, 0x12e0, 0x5f1e, 0xb468, 0x3e52, 0x0, 0x0);
        gbc.writeMem(0xc725, { 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf397, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc725));
        // 82 02E7
        gbc.setState(0x57cf, 0xe10b, 0x1ed0, 0xae4f, 0x5c11, 0xe4f3, 0x0, 0x1);
        gbc.writeMem(0x57cf, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x57d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02E8
        gbc.setState(0x6d40, 0x765d, 0x7c40, 0x4e75, 0xb6aa, 0x1f89, 0x1, 0x0);
        gbc.writeMem(0x6d40, { 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x765d, gbc.sp());
        EXPECT(0x6d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02E9
        gbc.setState(0x63da, 0x4928, 0xb720, 0xcec0, 0x4f9a, 0x6ead, 0x1, 0x0);
        gbc.writeMem(0x63da, { 0x82 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4928, gbc.sp());
        EXPECT(0x63db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02EA
        gbc.setState(0xa458, 0xf99c, 0xf1b0, 0xc530, 0xf7d0, 0x43aa, 0x1, 0x1);
        gbc.writeMem(0xa458, { 0x82 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0xa459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa458));
        // 82 02EB
        gbc.setState(0x7c52, 0xcb30, 0xf090, 0x66f9, 0x8574, 0xcb9f, 0x0, 0x0);
        gbc.writeMem(0x7c52, { 0x82 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02EC
        gbc.setState(0x2560, 0xcb04, 0xa9b0, 0x7d7f, 0x296c, 0x692d, 0x1, 0x1);
        gbc.writeMem(0x2560, { 0x82 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x2561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02ED
        gbc.setState(0xbf2b, 0xff2f, 0x9c30, 0x328c, 0xda4c, 0xd580, 0x1, 0x1);
        gbc.writeMem(0xbf2b, { 0x82 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff2f, gbc.sp());
        EXPECT(0xbf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf2b));
        // 82 02EE
        gbc.setState(0x6a4a, 0xed1a, 0x84d0, 0x9a71, 0xfbac, 0x7914, 0x1, 0x0);
        gbc.writeMem(0x6a4a, { 0x82 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x6a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02EF
        gbc.setState(0x9d20, 0xa52b, 0x9f70, 0x2842, 0x9022, 0xaec5, 0x1, 0x1);
        gbc.writeMem(0x9d20, { 0x82 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa52b, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9d20));
        // 82 02F0
        gbc.setState(0x6e6f, 0xc879, 0xfa10, 0x37cd, 0xb7fa, 0xdde8, 0x0, 0x0);
        gbc.writeMem(0x6e6f, { 0x82 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc879, gbc.sp());
        EXPECT(0x6e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02F1
        gbc.setState(0x1b02, 0x316f, 0xcc0, 0x21de, 0x425a, 0x5cf0, 0x0, 0x1);
        gbc.writeMem(0x1b02, { 0x82 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x316f, gbc.sp());
        EXPECT(0x1b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02F3
        gbc.setState(0x54ff, 0x8517, 0x25a0, 0xf64e, 0x2739, 0x3e11, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8517, gbc.sp());
        EXPECT(0x5500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02F4
        gbc.setState(0x427c, 0xe542, 0xbc90, 0x354e, 0x4c, 0xc104, 0x0, 0x1);
        gbc.writeMem(0x427c, { 0x82 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02F5
        gbc.setState(0x161e, 0xf5fa, 0x4010, 0x24bd, 0x3dda, 0x91f1, 0x0, 0x1);
        gbc.writeMem(0x161e, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0x161f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02F6
        gbc.setState(0x22c9, 0xf6aa, 0x9d00, 0x6b42, 0x1db8, 0xbc7e, 0x0, 0x1);
        gbc.writeMem(0x22c9, { 0x82 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf6aa, gbc.sp());
        EXPECT(0x22ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 02F7
        gbc.setState(0x9019, 0x3ca, 0xc950, 0xfd76, 0xaf5, 0x91ae, 0x1, 0x0);
        gbc.writeMem(0x9019, { 0x82 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3ca, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9019));
        // 82 02F8
        gbc.setState(0x5808, 0xd8b1, 0x3c50, 0x40e9, 0xf151, 0x617f, 0x0, 0x0);
        gbc.writeMem(0x5808, { 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd8b1, gbc.sp());
        EXPECT(0x5809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02F9
        gbc.setState(0x714d, 0x5625, 0xc070, 0x9fcb, 0xbb29, 0xda18, 0x0, 0x0);
        gbc.writeMem(0x714d, { 0x82 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02FA
        gbc.setState(0x9751, 0xc13d, 0x4cb0, 0x82c0, 0x92c6, 0xe153, 0x1, 0x0);
        gbc.writeMem(0x9751, { 0x82 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc13d, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9751));
        // 82 02FB
        gbc.setState(0xb557, 0x216f, 0x2d80, 0x6d0d, 0x8fdb, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0xb557, { 0x82 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x216f, gbc.sp());
        EXPECT(0xb558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb557));
        // 82 02FC
        gbc.setState(0x1d0c, 0x9b45, 0xd4c0, 0x323b, 0x53d1, 0xc44e, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0x82 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02FE
        gbc.setState(0x2c1a, 0xf9d8, 0xb250, 0x4cb4, 0x5908, 0x5253, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0x82 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf9d8, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 02FF
        gbc.setState(0x402, 0xae51, 0xf2d0, 0x66b2, 0x4d19, 0xbc47, 0x0, 0x0);
        gbc.writeMem(0x402, { 0x82 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0300
        gbc.setState(0xa683, 0x14aa, 0x59a0, 0xd56e, 0xc9c5, 0x8a88, 0x0, 0x0);
        gbc.writeMem(0xa683, { 0x82 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa683));
        // 82 0302
        gbc.setState(0x5f09, 0xb661, 0xaab0, 0x101b, 0x6167, 0x3bbe, 0x0, 0x0);
        gbc.writeMem(0x5f09, { 0x82 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb661, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0305
        gbc.setState(0x99c6, 0x7579, 0x8710, 0x1a87, 0x2362, 0xedeb, 0x1, 0x1);
        gbc.writeMem(0x99c6, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7579, gbc.sp());
        EXPECT(0x99c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x99c6));
        // 82 0306
        gbc.setState(0x1b94, 0xa855, 0xb770, 0x63d7, 0xbf88, 0xc691, 0x0, 0x1);
        gbc.writeMem(0x1b94, { 0x82 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa855, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0307
        gbc.setState(0x7fea, 0xdb99, 0xc440, 0xbac2, 0xa70f, 0x5e91, 0x0, 0x0);
        gbc.writeMem(0x7fea, { 0x82 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0308
        gbc.setState(0xbe16, 0xe8fc, 0xcde0, 0x4a, 0x5af1, 0xfa2e, 0x0, 0x1);
        gbc.writeMem(0xbe16, { 0x82 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbe16));
        // 82 0309
        gbc.setState(0x40f0, 0xa137, 0xc300, 0x875d, 0xce43, 0x5e32, 0x1, 0x1);
        gbc.writeMem(0x40f0, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa137, gbc.sp());
        EXPECT(0x40f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 030A
        gbc.setState(0x428d, 0x1251, 0x61c0, 0x4fe2, 0x6d45, 0xa00e, 0x1, 0x0);
        gbc.writeMem(0x428d, { 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1251, gbc.sp());
        EXPECT(0x428e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 030B
        gbc.setState(0x4ce8, 0xac0, 0x510, 0x2063, 0x5b7d, 0xb59, 0x1, 0x0);
        gbc.writeMem(0x4ce8, { 0x82 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 030C
        gbc.setState(0xce8e, 0xa43f, 0x2dc0, 0x3ff3, 0xde6, 0xba6d, 0x0, 0x1);
        gbc.writeMem(0xce8e, { 0x82 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa43f, gbc.sp());
        EXPECT(0xce8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xce8e));
        // 82 030D
        gbc.setState(0x8506, 0xa1d7, 0xf350, 0x42f2, 0x5e7b, 0xbb92, 0x0, 0x0);
        gbc.writeMem(0x8506, { 0x82 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8506));
        // 82 030E
        gbc.setState(0x935c, 0x55d4, 0x6bb0, 0xf803, 0x43c0, 0x8b97, 0x0, 0x0);
        gbc.writeMem(0x935c, { 0x82 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x55d4, gbc.sp());
        EXPECT(0x935d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x935c));
        // 82 030F
        gbc.setState(0x143a, 0x35bb, 0x58c0, 0x99eb, 0xc627, 0x66c0, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0x82 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x35bb, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0310
        gbc.setState(0x9876, 0x5c7e, 0x3dd0, 0xa796, 0x663b, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x9876, { 0x82 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0x9877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9876));
        // 82 0311
        gbc.setState(0x6cfd, 0x86e6, 0x690, 0x540c, 0x4b99, 0xac6, 0x0, 0x1);
        gbc.writeMem(0x6cfd, { 0x82 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0x6cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0312
        gbc.setState(0x7d36, 0xdb57, 0xce20, 0x46b, 0x760d, 0xf8b7, 0x1, 0x0);
        gbc.writeMem(0x7d36, { 0x82 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdb57, gbc.sp());
        EXPECT(0x7d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0313
        gbc.setState(0x423b, 0xe10b, 0x8c10, 0xed37, 0x4da5, 0x18db, 0x1, 0x0);
        gbc.writeMem(0x423b, { 0x82 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x423c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0314
        gbc.setState(0x1969, 0x2e89, 0xf520, 0x1601, 0x9e7, 0x5130, 0x0, 0x0);
        gbc.writeMem(0x1969, { 0x82 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0x196a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0315
        gbc.setState(0xc7ae, 0xb10a, 0x13c0, 0xaeeb, 0xd2fc, 0x4652, 0x1, 0x0);
        gbc.writeMem(0xc7ae, { 0x82 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0xc7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc7ae));
        // 82 0316
        gbc.setState(0x6be3, 0x3625, 0x6440, 0xedbd, 0x67d0, 0x4161, 0x0, 0x0);
        gbc.writeMem(0x6be3, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0317
        gbc.setState(0x31a, 0x6edd, 0xbb10, 0x950f, 0xc54, 0xdf30, 0x1, 0x0);
        gbc.writeMem(0x31a, { 0x82 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6edd, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0318
        gbc.setState(0x9fe4, 0xf2d8, 0x4590, 0x581a, 0x9f90, 0x9f93, 0x1, 0x0);
        gbc.writeMem(0x9fe4, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf2d8, gbc.sp());
        EXPECT(0x9fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9fe4));
        // 82 0319
        gbc.setState(0x619e, 0xc89a, 0x47b0, 0xfd53, 0x9853, 0xf70f, 0x0, 0x1);
        gbc.writeMem(0x619e, { 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 031A
        gbc.setState(0x5e88, 0xc1f8, 0x6ac0, 0xe308, 0x36d3, 0x5e2c, 0x1, 0x0);
        gbc.writeMem(0x5e88, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc1f8, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 031B
        gbc.setState(0xa80c, 0x28a0, 0x1ac0, 0xfd84, 0x5a7, 0x4cc7, 0x1, 0x0);
        gbc.writeMem(0xa80c, { 0x82 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0xa80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa80c));
        // 82 031C
        gbc.setState(0xa8a4, 0xdebf, 0x7e00, 0xbba3, 0xec4, 0x4b49, 0x0, 0x0);
        gbc.writeMem(0xa8a4, { 0x82 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdebf, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa8a4));
        // 82 031D
        gbc.setState(0x722a, 0x328a, 0x6970, 0x2edd, 0xda71, 0xf199, 0x0, 0x0);
        gbc.writeMem(0x722a, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x328a, gbc.sp());
        EXPECT(0x722b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 031E
        gbc.setState(0xa854, 0x3c3a, 0x9590, 0x1af7, 0xb82f, 0x76f6, 0x1, 0x0);
        gbc.writeMem(0xa854, { 0x82 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3c3a, gbc.sp());
        EXPECT(0xa855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa854));
        // 82 031F
        gbc.setState(0x4d03, 0xf113, 0xfc20, 0xa244, 0x8c27, 0x932e, 0x1, 0x0);
        gbc.writeMem(0x4d03, { 0x82 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0320
        gbc.setState(0x3b63, 0xc604, 0xb320, 0x94dd, 0x99f2, 0x471, 0x1, 0x0);
        gbc.writeMem(0x3b63, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc604, gbc.sp());
        EXPECT(0x3b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0321
        gbc.setState(0xd219, 0x26fe, 0x50f0, 0x3024, 0xc5e8, 0xb0a5, 0x1, 0x1);
        gbc.writeMem(0xd219, { 0x82 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x26fe, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd219));
        // 82 0322
        gbc.setState(0x2b23, 0x201b, 0x5b30, 0x2348, 0xb7ef, 0x9456, 0x0, 0x1);
        gbc.writeMem(0x2b23, { 0x82 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0323
        gbc.setState(0x1e53, 0xc628, 0xf00, 0x5242, 0x58b8, 0x85f5, 0x0, 0x1);
        gbc.writeMem(0x1e53, { 0x82 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x1e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0324
        gbc.setState(0x4f42, 0x4c78, 0x430, 0x4828, 0x4589, 0xa4f4, 0x1, 0x0);
        gbc.writeMem(0x4f42, { 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c78, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0325
        gbc.setState(0x404a, 0x7a6, 0x9680, 0x9e11, 0xbd95, 0xddd3, 0x0, 0x0);
        gbc.writeMem(0x404a, { 0x82 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0x404b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0326
        gbc.setState(0xe822, 0x2e4a, 0xc5a0, 0xae35, 0x7461, 0xd3ac, 0x1, 0x1);
        gbc.writeMem(0xe822, { 0x82 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e4a, gbc.sp());
        EXPECT(0xe823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe822));
        // 82 0327
        gbc.setState(0xdd34, 0xa97, 0x9420, 0x9ccd, 0x23b9, 0x6e1b, 0x1, 0x0);
        gbc.writeMem(0xdd34, { 0x82 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0xdd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdd34));
        // 82 0328
        gbc.setState(0x3878, 0xe35f, 0x9950, 0x302d, 0xd0dc, 0x409f, 0x0, 0x0);
        gbc.writeMem(0x3878, { 0x82 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x3879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0329
        gbc.setState(0x750f, 0x7c15, 0x7d90, 0xb7ca, 0x5ebf, 0xcde6, 0x0, 0x1);
        gbc.writeMem(0x750f, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0x7510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 032A
        gbc.setState(0x59e3, 0x370d, 0x47c0, 0xdc04, 0xd65, 0x1210, 0x0, 0x1);
        gbc.writeMem(0x59e3, { 0x82 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x370d, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 032B
        gbc.setState(0x4ca3, 0xa1f2, 0x9550, 0xea34, 0xff94, 0xff6a, 0x0, 0x1);
        gbc.writeMem(0x4ca3, { 0x82 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x4ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 032C
        gbc.setState(0x25f5, 0x1f5, 0xc920, 0x7003, 0xa746, 0x2dd2, 0x1, 0x0);
        gbc.writeMem(0x25f5, { 0x82 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1f5, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 032D
        gbc.setState(0xb106, 0x1138, 0x7380, 0x66af, 0x5edd, 0xf69b, 0x0, 0x0);
        gbc.writeMem(0xb106, { 0x82 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb106));
        // 82 032E
        gbc.setState(0xd514, 0x8c5b, 0xa7e0, 0x3837, 0x16d7, 0x2ee7, 0x1, 0x0);
        gbc.writeMem(0xd514, { 0x82 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd514));
        // 82 032F
        gbc.setState(0x2ad7, 0x2b3a, 0xa9d0, 0x5d14, 0x1c21, 0xa8bb, 0x0, 0x1);
        gbc.writeMem(0x2ad7, { 0x82 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2b3a, gbc.sp());
        EXPECT(0x2ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0331
        gbc.setState(0x9fac, 0xdc73, 0x9420, 0xa2c, 0x59c9, 0xa620, 0x0, 0x0);
        gbc.writeMem(0x9fac, { 0x82 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9fac));
        // 82 0332
        gbc.setState(0x82d3, 0x691c, 0xcea0, 0x7a91, 0xb8a5, 0x183f, 0x1, 0x0);
        gbc.writeMem(0x82d3, { 0x82 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x691c, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x82d3));
        // 82 0333
        gbc.setState(0xc5cc, 0xb568, 0x5df0, 0x6bc6, 0xdd03, 0x1b9e, 0x1, 0x0);
        gbc.writeMem(0xc5cc, { 0x82 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0xc5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc5cc));
        // 82 0334
        gbc.setState(0xc5fc, 0xc827, 0xa4a0, 0xa347, 0x7618, 0x49d2, 0x0, 0x1);
        gbc.writeMem(0xc5fc, { 0x82 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc827, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc5fc));
        // 82 0335
        gbc.setState(0x1183, 0x1fb8, 0xd0b0, 0xf709, 0x955e, 0xf680, 0x0, 0x0);
        gbc.writeMem(0x1183, { 0x82 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x1184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0336
        gbc.setState(0x2900, 0x70f, 0x4520, 0x2101, 0x9e02, 0xd688, 0x1, 0x1);
        gbc.writeMem(0x2900, { 0x82 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x70f, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0337
        gbc.setState(0x13a8, 0xff19, 0xdce0, 0x4e10, 0xd967, 0xb93c, 0x0, 0x0);
        gbc.writeMem(0x13a8, { 0x82 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xff19, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0339
        gbc.setState(0x4e63, 0x304f, 0x9c00, 0xf18a, 0xefd, 0x81c7, 0x0, 0x1);
        gbc.writeMem(0x4e63, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x304f, gbc.sp());
        EXPECT(0x4e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 033A
        gbc.setState(0x2708, 0x22f2, 0xcb70, 0x5007, 0x403e, 0x62e7, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0x82 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 033B
        gbc.setState(0xc8ea, 0xf52d, 0x69c0, 0xab0c, 0xc035, 0x940e, 0x0, 0x1);
        gbc.writeMem(0xc8ea, { 0x82 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf52d, gbc.sp());
        EXPECT(0xc8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc8ea));
        // 82 033C
        gbc.setState(0x2a25, 0x5092, 0xc100, 0x6edf, 0xb1ca, 0x2107, 0x1, 0x0);
        gbc.writeMem(0x2a25, { 0x82 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0x2a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 033D
        gbc.setState(0x16e6, 0xbe7a, 0x1c50, 0x8e54, 0xe9ed, 0x4274, 0x0, 0x0);
        gbc.writeMem(0x16e6, { 0x82 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbe7a, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 033E
        gbc.setState(0xdf82, 0xefed, 0x40f0, 0xdfc7, 0xc7b9, 0xe0c4, 0x1, 0x0);
        gbc.writeMem(0xdf82, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdf82));
        // 82 033F
        gbc.setState(0x1766, 0x9b2d, 0x33c0, 0x3e4f, 0xf090, 0x7205, 0x1, 0x1);
        gbc.writeMem(0x1766, { 0x82 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0340
        gbc.setState(0x503f, 0xe9b4, 0x9840, 0x47e8, 0x77ee, 0x4e98, 0x0, 0x1);
        gbc.writeMem(0x503f, { 0x82 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x5040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0341
        gbc.setState(0xacc5, 0x6887, 0xa620, 0xe3a3, 0xdf6a, 0x4d2c, 0x0, 0x0);
        gbc.writeMem(0xacc5, { 0x82 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xacc5));
        // 82 0342
        gbc.setState(0xad63, 0xe454, 0x6f60, 0x761c, 0xa7c2, 0x6e7c, 0x0, 0x1);
        gbc.writeMem(0xad63, { 0x82 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe454, gbc.sp());
        EXPECT(0xad64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xad63));
        // 82 0343
        gbc.setState(0x519c, 0x9e7c, 0xdd00, 0x3689, 0x8a2, 0xe2d0, 0x1, 0x1);
        gbc.writeMem(0x519c, { 0x82 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9e7c, gbc.sp());
        EXPECT(0x519d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0344
        gbc.setState(0x281b, 0xf746, 0x1620, 0xc6d2, 0x7591, 0x19e1, 0x1, 0x1);
        gbc.writeMem(0x281b, { 0x82 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf746, gbc.sp());
        EXPECT(0x281c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0345
        gbc.setState(0xb8d9, 0xbd36, 0x1cb0, 0x4acb, 0x3d3b, 0x5c83, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0x82 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0xb8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb8d9));
        // 82 0346
        gbc.setState(0xc1e7, 0x62fb, 0xa220, 0x2548, 0x4c7f, 0x3c2e, 0x1, 0x1);
        gbc.writeMem(0xc1e7, { 0x82 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc1e7));
        // 82 0347
        gbc.setState(0x8be4, 0xbda9, 0x8b80, 0xb656, 0x46be, 0xd4c3, 0x0, 0x0);
        gbc.writeMem(0x8be4, { 0x82 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0x8be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8be4));
        // 82 0348
        gbc.setState(0x6974, 0x84cb, 0x8700, 0x80e9, 0x690e, 0xce05, 0x0, 0x0);
        gbc.writeMem(0x6974, { 0x82 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 034A
        gbc.setState(0xd8e9, 0xbe5c, 0xb040, 0x6bbd, 0x7aba, 0x7565, 0x1, 0x1);
        gbc.writeMem(0xd8e9, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbe5c, gbc.sp());
        EXPECT(0xd8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd8e9));
        // 82 034B
        gbc.setState(0xad3d, 0xeaa5, 0xd1f0, 0xcf19, 0xb245, 0x64c7, 0x1, 0x1);
        gbc.writeMem(0xad3d, { 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0xad3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xad3d));
        // 82 034C
        gbc.setState(0x22b9, 0xef2b, 0xe100, 0x2527, 0x8685, 0x885b, 0x1, 0x0);
        gbc.writeMem(0x22b9, { 0x82 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xef2b, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 034D
        gbc.setState(0x4ce, 0x4a7e, 0xe130, 0x756e, 0xea68, 0x3a06, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 034E
        gbc.setState(0xab1a, 0xe482, 0xf730, 0x2b37, 0x3fb3, 0x93f7, 0x0, 0x1);
        gbc.writeMem(0xab1a, { 0x82 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xab1a));
        // 82 034F
        gbc.setState(0x7ac8, 0xe4fc, 0xb6a0, 0x6430, 0x71f7, 0x1e95, 0x1, 0x0);
        gbc.writeMem(0x7ac8, { 0x82 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x7ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0350
        gbc.setState(0x4749, 0x3f7e, 0xb0c0, 0x249b, 0x4729, 0x55fc, 0x0, 0x0);
        gbc.writeMem(0x4749, { 0x82 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3f7e, gbc.sp());
        EXPECT(0x474a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0351
        gbc.setState(0x2115, 0xce53, 0x9040, 0x7333, 0xe00b, 0xcf2c, 0x1, 0x1);
        gbc.writeMem(0x2115, { 0x82 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xce53, gbc.sp());
        EXPECT(0x2116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0352
        gbc.setState(0x92a1, 0x6747, 0x5a00, 0xddab, 0x4496, 0x4da8, 0x1, 0x1);
        gbc.writeMem(0x92a1, { 0x82 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0x92a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x92a1));
        // 82 0353
        gbc.setState(0x96f3, 0xd43b, 0x87f0, 0xffef, 0xe3dd, 0x6819, 0x1, 0x1);
        gbc.writeMem(0x96f3, { 0x82 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd43b, gbc.sp());
        EXPECT(0x96f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x96f3));
        // 82 0354
        gbc.setState(0x3f3b, 0x187b, 0xb880, 0x57a9, 0x9c30, 0x604, 0x1, 0x1);
        gbc.writeMem(0x3f3b, { 0x82 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0x3f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0355
        gbc.setState(0xd71, 0xd932, 0x1690, 0x3833, 0xb968, 0x4e05, 0x1, 0x1);
        gbc.writeMem(0xd71, { 0x82 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd932, gbc.sp());
        EXPECT(0xd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0356
        gbc.setState(0x7548, 0x7ff4, 0xacb0, 0x2fd8, 0xf47b, 0xa659, 0x1, 0x0);
        gbc.writeMem(0x7548, { 0x82 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7ff4, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0357
        gbc.setState(0x26ca, 0x8bce, 0x33f0, 0x8299, 0xaf69, 0x9b1, 0x0, 0x0);
        gbc.writeMem(0x26ca, { 0x82 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8bce, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0358
        gbc.setState(0x8950, 0xd173, 0x4170, 0xf1a, 0xd6d5, 0x59f3, 0x1, 0x1);
        gbc.writeMem(0x8950, { 0x82 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd173, gbc.sp());
        EXPECT(0x8951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8950));
        // 82 0359
        gbc.setState(0xc1a6, 0x28f1, 0x72e0, 0x52eb, 0x495d, 0x60e2, 0x0, 0x1);
        gbc.writeMem(0xc1a6, { 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x28f1, gbc.sp());
        EXPECT(0xc1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc1a6));
        // 82 035A
        gbc.setState(0x6d5d, 0xf045, 0xaf00, 0x83a9, 0x8a72, 0xd5ae, 0x1, 0x0);
        gbc.writeMem(0x6d5d, { 0x82 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 035B
        gbc.setState(0x2618, 0x4059, 0x5470, 0xbbd1, 0x10c8, 0xa14a, 0x1, 0x0);
        gbc.writeMem(0x2618, { 0x82 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 035C
        gbc.setState(0x2ead, 0x5988, 0xc030, 0xbc51, 0xfbfd, 0x6688, 0x0, 0x0);
        gbc.writeMem(0x2ead, { 0x82 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5988, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 035D
        gbc.setState(0xd933, 0x8358, 0x3fe0, 0x62f0, 0xca29, 0xb189, 0x0, 0x1);
        gbc.writeMem(0xd933, { 0x82 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8358, gbc.sp());
        EXPECT(0xd934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd933));
        // 82 035E
        gbc.setState(0x6e68, 0xebc, 0x45d0, 0x78e, 0xbc5, 0xe8b6, 0x1, 0x0);
        gbc.writeMem(0x6e68, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0x6e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 035F
        gbc.setState(0x9768, 0x4f5e, 0xd040, 0xe6af, 0x3370, 0x2358, 0x0, 0x1);
        gbc.writeMem(0x9768, { 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0x9769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9768));
        // 82 0361
        gbc.setState(0x4269, 0xc216, 0xda90, 0x5811, 0x8039, 0xe070, 0x1, 0x1);
        gbc.writeMem(0x4269, { 0x82 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc216, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0362
        gbc.setState(0x47a1, 0xb740, 0x3340, 0xdc5a, 0x8909, 0x5954, 0x1, 0x0);
        gbc.writeMem(0x47a1, { 0x82 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb740, gbc.sp());
        EXPECT(0x47a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0363
        gbc.setState(0x4db6, 0x9e4a, 0x5ff0, 0x895, 0xfdf0, 0x2dbc, 0x1, 0x0);
        gbc.writeMem(0x4db6, { 0x82 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x4db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0364
        gbc.setState(0xd027, 0x40e4, 0x8850, 0x5e89, 0x82b7, 0x52e9, 0x1, 0x1);
        gbc.writeMem(0xd027, { 0x82 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x40e4, gbc.sp());
        EXPECT(0xd028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd027));
        // 82 0365
        gbc.setState(0x6ac5, 0x355c, 0x97f0, 0x5931, 0x2884, 0x9c96, 0x0, 0x1);
        gbc.writeMem(0x6ac5, { 0x82 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0366
        gbc.setState(0x3d6a, 0xd840, 0x7250, 0x8a2, 0xfff0, 0x48b4, 0x0, 0x1);
        gbc.writeMem(0x3d6a, { 0x82 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0367
        gbc.setState(0x8a23, 0x53df, 0x7550, 0x8b99, 0x9969, 0x2881, 0x1, 0x0);
        gbc.writeMem(0x8a23, { 0x82 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x53df, gbc.sp());
        EXPECT(0x8a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a23));
        // 82 0368
        gbc.setState(0x605a, 0x8453, 0x4810, 0x9c45, 0x4f2a, 0x1caa, 0x0, 0x1);
        gbc.writeMem(0x605a, { 0x82 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x605b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0369
        gbc.setState(0x4fc2, 0xcd41, 0xef80, 0xad4f, 0x1fad, 0x2b4b, 0x0, 0x1);
        gbc.writeMem(0x4fc2, { 0x82 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcd41, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 036A
        gbc.setState(0x1e8e, 0xaf6b, 0x41b0, 0x366f, 0xa79d, 0xb6e4, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0x82 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 036B
        gbc.setState(0xcac2, 0x49b2, 0xe380, 0x594e, 0x92f0, 0xae28, 0x0, 0x1);
        gbc.writeMem(0xcac2, { 0x82 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x49b2, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcac2));
        // 82 036C
        gbc.setState(0xdd44, 0xf424, 0xc460, 0xe355, 0x20f9, 0x80b7, 0x0, 0x0);
        gbc.writeMem(0xdd44, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf424, gbc.sp());
        EXPECT(0xdd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdd44));
        // 82 036D
        gbc.setState(0x6765, 0x1dc8, 0xbbd0, 0x98e5, 0xbd50, 0xd57c, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0x82 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1dc8, gbc.sp());
        EXPECT(0x6766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 036E
        gbc.setState(0xb63d, 0xfc45, 0x77c0, 0xa927, 0xb4f3, 0xf0e4, 0x1, 0x0);
        gbc.writeMem(0xb63d, { 0x82 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0xb63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb63d));
        // 82 036F
        gbc.setState(0xa7d1, 0x5f63, 0x4c30, 0x6409, 0xf294, 0x26ef, 0x1, 0x0);
        gbc.writeMem(0xa7d1, { 0x82 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7d1));
        // 82 0371
        gbc.setState(0x72c8, 0xea5c, 0x52b0, 0x1ed0, 0xb257, 0xe064, 0x0, 0x0);
        gbc.writeMem(0x72c8, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xea5c, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0372
        gbc.setState(0x9802, 0x2417, 0xcc10, 0x56f2, 0x368f, 0x65a9, 0x0, 0x1);
        gbc.writeMem(0x9802, { 0x82 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0x9803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9802));
        // 82 0373
        gbc.setState(0xa242, 0x8d4e, 0xbe20, 0x6658, 0x74b5, 0x21f8, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8d4e, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa242));
        // 82 0374
        gbc.setState(0xc797, 0xe52b, 0x2aa0, 0xf45c, 0x2d55, 0x5258, 0x1, 0x0);
        gbc.writeMem(0xc797, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe52b, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc797));
        // 82 0375
        gbc.setState(0xd5a1, 0x8c76, 0x84f0, 0x8e1d, 0x716e, 0x817f, 0x1, 0x0);
        gbc.writeMem(0xd5a1, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8c76, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd5a1));
        // 82 0376
        gbc.setState(0xe214, 0x8807, 0x6960, 0x1fa6, 0xe3e9, 0xfa2a, 0x0, 0x1);
        gbc.writeMem(0xe214, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8807, gbc.sp());
        EXPECT(0xe215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe214));
        // 82 0377
        gbc.setState(0x1c6b, 0x54cf, 0x5d40, 0xdbd5, 0x3e6b, 0x9e25, 0x1, 0x0);
        gbc.writeMem(0x1c6b, { 0x82 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0x1c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0379
        gbc.setState(0x8f58, 0x4c13, 0x6560, 0x8ad9, 0xde37, 0xf9bd, 0x1, 0x1);
        gbc.writeMem(0x8f58, { 0x82 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4c13, gbc.sp());
        EXPECT(0x8f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8f58));
        // 82 037A
        gbc.setState(0xed3b, 0x9ba6, 0x3680, 0x16d4, 0x21a6, 0xd672, 0x1, 0x0);
        gbc.writeMem(0xed3b, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0xed3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xed3b));
        // 82 037B
        gbc.setState(0x6ff1, 0x9ee6, 0x2fc0, 0xb2ca, 0xfb5, 0x51c8, 0x0, 0x1);
        gbc.writeMem(0x6ff1, { 0x82 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0x6ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 037C
        gbc.setState(0x8653, 0x4fe2, 0xb840, 0x704d, 0x4b21, 0x4cba, 0x0, 0x1);
        gbc.writeMem(0x8653, { 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4fe2, gbc.sp());
        EXPECT(0x8654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8653));
        // 82 037E
        gbc.setState(0x36d1, 0xb556, 0x7c60, 0x5935, 0x139e, 0x9a62, 0x1, 0x0);
        gbc.writeMem(0x36d1, { 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb556, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0380
        gbc.setState(0x30c4, 0x346d, 0xbe90, 0xfdcc, 0x654c, 0x7105, 0x1, 0x0);
        gbc.writeMem(0x30c4, { 0x82 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x346d, gbc.sp());
        EXPECT(0x30c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0381
        gbc.setState(0x6e19, 0xe480, 0x7f90, 0xc68f, 0x67e7, 0xac8e, 0x0, 0x1);
        gbc.writeMem(0x6e19, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe480, gbc.sp());
        EXPECT(0x6e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0382
        gbc.setState(0x607, 0x3440, 0xa270, 0x86a2, 0xdcb4, 0x9f86, 0x1, 0x1);
        gbc.writeMem(0x607, { 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0383
        gbc.setState(0x5a16, 0xee76, 0x3be0, 0x7cae, 0xa0d7, 0x5626, 0x1, 0x1);
        gbc.writeMem(0x5a16, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0384
        gbc.setState(0x5406, 0xf5a, 0x9890, 0x1c90, 0x2bf5, 0x70b2, 0x1, 0x0);
        gbc.writeMem(0x5406, { 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf5a, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0385
        gbc.setState(0xec3e, 0xc15d, 0xb400, 0xc057, 0x3a1e, 0xbfb3, 0x0, 0x0);
        gbc.writeMem(0xec3e, { 0x82 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc15d, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xec3e));
        // 82 0386
        gbc.setState(0x3e43, 0xbecf, 0xb270, 0x9df9, 0x16e7, 0x4212, 0x1, 0x0);
        gbc.writeMem(0x3e43, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0x3e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0387
        gbc.setState(0xeac7, 0xc99, 0xf0e0, 0xc709, 0x94bc, 0x38ae, 0x0, 0x1);
        gbc.writeMem(0xeac7, { 0x82 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc99, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xeac7));
        // 82 0388
        gbc.setState(0x8124, 0xed4f, 0x3800, 0xa003, 0x1445, 0xc0b1, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0x82 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed4f, gbc.sp());
        EXPECT(0x8125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8124));
        // 82 0389
        gbc.setState(0xef88, 0x6b2b, 0x280, 0x981c, 0x6864, 0xf6b0, 0x0, 0x0);
        gbc.writeMem(0xef88, { 0x82 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6b2b, gbc.sp());
        EXPECT(0xef89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xef88));
        // 82 038A
        gbc.setState(0x7413, 0x219, 0x2bc0, 0x47bc, 0xff41, 0x694b, 0x0, 0x1);
        gbc.writeMem(0x7413, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0x7414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 038C
        gbc.setState(0x5651, 0xce51, 0xe1c0, 0xc33a, 0xb064, 0x41dd, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0x82 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce51, gbc.sp());
        EXPECT(0x5652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 038D
        gbc.setState(0x81eb, 0xa68f, 0x94b0, 0x25f4, 0x4d0f, 0xbfe8, 0x1, 0x0);
        gbc.writeMem(0x81eb, { 0x82 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa68f, gbc.sp());
        EXPECT(0x81ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x81eb));
        // 82 038E
        gbc.setState(0x3c97, 0x540e, 0x28f0, 0x5730, 0xbcc9, 0xb810, 0x0, 0x0);
        gbc.writeMem(0x3c97, { 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x540e, gbc.sp());
        EXPECT(0x3c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 038F
        gbc.setState(0x6dba, 0xa666, 0xe2c0, 0xeeb8, 0x4031, 0xab30, 0x0, 0x1);
        gbc.writeMem(0x6dba, { 0x82 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa666, gbc.sp());
        EXPECT(0x6dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0390
        gbc.setState(0x65c9, 0x85c6, 0xdf70, 0x1b27, 0xbe60, 0x9f52, 0x0, 0x1);
        gbc.writeMem(0x65c9, { 0x82 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x65ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0391
        gbc.setState(0xe622, 0x4874, 0xb8a0, 0xb293, 0xee60, 0xca17, 0x1, 0x1);
        gbc.writeMem(0xe622, { 0x82 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe622));
        // 82 0392
        gbc.setState(0x4f96, 0x808f, 0x92a0, 0x6482, 0xf2ad, 0x52a, 0x0, 0x1);
        gbc.writeMem(0x4f96, { 0x82 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0393
        gbc.setState(0xbe29, 0x9c8e, 0x95e0, 0xa8d4, 0x9052, 0xe49d, 0x1, 0x0);
        gbc.writeMem(0xbe29, { 0x82 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0xbe2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbe29));
        // 82 0394
        gbc.setState(0xa7f7, 0xcc82, 0xc920, 0xdf01, 0x3b76, 0xa874, 0x1, 0x1);
        gbc.writeMem(0xa7f7, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcc82, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7f7));
        // 82 0395
        gbc.setState(0x1daf, 0x81ee, 0x350, 0x2025, 0xa770, 0x108, 0x1, 0x0);
        gbc.writeMem(0x1daf, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x81ee, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 0396
        gbc.setState(0x3432, 0x6390, 0x9350, 0xc816, 0xd538, 0xc80f, 0x1, 0x1);
        gbc.writeMem(0x3432, { 0x82 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6390, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0397
        gbc.setState(0x61b, 0xdeec, 0xda90, 0x645e, 0x7c7b, 0xb6fd, 0x1, 0x1);
        gbc.writeMem(0x61b, { 0x82 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0398
        gbc.setState(0x1a0c, 0x6c76, 0xb8f0, 0x6430, 0x9c66, 0x45bb, 0x1, 0x0);
        gbc.writeMem(0x1a0c, { 0x82 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 0399
        gbc.setState(0xd219, 0xa7b1, 0xf4d0, 0xeb5d, 0x6705, 0xe948, 0x0, 0x0);
        gbc.writeMem(0xd219, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa7b1, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd219));
        // 82 039A
        gbc.setState(0xc130, 0x975d, 0x14c0, 0xc9bd, 0xd911, 0x11a3, 0x0, 0x1);
        gbc.writeMem(0xc130, { 0x82 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x975d, gbc.sp());
        EXPECT(0xc131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc130));
        // 82 039B
        gbc.setState(0x85ae, 0x8fb6, 0xc930, 0x30e0, 0x3e0f, 0x7942, 0x1, 0x1);
        gbc.writeMem(0x85ae, { 0x82 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8fb6, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x85ae));
        // 82 039C
        gbc.setState(0x968b, 0x794f, 0x83b0, 0x23, 0x595d, 0xd3f5, 0x0, 0x0);
        gbc.writeMem(0x968b, { 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x794f, gbc.sp());
        EXPECT(0x968c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x968b));
        // 82 039D
        gbc.setState(0xdd50, 0x32ae, 0xc060, 0xe87a, 0x9b03, 0xd24c, 0x0, 0x0);
        gbc.writeMem(0xdd50, { 0x82 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x32ae, gbc.sp());
        EXPECT(0xdd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdd50));
        // 82 03A0
        gbc.setState(0xc176, 0x7406, 0x8120, 0x9e07, 0x5668, 0xf37d, 0x1, 0x1);
        gbc.writeMem(0xc176, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7406, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc176));
        // 82 03A1
        gbc.setState(0xdca, 0x60ba, 0x4d70, 0xecaf, 0xa8f8, 0xb9fc, 0x0, 0x0);
        gbc.writeMem(0xdca, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x60ba, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03A3
        gbc.setState(0x2a15, 0x55e2, 0x1010, 0x2ac3, 0x94ad, 0xe71c, 0x1, 0x0);
        gbc.writeMem(0x2a15, { 0x82 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x55e2, gbc.sp());
        EXPECT(0x2a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03A4
        gbc.setState(0x41d5, 0x6d62, 0xa480, 0xec29, 0x4343, 0x2745, 0x0, 0x0);
        gbc.writeMem(0x41d5, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0x41d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03A5
        gbc.setState(0x9ad3, 0x3e4c, 0x3c60, 0x2ff3, 0x6848, 0xdcc7, 0x1, 0x0);
        gbc.writeMem(0x9ad3, { 0x82 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9ad3));
        // 82 03A6
        gbc.setState(0x93d, 0x1f78, 0x5f0, 0x2e50, 0x616c, 0x5ccb, 0x1, 0x1);
        gbc.writeMem(0x93d, { 0x82 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0x93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03A7
        gbc.setState(0xa07c, 0xa798, 0xb7f0, 0x9535, 0x99a0, 0xa7fa, 0x0, 0x1);
        gbc.writeMem(0xa07c, { 0x82 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa798, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa07c));
        // 82 03A8
        gbc.setState(0x8324, 0x9b20, 0x5670, 0x1376, 0xf431, 0xafab, 0x1, 0x1);
        gbc.writeMem(0x8324, { 0x82 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9b20, gbc.sp());
        EXPECT(0x8325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8324));
        // 82 03A9
        gbc.setState(0x92b, 0x723, 0xd0a0, 0xbc79, 0x8c5, 0x8546, 0x0, 0x1);
        gbc.writeMem(0x92b, { 0x82 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0x92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03AA
        gbc.setState(0xb91c, 0xb7f8, 0x21e0, 0xa657, 0x694b, 0x4b42, 0x0, 0x1);
        gbc.writeMem(0xb91c, { 0x82 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb7f8, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb91c));
        // 82 03AB
        gbc.setState(0x1d08, 0x2761, 0x59d0, 0xc72a, 0x4542, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x1d08, { 0x82 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x1d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03AC
        gbc.setState(0x6fe1, 0xe6e3, 0x41f0, 0x88f8, 0x8726, 0x6a47, 0x0, 0x1);
        gbc.writeMem(0x6fe1, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03AD
        gbc.setState(0x4b88, 0xc204, 0x9430, 0xb3a2, 0xae59, 0xc793, 0x0, 0x0);
        gbc.writeMem(0x4b88, { 0x82 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc204, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03AE
        gbc.setState(0x7d41, 0xce93, 0xac60, 0xb4ef, 0x1c24, 0x7f9b, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0x7d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03AF
        gbc.setState(0xa8b8, 0x7c5d, 0xbdf0, 0xb327, 0x2e6b, 0xd0f6, 0x0, 0x0);
        gbc.writeMem(0xa8b8, { 0x82 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa8b8));
        // 82 03B0
        gbc.setState(0x4d9d, 0xb101, 0x4ac0, 0x90c, 0x1d3e, 0xd019, 0x1, 0x0);
        gbc.writeMem(0x4d9d, { 0x82 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x4d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03B1
        gbc.setState(0x6133, 0xc0e9, 0xe860, 0x6ee0, 0xf3dc, 0x171f, 0x0, 0x0);
        gbc.writeMem(0x6133, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc0e9, gbc.sp());
        EXPECT(0x6134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03B2
        gbc.setState(0xb5f9, 0x5254, 0xeeb0, 0xdb6b, 0xf3f1, 0x91d8, 0x1, 0x1);
        gbc.writeMem(0xb5f9, { 0x82 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5254, gbc.sp());
        EXPECT(0xb5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb5f9));
        // 82 03B3
        gbc.setState(0x94c9, 0x89d, 0xd130, 0x3653, 0xe9c2, 0x4764, 0x1, 0x0);
        gbc.writeMem(0x94c9, { 0x82 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x94c9));
        // 82 03B4
        gbc.setState(0x5fb3, 0xfea8, 0x6160, 0xf5d8, 0xcdd6, 0xff0f, 0x1, 0x0);
        gbc.writeMem(0x5fb3, { 0x82 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03B5
        gbc.setState(0x521d, 0xa35f, 0xea60, 0xf41a, 0x8ff7, 0xc99, 0x0, 0x1);
        gbc.writeMem(0x521d, { 0x82 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0x521e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03B6
        gbc.setState(0xcfee, 0x1b17, 0x1270, 0x25fc, 0x8fd2, 0x1711, 0x0, 0x0);
        gbc.writeMem(0xcfee, { 0x82 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1b17, gbc.sp());
        EXPECT(0xcfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcfee));
        // 82 03B7
        gbc.setState(0xbfc8, 0x2101, 0x5be0, 0xa6e6, 0x8e34, 0x241f, 0x1, 0x1);
        gbc.writeMem(0xbfc8, { 0x82 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2101, gbc.sp());
        EXPECT(0xbfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbfc8));
        // 82 03B8
        gbc.setState(0xa2d5, 0x854d, 0xfb60, 0x1441, 0x2f84, 0xdfcd, 0x0, 0x0);
        gbc.writeMem(0xa2d5, { 0x82 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0xa2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa2d5));
        // 82 03B9
        gbc.setState(0x5800, 0xd640, 0xa610, 0x26d1, 0x3c2d, 0x2e4e, 0x0, 0x1);
        gbc.writeMem(0x5800, { 0x82 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03BA
        gbc.setState(0x4a4d, 0xbe2f, 0xa300, 0x21b9, 0xaaf8, 0x54c7, 0x0, 0x1);
        gbc.writeMem(0x4a4d, { 0x82 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbe2f, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03BB
        gbc.setState(0xbb4a, 0xc4f5, 0x4440, 0x93ac, 0xa39d, 0x78ca, 0x1, 0x1);
        gbc.writeMem(0xbb4a, { 0x82 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0xbb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb4a));
        // 82 03BC
        gbc.setState(0x3519, 0xb846, 0xd810, 0xff08, 0xef3f, 0xd667, 0x0, 0x1);
        gbc.writeMem(0x3519, { 0x82 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03BD
        gbc.setState(0x80ea, 0xb0a, 0xbf00, 0x4b0, 0x34dd, 0xc645, 0x1, 0x0);
        gbc.writeMem(0x80ea, { 0x82 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x80ea));
        // 82 03BE
        gbc.setState(0x5d81, 0x4f00, 0xab20, 0xb676, 0xfc47, 0xee2d, 0x1, 0x1);
        gbc.writeMem(0x5d81, { 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f00, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03BF
        gbc.setState(0xbb2f, 0xaf03, 0x87e0, 0xaf5b, 0x50ac, 0x83a, 0x1, 0x1);
        gbc.writeMem(0xbb2f, { 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb2f));
        // 82 03C0
        gbc.setState(0xec3a, 0xded7, 0x5ae0, 0xce00, 0x4927, 0x6b8f, 0x0, 0x0);
        gbc.writeMem(0xec3a, { 0x82 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xded7, gbc.sp());
        EXPECT(0xec3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xec3a));
        // 82 03C1
        gbc.setState(0x6695, 0x7842, 0xddd0, 0x7ee9, 0x330, 0xd28e, 0x1, 0x1);
        gbc.writeMem(0x6695, { 0x82 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03C2
        gbc.setState(0x80dd, 0x1eb8, 0x94a0, 0xb0d5, 0x6a0c, 0xcb9f, 0x1, 0x0);
        gbc.writeMem(0x80dd, { 0x82 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x80dd));
        // 82 03C3
        gbc.setState(0xd15e, 0xd7c3, 0x47a0, 0xf36e, 0xae3c, 0xb276, 0x0, 0x0);
        gbc.writeMem(0xd15e, { 0x82 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd7c3, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd15e));
        // 82 03C4
        gbc.setState(0x3454, 0xb148, 0x7c20, 0xb8cd, 0xf2dd, 0xc066, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0x82 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03C5
        gbc.setState(0xc247, 0xfadb, 0x92c0, 0xc368, 0x7329, 0x93ae, 0x0, 0x0);
        gbc.writeMem(0xc247, { 0x82 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfadb, gbc.sp());
        EXPECT(0xc248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc247));
        // 82 03C6
        gbc.setState(0xa7ff, 0x284c, 0x3f80, 0x6618, 0x23fb, 0x3afd, 0x0, 0x1);
        gbc.writeMem(0xa7ff, { 0x82 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x284c, gbc.sp());
        EXPECT(0xa800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa7ff));
        // 82 03C7
        gbc.setState(0xc2b5, 0xe5e1, 0x6a90, 0xe0c3, 0xa616, 0xe781, 0x0, 0x1);
        gbc.writeMem(0xc2b5, { 0x82 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe5e1, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc2b5));
        // 82 03C8
        gbc.setState(0x60e4, 0x6710, 0x84d0, 0x1332, 0xa3f7, 0x5d3, 0x0, 0x0);
        gbc.writeMem(0x60e4, { 0x82 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6710, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03C9
        gbc.setState(0x32df, 0xcb8a, 0x4e80, 0x1b44, 0x988f, 0xd0be, 0x0, 0x1);
        gbc.writeMem(0x32df, { 0x82 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcb8a, gbc.sp());
        EXPECT(0x32e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03CA
        gbc.setState(0xd4f8, 0xa60e, 0x6f00, 0x4c00, 0xffba, 0x2fdf, 0x1, 0x1);
        gbc.writeMem(0xd4f8, { 0x82 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd4f8));
        // 82 03CB
        gbc.setState(0x8bd, 0x88a6, 0xc0a0, 0x51e7, 0xd3be, 0x9cde, 0x0, 0x1);
        gbc.writeMem(0x8bd, { 0x82 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0x8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03CC
        gbc.setState(0x43f, 0x7255, 0xd760, 0x384b, 0x9ca7, 0x5d51, 0x0, 0x1);
        gbc.writeMem(0x43f, { 0x82 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7255, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03CD
        gbc.setState(0x940a, 0x8cff, 0xc720, 0x80b0, 0x46e2, 0x7715, 0x0, 0x0);
        gbc.writeMem(0x940a, { 0x82 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8cff, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x940a));
        // 82 03CE
        gbc.setState(0x646, 0xb0e2, 0x3fe0, 0x914a, 0xbee, 0xb3a3, 0x0, 0x1);
        gbc.writeMem(0x646, { 0x82 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03CF
        gbc.setState(0x42b4, 0xd390, 0xace0, 0xf240, 0x2d21, 0xf3a5, 0x1, 0x0);
        gbc.writeMem(0x42b4, { 0x82 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0x42b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03D0
        gbc.setState(0xbac2, 0xecda, 0x5c80, 0x9973, 0x56c1, 0xc425, 0x1, 0x1);
        gbc.writeMem(0xbac2, { 0x82 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xecda, gbc.sp());
        EXPECT(0xbac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbac2));
        // 82 03D1
        gbc.setState(0x6934, 0xd89c, 0x94e0, 0x5803, 0x8301, 0x7d67, 0x0, 0x1);
        gbc.writeMem(0x6934, { 0x82 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03D3
        gbc.setState(0xd1c6, 0x3ec, 0xc6b0, 0x51aa, 0xdf80, 0x2677, 0x0, 0x1);
        gbc.writeMem(0xd1c6, { 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3ec, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd1c6));
        // 82 03D4
        gbc.setState(0x5c54, 0x735b, 0x9a30, 0x4e05, 0x1a17, 0xbdf1, 0x1, 0x0);
        gbc.writeMem(0x5c54, { 0x82 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x735b, gbc.sp());
        EXPECT(0x5c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03D5
        gbc.setState(0x51a6, 0xd3c4, 0xce0, 0x8e15, 0xe5f0, 0xb6be, 0x1, 0x0);
        gbc.writeMem(0x51a6, { 0x82 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd3c4, gbc.sp());
        EXPECT(0x51a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03D6
        gbc.setState(0x8ac4, 0xc549, 0x97d0, 0xf11a, 0xec87, 0x564b, 0x0, 0x1);
        gbc.writeMem(0x8ac4, { 0x82 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8ac4));
        // 82 03D7
        gbc.setState(0xd4c1, 0xbabf, 0x5cd0, 0x6230, 0xd0e8, 0xa2bd, 0x0, 0x1);
        gbc.writeMem(0xd4c1, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbabf, gbc.sp());
        EXPECT(0xd4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd4c1));
        // 82 03D8
        gbc.setState(0x1d1a, 0x6bcb, 0x9b60, 0xb190, 0x24ab, 0xe7b, 0x1, 0x1);
        gbc.writeMem(0x1d1a, { 0x82 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6bcb, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03D9
        gbc.setState(0x89a9, 0x8ef5, 0xd320, 0x7dd4, 0x560d, 0xa072, 0x0, 0x0);
        gbc.writeMem(0x89a9, { 0x82 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x89aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x89a9));
        // 82 03DB
        gbc.setState(0x889a, 0xcedf, 0xaad0, 0x4e91, 0xfc4, 0xf635, 0x1, 0x1);
        gbc.writeMem(0x889a, { 0x82 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x889b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x889a));
        // 82 03DD
        gbc.setState(0x7bd1, 0xc4d, 0x6110, 0x7ef6, 0xe34f, 0xe47f, 0x1, 0x1);
        gbc.writeMem(0x7bd1, { 0x82 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0x7bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03DE
        gbc.setState(0x7dc2, 0x33d2, 0x50b0, 0x7ddf, 0xc624, 0x2a3a, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0x82 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x33d2, gbc.sp());
        EXPECT(0x7dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03DF
        gbc.setState(0x781b, 0xc9a4, 0x2110, 0x564c, 0x8ce3, 0xd556, 0x0, 0x0);
        gbc.writeMem(0x781b, { 0x82 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc9a4, gbc.sp());
        EXPECT(0x781c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 82 03E0
        gbc.setState(0xa35e, 0x7b63, 0xb830, 0xec35, 0x8e82, 0xa14, 0x0, 0x1);
        gbc.writeMem(0xa35e, { 0x82 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0xa35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa35e));
        // 82 03E1
        gbc.setState(0xcc91, 0x99a, 0xa820, 0x81c0, 0xb98e, 0x5068, 0x1, 0x1);
        gbc.writeMem(0xcc91, { 0x82 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0xcc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc91));
        // 82 03E2
        gbc.setState(0x2136, 0x474, 0xf5c0, 0x8a02, 0xd6e7, 0xb112, 0x1, 0x0);
        gbc.writeMem(0x2136, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x474, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03E3
        gbc.setState(0x757a, 0x707c, 0xd000, 0x9dd8, 0x520c, 0x138f, 0x1, 0x0);
        gbc.writeMem(0x757a, { 0x82 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x707c, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03E4
        gbc.setState(0xebcf, 0xd9a4, 0xfff0, 0xfcf, 0xa627, 0x174d, 0x0, 0x0);
        gbc.writeMem(0xebcf, { 0x82 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd9a4, gbc.sp());
        EXPECT(0xebd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xebcf));
        // 82 03E5
        gbc.setState(0x3cc4, 0xc248, 0xcb20, 0x22d8, 0xaf13, 0x7540, 0x0, 0x0);
        gbc.writeMem(0x3cc4, { 0x82 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03E6
        gbc.setState(0x2373, 0x81ca, 0xd2f0, 0x79cf, 0x36dd, 0xdc8, 0x0, 0x1);
        gbc.writeMem(0x2373, { 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0x2374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 82 03E7
        gbc.setState(0x8ab8, 0x7298, 0xbcb0, 0x7fc8, 0xfea1, 0x48a2, 0x1, 0x1);
        gbc.writeMem(0x8ab8, { 0x82 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7298, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8ab8));
    }
