#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_a2)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_a2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A2 0000
        gbc.setState(0xba2e, 0xe2c6, 0x5180, 0x33c3, 0x5db6, 0x61d2, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe2c6);
        EXPECT(gbc.pc(), 0xba30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2e), 0xcb);
        EXPECT(gbc.readMem(0xba2f), 0xa2);
        // CB A2 0001
        gbc.setState(0x543b, 0x864e, 0x84b0, 0x5129, 0x9652, 0xdf57, 0x0, 0x0);
        gbc.writeMem(0x543b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x864e);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0002
        gbc.setState(0x78f0, 0xae8c, 0x4c00, 0xd1b2, 0x37de, 0x711f, 0x0, 0x1);
        gbc.writeMem(0x78f0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xae8c);
        EXPECT(gbc.pc(), 0x78f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0003
        gbc.setState(0x6737, 0xcc6, 0x4a00, 0x5f4, 0x327e, 0xcdd6, 0x1, 0x0);
        gbc.writeMem(0x6737, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcc6);
        EXPECT(gbc.pc(), 0x6739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0004
        gbc.setState(0x3461, 0x387c, 0xbdf0, 0x4cbb, 0x95eb, 0xc0bf, 0x1, 0x1);
        gbc.writeMem(0x3461, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x387c);
        EXPECT(gbc.pc(), 0x3463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0005
        gbc.setState(0x26fd, 0x76de, 0xa8f0, 0xac8c, 0xe544, 0x61c6, 0x0, 0x0);
        gbc.writeMem(0x26fd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x76de);
        EXPECT(gbc.pc(), 0x26ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0006
        gbc.setState(0x54f8, 0xd4eb, 0xd690, 0x22fb, 0x434c, 0x8299, 0x1, 0x0);
        gbc.writeMem(0x54f8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd4eb);
        EXPECT(gbc.pc(), 0x54fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0007
        gbc.setState(0x3d8, 0xe943, 0x1830, 0x9a87, 0x4c4e, 0x2ee9, 0x0, 0x0);
        gbc.writeMem(0x3d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe943);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0008
        gbc.setState(0xe0d6, 0x31b4, 0x5040, 0xf17f, 0xc0bd, 0x4eaf, 0x0, 0x0);
        gbc.writeMem(0xe0d6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x31b4);
        EXPECT(gbc.pc(), 0xe0d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d6), 0xcb);
        EXPECT(gbc.readMem(0xe0d7), 0xa2);
        // CB A2 0009
        gbc.setState(0x91e8, 0xcb2d, 0xa310, 0xb32f, 0x988c, 0x3cba, 0x1, 0x0);
        gbc.writeMem(0x91e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcb2d);
        EXPECT(gbc.pc(), 0x91ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e8), 0xcb);
        EXPECT(gbc.readMem(0x91e9), 0xa2);
        // CB A2 000A
        gbc.setState(0x39fd, 0x80d3, 0x6f70, 0x9ef1, 0xe2ee, 0x931, 0x0, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x80d3);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 000B
        gbc.setState(0xd893, 0x685d, 0xa280, 0x6cc3, 0x616, 0xd016, 0x1, 0x1);
        gbc.writeMem(0xd893, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x685d);
        EXPECT(gbc.pc(), 0xd895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd893), 0xcb);
        EXPECT(gbc.readMem(0xd894), 0xa2);
        // CB A2 000C
        gbc.setState(0xec8f, 0x26a3, 0x4490, 0x8cb0, 0xcb2, 0xd083, 0x1, 0x1);
        gbc.writeMem(0xec8f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x26a3);
        EXPECT(gbc.pc(), 0xec91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec8f), 0xcb);
        EXPECT(gbc.readMem(0xec90), 0xa2);
        // CB A2 000D
        gbc.setState(0x9416, 0x95d9, 0x9c30, 0x5c1b, 0xd291, 0x5823, 0x1, 0x1);
        gbc.writeMem(0x9416, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x95d9);
        EXPECT(gbc.pc(), 0x9418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9416), 0xcb);
        EXPECT(gbc.readMem(0x9417), 0xa2);
        // CB A2 000F
        gbc.setState(0x86c4, 0xd0ce, 0x58e0, 0x14e8, 0x975d, 0x16d1, 0x1, 0x0);
        gbc.writeMem(0x86c4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd0ce);
        EXPECT(gbc.pc(), 0x86c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c4), 0xcb);
        EXPECT(gbc.readMem(0x86c5), 0xa2);
        // CB A2 0010
        gbc.setState(0xec12, 0xd6b7, 0x4c80, 0xf28e, 0x64a7, 0xe685, 0x1, 0x0);
        gbc.writeMem(0xec12, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd6b7);
        EXPECT(gbc.pc(), 0xec14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec12), 0xcb);
        EXPECT(gbc.readMem(0xec13), 0xa2);
        // CB A2 0011
        gbc.setState(0x2e2, 0xfb7b, 0x7180, 0x1443, 0xe6ea, 0xc392, 0x1, 0x1);
        gbc.writeMem(0x2e2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfb7b);
        EXPECT(gbc.pc(), 0x2e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0012
        gbc.setState(0xe227, 0x2483, 0xfc00, 0x4c41, 0x594b, 0xfdfc, 0x0, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2483);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe227), 0xcb);
        EXPECT(gbc.readMem(0xe228), 0xa2);
        // CB A2 0013
        gbc.setState(0xcd94, 0xf140, 0xd740, 0x6582, 0x2339, 0xb7f7, 0x1, 0x0);
        gbc.writeMem(0xcd94, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf140);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd94), 0xcb);
        EXPECT(gbc.readMem(0xcd95), 0xa2);
        // CB A2 0014
        gbc.setState(0x2255, 0x53b8, 0x2fb0, 0x6560, 0xab5f, 0x773b, 0x1, 0x0);
        gbc.writeMem(0x2255, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x53b8);
        EXPECT(gbc.pc(), 0x2257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0015
        gbc.setState(0xd52a, 0x6e35, 0x9cd0, 0x46e3, 0x5818, 0xc0ac, 0x1, 0x1);
        gbc.writeMem(0xd52a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6e35);
        EXPECT(gbc.pc(), 0xd52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd52a), 0xcb);
        EXPECT(gbc.readMem(0xd52b), 0xa2);
        // CB A2 0016
        gbc.setState(0x9c15, 0xcff2, 0x45d0, 0x2ebd, 0x5d3, 0xbb39, 0x1, 0x1);
        gbc.writeMem(0x9c15, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcff2);
        EXPECT(gbc.pc(), 0x9c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c15), 0xcb);
        EXPECT(gbc.readMem(0x9c16), 0xa2);
        // CB A2 0017
        gbc.setState(0x7672, 0x341a, 0x7d40, 0x883, 0x9ecb, 0xf053, 0x0, 0x1);
        gbc.writeMem(0x7672, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x341a);
        EXPECT(gbc.pc(), 0x7674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0018
        gbc.setState(0x16f7, 0x6989, 0x7630, 0x1a02, 0x9b86, 0x42f0, 0x1, 0x1);
        gbc.writeMem(0x16f7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6989);
        EXPECT(gbc.pc(), 0x16f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0019
        gbc.setState(0xc8e9, 0x4a9d, 0x7520, 0xc39b, 0xd5c9, 0x333, 0x1, 0x1);
        gbc.writeMem(0xc8e9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0xc8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e9), 0xcb);
        EXPECT(gbc.readMem(0xc8ea), 0xa2);
        // CB A2 001A
        gbc.setState(0x4d4c, 0x9ef3, 0x7a00, 0x573f, 0x677, 0xade1, 0x1, 0x1);
        gbc.writeMem(0x4d4c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9ef3);
        EXPECT(gbc.pc(), 0x4d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 001B
        gbc.setState(0x82f5, 0xfcdf, 0x2030, 0x3dfb, 0x2e89, 0x1bca, 0x1, 0x1);
        gbc.writeMem(0x82f5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfcdf);
        EXPECT(gbc.pc(), 0x82f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f5), 0xcb);
        EXPECT(gbc.readMem(0x82f6), 0xa2);
        // CB A2 001C
        gbc.setState(0x6464, 0x9148, 0xecc0, 0xd1d8, 0x4e50, 0x2319, 0x1, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9148);
        EXPECT(gbc.pc(), 0x6466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 001D
        gbc.setState(0xb1c7, 0x2826, 0xa880, 0x2b7d, 0x6997, 0x8479, 0x1, 0x0);
        gbc.writeMem(0xb1c7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2826);
        EXPECT(gbc.pc(), 0xb1c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c7), 0xcb);
        EXPECT(gbc.readMem(0xb1c8), 0xa2);
        // CB A2 001E
        gbc.setState(0x7808, 0xc366, 0x72e0, 0xbd6e, 0x35dc, 0x114d, 0x0, 0x1);
        gbc.writeMem(0x7808, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0x780a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 001F
        gbc.setState(0xb222, 0xc00, 0xa860, 0x8f81, 0x870, 0xdd37, 0x1, 0x1);
        gbc.writeMem(0xb222, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc00);
        EXPECT(gbc.pc(), 0xb224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb222), 0xcb);
        EXPECT(gbc.readMem(0xb223), 0xa2);
        // CB A2 0020
        gbc.setState(0x8caa, 0xf633, 0x9d20, 0x2431, 0x925e, 0x2164, 0x0, 0x1);
        gbc.writeMem(0x8caa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf633);
        EXPECT(gbc.pc(), 0x8cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8caa), 0xcb);
        EXPECT(gbc.readMem(0x8cab), 0xa2);
        // CB A2 0021
        gbc.setState(0x6c42, 0x7193, 0x3a60, 0xd082, 0x364, 0x47a, 0x0, 0x1);
        gbc.writeMem(0x6c42, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7193);
        EXPECT(gbc.pc(), 0x6c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0022
        gbc.setState(0x9763, 0x9b95, 0xa0f0, 0x24dd, 0xf226, 0x7d85, 0x0, 0x1);
        gbc.writeMem(0x9763, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9b95);
        EXPECT(gbc.pc(), 0x9765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9763), 0xcb);
        EXPECT(gbc.readMem(0x9764), 0xa2);
        // CB A2 0023
        gbc.setState(0xc76b, 0xe56d, 0x9210, 0xfd56, 0x4796, 0xcf69, 0x0, 0x0);
        gbc.writeMem(0xc76b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe56d);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76b), 0xcb);
        EXPECT(gbc.readMem(0xc76c), 0xa2);
        // CB A2 0024
        gbc.setState(0xc92, 0x4c52, 0x8ed0, 0x58f, 0x2c65, 0x5d48, 0x1, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4c52);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0025
        gbc.setState(0x83d7, 0x70af, 0x7490, 0x91fc, 0xae3f, 0x9db5, 0x0, 0x0);
        gbc.writeMem(0x83d7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x70af);
        EXPECT(gbc.pc(), 0x83d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d7), 0xcb);
        EXPECT(gbc.readMem(0x83d8), 0xa2);
        // CB A2 0026
        gbc.setState(0xd1ee, 0x55af, 0xc550, 0x5e44, 0xe17e, 0xd392, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x55af);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ee), 0xcb);
        EXPECT(gbc.readMem(0xd1ef), 0xa2);
        // CB A2 0027
        gbc.setState(0xbaab, 0xbf5f, 0x6720, 0xb8e1, 0x68f, 0x3c26, 0x0, 0x1);
        gbc.writeMem(0xbaab, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbf5f);
        EXPECT(gbc.pc(), 0xbaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaab), 0xcb);
        EXPECT(gbc.readMem(0xbaac), 0xa2);
        // CB A2 0028
        gbc.setState(0xa994, 0x64b4, 0x2eb0, 0xfcd2, 0x30a3, 0x63e0, 0x1, 0x0);
        gbc.writeMem(0xa994, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x64b4);
        EXPECT(gbc.pc(), 0xa996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa994), 0xcb);
        EXPECT(gbc.readMem(0xa995), 0xa2);
        // CB A2 0029
        gbc.setState(0x7ac, 0x5b5b, 0x3510, 0x6487, 0xd0ee, 0xcc81, 0x0, 0x1);
        gbc.writeMem(0x7ac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5b5b);
        EXPECT(gbc.pc(), 0x7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 002A
        gbc.setState(0xbc3f, 0xe502, 0xe420, 0xaed0, 0xe2a5, 0xd000, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe502);
        EXPECT(gbc.pc(), 0xbc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3f), 0xcb);
        EXPECT(gbc.readMem(0xbc40), 0xa2);
        // CB A2 002B
        gbc.setState(0xb478, 0x255f, 0xb3d0, 0xe4d8, 0x53a6, 0x9a1a, 0x0, 0x1);
        gbc.writeMem(0xb478, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x255f);
        EXPECT(gbc.pc(), 0xb47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb478), 0xcb);
        EXPECT(gbc.readMem(0xb479), 0xa2);
        // CB A2 002C
        gbc.setState(0xcf4d, 0x5635, 0xf3b0, 0xda23, 0x6460, 0x280d, 0x1, 0x0);
        gbc.writeMem(0xcf4d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5635);
        EXPECT(gbc.pc(), 0xcf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4d), 0xcb);
        EXPECT(gbc.readMem(0xcf4e), 0xa2);
        // CB A2 002D
        gbc.setState(0xdf87, 0xfabb, 0x8a00, 0x7410, 0x7a73, 0x8a0a, 0x0, 0x0);
        gbc.writeMem(0xdf87, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfabb);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf87), 0xcb);
        EXPECT(gbc.readMem(0xdf88), 0xa2);
        // CB A2 002E
        gbc.setState(0x52eb, 0x9327, 0xfc00, 0x53bd, 0xe4c1, 0xbab0, 0x1, 0x1);
        gbc.writeMem(0x52eb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x52ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 002F
        gbc.setState(0xd5a1, 0x5f3d, 0x6630, 0xde4a, 0xfb92, 0xcc57, 0x0, 0x1);
        gbc.writeMem(0xd5a1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5f3d);
        EXPECT(gbc.pc(), 0xd5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a1), 0xcb);
        EXPECT(gbc.readMem(0xd5a2), 0xa2);
        // CB A2 0030
        gbc.setState(0x53a6, 0xea9c, 0xacf0, 0x2a43, 0x56e9, 0x6b38, 0x0, 0x1);
        gbc.writeMem(0x53a6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xea9c);
        EXPECT(gbc.pc(), 0x53a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0031
        gbc.setState(0xd577, 0x410b, 0xc330, 0x2973, 0x2f60, 0xf266, 0x1, 0x0);
        gbc.writeMem(0xd577, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0xd579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd577), 0xcb);
        EXPECT(gbc.readMem(0xd578), 0xa2);
        // CB A2 0032
        gbc.setState(0x8b02, 0x7e27, 0x1ca0, 0xd4b7, 0x6eff, 0x4c8, 0x1, 0x0);
        gbc.writeMem(0x8b02, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7e27);
        EXPECT(gbc.pc(), 0x8b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b02), 0xcb);
        EXPECT(gbc.readMem(0x8b03), 0xa2);
        // CB A2 0033
        gbc.setState(0x48bb, 0x945f, 0x5c20, 0x893, 0x8cd0, 0x93f, 0x1, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x945f);
        EXPECT(gbc.pc(), 0x48bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0035
        gbc.setState(0xc63f, 0xdf47, 0xe8a0, 0xd9f1, 0x9554, 0x9810, 0x1, 0x0);
        gbc.writeMem(0xc63f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdf47);
        EXPECT(gbc.pc(), 0xc641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63f), 0xcb);
        EXPECT(gbc.readMem(0xc640), 0xa2);
        // CB A2 0036
        gbc.setState(0x5c0f, 0xfcad, 0x4710, 0x943c, 0x4b11, 0xe5cf, 0x1, 0x0);
        gbc.writeMem(0x5c0f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfcad);
        EXPECT(gbc.pc(), 0x5c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0037
        gbc.setState(0xa1cb, 0x9bea, 0x8650, 0xbedd, 0x1097, 0x5e4c, 0x0, 0x0);
        gbc.writeMem(0xa1cb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9bea);
        EXPECT(gbc.pc(), 0xa1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cb), 0xcb);
        EXPECT(gbc.readMem(0xa1cc), 0xa2);
        // CB A2 0038
        gbc.setState(0x4769, 0x1542, 0xd8e0, 0x81a2, 0xba59, 0x4bc9, 0x0, 0x1);
        gbc.writeMem(0x4769, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1542);
        EXPECT(gbc.pc(), 0x476b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0039
        gbc.setState(0xa2c1, 0x57e2, 0x9190, 0x262e, 0xabb4, 0xce0a, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x57e2);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c1), 0xcb);
        EXPECT(gbc.readMem(0xa2c2), 0xa2);
        // CB A2 003A
        gbc.setState(0x7d49, 0x9ad1, 0x2170, 0xd6d2, 0x9fb8, 0xc041, 0x0, 0x1);
        gbc.writeMem(0x7d49, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9ad1);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 003B
        gbc.setState(0xb87a, 0xc53b, 0xf0, 0xbc22, 0xe45c, 0xa7a1, 0x1, 0x0);
        gbc.writeMem(0xb87a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc53b);
        EXPECT(gbc.pc(), 0xb87c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87a), 0xcb);
        EXPECT(gbc.readMem(0xb87b), 0xa2);
        // CB A2 003C
        gbc.setState(0x9fd0, 0x325, 0x1d10, 0x47d, 0xf347, 0xfdef, 0x0, 0x1);
        gbc.writeMem(0x9fd0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x325);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd0), 0xcb);
        EXPECT(gbc.readMem(0x9fd1), 0xa2);
        // CB A2 003D
        gbc.setState(0xaa16, 0xaff6, 0xd050, 0x335d, 0x9d6b, 0x503e, 0x1, 0x0);
        gbc.writeMem(0xaa16, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaff6);
        EXPECT(gbc.pc(), 0xaa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa16), 0xcb);
        EXPECT(gbc.readMem(0xaa17), 0xa2);
        // CB A2 003F
        gbc.setState(0xede7, 0x6773, 0xf7d0, 0x2570, 0x4a, 0x340e, 0x0, 0x1);
        gbc.writeMem(0xede7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6773);
        EXPECT(gbc.pc(), 0xede9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede7), 0xcb);
        EXPECT(gbc.readMem(0xede8), 0xa2);
        // CB A2 0041
        gbc.setState(0xbd0d, 0x782f, 0x5c80, 0xf2de, 0x4e99, 0xf871, 0x0, 0x0);
        gbc.writeMem(0xbd0d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x782f);
        EXPECT(gbc.pc(), 0xbd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0d), 0xcb);
        EXPECT(gbc.readMem(0xbd0e), 0xa2);
        // CB A2 0042
        gbc.setState(0x6cdb, 0x5c2a, 0x2e60, 0xa0c9, 0x7b39, 0xa8ed, 0x1, 0x1);
        gbc.writeMem(0x6cdb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0x6cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0043
        gbc.setState(0x5968, 0xaf0c, 0x7ae0, 0x84c1, 0x51d3, 0xd930, 0x0, 0x0);
        gbc.writeMem(0x5968, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xaf0c);
        EXPECT(gbc.pc(), 0x596a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0044
        gbc.setState(0x54fd, 0xb0cc, 0xd430, 0x7c6f, 0x638e, 0x58f0, 0x1, 0x1);
        gbc.writeMem(0x54fd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0x54ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0045
        gbc.setState(0x32c3, 0xac71, 0x240, 0x223a, 0xb552, 0x21ee, 0x1, 0x0);
        gbc.writeMem(0x32c3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xac71);
        EXPECT(gbc.pc(), 0x32c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0046
        gbc.setState(0xdf9d, 0xbc43, 0x8e10, 0x972, 0xac38, 0x92b5, 0x0, 0x1);
        gbc.writeMem(0xdf9d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbc43);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9d), 0xcb);
        EXPECT(gbc.readMem(0xdf9e), 0xa2);
        // CB A2 0047
        gbc.setState(0x1f82, 0xaab4, 0xffe0, 0x7a43, 0x3cf5, 0x768e, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xaab4);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0048
        gbc.setState(0x56f8, 0xf332, 0x9af0, 0x500a, 0x7562, 0x1f0e, 0x0, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf332);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0049
        gbc.setState(0xb2b4, 0xe545, 0x21b0, 0x1cb6, 0x885b, 0x5ab7, 0x0, 0x0);
        gbc.writeMem(0xb2b4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0xb2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b4), 0xcb);
        EXPECT(gbc.readMem(0xb2b5), 0xa2);
        // CB A2 004A
        gbc.setState(0x1a77, 0x2edd, 0x3ef0, 0x3e3, 0x253d, 0xca8e, 0x0, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2edd);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 004B
        gbc.setState(0x2e0c, 0x4928, 0xd520, 0xaa57, 0x68a, 0xfe68, 0x1, 0x1);
        gbc.writeMem(0x2e0c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4928);
        EXPECT(gbc.pc(), 0x2e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 004C
        gbc.setState(0xc802, 0x734a, 0xb330, 0xf816, 0xa133, 0xd5b5, 0x0, 0x1);
        gbc.writeMem(0xc802, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x734a);
        EXPECT(gbc.pc(), 0xc804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc802), 0xcb);
        EXPECT(gbc.readMem(0xc803), 0xa2);
        // CB A2 004D
        gbc.setState(0xa56f, 0x9174, 0x63f0, 0xfe0a, 0x3eb8, 0xc0a7, 0x0, 0x1);
        gbc.writeMem(0xa56f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9174);
        EXPECT(gbc.pc(), 0xa571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56f), 0xcb);
        EXPECT(gbc.readMem(0xa570), 0xa2);
        // CB A2 004F
        gbc.setState(0xa88f, 0xf89d, 0x3d70, 0x6e16, 0xb591, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0xa88f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0xa891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88f), 0xcb);
        EXPECT(gbc.readMem(0xa890), 0xa2);
        // CB A2 0050
        gbc.setState(0x73bb, 0x7cef, 0x65d0, 0x5843, 0xb630, 0x2f96, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7cef);
        EXPECT(gbc.pc(), 0x73bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0051
        gbc.setState(0x3e10, 0xc108, 0x70c0, 0x3c16, 0x1b1f, 0xd5f8, 0x0, 0x0);
        gbc.writeMem(0x3e10, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc108);
        EXPECT(gbc.pc(), 0x3e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0052
        gbc.setState(0xe05b, 0x9d65, 0x8b70, 0xe83b, 0x38c7, 0xd6d4, 0x0, 0x1);
        gbc.writeMem(0xe05b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0xe05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05b), 0xcb);
        EXPECT(gbc.readMem(0xe05c), 0xa2);
        // CB A2 0053
        gbc.setState(0x1214, 0x677c, 0x1800, 0x26e5, 0x261b, 0xe997, 0x0, 0x0);
        gbc.writeMem(0x1214, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0054
        gbc.setState(0x1e6b, 0xb46e, 0xa7e0, 0xbba7, 0x5fe1, 0xe445, 0x0, 0x0);
        gbc.writeMem(0x1e6b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb46e);
        EXPECT(gbc.pc(), 0x1e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0055
        gbc.setState(0xc769, 0x64e6, 0x82c0, 0xc4a5, 0xbfa1, 0x9e36, 0x0, 0x1);
        gbc.writeMem(0xc769, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x64e6);
        EXPECT(gbc.pc(), 0xc76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc769), 0xcb);
        EXPECT(gbc.readMem(0xc76a), 0xa2);
        // CB A2 0056
        gbc.setState(0x496a, 0x878a, 0x2700, 0xdf5c, 0x7681, 0xa89f, 0x0, 0x1);
        gbc.writeMem(0x496a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x878a);
        EXPECT(gbc.pc(), 0x496c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0057
        gbc.setState(0xb4c6, 0x3e36, 0xe650, 0xdf92, 0x6746, 0xdc34, 0x1, 0x1);
        gbc.writeMem(0xb4c6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3e36);
        EXPECT(gbc.pc(), 0xb4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c6), 0xcb);
        EXPECT(gbc.readMem(0xb4c7), 0xa2);
        // CB A2 0058
        gbc.setState(0x806f, 0xffeb, 0xedc0, 0xef02, 0xe2f0, 0x50d4, 0x0, 0x0);
        gbc.writeMem(0x806f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xffeb);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806f), 0xcb);
        EXPECT(gbc.readMem(0x8070), 0xa2);
        // CB A2 0059
        gbc.setState(0xc5d3, 0x6f24, 0x34a0, 0xc118, 0x14e9, 0x44bc, 0x0, 0x1);
        gbc.writeMem(0xc5d3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6f24);
        EXPECT(gbc.pc(), 0xc5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d3), 0xcb);
        EXPECT(gbc.readMem(0xc5d4), 0xa2);
        // CB A2 005B
        gbc.setState(0x82f5, 0x8130, 0x5840, 0x84d5, 0xa9b9, 0x5b1f, 0x0, 0x0);
        gbc.writeMem(0x82f5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0x82f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f5), 0xcb);
        EXPECT(gbc.readMem(0x82f6), 0xa2);
        // CB A2 005C
        gbc.setState(0x3e25, 0x266b, 0xea10, 0xf6f1, 0x6198, 0xe39f, 0x0, 0x0);
        gbc.writeMem(0x3e25, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x266b);
        EXPECT(gbc.pc(), 0x3e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 005D
        gbc.setState(0x685a, 0x46bc, 0xdfb0, 0x11cd, 0x8f7, 0xbb35, 0x0, 0x0);
        gbc.writeMem(0x685a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x46bc);
        EXPECT(gbc.pc(), 0x685c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 005E
        gbc.setState(0x8f42, 0xf8c5, 0xa820, 0x244, 0xfc01, 0xb3e1, 0x0, 0x0);
        gbc.writeMem(0x8f42, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf8c5);
        EXPECT(gbc.pc(), 0x8f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f42), 0xcb);
        EXPECT(gbc.readMem(0x8f43), 0xa2);
        // CB A2 0061
        gbc.setState(0xb582, 0x8956, 0x8960, 0x8ea3, 0xb337, 0xd3c4, 0x1, 0x1);
        gbc.writeMem(0xb582, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8956);
        EXPECT(gbc.pc(), 0xb584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb582), 0xcb);
        EXPECT(gbc.readMem(0xb583), 0xa2);
        // CB A2 0062
        gbc.setState(0xb97b, 0xfece, 0x1c00, 0x3284, 0x7d11, 0xa8cc, 0x0, 0x1);
        gbc.writeMem(0xb97b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfece);
        EXPECT(gbc.pc(), 0xb97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97b), 0xcb);
        EXPECT(gbc.readMem(0xb97c), 0xa2);
        // CB A2 0063
        gbc.setState(0xb30d, 0x683, 0x1f30, 0x38d7, 0x7b21, 0x5bf0, 0x1, 0x0);
        gbc.writeMem(0xb30d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x683);
        EXPECT(gbc.pc(), 0xb30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30d), 0xcb);
        EXPECT(gbc.readMem(0xb30e), 0xa2);
        // CB A2 0065
        gbc.setState(0xadfc, 0xfd58, 0xd5a0, 0xb220, 0x6a50, 0x54d2, 0x0, 0x0);
        gbc.writeMem(0xadfc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfd58);
        EXPECT(gbc.pc(), 0xadfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfc), 0xcb);
        EXPECT(gbc.readMem(0xadfd), 0xa2);
        // CB A2 0066
        gbc.setState(0x8b73, 0xc3f5, 0xfb40, 0xeae2, 0x7a63, 0x975b, 0x0, 0x0);
        gbc.writeMem(0x8b73, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc3f5);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b73), 0xcb);
        EXPECT(gbc.readMem(0x8b74), 0xa2);
        // CB A2 0067
        gbc.setState(0x3b1d, 0xb881, 0xc230, 0xa044, 0xd891, 0xe85f, 0x1, 0x1);
        gbc.writeMem(0x3b1d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb881);
        EXPECT(gbc.pc(), 0x3b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0068
        gbc.setState(0x19b5, 0x6dff, 0x45e0, 0x580b, 0x2e9d, 0xa1ec, 0x0, 0x1);
        gbc.writeMem(0x19b5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6dff);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0069
        gbc.setState(0xba68, 0x2519, 0xb9a0, 0xd75e, 0x6c2a, 0x4043, 0x1, 0x0);
        gbc.writeMem(0xba68, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2519);
        EXPECT(gbc.pc(), 0xba6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba68), 0xcb);
        EXPECT(gbc.readMem(0xba69), 0xa2);
        // CB A2 006A
        gbc.setState(0xdf9d, 0x2af9, 0x3ed0, 0xc396, 0x3d19, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0xdf9d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2af9);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9d), 0xcb);
        EXPECT(gbc.readMem(0xdf9e), 0xa2);
        // CB A2 006B
        gbc.setState(0x2f6, 0x262a, 0x6e60, 0x6f2c, 0x6698, 0x3899, 0x1, 0x0);
        gbc.writeMem(0x2f6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 006C
        gbc.setState(0xdd5e, 0x447c, 0x5a0, 0x4e7c, 0x6c73, 0x7988, 0x0, 0x0);
        gbc.writeMem(0xdd5e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x447c);
        EXPECT(gbc.pc(), 0xdd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5e), 0xcb);
        EXPECT(gbc.readMem(0xdd5f), 0xa2);
        // CB A2 006D
        gbc.setState(0x7c31, 0xf26d, 0x8680, 0xa63d, 0x3d73, 0x500f, 0x0, 0x1);
        gbc.writeMem(0x7c31, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf26d);
        EXPECT(gbc.pc(), 0x7c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 006E
        gbc.setState(0x9888, 0x731, 0x8740, 0x55fb, 0xcd31, 0xef63, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x731);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9888), 0xcb);
        EXPECT(gbc.readMem(0x9889), 0xa2);
        // CB A2 006F
        gbc.setState(0x59ec, 0xf0ce, 0xf360, 0x86e4, 0x83d9, 0xe281, 0x0, 0x0);
        gbc.writeMem(0x59ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf0ce);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0070
        gbc.setState(0x6c29, 0x82f7, 0x210, 0x4293, 0x9482, 0x6ce0, 0x0, 0x1);
        gbc.writeMem(0x6c29, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x82f7);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0071
        gbc.setState(0x56ac, 0x7855, 0x69c0, 0xd04f, 0xb39b, 0xe8fc, 0x0, 0x0);
        gbc.writeMem(0x56ac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7855);
        EXPECT(gbc.pc(), 0x56ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0072
        gbc.setState(0xec17, 0x6ecf, 0x200, 0x17fa, 0xdf80, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0xec17, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6ecf);
        EXPECT(gbc.pc(), 0xec19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec17), 0xcb);
        EXPECT(gbc.readMem(0xec18), 0xa2);
        // CB A2 0073
        gbc.setState(0xb5b1, 0x6f94, 0x9a90, 0x3151, 0xb205, 0x4ad7, 0x0, 0x1);
        gbc.writeMem(0xb5b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6f94);
        EXPECT(gbc.pc(), 0xb5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b1), 0xcb);
        EXPECT(gbc.readMem(0xb5b2), 0xa2);
        // CB A2 0074
        gbc.setState(0xdad6, 0xdf11, 0x7430, 0x6383, 0xb685, 0x404f, 0x1, 0x0);
        gbc.writeMem(0xdad6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdf11);
        EXPECT(gbc.pc(), 0xdad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad6), 0xcb);
        EXPECT(gbc.readMem(0xdad7), 0xa2);
        // CB A2 0075
        gbc.setState(0x8960, 0xccbd, 0x3350, 0x315f, 0x6733, 0x35ae, 0x1, 0x0);
        gbc.writeMem(0x8960, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x8962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8960), 0xcb);
        EXPECT(gbc.readMem(0x8961), 0xa2);
        // CB A2 0076
        gbc.setState(0x710c, 0x7935, 0xb760, 0x776b, 0x6d5a, 0x8f6c, 0x0, 0x0);
        gbc.writeMem(0x710c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7935);
        EXPECT(gbc.pc(), 0x710e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0077
        gbc.setState(0x3d2d, 0xaa86, 0x4430, 0x8983, 0x3e72, 0x7942, 0x1, 0x0);
        gbc.writeMem(0x3d2d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaa86);
        EXPECT(gbc.pc(), 0x3d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0078
        gbc.setState(0xa254, 0xdc0, 0x90a0, 0xd9e6, 0x449, 0x7709, 0x1, 0x1);
        gbc.writeMem(0xa254, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdc0);
        EXPECT(gbc.pc(), 0xa256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa254), 0xcb);
        EXPECT(gbc.readMem(0xa255), 0xa2);
        // CB A2 0079
        gbc.setState(0x9885, 0xf4a0, 0x6790, 0x3c77, 0xdeb9, 0x6151, 0x0, 0x1);
        gbc.writeMem(0x9885, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf4a0);
        EXPECT(gbc.pc(), 0x9887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9885), 0xcb);
        EXPECT(gbc.readMem(0x9886), 0xa2);
        // CB A2 007A
        gbc.setState(0x36b1, 0x1cb4, 0x51a0, 0x4a17, 0x50dc, 0x2add, 0x1, 0x0);
        gbc.writeMem(0x36b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1cb4);
        EXPECT(gbc.pc(), 0x36b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 007B
        gbc.setState(0x86f4, 0x4889, 0x7050, 0xe20b, 0x69ff, 0x73fd, 0x1, 0x1);
        gbc.writeMem(0x86f4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4889);
        EXPECT(gbc.pc(), 0x86f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f4), 0xcb);
        EXPECT(gbc.readMem(0x86f5), 0xa2);
        // CB A2 007C
        gbc.setState(0xac03, 0xf4cd, 0xe640, 0x1f71, 0xf31, 0x3d05, 0x0, 0x0);
        gbc.writeMem(0xac03, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf4cd);
        EXPECT(gbc.pc(), 0xac05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac03), 0xcb);
        EXPECT(gbc.readMem(0xac04), 0xa2);
        // CB A2 007D
        gbc.setState(0x877e, 0xaed7, 0xf440, 0xb308, 0x7fc1, 0x8c86, 0x0, 0x0);
        gbc.writeMem(0x877e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xaed7);
        EXPECT(gbc.pc(), 0x8780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877e), 0xcb);
        EXPECT(gbc.readMem(0x877f), 0xa2);
        // CB A2 007E
        gbc.setState(0x203c, 0x43f3, 0x72d0, 0xa4bb, 0xe426, 0xb42f, 0x0, 0x0);
        gbc.writeMem(0x203c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x43f3);
        EXPECT(gbc.pc(), 0x203e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 007F
        gbc.setState(0x74e0, 0x74fe, 0xe580, 0x17c4, 0x4180, 0x7fba, 0x1, 0x1);
        gbc.writeMem(0x74e0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x74fe);
        EXPECT(gbc.pc(), 0x74e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0080
        gbc.setState(0x7cb4, 0x25e9, 0x4d0, 0x572e, 0xee8f, 0xa77e, 0x0, 0x1);
        gbc.writeMem(0x7cb4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0081
        gbc.setState(0xc79d, 0x3897, 0x2b40, 0x4c13, 0x189f, 0x91c5, 0x1, 0x1);
        gbc.writeMem(0xc79d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3897);
        EXPECT(gbc.pc(), 0xc79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79d), 0xcb);
        EXPECT(gbc.readMem(0xc79e), 0xa2);
        // CB A2 0082
        gbc.setState(0x99c4, 0x479a, 0x43d0, 0xbce4, 0xd1f5, 0x405d, 0x1, 0x0);
        gbc.writeMem(0x99c4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x479a);
        EXPECT(gbc.pc(), 0x99c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c4), 0xcb);
        EXPECT(gbc.readMem(0x99c5), 0xa2);
        // CB A2 0083
        gbc.setState(0x244e, 0xc211, 0xc680, 0x1cdd, 0x955c, 0xe6ed, 0x1, 0x0);
        gbc.writeMem(0x244e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc211);
        EXPECT(gbc.pc(), 0x2450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0084
        gbc.setState(0x3ce2, 0xc3a1, 0x7f60, 0xbc66, 0x2cbd, 0xb860, 0x0, 0x0);
        gbc.writeMem(0x3ce2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc3a1);
        EXPECT(gbc.pc(), 0x3ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0085
        gbc.setState(0x2540, 0x264e, 0xed60, 0xd075, 0xe834, 0xf553, 0x1, 0x0);
        gbc.writeMem(0x2540, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x264e);
        EXPECT(gbc.pc(), 0x2542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0087
        gbc.setState(0x16e0, 0x628b, 0x7630, 0x470a, 0xcf5b, 0xa762, 0x0, 0x1);
        gbc.writeMem(0x16e0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x628b);
        EXPECT(gbc.pc(), 0x16e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0088
        gbc.setState(0xdc4c, 0x9a5c, 0x12f0, 0xb55, 0xbebf, 0xdc28, 0x1, 0x1);
        gbc.writeMem(0xdc4c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9a5c);
        EXPECT(gbc.pc(), 0xdc4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4c), 0xcb);
        EXPECT(gbc.readMem(0xdc4d), 0xa2);
        // CB A2 0089
        gbc.setState(0xc682, 0xf82f, 0xb6a0, 0xff9f, 0xcfe5, 0x5af0, 0x1, 0x0);
        gbc.writeMem(0xc682, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0xc684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc682), 0xcb);
        EXPECT(gbc.readMem(0xc683), 0xa2);
        // CB A2 008A
        gbc.setState(0xac64, 0xfbfe, 0xede0, 0x4228, 0x3161, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0xac64, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfbfe);
        EXPECT(gbc.pc(), 0xac66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac64), 0xcb);
        EXPECT(gbc.readMem(0xac65), 0xa2);
        // CB A2 008B
        gbc.setState(0x39be, 0x6303, 0x9b20, 0xeaf8, 0x7d76, 0xba54, 0x1, 0x0);
        gbc.writeMem(0x39be, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6303);
        EXPECT(gbc.pc(), 0x39c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 008D
        gbc.setState(0x439d, 0x495e, 0x7410, 0xe786, 0xd095, 0x37ae, 0x1, 0x0);
        gbc.writeMem(0x439d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x495e);
        EXPECT(gbc.pc(), 0x439f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 008E
        gbc.setState(0x30fa, 0xf9, 0xea40, 0x52f7, 0xbbcf, 0x969, 0x0, 0x0);
        gbc.writeMem(0x30fa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf9);
        EXPECT(gbc.pc(), 0x30fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 008F
        gbc.setState(0x2a47, 0x4d89, 0x82c0, 0xec9d, 0xb3ac, 0xee2e, 0x1, 0x1);
        gbc.writeMem(0x2a47, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4d89);
        EXPECT(gbc.pc(), 0x2a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0090
        gbc.setState(0x9936, 0xb285, 0xcce0, 0x629d, 0xa0b0, 0x3ee7, 0x0, 0x1);
        gbc.writeMem(0x9936, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb285);
        EXPECT(gbc.pc(), 0x9938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9936), 0xcb);
        EXPECT(gbc.readMem(0x9937), 0xa2);
        // CB A2 0092
        gbc.setState(0xa7d0, 0x36ed, 0xf0a0, 0x8f9e, 0x7732, 0x475c, 0x1, 0x0);
        gbc.writeMem(0xa7d0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x36ed);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d0), 0xcb);
        EXPECT(gbc.readMem(0xa7d1), 0xa2);
        // CB A2 0093
        gbc.setState(0xa321, 0xebd5, 0x5dd0, 0x966e, 0xeb4b, 0x6e91, 0x0, 0x1);
        gbc.writeMem(0xa321, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0xa323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa321), 0xcb);
        EXPECT(gbc.readMem(0xa322), 0xa2);
        // CB A2 0094
        gbc.setState(0xa487, 0x8cc9, 0xf110, 0xe8f3, 0x6e11, 0x3a80, 0x1, 0x1);
        gbc.writeMem(0xa487, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8cc9);
        EXPECT(gbc.pc(), 0xa489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa487), 0xcb);
        EXPECT(gbc.readMem(0xa488), 0xa2);
        // CB A2 0095
        gbc.setState(0x49a2, 0x5773, 0x6990, 0x151c, 0xa813, 0x1175, 0x0, 0x1);
        gbc.writeMem(0x49a2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5773);
        EXPECT(gbc.pc(), 0x49a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0096
        gbc.setState(0x2304, 0xb11a, 0x680, 0xbaeb, 0x66fa, 0xf682, 0x0, 0x1);
        gbc.writeMem(0x2304, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb11a);
        EXPECT(gbc.pc(), 0x2306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0097
        gbc.setState(0x3f55, 0x3c1f, 0xa7b0, 0x7853, 0xa2bb, 0xea25, 0x0, 0x1);
        gbc.writeMem(0x3f55, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3c1f);
        EXPECT(gbc.pc(), 0x3f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0098
        gbc.setState(0x18e7, 0x3f86, 0x9da0, 0x5d8d, 0xf9f9, 0x6fd0, 0x1, 0x0);
        gbc.writeMem(0x18e7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3f86);
        EXPECT(gbc.pc(), 0x18e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0099
        gbc.setState(0xaa16, 0x8c0e, 0x38a0, 0xb59f, 0x9bd3, 0xdffa, 0x1, 0x0);
        gbc.writeMem(0xaa16, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8c0e);
        EXPECT(gbc.pc(), 0xaa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa16), 0xcb);
        EXPECT(gbc.readMem(0xaa17), 0xa2);
        // CB A2 009A
        gbc.setState(0x1075, 0xbd3f, 0x9090, 0x8f7d, 0xf368, 0xfffb, 0x0, 0x1);
        gbc.writeMem(0x1075, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbd3f);
        EXPECT(gbc.pc(), 0x1077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 009B
        gbc.setState(0xad7e, 0x1420, 0x9010, 0x5dc2, 0xc988, 0xfe68, 0x1, 0x1);
        gbc.writeMem(0xad7e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1420);
        EXPECT(gbc.pc(), 0xad80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7e), 0xcb);
        EXPECT(gbc.readMem(0xad7f), 0xa2);
        // CB A2 009C
        gbc.setState(0x74d4, 0x446b, 0xa8d0, 0xa8f3, 0xbd0e, 0xcdd1, 0x1, 0x0);
        gbc.writeMem(0x74d4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x446b);
        EXPECT(gbc.pc(), 0x74d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 009D
        gbc.setState(0x78ca, 0xe340, 0x7f30, 0x7bf3, 0xefc7, 0xed75, 0x0, 0x1);
        gbc.writeMem(0x78ca, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe340);
        EXPECT(gbc.pc(), 0x78cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 009E
        gbc.setState(0x696f, 0x5e50, 0xe1d0, 0x8e04, 0xd8f2, 0x68b5, 0x1, 0x1);
        gbc.writeMem(0x696f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5e50);
        EXPECT(gbc.pc(), 0x6971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 009F
        gbc.setState(0x17f, 0x99a1, 0x8750, 0x7967, 0x31d3, 0xec3, 0x1, 0x0);
        gbc.writeMem(0x17f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x99a1);
        EXPECT(gbc.pc(), 0x181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00A0
        gbc.setState(0x967c, 0xebd5, 0xfde0, 0x677, 0x71bd, 0xc3fa, 0x0, 0x0);
        gbc.writeMem(0x967c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0x967e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967c), 0xcb);
        EXPECT(gbc.readMem(0x967d), 0xa2);
        // CB A2 00A1
        gbc.setState(0x8edf, 0xa6c7, 0x4630, 0xacc6, 0x20cc, 0xb48a, 0x1, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0x8ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edf), 0xcb);
        EXPECT(gbc.readMem(0x8ee0), 0xa2);
        // CB A2 00A2
        gbc.setState(0xa5c3, 0xc409, 0x27c0, 0x2829, 0xdf13, 0x2f5c, 0x0, 0x1);
        gbc.writeMem(0xa5c3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc409);
        EXPECT(gbc.pc(), 0xa5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c3), 0xcb);
        EXPECT(gbc.readMem(0xa5c4), 0xa2);
        // CB A2 00A3
        gbc.setState(0xacfb, 0xb4d1, 0xc400, 0xc92c, 0xda42, 0xac18, 0x0, 0x0);
        gbc.writeMem(0xacfb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb4d1);
        EXPECT(gbc.pc(), 0xacfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacfb), 0xcb);
        EXPECT(gbc.readMem(0xacfc), 0xa2);
        // CB A2 00A4
        gbc.setState(0x94b1, 0x3124, 0x6650, 0x753f, 0x58f7, 0x13df, 0x1, 0x0);
        gbc.writeMem(0x94b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3124);
        EXPECT(gbc.pc(), 0x94b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b1), 0xcb);
        EXPECT(gbc.readMem(0x94b2), 0xa2);
        // CB A2 00A5
        gbc.setState(0xb190, 0x26b0, 0x57b0, 0xf0a1, 0x7e7e, 0xe778, 0x0, 0x1);
        gbc.writeMem(0xb190, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x26b0);
        EXPECT(gbc.pc(), 0xb192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb190), 0xcb);
        EXPECT(gbc.readMem(0xb191), 0xa2);
        // CB A2 00A7
        gbc.setState(0x5451, 0x70f9, 0xd1c0, 0x9829, 0x7361, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0x5451, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x70f9);
        EXPECT(gbc.pc(), 0x5453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00A8
        gbc.setState(0xa102, 0x5496, 0x1990, 0xce96, 0x1bfa, 0x1730, 0x1, 0x0);
        gbc.writeMem(0xa102, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5496);
        EXPECT(gbc.pc(), 0xa104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa102), 0xcb);
        EXPECT(gbc.readMem(0xa103), 0xa2);
        // CB A2 00A9
        gbc.setState(0xdd86, 0x1358, 0x580, 0x1edc, 0x4583, 0x7426, 0x1, 0x1);
        gbc.writeMem(0xdd86, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0xdd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd86), 0xcb);
        EXPECT(gbc.readMem(0xdd87), 0xa2);
        // CB A2 00AB
        gbc.setState(0x676c, 0x28f9, 0xa170, 0x1edf, 0xc85a, 0xf819, 0x1, 0x0);
        gbc.writeMem(0x676c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x28f9);
        EXPECT(gbc.pc(), 0x676e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00AC
        gbc.setState(0xca58, 0x6d0d, 0xa350, 0x66a2, 0xe23, 0xbcc0, 0x1, 0x0);
        gbc.writeMem(0xca58, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6d0d);
        EXPECT(gbc.pc(), 0xca5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca58), 0xcb);
        EXPECT(gbc.readMem(0xca59), 0xa2);
        // CB A2 00AD
        gbc.setState(0x2119, 0xcb27, 0xe260, 0x8f7e, 0xa02, 0xb893, 0x0, 0x1);
        gbc.writeMem(0x2119, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcb27);
        EXPECT(gbc.pc(), 0x211b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00AF
        gbc.setState(0x89ec, 0x7bfb, 0x73e0, 0xdd55, 0x1c55, 0x8dbb, 0x0, 0x0);
        gbc.writeMem(0x89ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7bfb);
        EXPECT(gbc.pc(), 0x89ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ec), 0xcb);
        EXPECT(gbc.readMem(0x89ed), 0xa2);
        // CB A2 00B0
        gbc.setState(0x9106, 0xde21, 0x3890, 0x25b1, 0xac7b, 0x764c, 0x0, 0x0);
        gbc.writeMem(0x9106, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xde21);
        EXPECT(gbc.pc(), 0x9108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9106), 0xcb);
        EXPECT(gbc.readMem(0x9107), 0xa2);
        // CB A2 00B1
        gbc.setState(0xa83a, 0x1131, 0x800, 0xc829, 0x9fb6, 0x16f4, 0x0, 0x1);
        gbc.writeMem(0xa83a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1131);
        EXPECT(gbc.pc(), 0xa83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83a), 0xcb);
        EXPECT(gbc.readMem(0xa83b), 0xa2);
        // CB A2 00B2
        gbc.setState(0x90b6, 0x91a6, 0x7ad0, 0x36, 0x2f9c, 0x5738, 0x0, 0x1);
        gbc.writeMem(0x90b6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x91a6);
        EXPECT(gbc.pc(), 0x90b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b6), 0xcb);
        EXPECT(gbc.readMem(0x90b7), 0xa2);
        // CB A2 00B3
        gbc.setState(0xb3d, 0xaa3, 0xf730, 0xe8d5, 0xd5b4, 0xf955, 0x1, 0x1);
        gbc.writeMem(0xb3d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0xb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00B5
        gbc.setState(0x7fa, 0xca2b, 0x6db0, 0xad75, 0xc6d0, 0x72f3, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0x7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00B6
        gbc.setState(0x7e53, 0xc99d, 0x26c0, 0xa8b1, 0x6788, 0x9a6b, 0x0, 0x0);
        gbc.writeMem(0x7e53, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc99d);
        EXPECT(gbc.pc(), 0x7e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00B7
        gbc.setState(0xe4f5, 0xc9cf, 0xa380, 0xa7b, 0x3476, 0x1915, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc9cf);
        EXPECT(gbc.pc(), 0xe4f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f5), 0xcb);
        EXPECT(gbc.readMem(0xe4f6), 0xa2);
        // CB A2 00B8
        gbc.setState(0x9f3e, 0x3f12, 0x6a60, 0x7d36, 0xb4aa, 0x9840, 0x0, 0x0);
        gbc.writeMem(0x9f3e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3f12);
        EXPECT(gbc.pc(), 0x9f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3e), 0xcb);
        EXPECT(gbc.readMem(0x9f3f), 0xa2);
        // CB A2 00B9
        gbc.setState(0x3526, 0xd409, 0xfb50, 0xbb8, 0x73f0, 0x1937, 0x1, 0x1);
        gbc.writeMem(0x3526, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd409);
        EXPECT(gbc.pc(), 0x3528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00BA
        gbc.setState(0xe499, 0xfedd, 0xa070, 0x6c2e, 0x868e, 0xea1f, 0x0, 0x0);
        gbc.writeMem(0xe499, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfedd);
        EXPECT(gbc.pc(), 0xe49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe499), 0xcb);
        EXPECT(gbc.readMem(0xe49a), 0xa2);
        // CB A2 00BB
        gbc.setState(0x8f0a, 0xc135, 0xf50, 0x1f7f, 0x76f9, 0x54f0, 0x1, 0x0);
        gbc.writeMem(0x8f0a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc135);
        EXPECT(gbc.pc(), 0x8f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0a), 0xcb);
        EXPECT(gbc.readMem(0x8f0b), 0xa2);
        // CB A2 00BC
        gbc.setState(0xc5e7, 0xe5d6, 0xe580, 0x784f, 0xa8fe, 0xe5ca, 0x0, 0x1);
        gbc.writeMem(0xc5e7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0xc5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e7), 0xcb);
        EXPECT(gbc.readMem(0xc5e8), 0xa2);
        // CB A2 00BD
        gbc.setState(0xc500, 0x8a11, 0x330, 0xa361, 0x4305, 0x2b80, 0x1, 0x0);
        gbc.writeMem(0xc500, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8a11);
        EXPECT(gbc.pc(), 0xc502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc500), 0xcb);
        EXPECT(gbc.readMem(0xc501), 0xa2);
        // CB A2 00BE
        gbc.setState(0x8cdb, 0x89e2, 0xcd20, 0xd2e7, 0x1ebb, 0x5988, 0x0, 0x0);
        gbc.writeMem(0x8cdb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x89e2);
        EXPECT(gbc.pc(), 0x8cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdb), 0xcb);
        EXPECT(gbc.readMem(0x8cdc), 0xa2);
        // CB A2 00BF
        gbc.setState(0x5376, 0xfd88, 0xcbd0, 0x64ad, 0xc3b7, 0x1f5c, 0x1, 0x1);
        gbc.writeMem(0x5376, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0x5378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00C0
        gbc.setState(0xa6bc, 0x4b42, 0x9630, 0x143, 0x7302, 0xa6c, 0x1, 0x0);
        gbc.writeMem(0xa6bc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4b42);
        EXPECT(gbc.pc(), 0xa6be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6bc), 0xcb);
        EXPECT(gbc.readMem(0xa6bd), 0xa2);
        // CB A2 00C3
        gbc.setState(0xc597, 0x97fa, 0x92f0, 0x3b40, 0x4211, 0x4674, 0x1, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x97fa);
        EXPECT(gbc.pc(), 0xc599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc597), 0xcb);
        EXPECT(gbc.readMem(0xc598), 0xa2);
        // CB A2 00C4
        gbc.setState(0x87fc, 0x3407, 0xfb90, 0xf2e6, 0x8032, 0xef65, 0x1, 0x1);
        gbc.writeMem(0x87fc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3407);
        EXPECT(gbc.pc(), 0x87fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fc), 0xcb);
        EXPECT(gbc.readMem(0x87fd), 0xa2);
        // CB A2 00C5
        gbc.setState(0xacbe, 0xe8eb, 0x2600, 0x74a8, 0x7a08, 0xe2a5, 0x0, 0x0);
        gbc.writeMem(0xacbe, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe8eb);
        EXPECT(gbc.pc(), 0xacc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbe), 0xcb);
        EXPECT(gbc.readMem(0xacbf), 0xa2);
        // CB A2 00C6
        gbc.setState(0x2b0f, 0xd617, 0x97f0, 0xeb5b, 0xcff5, 0xe730, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd617);
        EXPECT(gbc.pc(), 0x2b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00C7
        gbc.setState(0x76fc, 0xc578, 0x710, 0x1202, 0xf2eb, 0xa202, 0x0, 0x1);
        gbc.writeMem(0x76fc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0x76fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00C8
        gbc.setState(0xcd86, 0x8678, 0xba30, 0x7dc8, 0x9843, 0x8ca2, 0x1, 0x1);
        gbc.writeMem(0xcd86, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0xcd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd86), 0xcb);
        EXPECT(gbc.readMem(0xcd87), 0xa2);
        // CB A2 00C9
        gbc.setState(0xa288, 0x3c90, 0xfe0, 0x29d0, 0xc5ea, 0x6a4, 0x1, 0x0);
        gbc.writeMem(0xa288, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3c90);
        EXPECT(gbc.pc(), 0xa28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa288), 0xcb);
        EXPECT(gbc.readMem(0xa289), 0xa2);
        // CB A2 00CA
        gbc.setState(0xb680, 0xabd3, 0x23b0, 0xc87a, 0xda8e, 0x1086, 0x1, 0x0);
        gbc.writeMem(0xb680, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0xb682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb680), 0xcb);
        EXPECT(gbc.readMem(0xb681), 0xa2);
        // CB A2 00CC
        gbc.setState(0xb840, 0x6881, 0xdaa0, 0xfc23, 0xe28c, 0x763, 0x1, 0x1);
        gbc.writeMem(0xb840, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6881);
        EXPECT(gbc.pc(), 0xb842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb840), 0xcb);
        EXPECT(gbc.readMem(0xb841), 0xa2);
        // CB A2 00CD
        gbc.setState(0x8635, 0x5028, 0xb150, 0x61b3, 0x96a8, 0x9578, 0x1, 0x1);
        gbc.writeMem(0x8635, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5028);
        EXPECT(gbc.pc(), 0x8637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8635), 0xcb);
        EXPECT(gbc.readMem(0x8636), 0xa2);
        // CB A2 00CE
        gbc.setState(0x73f0, 0x95c6, 0x8c20, 0x93bc, 0x774a, 0x9e8c, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0x73f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00CF
        gbc.setState(0x26b7, 0x3d4b, 0xcd90, 0xe73b, 0x8410, 0x2ac3, 0x1, 0x0);
        gbc.writeMem(0x26b7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3d4b);
        EXPECT(gbc.pc(), 0x26b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00D0
        gbc.setState(0xe7a9, 0x18b9, 0x2f20, 0xfcd6, 0xe9ce, 0x20fa, 0x0, 0x1);
        gbc.writeMem(0xe7a9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x18b9);
        EXPECT(gbc.pc(), 0xe7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a9), 0xcb);
        EXPECT(gbc.readMem(0xe7aa), 0xa2);
        // CB A2 00D1
        gbc.setState(0x6a49, 0x85f9, 0x6f10, 0x9511, 0xc3b7, 0xfc4c, 0x0, 0x0);
        gbc.writeMem(0x6a49, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x85f9);
        EXPECT(gbc.pc(), 0x6a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00D2
        gbc.setState(0x2cff, 0xeb6c, 0xaef0, 0x24db, 0xf1d2, 0xc08e, 0x1, 0x1);
        gbc.writeMem(0x2cff, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeb6c);
        EXPECT(gbc.pc(), 0x2d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00D3
        gbc.setState(0xe339, 0x47ef, 0x6470, 0x64d0, 0x9f44, 0x7ab6, 0x0, 0x1);
        gbc.writeMem(0xe339, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x47ef);
        EXPECT(gbc.pc(), 0xe33b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe339), 0xcb);
        EXPECT(gbc.readMem(0xe33a), 0xa2);
        // CB A2 00D4
        gbc.setState(0xc917, 0x397c, 0x5970, 0xb377, 0xd224, 0x2cdc, 0x1, 0x1);
        gbc.writeMem(0xc917, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x397c);
        EXPECT(gbc.pc(), 0xc919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc917), 0xcb);
        EXPECT(gbc.readMem(0xc918), 0xa2);
        // CB A2 00D5
        gbc.setState(0xd171, 0xd565, 0x9290, 0xc977, 0x5a6a, 0x7b75, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd565);
        EXPECT(gbc.pc(), 0xd173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd171), 0xcb);
        EXPECT(gbc.readMem(0xd172), 0xa2);
        // CB A2 00D6
        gbc.setState(0x79e9, 0x38a3, 0xbbc0, 0xf8fd, 0x6cf5, 0xbe68, 0x0, 0x0);
        gbc.writeMem(0x79e9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00D7
        gbc.setState(0xbdeb, 0x1c4c, 0x5440, 0xa677, 0x50d3, 0xe84e, 0x0, 0x0);
        gbc.writeMem(0xbdeb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1c4c);
        EXPECT(gbc.pc(), 0xbded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdeb), 0xcb);
        EXPECT(gbc.readMem(0xbdec), 0xa2);
        // CB A2 00D9
        gbc.setState(0xcc45, 0xec36, 0xca40, 0xc6f8, 0xfc37, 0x37da, 0x1, 0x1);
        gbc.writeMem(0xcc45, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xec36);
        EXPECT(gbc.pc(), 0xcc47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc45), 0xcb);
        EXPECT(gbc.readMem(0xcc46), 0xa2);
        // CB A2 00DA
        gbc.setState(0x1fae, 0x12c2, 0x29e0, 0xeb80, 0x8923, 0x23ff, 0x1, 0x1);
        gbc.writeMem(0x1fae, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x12c2);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00DB
        gbc.setState(0x8545, 0x1370, 0x2f30, 0xe86f, 0xb6a2, 0xe123, 0x0, 0x1);
        gbc.writeMem(0x8545, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1370);
        EXPECT(gbc.pc(), 0x8547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8545), 0xcb);
        EXPECT(gbc.readMem(0x8546), 0xa2);
        // CB A2 00DC
        gbc.setState(0xbde6, 0x4b27, 0x4e60, 0x237b, 0xe25a, 0x10c4, 0x0, 0x0);
        gbc.writeMem(0xbde6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4b27);
        EXPECT(gbc.pc(), 0xbde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde6), 0xcb);
        EXPECT(gbc.readMem(0xbde7), 0xa2);
        // CB A2 00DD
        gbc.setState(0x9887, 0xd11b, 0xfdc0, 0xd495, 0x89c, 0xe367, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd11b);
        EXPECT(gbc.pc(), 0x9889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9887), 0xcb);
        EXPECT(gbc.readMem(0x9888), 0xa2);
        // CB A2 00DE
        gbc.setState(0x6033, 0x4189, 0xda0, 0x6d34, 0x667d, 0x33d, 0x0, 0x1);
        gbc.writeMem(0x6033, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4189);
        EXPECT(gbc.pc(), 0x6035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00DF
        gbc.setState(0x9687, 0xc484, 0x2d20, 0x6733, 0x4452, 0xbd27, 0x0, 0x0);
        gbc.writeMem(0x9687, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc484);
        EXPECT(gbc.pc(), 0x9689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9687), 0xcb);
        EXPECT(gbc.readMem(0x9688), 0xa2);
        // CB A2 00E0
        gbc.setState(0x4db5, 0x8973, 0xb270, 0x2f4a, 0x2084, 0x8666, 0x1, 0x0);
        gbc.writeMem(0x4db5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8973);
        EXPECT(gbc.pc(), 0x4db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00E1
        gbc.setState(0xc381, 0x8983, 0xf5e0, 0x98be, 0x436c, 0x68dc, 0x1, 0x1);
        gbc.writeMem(0xc381, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8983);
        EXPECT(gbc.pc(), 0xc383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc381), 0xcb);
        EXPECT(gbc.readMem(0xc382), 0xa2);
        // CB A2 00E2
        gbc.setState(0x6670, 0xedb3, 0xb6e0, 0xb096, 0x2bf9, 0xe86f, 0x0, 0x1);
        gbc.writeMem(0x6670, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xedb3);
        EXPECT(gbc.pc(), 0x6672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00E3
        gbc.setState(0xb54a, 0xeb9e, 0x93f0, 0x3c40, 0x1072, 0x365a, 0x1, 0x1);
        gbc.writeMem(0xb54a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xeb9e);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0xa2);
        // CB A2 00E4
        gbc.setState(0x87d1, 0xed29, 0x4390, 0x3de2, 0xf6d3, 0x5f0a, 0x0, 0x0);
        gbc.writeMem(0x87d1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xed29);
        EXPECT(gbc.pc(), 0x87d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d1), 0xcb);
        EXPECT(gbc.readMem(0x87d2), 0xa2);
        // CB A2 00E5
        gbc.setState(0x90b, 0xb4b7, 0x5600, 0x5222, 0xe987, 0x92be, 0x0, 0x0);
        gbc.writeMem(0x90b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0x90d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00E6
        gbc.setState(0x6e9d, 0xca01, 0xb5b0, 0x9e88, 0xc756, 0x2f45, 0x1, 0x0);
        gbc.writeMem(0x6e9d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xca01);
        EXPECT(gbc.pc(), 0x6e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00E7
        gbc.setState(0xe8c6, 0x635e, 0x2ba0, 0xdac8, 0x65c0, 0xb72c, 0x1, 0x0);
        gbc.writeMem(0xe8c6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x635e);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c6), 0xcb);
        EXPECT(gbc.readMem(0xe8c7), 0xa2);
        // CB A2 00E8
        gbc.setState(0x39ec, 0xa58e, 0x15b0, 0x9854, 0x8e45, 0x585d, 0x0, 0x0);
        gbc.writeMem(0x39ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa58e);
        EXPECT(gbc.pc(), 0x39ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00EA
        gbc.setState(0x79f5, 0xf316, 0xd20, 0x1c6, 0xaf4a, 0xbf0b, 0x0, 0x0);
        gbc.writeMem(0x79f5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0x79f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00EB
        gbc.setState(0x871e, 0x32c1, 0x980, 0xb21, 0x4ab2, 0xf8f7, 0x0, 0x1);
        gbc.writeMem(0x871e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x8720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871e), 0xcb);
        EXPECT(gbc.readMem(0x871f), 0xa2);
        // CB A2 00EC
        gbc.setState(0x12a, 0x5680, 0xeec0, 0x4db0, 0x8398, 0x2cdf, 0x1, 0x0);
        gbc.writeMem(0x12a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5680);
        EXPECT(gbc.pc(), 0x12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00ED
        gbc.setState(0x2164, 0x678a, 0x7c40, 0x21c5, 0x37ce, 0xb07e, 0x1, 0x1);
        gbc.writeMem(0x2164, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00EE
        gbc.setState(0x956b, 0x2cd6, 0xe3b0, 0xa415, 0xd539, 0x53a1, 0x0, 0x0);
        gbc.writeMem(0x956b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2cd6);
        EXPECT(gbc.pc(), 0x956d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956b), 0xcb);
        EXPECT(gbc.readMem(0x956c), 0xa2);
        // CB A2 00EF
        gbc.setState(0x5791, 0xef8f, 0x3010, 0x3117, 0xfc93, 0xdc3d, 0x0, 0x1);
        gbc.writeMem(0x5791, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xef8f);
        EXPECT(gbc.pc(), 0x5793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00F0
        gbc.setState(0x36a0, 0x6960, 0xe0b0, 0x29fa, 0xf7ab, 0xb9c9, 0x0, 0x0);
        gbc.writeMem(0x36a0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6960);
        EXPECT(gbc.pc(), 0x36a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00F1
        gbc.setState(0x429d, 0x3271, 0x9220, 0x413b, 0xeed7, 0x5e80, 0x1, 0x0);
        gbc.writeMem(0x429d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3271);
        EXPECT(gbc.pc(), 0x429f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00F2
        gbc.setState(0x7e3c, 0xf7f4, 0xa1d0, 0x8619, 0x7f88, 0xfae2, 0x0, 0x0);
        gbc.writeMem(0x7e3c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0x7e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00F3
        gbc.setState(0x5221, 0x6493, 0xf760, 0xf41c, 0xc1cc, 0x3041, 0x0, 0x1);
        gbc.writeMem(0x5221, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6493);
        EXPECT(gbc.pc(), 0x5223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00F4
        gbc.setState(0x8979, 0x6d94, 0x8da0, 0xea68, 0x2b16, 0x94d6, 0x1, 0x1);
        gbc.writeMem(0x8979, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6d94);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8979), 0xcb);
        EXPECT(gbc.readMem(0x897a), 0xa2);
        // CB A2 00F5
        gbc.setState(0x877b, 0x45f8, 0x4250, 0xc12e, 0xf875, 0x665e, 0x1, 0x0);
        gbc.writeMem(0x877b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x45f8);
        EXPECT(gbc.pc(), 0x877d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877b), 0xcb);
        EXPECT(gbc.readMem(0x877c), 0xa2);
        // CB A2 00F6
        gbc.setState(0x6ece, 0x44c1, 0x63d0, 0x1125, 0x6d7b, 0x218e, 0x0, 0x1);
        gbc.writeMem(0x6ece, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x44c1);
        EXPECT(gbc.pc(), 0x6ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00F7
        gbc.setState(0x507f, 0x5aa0, 0x8bd0, 0x1f3f, 0xf74b, 0xd5d0, 0x1, 0x1);
        gbc.writeMem(0x507f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5aa0);
        EXPECT(gbc.pc(), 0x5081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00F8
        gbc.setState(0xab7a, 0x27a7, 0x2050, 0x96b1, 0xaac5, 0xdfd5, 0x1, 0x0);
        gbc.writeMem(0xab7a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x27a7);
        EXPECT(gbc.pc(), 0xab7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7a), 0xcb);
        EXPECT(gbc.readMem(0xab7b), 0xa2);
        // CB A2 00F9
        gbc.setState(0x6b0a, 0x47ef, 0x47d0, 0x41d5, 0x2232, 0x21e1, 0x0, 0x1);
        gbc.writeMem(0x6b0a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x47ef);
        EXPECT(gbc.pc(), 0x6b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00FA
        gbc.setState(0x49cc, 0x21e, 0x1ab0, 0x1341, 0x37e9, 0xfc26, 0x0, 0x1);
        gbc.writeMem(0x49cc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0x49ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00FB
        gbc.setState(0xf0a, 0x4de4, 0x9070, 0x7eb, 0x6c5d, 0x2ad6, 0x1, 0x1);
        gbc.writeMem(0xf0a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4de4);
        EXPECT(gbc.pc(), 0xf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 00FC
        gbc.setState(0xd603, 0xe098, 0x55a0, 0xcd1d, 0xea8c, 0xbd13, 0x1, 0x1);
        gbc.writeMem(0xd603, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd603), 0xcb);
        EXPECT(gbc.readMem(0xd604), 0xa2);
        // CB A2 00FD
        gbc.setState(0xe878, 0xa278, 0x4290, 0x44ec, 0xadf5, 0x355, 0x1, 0x0);
        gbc.writeMem(0xe878, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa278);
        EXPECT(gbc.pc(), 0xe87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe878), 0xcb);
        EXPECT(gbc.readMem(0xe879), 0xa2);
        // CB A2 00FE
        gbc.setState(0x63e8, 0x2e15, 0xe800, 0xdda2, 0xbae, 0x3d7a, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2e15);
        EXPECT(gbc.pc(), 0x63ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 00FF
        gbc.setState(0x152e, 0x738d, 0x48f0, 0x3c00, 0xea0, 0xc12, 0x1, 0x0);
        gbc.writeMem(0x152e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x738d);
        EXPECT(gbc.pc(), 0x1530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0100
        gbc.setState(0xbecf, 0xfe3f, 0x1c80, 0xa5c5, 0x2b6d, 0xd87c, 0x1, 0x1);
        gbc.writeMem(0xbecf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0xbed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbecf), 0xcb);
        EXPECT(gbc.readMem(0xbed0), 0xa2);
        // CB A2 0101
        gbc.setState(0xb77e, 0x51ff, 0xdf20, 0xbbb8, 0xf8a7, 0x28f7, 0x1, 0x1);
        gbc.writeMem(0xb77e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x51ff);
        EXPECT(gbc.pc(), 0xb780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77e), 0xcb);
        EXPECT(gbc.readMem(0xb77f), 0xa2);
        // CB A2 0102
        gbc.setState(0xd238, 0xe523, 0x4fb0, 0x2719, 0x7f2f, 0xb88f, 0x0, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe523);
        EXPECT(gbc.pc(), 0xd23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd238), 0xcb);
        EXPECT(gbc.readMem(0xd239), 0xa2);
        // CB A2 0104
        gbc.setState(0x87d5, 0xb070, 0xd20, 0xc6d7, 0x2417, 0x443b, 0x0, 0x1);
        gbc.writeMem(0x87d5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb070);
        EXPECT(gbc.pc(), 0x87d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d5), 0xcb);
        EXPECT(gbc.readMem(0x87d6), 0xa2);
        // CB A2 0105
        gbc.setState(0x7f8a, 0x6433, 0x46b0, 0x101, 0xb76f, 0x2c80, 0x1, 0x1);
        gbc.writeMem(0x7f8a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6433);
        EXPECT(gbc.pc(), 0x7f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0106
        gbc.setState(0x4327, 0x9ff0, 0x2630, 0xbf31, 0xa67d, 0x3dd4, 0x1, 0x0);
        gbc.writeMem(0x4327, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9ff0);
        EXPECT(gbc.pc(), 0x4329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0107
        gbc.setState(0x949f, 0xfcd4, 0x50f0, 0x9992, 0x6975, 0x95b6, 0x0, 0x1);
        gbc.writeMem(0x949f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfcd4);
        EXPECT(gbc.pc(), 0x94a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x949f), 0xcb);
        EXPECT(gbc.readMem(0x94a0), 0xa2);
        // CB A2 0108
        gbc.setState(0x7311, 0x14dc, 0x5030, 0x6c82, 0xcf7d, 0x6c06, 0x0, 0x1);
        gbc.writeMem(0x7311, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0x7313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 010A
        gbc.setState(0x1d71, 0x6648, 0x2130, 0x1c8e, 0x19b5, 0x9e2f, 0x0, 0x0);
        gbc.writeMem(0x1d71, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6648);
        EXPECT(gbc.pc(), 0x1d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 010B
        gbc.setState(0xe7ac, 0x83b8, 0x5d10, 0xee23, 0xda0, 0x7a8e, 0x0, 0x0);
        gbc.writeMem(0xe7ac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x83b8);
        EXPECT(gbc.pc(), 0xe7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ac), 0xcb);
        EXPECT(gbc.readMem(0xe7ad), 0xa2);
        // CB A2 010C
        gbc.setState(0xe105, 0x6808, 0x9f60, 0x1d1, 0xc6ac, 0x50c2, 0x0, 0x0);
        gbc.writeMem(0xe105, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6808);
        EXPECT(gbc.pc(), 0xe107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe105), 0xcb);
        EXPECT(gbc.readMem(0xe106), 0xa2);
        // CB A2 010D
        gbc.setState(0x277f, 0x762e, 0xc9f0, 0x9d1a, 0xcbde, 0x5b22, 0x1, 0x1);
        gbc.writeMem(0x277f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x762e);
        EXPECT(gbc.pc(), 0x2781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 010E
        gbc.setState(0x8ca2, 0xa507, 0x3e00, 0xf7fd, 0x35ca, 0xf73, 0x0, 0x1);
        gbc.writeMem(0x8ca2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa507);
        EXPECT(gbc.pc(), 0x8ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca2), 0xcb);
        EXPECT(gbc.readMem(0x8ca3), 0xa2);
        // CB A2 010F
        gbc.setState(0x2b6f, 0x1aa, 0x6360, 0x1572, 0xcf6e, 0x5adb, 0x1, 0x0);
        gbc.writeMem(0x2b6f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1aa);
        EXPECT(gbc.pc(), 0x2b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0110
        gbc.setState(0x1dd3, 0x8267, 0xfff0, 0xa070, 0x8ff5, 0x31e1, 0x1, 0x0);
        gbc.writeMem(0x1dd3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8267);
        EXPECT(gbc.pc(), 0x1dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0111
        gbc.setState(0xbdef, 0x42ea, 0x38f0, 0xc402, 0x7458, 0x4dc5, 0x1, 0x0);
        gbc.writeMem(0xbdef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x42ea);
        EXPECT(gbc.pc(), 0xbdf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdef), 0xcb);
        EXPECT(gbc.readMem(0xbdf0), 0xa2);
        // CB A2 0112
        gbc.setState(0x81bc, 0xc86, 0x930, 0x1dcf, 0x2f94, 0x7463, 0x1, 0x0);
        gbc.writeMem(0x81bc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc86);
        EXPECT(gbc.pc(), 0x81be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bc), 0xcb);
        EXPECT(gbc.readMem(0x81bd), 0xa2);
        // CB A2 0113
        gbc.setState(0xb516, 0x2421, 0x2a30, 0xde3f, 0x3958, 0x7de7, 0x0, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2421);
        EXPECT(gbc.pc(), 0xb518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb516), 0xcb);
        EXPECT(gbc.readMem(0xb517), 0xa2);
        // CB A2 0114
        gbc.setState(0x6b15, 0xd965, 0xee50, 0x14f2, 0x7518, 0x5fa5, 0x0, 0x0);
        gbc.writeMem(0x6b15, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd965);
        EXPECT(gbc.pc(), 0x6b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0115
        gbc.setState(0xa17c, 0x363c, 0xf360, 0x5e15, 0x4c94, 0x19a3, 0x1, 0x0);
        gbc.writeMem(0xa17c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x363c);
        EXPECT(gbc.pc(), 0xa17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17c), 0xcb);
        EXPECT(gbc.readMem(0xa17d), 0xa2);
        // CB A2 0116
        gbc.setState(0x18d9, 0xdf6d, 0xd530, 0x43bb, 0x3ea2, 0xedab, 0x0, 0x1);
        gbc.writeMem(0x18d9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdf6d);
        EXPECT(gbc.pc(), 0x18db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0119
        gbc.setState(0xe7b9, 0x31c4, 0x5160, 0xa1e4, 0xd1ab, 0xb90e, 0x0, 0x0);
        gbc.writeMem(0xe7b9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x31c4);
        EXPECT(gbc.pc(), 0xe7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b9), 0xcb);
        EXPECT(gbc.readMem(0xe7ba), 0xa2);
        // CB A2 011A
        gbc.setState(0x638f, 0x214e, 0x9060, 0x7288, 0x415c, 0xafa4, 0x0, 0x0);
        gbc.writeMem(0x638f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x214e);
        EXPECT(gbc.pc(), 0x6391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 011B
        gbc.setState(0x2d99, 0xda68, 0x4fc0, 0xfe72, 0x5151, 0x7711, 0x1, 0x0);
        gbc.writeMem(0x2d99, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xda68);
        EXPECT(gbc.pc(), 0x2d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 011C
        gbc.setState(0x711e, 0x74e1, 0xba30, 0x8b3c, 0x2c4d, 0xbad5, 0x1, 0x0);
        gbc.writeMem(0x711e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x74e1);
        EXPECT(gbc.pc(), 0x7120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 011D
        gbc.setState(0x9ef3, 0xd281, 0xd9e0, 0x11be, 0xc63c, 0x8d76, 0x0, 0x1);
        gbc.writeMem(0x9ef3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0x9ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef3), 0xcb);
        EXPECT(gbc.readMem(0x9ef4), 0xa2);
        // CB A2 011E
        gbc.setState(0xdea4, 0x128b, 0x3f10, 0x1eb4, 0xaed4, 0x86c2, 0x0, 0x0);
        gbc.writeMem(0xdea4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x128b);
        EXPECT(gbc.pc(), 0xdea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea4), 0xcb);
        EXPECT(gbc.readMem(0xdea5), 0xa2);
        // CB A2 011F
        gbc.setState(0x6935, 0xa965, 0x43a0, 0xd7ff, 0xe47a, 0x7cee, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa965);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0120
        gbc.setState(0xced5, 0xaa14, 0x8c00, 0x5545, 0x702e, 0xec97, 0x1, 0x1);
        gbc.writeMem(0xced5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0xced7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced5), 0xcb);
        EXPECT(gbc.readMem(0xced6), 0xa2);
        // CB A2 0121
        gbc.setState(0x5b69, 0xff1d, 0x9be0, 0xab31, 0xa2ca, 0x7d5, 0x1, 0x1);
        gbc.writeMem(0x5b69, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xff1d);
        EXPECT(gbc.pc(), 0x5b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0122
        gbc.setState(0x6d30, 0xf9d3, 0xe620, 0x322, 0x114a, 0x9bc4, 0x1, 0x1);
        gbc.writeMem(0x6d30, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf9d3);
        EXPECT(gbc.pc(), 0x6d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0124
        gbc.setState(0x94db, 0xa6ff, 0x8f60, 0x8ec9, 0x83d0, 0x50d7, 0x1, 0x0);
        gbc.writeMem(0x94db, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa6ff);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94db), 0xcb);
        EXPECT(gbc.readMem(0x94dc), 0xa2);
        // CB A2 0125
        gbc.setState(0xd3e4, 0x786d, 0x3820, 0x4e29, 0x5a30, 0x416d, 0x0, 0x1);
        gbc.writeMem(0xd3e4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x786d);
        EXPECT(gbc.pc(), 0xd3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e4), 0xcb);
        EXPECT(gbc.readMem(0xd3e5), 0xa2);
        // CB A2 0126
        gbc.setState(0x139, 0xba98, 0xd080, 0x1eaa, 0x7496, 0xdace, 0x1, 0x1);
        gbc.writeMem(0x139, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xba98);
        EXPECT(gbc.pc(), 0x13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0127
        gbc.setState(0xea3f, 0x8c3e, 0x30e0, 0xfd1b, 0xea4d, 0x3e8, 0x0, 0x0);
        gbc.writeMem(0xea3f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0xea41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3f), 0xcb);
        EXPECT(gbc.readMem(0xea40), 0xa2);
        // CB A2 0128
        gbc.setState(0xa461, 0x4210, 0xbaa0, 0x29be, 0x6e75, 0x4b04, 0x0, 0x0);
        gbc.writeMem(0xa461, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4210);
        EXPECT(gbc.pc(), 0xa463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa461), 0xcb);
        EXPECT(gbc.readMem(0xa462), 0xa2);
        // CB A2 0129
        gbc.setState(0x4e98, 0xd7ae, 0xeed0, 0x9d4b, 0x7ee2, 0x929f, 0x0, 0x0);
        gbc.writeMem(0x4e98, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd7ae);
        EXPECT(gbc.pc(), 0x4e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 012A
        gbc.setState(0x4cf7, 0x31fa, 0xebd0, 0xed45, 0xde6b, 0x56e9, 0x0, 0x1);
        gbc.writeMem(0x4cf7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x31fa);
        EXPECT(gbc.pc(), 0x4cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 012B
        gbc.setState(0x7b85, 0xca5b, 0x4500, 0xcd20, 0xdcab, 0xe173, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xca5b);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 012C
        gbc.setState(0xaf87, 0xcce8, 0xce20, 0xeae7, 0xaa20, 0x8ce9, 0x1, 0x1);
        gbc.writeMem(0xaf87, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcce8);
        EXPECT(gbc.pc(), 0xaf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf87), 0xcb);
        EXPECT(gbc.readMem(0xaf88), 0xa2);
        // CB A2 012D
        gbc.setState(0x681a, 0x5fdb, 0xab80, 0xb22e, 0x11ca, 0x36a0, 0x0, 0x1);
        gbc.writeMem(0x681a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5fdb);
        EXPECT(gbc.pc(), 0x681c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 012E
        gbc.setState(0x33f, 0xf9c, 0xb8e0, 0xd9d4, 0xe505, 0x4be2, 0x0, 0x0);
        gbc.writeMem(0x33f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf9c);
        EXPECT(gbc.pc(), 0x341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 012F
        gbc.setState(0x42e5, 0x7ef1, 0x8180, 0xc12, 0x70fb, 0x9951, 0x0, 0x1);
        gbc.writeMem(0x42e5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ef1);
        EXPECT(gbc.pc(), 0x42e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0130
        gbc.setState(0xc4d, 0x17, 0x5450, 0x75cd, 0x222d, 0x7dab, 0x0, 0x0);
        gbc.writeMem(0xc4d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x17);
        EXPECT(gbc.pc(), 0xc4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0131
        gbc.setState(0x51d4, 0xc193, 0x1920, 0x58e0, 0x4569, 0xc13, 0x1, 0x1);
        gbc.writeMem(0x51d4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc193);
        EXPECT(gbc.pc(), 0x51d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0132
        gbc.setState(0x9556, 0xda9d, 0xc480, 0x2ba9, 0x583e, 0x43c8, 0x1, 0x1);
        gbc.writeMem(0x9556, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda9d);
        EXPECT(gbc.pc(), 0x9558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9556), 0xcb);
        EXPECT(gbc.readMem(0x9557), 0xa2);
        // CB A2 0133
        gbc.setState(0xd501, 0x2b91, 0xe520, 0xe97b, 0x493a, 0xa545, 0x0, 0x0);
        gbc.writeMem(0xd501, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2b91);
        EXPECT(gbc.pc(), 0xd503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd501), 0xcb);
        EXPECT(gbc.readMem(0xd502), 0xa2);
        // CB A2 0134
        gbc.setState(0x7fdb, 0x66e4, 0xbbf0, 0x88f3, 0x4f05, 0x4cfe, 0x1, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x66e4);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0135
        gbc.setState(0xd52b, 0x7a9e, 0x3ad0, 0xb993, 0xe238, 0xc0d0, 0x1, 0x0);
        gbc.writeMem(0xd52b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7a9e);
        EXPECT(gbc.pc(), 0xd52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd52b), 0xcb);
        EXPECT(gbc.readMem(0xd52c), 0xa2);
        // CB A2 0136
        gbc.setState(0x6014, 0xdff4, 0x3690, 0x509, 0xc10e, 0x91f8, 0x1, 0x1);
        gbc.writeMem(0x6014, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdff4);
        EXPECT(gbc.pc(), 0x6016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0137
        gbc.setState(0xd68b, 0x4172, 0xf790, 0xfc9e, 0x4884, 0x439b, 0x0, 0x0);
        gbc.writeMem(0xd68b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4172);
        EXPECT(gbc.pc(), 0xd68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68b), 0xcb);
        EXPECT(gbc.readMem(0xd68c), 0xa2);
        // CB A2 0138
        gbc.setState(0x56bc, 0xb8cb, 0x7890, 0x115b, 0xf4bb, 0x881f, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb8cb);
        EXPECT(gbc.pc(), 0x56be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0139
        gbc.setState(0x4f54, 0x6c9e, 0xa90, 0xb020, 0xbccc, 0x9c, 0x0, 0x0);
        gbc.writeMem(0x4f54, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6c9e);
        EXPECT(gbc.pc(), 0x4f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 013A
        gbc.setState(0x5573, 0x1d2b, 0x4000, 0x6e34, 0xfbc5, 0x8d2e, 0x0, 0x0);
        gbc.writeMem(0x5573, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1d2b);
        EXPECT(gbc.pc(), 0x5575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 013B
        gbc.setState(0x73d2, 0x92de, 0x91b0, 0x5f48, 0xb9bc, 0x658, 0x1, 0x0);
        gbc.writeMem(0x73d2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x92de);
        EXPECT(gbc.pc(), 0x73d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 013C
        gbc.setState(0xab2d, 0xf18c, 0x49f0, 0x3522, 0xdb7f, 0xc673, 0x0, 0x1);
        gbc.writeMem(0xab2d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf18c);
        EXPECT(gbc.pc(), 0xab2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2d), 0xcb);
        EXPECT(gbc.readMem(0xab2e), 0xa2);
        // CB A2 013D
        gbc.setState(0xbcf2, 0x1d05, 0x6ea0, 0xafff, 0x1680, 0x71be, 0x1, 0x1);
        gbc.writeMem(0xbcf2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1d05);
        EXPECT(gbc.pc(), 0xbcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf2), 0xcb);
        EXPECT(gbc.readMem(0xbcf3), 0xa2);
        // CB A2 013E
        gbc.setState(0xa4c8, 0x4a65, 0xa9c0, 0xb1b4, 0x84ba, 0x17b9, 0x0, 0x1);
        gbc.writeMem(0xa4c8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4a65);
        EXPECT(gbc.pc(), 0xa4ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c8), 0xcb);
        EXPECT(gbc.readMem(0xa4c9), 0xa2);
        // CB A2 013F
        gbc.setState(0x760, 0xbbfc, 0xd290, 0x36a8, 0xd6e7, 0x3ee9, 0x1, 0x1);
        gbc.writeMem(0x760, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0x762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0140
        gbc.setState(0xd86b, 0x8086, 0xa5f0, 0x9193, 0x566, 0x99c9, 0x0, 0x0);
        gbc.writeMem(0xd86b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8086);
        EXPECT(gbc.pc(), 0xd86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86b), 0xcb);
        EXPECT(gbc.readMem(0xd86c), 0xa2);
        // CB A2 0141
        gbc.setState(0x9c0c, 0xfac0, 0x3d30, 0xe28f, 0x8687, 0x6910, 0x1, 0x0);
        gbc.writeMem(0x9c0c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x9c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0c), 0xcb);
        EXPECT(gbc.readMem(0x9c0d), 0xa2);
        // CB A2 0142
        gbc.setState(0xc79a, 0x1354, 0x86e0, 0x9201, 0x692f, 0x2ffb, 0x1, 0x0);
        gbc.writeMem(0xc79a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1354);
        EXPECT(gbc.pc(), 0xc79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79a), 0xcb);
        EXPECT(gbc.readMem(0xc79b), 0xa2);
        // CB A2 0143
        gbc.setState(0x9215, 0xceda, 0xac30, 0x4fc1, 0xb4f3, 0xd506, 0x0, 0x0);
        gbc.writeMem(0x9215, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xceda);
        EXPECT(gbc.pc(), 0x9217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9215), 0xcb);
        EXPECT(gbc.readMem(0x9216), 0xa2);
        // CB A2 0144
        gbc.setState(0xac5, 0xb071, 0xa040, 0xb6b9, 0x4fe2, 0x6c81, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0xac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0145
        gbc.setState(0x2ff5, 0xed11, 0x3b70, 0x53cf, 0xf836, 0x1b11, 0x1, 0x1);
        gbc.writeMem(0x2ff5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xed11);
        EXPECT(gbc.pc(), 0x2ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0146
        gbc.setState(0x57f6, 0xf4df, 0x4a40, 0x974c, 0xf2eb, 0xb5d1, 0x0, 0x0);
        gbc.writeMem(0x57f6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf4df);
        EXPECT(gbc.pc(), 0x57f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0149
        gbc.setState(0xc827, 0x8992, 0x2170, 0xae7e, 0x1b40, 0x82eb, 0x1, 0x0);
        gbc.writeMem(0xc827, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8992);
        EXPECT(gbc.pc(), 0xc829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc827), 0xcb);
        EXPECT(gbc.readMem(0xc828), 0xa2);
        // CB A2 014A
        gbc.setState(0xea8b, 0xedeb, 0xf850, 0x126a, 0xfaab, 0x8c21, 0x0, 0x0);
        gbc.writeMem(0xea8b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xedeb);
        EXPECT(gbc.pc(), 0xea8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8b), 0xcb);
        EXPECT(gbc.readMem(0xea8c), 0xa2);
        // CB A2 014B
        gbc.setState(0x83e4, 0x8acc, 0x3bf0, 0xc80d, 0xb836, 0x9851, 0x0, 0x1);
        gbc.writeMem(0x83e4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8acc);
        EXPECT(gbc.pc(), 0x83e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e4), 0xcb);
        EXPECT(gbc.readMem(0x83e5), 0xa2);
        // CB A2 014C
        gbc.setState(0xa68d, 0xde96, 0xaef0, 0xe6db, 0xe4ed, 0x884b, 0x0, 0x0);
        gbc.writeMem(0xa68d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0xa68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68d), 0xcb);
        EXPECT(gbc.readMem(0xa68e), 0xa2);
        // CB A2 014E
        gbc.setState(0xb17d, 0x5c49, 0x2d40, 0x5304, 0x8e48, 0x4c99, 0x0, 0x0);
        gbc.writeMem(0xb17d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5c49);
        EXPECT(gbc.pc(), 0xb17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17d), 0xcb);
        EXPECT(gbc.readMem(0xb17e), 0xa2);
        // CB A2 014F
        gbc.setState(0x235, 0xda6f, 0x8ea0, 0xd871, 0x68e8, 0xb90c, 0x0, 0x0);
        gbc.writeMem(0x235, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xda6f);
        EXPECT(gbc.pc(), 0x237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0150
        gbc.setState(0x9a3d, 0x221d, 0x97e0, 0x7f7d, 0xa7ac, 0x5bad, 0x1, 0x1);
        gbc.writeMem(0x9a3d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x221d);
        EXPECT(gbc.pc(), 0x9a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3d), 0xcb);
        EXPECT(gbc.readMem(0x9a3e), 0xa2);
        // CB A2 0151
        gbc.setState(0xea3e, 0xc1b6, 0x7e80, 0x66fe, 0x10d, 0x1a10, 0x1, 0x0);
        gbc.writeMem(0xea3e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc1b6);
        EXPECT(gbc.pc(), 0xea40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3e), 0xcb);
        EXPECT(gbc.readMem(0xea3f), 0xa2);
        // CB A2 0152
        gbc.setState(0x60d8, 0xf91a, 0x9060, 0x82ba, 0xb59a, 0x2cab, 0x0, 0x1);
        gbc.writeMem(0x60d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf91a);
        EXPECT(gbc.pc(), 0x60da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0153
        gbc.setState(0xa569, 0x54ac, 0x8890, 0x28b4, 0x9a1b, 0x68d6, 0x0, 0x0);
        gbc.writeMem(0xa569, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x54ac);
        EXPECT(gbc.pc(), 0xa56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa569), 0xcb);
        EXPECT(gbc.readMem(0xa56a), 0xa2);
        // CB A2 0154
        gbc.setState(0x5dad, 0x6dcf, 0x76d0, 0x3a8f, 0xa2e7, 0xc5c, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6dcf);
        EXPECT(gbc.pc(), 0x5daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0155
        gbc.setState(0xc554, 0x1607, 0x95e0, 0xa4a0, 0x81a0, 0x1399, 0x1, 0x0);
        gbc.writeMem(0xc554, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1607);
        EXPECT(gbc.pc(), 0xc556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc554), 0xcb);
        EXPECT(gbc.readMem(0xc555), 0xa2);
        // CB A2 0156
        gbc.setState(0xa32b, 0x4b54, 0x9df0, 0x5def, 0xffd3, 0xa499, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4b54);
        EXPECT(gbc.pc(), 0xa32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32b), 0xcb);
        EXPECT(gbc.readMem(0xa32c), 0xa2);
        // CB A2 0157
        gbc.setState(0x6a95, 0x167d, 0xb980, 0xc65e, 0xda0f, 0x4ebb, 0x0, 0x0);
        gbc.writeMem(0x6a95, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x167d);
        EXPECT(gbc.pc(), 0x6a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0158
        gbc.setState(0x259e, 0x140c, 0xc6d0, 0xeff8, 0x7407, 0xb381, 0x1, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x140c);
        EXPECT(gbc.pc(), 0x25a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0159
        gbc.setState(0xbb8e, 0x8a5, 0x3810, 0x216a, 0x9a9, 0xa9d4, 0x0, 0x1);
        gbc.writeMem(0xbb8e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8a5);
        EXPECT(gbc.pc(), 0xbb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8e), 0xcb);
        EXPECT(gbc.readMem(0xbb8f), 0xa2);
        // CB A2 015A
        gbc.setState(0xc12b, 0xaa7e, 0x4ad0, 0x6b9b, 0xe194, 0x5ca4, 0x0, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaa7e);
        EXPECT(gbc.pc(), 0xc12d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc12b), 0xcb);
        EXPECT(gbc.readMem(0xc12c), 0xa2);
        // CB A2 015B
        gbc.setState(0x10b4, 0xbe3d, 0x4060, 0x299c, 0xade0, 0x3758, 0x1, 0x1);
        gbc.writeMem(0x10b4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbe3d);
        EXPECT(gbc.pc(), 0x10b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 015C
        gbc.setState(0x42ff, 0xda84, 0x6640, 0x7976, 0x784b, 0xa06a, 0x0, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xda84);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 015D
        gbc.setState(0x4438, 0x6470, 0x8ed0, 0x4a15, 0x1473, 0x3ef6, 0x0, 0x1);
        gbc.writeMem(0x4438, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6470);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 015E
        gbc.setState(0x17df, 0x99ad, 0x5710, 0xbc39, 0xae12, 0xe7fc, 0x1, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x99ad);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 015F
        gbc.setState(0x259a, 0x7661, 0x3530, 0x5102, 0xacad, 0xd7d5, 0x0, 0x1);
        gbc.writeMem(0x259a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7661);
        EXPECT(gbc.pc(), 0x259c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0160
        gbc.setState(0x336b, 0x8657, 0xe000, 0x6f79, 0x688d, 0x8c8e, 0x0, 0x0);
        gbc.writeMem(0x336b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8657);
        EXPECT(gbc.pc(), 0x336d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0161
        gbc.setState(0x950a, 0xee62, 0x2ed0, 0x31ab, 0xcaf6, 0xf803, 0x0, 0x1);
        gbc.writeMem(0x950a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xee62);
        EXPECT(gbc.pc(), 0x950c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950a), 0xcb);
        EXPECT(gbc.readMem(0x950b), 0xa2);
        // CB A2 0162
        gbc.setState(0x640f, 0xc613, 0xb470, 0xe7e5, 0xeade, 0x17a8, 0x0, 0x0);
        gbc.writeMem(0x640f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0x6411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0163
        gbc.setState(0xf34, 0x51fc, 0xa2c0, 0xd289, 0xc569, 0x913c, 0x1, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x51fc);
        EXPECT(gbc.pc(), 0xf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0164
        gbc.setState(0xe3cb, 0xcebd, 0x88a0, 0x246f, 0x224b, 0xbf34, 0x0, 0x1);
        gbc.writeMem(0xe3cb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcebd);
        EXPECT(gbc.pc(), 0xe3cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3cb), 0xcb);
        EXPECT(gbc.readMem(0xe3cc), 0xa2);
        // CB A2 0165
        gbc.setState(0xc325, 0xa5c, 0xd5f0, 0x305b, 0x9838, 0x5eff, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa5c);
        EXPECT(gbc.pc(), 0xc327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc325), 0xcb);
        EXPECT(gbc.readMem(0xc326), 0xa2);
        // CB A2 0166
        gbc.setState(0x93f4, 0x28ba, 0x7850, 0x1e06, 0xd786, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x28ba);
        EXPECT(gbc.pc(), 0x93f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f4), 0xcb);
        EXPECT(gbc.readMem(0x93f5), 0xa2);
        // CB A2 0167
        gbc.setState(0x3e2f, 0x5d05, 0xefe0, 0xa22e, 0xb60b, 0xd6b, 0x1, 0x1);
        gbc.writeMem(0x3e2f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5d05);
        EXPECT(gbc.pc(), 0x3e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0168
        gbc.setState(0xd9f6, 0x23d2, 0x8c90, 0x7402, 0xc09, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0xd9f6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x23d2);
        EXPECT(gbc.pc(), 0xd9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f6), 0xcb);
        EXPECT(gbc.readMem(0xd9f7), 0xa2);
        // CB A2 0169
        gbc.setState(0x685b, 0x57c5, 0x3680, 0xfb2, 0x4c6e, 0xb299, 0x0, 0x0);
        gbc.writeMem(0x685b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 016A
        gbc.setState(0x1b1e, 0x9526, 0xc170, 0x6f9d, 0xba5c, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9526);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 016B
        gbc.setState(0xec6, 0xc1f3, 0x2600, 0xd87f, 0xdc4, 0xbfa5, 0x1, 0x0);
        gbc.writeMem(0xec6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc1f3);
        EXPECT(gbc.pc(), 0xec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 016C
        gbc.setState(0xd132, 0x46da, 0xdb0, 0x2e4f, 0xcb85, 0xb1da, 0x0, 0x0);
        gbc.writeMem(0xd132, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x46da);
        EXPECT(gbc.pc(), 0xd134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd132), 0xcb);
        EXPECT(gbc.readMem(0xd133), 0xa2);
        // CB A2 016D
        gbc.setState(0x1661, 0xb4ff, 0xf6c0, 0x6ec0, 0xa20f, 0x5207, 0x0, 0x0);
        gbc.writeMem(0x1661, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb4ff);
        EXPECT(gbc.pc(), 0x1663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 016E
        gbc.setState(0x7aa6, 0x1e0c, 0x7ba0, 0x43bf, 0x6fba, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0x7aa6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0x7aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 016F
        gbc.setState(0xe6eb, 0x7f96, 0xee40, 0x1b36, 0x10ca, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0xe6eb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f96);
        EXPECT(gbc.pc(), 0xe6ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6eb), 0xcb);
        EXPECT(gbc.readMem(0xe6ec), 0xa2);
        // CB A2 0170
        gbc.setState(0xef0f, 0xee8, 0x1720, 0x53e1, 0xbb21, 0xa8f1, 0x1, 0x0);
        gbc.writeMem(0xef0f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xee8);
        EXPECT(gbc.pc(), 0xef11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0f), 0xcb);
        EXPECT(gbc.readMem(0xef10), 0xa2);
        // CB A2 0171
        gbc.setState(0xac13, 0x4279, 0x68d0, 0x7075, 0xdd33, 0xef1f, 0x0, 0x1);
        gbc.writeMem(0xac13, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4279);
        EXPECT(gbc.pc(), 0xac15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac13), 0xcb);
        EXPECT(gbc.readMem(0xac14), 0xa2);
        // CB A2 0172
        gbc.setState(0xa99c, 0x2e66, 0x31d0, 0xf100, 0xf3e8, 0xe6d2, 0x1, 0x0);
        gbc.writeMem(0xa99c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2e66);
        EXPECT(gbc.pc(), 0xa99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99c), 0xcb);
        EXPECT(gbc.readMem(0xa99d), 0xa2);
        // CB A2 0173
        gbc.setState(0xbbdc, 0x2b25, 0xc020, 0xdc81, 0x6c72, 0x57f, 0x1, 0x0);
        gbc.writeMem(0xbbdc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2b25);
        EXPECT(gbc.pc(), 0xbbde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdc), 0xcb);
        EXPECT(gbc.readMem(0xbbdd), 0xa2);
        // CB A2 0174
        gbc.setState(0xe5a9, 0xbee3, 0xf8e0, 0x343b, 0x670d, 0xd164, 0x0, 0x1);
        gbc.writeMem(0xe5a9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbee3);
        EXPECT(gbc.pc(), 0xe5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a9), 0xcb);
        EXPECT(gbc.readMem(0xe5aa), 0xa2);
        // CB A2 0176
        gbc.setState(0x9f37, 0xbc8f, 0x9a0, 0x8851, 0x5dc8, 0xf9e5, 0x1, 0x1);
        gbc.writeMem(0x9f37, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbc8f);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f37), 0xcb);
        EXPECT(gbc.readMem(0x9f38), 0xa2);
        // CB A2 0177
        gbc.setState(0x8c4, 0x7527, 0x4980, 0x250b, 0xe7e0, 0x1dd9, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7527);
        EXPECT(gbc.pc(), 0x8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0178
        gbc.setState(0xeb46, 0xd0f4, 0xe980, 0x67ba, 0xc345, 0x5cf, 0x0, 0x0);
        gbc.writeMem(0xeb46, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd0f4);
        EXPECT(gbc.pc(), 0xeb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb46), 0xcb);
        EXPECT(gbc.readMem(0xeb47), 0xa2);
        // CB A2 0179
        gbc.setState(0x8fe8, 0x1546, 0x8a40, 0x93c5, 0x427b, 0x81b, 0x0, 0x0);
        gbc.writeMem(0x8fe8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1546);
        EXPECT(gbc.pc(), 0x8fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe8), 0xcb);
        EXPECT(gbc.readMem(0x8fe9), 0xa2);
        // CB A2 017A
        gbc.setState(0x156c, 0x2f51, 0xff60, 0x5c04, 0xab90, 0x5536, 0x0, 0x1);
        gbc.writeMem(0x156c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2f51);
        EXPECT(gbc.pc(), 0x156e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 017B
        gbc.setState(0xcf63, 0xe7d6, 0xb410, 0xf10a, 0x2dd4, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0xcf63, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7d6);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf63), 0xcb);
        EXPECT(gbc.readMem(0xcf64), 0xa2);
        // CB A2 017C
        gbc.setState(0x988a, 0x2289, 0xaa00, 0xef6, 0x53d9, 0xcd54, 0x1, 0x1);
        gbc.writeMem(0x988a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2289);
        EXPECT(gbc.pc(), 0x988c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988a), 0xcb);
        EXPECT(gbc.readMem(0x988b), 0xa2);
        // CB A2 017D
        gbc.setState(0xaea5, 0xc374, 0xa550, 0x580a, 0x8f19, 0x98b2, 0x1, 0x0);
        gbc.writeMem(0xaea5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0xaea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea5), 0xcb);
        EXPECT(gbc.readMem(0xaea6), 0xa2);
        // CB A2 017E
        gbc.setState(0x6130, 0xce3c, 0x9a30, 0xcf0d, 0xd6ff, 0xd01e, 0x0, 0x0);
        gbc.writeMem(0x6130, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xce3c);
        EXPECT(gbc.pc(), 0x6132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 017F
        gbc.setState(0x468a, 0x28d9, 0x4560, 0x9699, 0x1fe6, 0x91d2, 0x1, 0x1);
        gbc.writeMem(0x468a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0x468c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0180
        gbc.setState(0xae64, 0x9ae0, 0x6130, 0x1709, 0x50c4, 0x36ad, 0x1, 0x0);
        gbc.writeMem(0xae64, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9ae0);
        EXPECT(gbc.pc(), 0xae66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae64), 0xcb);
        EXPECT(gbc.readMem(0xae65), 0xa2);
        // CB A2 0181
        gbc.setState(0x212b, 0xf52f, 0x7550, 0xd49b, 0x69d8, 0x9ffb, 0x1, 0x1);
        gbc.writeMem(0x212b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf52f);
        EXPECT(gbc.pc(), 0x212d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0182
        gbc.setState(0xd245, 0xdd22, 0x60, 0x27cf, 0xba0b, 0xb9ea, 0x1, 0x0);
        gbc.writeMem(0xd245, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdd22);
        EXPECT(gbc.pc(), 0xd247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd245), 0xcb);
        EXPECT(gbc.readMem(0xd246), 0xa2);
        // CB A2 0184
        gbc.setState(0xeadc, 0x4508, 0xb7f0, 0xd638, 0x20e9, 0x9576, 0x0, 0x1);
        gbc.writeMem(0xeadc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4508);
        EXPECT(gbc.pc(), 0xeade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeadc), 0xcb);
        EXPECT(gbc.readMem(0xeadd), 0xa2);
        // CB A2 0185
        gbc.setState(0xcd42, 0x962b, 0xa620, 0x9618, 0xffff, 0xfa7e, 0x0, 0x1);
        gbc.writeMem(0xcd42, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0xcd44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd42), 0xcb);
        EXPECT(gbc.readMem(0xcd43), 0xa2);
        // CB A2 0186
        gbc.setState(0xd268, 0x63a5, 0xa30, 0x2949, 0x3269, 0x4f69, 0x0, 0x1);
        gbc.writeMem(0xd268, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd268), 0xcb);
        EXPECT(gbc.readMem(0xd269), 0xa2);
        // CB A2 0187
        gbc.setState(0xa24c, 0xaae6, 0xc650, 0x6465, 0x98d4, 0xb127, 0x0, 0x1);
        gbc.writeMem(0xa24c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaae6);
        EXPECT(gbc.pc(), 0xa24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24c), 0xcb);
        EXPECT(gbc.readMem(0xa24d), 0xa2);
        // CB A2 0188
        gbc.setState(0xe39e, 0xbed, 0xbec0, 0x7d6d, 0xef64, 0x292a, 0x1, 0x1);
        gbc.writeMem(0xe39e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbed);
        EXPECT(gbc.pc(), 0xe3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39e), 0xcb);
        EXPECT(gbc.readMem(0xe39f), 0xa2);
        // CB A2 0189
        gbc.setState(0x7180, 0x2483, 0xb780, 0x98a5, 0xc2f6, 0xeb0e, 0x1, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2483);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 018A
        gbc.setState(0xd69a, 0x89a1, 0x2050, 0xc3cc, 0x727d, 0xcdb9, 0x1, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x89a1);
        EXPECT(gbc.pc(), 0xd69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69a), 0xcb);
        EXPECT(gbc.readMem(0xd69b), 0xa2);
        // CB A2 018B
        gbc.setState(0x4d2e, 0xf95, 0xb280, 0x9ad, 0x2d64, 0xd166, 0x1, 0x0);
        gbc.writeMem(0x4d2e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf95);
        EXPECT(gbc.pc(), 0x4d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 018C
        gbc.setState(0xb28b, 0xf300, 0xd700, 0x50f7, 0x8de4, 0xb5cf, 0x1, 0x0);
        gbc.writeMem(0xb28b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf300);
        EXPECT(gbc.pc(), 0xb28d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb28b), 0xcb);
        EXPECT(gbc.readMem(0xb28c), 0xa2);
        // CB A2 018D
        gbc.setState(0x9eaf, 0x6dee, 0x6ec0, 0x370e, 0xf95d, 0xf000, 0x1, 0x1);
        gbc.writeMem(0x9eaf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6dee);
        EXPECT(gbc.pc(), 0x9eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eaf), 0xcb);
        EXPECT(gbc.readMem(0x9eb0), 0xa2);
        // CB A2 018E
        gbc.setState(0xddaa, 0xcd9e, 0xf400, 0x894a, 0xb285, 0xfeb5, 0x1, 0x1);
        gbc.writeMem(0xddaa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcd9e);
        EXPECT(gbc.pc(), 0xddac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddaa), 0xcb);
        EXPECT(gbc.readMem(0xddab), 0xa2);
        // CB A2 018F
        gbc.setState(0x3ed1, 0x6f4, 0x160, 0x7c10, 0x324f, 0xd3b6, 0x0, 0x0);
        gbc.writeMem(0x3ed1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0x3ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0190
        gbc.setState(0xcbb5, 0x5690, 0x44e0, 0xf6ac, 0x6d39, 0x322e, 0x0, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5690);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0xa2);
        // CB A2 0191
        gbc.setState(0x55a, 0x6ca3, 0x7800, 0x8590, 0xdb98, 0x9e90, 0x0, 0x0);
        gbc.writeMem(0x55a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6ca3);
        EXPECT(gbc.pc(), 0x55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0192
        gbc.setState(0x2220, 0x4d25, 0xa4d0, 0xbeb, 0x4b7e, 0x77fe, 0x0, 0x1);
        gbc.writeMem(0x2220, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4d25);
        EXPECT(gbc.pc(), 0x2222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0193
        gbc.setState(0xad8a, 0xaa, 0xe4b0, 0xb586, 0xf494, 0xba31, 0x0, 0x0);
        gbc.writeMem(0xad8a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xaa);
        EXPECT(gbc.pc(), 0xad8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8a), 0xcb);
        EXPECT(gbc.readMem(0xad8b), 0xa2);
        // CB A2 0194
        gbc.setState(0x7060, 0xe89d, 0x7a0, 0xb0f0, 0x359b, 0xbbf3, 0x1, 0x0);
        gbc.writeMem(0x7060, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe89d);
        EXPECT(gbc.pc(), 0x7062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0196
        gbc.setState(0x1c1b, 0x36c7, 0x41d0, 0x85c, 0x302b, 0x473f, 0x1, 0x0);
        gbc.writeMem(0x1c1b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x36c7);
        EXPECT(gbc.pc(), 0x1c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0198
        gbc.setState(0x23ff, 0x5bb5, 0x52d0, 0x5c3f, 0x1b61, 0x8505, 0x0, 0x0);
        gbc.writeMem(0x23ff, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5bb5);
        EXPECT(gbc.pc(), 0x2401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0199
        gbc.setState(0xe49d, 0x124a, 0xe410, 0xcbfd, 0x34fc, 0xf0df, 0x1, 0x1);
        gbc.writeMem(0xe49d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x124a);
        EXPECT(gbc.pc(), 0xe49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49d), 0xcb);
        EXPECT(gbc.readMem(0xe49e), 0xa2);
        // CB A2 019A
        gbc.setState(0xb89f, 0x345f, 0xe8e0, 0x2224, 0xfc1c, 0x972c, 0x0, 0x0);
        gbc.writeMem(0xb89f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x345f);
        EXPECT(gbc.pc(), 0xb8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89f), 0xcb);
        EXPECT(gbc.readMem(0xb8a0), 0xa2);
        // CB A2 019C
        gbc.setState(0x1627, 0xf395, 0x3460, 0x8cfb, 0x8d4b, 0x3181, 0x0, 0x1);
        gbc.writeMem(0x1627, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf395);
        EXPECT(gbc.pc(), 0x1629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 019D
        gbc.setState(0x3860, 0x33d2, 0x210, 0x577e, 0xdbd8, 0x4ddc, 0x1, 0x1);
        gbc.writeMem(0x3860, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x33d2);
        EXPECT(gbc.pc(), 0x3862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 019E
        gbc.setState(0x4067, 0x8183, 0x7750, 0x309d, 0x6e4a, 0xcbde, 0x1, 0x1);
        gbc.writeMem(0x4067, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8183);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 019F
        gbc.setState(0x6c29, 0xb04f, 0x9770, 0xd2c4, 0xc788, 0xea4e, 0x0, 0x0);
        gbc.writeMem(0x6c29, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb04f);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01A0
        gbc.setState(0xebf, 0x8f58, 0x9f50, 0x49aa, 0x2d46, 0xbe3e, 0x1, 0x1);
        gbc.writeMem(0xebf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8f58);
        EXPECT(gbc.pc(), 0xec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01A2
        gbc.setState(0x393, 0x17f4, 0xbe20, 0x6156, 0x3e30, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x393, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x17f4);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01A3
        gbc.setState(0x7a23, 0xee76, 0x6610, 0x8bea, 0xf8a8, 0x1ac4, 0x1, 0x1);
        gbc.writeMem(0x7a23, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xee76);
        EXPECT(gbc.pc(), 0x7a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01A5
        gbc.setState(0x29cf, 0x7d03, 0x1380, 0x6df4, 0x439a, 0xac5a, 0x0, 0x0);
        gbc.writeMem(0x29cf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7d03);
        EXPECT(gbc.pc(), 0x29d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01A6
        gbc.setState(0x8523, 0x712f, 0x2e60, 0xa3a2, 0xfb31, 0x460d, 0x1, 0x1);
        gbc.writeMem(0x8523, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x712f);
        EXPECT(gbc.pc(), 0x8525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8523), 0xcb);
        EXPECT(gbc.readMem(0x8524), 0xa2);
        // CB A2 01A7
        gbc.setState(0xce5b, 0x4c8c, 0x780, 0xccc4, 0x41a, 0x19d3, 0x1, 0x0);
        gbc.writeMem(0xce5b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4c8c);
        EXPECT(gbc.pc(), 0xce5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5b), 0xcb);
        EXPECT(gbc.readMem(0xce5c), 0xa2);
        // CB A2 01A8
        gbc.setState(0x8e57, 0x3bb9, 0x2740, 0xd50d, 0x8490, 0xe6d2, 0x0, 0x1);
        gbc.writeMem(0x8e57, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3bb9);
        EXPECT(gbc.pc(), 0x8e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e57), 0xcb);
        EXPECT(gbc.readMem(0x8e58), 0xa2);
        // CB A2 01A9
        gbc.setState(0x67b1, 0x9563, 0x9ce0, 0x1b84, 0x1f77, 0x226a, 0x0, 0x1);
        gbc.writeMem(0x67b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0x67b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01AA
        gbc.setState(0x2e3e, 0x13dc, 0x9c20, 0x6211, 0x9c26, 0x8881, 0x1, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x13dc);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01AB
        gbc.setState(0x3262, 0x6ea2, 0x43e0, 0x7eb8, 0x41e, 0x98c5, 0x0, 0x1);
        gbc.writeMem(0x3262, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6ea2);
        EXPECT(gbc.pc(), 0x3264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01AC
        gbc.setState(0x923a, 0xf5af, 0xfc40, 0xf896, 0xdc5c, 0xb40, 0x0, 0x1);
        gbc.writeMem(0x923a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf5af);
        EXPECT(gbc.pc(), 0x923c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923a), 0xcb);
        EXPECT(gbc.readMem(0x923b), 0xa2);
        // CB A2 01AD
        gbc.setState(0xb243, 0xc0dc, 0x6e00, 0x282c, 0xf52, 0xa570, 0x1, 0x0);
        gbc.writeMem(0xb243, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc0dc);
        EXPECT(gbc.pc(), 0xb245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb243), 0xcb);
        EXPECT(gbc.readMem(0xb244), 0xa2);
        // CB A2 01AE
        gbc.setState(0xb34, 0xd54b, 0x2c40, 0x443b, 0xfe51, 0x2d48, 0x0, 0x0);
        gbc.writeMem(0xb34, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd54b);
        EXPECT(gbc.pc(), 0xb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01AF
        gbc.setState(0x28ba, 0x2cbc, 0x6140, 0x5a04, 0x7175, 0x55a8, 0x1, 0x0);
        gbc.writeMem(0x28ba, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2cbc);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01B1
        gbc.setState(0x248e, 0x7400, 0xed40, 0x4c31, 0x2156, 0xdbb2, 0x1, 0x1);
        gbc.writeMem(0x248e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7400);
        EXPECT(gbc.pc(), 0x2490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01B2
        gbc.setState(0x1233, 0xc442, 0x44c0, 0xe3fc, 0x6791, 0x2c7a, 0x1, 0x0);
        gbc.writeMem(0x1233, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc442);
        EXPECT(gbc.pc(), 0x1235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01B3
        gbc.setState(0xc4b3, 0x2aec, 0x65a0, 0x465, 0x2fc5, 0xe073, 0x0, 0x0);
        gbc.writeMem(0xc4b3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2aec);
        EXPECT(gbc.pc(), 0xc4b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b3), 0xcb);
        EXPECT(gbc.readMem(0xc4b4), 0xa2);
        // CB A2 01B4
        gbc.setState(0xab8a, 0xe69, 0x28e0, 0xd4cb, 0x26e5, 0xc1b7, 0x0, 0x1);
        gbc.writeMem(0xab8a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0xab8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab8a), 0xcb);
        EXPECT(gbc.readMem(0xab8b), 0xa2);
        // CB A2 01B5
        gbc.setState(0xec6a, 0x9602, 0x9250, 0xb1be, 0x8f1a, 0x30e1, 0x1, 0x1);
        gbc.writeMem(0xec6a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9602);
        EXPECT(gbc.pc(), 0xec6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6a), 0xcb);
        EXPECT(gbc.readMem(0xec6b), 0xa2);
        // CB A2 01B6
        gbc.setState(0x28ca, 0x7ab1, 0xe160, 0xef55, 0xf053, 0xe444, 0x0, 0x1);
        gbc.writeMem(0x28ca, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7ab1);
        EXPECT(gbc.pc(), 0x28cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01B7
        gbc.setState(0x77a, 0x60a4, 0x6fe0, 0x7721, 0x6a7, 0x82ff, 0x0, 0x1);
        gbc.writeMem(0x77a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x60a4);
        EXPECT(gbc.pc(), 0x77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01B8
        gbc.setState(0xa25b, 0xcd92, 0xa350, 0xac9f, 0xae1a, 0x31e8, 0x1, 0x1);
        gbc.writeMem(0xa25b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcd92);
        EXPECT(gbc.pc(), 0xa25d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25b), 0xcb);
        EXPECT(gbc.readMem(0xa25c), 0xa2);
        // CB A2 01BA
        gbc.setState(0x2a94, 0x3b6f, 0x7020, 0xe39a, 0xa50b, 0xf2ea, 0x1, 0x1);
        gbc.writeMem(0x2a94, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3b6f);
        EXPECT(gbc.pc(), 0x2a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01BB
        gbc.setState(0x3dec, 0x647, 0x410, 0x2b8d, 0x3ee5, 0x999, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01BC
        gbc.setState(0xb0b9, 0x3d0d, 0x96b0, 0xca99, 0xf32b, 0x31eb, 0x1, 0x1);
        gbc.writeMem(0xb0b9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3d0d);
        EXPECT(gbc.pc(), 0xb0bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b9), 0xcb);
        EXPECT(gbc.readMem(0xb0ba), 0xa2);
        // CB A2 01BD
        gbc.setState(0x6d88, 0xbac4, 0x88d0, 0x17c5, 0x6736, 0xc81e, 0x1, 0x1);
        gbc.writeMem(0x6d88, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbac4);
        EXPECT(gbc.pc(), 0x6d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01BE
        gbc.setState(0xea40, 0x5897, 0x96f0, 0xfad7, 0x85f9, 0xe1e2, 0x0, 0x1);
        gbc.writeMem(0xea40, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5897);
        EXPECT(gbc.pc(), 0xea42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea40), 0xcb);
        EXPECT(gbc.readMem(0xea41), 0xa2);
        // CB A2 01BF
        gbc.setState(0x1452, 0x42e2, 0x7db0, 0x8680, 0xb127, 0x8fa1, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x42e2);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01C0
        gbc.setState(0x4560, 0x7bbf, 0x1830, 0x733b, 0xdf8b, 0x4198, 0x1, 0x0);
        gbc.writeMem(0x4560, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7bbf);
        EXPECT(gbc.pc(), 0x4562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01C1
        gbc.setState(0x8dff, 0xaff8, 0xdbb0, 0xeb1d, 0x81fa, 0x910, 0x0, 0x1);
        gbc.writeMem(0x8dff, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaff8);
        EXPECT(gbc.pc(), 0x8e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dff), 0xcb);
        EXPECT(gbc.readMem(0x8e00), 0xa2);
        // CB A2 01C2
        gbc.setState(0x2f2b, 0xec9c, 0x960, 0xe7e2, 0xc341, 0x1ae1, 0x1, 0x0);
        gbc.writeMem(0x2f2b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xec9c);
        EXPECT(gbc.pc(), 0x2f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01C4
        gbc.setState(0xe63e, 0x2bba, 0x7070, 0x4a06, 0xc926, 0x7826, 0x0, 0x0);
        gbc.writeMem(0xe63e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2bba);
        EXPECT(gbc.pc(), 0xe640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63e), 0xcb);
        EXPECT(gbc.readMem(0xe63f), 0xa2);
        // CB A2 01C5
        gbc.setState(0xc337, 0x2001, 0x8b20, 0x967, 0xbdef, 0x3867, 0x0, 0x1);
        gbc.writeMem(0xc337, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2001);
        EXPECT(gbc.pc(), 0xc339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc337), 0xcb);
        EXPECT(gbc.readMem(0xc338), 0xa2);
        // CB A2 01C6
        gbc.setState(0x4b09, 0x9f52, 0xb430, 0xb219, 0x9a7, 0x2bbc, 0x1, 0x0);
        gbc.writeMem(0x4b09, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9f52);
        EXPECT(gbc.pc(), 0x4b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01C7
        gbc.setState(0x4c0c, 0xde56, 0x5f70, 0x2912, 0x3aa0, 0x225f, 0x0, 0x1);
        gbc.writeMem(0x4c0c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0x4c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01C8
        gbc.setState(0xa9fb, 0x4906, 0xf150, 0x2e7a, 0x5ec0, 0x3e21, 0x0, 0x0);
        gbc.writeMem(0xa9fb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4906);
        EXPECT(gbc.pc(), 0xa9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fb), 0xcb);
        EXPECT(gbc.readMem(0xa9fc), 0xa2);
        // CB A2 01C9
        gbc.setState(0xa0f4, 0x1752, 0xe350, 0x4383, 0x19c1, 0x6fbd, 0x0, 0x0);
        gbc.writeMem(0xa0f4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1752);
        EXPECT(gbc.pc(), 0xa0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f4), 0xcb);
        EXPECT(gbc.readMem(0xa0f5), 0xa2);
        // CB A2 01CA
        gbc.setState(0x5066, 0xae09, 0xb10, 0x826e, 0xe5a5, 0x2d66, 0x0, 0x1);
        gbc.writeMem(0x5066, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xae09);
        EXPECT(gbc.pc(), 0x5068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01CB
        gbc.setState(0x6681, 0xd881, 0xb310, 0xd662, 0x594b, 0x4308, 0x1, 0x1);
        gbc.writeMem(0x6681, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd881);
        EXPECT(gbc.pc(), 0x6683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01CC
        gbc.setState(0x2351, 0x2d67, 0x6450, 0x88fb, 0x8c4e, 0x982e, 0x0, 0x0);
        gbc.writeMem(0x2351, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2d67);
        EXPECT(gbc.pc(), 0x2353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01CE
        gbc.setState(0x7695, 0x6a31, 0xd350, 0x5eb0, 0x901a, 0x188e, 0x0, 0x1);
        gbc.writeMem(0x7695, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6a31);
        EXPECT(gbc.pc(), 0x7697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01CF
        gbc.setState(0x2ba2, 0x5b99, 0x1a00, 0x7394, 0xd5d0, 0x5199, 0x1, 0x0);
        gbc.writeMem(0x2ba2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0x2ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01D0
        gbc.setState(0x2c9c, 0xed14, 0xa360, 0xd318, 0x6890, 0x8eed, 0x1, 0x0);
        gbc.writeMem(0x2c9c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xed14);
        EXPECT(gbc.pc(), 0x2c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01D1
        gbc.setState(0x2dc2, 0x963b, 0x4ca0, 0x5927, 0xb0ec, 0xbfcd, 0x0, 0x1);
        gbc.writeMem(0x2dc2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x963b);
        EXPECT(gbc.pc(), 0x2dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01D2
        gbc.setState(0xa5e8, 0x6571, 0xb860, 0x8a1d, 0x5201, 0x54b1, 0x0, 0x1);
        gbc.writeMem(0xa5e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0xa5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e8), 0xcb);
        EXPECT(gbc.readMem(0xa5e9), 0xa2);
        // CB A2 01D3
        gbc.setState(0x2fa2, 0x78b1, 0x9f10, 0x30e1, 0xc65, 0x4920, 0x0, 0x0);
        gbc.writeMem(0x2fa2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x78b1);
        EXPECT(gbc.pc(), 0x2fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01D4
        gbc.setState(0x9b22, 0x86b, 0xf190, 0x662d, 0xa1c8, 0x3273, 0x1, 0x1);
        gbc.writeMem(0x9b22, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x86b);
        EXPECT(gbc.pc(), 0x9b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b22), 0xcb);
        EXPECT(gbc.readMem(0x9b23), 0xa2);
        // CB A2 01D5
        gbc.setState(0xe31b, 0xe08e, 0x11c0, 0x9c06, 0x8dbd, 0x34ae, 0x1, 0x1);
        gbc.writeMem(0xe31b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe08e);
        EXPECT(gbc.pc(), 0xe31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31b), 0xcb);
        EXPECT(gbc.readMem(0xe31c), 0xa2);
        // CB A2 01D6
        gbc.setState(0x8df7, 0x6c7, 0x4fe0, 0x2072, 0x4229, 0xdd6f, 0x0, 0x0);
        gbc.writeMem(0x8df7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6c7);
        EXPECT(gbc.pc(), 0x8df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df7), 0xcb);
        EXPECT(gbc.readMem(0x8df8), 0xa2);
        // CB A2 01D7
        gbc.setState(0x87b3, 0xc13e, 0xe860, 0xe559, 0x414d, 0x8900, 0x1, 0x1);
        gbc.writeMem(0x87b3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc13e);
        EXPECT(gbc.pc(), 0x87b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b3), 0xcb);
        EXPECT(gbc.readMem(0x87b4), 0xa2);
        // CB A2 01D8
        gbc.setState(0x3e31, 0x1673, 0xca80, 0x8b46, 0x89c4, 0x2f68, 0x0, 0x0);
        gbc.writeMem(0x3e31, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1673);
        EXPECT(gbc.pc(), 0x3e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01DA
        gbc.setState(0xc92, 0x6a4e, 0x39d0, 0x87f4, 0xaab1, 0xe002, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01DB
        gbc.setState(0xe022, 0x17ce, 0x8a80, 0x37cb, 0x169b, 0x421c, 0x1, 0x0);
        gbc.writeMem(0xe022, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x17ce);
        EXPECT(gbc.pc(), 0xe024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe022), 0xcb);
        EXPECT(gbc.readMem(0xe023), 0xa2);
        // CB A2 01DC
        gbc.setState(0xdbdc, 0xdaac, 0x2010, 0xd627, 0xeab2, 0x5b2d, 0x1, 0x1);
        gbc.writeMem(0xdbdc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdaac);
        EXPECT(gbc.pc(), 0xdbde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbdc), 0xcb);
        EXPECT(gbc.readMem(0xdbdd), 0xa2);
        // CB A2 01DD
        gbc.setState(0xa7a2, 0x9c0b, 0x9930, 0x3a4f, 0x80ae, 0x202d, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9c0b);
        EXPECT(gbc.pc(), 0xa7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a2), 0xcb);
        EXPECT(gbc.readMem(0xa7a3), 0xa2);
        // CB A2 01DE
        gbc.setState(0x57b1, 0x8af0, 0xbd70, 0xb5cb, 0x29e3, 0xfe71, 0x0, 0x0);
        gbc.writeMem(0x57b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8af0);
        EXPECT(gbc.pc(), 0x57b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01DF
        gbc.setState(0x5ddc, 0x6493, 0xdbd0, 0xb95e, 0x8eb4, 0xc84f, 0x0, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6493);
        EXPECT(gbc.pc(), 0x5dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01E0
        gbc.setState(0x1f20, 0xca52, 0x9150, 0x2e96, 0xcbd0, 0x6f31, 0x0, 0x0);
        gbc.writeMem(0x1f20, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xca52);
        EXPECT(gbc.pc(), 0x1f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01E1
        gbc.setState(0xe960, 0x3ae4, 0x7830, 0xb155, 0x4230, 0x738e, 0x0, 0x1);
        gbc.writeMem(0xe960, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0xe962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe960), 0xcb);
        EXPECT(gbc.readMem(0xe961), 0xa2);
        // CB A2 01E2
        gbc.setState(0x9493, 0x51dc, 0xaff0, 0x4ccc, 0x3405, 0xd8cd, 0x1, 0x0);
        gbc.writeMem(0x9493, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x51dc);
        EXPECT(gbc.pc(), 0x9495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9493), 0xcb);
        EXPECT(gbc.readMem(0x9494), 0xa2);
        // CB A2 01E4
        gbc.setState(0xdb16, 0x37d1, 0x8a80, 0x4841, 0xc55, 0xa0d, 0x1, 0x0);
        gbc.writeMem(0xdb16, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x37d1);
        EXPECT(gbc.pc(), 0xdb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb16), 0xcb);
        EXPECT(gbc.readMem(0xdb17), 0xa2);
        // CB A2 01E5
        gbc.setState(0xa81f, 0x716f, 0xf500, 0xe38e, 0x24f9, 0x214b, 0x0, 0x0);
        gbc.writeMem(0xa81f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x716f);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0xa2);
        // CB A2 01E6
        gbc.setState(0x93fc, 0x1753, 0xa930, 0x79cf, 0xc1f5, 0x83b3, 0x0, 0x0);
        gbc.writeMem(0x93fc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0x93fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fc), 0xcb);
        EXPECT(gbc.readMem(0x93fd), 0xa2);
        // CB A2 01E7
        gbc.setState(0xb545, 0x6f88, 0xb430, 0x5f85, 0x6501, 0x1d81, 0x0, 0x0);
        gbc.writeMem(0xb545, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6f88);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb545), 0xcb);
        EXPECT(gbc.readMem(0xb546), 0xa2);
        // CB A2 01E8
        gbc.setState(0x1bfc, 0x71f8, 0x3c0, 0x7f3a, 0x80ad, 0xd4d6, 0x1, 0x1);
        gbc.writeMem(0x1bfc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x71f8);
        EXPECT(gbc.pc(), 0x1bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01E9
        gbc.setState(0x7272, 0x8290, 0xf650, 0xe175, 0xa2e8, 0x26eb, 0x1, 0x1);
        gbc.writeMem(0x7272, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8290);
        EXPECT(gbc.pc(), 0x7274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01EA
        gbc.setState(0x9888, 0x608, 0xbbb0, 0xd466, 0x3e4b, 0x8548, 0x1, 0x1);
        gbc.writeMem(0x9888, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x608);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9888), 0xcb);
        EXPECT(gbc.readMem(0x9889), 0xa2);
        // CB A2 01EB
        gbc.setState(0x7e12, 0x41fd, 0x97d0, 0xdde5, 0x337e, 0x28e4, 0x1, 0x1);
        gbc.writeMem(0x7e12, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01EC
        gbc.setState(0x69c5, 0xf667, 0x1b80, 0x11a8, 0xe9f6, 0x46, 0x1, 0x1);
        gbc.writeMem(0x69c5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf667);
        EXPECT(gbc.pc(), 0x69c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01ED
        gbc.setState(0x2052, 0xecdb, 0xc9a0, 0x577c, 0x532, 0xa16f, 0x0, 0x1);
        gbc.writeMem(0x2052, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xecdb);
        EXPECT(gbc.pc(), 0x2054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01EE
        gbc.setState(0x7bc3, 0x6e11, 0xc420, 0x89c7, 0xec9d, 0x528d, 0x1, 0x0);
        gbc.writeMem(0x7bc3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e11);
        EXPECT(gbc.pc(), 0x7bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01F0
        gbc.setState(0x1f33, 0x51a6, 0xd850, 0x2667, 0xd608, 0x7c4f, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x51a6);
        EXPECT(gbc.pc(), 0x1f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01F2
        gbc.setState(0xd45f, 0x5c59, 0x7860, 0xdc59, 0x2e64, 0x5af1, 0x0, 0x0);
        gbc.writeMem(0xd45f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5c59);
        EXPECT(gbc.pc(), 0xd461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd45f), 0xcb);
        EXPECT(gbc.readMem(0xd460), 0xa2);
        // CB A2 01F4
        gbc.setState(0x5b4, 0x6b1d, 0x66b0, 0xaa01, 0xa666, 0xdf91, 0x0, 0x0);
        gbc.writeMem(0x5b4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0x5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01F5
        gbc.setState(0xe854, 0x2432, 0x7900, 0xbaad, 0xd255, 0x2106, 0x0, 0x1);
        gbc.writeMem(0xe854, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2432);
        EXPECT(gbc.pc(), 0xe856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe854), 0xcb);
        EXPECT(gbc.readMem(0xe855), 0xa2);
        // CB A2 01F6
        gbc.setState(0xae42, 0xa18, 0xd040, 0xd6fd, 0xedb4, 0xda9d, 0x1, 0x1);
        gbc.writeMem(0xae42, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa18);
        EXPECT(gbc.pc(), 0xae44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0xcb);
        EXPECT(gbc.readMem(0xae43), 0xa2);
        // CB A2 01F7
        gbc.setState(0x154b, 0xed8f, 0x60a0, 0x6f3, 0xd09b, 0xb3d1, 0x1, 0x1);
        gbc.writeMem(0x154b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xed8f);
        EXPECT(gbc.pc(), 0x154d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01F8
        gbc.setState(0xa975, 0x1570, 0x3010, 0xf716, 0x8de4, 0x8f86, 0x1, 0x0);
        gbc.writeMem(0xa975, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1570);
        EXPECT(gbc.pc(), 0xa977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa975), 0xcb);
        EXPECT(gbc.readMem(0xa976), 0xa2);
        // CB A2 01FA
        gbc.setState(0xb0bf, 0x1f9d, 0xe960, 0x4596, 0x2e78, 0x410c, 0x1, 0x0);
        gbc.writeMem(0xb0bf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1f9d);
        EXPECT(gbc.pc(), 0xb0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0bf), 0xcb);
        EXPECT(gbc.readMem(0xb0c0), 0xa2);
        // CB A2 01FB
        gbc.setState(0x7a8, 0xc776, 0xbf00, 0xe965, 0xee98, 0x83d, 0x0, 0x0);
        gbc.writeMem(0x7a8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc776);
        EXPECT(gbc.pc(), 0x7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01FC
        gbc.setState(0x4c93, 0x3600, 0x290, 0xf967, 0x6194, 0xcb47, 0x0, 0x1);
        gbc.writeMem(0x4c93, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3600);
        EXPECT(gbc.pc(), 0x4c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01FD
        gbc.setState(0x6567, 0x72c7, 0x6d10, 0x5ee2, 0x5407, 0x207f, 0x0, 0x0);
        gbc.writeMem(0x6567, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x72c7);
        EXPECT(gbc.pc(), 0x6569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 01FE
        gbc.setState(0x3629, 0xa5be, 0x71a0, 0x9bf2, 0xa96a, 0x87fc, 0x1, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa5be);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 01FF
        gbc.setState(0x7f9, 0x27e3, 0xde70, 0x487c, 0xc313, 0x155, 0x1, 0x1);
        gbc.writeMem(0x7f9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x27e3);
        EXPECT(gbc.pc(), 0x7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0200
        gbc.setState(0x1f81, 0x5aa0, 0x87e0, 0x4ce2, 0x8b20, 0x982a, 0x0, 0x0);
        gbc.writeMem(0x1f81, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5aa0);
        EXPECT(gbc.pc(), 0x1f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0201
        gbc.setState(0xd28c, 0xf6ff, 0x3040, 0x9d1d, 0x4338, 0x954e, 0x0, 0x0);
        gbc.writeMem(0xd28c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf6ff);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28c), 0xcb);
        EXPECT(gbc.readMem(0xd28d), 0xa2);
        // CB A2 0202
        gbc.setState(0x29a6, 0x74f, 0x6d00, 0xef4d, 0x7a72, 0x6f77, 0x0, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x74f);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0203
        gbc.setState(0x9db5, 0x8e18, 0x51a0, 0xf398, 0xd55b, 0x5192, 0x1, 0x0);
        gbc.writeMem(0x9db5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8e18);
        EXPECT(gbc.pc(), 0x9db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db5), 0xcb);
        EXPECT(gbc.readMem(0x9db6), 0xa2);
        // CB A2 0204
        gbc.setState(0x5350, 0xc0ab, 0x9270, 0x8d6f, 0xa867, 0xba9c, 0x0, 0x0);
        gbc.writeMem(0x5350, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc0ab);
        EXPECT(gbc.pc(), 0x5352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0205
        gbc.setState(0x661b, 0x9617, 0x5f60, 0xf965, 0xfa97, 0x4bc, 0x1, 0x0);
        gbc.writeMem(0x661b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9617);
        EXPECT(gbc.pc(), 0x661d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0206
        gbc.setState(0x645a, 0x7a5b, 0xc5e0, 0xf16b, 0xb936, 0x3971, 0x1, 0x1);
        gbc.writeMem(0x645a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a5b);
        EXPECT(gbc.pc(), 0x645c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0207
        gbc.setState(0x9d8, 0x88bb, 0xa910, 0x51e1, 0x7fdf, 0xc73a, 0x1, 0x1);
        gbc.writeMem(0x9d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x88bb);
        EXPECT(gbc.pc(), 0x9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0208
        gbc.setState(0xd9a4, 0xf3f5, 0x2050, 0xa17a, 0xecac, 0x5811, 0x1, 0x0);
        gbc.writeMem(0xd9a4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf3f5);
        EXPECT(gbc.pc(), 0xd9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a4), 0xcb);
        EXPECT(gbc.readMem(0xd9a5), 0xa2);
        // CB A2 0209
        gbc.setState(0x83af, 0x869a, 0x8b80, 0xaaa3, 0xbab6, 0x600a, 0x0, 0x0);
        gbc.writeMem(0x83af, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0x83b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83af), 0xcb);
        EXPECT(gbc.readMem(0x83b0), 0xa2);
        // CB A2 020A
        gbc.setState(0x2d17, 0x65d5, 0x9b40, 0x44ba, 0x8bdd, 0xe86c, 0x1, 0x1);
        gbc.writeMem(0x2d17, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x2d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 020B
        gbc.setState(0x3cf4, 0x524f, 0x6a30, 0x1e12, 0xae45, 0xef91, 0x0, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x524f);
        EXPECT(gbc.pc(), 0x3cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 020C
        gbc.setState(0x5f7f, 0x9c24, 0x6170, 0x33bf, 0xb20f, 0xf81, 0x1, 0x1);
        gbc.writeMem(0x5f7f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x5f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 020D
        gbc.setState(0x6bb2, 0x747a, 0xa080, 0xc83, 0xd97, 0xaccf, 0x0, 0x1);
        gbc.writeMem(0x6bb2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x747a);
        EXPECT(gbc.pc(), 0x6bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 020E
        gbc.setState(0x4f98, 0x498b, 0xd8a0, 0xa838, 0xb73, 0xe1da, 0x0, 0x0);
        gbc.writeMem(0x4f98, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x498b);
        EXPECT(gbc.pc(), 0x4f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 020F
        gbc.setState(0x62ee, 0xca5d, 0xc6e0, 0x8511, 0x9dd7, 0xe737, 0x0, 0x1);
        gbc.writeMem(0x62ee, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xca5d);
        EXPECT(gbc.pc(), 0x62f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0210
        gbc.setState(0x2cf, 0x953b, 0xb010, 0x4be1, 0x237f, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0x2cf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x953b);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0211
        gbc.setState(0x6cc9, 0xe07c, 0xda60, 0x70af, 0x1f7d, 0xaee, 0x0, 0x1);
        gbc.writeMem(0x6cc9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe07c);
        EXPECT(gbc.pc(), 0x6ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0213
        gbc.setState(0x1bb6, 0x5d73, 0x72e0, 0xed4d, 0xdd67, 0x8211, 0x1, 0x1);
        gbc.writeMem(0x1bb6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5d73);
        EXPECT(gbc.pc(), 0x1bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0214
        gbc.setState(0x8312, 0x1480, 0xbd20, 0x9074, 0xf7d8, 0xafc1, 0x0, 0x0);
        gbc.writeMem(0x8312, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1480);
        EXPECT(gbc.pc(), 0x8314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8312), 0xcb);
        EXPECT(gbc.readMem(0x8313), 0xa2);
        // CB A2 0215
        gbc.setState(0x23d6, 0xd641, 0x3b80, 0xc43f, 0xd01a, 0x99a3, 0x1, 0x1);
        gbc.writeMem(0x23d6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd641);
        EXPECT(gbc.pc(), 0x23d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0216
        gbc.setState(0xeecf, 0xfc53, 0xd860, 0xd405, 0x533b, 0x7b9a, 0x1, 0x1);
        gbc.writeMem(0xeecf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfc53);
        EXPECT(gbc.pc(), 0xeed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecf), 0xcb);
        EXPECT(gbc.readMem(0xeed0), 0xa2);
        // CB A2 0217
        gbc.setState(0x4eef, 0x658b, 0x7750, 0xd370, 0x1b93, 0xc483, 0x1, 0x0);
        gbc.writeMem(0x4eef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x658b);
        EXPECT(gbc.pc(), 0x4ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0218
        gbc.setState(0x8f4e, 0xa9b, 0x22f0, 0xa600, 0x6b4b, 0xe5a6, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa9b);
        EXPECT(gbc.pc(), 0x8f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4e), 0xcb);
        EXPECT(gbc.readMem(0x8f4f), 0xa2);
        // CB A2 021B
        gbc.setState(0xb8a8, 0xa2b0, 0xb000, 0xe2df, 0x5763, 0xf85a, 0x0, 0x1);
        gbc.writeMem(0xb8a8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa2b0);
        EXPECT(gbc.pc(), 0xb8aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a8), 0xcb);
        EXPECT(gbc.readMem(0xb8a9), 0xa2);
        // CB A2 021C
        gbc.setState(0x99fc, 0x77fd, 0x8910, 0x5cc1, 0xbab5, 0x3252, 0x1, 0x1);
        gbc.writeMem(0x99fc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x77fd);
        EXPECT(gbc.pc(), 0x99fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fc), 0xcb);
        EXPECT(gbc.readMem(0x99fd), 0xa2);
        // CB A2 021D
        gbc.setState(0x3871, 0x50d1, 0xe0f0, 0x60ee, 0x7044, 0x50c5, 0x1, 0x1);
        gbc.writeMem(0x3871, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x50d1);
        EXPECT(gbc.pc(), 0x3873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 021E
        gbc.setState(0xc8c7, 0x480d, 0x7800, 0xafef, 0x9345, 0x4de9, 0x0, 0x1);
        gbc.writeMem(0xc8c7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x480d);
        EXPECT(gbc.pc(), 0xc8c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c7), 0xcb);
        EXPECT(gbc.readMem(0xc8c8), 0xa2);
        // CB A2 021F
        gbc.setState(0x6ead, 0x8ce6, 0x7020, 0xe917, 0xfbe8, 0x1e93, 0x1, 0x1);
        gbc.writeMem(0x6ead, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8ce6);
        EXPECT(gbc.pc(), 0x6eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0220
        gbc.setState(0xe180, 0x5c4b, 0x26a0, 0x75b5, 0xaf42, 0xe547, 0x1, 0x1);
        gbc.writeMem(0xe180, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5c4b);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe180), 0xcb);
        EXPECT(gbc.readMem(0xe181), 0xa2);
        // CB A2 0222
        gbc.setState(0x7ba5, 0xd086, 0x2830, 0x919d, 0x920f, 0x7b, 0x1, 0x0);
        gbc.writeMem(0x7ba5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd086);
        EXPECT(gbc.pc(), 0x7ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0223
        gbc.setState(0x90b0, 0xe998, 0xde80, 0x3f39, 0x7f2, 0xea7a, 0x1, 0x0);
        gbc.writeMem(0x90b0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe998);
        EXPECT(gbc.pc(), 0x90b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b0), 0xcb);
        EXPECT(gbc.readMem(0x90b1), 0xa2);
        // CB A2 0224
        gbc.setState(0xe987, 0x5b44, 0x4220, 0x28b8, 0x24a0, 0xbe3d, 0x0, 0x1);
        gbc.writeMem(0xe987, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5b44);
        EXPECT(gbc.pc(), 0xe989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe987), 0xcb);
        EXPECT(gbc.readMem(0xe988), 0xa2);
        // CB A2 0225
        gbc.setState(0x65de, 0x48d0, 0xf6f0, 0x9d5, 0xcf69, 0x926f, 0x0, 0x0);
        gbc.writeMem(0x65de, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x48d0);
        EXPECT(gbc.pc(), 0x65e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0226
        gbc.setState(0x3398, 0xa0ff, 0x1ae0, 0x53c0, 0x77bf, 0xe4f0, 0x0, 0x0);
        gbc.writeMem(0x3398, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa0ff);
        EXPECT(gbc.pc(), 0x339a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0227
        gbc.setState(0x20f, 0x1cbe, 0xc270, 0x2a0b, 0x867f, 0xf84e, 0x0, 0x0);
        gbc.writeMem(0x20f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1cbe);
        EXPECT(gbc.pc(), 0x211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0228
        gbc.setState(0xb55a, 0x633d, 0x9b00, 0x6a01, 0x179d, 0x4af9, 0x1, 0x1);
        gbc.writeMem(0xb55a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x633d);
        EXPECT(gbc.pc(), 0xb55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55a), 0xcb);
        EXPECT(gbc.readMem(0xb55b), 0xa2);
        // CB A2 022A
        gbc.setState(0xb29b, 0x3964, 0x2f20, 0x60c2, 0xff0d, 0x8ebf, 0x0, 0x1);
        gbc.writeMem(0xb29b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3964);
        EXPECT(gbc.pc(), 0xb29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29b), 0xcb);
        EXPECT(gbc.readMem(0xb29c), 0xa2);
        // CB A2 022B
        gbc.setState(0x10ac, 0x75b0, 0x9c00, 0x68aa, 0xbc32, 0x15df, 0x1, 0x0);
        gbc.writeMem(0x10ac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0x10ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 022C
        gbc.setState(0x50bf, 0xe545, 0x23a0, 0xb7e1, 0xeea5, 0x3922, 0x0, 0x0);
        gbc.writeMem(0x50bf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0x50c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 022D
        gbc.setState(0x142b, 0xcbb0, 0x21b0, 0xbafb, 0x6dc6, 0x3f4f, 0x0, 0x1);
        gbc.writeMem(0x142b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcbb0);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 022E
        gbc.setState(0x866c, 0x6442, 0xd570, 0xd3ad, 0xe66, 0x1b4, 0x1, 0x0);
        gbc.writeMem(0x866c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6442);
        EXPECT(gbc.pc(), 0x866e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866c), 0xcb);
        EXPECT(gbc.readMem(0x866d), 0xa2);
        // CB A2 022F
        gbc.setState(0x62e4, 0xf8d9, 0xf640, 0xd345, 0xb4e7, 0x775d, 0x1, 0x0);
        gbc.writeMem(0x62e4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf8d9);
        EXPECT(gbc.pc(), 0x62e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0230
        gbc.setState(0x3b87, 0x636, 0xb130, 0x3484, 0x2961, 0xd6ae, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x636);
        EXPECT(gbc.pc(), 0x3b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0231
        gbc.setState(0x901b, 0xc93a, 0xdb80, 0xc306, 0x6c0a, 0xb0bd, 0x1, 0x0);
        gbc.writeMem(0x901b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc93a);
        EXPECT(gbc.pc(), 0x901d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901b), 0xcb);
        EXPECT(gbc.readMem(0x901c), 0xa2);
        // CB A2 0232
        gbc.setState(0x98c, 0xeac0, 0x8b80, 0xb0d8, 0xc9d, 0xb966, 0x1, 0x1);
        gbc.writeMem(0x98c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xeac0);
        EXPECT(gbc.pc(), 0x98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0233
        gbc.setState(0x189e, 0xe370, 0xf700, 0x355c, 0xcaef, 0x1aae, 0x1, 0x1);
        gbc.writeMem(0x189e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe370);
        EXPECT(gbc.pc(), 0x18a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0234
        gbc.setState(0x8e73, 0x29fb, 0xb710, 0x771d, 0xecd9, 0xa9c1, 0x0, 0x1);
        gbc.writeMem(0x8e73, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x29fb);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e73), 0xcb);
        EXPECT(gbc.readMem(0x8e74), 0xa2);
        // CB A2 0235
        gbc.setState(0x41ef, 0x251d, 0xc950, 0x2f09, 0x933a, 0x74d4, 0x1, 0x1);
        gbc.writeMem(0x41ef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x251d);
        EXPECT(gbc.pc(), 0x41f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0237
        gbc.setState(0x66d1, 0xa296, 0x2690, 0xf412, 0xed59, 0x65cb, 0x1, 0x1);
        gbc.writeMem(0x66d1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0x66d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0238
        gbc.setState(0x30af, 0x5811, 0xdd10, 0xc6be, 0x8d37, 0xdd97, 0x1, 0x0);
        gbc.writeMem(0x30af, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5811);
        EXPECT(gbc.pc(), 0x30b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0239
        gbc.setState(0x60dc, 0xf84f, 0x6310, 0x12d7, 0xf403, 0x83f8, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf84f);
        EXPECT(gbc.pc(), 0x60de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 023A
        gbc.setState(0xb60, 0x8082, 0x970, 0xd66d, 0xd50a, 0xd68b, 0x1, 0x0);
        gbc.writeMem(0xb60, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8082);
        EXPECT(gbc.pc(), 0xb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 023B
        gbc.setState(0xb81e, 0x24d3, 0x6e80, 0x57be, 0xf352, 0x4821, 0x0, 0x0);
        gbc.writeMem(0xb81e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x24d3);
        EXPECT(gbc.pc(), 0xb820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81e), 0xcb);
        EXPECT(gbc.readMem(0xb81f), 0xa2);
        // CB A2 023C
        gbc.setState(0x4e0b, 0x9191, 0x3470, 0x2b71, 0xfa00, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0x4e0b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9191);
        EXPECT(gbc.pc(), 0x4e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 023D
        gbc.setState(0x9ac7, 0x72c3, 0xba80, 0x9508, 0x3ac0, 0x7521, 0x0, 0x0);
        gbc.writeMem(0x9ac7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x72c3);
        EXPECT(gbc.pc(), 0x9ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac7), 0xcb);
        EXPECT(gbc.readMem(0x9ac8), 0xa2);
        // CB A2 023E
        gbc.setState(0x8489, 0x4b91, 0x580, 0xfb0d, 0x2dd9, 0xab8a, 0x1, 0x0);
        gbc.writeMem(0x8489, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4b91);
        EXPECT(gbc.pc(), 0x848b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8489), 0xcb);
        EXPECT(gbc.readMem(0x848a), 0xa2);
        // CB A2 023F
        gbc.setState(0x779a, 0xcfe9, 0x4d20, 0xfed2, 0x12d6, 0x30, 0x1, 0x1);
        gbc.writeMem(0x779a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcfe9);
        EXPECT(gbc.pc(), 0x779c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0240
        gbc.setState(0x81c7, 0x16e8, 0xc500, 0x7e8d, 0x8316, 0x6f25, 0x0, 0x0);
        gbc.writeMem(0x81c7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x16e8);
        EXPECT(gbc.pc(), 0x81c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c7), 0xcb);
        EXPECT(gbc.readMem(0x81c8), 0xa2);
        // CB A2 0241
        gbc.setState(0x22ea, 0x3727, 0x2b30, 0x551b, 0x8366, 0x9a68, 0x1, 0x0);
        gbc.writeMem(0x22ea, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3727);
        EXPECT(gbc.pc(), 0x22ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0242
        gbc.setState(0xb1f9, 0x97e4, 0xb940, 0x8c95, 0x4d7b, 0x49fb, 0x0, 0x1);
        gbc.writeMem(0xb1f9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x97e4);
        EXPECT(gbc.pc(), 0xb1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f9), 0xcb);
        EXPECT(gbc.readMem(0xb1fa), 0xa2);
        // CB A2 0243
        gbc.setState(0x37ef, 0x4b68, 0x97f0, 0x2c87, 0xa029, 0xd3d, 0x0, 0x0);
        gbc.writeMem(0x37ef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4b68);
        EXPECT(gbc.pc(), 0x37f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0244
        gbc.setState(0x1e04, 0xbf34, 0x9540, 0xb2be, 0xa69a, 0x37cc, 0x0, 0x0);
        gbc.writeMem(0x1e04, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbf34);
        EXPECT(gbc.pc(), 0x1e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0245
        gbc.setState(0xce10, 0x2193, 0xda80, 0x5c47, 0xe966, 0xcb3e, 0x0, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2193);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce10), 0xcb);
        EXPECT(gbc.readMem(0xce11), 0xa2);
        // CB A2 0246
        gbc.setState(0xc9a7, 0x671f, 0xf290, 0x98aa, 0x2bd7, 0x5005, 0x0, 0x1);
        gbc.writeMem(0xc9a7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x671f);
        EXPECT(gbc.pc(), 0xc9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a7), 0xcb);
        EXPECT(gbc.readMem(0xc9a8), 0xa2);
        // CB A2 0247
        gbc.setState(0x5f1f, 0xd325, 0xb320, 0x93bb, 0x41c, 0x4f77, 0x0, 0x0);
        gbc.writeMem(0x5f1f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd325);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0248
        gbc.setState(0x76a9, 0xb78c, 0x7640, 0xb7cd, 0x9a22, 0xc28a, 0x0, 0x0);
        gbc.writeMem(0x76a9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb78c);
        EXPECT(gbc.pc(), 0x76ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0249
        gbc.setState(0xb469, 0xaf69, 0x8bc0, 0x7142, 0x2640, 0x73c0, 0x0, 0x0);
        gbc.writeMem(0xb469, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaf69);
        EXPECT(gbc.pc(), 0xb46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb469), 0xcb);
        EXPECT(gbc.readMem(0xb46a), 0xa2);
        // CB A2 024A
        gbc.setState(0x627, 0x2637, 0xb320, 0xf4f2, 0x7fb6, 0xf021, 0x1, 0x0);
        gbc.writeMem(0x627, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2637);
        EXPECT(gbc.pc(), 0x629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 024B
        gbc.setState(0x3d8, 0x7968, 0xfde0, 0x7e15, 0x6be6, 0xd27f, 0x1, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7968);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 024C
        gbc.setState(0xd3a0, 0xca1e, 0x1080, 0xdfbc, 0x9525, 0x5228, 0x1, 0x1);
        gbc.writeMem(0xd3a0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xca1e);
        EXPECT(gbc.pc(), 0xd3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a0), 0xcb);
        EXPECT(gbc.readMem(0xd3a1), 0xa2);
        // CB A2 024D
        gbc.setState(0x81da, 0xc6f2, 0x8690, 0xb511, 0x58fd, 0x9d97, 0x0, 0x1);
        gbc.writeMem(0x81da, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x81dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81da), 0xcb);
        EXPECT(gbc.readMem(0x81db), 0xa2);
        // CB A2 024E
        gbc.setState(0xc6cb, 0x294f, 0xdb80, 0xa216, 0x543c, 0x2cd1, 0x1, 0x0);
        gbc.writeMem(0xc6cb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x294f);
        EXPECT(gbc.pc(), 0xc6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cb), 0xcb);
        EXPECT(gbc.readMem(0xc6cc), 0xa2);
        // CB A2 024F
        gbc.setState(0x9ad7, 0x9768, 0x1260, 0x35a4, 0xfbe9, 0x9a4f, 0x1, 0x0);
        gbc.writeMem(0x9ad7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9768);
        EXPECT(gbc.pc(), 0x9ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad7), 0xcb);
        EXPECT(gbc.readMem(0x9ad8), 0xa2);
        // CB A2 0250
        gbc.setState(0x559c, 0xc8e, 0x3840, 0xab06, 0xb512, 0xe99d, 0x0, 0x1);
        gbc.writeMem(0x559c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc8e);
        EXPECT(gbc.pc(), 0x559e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0251
        gbc.setState(0x2434, 0xf0ad, 0xe020, 0xb05e, 0x909d, 0xae8d, 0x1, 0x0);
        gbc.writeMem(0x2434, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf0ad);
        EXPECT(gbc.pc(), 0x2436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0252
        gbc.setState(0x2fd6, 0xbb6, 0x8030, 0x6e87, 0xf522, 0x50bc, 0x0, 0x1);
        gbc.writeMem(0x2fd6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbb6);
        EXPECT(gbc.pc(), 0x2fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0253
        gbc.setState(0x3b74, 0x59d3, 0x8bd0, 0x3cf, 0xeb21, 0xf0a7, 0x1, 0x1);
        gbc.writeMem(0x3b74, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x59d3);
        EXPECT(gbc.pc(), 0x3b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0254
        gbc.setState(0x9e35, 0x5100, 0x60e0, 0x7ed4, 0x1d5c, 0xedf, 0x0, 0x1);
        gbc.writeMem(0x9e35, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0x9e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e35), 0xcb);
        EXPECT(gbc.readMem(0x9e36), 0xa2);
        // CB A2 0255
        gbc.setState(0x626c, 0x695f, 0xf860, 0x2fab, 0x7ab4, 0x69bf, 0x0, 0x0);
        gbc.writeMem(0x626c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0x626e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0256
        gbc.setState(0x41cd, 0x1d83, 0x15b0, 0xb5c, 0x47e0, 0x8145, 0x0, 0x0);
        gbc.writeMem(0x41cd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1d83);
        EXPECT(gbc.pc(), 0x41cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0257
        gbc.setState(0xbb75, 0x976f, 0x8170, 0x725e, 0xbbef, 0xd535, 0x0, 0x0);
        gbc.writeMem(0xbb75, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x976f);
        EXPECT(gbc.pc(), 0xbb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb75), 0xcb);
        EXPECT(gbc.readMem(0xbb76), 0xa2);
        // CB A2 0258
        gbc.setState(0xb273, 0x7814, 0x6250, 0x173d, 0xf08e, 0x5a9f, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7814);
        EXPECT(gbc.pc(), 0xb275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb273), 0xcb);
        EXPECT(gbc.readMem(0xb274), 0xa2);
        // CB A2 0259
        gbc.setState(0x2277, 0x1af7, 0x510, 0xe0f9, 0xb680, 0x63b1, 0x1, 0x0);
        gbc.writeMem(0x2277, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1af7);
        EXPECT(gbc.pc(), 0x2279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 025A
        gbc.setState(0xdda9, 0x11e3, 0xbcf0, 0xa23f, 0x6289, 0xe23b, 0x0, 0x0);
        gbc.writeMem(0xdda9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x11e3);
        EXPECT(gbc.pc(), 0xddab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda9), 0xcb);
        EXPECT(gbc.readMem(0xddaa), 0xa2);
        // CB A2 025C
        gbc.setState(0xb561, 0xb107, 0x3440, 0xc2de, 0xedd6, 0x670d, 0x0, 0x1);
        gbc.writeMem(0xb561, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb107);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb561), 0xcb);
        EXPECT(gbc.readMem(0xb562), 0xa2);
        // CB A2 025D
        gbc.setState(0x4d45, 0xb92e, 0xecd0, 0xa862, 0x3c5, 0x75ec, 0x1, 0x1);
        gbc.writeMem(0x4d45, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb92e);
        EXPECT(gbc.pc(), 0x4d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 025E
        gbc.setState(0xfad, 0xc4a1, 0x4030, 0x8b5b, 0x42a0, 0x990d, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc4a1);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 025F
        gbc.setState(0x2236, 0x152c, 0xf290, 0xd6d5, 0x663e, 0x4a90, 0x1, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x152c);
        EXPECT(gbc.pc(), 0x2238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0260
        gbc.setState(0x2ad7, 0x4129, 0x4750, 0x5262, 0xf8a9, 0xacb0, 0x0, 0x0);
        gbc.writeMem(0x2ad7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4129);
        EXPECT(gbc.pc(), 0x2ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0261
        gbc.setState(0xd7e8, 0x9148, 0xc90, 0xad8, 0x94ed, 0x6c06, 0x1, 0x1);
        gbc.writeMem(0xd7e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9148);
        EXPECT(gbc.pc(), 0xd7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e8), 0xcb);
        EXPECT(gbc.readMem(0xd7e9), 0xa2);
        // CB A2 0262
        gbc.setState(0x46fe, 0xcf4, 0xa70, 0x3e2f, 0xdd9, 0x9268, 0x0, 0x0);
        gbc.writeMem(0x46fe, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcf4);
        EXPECT(gbc.pc(), 0x4700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0263
        gbc.setState(0xad70, 0xbd17, 0x3560, 0xa6b9, 0x8cdb, 0xb2d1, 0x1, 0x1);
        gbc.writeMem(0xad70, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbd17);
        EXPECT(gbc.pc(), 0xad72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad70), 0xcb);
        EXPECT(gbc.readMem(0xad71), 0xa2);
        // CB A2 0264
        gbc.setState(0x7514, 0xb522, 0x3410, 0x1f0b, 0x41c3, 0x11c, 0x1, 0x0);
        gbc.writeMem(0x7514, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb522);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0266
        gbc.setState(0xab1e, 0xd505, 0xa010, 0x7277, 0x33ba, 0x5624, 0x0, 0x0);
        gbc.writeMem(0xab1e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd505);
        EXPECT(gbc.pc(), 0xab20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1e), 0xcb);
        EXPECT(gbc.readMem(0xab1f), 0xa2);
        // CB A2 0267
        gbc.setState(0x3c00, 0x694a, 0x9de0, 0x1a83, 0x3c09, 0x7552, 0x1, 0x1);
        gbc.writeMem(0x3c00, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x694a);
        EXPECT(gbc.pc(), 0x3c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0268
        gbc.setState(0x3fde, 0x8594, 0xbc30, 0x4aa, 0x3f38, 0xe7bf, 0x1, 0x0);
        gbc.writeMem(0x3fde, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8594);
        EXPECT(gbc.pc(), 0x3fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0269
        gbc.setState(0x4c2, 0x9166, 0xb970, 0x2a4b, 0x2fd0, 0x96ad, 0x0, 0x1);
        gbc.writeMem(0x4c2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9166);
        EXPECT(gbc.pc(), 0x4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 026A
        gbc.setState(0x131c, 0x489b, 0xaad0, 0x136e, 0x76e, 0x29c0, 0x0, 0x0);
        gbc.writeMem(0x131c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x489b);
        EXPECT(gbc.pc(), 0x131e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 026B
        gbc.setState(0x8373, 0x5861, 0x3f20, 0xed2c, 0x68e7, 0x3beb, 0x1, 0x1);
        gbc.writeMem(0x8373, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5861);
        EXPECT(gbc.pc(), 0x8375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8373), 0xcb);
        EXPECT(gbc.readMem(0x8374), 0xa2);
        // CB A2 026C
        gbc.setState(0x250c, 0x156, 0xee00, 0x5349, 0xa653, 0x1c11, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x156);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 026D
        gbc.setState(0xdb2e, 0x151b, 0xd890, 0xaa16, 0x1361, 0x9094, 0x1, 0x1);
        gbc.writeMem(0xdb2e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x151b);
        EXPECT(gbc.pc(), 0xdb30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2e), 0xcb);
        EXPECT(gbc.readMem(0xdb2f), 0xa2);
        // CB A2 026E
        gbc.setState(0x527f, 0x2163, 0x9750, 0xfb, 0x8b75, 0x87e, 0x0, 0x1);
        gbc.writeMem(0x527f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2163);
        EXPECT(gbc.pc(), 0x5281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 026F
        gbc.setState(0x5ddc, 0xfe06, 0xa7f0, 0x1248, 0xa941, 0xaf37, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0x5dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0270
        gbc.setState(0x9426, 0xcd95, 0x8b80, 0xaf81, 0x7e8f, 0x3438, 0x1, 0x0);
        gbc.writeMem(0x9426, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcd95);
        EXPECT(gbc.pc(), 0x9428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9426), 0xcb);
        EXPECT(gbc.readMem(0x9427), 0xa2);
        // CB A2 0271
        gbc.setState(0xa3f5, 0x8e8b, 0x89e0, 0x5e3c, 0xdb60, 0x37d9, 0x0, 0x1);
        gbc.writeMem(0xa3f5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8e8b);
        EXPECT(gbc.pc(), 0xa3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f5), 0xcb);
        EXPECT(gbc.readMem(0xa3f6), 0xa2);
        // CB A2 0272
        gbc.setState(0xd5b0, 0x5797, 0xff30, 0x949e, 0xe68f, 0x90a0, 0x1, 0x0);
        gbc.writeMem(0xd5b0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5797);
        EXPECT(gbc.pc(), 0xd5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b0), 0xcb);
        EXPECT(gbc.readMem(0xd5b1), 0xa2);
        // CB A2 0273
        gbc.setState(0x8a4b, 0x76f1, 0x540, 0xec79, 0xb6ec, 0xb6ab, 0x1, 0x1);
        gbc.writeMem(0x8a4b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x76f1);
        EXPECT(gbc.pc(), 0x8a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4b), 0xcb);
        EXPECT(gbc.readMem(0x8a4c), 0xa2);
        // CB A2 0274
        gbc.setState(0x9df2, 0x1baa, 0x4c70, 0xc43, 0xf70b, 0x4569, 0x0, 0x1);
        gbc.writeMem(0x9df2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1baa);
        EXPECT(gbc.pc(), 0x9df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df2), 0xcb);
        EXPECT(gbc.readMem(0x9df3), 0xa2);
        // CB A2 0275
        gbc.setState(0x235c, 0xac6b, 0xbd20, 0x566e, 0x3bbc, 0x4881, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xac6b);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0276
        gbc.setState(0x93bd, 0xed06, 0xb9a0, 0x3acc, 0xd317, 0xef35, 0x0, 0x1);
        gbc.writeMem(0x93bd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xed06);
        EXPECT(gbc.pc(), 0x93bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bd), 0xcb);
        EXPECT(gbc.readMem(0x93be), 0xa2);
        // CB A2 0277
        gbc.setState(0x6fbd, 0x55cb, 0xc0c0, 0x7684, 0x63ca, 0x2f1c, 0x0, 0x0);
        gbc.writeMem(0x6fbd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x55cb);
        EXPECT(gbc.pc(), 0x6fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0279
        gbc.setState(0xca64, 0xbb31, 0xb660, 0x6035, 0x6bbb, 0x985e, 0x1, 0x0);
        gbc.writeMem(0xca64, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbb31);
        EXPECT(gbc.pc(), 0xca66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca64), 0xcb);
        EXPECT(gbc.readMem(0xca65), 0xa2);
        // CB A2 027A
        gbc.setState(0x6606, 0x83af, 0x6590, 0x4842, 0xe087, 0xdced, 0x1, 0x1);
        gbc.writeMem(0x6606, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x83af);
        EXPECT(gbc.pc(), 0x6608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 027B
        gbc.setState(0x6911, 0x95f9, 0xc7f0, 0x12de, 0x4194, 0xbe56, 0x0, 0x0);
        gbc.writeMem(0x6911, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x95f9);
        EXPECT(gbc.pc(), 0x6913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 027C
        gbc.setState(0xa88e, 0x8b2, 0x72b0, 0x1ed1, 0x850d, 0x9505, 0x1, 0x0);
        gbc.writeMem(0xa88e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8b2);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88e), 0xcb);
        EXPECT(gbc.readMem(0xa88f), 0xa2);
        // CB A2 027D
        gbc.setState(0x9f7, 0x5cfe, 0x9c10, 0xba4f, 0x2d6f, 0xc826, 0x1, 0x0);
        gbc.writeMem(0x9f7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5cfe);
        EXPECT(gbc.pc(), 0x9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 027E
        gbc.setState(0x90c3, 0xc607, 0x9f10, 0xa21c, 0xa82e, 0xaf5a, 0x0, 0x0);
        gbc.writeMem(0x90c3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc607);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c3), 0xcb);
        EXPECT(gbc.readMem(0x90c4), 0xa2);
        // CB A2 027F
        gbc.setState(0xd786, 0x8b9d, 0xe7a0, 0x9b02, 0xa039, 0x81f4, 0x0, 0x0);
        gbc.writeMem(0xd786, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8b9d);
        EXPECT(gbc.pc(), 0xd788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd786), 0xcb);
        EXPECT(gbc.readMem(0xd787), 0xa2);
        // CB A2 0280
        gbc.setState(0x3cc2, 0x5c4a, 0xc730, 0x35fb, 0xfa26, 0xf673, 0x0, 0x1);
        gbc.writeMem(0x3cc2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5c4a);
        EXPECT(gbc.pc(), 0x3cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0281
        gbc.setState(0xd04b, 0xc7b9, 0x2fa0, 0xbcff, 0xc327, 0x7c0c, 0x1, 0x0);
        gbc.writeMem(0xd04b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc7b9);
        EXPECT(gbc.pc(), 0xd04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04b), 0xcb);
        EXPECT(gbc.readMem(0xd04c), 0xa2);
        // CB A2 0282
        gbc.setState(0xea56, 0x4a8c, 0x5460, 0x775b, 0x7fa1, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0xea56, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4a8c);
        EXPECT(gbc.pc(), 0xea58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea56), 0xcb);
        EXPECT(gbc.readMem(0xea57), 0xa2);
        // CB A2 0283
        gbc.setState(0x392d, 0xa09e, 0x9e90, 0x911c, 0x3e34, 0x43bf, 0x0, 0x0);
        gbc.writeMem(0x392d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa09e);
        EXPECT(gbc.pc(), 0x392f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0284
        gbc.setState(0xd009, 0xa937, 0xcdc0, 0xed83, 0x8686, 0x5862, 0x1, 0x1);
        gbc.writeMem(0xd009, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa937);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0xa2);
        // CB A2 0285
        gbc.setState(0xc28e, 0xe5df, 0xf1e0, 0xa04d, 0x6d41, 0xfc97, 0x1, 0x0);
        gbc.writeMem(0xc28e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe5df);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28e), 0xcb);
        EXPECT(gbc.readMem(0xc28f), 0xa2);
        // CB A2 0286
        gbc.setState(0xb93f, 0x709b, 0xa480, 0x78cb, 0x9326, 0xf406, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x709b);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93f), 0xcb);
        EXPECT(gbc.readMem(0xb940), 0xa2);
        // CB A2 0287
        gbc.setState(0x3056, 0x811c, 0x2510, 0xe426, 0xe804, 0x25bd, 0x1, 0x0);
        gbc.writeMem(0x3056, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0x3058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0288
        gbc.setState(0x22da, 0x684d, 0xae50, 0xbac9, 0x9561, 0xf69b, 0x0, 0x0);
        gbc.writeMem(0x22da, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x684d);
        EXPECT(gbc.pc(), 0x22dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0289
        gbc.setState(0xe727, 0xeafe, 0xe550, 0x92a0, 0x7985, 0xcf87, 0x1, 0x1);
        gbc.writeMem(0xe727, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xeafe);
        EXPECT(gbc.pc(), 0xe729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe727), 0xcb);
        EXPECT(gbc.readMem(0xe728), 0xa2);
        // CB A2 028A
        gbc.setState(0xa424, 0x30c1, 0x2550, 0xde04, 0xc0d5, 0x619d, 0x0, 0x1);
        gbc.writeMem(0xa424, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x30c1);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa424), 0xcb);
        EXPECT(gbc.readMem(0xa425), 0xa2);
        // CB A2 028B
        gbc.setState(0x3310, 0xbc1a, 0xf0d0, 0x2e2e, 0xbe9b, 0xcf09, 0x1, 0x1);
        gbc.writeMem(0x3310, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbc1a);
        EXPECT(gbc.pc(), 0x3312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 028C
        gbc.setState(0x3dd6, 0x6d97, 0xf080, 0x461b, 0x6712, 0xc1fe, 0x0, 0x1);
        gbc.writeMem(0x3dd6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d97);
        EXPECT(gbc.pc(), 0x3dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 028D
        gbc.setState(0xf56, 0xca85, 0x2730, 0xd3ce, 0x2f50, 0xa20, 0x1, 0x1);
        gbc.writeMem(0xf56, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xca85);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 028E
        gbc.setState(0xd9ec, 0xbf71, 0xa5a0, 0x16f5, 0x9484, 0x7561, 0x1, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbf71);
        EXPECT(gbc.pc(), 0xd9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ec), 0xcb);
        EXPECT(gbc.readMem(0xd9ed), 0xa2);
        // CB A2 028F
        gbc.setState(0x5f31, 0xa317, 0x2790, 0xcaf8, 0x1429, 0x90d1, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0x5f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0290
        gbc.setState(0xa4e, 0xe283, 0xa600, 0xb4fe, 0xb694, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0xa4e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe283);
        EXPECT(gbc.pc(), 0xa50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0291
        gbc.setState(0xb031, 0x9c32, 0x4410, 0xc9e4, 0xa35a, 0x25ca, 0x1, 0x0);
        gbc.writeMem(0xb031, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9c32);
        EXPECT(gbc.pc(), 0xb033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb031), 0xcb);
        EXPECT(gbc.readMem(0xb032), 0xa2);
        // CB A2 0292
        gbc.setState(0xe0ec, 0xc9ac, 0x9570, 0xee6d, 0xeecf, 0x8977, 0x1, 0x1);
        gbc.writeMem(0xe0ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9ac);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ec), 0xcb);
        EXPECT(gbc.readMem(0xe0ed), 0xa2);
        // CB A2 0293
        gbc.setState(0xd665, 0xc6be, 0xf580, 0x5ea8, 0x464b, 0xb76, 0x0, 0x1);
        gbc.writeMem(0xd665, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc6be);
        EXPECT(gbc.pc(), 0xd667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd665), 0xcb);
        EXPECT(gbc.readMem(0xd666), 0xa2);
        // CB A2 0294
        gbc.setState(0x1917, 0x71a2, 0xcbf0, 0x6626, 0x1a42, 0x886f, 0x0, 0x1);
        gbc.writeMem(0x1917, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x71a2);
        EXPECT(gbc.pc(), 0x1919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0295
        gbc.setState(0x962a, 0xcb68, 0x61e0, 0xe201, 0xdb4c, 0xa95c, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcb68);
        EXPECT(gbc.pc(), 0x962c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962a), 0xcb);
        EXPECT(gbc.readMem(0x962b), 0xa2);
        // CB A2 0296
        gbc.setState(0x8145, 0xb86f, 0x3570, 0xc560, 0xe6a8, 0xf089, 0x1, 0x0);
        gbc.writeMem(0x8145, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb86f);
        EXPECT(gbc.pc(), 0x8147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8145), 0xcb);
        EXPECT(gbc.readMem(0x8146), 0xa2);
        // CB A2 0297
        gbc.setState(0x60d4, 0xa230, 0x3f60, 0xb1b2, 0x978e, 0x9c44, 0x1, 0x1);
        gbc.writeMem(0x60d4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0x60d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0298
        gbc.setState(0xa4eb, 0xde7c, 0xbc10, 0xc938, 0x882a, 0x4c41, 0x0, 0x0);
        gbc.writeMem(0xa4eb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0xa4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4eb), 0xcb);
        EXPECT(gbc.readMem(0xa4ec), 0xa2);
        // CB A2 0299
        gbc.setState(0x8ab, 0xd372, 0x9000, 0xa809, 0xd8bb, 0x5b29, 0x0, 0x0);
        gbc.writeMem(0x8ab, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd372);
        EXPECT(gbc.pc(), 0x8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 029A
        gbc.setState(0xdd40, 0x810f, 0xadb0, 0x8a36, 0x86d9, 0x7ad4, 0x0, 0x0);
        gbc.writeMem(0xdd40, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x810f);
        EXPECT(gbc.pc(), 0xdd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd40), 0xcb);
        EXPECT(gbc.readMem(0xdd41), 0xa2);
        // CB A2 029B
        gbc.setState(0xb62b, 0x5467, 0xb130, 0xf8f, 0x55d9, 0x4bb3, 0x1, 0x1);
        gbc.writeMem(0xb62b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5467);
        EXPECT(gbc.pc(), 0xb62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62b), 0xcb);
        EXPECT(gbc.readMem(0xb62c), 0xa2);
        // CB A2 029C
        gbc.setState(0xe719, 0x7ffc, 0x570, 0x1200, 0x2988, 0x991a, 0x1, 0x0);
        gbc.writeMem(0xe719, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7ffc);
        EXPECT(gbc.pc(), 0xe71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe719), 0xcb);
        EXPECT(gbc.readMem(0xe71a), 0xa2);
        // CB A2 029D
        gbc.setState(0x5c16, 0xb6e, 0x3340, 0xb697, 0x3b67, 0x2fdc, 0x0, 0x1);
        gbc.writeMem(0x5c16, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb6e);
        EXPECT(gbc.pc(), 0x5c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 029E
        gbc.setState(0xc685, 0xabb0, 0xd860, 0x5d9c, 0x9148, 0x5c9a, 0x0, 0x0);
        gbc.writeMem(0xc685, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xabb0);
        EXPECT(gbc.pc(), 0xc687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc685), 0xcb);
        EXPECT(gbc.readMem(0xc686), 0xa2);
        // CB A2 029F
        gbc.setState(0x3daa, 0x9b1e, 0xa7a0, 0xaea0, 0x8ce9, 0x5a6a, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9b1e);
        EXPECT(gbc.pc(), 0x3dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02A0
        gbc.setState(0x1f2, 0x9e92, 0xb330, 0x577, 0xa359, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0x1f2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9e92);
        EXPECT(gbc.pc(), 0x1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02A1
        gbc.setState(0xa162, 0x6cfe, 0x46a0, 0x93ec, 0x3872, 0x3244, 0x0, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6cfe);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0xa2);
        // CB A2 02A2
        gbc.setState(0x2cd9, 0x6683, 0x4aa0, 0xcb88, 0x5eae, 0xc357, 0x1, 0x1);
        gbc.writeMem(0x2cd9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6683);
        EXPECT(gbc.pc(), 0x2cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02A3
        gbc.setState(0x5b65, 0x2591, 0x5760, 0x556, 0x23b4, 0x4260, 0x1, 0x0);
        gbc.writeMem(0x5b65, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2591);
        EXPECT(gbc.pc(), 0x5b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02A4
        gbc.setState(0x3e9b, 0xb6f2, 0xf10, 0xce5c, 0x8f38, 0xc93e, 0x1, 0x1);
        gbc.writeMem(0x3e9b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb6f2);
        EXPECT(gbc.pc(), 0x3e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02A5
        gbc.setState(0x5cd4, 0xc538, 0x7590, 0xcc53, 0x4622, 0x4228, 0x1, 0x1);
        gbc.writeMem(0x5cd4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc538);
        EXPECT(gbc.pc(), 0x5cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02A6
        gbc.setState(0xa570, 0xd23b, 0x1c10, 0x9e84, 0x9255, 0x6dd0, 0x0, 0x0);
        gbc.writeMem(0xa570, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd23b);
        EXPECT(gbc.pc(), 0xa572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa570), 0xcb);
        EXPECT(gbc.readMem(0xa571), 0xa2);
        // CB A2 02A7
        gbc.setState(0x452e, 0xda4a, 0xcbf0, 0x4c66, 0xbedb, 0x72c, 0x0, 0x1);
        gbc.writeMem(0x452e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xda4a);
        EXPECT(gbc.pc(), 0x4530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02A8
        gbc.setState(0x9192, 0xbb2c, 0x5020, 0xbecc, 0x10f4, 0x786, 0x1, 0x0);
        gbc.writeMem(0x9192, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbb2c);
        EXPECT(gbc.pc(), 0x9194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9192), 0xcb);
        EXPECT(gbc.readMem(0x9193), 0xa2);
        // CB A2 02A9
        gbc.setState(0x712d, 0x573b, 0x9b20, 0x9dbd, 0x63c7, 0x8f4, 0x1, 0x1);
        gbc.writeMem(0x712d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x573b);
        EXPECT(gbc.pc(), 0x712f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02AB
        gbc.setState(0x50ad, 0x7cde, 0x3ce0, 0x2fab, 0xf539, 0x6c12, 0x1, 0x0);
        gbc.writeMem(0x50ad, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7cde);
        EXPECT(gbc.pc(), 0x50af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02AC
        gbc.setState(0x6f4d, 0xe308, 0xd8f0, 0x5080, 0x4a84, 0x9fe0, 0x1, 0x1);
        gbc.writeMem(0x6f4d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe308);
        EXPECT(gbc.pc(), 0x6f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02AD
        gbc.setState(0x9c83, 0xec71, 0xa8b0, 0xac66, 0x59b6, 0xb0c5, 0x1, 0x0);
        gbc.writeMem(0x9c83, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xec71);
        EXPECT(gbc.pc(), 0x9c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c83), 0xcb);
        EXPECT(gbc.readMem(0x9c84), 0xa2);
        // CB A2 02AE
        gbc.setState(0x5ea1, 0xf576, 0x7f20, 0xf1b2, 0x213e, 0x24f2, 0x1, 0x0);
        gbc.writeMem(0x5ea1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf576);
        EXPECT(gbc.pc(), 0x5ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02AF
        gbc.setState(0x8bd6, 0x98a8, 0x5de0, 0x197d, 0xc2b6, 0xb6b1, 0x1, 0x0);
        gbc.writeMem(0x8bd6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x98a8);
        EXPECT(gbc.pc(), 0x8bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd6), 0xcb);
        EXPECT(gbc.readMem(0x8bd7), 0xa2);
        // CB A2 02B0
        gbc.setState(0xc992, 0xc75, 0x8d00, 0xa3dd, 0x9923, 0x25f7, 0x1, 0x0);
        gbc.writeMem(0xc992, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc992), 0xcb);
        EXPECT(gbc.readMem(0xc993), 0xa2);
        // CB A2 02B1
        gbc.setState(0xb76, 0x113d, 0x1bf0, 0x5535, 0x9338, 0x6242, 0x0, 0x0);
        gbc.writeMem(0xb76, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0xb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02B2
        gbc.setState(0x7607, 0x364c, 0xbae0, 0xf591, 0x26bb, 0x1237, 0x1, 0x0);
        gbc.writeMem(0x7607, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x364c);
        EXPECT(gbc.pc(), 0x7609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02B3
        gbc.setState(0x1ed5, 0x2ee5, 0xf330, 0xecbc, 0x9dff, 0x814f, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2ee5);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02B4
        gbc.setState(0x52, 0x8f96, 0xeb60, 0x5d70, 0xee0c, 0x129c, 0x0, 0x1);
        gbc.writeMem(0x52, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02B5
        gbc.setState(0x13f8, 0x8c12, 0xcac0, 0xe053, 0x69e2, 0xa94, 0x0, 0x0);
        gbc.writeMem(0x13f8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8c12);
        EXPECT(gbc.pc(), 0x13fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02B6
        gbc.setState(0x7872, 0xc2cf, 0x2f00, 0xd3e7, 0x489b, 0x354c, 0x0, 0x0);
        gbc.writeMem(0x7872, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc2cf);
        EXPECT(gbc.pc(), 0x7874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02B8
        gbc.setState(0xc4a5, 0x9d45, 0x4ac0, 0x706a, 0xf1e1, 0xccf8, 0x0, 0x1);
        gbc.writeMem(0xc4a5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9d45);
        EXPECT(gbc.pc(), 0xc4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a5), 0xcb);
        EXPECT(gbc.readMem(0xc4a6), 0xa2);
        // CB A2 02B9
        gbc.setState(0x59e8, 0x8086, 0x5270, 0x5539, 0xfe39, 0xd5cf, 0x1, 0x1);
        gbc.writeMem(0x59e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8086);
        EXPECT(gbc.pc(), 0x59ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02BA
        gbc.setState(0x5ca3, 0x1bf2, 0x4190, 0xd134, 0x6b70, 0x26c7, 0x1, 0x0);
        gbc.writeMem(0x5ca3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1bf2);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02BB
        gbc.setState(0x532c, 0xda5f, 0x2a50, 0xb6a1, 0xe6f5, 0x27c3, 0x0, 0x1);
        gbc.writeMem(0x532c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xda5f);
        EXPECT(gbc.pc(), 0x532e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02BC
        gbc.setState(0x2db, 0xf032, 0xafe0, 0xb397, 0x29a0, 0x9e72, 0x0, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf032);
        EXPECT(gbc.pc(), 0x2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02BD
        gbc.setState(0xa49a, 0x57c3, 0x3d80, 0x1f99, 0x797e, 0x82c6, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x57c3);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0xa2);
        // CB A2 02BE
        gbc.setState(0xeda5, 0x62a1, 0x8080, 0x440e, 0x7abf, 0x79be, 0x0, 0x1);
        gbc.writeMem(0xeda5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x62a1);
        EXPECT(gbc.pc(), 0xeda7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda5), 0xcb);
        EXPECT(gbc.readMem(0xeda6), 0xa2);
        // CB A2 02BF
        gbc.setState(0xa5d4, 0x8069, 0x1f50, 0x806a, 0x9633, 0xdc56, 0x0, 0x1);
        gbc.writeMem(0xa5d4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8069);
        EXPECT(gbc.pc(), 0xa5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d4), 0xcb);
        EXPECT(gbc.readMem(0xa5d5), 0xa2);
        // CB A2 02C1
        gbc.setState(0x26ae, 0x6884, 0x5170, 0x9a05, 0x4cd5, 0x60e, 0x1, 0x0);
        gbc.writeMem(0x26ae, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6884);
        EXPECT(gbc.pc(), 0x26b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02C2
        gbc.setState(0xc3ab, 0x11e2, 0x1c20, 0xd00c, 0x8997, 0x2ba2, 0x0, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x11e2);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ab), 0xcb);
        EXPECT(gbc.readMem(0xc3ac), 0xa2);
        // CB A2 02C3
        gbc.setState(0x639f, 0x436c, 0x9e10, 0x8061, 0xcf25, 0x758e, 0x1, 0x1);
        gbc.writeMem(0x639f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x436c);
        EXPECT(gbc.pc(), 0x63a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02C4
        gbc.setState(0x8757, 0xb458, 0xf980, 0x8531, 0xf7b0, 0x67ea, 0x0, 0x1);
        gbc.writeMem(0x8757, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb458);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8757), 0xcb);
        EXPECT(gbc.readMem(0x8758), 0xa2);
        // CB A2 02C5
        gbc.setState(0xbf36, 0xc854, 0xe7e0, 0x31a0, 0x756c, 0xafb2, 0x0, 0x0);
        gbc.writeMem(0xbf36, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc854);
        EXPECT(gbc.pc(), 0xbf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf36), 0xcb);
        EXPECT(gbc.readMem(0xbf37), 0xa2);
        // CB A2 02C6
        gbc.setState(0x1245, 0x911a, 0xe8b0, 0xf525, 0x2bed, 0x9f6c, 0x0, 0x0);
        gbc.writeMem(0x1245, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x911a);
        EXPECT(gbc.pc(), 0x1247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02C7
        gbc.setState(0xbc44, 0x5a95, 0x4110, 0x80d1, 0x805d, 0xcb6c, 0x0, 0x1);
        gbc.writeMem(0xbc44, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5a95);
        EXPECT(gbc.pc(), 0xbc46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc44), 0xcb);
        EXPECT(gbc.readMem(0xbc45), 0xa2);
        // CB A2 02C8
        gbc.setState(0xe3d0, 0x92dd, 0x4c30, 0xdd94, 0x6587, 0xdc8b, 0x0, 0x1);
        gbc.writeMem(0xe3d0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x92dd);
        EXPECT(gbc.pc(), 0xe3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d0), 0xcb);
        EXPECT(gbc.readMem(0xe3d1), 0xa2);
        // CB A2 02C9
        gbc.setState(0xe6fa, 0x1253, 0xa6d0, 0x4955, 0xef9e, 0xdfa6, 0x0, 0x1);
        gbc.writeMem(0xe6fa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1253);
        EXPECT(gbc.pc(), 0xe6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fa), 0xcb);
        EXPECT(gbc.readMem(0xe6fb), 0xa2);
        // CB A2 02CA
        gbc.setState(0x9c1f, 0x14c4, 0x19c0, 0x172, 0x9a5b, 0xa994, 0x1, 0x1);
        gbc.writeMem(0x9c1f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x14c4);
        EXPECT(gbc.pc(), 0x9c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1f), 0xcb);
        EXPECT(gbc.readMem(0x9c20), 0xa2);
        // CB A2 02CB
        gbc.setState(0xb686, 0x5ccb, 0x6a00, 0xeb8e, 0x3e0d, 0x3ec4, 0x1, 0x0);
        gbc.writeMem(0xb686, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5ccb);
        EXPECT(gbc.pc(), 0xb688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb686), 0xcb);
        EXPECT(gbc.readMem(0xb687), 0xa2);
        // CB A2 02CC
        gbc.setState(0xb634, 0x154b, 0xf240, 0xcc4e, 0x6faa, 0x923c, 0x1, 0x0);
        gbc.writeMem(0xb634, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x154b);
        EXPECT(gbc.pc(), 0xb636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb634), 0xcb);
        EXPECT(gbc.readMem(0xb635), 0xa2);
        // CB A2 02CD
        gbc.setState(0xc4da, 0x4e08, 0x2990, 0xf006, 0xfff6, 0xe4d6, 0x0, 0x0);
        gbc.writeMem(0xc4da, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4e08);
        EXPECT(gbc.pc(), 0xc4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4da), 0xcb);
        EXPECT(gbc.readMem(0xc4db), 0xa2);
        // CB A2 02CE
        gbc.setState(0x5af3, 0x7797, 0x4b0, 0xefff, 0xaa3b, 0xea7a, 0x0, 0x1);
        gbc.writeMem(0x5af3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7797);
        EXPECT(gbc.pc(), 0x5af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02CF
        gbc.setState(0x423e, 0xb9ef, 0x5350, 0xffd4, 0x4705, 0xe33a, 0x0, 0x0);
        gbc.writeMem(0x423e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb9ef);
        EXPECT(gbc.pc(), 0x4240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02D0
        gbc.setState(0x6ef1, 0xbbb3, 0xe210, 0xc161, 0x5c5c, 0x63ba, 0x0, 0x1);
        gbc.writeMem(0x6ef1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbbb3);
        EXPECT(gbc.pc(), 0x6ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02D1
        gbc.setState(0x9173, 0xc365, 0x730, 0x493a, 0x4850, 0x689e, 0x1, 0x1);
        gbc.writeMem(0x9173, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc365);
        EXPECT(gbc.pc(), 0x9175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9173), 0xcb);
        EXPECT(gbc.readMem(0x9174), 0xa2);
        // CB A2 02D2
        gbc.setState(0x8fea, 0x4a5, 0x9070, 0x6c0d, 0x43c, 0x28c3, 0x1, 0x1);
        gbc.writeMem(0x8fea, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4a5);
        EXPECT(gbc.pc(), 0x8fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fea), 0xcb);
        EXPECT(gbc.readMem(0x8feb), 0xa2);
        // CB A2 02D3
        gbc.setState(0x86cb, 0xf84f, 0xf830, 0x62a6, 0x834c, 0x4c68, 0x0, 0x1);
        gbc.writeMem(0x86cb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf84f);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cb), 0xcb);
        EXPECT(gbc.readMem(0x86cc), 0xa2);
        // CB A2 02D4
        gbc.setState(0x7985, 0x83ed, 0x8060, 0x6d13, 0x33f8, 0x90e8, 0x1, 0x1);
        gbc.writeMem(0x7985, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x83ed);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02D5
        gbc.setState(0x8914, 0x2cd0, 0x3580, 0xe762, 0x8a70, 0x2718, 0x1, 0x0);
        gbc.writeMem(0x8914, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2cd0);
        EXPECT(gbc.pc(), 0x8916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8914), 0xcb);
        EXPECT(gbc.readMem(0x8915), 0xa2);
        // CB A2 02D6
        gbc.setState(0x552, 0x86b5, 0x68d0, 0xfe81, 0xaa81, 0xa5b0, 0x1, 0x0);
        gbc.writeMem(0x552, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x86b5);
        EXPECT(gbc.pc(), 0x554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02D7
        gbc.setState(0x654b, 0x8286, 0x8f40, 0x1b41, 0xda38, 0x9fa, 0x0, 0x0);
        gbc.writeMem(0x654b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8286);
        EXPECT(gbc.pc(), 0x654d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02D8
        gbc.setState(0x1f2a, 0x1030, 0xe670, 0xf986, 0x5864, 0xb002, 0x0, 0x0);
        gbc.writeMem(0x1f2a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1030);
        EXPECT(gbc.pc(), 0x1f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02D9
        gbc.setState(0x1478, 0xd299, 0xdc60, 0xf74a, 0xf36, 0x8cda, 0x0, 0x0);
        gbc.writeMem(0x1478, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd299);
        EXPECT(gbc.pc(), 0x147a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02DA
        gbc.setState(0x9f53, 0xbbd9, 0x8df0, 0xe21e, 0xdda1, 0x1bdf, 0x0, 0x1);
        gbc.writeMem(0x9f53, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbbd9);
        EXPECT(gbc.pc(), 0x9f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f53), 0xcb);
        EXPECT(gbc.readMem(0x9f54), 0xa2);
        // CB A2 02DB
        gbc.setState(0xab67, 0x8b09, 0x75c0, 0xc4ce, 0x4d55, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0xab67, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8b09);
        EXPECT(gbc.pc(), 0xab69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab67), 0xcb);
        EXPECT(gbc.readMem(0xab68), 0xa2);
        // CB A2 02DC
        gbc.setState(0x5a1a, 0x4174, 0x9320, 0xef86, 0xcc1d, 0x42ef, 0x1, 0x1);
        gbc.writeMem(0x5a1a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4174);
        EXPECT(gbc.pc(), 0x5a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02DD
        gbc.setState(0xb9ae, 0x46b9, 0x95b0, 0x525e, 0xbed0, 0xceaf, 0x0, 0x0);
        gbc.writeMem(0xb9ae, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x46b9);
        EXPECT(gbc.pc(), 0xb9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ae), 0xcb);
        EXPECT(gbc.readMem(0xb9af), 0xa2);
        // CB A2 02DE
        gbc.setState(0x1337, 0x5bf0, 0x5b10, 0x4b42, 0xc555, 0x45ed, 0x0, 0x1);
        gbc.writeMem(0x1337, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5bf0);
        EXPECT(gbc.pc(), 0x1339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02DF
        gbc.setState(0xbb66, 0x7dc5, 0x7c0, 0x49e, 0x26e3, 0x8ba0, 0x1, 0x1);
        gbc.writeMem(0xbb66, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7dc5);
        EXPECT(gbc.pc(), 0xbb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb66), 0xcb);
        EXPECT(gbc.readMem(0xbb67), 0xa2);
        // CB A2 02E0
        gbc.setState(0x6647, 0x404b, 0x83d0, 0x4979, 0x90b0, 0x33a5, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x404b);
        EXPECT(gbc.pc(), 0x6649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02E2
        gbc.setState(0x9a70, 0xac9a, 0x8050, 0x99eb, 0x990b, 0x384b, 0x0, 0x0);
        gbc.writeMem(0x9a70, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xac9a);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a70), 0xcb);
        EXPECT(gbc.readMem(0x9a71), 0xa2);
        // CB A2 02E3
        gbc.setState(0x7821, 0x59e6, 0x6690, 0x7d36, 0x7df1, 0x111d, 0x0, 0x1);
        gbc.writeMem(0x7821, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x59e6);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02E4
        gbc.setState(0x3f84, 0x35ee, 0x4c80, 0x6e54, 0x50a8, 0x5f34, 0x1, 0x1);
        gbc.writeMem(0x3f84, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x35ee);
        EXPECT(gbc.pc(), 0x3f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02E5
        gbc.setState(0xdb9f, 0x43d0, 0xcaf0, 0x2c6d, 0x5b08, 0x44a1, 0x0, 0x0);
        gbc.writeMem(0xdb9f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x43d0);
        EXPECT(gbc.pc(), 0xdba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9f), 0xcb);
        EXPECT(gbc.readMem(0xdba0), 0xa2);
        // CB A2 02E6
        gbc.setState(0xc721, 0xa703, 0xf350, 0xf49a, 0xc21f, 0xe1a3, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa703);
        EXPECT(gbc.pc(), 0xc723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc721), 0xcb);
        EXPECT(gbc.readMem(0xc722), 0xa2);
        // CB A2 02E7
        gbc.setState(0x8229, 0xb0c3, 0x4490, 0x466, 0x599b, 0x1682, 0x1, 0x1);
        gbc.writeMem(0x8229, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb0c3);
        EXPECT(gbc.pc(), 0x822b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8229), 0xcb);
        EXPECT(gbc.readMem(0x822a), 0xa2);
        // CB A2 02E8
        gbc.setState(0x5069, 0x7f79, 0x5b90, 0x3831, 0xe997, 0x94b4, 0x0, 0x0);
        gbc.writeMem(0x5069, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7f79);
        EXPECT(gbc.pc(), 0x506b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02E9
        gbc.setState(0x19af, 0x9014, 0xcff0, 0xaa34, 0x118, 0xe024, 0x1, 0x0);
        gbc.writeMem(0x19af, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9014);
        EXPECT(gbc.pc(), 0x19b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02EA
        gbc.setState(0x48b, 0x2773, 0x8590, 0xf9c1, 0xeff, 0x5649, 0x1, 0x0);
        gbc.writeMem(0x48b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2773);
        EXPECT(gbc.pc(), 0x48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02EB
        gbc.setState(0xbff6, 0xa110, 0x6f50, 0xa196, 0x146f, 0x9457, 0x0, 0x0);
        gbc.writeMem(0xbff6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa110);
        EXPECT(gbc.pc(), 0xbff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff6), 0xcb);
        EXPECT(gbc.readMem(0xbff7), 0xa2);
        // CB A2 02EC
        gbc.setState(0xefef, 0x2f83, 0xdd0, 0xfd6d, 0x8813, 0xe53b, 0x1, 0x1);
        gbc.writeMem(0xefef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2f83);
        EXPECT(gbc.pc(), 0xeff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefef), 0xcb);
        EXPECT(gbc.readMem(0xeff0), 0xa2);
        // CB A2 02ED
        gbc.setState(0x3444, 0x2495, 0xea10, 0xb5b6, 0x691b, 0xa59a, 0x1, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2495);
        EXPECT(gbc.pc(), 0x3446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02EE
        gbc.setState(0x19da, 0xe38c, 0x7b50, 0xdcc0, 0xabb3, 0xb065, 0x1, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe38c);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02EF
        gbc.setState(0x519b, 0x5bc7, 0xfa50, 0x1c68, 0x694f, 0x5b74, 0x1, 0x1);
        gbc.writeMem(0x519b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5bc7);
        EXPECT(gbc.pc(), 0x519d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02F0
        gbc.setState(0x570c, 0xcb9a, 0xf1d0, 0x516a, 0x3807, 0x66d1, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0x570e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02F1
        gbc.setState(0xc02a, 0xbcbb, 0x88a0, 0xcd4f, 0xd382, 0x726c, 0x0, 0x0);
        gbc.writeMem(0xc02a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbcbb);
        EXPECT(gbc.pc(), 0xc02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02a), 0xcb);
        EXPECT(gbc.readMem(0xc02b), 0xa2);
        // CB A2 02F2
        gbc.setState(0x82cf, 0x91c8, 0x7410, 0xe6cd, 0x98ac, 0xcb6e, 0x1, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x91c8);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0xa2);
        // CB A2 02F3
        gbc.setState(0x3907, 0xf699, 0x8b20, 0xaaf0, 0x634a, 0x2162, 0x0, 0x0);
        gbc.writeMem(0x3907, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf699);
        EXPECT(gbc.pc(), 0x3909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02F4
        gbc.setState(0x2f43, 0x5c8, 0x66c0, 0xec18, 0xaf16, 0xf0a9, 0x0, 0x1);
        gbc.writeMem(0x2f43, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5c8);
        EXPECT(gbc.pc(), 0x2f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02F5
        gbc.setState(0x4118, 0x6e80, 0xbd70, 0xfa97, 0xb449, 0xa07c, 0x0, 0x0);
        gbc.writeMem(0x4118, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6e80);
        EXPECT(gbc.pc(), 0x411a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02F6
        gbc.setState(0xbc33, 0xd665, 0x2d20, 0x9d97, 0xc6b7, 0xda9d, 0x1, 0x0);
        gbc.writeMem(0xbc33, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd665);
        EXPECT(gbc.pc(), 0xbc35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc33), 0xcb);
        EXPECT(gbc.readMem(0xbc34), 0xa2);
        // CB A2 02F7
        gbc.setState(0x15fb, 0x3a96, 0x3300, 0xb4aa, 0xd18c, 0x65fc, 0x1, 0x1);
        gbc.writeMem(0x15fb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3a96);
        EXPECT(gbc.pc(), 0x15fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02F8
        gbc.setState(0x872b, 0x5b0d, 0x860, 0x4990, 0x9951, 0x87b2, 0x1, 0x0);
        gbc.writeMem(0x872b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5b0d);
        EXPECT(gbc.pc(), 0x872d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872b), 0xcb);
        EXPECT(gbc.readMem(0x872c), 0xa2);
        // CB A2 02F9
        gbc.setState(0x7bca, 0xd3a9, 0x2be0, 0x164c, 0xf465, 0xc351, 0x1, 0x1);
        gbc.writeMem(0x7bca, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd3a9);
        EXPECT(gbc.pc(), 0x7bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 02FA
        gbc.setState(0xcbac, 0x5758, 0x1370, 0xe454, 0x7, 0xa369, 0x0, 0x1);
        gbc.writeMem(0xcbac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5758);
        EXPECT(gbc.pc(), 0xcbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbac), 0xcb);
        EXPECT(gbc.readMem(0xcbad), 0xa2);
        // CB A2 02FB
        gbc.setState(0x28dd, 0x191b, 0xd850, 0xf601, 0x5c11, 0xa120, 0x1, 0x1);
        gbc.writeMem(0x28dd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x191b);
        EXPECT(gbc.pc(), 0x28df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02FC
        gbc.setState(0x86d8, 0xe5cf, 0x8440, 0xdce4, 0xe2f0, 0x5fec, 0x1, 0x1);
        gbc.writeMem(0x86d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe5cf);
        EXPECT(gbc.pc(), 0x86da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d8), 0xcb);
        EXPECT(gbc.readMem(0x86d9), 0xa2);
        // CB A2 02FD
        gbc.setState(0x746f, 0x90ca, 0x8770, 0x1dac, 0x278, 0xe428, 0x1, 0x1);
        gbc.writeMem(0x746f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x90ca);
        EXPECT(gbc.pc(), 0x7471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02FE
        gbc.setState(0x6176, 0x1348, 0xc0d0, 0xd2fb, 0xf19b, 0xc6b5, 0x1, 0x1);
        gbc.writeMem(0x6176, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1348);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 02FF
        gbc.setState(0x400b, 0x2fd, 0xea60, 0xd4ba, 0x1add, 0x4cee, 0x0, 0x0);
        gbc.writeMem(0x400b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2fd);
        EXPECT(gbc.pc(), 0x400d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0300
        gbc.setState(0xb1f8, 0xecbd, 0x430, 0x3078, 0xb87d, 0xcf1c, 0x0, 0x1);
        gbc.writeMem(0xb1f8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xecbd);
        EXPECT(gbc.pc(), 0xb1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f8), 0xcb);
        EXPECT(gbc.readMem(0xb1f9), 0xa2);
        // CB A2 0301
        gbc.setState(0xeceb, 0x63eb, 0xf870, 0x85c2, 0x59ca, 0x2ba6, 0x1, 0x0);
        gbc.writeMem(0xeceb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x63eb);
        EXPECT(gbc.pc(), 0xeced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeceb), 0xcb);
        EXPECT(gbc.readMem(0xecec), 0xa2);
        // CB A2 0302
        gbc.setState(0xb81e, 0xc50a, 0x5070, 0x1dee, 0x9e93, 0x4267, 0x1, 0x1);
        gbc.writeMem(0xb81e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0xb820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb81e), 0xcb);
        EXPECT(gbc.readMem(0xb81f), 0xa2);
        // CB A2 0303
        gbc.setState(0x8c66, 0x17cd, 0xc080, 0xa1cc, 0xd367, 0xd09b, 0x0, 0x1);
        gbc.writeMem(0x8c66, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x17cd);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c66), 0xcb);
        EXPECT(gbc.readMem(0x8c67), 0xa2);
        // CB A2 0304
        gbc.setState(0xa5ef, 0x91f3, 0xfa40, 0x893c, 0x79c2, 0xf5bf, 0x1, 0x1);
        gbc.writeMem(0xa5ef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x91f3);
        EXPECT(gbc.pc(), 0xa5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ef), 0xcb);
        EXPECT(gbc.readMem(0xa5f0), 0xa2);
        // CB A2 0305
        gbc.setState(0x2ae8, 0xa411, 0xebe0, 0x6d82, 0x883d, 0xa9ea, 0x0, 0x1);
        gbc.writeMem(0x2ae8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa411);
        EXPECT(gbc.pc(), 0x2aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0306
        gbc.setState(0xa04d, 0x8670, 0x1e40, 0xc468, 0x2428, 0xb3d9, 0x0, 0x0);
        gbc.writeMem(0xa04d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8670);
        EXPECT(gbc.pc(), 0xa04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04d), 0xcb);
        EXPECT(gbc.readMem(0xa04e), 0xa2);
        // CB A2 0307
        gbc.setState(0x96ef, 0xf24e, 0x3c80, 0x3a47, 0xbad2, 0x3b5e, 0x0, 0x0);
        gbc.writeMem(0x96ef, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf24e);
        EXPECT(gbc.pc(), 0x96f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ef), 0xcb);
        EXPECT(gbc.readMem(0x96f0), 0xa2);
        // CB A2 0308
        gbc.setState(0x9a1b, 0xa43, 0x2fc0, 0xde3b, 0x57f5, 0x46da, 0x1, 0x0);
        gbc.writeMem(0x9a1b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa43);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1b), 0xcb);
        EXPECT(gbc.readMem(0x9a1c), 0xa2);
        // CB A2 0309
        gbc.setState(0xba40, 0x3821, 0xfc60, 0xa98c, 0x5807, 0xc11c, 0x0, 0x1);
        gbc.writeMem(0xba40, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3821);
        EXPECT(gbc.pc(), 0xba42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba40), 0xcb);
        EXPECT(gbc.readMem(0xba41), 0xa2);
        // CB A2 030A
        gbc.setState(0x39bc, 0x18f5, 0xeee0, 0x6d7f, 0x8aa0, 0xa21, 0x0, 0x0);
        gbc.writeMem(0x39bc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x18f5);
        EXPECT(gbc.pc(), 0x39be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 030B
        gbc.setState(0x76b, 0x7838, 0x56f0, 0x53fa, 0x8570, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7838);
        EXPECT(gbc.pc(), 0x76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 030C
        gbc.setState(0xa979, 0x1408, 0xbb50, 0xd05a, 0xdbfe, 0x2af9, 0x0, 0x1);
        gbc.writeMem(0xa979, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1408);
        EXPECT(gbc.pc(), 0xa97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa979), 0xcb);
        EXPECT(gbc.readMem(0xa97a), 0xa2);
        // CB A2 030D
        gbc.setState(0x66a, 0x2089, 0x5760, 0x2fdf, 0xac07, 0x92de, 0x0, 0x1);
        gbc.writeMem(0x66a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2089);
        EXPECT(gbc.pc(), 0x66c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 030E
        gbc.setState(0xd905, 0xfefe, 0x9080, 0x74df, 0xe8e6, 0xaf2b, 0x0, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfefe);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0xa2);
        // CB A2 030F
        gbc.setState(0x69e1, 0x2585, 0x10c0, 0x4bc5, 0x5efa, 0xae48, 0x0, 0x0);
        gbc.writeMem(0x69e1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2585);
        EXPECT(gbc.pc(), 0x69e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0310
        gbc.setState(0x88b5, 0xbbf5, 0xfcd0, 0x373e, 0x8941, 0xdd71, 0x0, 0x0);
        gbc.writeMem(0x88b5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbbf5);
        EXPECT(gbc.pc(), 0x88b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b5), 0xcb);
        EXPECT(gbc.readMem(0x88b6), 0xa2);
        // CB A2 0311
        gbc.setState(0xa31f, 0x81c7, 0x4260, 0xb11, 0x4393, 0x3761, 0x1, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x81c7);
        EXPECT(gbc.pc(), 0xa321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31f), 0xcb);
        EXPECT(gbc.readMem(0xa320), 0xa2);
        // CB A2 0312
        gbc.setState(0xc18e, 0x143f, 0xbab0, 0x25fe, 0x8dcb, 0x8456, 0x0, 0x0);
        gbc.writeMem(0xc18e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0xc190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18e), 0xcb);
        EXPECT(gbc.readMem(0xc18f), 0xa2);
        // CB A2 0313
        gbc.setState(0xbb56, 0x420d, 0x5a30, 0xcc88, 0x9e01, 0x9720, 0x1, 0x0);
        gbc.writeMem(0xbb56, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x420d);
        EXPECT(gbc.pc(), 0xbb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb56), 0xcb);
        EXPECT(gbc.readMem(0xbb57), 0xa2);
        // CB A2 0314
        gbc.setState(0xdcb9, 0x4112, 0x5f20, 0xeda1, 0x5649, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0xdcb9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4112);
        EXPECT(gbc.pc(), 0xdcbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb9), 0xcb);
        EXPECT(gbc.readMem(0xdcba), 0xa2);
        // CB A2 0315
        gbc.setState(0xccda, 0x47f3, 0x4380, 0xf348, 0xbf16, 0x47bc, 0x1, 0x0);
        gbc.writeMem(0xccda, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x47f3);
        EXPECT(gbc.pc(), 0xccdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccda), 0xcb);
        EXPECT(gbc.readMem(0xccdb), 0xa2);
        // CB A2 0316
        gbc.setState(0x1671, 0xb5b1, 0x36a0, 0xf502, 0x137f, 0xad8e, 0x0, 0x0);
        gbc.writeMem(0x1671, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb5b1);
        EXPECT(gbc.pc(), 0x1673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0317
        gbc.setState(0x6a56, 0xddbf, 0x9a90, 0x5364, 0x2255, 0xa33c, 0x1, 0x1);
        gbc.writeMem(0x6a56, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xddbf);
        EXPECT(gbc.pc(), 0x6a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0318
        gbc.setState(0x2e31, 0x2f8e, 0x60c0, 0x606f, 0x11af, 0xc323, 0x1, 0x1);
        gbc.writeMem(0x2e31, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2f8e);
        EXPECT(gbc.pc(), 0x2e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 031A
        gbc.setState(0x3aab, 0x6378, 0x9020, 0x6bda, 0xb4b6, 0x28f7, 0x1, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6378);
        EXPECT(gbc.pc(), 0x3aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 031B
        gbc.setState(0x8b8d, 0xd939, 0xa7e0, 0xee30, 0xf745, 0x8cb7, 0x0, 0x0);
        gbc.writeMem(0x8b8d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd939);
        EXPECT(gbc.pc(), 0x8b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8d), 0xcb);
        EXPECT(gbc.readMem(0x8b8e), 0xa2);
        // CB A2 031C
        gbc.setState(0xb242, 0x4a4c, 0xbfa0, 0xb179, 0xaf64, 0x259e, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4a4c);
        EXPECT(gbc.pc(), 0xb244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb242), 0xcb);
        EXPECT(gbc.readMem(0xb243), 0xa2);
        // CB A2 031D
        gbc.setState(0x7de8, 0x5593, 0x7ce0, 0xbbe4, 0x3ea4, 0xe9bc, 0x1, 0x1);
        gbc.writeMem(0x7de8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5593);
        EXPECT(gbc.pc(), 0x7dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 031E
        gbc.setState(0xae1a, 0x43a3, 0xe130, 0x4e42, 0x7979, 0xd86, 0x1, 0x1);
        gbc.writeMem(0xae1a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x43a3);
        EXPECT(gbc.pc(), 0xae1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1a), 0xcb);
        EXPECT(gbc.readMem(0xae1b), 0xa2);
        // CB A2 031F
        gbc.setState(0xc229, 0x83c5, 0xe820, 0x69f3, 0x43c8, 0x11a1, 0x0, 0x1);
        gbc.writeMem(0xc229, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x83c5);
        EXPECT(gbc.pc(), 0xc22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc229), 0xcb);
        EXPECT(gbc.readMem(0xc22a), 0xa2);
        // CB A2 0320
        gbc.setState(0xc138, 0x72f7, 0xccd0, 0x86bd, 0x3113, 0x9f89, 0x1, 0x1);
        gbc.writeMem(0xc138, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x72f7);
        EXPECT(gbc.pc(), 0xc13a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc138), 0xcb);
        EXPECT(gbc.readMem(0xc139), 0xa2);
        // CB A2 0321
        gbc.setState(0x9bf5, 0x971b, 0xa7b0, 0xcc5e, 0x86c9, 0x587a, 0x0, 0x1);
        gbc.writeMem(0x9bf5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x971b);
        EXPECT(gbc.pc(), 0x9bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf5), 0xcb);
        EXPECT(gbc.readMem(0x9bf6), 0xa2);
        // CB A2 0322
        gbc.setState(0xa484, 0xb48a, 0xf180, 0xbf60, 0xa576, 0xc7a6, 0x0, 0x1);
        gbc.writeMem(0xa484, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0xa2);
        // CB A2 0323
        gbc.setState(0xb4a, 0x20a8, 0xc670, 0xb75e, 0x85ca, 0x3506, 0x1, 0x0);
        gbc.writeMem(0xb4a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0324
        gbc.setState(0x23e0, 0x94f8, 0x81f0, 0x74c8, 0x5c6a, 0x694d, 0x1, 0x0);
        gbc.writeMem(0x23e0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x94f8);
        EXPECT(gbc.pc(), 0x23e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0325
        gbc.setState(0xbfb5, 0x81c1, 0x6f90, 0xa0db, 0xdad9, 0x2027, 0x1, 0x1);
        gbc.writeMem(0xbfb5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x81c1);
        EXPECT(gbc.pc(), 0xbfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb5), 0xcb);
        EXPECT(gbc.readMem(0xbfb6), 0xa2);
        // CB A2 0326
        gbc.setState(0xec86, 0x4f92, 0xa250, 0x3b9a, 0xa0f0, 0x6640, 0x0, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4f92);
        EXPECT(gbc.pc(), 0xec88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec86), 0xcb);
        EXPECT(gbc.readMem(0xec87), 0xa2);
        // CB A2 0327
        gbc.setState(0x85ab, 0xcc3a, 0x4140, 0xe74a, 0x2974, 0xd5e, 0x1, 0x1);
        gbc.writeMem(0x85ab, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcc3a);
        EXPECT(gbc.pc(), 0x85ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ab), 0xcb);
        EXPECT(gbc.readMem(0x85ac), 0xa2);
        // CB A2 0328
        gbc.setState(0x826b, 0x72cd, 0x5c40, 0xe9a5, 0x6c2, 0x3c47, 0x0, 0x1);
        gbc.writeMem(0x826b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x72cd);
        EXPECT(gbc.pc(), 0x826d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826b), 0xcb);
        EXPECT(gbc.readMem(0x826c), 0xa2);
        // CB A2 0329
        gbc.setState(0x391, 0x2588, 0xc3c0, 0x9d51, 0x5c9b, 0x179b, 0x0, 0x0);
        gbc.writeMem(0x391, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2588);
        EXPECT(gbc.pc(), 0x393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 032A
        gbc.setState(0xdb7, 0x438b, 0x15c0, 0xdcd8, 0xd44f, 0xf24a, 0x1, 0x0);
        gbc.writeMem(0xdb7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x438b);
        EXPECT(gbc.pc(), 0xdb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 032B
        gbc.setState(0x4d04, 0xcb90, 0x99a0, 0x5471, 0x89a4, 0xfb64, 0x0, 0x0);
        gbc.writeMem(0x4d04, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcb90);
        EXPECT(gbc.pc(), 0x4d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 032C
        gbc.setState(0xafe2, 0x4a14, 0x5a30, 0x2e97, 0x42c4, 0x98ca, 0x0, 0x1);
        gbc.writeMem(0xafe2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4a14);
        EXPECT(gbc.pc(), 0xafe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe2), 0xcb);
        EXPECT(gbc.readMem(0xafe3), 0xa2);
        // CB A2 032D
        gbc.setState(0x9bce, 0x38f, 0xa7c0, 0xa321, 0x391f, 0x69cf, 0x1, 0x0);
        gbc.writeMem(0x9bce, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x38f);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0xa2);
        // CB A2 032F
        gbc.setState(0x9e77, 0x8a93, 0xc860, 0xbfd8, 0x2f5a, 0x80ca, 0x1, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8a93);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e77), 0xcb);
        EXPECT(gbc.readMem(0x9e78), 0xa2);
        // CB A2 0330
        gbc.setState(0x67eb, 0x9283, 0x3da0, 0x45bf, 0x4bd7, 0xc9e1, 0x1, 0x0);
        gbc.writeMem(0x67eb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9283);
        EXPECT(gbc.pc(), 0x67ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0331
        gbc.setState(0x62e1, 0x5028, 0x78e0, 0x7b7c, 0xa89e, 0x6fb7, 0x1, 0x1);
        gbc.writeMem(0x62e1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5028);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0332
        gbc.setState(0xcf2b, 0xf8bd, 0x6860, 0x4e9b, 0xb62, 0xe02d, 0x1, 0x1);
        gbc.writeMem(0xcf2b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf8bd);
        EXPECT(gbc.pc(), 0xcf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2b), 0xcb);
        EXPECT(gbc.readMem(0xcf2c), 0xa2);
        // CB A2 0333
        gbc.setState(0x7897, 0x38b7, 0x15d0, 0xaeb0, 0xbc92, 0xbda0, 0x1, 0x1);
        gbc.writeMem(0x7897, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x38b7);
        EXPECT(gbc.pc(), 0x7899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0334
        gbc.setState(0xeae2, 0x11a6, 0x7470, 0x3cb7, 0xb484, 0xb5e0, 0x0, 0x0);
        gbc.writeMem(0xeae2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x11a6);
        EXPECT(gbc.pc(), 0xeae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae2), 0xcb);
        EXPECT(gbc.readMem(0xeae3), 0xa2);
        // CB A2 0336
        gbc.setState(0xd0c5, 0x499d, 0xc460, 0x96ab, 0xd69, 0xcf0, 0x0, 0x1);
        gbc.writeMem(0xd0c5, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x499d);
        EXPECT(gbc.pc(), 0xd0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c5), 0xcb);
        EXPECT(gbc.readMem(0xd0c6), 0xa2);
        // CB A2 0337
        gbc.setState(0xa077, 0xfc5f, 0x5b0, 0x5c50, 0xbbeb, 0xa21c, 0x0, 0x1);
        gbc.writeMem(0xa077, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfc5f);
        EXPECT(gbc.pc(), 0xa079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0xcb);
        EXPECT(gbc.readMem(0xa078), 0xa2);
        // CB A2 0338
        gbc.setState(0x74ec, 0x8031, 0xcc50, 0xebf9, 0xbbea, 0x9aa8, 0x0, 0x0);
        gbc.writeMem(0x74ec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8031);
        EXPECT(gbc.pc(), 0x74ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0339
        gbc.setState(0x168d, 0xa276, 0x6920, 0xe237, 0xff99, 0xfd50, 0x1, 0x1);
        gbc.writeMem(0x168d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 033A
        gbc.setState(0x1e7f, 0xb0dd, 0x4b0, 0xa55a, 0x4d06, 0x1b74, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb0dd);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 033B
        gbc.setState(0x7b53, 0xa85e, 0x1100, 0x169c, 0x49fa, 0xa02f, 0x0, 0x0);
        gbc.writeMem(0x7b53, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa85e);
        EXPECT(gbc.pc(), 0x7b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 033C
        gbc.setState(0xd062, 0x52e3, 0x13d0, 0x8002, 0x939a, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0xd062, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x52e3);
        EXPECT(gbc.pc(), 0xd064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd062), 0xcb);
        EXPECT(gbc.readMem(0xd063), 0xa2);
        // CB A2 033D
        gbc.setState(0x7c43, 0x91d5, 0x3720, 0x4766, 0x2ed7, 0x455, 0x0, 0x1);
        gbc.writeMem(0x7c43, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x91d5);
        EXPECT(gbc.pc(), 0x7c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 033E
        gbc.setState(0xde37, 0xcd, 0x1f20, 0xfbb1, 0x5af4, 0xc99b, 0x0, 0x1);
        gbc.writeMem(0xde37, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcd);
        EXPECT(gbc.pc(), 0xde39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde37), 0xcb);
        EXPECT(gbc.readMem(0xde38), 0xa2);
        // CB A2 033F
        gbc.setState(0x62bc, 0x2d1b, 0x54a0, 0x5886, 0x727e, 0x2be3, 0x0, 0x0);
        gbc.writeMem(0x62bc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2d1b);
        EXPECT(gbc.pc(), 0x62be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0340
        gbc.setState(0xcedf, 0xb56f, 0xbf70, 0x1ba6, 0xe667, 0x1a4f, 0x0, 0x0);
        gbc.writeMem(0xcedf, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb56f);
        EXPECT(gbc.pc(), 0xcee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedf), 0xcb);
        EXPECT(gbc.readMem(0xcee0), 0xa2);
        // CB A2 0341
        gbc.setState(0x78df, 0xd26b, 0x840, 0xc0b, 0x5f54, 0x79c3, 0x1, 0x1);
        gbc.writeMem(0x78df, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd26b);
        EXPECT(gbc.pc(), 0x78e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0342
        gbc.setState(0x8cfc, 0x187d, 0x7350, 0x2f5c, 0x7eb2, 0xaab5, 0x0, 0x1);
        gbc.writeMem(0x8cfc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x187d);
        EXPECT(gbc.pc(), 0x8cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfc), 0xcb);
        EXPECT(gbc.readMem(0x8cfd), 0xa2);
        // CB A2 0343
        gbc.setState(0x998, 0xcb07, 0xd180, 0xd7a9, 0x59eb, 0x5797, 0x1, 0x1);
        gbc.writeMem(0x998, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcb07);
        EXPECT(gbc.pc(), 0x99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0344
        gbc.setState(0xb36c, 0xc283, 0xe9f0, 0x249b, 0xc28b, 0x12e9, 0x1, 0x0);
        gbc.writeMem(0xb36c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc283);
        EXPECT(gbc.pc(), 0xb36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36c), 0xcb);
        EXPECT(gbc.readMem(0xb36d), 0xa2);
        // CB A2 0345
        gbc.setState(0xc30, 0x1ad5, 0x5340, 0x1c19, 0xc2fa, 0x7d43, 0x0, 0x1);
        gbc.writeMem(0xc30, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1ad5);
        EXPECT(gbc.pc(), 0xc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0346
        gbc.setState(0x775b, 0x28db, 0x1d40, 0xd5bf, 0x3886, 0xdbb1, 0x0, 0x1);
        gbc.writeMem(0x775b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x28db);
        EXPECT(gbc.pc(), 0x775d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0347
        gbc.setState(0x1e19, 0xdcd3, 0x8810, 0x940, 0x9e41, 0xfedb, 0x1, 0x0);
        gbc.writeMem(0x1e19, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdcd3);
        EXPECT(gbc.pc(), 0x1e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0348
        gbc.setState(0x609f, 0x7eff, 0xd000, 0x4c3d, 0xb43d, 0x1d17, 0x0, 0x0);
        gbc.writeMem(0x609f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7eff);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 034A
        gbc.setState(0x176d, 0xbe92, 0xf100, 0x18a3, 0xf93e, 0xe7f8, 0x1, 0x1);
        gbc.writeMem(0x176d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbe92);
        EXPECT(gbc.pc(), 0x176f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 034B
        gbc.setState(0x55a1, 0xe94, 0x7bf0, 0x59fc, 0xf27f, 0x6b81, 0x0, 0x1);
        gbc.writeMem(0x55a1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe94);
        EXPECT(gbc.pc(), 0x55a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 034C
        gbc.setState(0x39a6, 0x90e7, 0xd310, 0xc2b8, 0x3af2, 0xc2b2, 0x0, 0x0);
        gbc.writeMem(0x39a6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x90e7);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 034D
        gbc.setState(0xed34, 0xd4c8, 0x5710, 0xc4ef, 0x5034, 0xddb9, 0x1, 0x0);
        gbc.writeMem(0xed34, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd4c8);
        EXPECT(gbc.pc(), 0xed36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed34), 0xcb);
        EXPECT(gbc.readMem(0xed35), 0xa2);
        // CB A2 034E
        gbc.setState(0x89a7, 0xcf4b, 0x81d0, 0x2fe8, 0xcf5e, 0xf862, 0x0, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcf4b);
        EXPECT(gbc.pc(), 0x89a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a7), 0xcb);
        EXPECT(gbc.readMem(0x89a8), 0xa2);
        // CB A2 034F
        gbc.setState(0xb62d, 0x231b, 0x42b0, 0x6c6b, 0x9df4, 0xaeff, 0x0, 0x1);
        gbc.writeMem(0xb62d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x231b);
        EXPECT(gbc.pc(), 0xb62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62d), 0xcb);
        EXPECT(gbc.readMem(0xb62e), 0xa2);
        // CB A2 0350
        gbc.setState(0xe37, 0x5088, 0xba90, 0x8380, 0xb26b, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0xe37, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5088);
        EXPECT(gbc.pc(), 0xe39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0351
        gbc.setState(0x1044, 0x4f65, 0xe440, 0xc6c8, 0xb176, 0xe06b, 0x0, 0x0);
        gbc.writeMem(0x1044, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4f65);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0352
        gbc.setState(0x1766, 0x885f, 0x8b50, 0xc11e, 0xd2d5, 0xa01a, 0x0, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x885f);
        EXPECT(gbc.pc(), 0x1768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0353
        gbc.setState(0x2d32, 0x6474, 0xd540, 0xf0a7, 0xeb42, 0xf380, 0x0, 0x0);
        gbc.writeMem(0x2d32, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6474);
        EXPECT(gbc.pc(), 0x2d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0354
        gbc.setState(0x5a4e, 0xafad, 0x2ea0, 0xccce, 0xd721, 0x4ffd, 0x0, 0x1);
        gbc.writeMem(0x5a4e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xafad);
        EXPECT(gbc.pc(), 0x5a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0355
        gbc.setState(0xaf26, 0x2f37, 0x6ac0, 0x870a, 0x20db, 0x1611, 0x0, 0x0);
        gbc.writeMem(0xaf26, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2f37);
        EXPECT(gbc.pc(), 0xaf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf26), 0xcb);
        EXPECT(gbc.readMem(0xaf27), 0xa2);
        // CB A2 0356
        gbc.setState(0x7278, 0xd40, 0x37e0, 0x9b6, 0x70d9, 0x201a, 0x0, 0x0);
        gbc.writeMem(0x7278, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd40);
        EXPECT(gbc.pc(), 0x727a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0357
        gbc.setState(0x37e4, 0x3cd0, 0x25c0, 0xbfae, 0x681c, 0xc89, 0x0, 0x1);
        gbc.writeMem(0x37e4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3cd0);
        EXPECT(gbc.pc(), 0x37e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0358
        gbc.setState(0x2c23, 0x9d5e, 0x5080, 0xf660, 0xc5e, 0x54a8, 0x0, 0x1);
        gbc.writeMem(0x2c23, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9d5e);
        EXPECT(gbc.pc(), 0x2c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0359
        gbc.setState(0x463d, 0x9e9a, 0x3510, 0xe377, 0xca04, 0x2c24, 0x0, 0x0);
        gbc.writeMem(0x463d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9e9a);
        EXPECT(gbc.pc(), 0x463f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 035A
        gbc.setState(0x19d0, 0x5520, 0x4290, 0x6b56, 0xc392, 0x7c1b, 0x1, 0x1);
        gbc.writeMem(0x19d0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5520);
        EXPECT(gbc.pc(), 0x19d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 035B
        gbc.setState(0x3c40, 0xd1d0, 0x28c0, 0x3f18, 0xeca8, 0x69c7, 0x1, 0x0);
        gbc.writeMem(0x3c40, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd1d0);
        EXPECT(gbc.pc(), 0x3c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 035C
        gbc.setState(0x55e6, 0xecc, 0x9aa0, 0x6f57, 0x92a0, 0x759f, 0x0, 0x0);
        gbc.writeMem(0x55e6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xecc);
        EXPECT(gbc.pc(), 0x55e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 035D
        gbc.setState(0x81ac, 0xb47, 0xd040, 0x7c75, 0xd3ab, 0x7ffe, 0x0, 0x1);
        gbc.writeMem(0x81ac, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb47);
        EXPECT(gbc.pc(), 0x81ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ac), 0xcb);
        EXPECT(gbc.readMem(0x81ad), 0xa2);
        // CB A2 035E
        gbc.setState(0xc342, 0xfb98, 0x9250, 0xe375, 0xe124, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0xc342, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0xc344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc342), 0xcb);
        EXPECT(gbc.readMem(0xc343), 0xa2);
        // CB A2 035F
        gbc.setState(0xbdf2, 0xe077, 0xce30, 0xc69f, 0x1c8a, 0x3396, 0x0, 0x0);
        gbc.writeMem(0xbdf2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe077);
        EXPECT(gbc.pc(), 0xbdf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf2), 0xcb);
        EXPECT(gbc.readMem(0xbdf3), 0xa2);
        // CB A2 0360
        gbc.setState(0x43f9, 0xfe39, 0xaa10, 0x99ad, 0x9cbc, 0x75d, 0x0, 0x0);
        gbc.writeMem(0x43f9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfe39);
        EXPECT(gbc.pc(), 0x43fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0361
        gbc.setState(0x1da0, 0x61f6, 0x7690, 0x5d68, 0xa2e0, 0xad36, 0x1, 0x1);
        gbc.writeMem(0x1da0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x61f6);
        EXPECT(gbc.pc(), 0x1da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0362
        gbc.setState(0xb594, 0x91cf, 0x9440, 0xf2cc, 0x314e, 0x9b40, 0x0, 0x0);
        gbc.writeMem(0xb594, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x91cf);
        EXPECT(gbc.pc(), 0xb596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb594), 0xcb);
        EXPECT(gbc.readMem(0xb595), 0xa2);
        // CB A2 0363
        gbc.setState(0xb0cc, 0x7230, 0x46f0, 0x6a07, 0x9391, 0xe360, 0x1, 0x0);
        gbc.writeMem(0xb0cc, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7230);
        EXPECT(gbc.pc(), 0xb0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0cc), 0xcb);
        EXPECT(gbc.readMem(0xb0cd), 0xa2);
        // CB A2 0364
        gbc.setState(0x8f73, 0x3513, 0x6be0, 0x9f4, 0x285c, 0xa869, 0x1, 0x0);
        gbc.writeMem(0x8f73, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x8f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f73), 0xcb);
        EXPECT(gbc.readMem(0x8f74), 0xa2);
        // CB A2 0365
        gbc.setState(0x7241, 0x14d8, 0x8560, 0xad61, 0x1d07, 0x9975, 0x0, 0x1);
        gbc.writeMem(0x7241, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x14d8);
        EXPECT(gbc.pc(), 0x7243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0366
        gbc.setState(0x8f17, 0x653d, 0x3050, 0xb1e6, 0x9003, 0x374d, 0x1, 0x0);
        gbc.writeMem(0x8f17, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x653d);
        EXPECT(gbc.pc(), 0x8f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f17), 0xcb);
        EXPECT(gbc.readMem(0x8f18), 0xa2);
        // CB A2 0367
        gbc.setState(0x6d01, 0x591a, 0xed60, 0xcb13, 0xd265, 0x5ec1, 0x1, 0x1);
        gbc.writeMem(0x6d01, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x591a);
        EXPECT(gbc.pc(), 0x6d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0368
        gbc.setState(0x5e15, 0xc461, 0xacc0, 0x113b, 0x8288, 0xc729, 0x1, 0x0);
        gbc.writeMem(0x5e15, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc461);
        EXPECT(gbc.pc(), 0x5e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0369
        gbc.setState(0xcfc9, 0xca6f, 0xfe0, 0x595c, 0x771a, 0x22e6, 0x0, 0x0);
        gbc.writeMem(0xcfc9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xca6f);
        EXPECT(gbc.pc(), 0xcfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc9), 0xcb);
        EXPECT(gbc.readMem(0xcfca), 0xa2);
        // CB A2 036A
        gbc.setState(0x2bec, 0x3b42, 0xc190, 0xc3c9, 0xedae, 0x8100, 0x0, 0x1);
        gbc.writeMem(0x2bec, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3b42);
        EXPECT(gbc.pc(), 0x2bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 036B
        gbc.setState(0x90fa, 0x4908, 0x5d20, 0xc600, 0x8021, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x90fa, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4908);
        EXPECT(gbc.pc(), 0x90fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fa), 0xcb);
        EXPECT(gbc.readMem(0x90fb), 0xa2);
        // CB A2 036C
        gbc.setState(0x8e06, 0x6c80, 0x3f50, 0x497e, 0xf389, 0xff67, 0x1, 0x0);
        gbc.writeMem(0x8e06, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0x8e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e06), 0xcb);
        EXPECT(gbc.readMem(0x8e07), 0xa2);
        // CB A2 036D
        gbc.setState(0x6f89, 0xe4c9, 0x87a0, 0xca07, 0x75ec, 0xf3a0, 0x0, 0x1);
        gbc.writeMem(0x6f89, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe4c9);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 036E
        gbc.setState(0x3890, 0xe6c, 0x1420, 0x793, 0xb6, 0x2e26, 0x0, 0x1);
        gbc.writeMem(0x3890, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0x3892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0370
        gbc.setState(0x64db, 0x9983, 0x63b0, 0x7226, 0x48db, 0x7500, 0x1, 0x1);
        gbc.writeMem(0x64db, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9983);
        EXPECT(gbc.pc(), 0x64dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0371
        gbc.setState(0xa8b0, 0xdb00, 0x6580, 0xa621, 0x6524, 0x86aa, 0x1, 0x0);
        gbc.writeMem(0xa8b0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdb00);
        EXPECT(gbc.pc(), 0xa8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b0), 0xcb);
        EXPECT(gbc.readMem(0xa8b1), 0xa2);
        // CB A2 0372
        gbc.setState(0x7c5c, 0x4fd9, 0x26c0, 0xbd94, 0xbc0e, 0xd1c3, 0x0, 0x1);
        gbc.writeMem(0x7c5c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4fd9);
        EXPECT(gbc.pc(), 0x7c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0373
        gbc.setState(0x454f, 0x56be, 0x7b20, 0x5fd8, 0xc057, 0x1fa9, 0x0, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x56be);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0374
        gbc.setState(0xe59b, 0xf8b6, 0x31b0, 0x1a53, 0x3981, 0x598f, 0x1, 0x0);
        gbc.writeMem(0xe59b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf8b6);
        EXPECT(gbc.pc(), 0xe59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe59b), 0xcb);
        EXPECT(gbc.readMem(0xe59c), 0xa2);
        // CB A2 0375
        gbc.setState(0xa14c, 0xdaa1, 0x1cc0, 0x631d, 0x35d9, 0xb8df, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdaa1);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0xa2);
        // CB A2 0376
        gbc.setState(0xe414, 0xe9de, 0xf920, 0x1786, 0x14a1, 0xbe73, 0x0, 0x0);
        gbc.writeMem(0xe414, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe9de);
        EXPECT(gbc.pc(), 0xe416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe414), 0xcb);
        EXPECT(gbc.readMem(0xe415), 0xa2);
        // CB A2 0377
        gbc.setState(0x1ace, 0xe4af, 0xc200, 0x5740, 0xb5ec, 0x14f9, 0x1, 0x1);
        gbc.writeMem(0x1ace, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe4af);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0378
        gbc.setState(0x860c, 0x6d7f, 0x4520, 0xd36b, 0xd122, 0xc7af, 0x1, 0x0);
        gbc.writeMem(0x860c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6d7f);
        EXPECT(gbc.pc(), 0x860e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860c), 0xcb);
        EXPECT(gbc.readMem(0x860d), 0xa2);
        // CB A2 0379
        gbc.setState(0xc086, 0x81e6, 0x3360, 0xe8bb, 0x3073, 0x87f7, 0x1, 0x0);
        gbc.writeMem(0xc086, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x81e6);
        EXPECT(gbc.pc(), 0xc088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc086), 0xcb);
        EXPECT(gbc.readMem(0xc087), 0xa2);
        // CB A2 037A
        gbc.setState(0x34b4, 0xbd3c, 0x4ce0, 0x4472, 0xdb88, 0xc1e6, 0x0, 0x1);
        gbc.writeMem(0x34b4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbd3c);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 037B
        gbc.setState(0x1e0, 0x5d28, 0x1980, 0x9fc4, 0x452d, 0x48f8, 0x1, 0x1);
        gbc.writeMem(0x1e0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5d28);
        EXPECT(gbc.pc(), 0x1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 037C
        gbc.setState(0xc312, 0x4e7, 0x27c0, 0xd6ff, 0x64b6, 0x3506, 0x1, 0x1);
        gbc.writeMem(0xc312, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4e7);
        EXPECT(gbc.pc(), 0xc314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc312), 0xcb);
        EXPECT(gbc.readMem(0xc313), 0xa2);
        // CB A2 037D
        gbc.setState(0x71a3, 0x750e, 0xc580, 0x8f50, 0x6d18, 0xdf69, 0x0, 0x1);
        gbc.writeMem(0x71a3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x750e);
        EXPECT(gbc.pc(), 0x71a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 037E
        gbc.setState(0xe1f9, 0x33b2, 0x3c20, 0x2db3, 0xa943, 0xb74b, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x33b2);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0xa2);
        // CB A2 037F
        gbc.setState(0xd518, 0xe96, 0xd420, 0xe7d3, 0x12f5, 0xa22c, 0x0, 0x0);
        gbc.writeMem(0xd518, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe96);
        EXPECT(gbc.pc(), 0xd51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd518), 0xcb);
        EXPECT(gbc.readMem(0xd519), 0xa2);
        // CB A2 0380
        gbc.setState(0x8571, 0x93d5, 0x4d90, 0xe285, 0x22ac, 0xb1f1, 0x0, 0x1);
        gbc.writeMem(0x8571, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0x8573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8571), 0xcb);
        EXPECT(gbc.readMem(0x8572), 0xa2);
        // CB A2 0381
        gbc.setState(0x784e, 0xf427, 0x1d40, 0x75fa, 0x3dde, 0xaedb, 0x0, 0x1);
        gbc.writeMem(0x784e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf427);
        EXPECT(gbc.pc(), 0x7850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0382
        gbc.setState(0xd119, 0x2209, 0x6910, 0xf825, 0x9eef, 0xc250, 0x1, 0x0);
        gbc.writeMem(0xd119, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0xd11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd119), 0xcb);
        EXPECT(gbc.readMem(0xd11a), 0xa2);
        // CB A2 0383
        gbc.setState(0x4aad, 0xd51, 0x8ef0, 0x3f48, 0x47f2, 0x3436, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd51);
        EXPECT(gbc.pc(), 0x4aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0384
        gbc.setState(0x1e09, 0x5cac, 0xef40, 0x374e, 0xabc8, 0xe994, 0x0, 0x1);
        gbc.writeMem(0x1e09, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5cac);
        EXPECT(gbc.pc(), 0x1e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0385
        gbc.setState(0x4c48, 0x1ddf, 0x13c0, 0x2c96, 0x5794, 0x8387, 0x1, 0x1);
        gbc.writeMem(0x4c48, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1ddf);
        EXPECT(gbc.pc(), 0x4c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0386
        gbc.setState(0xab56, 0x78cb, 0x7a20, 0x4b46, 0x909b, 0xd583, 0x1, 0x1);
        gbc.writeMem(0xab56, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x78cb);
        EXPECT(gbc.pc(), 0xab58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab56), 0xcb);
        EXPECT(gbc.readMem(0xab57), 0xa2);
        // CB A2 0387
        gbc.setState(0x2309, 0x910c, 0x2760, 0x9c2, 0x46ca, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x2309, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x910c);
        EXPECT(gbc.pc(), 0x230b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0389
        gbc.setState(0xce49, 0xea72, 0xb2e0, 0x1f20, 0x41e4, 0x7fbb, 0x0, 0x1);
        gbc.writeMem(0xce49, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xea72);
        EXPECT(gbc.pc(), 0xce4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce49), 0xcb);
        EXPECT(gbc.readMem(0xce4a), 0xa2);
        // CB A2 038A
        gbc.setState(0xea8c, 0xb77, 0xcd90, 0xfe82, 0xe37b, 0x2c9a, 0x1, 0x1);
        gbc.writeMem(0xea8c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb77);
        EXPECT(gbc.pc(), 0xea8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8c), 0xcb);
        EXPECT(gbc.readMem(0xea8d), 0xa2);
        // CB A2 038B
        gbc.setState(0x7b76, 0x1b2d, 0x41c0, 0x1ca4, 0xee54, 0xdc6e, 0x1, 0x0);
        gbc.writeMem(0x7b76, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1b2d);
        EXPECT(gbc.pc(), 0x7b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 038C
        gbc.setState(0x80b1, 0x475a, 0x48e0, 0xf5f5, 0x74, 0xf0dc, 0x1, 0x1);
        gbc.writeMem(0x80b1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x475a);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b1), 0xcb);
        EXPECT(gbc.readMem(0x80b2), 0xa2);
        // CB A2 038D
        gbc.setState(0x5e76, 0x72eb, 0xb190, 0x9876, 0x8d17, 0xb531, 0x0, 0x1);
        gbc.writeMem(0x5e76, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x72eb);
        EXPECT(gbc.pc(), 0x5e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 038E
        gbc.setState(0x79b9, 0xe2ae, 0x5be0, 0xdd0, 0x7324, 0xf0fe, 0x1, 0x1);
        gbc.writeMem(0x79b9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe2ae);
        EXPECT(gbc.pc(), 0x79bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0391
        gbc.setState(0xeff4, 0x4e87, 0xef40, 0xe0dc, 0xa14, 0xfbb9, 0x0, 0x1);
        gbc.writeMem(0xeff4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4e87);
        EXPECT(gbc.pc(), 0xeff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff4), 0xcb);
        EXPECT(gbc.readMem(0xeff5), 0xa2);
        // CB A2 0392
        gbc.setState(0x7861, 0x6460, 0x3e20, 0x4ace, 0x55ec, 0x360b, 0x1, 0x1);
        gbc.writeMem(0x7861, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6460);
        EXPECT(gbc.pc(), 0x7863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0393
        gbc.setState(0xba9b, 0x35ef, 0x6580, 0xd6a, 0xa02b, 0x2239, 0x1, 0x1);
        gbc.writeMem(0xba9b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x35ef);
        EXPECT(gbc.pc(), 0xba9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba9b), 0xcb);
        EXPECT(gbc.readMem(0xba9c), 0xa2);
        // CB A2 0394
        gbc.setState(0x71fd, 0xe573, 0xc6d0, 0x44d9, 0xa5bc, 0x6707, 0x1, 0x0);
        gbc.writeMem(0x71fd, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe573);
        EXPECT(gbc.pc(), 0x71ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0395
        gbc.setState(0x2fc4, 0x1012, 0x1530, 0x45d7, 0x5474, 0xef19, 0x0, 0x0);
        gbc.writeMem(0x2fc4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1012);
        EXPECT(gbc.pc(), 0x2fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 0396
        gbc.setState(0x2702, 0x9bda, 0xc540, 0x971c, 0x170e, 0x397d, 0x1, 0x1);
        gbc.writeMem(0x2702, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9bda);
        EXPECT(gbc.pc(), 0x2704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 0397
        gbc.setState(0xbdc3, 0x36f8, 0xbe30, 0x9fd, 0x4fd5, 0x39d, 0x1, 0x0);
        gbc.writeMem(0xbdc3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x36f8);
        EXPECT(gbc.pc(), 0xbdc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc3), 0xcb);
        EXPECT(gbc.readMem(0xbdc4), 0xa2);
        // CB A2 0398
        gbc.setState(0xdd21, 0x7320, 0x7010, 0xf737, 0x22e3, 0x2c90, 0x1, 0x1);
        gbc.writeMem(0xdd21, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7320);
        EXPECT(gbc.pc(), 0xdd23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd21), 0xcb);
        EXPECT(gbc.readMem(0xdd22), 0xa2);
        // CB A2 0399
        gbc.setState(0x1322, 0x45fc, 0xf40, 0x839e, 0xecdf, 0x7030, 0x1, 0x1);
        gbc.writeMem(0x1322, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x45fc);
        EXPECT(gbc.pc(), 0x1324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 039A
        gbc.setState(0x9a7a, 0xe586, 0xde70, 0x18b9, 0xf32e, 0x4cd3, 0x0, 0x0);
        gbc.writeMem(0x9a7a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe586);
        EXPECT(gbc.pc(), 0x9a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7a), 0xcb);
        EXPECT(gbc.readMem(0x9a7b), 0xa2);
        // CB A2 039B
        gbc.setState(0xb490, 0x375e, 0x9bd0, 0xbe1, 0x4155, 0xc37e, 0x0, 0x1);
        gbc.writeMem(0xb490, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x375e);
        EXPECT(gbc.pc(), 0xb492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb490), 0xcb);
        EXPECT(gbc.readMem(0xb491), 0xa2);
        // CB A2 039C
        gbc.setState(0xea47, 0xa5c3, 0x59e0, 0x894e, 0x523, 0xafdd, 0x1, 0x1);
        gbc.writeMem(0xea47, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa5c3);
        EXPECT(gbc.pc(), 0xea49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea47), 0xcb);
        EXPECT(gbc.readMem(0xea48), 0xa2);
        // CB A2 039D
        gbc.setState(0x5dd8, 0x10da, 0xf870, 0xc42a, 0xd48b, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x5dd8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x10da);
        EXPECT(gbc.pc(), 0x5dda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 039E
        gbc.setState(0xad3, 0x7363, 0xf080, 0x400a, 0x6f98, 0x8f0a, 0x1, 0x0);
        gbc.writeMem(0xad3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7363);
        EXPECT(gbc.pc(), 0xad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 039F
        gbc.setState(0xb2d8, 0x3690, 0xc3c0, 0x8b14, 0xee39, 0xc883, 0x0, 0x0);
        gbc.writeMem(0xb2d8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3690);
        EXPECT(gbc.pc(), 0xb2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d8), 0xcb);
        EXPECT(gbc.readMem(0xb2d9), 0xa2);
        // CB A2 03A0
        gbc.setState(0xda3d, 0x5a9, 0x59f0, 0x64a0, 0x7abb, 0x18aa, 0x1, 0x0);
        gbc.writeMem(0xda3d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0xda3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3d), 0xcb);
        EXPECT(gbc.readMem(0xda3e), 0xa2);
        // CB A2 03A1
        gbc.setState(0xa233, 0xae51, 0x4800, 0x4a7, 0x8e4d, 0xf245, 0x1, 0x0);
        gbc.writeMem(0xa233, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa233), 0xcb);
        EXPECT(gbc.readMem(0xa234), 0xa2);
        // CB A2 03A2
        gbc.setState(0x7c00, 0x9763, 0x93a0, 0xa71e, 0x32a9, 0x70c8, 0x0, 0x0);
        gbc.writeMem(0x7c00, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9763);
        EXPECT(gbc.pc(), 0x7c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03A3
        gbc.setState(0xa45a, 0x23f7, 0x1f90, 0x3970, 0x72a5, 0x5682, 0x1, 0x1);
        gbc.writeMem(0xa45a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x23f7);
        EXPECT(gbc.pc(), 0xa45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45a), 0xcb);
        EXPECT(gbc.readMem(0xa45b), 0xa2);
        // CB A2 03A4
        gbc.setState(0xd4f8, 0x8e76, 0x6780, 0xcb23, 0x6e32, 0xf1a4, 0x1, 0x0);
        gbc.writeMem(0xd4f8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8e76);
        EXPECT(gbc.pc(), 0xd4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f8), 0xcb);
        EXPECT(gbc.readMem(0xd4f9), 0xa2);
        // CB A2 03A5
        gbc.setState(0x3ef0, 0xa318, 0xf730, 0x32c8, 0x5fe0, 0x1dba, 0x0, 0x0);
        gbc.writeMem(0x3ef0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa318);
        EXPECT(gbc.pc(), 0x3ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03A6
        gbc.setState(0x4f7a, 0x586f, 0xf6f0, 0xf11f, 0xe255, 0x84ce, 0x1, 0x1);
        gbc.writeMem(0x4f7a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x586f);
        EXPECT(gbc.pc(), 0x4f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03A7
        gbc.setState(0x1ea8, 0x102c, 0x160, 0x2378, 0x42cd, 0x22e2, 0x0, 0x1);
        gbc.writeMem(0x1ea8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0x1eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03A8
        gbc.setState(0x5ca3, 0xec2d, 0x2350, 0x35ec, 0x2320, 0x762f, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xec2d);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03A9
        gbc.setState(0xef6b, 0xb929, 0xa550, 0x69a7, 0xa6fc, 0x11f7, 0x0, 0x1);
        gbc.writeMem(0xef6b, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0xef6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6b), 0xcb);
        EXPECT(gbc.readMem(0xef6c), 0xa2);
        // CB A2 03AA
        gbc.setState(0xadc2, 0x536f, 0xf090, 0xfb76, 0xb6a, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0xadc2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x536f);
        EXPECT(gbc.pc(), 0xadc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc2), 0xcb);
        EXPECT(gbc.readMem(0xadc3), 0xa2);
        // CB A2 03AB
        gbc.setState(0x6992, 0x444d, 0x9bc0, 0x237, 0xe8ed, 0xeaa9, 0x1, 0x1);
        gbc.writeMem(0x6992, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x444d);
        EXPECT(gbc.pc(), 0x6994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03AC
        gbc.setState(0x222a, 0xd10a, 0x3750, 0xdcf2, 0xcb3f, 0xc7f8, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd10a);
        EXPECT(gbc.pc(), 0x222c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03AD
        gbc.setState(0x2936, 0xb84c, 0xe090, 0xff96, 0x8583, 0xe606, 0x0, 0x1);
        gbc.writeMem(0x2936, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb84c);
        EXPECT(gbc.pc(), 0x2938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03AE
        gbc.setState(0xa65e, 0xd1aa, 0xec70, 0x63c3, 0xc882, 0xe1a3, 0x0, 0x0);
        gbc.writeMem(0xa65e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd1aa);
        EXPECT(gbc.pc(), 0xa660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65e), 0xcb);
        EXPECT(gbc.readMem(0xa65f), 0xa2);
        // CB A2 03AF
        gbc.setState(0x4d3a, 0xded5, 0xd140, 0xfdf4, 0xeef8, 0x2dcf, 0x1, 0x0);
        gbc.writeMem(0x4d3a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xded5);
        EXPECT(gbc.pc(), 0x4d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03B0
        gbc.setState(0x2c29, 0xd74c, 0xb1a0, 0x6a12, 0xe88f, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0x2c29, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd74c);
        EXPECT(gbc.pc(), 0x2c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03B1
        gbc.setState(0x1083, 0x51c3, 0x9400, 0x97f, 0xd3a6, 0x6268, 0x1, 0x0);
        gbc.writeMem(0x1083, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x51c3);
        EXPECT(gbc.pc(), 0x1085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03B2
        gbc.setState(0xabc2, 0xdd4d, 0x14c0, 0x8787, 0x781a, 0x9441, 0x0, 0x1);
        gbc.writeMem(0xabc2, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0xabc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc2), 0xcb);
        EXPECT(gbc.readMem(0xabc3), 0xa2);
        // CB A2 03B4
        gbc.setState(0xe7de, 0x6637, 0x4f10, 0xab2a, 0x68d8, 0x867c, 0x1, 0x1);
        gbc.writeMem(0xe7de, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6637);
        EXPECT(gbc.pc(), 0xe7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7de), 0xcb);
        EXPECT(gbc.readMem(0xe7df), 0xa2);
        // CB A2 03B5
        gbc.setState(0xe086, 0x2836, 0x3e80, 0xa01a, 0x3d3e, 0x7d81, 0x1, 0x1);
        gbc.writeMem(0xe086, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2836);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe086), 0xcb);
        EXPECT(gbc.readMem(0xe087), 0xa2);
        // CB A2 03B6
        gbc.setState(0x686a, 0xcbd0, 0xfad0, 0x473a, 0x45fb, 0x6b6, 0x1, 0x0);
        gbc.writeMem(0x686a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcbd0);
        EXPECT(gbc.pc(), 0x686c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03B7
        gbc.setState(0x9dae, 0xab21, 0x1b00, 0x91d6, 0xef3f, 0xc073, 0x0, 0x1);
        gbc.writeMem(0x9dae, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xab21);
        EXPECT(gbc.pc(), 0x9db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dae), 0xcb);
        EXPECT(gbc.readMem(0x9daf), 0xa2);
        // CB A2 03B8
        gbc.setState(0x19a6, 0x3e76, 0x22e0, 0xae66, 0xf4e, 0x1e02, 0x1, 0x1);
        gbc.writeMem(0x19a6, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3e76);
        EXPECT(gbc.pc(), 0x19a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03B9
        gbc.setState(0x7d0f, 0xf2cf, 0x5f50, 0xb7a8, 0xe664, 0x5ef0, 0x1, 0x1);
        gbc.writeMem(0x7d0f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf2cf);
        EXPECT(gbc.pc(), 0x7d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03BA
        gbc.setState(0xc91f, 0x9bab, 0xdc0, 0x30df, 0x6097, 0x11a, 0x1, 0x1);
        gbc.writeMem(0xc91f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0xc921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91f), 0xcb);
        EXPECT(gbc.readMem(0xc920), 0xa2);
        // CB A2 03BB
        gbc.setState(0xe71, 0x1e21, 0x5fc0, 0xf282, 0xa7cf, 0xcd2, 0x0, 0x0);
        gbc.writeMem(0xe71, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1e21);
        EXPECT(gbc.pc(), 0xe73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03BC
        gbc.setState(0x92e8, 0xaaa, 0x4020, 0xccbf, 0x629a, 0x8902, 0x1, 0x0);
        gbc.writeMem(0x92e8, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x92ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e8), 0xcb);
        EXPECT(gbc.readMem(0x92e9), 0xa2);
        // CB A2 03BD
        gbc.setState(0x3701, 0x1a63, 0xf280, 0x2be, 0x8e51, 0x1cf1, 0x0, 0x0);
        gbc.writeMem(0x3701, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1a63);
        EXPECT(gbc.pc(), 0x3703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03BE
        gbc.setState(0xc293, 0x8c16, 0xbd10, 0xbfd2, 0xcc52, 0xd14d, 0x0, 0x0);
        gbc.writeMem(0xc293, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8c16);
        EXPECT(gbc.pc(), 0xc295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc293), 0xcb);
        EXPECT(gbc.readMem(0xc294), 0xa2);
        // CB A2 03BF
        gbc.setState(0x148f, 0xbfd1, 0x9cd0, 0xf0eb, 0x9c86, 0x9a70, 0x1, 0x1);
        gbc.writeMem(0x148f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbfd1);
        EXPECT(gbc.pc(), 0x1491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C0
        gbc.setState(0x200, 0x775e, 0xcc90, 0xa1fb, 0xf944, 0x4679, 0x1, 0x1);
        gbc.writeMem(0x200, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x775e);
        EXPECT(gbc.pc(), 0x202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C1
        gbc.setState(0x6310, 0x497, 0x1b30, 0xa74b, 0xf814, 0x9f1f, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x497);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C2
        gbc.setState(0x5c2e, 0x7891, 0x79d0, 0x3bf3, 0xc02d, 0xb2cd, 0x1, 0x1);
        gbc.writeMem(0x5c2e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0x5c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C3
        gbc.setState(0xb11d, 0x32e0, 0xfb60, 0x80c2, 0xd892, 0x7774, 0x0, 0x1);
        gbc.writeMem(0xb11d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x32e0);
        EXPECT(gbc.pc(), 0xb11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11d), 0xcb);
        EXPECT(gbc.readMem(0xb11e), 0xa2);
        // CB A2 03C4
        gbc.setState(0x2258, 0x7d94, 0x1810, 0xa06, 0x725d, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0x2258, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7d94);
        EXPECT(gbc.pc(), 0x225a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C5
        gbc.setState(0xcf8e, 0xc05a, 0xb720, 0x4269, 0x2678, 0x10ff, 0x0, 0x1);
        gbc.writeMem(0xcf8e, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc05a);
        EXPECT(gbc.pc(), 0xcf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8e), 0xcb);
        EXPECT(gbc.readMem(0xcf8f), 0xa2);
        // CB A2 03C6
        gbc.setState(0xba17, 0xd4a2, 0x4ee0, 0xb41f, 0x489e, 0x474d, 0x0, 0x1);
        gbc.writeMem(0xba17, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba17), 0xcb);
        EXPECT(gbc.readMem(0xba18), 0xa2);
        // CB A2 03C7
        gbc.setState(0x9044, 0x7c51, 0x42a0, 0x80d1, 0xb864, 0xd581, 0x0, 0x0);
        gbc.writeMem(0x9044, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7c51);
        EXPECT(gbc.pc(), 0x9046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9044), 0xcb);
        EXPECT(gbc.readMem(0x9045), 0xa2);
        // CB A2 03C8
        gbc.setState(0x1e6c, 0x453d, 0x6810, 0x4e51, 0xaa49, 0x8e66, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x453d);
        EXPECT(gbc.pc(), 0x1e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03C9
        gbc.setState(0x806d, 0xba2b, 0x100, 0xdc35, 0xfe3b, 0x63c, 0x1, 0x1);
        gbc.writeMem(0x806d, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xba2b);
        EXPECT(gbc.pc(), 0x806f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0xcb);
        EXPECT(gbc.readMem(0x806e), 0xa2);
        // CB A2 03CB
        gbc.setState(0x71a, 0x53d2, 0x52a0, 0x375c, 0xeaf7, 0x3527, 0x1, 0x0);
        gbc.writeMem(0x71a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x53d2);
        EXPECT(gbc.pc(), 0x71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03CD
        gbc.setState(0x8ba3, 0x652f, 0xa80, 0xdb7c, 0xee35, 0xe761, 0x0, 0x1);
        gbc.writeMem(0x8ba3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x652f);
        EXPECT(gbc.pc(), 0x8ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba3), 0xcb);
        EXPECT(gbc.readMem(0x8ba4), 0xa2);
        // CB A2 03CE
        gbc.setState(0x38f1, 0xeda4, 0x9f0, 0x9320, 0xaa41, 0xe511, 0x1, 0x1);
        gbc.writeMem(0x38f1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xeda4);
        EXPECT(gbc.pc(), 0x38f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03CF
        gbc.setState(0xc599, 0xfdff, 0xa0d0, 0xacfa, 0x400b, 0x3224, 0x1, 0x0);
        gbc.writeMem(0xc599, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfdff);
        EXPECT(gbc.pc(), 0xc59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc599), 0xcb);
        EXPECT(gbc.readMem(0xc59a), 0xa2);
        // CB A2 03D0
        gbc.setState(0x16b4, 0xd30c, 0xe560, 0x631d, 0xa80d, 0x280a, 0x0, 0x1);
        gbc.writeMem(0x16b4, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0x16b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03D1
        gbc.setState(0x7dad, 0x9747, 0x3d90, 0xc5f9, 0xb02d, 0x6722, 0x1, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9747);
        EXPECT(gbc.pc(), 0x7daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03D2
        gbc.setState(0xc5ff, 0xb84a, 0x3140, 0x73b1, 0xaf99, 0xa9c9, 0x0, 0x0);
        gbc.writeMem(0xc5ff, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb84a);
        EXPECT(gbc.pc(), 0xc601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ff), 0xcb);
        EXPECT(gbc.readMem(0xc600), 0xa2);
        // CB A2 03D3
        gbc.setState(0xbe39, 0x4446, 0xc1f0, 0xfd5d, 0x56bf, 0xb295, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4446);
        EXPECT(gbc.pc(), 0xbe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe39), 0xcb);
        EXPECT(gbc.readMem(0xbe3a), 0xa2);
        // CB A2 03D4
        gbc.setState(0x10f1, 0xf719, 0x17b0, 0x996c, 0xd82d, 0x1113, 0x0, 0x1);
        gbc.writeMem(0x10f1, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf719);
        EXPECT(gbc.pc(), 0x10f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03D5
        gbc.setState(0x599f, 0x1942, 0x1650, 0x296b, 0x5743, 0xc5b9, 0x0, 0x1);
        gbc.writeMem(0x599f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1942);
        EXPECT(gbc.pc(), 0x59a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03D6
        gbc.setState(0x1f49, 0xc19b, 0x89b0, 0x46f4, 0xeeca, 0x62a8, 0x1, 0x1);
        gbc.writeMem(0x1f49, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc19b);
        EXPECT(gbc.pc(), 0x1f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03D7
        gbc.setState(0x29de, 0x15f8, 0x3ca0, 0x7467, 0xd616, 0x9519, 0x1, 0x0);
        gbc.writeMem(0x29de, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x15f8);
        EXPECT(gbc.pc(), 0x29e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03D8
        gbc.setState(0x2d1f, 0xad37, 0x3780, 0x72, 0x20e9, 0xc3a9, 0x1, 0x1);
        gbc.writeMem(0x2d1f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xad37);
        EXPECT(gbc.pc(), 0x2d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03D9
        gbc.setState(0xb694, 0x8c41, 0x2cc0, 0x591b, 0x96c6, 0x16f9, 0x0, 0x1);
        gbc.writeMem(0xb694, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0xb696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb694), 0xcb);
        EXPECT(gbc.readMem(0xb695), 0xa2);
        // CB A2 03DA
        gbc.setState(0x9a, 0xd90f, 0x3720, 0x1e11, 0xe99f, 0xceca, 0x1, 0x1);
        gbc.writeMem(0x9a, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd90f);
        EXPECT(gbc.pc(), 0x9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03DB
        gbc.setState(0xaab3, 0x94ca, 0x930, 0x189e, 0xf9fa, 0x4400, 0x1, 0x1);
        gbc.writeMem(0xaab3, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x94ca);
        EXPECT(gbc.pc(), 0xaab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab3), 0xcb);
        EXPECT(gbc.readMem(0xaab4), 0xa2);
        // CB A2 03DC
        gbc.setState(0xd30c, 0x6f4, 0xbd60, 0xd05e, 0xa2f5, 0x284a, 0x0, 0x1);
        gbc.writeMem(0xd30c, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0xd30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30c), 0xcb);
        EXPECT(gbc.readMem(0xd30d), 0xa2);
        // CB A2 03DD
        gbc.setState(0x1156, 0x2368, 0x900, 0x6af, 0xfedf, 0x9c85, 0x0, 0x1);
        gbc.writeMem(0x1156, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2368);
        EXPECT(gbc.pc(), 0x1158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03DF
        gbc.setState(0xe8b0, 0x3181, 0x9760, 0xb718, 0x4962, 0x2692, 0x1, 0x1);
        gbc.writeMem(0xe8b0, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3181);
        EXPECT(gbc.pc(), 0xe8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b0), 0xcb);
        EXPECT(gbc.readMem(0xe8b1), 0xa2);
        // CB A2 03E1
        gbc.setState(0x7f24, 0x5d5c, 0x7d20, 0x915b, 0x641, 0xb933, 0x0, 0x0);
        gbc.writeMem(0x7f24, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5d5c);
        EXPECT(gbc.pc(), 0x7f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A2 03E2
        gbc.setState(0x8b97, 0xfe6d, 0x4880, 0x8f8f, 0xf30, 0x43a, 0x1, 0x1);
        gbc.writeMem(0x8b97, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfe6d);
        EXPECT(gbc.pc(), 0x8b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b97), 0xcb);
        EXPECT(gbc.readMem(0x8b98), 0xa2);
        // CB A2 03E3
        gbc.setState(0xbac9, 0xffc3, 0x5ac0, 0xea8, 0x90b, 0xcd9d, 0x0, 0x0);
        gbc.writeMem(0xbac9, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xffc3);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0xa2);
        // CB A2 03E4
        gbc.setState(0x27fb, 0x4d4, 0xba90, 0xa05b, 0xe6e9, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0x27fb, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4d4);
        EXPECT(gbc.pc(), 0x27fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03E5
        gbc.setState(0x2360, 0x1bf3, 0xf5d0, 0xeaa2, 0xd3ad, 0x9e10, 0x0, 0x0);
        gbc.writeMem(0x2360, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1bf3);
        EXPECT(gbc.pc(), 0x2362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A2 03E6
        gbc.setState(0xd574, 0xf775, 0xdac0, 0x7d00, 0x47c7, 0x727e, 0x1, 0x1);
        gbc.writeMem(0xd574, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf775);
        EXPECT(gbc.pc(), 0xd576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd574), 0xcb);
        EXPECT(gbc.readMem(0xd575), 0xa2);
        // CB A2 03E7
        gbc.setState(0x20f, 0x7951, 0x930, 0x3f41, 0xbc77, 0x3532, 0x0, 0x0);
        gbc.writeMem(0x20f, { 0xcb, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7951);
        EXPECT(gbc.pc(), 0x211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
