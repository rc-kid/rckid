    TEST(gbcemu, opcode_cb_f1) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F1 0000
        gbc.setState(0xe01e, 0x94c1, 0x8f70, 0xa85a, 0x2278, 0xe9fe, 0x1, 0x1);
        gbc.writeMem(0xe01e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x94c1, gbc.sp());
        EXPECT(0xe020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01e));
        EXPECT(0xf1, gbc.readMem(0xe01f));
        // CB F1 0001
        gbc.setState(0xe3d7, 0xaa2e, 0x8a50, 0xb217, 0x2257, 0x99cb, 0x1, 0x1);
        gbc.writeMem(0xe3d7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa2e, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d7));
        EXPECT(0xf1, gbc.readMem(0xe3d8));
        // CB F1 0002
        gbc.setState(0x3898, 0xdb5e, 0x8280, 0x5cd2, 0x9d69, 0xc59, 0x0, 0x1);
        gbc.writeMem(0x3898, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdb5e, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0003
        gbc.setState(0x4e14, 0x4529, 0x24b0, 0x39f4, 0xe9ed, 0x7a8f, 0x1, 0x0);
        gbc.writeMem(0x4e14, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4529, gbc.sp());
        EXPECT(0x4e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0004
        gbc.setState(0x2ccc, 0x6b71, 0xc8e0, 0x4117, 0x19dd, 0x60d4, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6b71, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0005
        gbc.setState(0xe1b, 0xb3b5, 0x8c50, 0xf86b, 0xc38c, 0x3799, 0x0, 0x1);
        gbc.writeMem(0xe1b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0006
        gbc.setState(0x8f6a, 0x827, 0x5df0, 0xe923, 0xb1e5, 0xef4f, 0x0, 0x1);
        gbc.writeMem(0x8f6a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x827, gbc.sp());
        EXPECT(0x8f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6a));
        EXPECT(0xf1, gbc.readMem(0x8f6b));
        // CB F1 0008
        gbc.setState(0xcc81, 0xc00f, 0x3450, 0x6cf6, 0xb381, 0x6e7b, 0x0, 0x1);
        gbc.writeMem(0xcc81, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc00f, gbc.sp());
        EXPECT(0xcc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc81));
        EXPECT(0xf1, gbc.readMem(0xcc82));
        // CB F1 0009
        gbc.setState(0x49fe, 0x9a97, 0xb2b0, 0xaec2, 0xf02b, 0xb799, 0x0, 0x1);
        gbc.writeMem(0x49fe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9a97, gbc.sp());
        EXPECT(0x4a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 000A
        gbc.setState(0x6b1e, 0xc0b5, 0x4350, 0x8b27, 0xd64b, 0xbd89, 0x0, 0x1);
        gbc.writeMem(0x6b1e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc0b5, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 000B
        gbc.setState(0x402a, 0xfddb, 0x8470, 0x44d9, 0x9e13, 0xc281, 0x1, 0x0);
        gbc.writeMem(0x402a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x402c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 000C
        gbc.setState(0x9c43, 0x3b14, 0xb850, 0xde42, 0xc31d, 0xd7c6, 0x0, 0x0);
        gbc.writeMem(0x9c43, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x9c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c43));
        EXPECT(0xf1, gbc.readMem(0x9c44));
        // CB F1 000D
        gbc.setState(0xbd29, 0xc1a1, 0x7070, 0x9caa, 0x59a9, 0xac5f, 0x0, 0x0);
        gbc.writeMem(0xbd29, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc1a1, gbc.sp());
        EXPECT(0xbd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd29));
        EXPECT(0xf1, gbc.readMem(0xbd2a));
        // CB F1 000E
        gbc.setState(0x55dd, 0xd4bb, 0xbf70, 0x6727, 0x7e90, 0x9471, 0x0, 0x1);
        gbc.writeMem(0x55dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 000F
        gbc.setState(0xce1e, 0xc1ca, 0x9400, 0x735d, 0x6158, 0xf17, 0x1, 0x1);
        gbc.writeMem(0xce1e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc1ca, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1e));
        EXPECT(0xf1, gbc.readMem(0xce1f));
        // CB F1 0010
        gbc.setState(0xe424, 0x8a14, 0x54b0, 0xa6b6, 0x20c8, 0xc864, 0x1, 0x1);
        gbc.writeMem(0xe424, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0xf1, gbc.readMem(0xe425));
        // CB F1 0011
        gbc.setState(0x682b, 0xf327, 0xe3b0, 0x6494, 0x87b4, 0xa500, 0x0, 0x1);
        gbc.writeMem(0x682b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x682d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0012
        gbc.setState(0x652e, 0x8381, 0xffe0, 0xe01b, 0xc66a, 0xbd5b, 0x1, 0x0);
        gbc.writeMem(0x652e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8381, gbc.sp());
        EXPECT(0x6530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0013
        gbc.setState(0x5c97, 0x7213, 0xc4b0, 0x184b, 0xd41b, 0xe7b, 0x0, 0x1);
        gbc.writeMem(0x5c97, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0014
        gbc.setState(0x2518, 0x767d, 0x8d00, 0x5918, 0x5733, 0x3399, 0x0, 0x1);
        gbc.writeMem(0x2518, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x767d, gbc.sp());
        EXPECT(0x251a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0015
        gbc.setState(0x5850, 0x84d1, 0xce60, 0xadcf, 0xed59, 0xbf21, 0x1, 0x0);
        gbc.writeMem(0x5850, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x84d1, gbc.sp());
        EXPECT(0x5852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0016
        gbc.setState(0x1bc2, 0x4b65, 0xed90, 0x8760, 0xc232, 0x5f6a, 0x0, 0x0);
        gbc.writeMem(0x1bc2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4b65, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0018
        gbc.setState(0x30ed, 0xd664, 0x8120, 0xdb9, 0x2534, 0xe68f, 0x1, 0x1);
        gbc.writeMem(0x30ed, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0019
        gbc.setState(0x3146, 0x2a59, 0xfb80, 0x1777, 0x969b, 0x2ee3, 0x1, 0x1);
        gbc.writeMem(0x3146, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2a59, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 001A
        gbc.setState(0xcff2, 0x7bb0, 0xbe00, 0xd51f, 0xf07c, 0x6a26, 0x0, 0x1);
        gbc.writeMem(0xcff2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7bb0, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff2));
        EXPECT(0xf1, gbc.readMem(0xcff3));
        // CB F1 001B
        gbc.setState(0x325a, 0xe7cd, 0x3760, 0x77b6, 0x97a9, 0x574e, 0x1, 0x1);
        gbc.writeMem(0x325a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x325c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 001C
        gbc.setState(0x4c4d, 0x1b42, 0xf5c0, 0x1a51, 0x9060, 0x6e26, 0x0, 0x1);
        gbc.writeMem(0x4c4d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1b42, gbc.sp());
        EXPECT(0x4c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 001D
        gbc.setState(0xb8e0, 0xfc26, 0x1330, 0x6a08, 0x46d7, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0xb8e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0xf1, gbc.readMem(0xb8e1));
        // CB F1 001E
        gbc.setState(0xec08, 0x2f22, 0xa2b0, 0x4e4d, 0x2ef1, 0x4e05, 0x1, 0x1);
        gbc.writeMem(0xec08, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2f22, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec08));
        EXPECT(0xf1, gbc.readMem(0xec09));
        // CB F1 001F
        gbc.setState(0xe59a, 0xed63, 0xebe0, 0x5c9d, 0xbc2c, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0xe59a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xed63, gbc.sp());
        EXPECT(0xe59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59a));
        EXPECT(0xf1, gbc.readMem(0xe59b));
        // CB F1 0020
        gbc.setState(0xeaa9, 0x64be, 0x94d0, 0x2a4, 0x48f9, 0x4b1a, 0x1, 0x1);
        gbc.writeMem(0xeaa9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0xeaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa9));
        EXPECT(0xf1, gbc.readMem(0xeaaa));
        // CB F1 0021
        gbc.setState(0x99c1, 0xb5a7, 0x9360, 0xaad5, 0x6d69, 0xcb0c, 0x1, 0x1);
        gbc.writeMem(0x99c1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c1));
        EXPECT(0xf1, gbc.readMem(0x99c2));
        // CB F1 0022
        gbc.setState(0x86dd, 0x1bfe, 0x9f20, 0x7efa, 0xa30d, 0x4744, 0x0, 0x1);
        gbc.writeMem(0x86dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0xf1, gbc.readMem(0x86de));
        // CB F1 0023
        gbc.setState(0x6b59, 0xc6a4, 0x5bf0, 0x481e, 0xd752, 0x585e, 0x0, 0x1);
        gbc.writeMem(0x6b59, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0x6b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0024
        gbc.setState(0x1def, 0x7d8e, 0xe6b0, 0xaf23, 0xd40d, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7d8e, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0025
        gbc.setState(0x29f8, 0x587a, 0x1f70, 0xa59f, 0x29c7, 0x1ff6, 0x1, 0x0);
        gbc.writeMem(0x29f8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x587a, gbc.sp());
        EXPECT(0x29fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0026
        gbc.setState(0xa9c2, 0x3a72, 0xed40, 0x9091, 0xb608, 0x3b95, 0x1, 0x0);
        gbc.writeMem(0xa9c2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3a72, gbc.sp());
        EXPECT(0xa9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c2));
        EXPECT(0xf1, gbc.readMem(0xa9c3));
        // CB F1 0027
        gbc.setState(0x6535, 0x344e, 0x45f0, 0x7d8f, 0x51cc, 0x6e7b, 0x0, 0x0);
        gbc.writeMem(0x6535, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0028
        gbc.setState(0x57bf, 0x84f6, 0x4c50, 0xa8f2, 0xdbd8, 0xe1e0, 0x0, 0x0);
        gbc.writeMem(0x57bf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x84f6, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0029
        gbc.setState(0x7f33, 0xe213, 0x39e0, 0xbf9a, 0xd4eb, 0x5cb4, 0x1, 0x1);
        gbc.writeMem(0x7f33, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 002A
        gbc.setState(0xa480, 0xc52a, 0x4540, 0xbc89, 0x6260, 0xa00a, 0x0, 0x0);
        gbc.writeMem(0xa480, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0xa482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa480));
        EXPECT(0xf1, gbc.readMem(0xa481));
        // CB F1 002B
        gbc.setState(0x5c1f, 0x32d4, 0xcc30, 0xa502, 0xcb97, 0xc798, 0x0, 0x0);
        gbc.writeMem(0x5c1f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x32d4, gbc.sp());
        EXPECT(0x5c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 002C
        gbc.setState(0x1cd2, 0xb021, 0x5db0, 0xd06c, 0xbbcf, 0x3432, 0x1, 0x1);
        gbc.writeMem(0x1cd2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0x1cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 002D
        gbc.setState(0xbc90, 0xf724, 0x7a20, 0x395a, 0x90d8, 0x533f, 0x1, 0x0);
        gbc.writeMem(0xbc90, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xbc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc90));
        EXPECT(0xf1, gbc.readMem(0xbc91));
        // CB F1 002E
        gbc.setState(0xb3b, 0x84ff, 0x6ff0, 0x91ab, 0xbd28, 0x2619, 0x1, 0x0);
        gbc.writeMem(0xb3b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x84ff, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 002F
        gbc.setState(0xe03d, 0xdb32, 0x2df0, 0xb2d4, 0x4ce9, 0xd6f9, 0x1, 0x0);
        gbc.writeMem(0xe03d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdb32, gbc.sp());
        EXPECT(0xe03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03d));
        EXPECT(0xf1, gbc.readMem(0xe03e));
        // CB F1 0030
        gbc.setState(0xdd83, 0x238c, 0x5cf0, 0xb467, 0x4f85, 0xa255, 0x0, 0x0);
        gbc.writeMem(0xdd83, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0xdd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd83));
        EXPECT(0xf1, gbc.readMem(0xdd84));
        // CB F1 0031
        gbc.setState(0x639a, 0xd503, 0xfff0, 0x6410, 0x837d, 0xc17a, 0x0, 0x0);
        gbc.writeMem(0x639a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd503, gbc.sp());
        EXPECT(0x639c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0032
        gbc.setState(0x2200, 0x556a, 0x8c80, 0x6eab, 0x812a, 0x1a06, 0x0, 0x1);
        gbc.writeMem(0x2200, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x556a, gbc.sp());
        EXPECT(0x2202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0033
        gbc.setState(0x7126, 0x2cb3, 0x2210, 0x7953, 0x3c22, 0xf825, 0x1, 0x1);
        gbc.writeMem(0x7126, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x7128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0034
        gbc.setState(0x8217, 0x3f17, 0x44d0, 0x6c7a, 0x1fff, 0x29bb, 0x0, 0x0);
        gbc.writeMem(0x8217, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8217));
        EXPECT(0xf1, gbc.readMem(0x8218));
        // CB F1 0035
        gbc.setState(0x6ebd, 0xa00c, 0x2110, 0xf2da, 0x584a, 0x48b2, 0x1, 0x1);
        gbc.writeMem(0x6ebd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa00c, gbc.sp());
        EXPECT(0x6ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0036
        gbc.setState(0x3ad1, 0x8a75, 0x9010, 0x6f62, 0x65f1, 0x4887, 0x0, 0x0);
        gbc.writeMem(0x3ad1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8a75, gbc.sp());
        EXPECT(0x3ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0038
        gbc.setState(0xcc88, 0x3f15, 0x7250, 0x5623, 0x1650, 0x63d6, 0x1, 0x0);
        gbc.writeMem(0xcc88, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0xcc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc88));
        EXPECT(0xf1, gbc.readMem(0xcc89));
        // CB F1 003A
        gbc.setState(0xe465, 0xaf, 0xa730, 0xf873, 0x4996, 0x45d7, 0x1, 0x0);
        gbc.writeMem(0xe465, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaf, gbc.sp());
        EXPECT(0xe467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe465));
        EXPECT(0xf1, gbc.readMem(0xe466));
        // CB F1 003B
        gbc.setState(0x3ea7, 0xc425, 0xf9f0, 0x3bc0, 0x292b, 0xc5c4, 0x0, 0x1);
        gbc.writeMem(0x3ea7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0x3ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 003C
        gbc.setState(0x787b, 0xa5d2, 0x860, 0xeb7c, 0x9295, 0x8894, 0x0, 0x1);
        gbc.writeMem(0x787b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa5d2, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 003D
        gbc.setState(0x4b6b, 0xd685, 0x55c0, 0xeccc, 0xbed3, 0xaaea, 0x1, 0x1);
        gbc.writeMem(0x4b6b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0x4b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 003E
        gbc.setState(0xeca1, 0x6480, 0xf680, 0x2f7c, 0x7f13, 0xe4a5, 0x1, 0x1);
        gbc.writeMem(0xeca1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0xeca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca1));
        EXPECT(0xf1, gbc.readMem(0xeca2));
        // CB F1 003F
        gbc.setState(0xcac4, 0x2ed1, 0x67e0, 0x3951, 0x4796, 0x6631, 0x0, 0x0);
        gbc.writeMem(0xcac4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0xcac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac4));
        EXPECT(0xf1, gbc.readMem(0xcac5));
        // CB F1 0040
        gbc.setState(0x4f6a, 0x11a0, 0x380, 0xd75, 0xf483, 0x615b, 0x0, 0x1);
        gbc.writeMem(0x4f6a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11a0, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0041
        gbc.setState(0x7452, 0xaea1, 0x8d40, 0x5064, 0xbe0a, 0x62cd, 0x1, 0x1);
        gbc.writeMem(0x7452, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0x7454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0042
        gbc.setState(0x10b7, 0x6290, 0xd480, 0x98c8, 0xb2d, 0x123a, 0x0, 0x1);
        gbc.writeMem(0x10b7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0043
        gbc.setState(0xe921, 0x34db, 0x44e0, 0x9091, 0x19ef, 0x5448, 0x0, 0x0);
        gbc.writeMem(0xe921, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x34db, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0xf1, gbc.readMem(0xe922));
        // CB F1 0044
        gbc.setState(0xd218, 0x2168, 0x15b0, 0x707f, 0xc6b0, 0xbc7a, 0x1, 0x1);
        gbc.writeMem(0xd218, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2168, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd218));
        EXPECT(0xf1, gbc.readMem(0xd219));
        // CB F1 0045
        gbc.setState(0xd276, 0x50b7, 0xe3f0, 0x3d0, 0x5bc3, 0xe874, 0x1, 0x1);
        gbc.writeMem(0xd276, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0xd278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd276));
        EXPECT(0xf1, gbc.readMem(0xd277));
        // CB F1 0046
        gbc.setState(0x43b4, 0xe7ca, 0xd860, 0xf22, 0x371, 0x2c34, 0x0, 0x0);
        gbc.writeMem(0x43b4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x43b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0047
        gbc.setState(0xb38b, 0x90c3, 0xb830, 0xfce4, 0x1d23, 0xaaf4, 0x1, 0x0);
        gbc.writeMem(0xb38b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x90c3, gbc.sp());
        EXPECT(0xb38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38b));
        EXPECT(0xf1, gbc.readMem(0xb38c));
        // CB F1 0048
        gbc.setState(0xc206, 0x3efb, 0x2850, 0xe3c6, 0x9eee, 0x251, 0x1, 0x0);
        gbc.writeMem(0xc206, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc206));
        EXPECT(0xf1, gbc.readMem(0xc207));
        // CB F1 0049
        gbc.setState(0x4460, 0x7528, 0xfe50, 0xb9e7, 0x9e8f, 0xaa1b, 0x1, 0x1);
        gbc.writeMem(0x4460, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x4462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 004A
        gbc.setState(0x421e, 0x2715, 0xd180, 0xfb99, 0x6200, 0x8f77, 0x1, 0x1);
        gbc.writeMem(0x421e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2715, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 004B
        gbc.setState(0x4204, 0xc69f, 0x8740, 0x5134, 0x9ce6, 0x95a, 0x0, 0x1);
        gbc.writeMem(0x4204, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc69f, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 004C
        gbc.setState(0x2a39, 0xd4fd, 0x74a0, 0x1e6f, 0xddf6, 0x16c8, 0x1, 0x0);
        gbc.writeMem(0x2a39, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 004D
        gbc.setState(0xb97, 0xec33, 0x9f30, 0x96c, 0x3378, 0x7baa, 0x1, 0x1);
        gbc.writeMem(0xb97, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0xb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 004E
        gbc.setState(0xe055, 0x5b5d, 0x8cb0, 0x80c2, 0xd115, 0xe6b1, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5b5d, gbc.sp());
        EXPECT(0xe057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe055));
        EXPECT(0xf1, gbc.readMem(0xe056));
        // CB F1 004F
        gbc.setState(0xc6a0, 0x3e96, 0x48a0, 0x22c2, 0x721d, 0xbfda, 0x1, 0x1);
        gbc.writeMem(0xc6a0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a0));
        EXPECT(0xf1, gbc.readMem(0xc6a1));
        // CB F1 0050
        gbc.setState(0xd2af, 0x90b7, 0x7fb0, 0x34b6, 0xcd48, 0x8ed, 0x1, 0x0);
        gbc.writeMem(0xd2af, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0xd2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2af));
        EXPECT(0xf1, gbc.readMem(0xd2b0));
        // CB F1 0051
        gbc.setState(0x21c5, 0x206c, 0xbf40, 0x50d, 0x5de6, 0xcb70, 0x1, 0x1);
        gbc.writeMem(0x21c5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x206c, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0052
        gbc.setState(0xae7c, 0x528f, 0xbb70, 0x2a2d, 0xa0c2, 0xfa9e, 0x1, 0x0);
        gbc.writeMem(0xae7c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0xae7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7c));
        EXPECT(0xf1, gbc.readMem(0xae7d));
        // CB F1 0053
        gbc.setState(0x9985, 0x8ad7, 0x1130, 0xc13c, 0x691d, 0xe6ab, 0x0, 0x1);
        gbc.writeMem(0x9985, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8ad7, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9985));
        EXPECT(0xf1, gbc.readMem(0x9986));
        // CB F1 0054
        gbc.setState(0x8d55, 0xabed, 0x3bb0, 0xe9ad, 0x2c08, 0xa794, 0x0, 0x1);
        gbc.writeMem(0x8d55, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0xf1, gbc.readMem(0x8d56));
        // CB F1 0055
        gbc.setState(0xa2b4, 0xc6f3, 0x7330, 0x2925, 0x676f, 0x144b, 0x0, 0x0);
        gbc.writeMem(0xa2b4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0xa2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b4));
        EXPECT(0xf1, gbc.readMem(0xa2b5));
        // CB F1 0056
        gbc.setState(0x87e8, 0x5f67, 0xce00, 0xc259, 0xbfa3, 0x28cf, 0x1, 0x0);
        gbc.writeMem(0x87e8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5f67, gbc.sp());
        EXPECT(0x87ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e8));
        EXPECT(0xf1, gbc.readMem(0x87e9));
        // CB F1 0057
        gbc.setState(0x33a7, 0x6dd, 0xf7e0, 0xcfd4, 0x41c8, 0xe621, 0x1, 0x1);
        gbc.writeMem(0x33a7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6dd, gbc.sp());
        EXPECT(0x33a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0058
        gbc.setState(0x4424, 0xca96, 0x4510, 0x3c54, 0x584, 0xd26f, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0059
        gbc.setState(0x384c, 0xcfd5, 0x5b80, 0x268, 0xae65, 0xec90, 0x0, 0x0);
        gbc.writeMem(0x384c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcfd5, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 005A
        gbc.setState(0xa382, 0xefa6, 0x34d0, 0x7ee4, 0x4a84, 0xf13e, 0x0, 0x1);
        gbc.writeMem(0xa382, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xefa6, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa382));
        EXPECT(0xf1, gbc.readMem(0xa383));
        // CB F1 005B
        gbc.setState(0x5e2e, 0x3e82, 0xe8f0, 0xa610, 0x30a3, 0x5b7d, 0x1, 0x1);
        gbc.writeMem(0x5e2e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e82, gbc.sp());
        EXPECT(0x5e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 005C
        gbc.setState(0x7928, 0x10de, 0xbd30, 0x451, 0x8cb5, 0x613b, 0x0, 0x0);
        gbc.writeMem(0x7928, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0x792a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 005D
        gbc.setState(0x6e0d, 0x5128, 0x3930, 0x2f84, 0x3a4f, 0xf51b, 0x0, 0x1);
        gbc.writeMem(0x6e0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 005E
        gbc.setState(0xdd8c, 0x2e10, 0x8020, 0xf6b7, 0x5853, 0x8476, 0x1, 0x0);
        gbc.writeMem(0xdd8c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2e10, gbc.sp());
        EXPECT(0xdd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8c));
        EXPECT(0xf1, gbc.readMem(0xdd8d));
        // CB F1 005F
        gbc.setState(0x2b0c, 0x85d3, 0xf620, 0x7f0e, 0xf8a8, 0xb637, 0x0, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x85d3, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0060
        gbc.setState(0x7eb7, 0x37b3, 0x4300, 0xc958, 0x87a3, 0x1722, 0x0, 0x1);
        gbc.writeMem(0x7eb7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0061
        gbc.setState(0x15fc, 0x6c01, 0x3c30, 0xfbf8, 0x95a4, 0x597f, 0x1, 0x1);
        gbc.writeMem(0x15fc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0x15fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0062
        gbc.setState(0x290f, 0xbd97, 0xac40, 0x697a, 0x4009, 0x89bd, 0x0, 0x0);
        gbc.writeMem(0x290f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0x2911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0063
        gbc.setState(0xba69, 0x271a, 0x4c10, 0x609b, 0xdb7c, 0x23ac, 0x0, 0x0);
        gbc.writeMem(0xba69, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x271a, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba69));
        EXPECT(0xf1, gbc.readMem(0xba6a));
        // CB F1 0064
        gbc.setState(0x3810, 0xa02d, 0xc3a0, 0x271a, 0xbcc7, 0x5169, 0x0, 0x1);
        gbc.writeMem(0x3810, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa02d, gbc.sp());
        EXPECT(0x3812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0065
        gbc.setState(0xd581, 0x78d2, 0x6910, 0xadbc, 0x4234, 0x154b, 0x1, 0x1);
        gbc.writeMem(0xd581, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x78d2, gbc.sp());
        EXPECT(0xd583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd581));
        EXPECT(0xf1, gbc.readMem(0xd582));
        // CB F1 0066
        gbc.setState(0x8bff, 0xdd2e, 0x3980, 0xbe03, 0x2d0e, 0xa48d, 0x0, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bff));
        EXPECT(0xf1, gbc.readMem(0x8c00));
        // CB F1 0067
        gbc.setState(0x8284, 0xde73, 0xa5c0, 0x7919, 0xf6c5, 0xaf4a, 0x0, 0x1);
        gbc.writeMem(0x8284, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0x8286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8284));
        EXPECT(0xf1, gbc.readMem(0x8285));
        // CB F1 0068
        gbc.setState(0x67a, 0x49ff, 0x960, 0x1738, 0x89bf, 0xbf5, 0x1, 0x1);
        gbc.writeMem(0x67a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0069
        gbc.setState(0x668d, 0xd62c, 0x1280, 0xde42, 0xfcb3, 0x1bcf, 0x1, 0x0);
        gbc.writeMem(0x668d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0x668f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 006A
        gbc.setState(0x455c, 0xc9a6, 0x9d80, 0xb514, 0xd523, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0x455c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 006B
        gbc.setState(0x9085, 0x429f, 0xdd0, 0x683f, 0x40b0, 0x50cd, 0x1, 0x0);
        gbc.writeMem(0x9085, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x429f, gbc.sp());
        EXPECT(0x9087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9085));
        EXPECT(0xf1, gbc.readMem(0x9086));
        // CB F1 006C
        gbc.setState(0x116d, 0x82e4, 0xd2f0, 0x191d, 0x7f9f, 0x2c6c, 0x1, 0x1);
        gbc.writeMem(0x116d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x82e4, gbc.sp());
        EXPECT(0x116f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 006D
        gbc.setState(0x3f1e, 0xd417, 0x5940, 0x2b38, 0x50a3, 0x92ae, 0x1, 0x0);
        gbc.writeMem(0x3f1e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd417, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 006E
        gbc.setState(0x6edd, 0x64cf, 0x5650, 0x6edc, 0x3cee, 0x5d5a, 0x0, 0x0);
        gbc.writeMem(0x6edd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x64cf, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 006F
        gbc.setState(0xdb1f, 0xb8c, 0x10d0, 0xeebd, 0xff2b, 0x653d, 0x1, 0x0);
        gbc.writeMem(0xdb1f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb8c, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1f));
        EXPECT(0xf1, gbc.readMem(0xdb20));
        // CB F1 0070
        gbc.setState(0x70de, 0x99f2, 0xfca0, 0x3089, 0x54cc, 0x77e0, 0x1, 0x0);
        gbc.writeMem(0x70de, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x99f2, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0071
        gbc.setState(0x4d8e, 0xe6ae, 0xf8e0, 0xe06c, 0xd745, 0x2b36, 0x0, 0x0);
        gbc.writeMem(0x4d8e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0x4d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0072
        gbc.setState(0x1caa, 0x581, 0xcb20, 0xbc54, 0xb174, 0xdc3f, 0x1, 0x1);
        gbc.writeMem(0x1caa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x581, gbc.sp());
        EXPECT(0x1cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0074
        gbc.setState(0x9cf3, 0x82d0, 0xcc0, 0x818c, 0x940c, 0x58d2, 0x0, 0x1);
        gbc.writeMem(0x9cf3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x9cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf3));
        EXPECT(0xf1, gbc.readMem(0x9cf4));
        // CB F1 0075
        gbc.setState(0xe289, 0x95e8, 0x7d00, 0xba26, 0x4358, 0xeb82, 0x1, 0x0);
        gbc.writeMem(0xe289, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x95e8, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe289));
        EXPECT(0xf1, gbc.readMem(0xe28a));
        // CB F1 0076
        gbc.setState(0x1b41, 0xcc52, 0x6a40, 0x1335, 0xdb45, 0xf01b, 0x0, 0x0);
        gbc.writeMem(0x1b41, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0077
        gbc.setState(0x706f, 0x544b, 0xec00, 0xc773, 0x912d, 0x9585, 0x0, 0x0);
        gbc.writeMem(0x706f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x544b, gbc.sp());
        EXPECT(0x7071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0078
        gbc.setState(0x3fda, 0x7fe9, 0x1380, 0x210f, 0x3307, 0xbfb2, 0x1, 0x0);
        gbc.writeMem(0x3fda, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0079
        gbc.setState(0x89df, 0x55a7, 0x9320, 0x4d16, 0x1ca8, 0x947d, 0x1, 0x0);
        gbc.writeMem(0x89df, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89df));
        EXPECT(0xf1, gbc.readMem(0x89e0));
        // CB F1 007A
        gbc.setState(0x4e85, 0x7014, 0xba60, 0x15a3, 0x100c, 0x3067, 0x0, 0x1);
        gbc.writeMem(0x4e85, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7014, gbc.sp());
        EXPECT(0x4e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 007B
        gbc.setState(0xe3eb, 0x7c5b, 0x3760, 0x7a3d, 0x405, 0x6594, 0x1, 0x1);
        gbc.writeMem(0xe3eb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3eb));
        EXPECT(0xf1, gbc.readMem(0xe3ec));
        // CB F1 007C
        gbc.setState(0xd684, 0xe892, 0xe6e0, 0x5a69, 0x2ac8, 0x8a17, 0x0, 0x0);
        gbc.writeMem(0xd684, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe892, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd684));
        EXPECT(0xf1, gbc.readMem(0xd685));
        // CB F1 007D
        gbc.setState(0x946b, 0x94fa, 0xaa00, 0xad39, 0xf571, 0x3fe1, 0x1, 0x0);
        gbc.writeMem(0x946b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x94fa, gbc.sp());
        EXPECT(0x946d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946b));
        EXPECT(0xf1, gbc.readMem(0x946c));
        // CB F1 007F
        gbc.setState(0x3eec, 0xb6bf, 0x9ce0, 0x1c53, 0xf1cc, 0x6406, 0x0, 0x0);
        gbc.writeMem(0x3eec, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0080
        gbc.setState(0xa9a7, 0x490f, 0x1050, 0x32fc, 0x4347, 0x3e3e, 0x0, 0x1);
        gbc.writeMem(0xa9a7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x490f, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a7));
        EXPECT(0xf1, gbc.readMem(0xa9a8));
        // CB F1 0081
        gbc.setState(0x3f56, 0x9fe1, 0xe560, 0xe217, 0x8cca, 0x6629, 0x0, 0x0);
        gbc.writeMem(0x3f56, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9fe1, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0082
        gbc.setState(0x355b, 0x1600, 0x6300, 0xf8bd, 0x888c, 0x5395, 0x0, 0x1);
        gbc.writeMem(0x355b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1600, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0083
        gbc.setState(0x97c7, 0xa8e2, 0xaeb0, 0x1289, 0x62b1, 0xa7a5, 0x1, 0x0);
        gbc.writeMem(0x97c7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0x97c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c7));
        EXPECT(0xf1, gbc.readMem(0x97c8));
        // CB F1 0084
        gbc.setState(0x1ba0, 0xa916, 0x3280, 0xfecb, 0x2980, 0x5016, 0x0, 0x1);
        gbc.writeMem(0x1ba0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa916, gbc.sp());
        EXPECT(0x1ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0085
        gbc.setState(0xbfeb, 0x5382, 0x9610, 0x9e60, 0xc13, 0x964f, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfeb));
        EXPECT(0xf1, gbc.readMem(0xbfec));
        // CB F1 0086
        gbc.setState(0x206b, 0x276f, 0x12b0, 0x18f6, 0xc1d2, 0x4297, 0x1, 0x0);
        gbc.writeMem(0x206b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0087
        gbc.setState(0x70b7, 0x7cd0, 0xd920, 0xf5b6, 0x6e46, 0xf3c6, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7cd0, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0088
        gbc.setState(0xe2b4, 0x21c1, 0x2130, 0x50e4, 0x5865, 0x96a8, 0x1, 0x0);
        gbc.writeMem(0xe2b4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0xe2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b4));
        EXPECT(0xf1, gbc.readMem(0xe2b5));
        // CB F1 0089
        gbc.setState(0xae7b, 0xc460, 0x4b70, 0xd715, 0xb69, 0x2743, 0x0, 0x0);
        gbc.writeMem(0xae7b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc460, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7b));
        EXPECT(0xf1, gbc.readMem(0xae7c));
        // CB F1 008B
        gbc.setState(0xbed6, 0xbe40, 0xb3f0, 0xaa7e, 0xb861, 0x7e5c, 0x1, 0x1);
        gbc.writeMem(0xbed6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbe40, gbc.sp());
        EXPECT(0xbed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed6));
        EXPECT(0xf1, gbc.readMem(0xbed7));
        // CB F1 008C
        gbc.setState(0xe9db, 0x5ce7, 0x6550, 0x2e2a, 0x5d42, 0xa800, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ce7, gbc.sp());
        EXPECT(0xe9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9db));
        EXPECT(0xf1, gbc.readMem(0xe9dc));
        // CB F1 008D
        gbc.setState(0x59b, 0x6791, 0xb120, 0x50a6, 0x3e6c, 0xa3d8, 0x1, 0x1);
        gbc.writeMem(0x59b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6791, gbc.sp());
        EXPECT(0x59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 008E
        gbc.setState(0xe8b9, 0xf760, 0xf820, 0x1298, 0xe277, 0xf93d, 0x0, 0x0);
        gbc.writeMem(0xe8b9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf760, gbc.sp());
        EXPECT(0xe8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b9));
        EXPECT(0xf1, gbc.readMem(0xe8ba));
        // CB F1 008F
        gbc.setState(0xd6b6, 0xa448, 0xa270, 0xdcb9, 0xb91e, 0x2743, 0x1, 0x1);
        gbc.writeMem(0xd6b6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa448, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b6));
        EXPECT(0xf1, gbc.readMem(0xd6b7));
        // CB F1 0090
        gbc.setState(0x5de7, 0xc177, 0x7160, 0xc8c2, 0x1fc, 0xd0b6, 0x1, 0x0);
        gbc.writeMem(0x5de7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc177, gbc.sp());
        EXPECT(0x5de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0091
        gbc.setState(0xdc11, 0x652c, 0xdbd0, 0xdede, 0xf39a, 0x677c, 0x0, 0x0);
        gbc.writeMem(0xdc11, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc11));
        EXPECT(0xf1, gbc.readMem(0xdc12));
        // CB F1 0093
        gbc.setState(0xafd8, 0x22, 0x4a50, 0xb68a, 0x88eb, 0xe931, 0x0, 0x0);
        gbc.writeMem(0xafd8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x22, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd8));
        EXPECT(0xf1, gbc.readMem(0xafd9));
        // CB F1 0094
        gbc.setState(0x7ebb, 0xa62e, 0xa3a0, 0x5e6e, 0x5cc, 0x52dc, 0x0, 0x0);
        gbc.writeMem(0x7ebb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa62e, gbc.sp());
        EXPECT(0x7ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0095
        gbc.setState(0xa94d, 0x40a, 0x2d50, 0x8770, 0x3c91, 0x5c55, 0x0, 0x1);
        gbc.writeMem(0xa94d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x40a, gbc.sp());
        EXPECT(0xa94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94d));
        EXPECT(0xf1, gbc.readMem(0xa94e));
        // CB F1 0096
        gbc.setState(0xdc56, 0xb6c0, 0x6d00, 0xc14f, 0xf2d0, 0x10fc, 0x0, 0x0);
        gbc.writeMem(0xdc56, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xdc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc56));
        EXPECT(0xf1, gbc.readMem(0xdc57));
        // CB F1 0097
        gbc.setState(0x404f, 0x2582, 0x7250, 0xcd78, 0xfaaa, 0xb7c7, 0x1, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2582, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0098
        gbc.setState(0xbafb, 0x16ed, 0xf440, 0xf002, 0xd67d, 0x11d3, 0x0, 0x1);
        gbc.writeMem(0xbafb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafb));
        EXPECT(0xf1, gbc.readMem(0xbafc));
        // CB F1 0099
        gbc.setState(0xd01c, 0x9692, 0x7240, 0x7fcb, 0x730a, 0xad33, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0xd01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01c));
        EXPECT(0xf1, gbc.readMem(0xd01d));
        // CB F1 009A
        gbc.setState(0x4916, 0xe78b, 0x3610, 0xfdf8, 0x5d87, 0x6c93, 0x1, 0x0);
        gbc.writeMem(0x4916, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe78b, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 009B
        gbc.setState(0x5137, 0xa7fd, 0x3840, 0xda4c, 0xe76f, 0x670, 0x0, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 009C
        gbc.setState(0xe6a3, 0x1e17, 0xe90, 0x7c57, 0x73f4, 0xec60, 0x1, 0x1);
        gbc.writeMem(0xe6a3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1e17, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a3));
        EXPECT(0xf1, gbc.readMem(0xe6a4));
        // CB F1 009D
        gbc.setState(0x1272, 0xa44, 0x2170, 0x29d2, 0x3edd, 0x2c39, 0x1, 0x0);
        gbc.writeMem(0x1272, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa44, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 009E
        gbc.setState(0x27b2, 0x357, 0x72f0, 0xdf1e, 0x9271, 0xf446, 0x0, 0x0);
        gbc.writeMem(0x27b2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0x27b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00A0
        gbc.setState(0x3f21, 0xc720, 0x190, 0xd4be, 0x3549, 0xa75b, 0x0, 0x1);
        gbc.writeMem(0x3f21, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00A1
        gbc.setState(0x26e5, 0x5dcc, 0xb7b0, 0x8666, 0x7f89, 0x318e, 0x1, 0x1);
        gbc.writeMem(0x26e5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5dcc, gbc.sp());
        EXPECT(0x26e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00A2
        gbc.setState(0x9f7b, 0x17fe, 0xdec0, 0x4eeb, 0x1c5a, 0x6b28, 0x1, 0x1);
        gbc.writeMem(0x9f7b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        EXPECT(0xf1, gbc.readMem(0x9f7c));
        // CB F1 00A3
        gbc.setState(0xab9c, 0x6470, 0x5bf0, 0xe5e8, 0x69b1, 0xd867, 0x0, 0x1);
        gbc.writeMem(0xab9c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6470, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9c));
        EXPECT(0xf1, gbc.readMem(0xab9d));
        // CB F1 00A4
        gbc.setState(0x8426, 0xd442, 0x7870, 0x3fc3, 0x7a99, 0x5e8e, 0x1, 0x1);
        gbc.writeMem(0x8426, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd442, gbc.sp());
        EXPECT(0x8428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8426));
        EXPECT(0xf1, gbc.readMem(0x8427));
        // CB F1 00A5
        gbc.setState(0x2163, 0x8e66, 0xd820, 0xbcae, 0x47d2, 0x1698, 0x1, 0x1);
        gbc.writeMem(0x2163, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00A6
        gbc.setState(0x4f6e, 0xf44d, 0xd7f0, 0x65b9, 0x70d8, 0xbef5, 0x0, 0x1);
        gbc.writeMem(0x4f6e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf44d, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00A7
        gbc.setState(0x344d, 0x39f1, 0xd570, 0x7307, 0xe961, 0x8c8e, 0x1, 0x1);
        gbc.writeMem(0x344d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x39f1, gbc.sp());
        EXPECT(0x344f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00A8
        gbc.setState(0x210f, 0xb752, 0x90c0, 0x5461, 0x8464, 0x269c, 0x0, 0x1);
        gbc.writeMem(0x210f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00A9
        gbc.setState(0xe9ad, 0x992b, 0x4c70, 0x66e3, 0xd4a8, 0x42a6, 0x0, 0x0);
        gbc.writeMem(0xe9ad, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ad));
        EXPECT(0xf1, gbc.readMem(0xe9ae));
        // CB F1 00AA
        gbc.setState(0xaaaa, 0xcd55, 0x360, 0x8612, 0x76d5, 0xe110, 0x0, 0x0);
        gbc.writeMem(0xaaaa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0xaaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaaa));
        EXPECT(0xf1, gbc.readMem(0xaaab));
        // CB F1 00AB
        gbc.setState(0x886f, 0x3dbf, 0xa4c0, 0x1e60, 0x7bc6, 0x5ca7, 0x0, 0x1);
        gbc.writeMem(0x886f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3dbf, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886f));
        EXPECT(0xf1, gbc.readMem(0x8870));
        // CB F1 00AC
        gbc.setState(0x46d5, 0x2ac1, 0xac60, 0xede2, 0xee22, 0x787, 0x1, 0x0);
        gbc.writeMem(0x46d5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2ac1, gbc.sp());
        EXPECT(0x46d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00AD
        gbc.setState(0xab68, 0xa50f, 0xc4f0, 0x8e04, 0x5a19, 0x8800, 0x1, 0x1);
        gbc.writeMem(0xab68, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa50f, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab68));
        EXPECT(0xf1, gbc.readMem(0xab69));
        // CB F1 00B0
        gbc.setState(0xd44a, 0xf42e, 0xda50, 0x8396, 0x8b, 0x7359, 0x1, 0x0);
        gbc.writeMem(0xd44a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44a));
        EXPECT(0xf1, gbc.readMem(0xd44b));
        // CB F1 00B1
        gbc.setState(0x9469, 0xcb08, 0xe1a0, 0xda77, 0x51dd, 0x8bf2, 0x0, 0x1);
        gbc.writeMem(0x9469, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9469));
        EXPECT(0xf1, gbc.readMem(0x946a));
        // CB F1 00B2
        gbc.setState(0xb5d5, 0x2edd, 0xf50, 0x33b4, 0xab35, 0xfd68, 0x1, 0x1);
        gbc.writeMem(0xb5d5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2edd, gbc.sp());
        EXPECT(0xb5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d5));
        EXPECT(0xf1, gbc.readMem(0xb5d6));
        // CB F1 00B3
        gbc.setState(0x80d1, 0x5efd, 0xce10, 0xf7a, 0x507f, 0x4e60, 0x0, 0x1);
        gbc.writeMem(0x80d1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5efd, gbc.sp());
        EXPECT(0x80d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d1));
        EXPECT(0xf1, gbc.readMem(0x80d2));
        // CB F1 00B4
        gbc.setState(0xc6e1, 0x326b, 0xe160, 0xf197, 0xe8ca, 0xad28, 0x1, 0x0);
        gbc.writeMem(0xc6e1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x326b, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e1));
        EXPECT(0xf1, gbc.readMem(0xc6e2));
        // CB F1 00B5
        gbc.setState(0x99ec, 0x28dd, 0x5040, 0xdf7e, 0xee25, 0x4c8b, 0x1, 0x1);
        gbc.writeMem(0x99ec, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x28dd, gbc.sp());
        EXPECT(0x99ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ec));
        EXPECT(0xf1, gbc.readMem(0x99ed));
        // CB F1 00B6
        gbc.setState(0x2745, 0x89ca, 0x110, 0xec11, 0xdf1, 0xfd11, 0x0, 0x1);
        gbc.writeMem(0x2745, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x89ca, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00B7
        gbc.setState(0x4e2b, 0x8d19, 0xa9f0, 0xf2f1, 0xc566, 0x38ca, 0x0, 0x0);
        gbc.writeMem(0x4e2b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x4e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00B8
        gbc.setState(0x2cfe, 0x59a7, 0x6140, 0x90af, 0x6ee2, 0x673, 0x0, 0x1);
        gbc.writeMem(0x2cfe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x59a7, gbc.sp());
        EXPECT(0x2d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00B9
        gbc.setState(0xc76, 0xa1b9, 0x88d0, 0x5162, 0xa64d, 0x5335, 0x1, 0x1);
        gbc.writeMem(0xc76, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa1b9, gbc.sp());
        EXPECT(0xc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00BA
        gbc.setState(0x6113, 0x55a5, 0x73c0, 0xb0c4, 0x9e5a, 0x8cfe, 0x0, 0x1);
        gbc.writeMem(0x6113, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00BB
        gbc.setState(0xc803, 0x118a, 0x56a0, 0x1108, 0x7b43, 0x5ce0, 0x0, 0x1);
        gbc.writeMem(0xc803, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x118a, gbc.sp());
        EXPECT(0xc805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc803));
        EXPECT(0xf1, gbc.readMem(0xc804));
        // CB F1 00BC
        gbc.setState(0xc1b0, 0x8853, 0x14f0, 0x3449, 0xb2b2, 0xd1b6, 0x0, 0x1);
        gbc.writeMem(0xc1b0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8853, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b0));
        EXPECT(0xf1, gbc.readMem(0xc1b1));
        // CB F1 00BD
        gbc.setState(0xeb30, 0xf64d, 0xab90, 0xa994, 0xd680, 0x6c28, 0x1, 0x0);
        gbc.writeMem(0xeb30, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0xeb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb30));
        EXPECT(0xf1, gbc.readMem(0xeb31));
        // CB F1 00BE
        gbc.setState(0x8ccb, 0x4a1b, 0x5950, 0xae0c, 0x9e94, 0x3d5c, 0x1, 0x1);
        gbc.writeMem(0x8ccb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4a1b, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccb));
        EXPECT(0xf1, gbc.readMem(0x8ccc));
        // CB F1 00BF
        gbc.setState(0x8fa6, 0x415a, 0x7df0, 0x63fb, 0x432e, 0x428d, 0x0, 0x1);
        gbc.writeMem(0x8fa6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x415a, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa6));
        EXPECT(0xf1, gbc.readMem(0x8fa7));
        // CB F1 00C0
        gbc.setState(0x53e6, 0x379a, 0x30f0, 0xb927, 0x17cb, 0x692e, 0x0, 0x0);
        gbc.writeMem(0x53e6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00C1
        gbc.setState(0x1bce, 0xcd37, 0x72f0, 0xb517, 0x32f2, 0xc6be, 0x1, 0x1);
        gbc.writeMem(0x1bce, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcd37, gbc.sp());
        EXPECT(0x1bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00C2
        gbc.setState(0x7a60, 0xedc7, 0xf660, 0xcd7b, 0x8570, 0x40e, 0x1, 0x1);
        gbc.writeMem(0x7a60, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x7a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00C3
        gbc.setState(0x4029, 0x9e42, 0x4f50, 0xc9fb, 0xcfb5, 0xd992, 0x0, 0x1);
        gbc.writeMem(0x4029, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9e42, gbc.sp());
        EXPECT(0x402b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00C4
        gbc.setState(0x46c5, 0x7a03, 0x26e0, 0xb91e, 0x4a7b, 0xc322, 0x1, 0x0);
        gbc.writeMem(0x46c5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a03, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00C5
        gbc.setState(0x31ef, 0xb33c, 0xa610, 0x795c, 0x2915, 0x8aa, 0x0, 0x0);
        gbc.writeMem(0x31ef, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00C6
        gbc.setState(0xa24a, 0xf764, 0xcd10, 0x9290, 0x5a9f, 0x8a5e, 0x1, 0x1);
        gbc.writeMem(0xa24a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xf1, gbc.readMem(0xa24b));
        // CB F1 00C7
        gbc.setState(0x2f49, 0x893c, 0xf90, 0x3f57, 0xf713, 0x7ef2, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00C8
        gbc.setState(0xc555, 0x5be8, 0x6360, 0x9bd6, 0xb95c, 0x1033, 0x1, 0x0);
        gbc.writeMem(0xc555, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5be8, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc555));
        EXPECT(0xf1, gbc.readMem(0xc556));
        // CB F1 00C9
        gbc.setState(0xbad1, 0x822a, 0xd5f0, 0x448d, 0xa8a3, 0xa647, 0x0, 0x1);
        gbc.writeMem(0xbad1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad1));
        EXPECT(0xf1, gbc.readMem(0xbad2));
        // CB F1 00CA
        gbc.setState(0x25ef, 0x8089, 0x2c30, 0xa296, 0x40ee, 0x1316, 0x1, 0x1);
        gbc.writeMem(0x25ef, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0x25f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00CB
        gbc.setState(0x1168, 0x1468, 0x6fa0, 0xefb7, 0x7b30, 0x9e78, 0x0, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1468, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00CC
        gbc.setState(0xb3fe, 0x2d17, 0x5a10, 0x4494, 0x6c4d, 0xec09, 0x1, 0x0);
        gbc.writeMem(0xb3fe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d17, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fe));
        EXPECT(0xf1, gbc.readMem(0xb3ff));
        // CB F1 00CD
        gbc.setState(0xa05a, 0xeabd, 0x9610, 0x6d1, 0x744f, 0xa488, 0x0, 0x1);
        gbc.writeMem(0xa05a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0xa05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05a));
        EXPECT(0xf1, gbc.readMem(0xa05b));
        // CB F1 00CE
        gbc.setState(0x9e71, 0x462, 0xe130, 0x53c3, 0xe0a7, 0x2a57, 0x1, 0x0);
        gbc.writeMem(0x9e71, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x462, gbc.sp());
        EXPECT(0x9e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e71));
        EXPECT(0xf1, gbc.readMem(0x9e72));
        // CB F1 00CF
        gbc.setState(0x1b76, 0xf6d3, 0x95a0, 0x7da8, 0xa6b3, 0x32f5, 0x0, 0x0);
        gbc.writeMem(0x1b76, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf6d3, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00D0
        gbc.setState(0x2fd4, 0x92ea, 0xee80, 0xff96, 0x15b7, 0x2a2, 0x1, 0x1);
        gbc.writeMem(0x2fd4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0x2fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00D1
        gbc.setState(0x9f3c, 0xf7c3, 0x7190, 0x9c37, 0x7380, 0xd898, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf7c3, gbc.sp());
        EXPECT(0x9f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3c));
        EXPECT(0xf1, gbc.readMem(0x9f3d));
        // CB F1 00D2
        gbc.setState(0x3743, 0x315d, 0x2a10, 0xa97b, 0x82b1, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x3743, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x315d, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00D3
        gbc.setState(0xe433, 0x548c, 0xae70, 0x9303, 0xcc0a, 0xba3a, 0x1, 0x0);
        gbc.writeMem(0xe433, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe433));
        EXPECT(0xf1, gbc.readMem(0xe434));
        // CB F1 00D4
        gbc.setState(0xee44, 0x94e4, 0x5ec0, 0x6be2, 0xbcca, 0xb852, 0x0, 0x1);
        gbc.writeMem(0xee44, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x94e4, gbc.sp());
        EXPECT(0xee46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee44));
        EXPECT(0xf1, gbc.readMem(0xee45));
        // CB F1 00D6
        gbc.setState(0x651e, 0x3c90, 0xe3a0, 0xe340, 0x6712, 0xc4c0, 0x0, 0x1);
        gbc.writeMem(0x651e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0x6520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00D7
        gbc.setState(0xa4f2, 0x6c02, 0x720, 0x70b2, 0x2f50, 0x5f36, 0x0, 0x1);
        gbc.writeMem(0xa4f2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6c02, gbc.sp());
        EXPECT(0xa4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f2));
        EXPECT(0xf1, gbc.readMem(0xa4f3));
        // CB F1 00D8
        gbc.setState(0xdc8f, 0x7d6c, 0xd480, 0x6a99, 0x918b, 0xdbcc, 0x0, 0x1);
        gbc.writeMem(0xdc8f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7d6c, gbc.sp());
        EXPECT(0xdc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8f));
        EXPECT(0xf1, gbc.readMem(0xdc90));
        // CB F1 00DA
        gbc.setState(0x4b31, 0x4020, 0x54f0, 0x88bf, 0x53e7, 0x98c9, 0x0, 0x0);
        gbc.writeMem(0x4b31, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00DB
        gbc.setState(0xb697, 0x1e37, 0x9680, 0x10ee, 0xe0e6, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0xb697, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1e37, gbc.sp());
        EXPECT(0xb699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb697));
        EXPECT(0xf1, gbc.readMem(0xb698));
        // CB F1 00DC
        gbc.setState(0x6f5f, 0x25b0, 0x3b40, 0xc3d0, 0x4d03, 0xb896, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0x6f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00DD
        gbc.setState(0xbdea, 0xd82d, 0x1230, 0x2ba0, 0xdc4, 0x6017, 0x1, 0x0);
        gbc.writeMem(0xbdea, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd82d, gbc.sp());
        EXPECT(0xbdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdea));
        EXPECT(0xf1, gbc.readMem(0xbdeb));
        // CB F1 00DE
        gbc.setState(0x9158, 0xf715, 0xb940, 0xe510, 0xef79, 0x6bba, 0x0, 0x0);
        gbc.writeMem(0x9158, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9158));
        EXPECT(0xf1, gbc.readMem(0x9159));
        // CB F1 00DF
        gbc.setState(0xad19, 0xbc9b, 0xbf70, 0x8aa7, 0xc3ae, 0xe70a, 0x0, 0x1);
        gbc.writeMem(0xad19, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xad1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad19));
        EXPECT(0xf1, gbc.readMem(0xad1a));
        // CB F1 00E0
        gbc.setState(0x18f9, 0xfa9f, 0x3510, 0xc572, 0xf37e, 0x5ec6, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfa9f, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00E1
        gbc.setState(0xb3d7, 0x1c17, 0x75a0, 0x403f, 0xff41, 0xb142, 0x0, 0x0);
        gbc.writeMem(0xb3d7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1c17, gbc.sp());
        EXPECT(0xb3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d7));
        EXPECT(0xf1, gbc.readMem(0xb3d8));
        // CB F1 00E2
        gbc.setState(0x11b5, 0x1e14, 0xd270, 0x8df1, 0x26e0, 0x74ce, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00E4
        gbc.setState(0xa763, 0x818f, 0xbfb0, 0xf379, 0x907d, 0x2fa4, 0x0, 0x1);
        gbc.writeMem(0xa763, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x818f, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa763));
        EXPECT(0xf1, gbc.readMem(0xa764));
        // CB F1 00E5
        gbc.setState(0x945f, 0xd41a, 0x22a0, 0xe52c, 0x995e, 0x8001, 0x0, 0x1);
        gbc.writeMem(0x945f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x9461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945f));
        EXPECT(0xf1, gbc.readMem(0x9460));
        // CB F1 00E6
        gbc.setState(0xc140, 0x9c39, 0x340, 0xc1e4, 0x856b, 0xef31, 0x1, 0x0);
        gbc.writeMem(0xc140, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9c39, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0xf1, gbc.readMem(0xc141));
        // CB F1 00E7
        gbc.setState(0x8d1c, 0x1065, 0x5900, 0x954, 0xaae2, 0x8eda, 0x1, 0x1);
        gbc.writeMem(0x8d1c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1c));
        EXPECT(0xf1, gbc.readMem(0x8d1d));
        // CB F1 00E8
        gbc.setState(0x1c73, 0x6f, 0xcf20, 0x181a, 0x2bb3, 0xc3c4, 0x0, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6f, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00E9
        gbc.setState(0x69fe, 0x74b7, 0x1990, 0x6f1b, 0xc503, 0xd43e, 0x0, 0x0);
        gbc.writeMem(0x69fe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x74b7, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00EA
        gbc.setState(0x9c47, 0xc025, 0xdf30, 0x276, 0xef03, 0x4afa, 0x0, 0x0);
        gbc.writeMem(0x9c47, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0x9c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c47));
        EXPECT(0xf1, gbc.readMem(0x9c48));
        // CB F1 00EB
        gbc.setState(0x6c9f, 0xf732, 0x97b0, 0x6b47, 0x1432, 0xa8a8, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00EC
        gbc.setState(0x454a, 0xf860, 0x350, 0x92ff, 0x929b, 0xe061, 0x1, 0x1);
        gbc.writeMem(0x454a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf860, gbc.sp());
        EXPECT(0x454c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00ED
        gbc.setState(0x1efc, 0x2188, 0xf530, 0xf88f, 0x6023, 0x57d8, 0x0, 0x0);
        gbc.writeMem(0x1efc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2188, gbc.sp());
        EXPECT(0x1efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00EE
        gbc.setState(0x74aa, 0x3741, 0xcbb0, 0x7b2d, 0x1e52, 0xd88, 0x1, 0x1);
        gbc.writeMem(0x74aa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00EF
        gbc.setState(0x3ddb, 0x4424, 0x5aa0, 0xd687, 0x34b4, 0x9259, 0x0, 0x0);
        gbc.writeMem(0x3ddb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4424, gbc.sp());
        EXPECT(0x3ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00F0
        gbc.setState(0xa50f, 0x7f98, 0xebc0, 0x3092, 0x94ee, 0x83d6, 0x0, 0x0);
        gbc.writeMem(0xa50f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7f98, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0xf1, gbc.readMem(0xa510));
        // CB F1 00F2
        gbc.setState(0xa377, 0xfa60, 0x8140, 0x43a7, 0xe4c6, 0xc4d9, 0x0, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0xf1, gbc.readMem(0xa378));
        // CB F1 00F3
        gbc.setState(0x7d6b, 0x44b3, 0xb730, 0x2d15, 0xfe9a, 0x7441, 0x1, 0x1);
        gbc.writeMem(0x7d6b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44b3, gbc.sp());
        EXPECT(0x7d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00F4
        gbc.setState(0x6341, 0x4614, 0xdd90, 0xf55d, 0xc397, 0x81e4, 0x1, 0x1);
        gbc.writeMem(0x6341, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4614, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00F5
        gbc.setState(0x5c94, 0xc3f6, 0x930, 0x55fa, 0x2a34, 0xf1e6, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc3f6, gbc.sp());
        EXPECT(0x5c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00F6
        gbc.setState(0xb617, 0x79d8, 0x4170, 0x9139, 0xf39e, 0x2a2a, 0x1, 0x1);
        gbc.writeMem(0xb617, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x79d8, gbc.sp());
        EXPECT(0xb619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb617));
        EXPECT(0xf1, gbc.readMem(0xb618));
        // CB F1 00F7
        gbc.setState(0xa128, 0x7c2f, 0xd390, 0x8dc6, 0x17ce, 0xb9c1, 0x1, 0x0);
        gbc.writeMem(0xa128, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7c2f, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa128));
        EXPECT(0xf1, gbc.readMem(0xa129));
        // CB F1 00F8
        gbc.setState(0x2e5e, 0xdc5f, 0xa780, 0xe3f5, 0x4ecf, 0x75fc, 0x1, 0x0);
        gbc.writeMem(0x2e5e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0x2e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00F9
        gbc.setState(0xcb4c, 0xb3f3, 0xcd80, 0xfab7, 0xadd6, 0x5890, 0x1, 0x0);
        gbc.writeMem(0xcb4c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb3f3, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4c));
        EXPECT(0xf1, gbc.readMem(0xcb4d));
        // CB F1 00FA
        gbc.setState(0x8a42, 0xe947, 0xed30, 0xc8c3, 0x1f91, 0x1089, 0x1, 0x0);
        gbc.writeMem(0x8a42, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0x8a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a42));
        EXPECT(0xf1, gbc.readMem(0x8a43));
        // CB F1 00FB
        gbc.setState(0x584e, 0xbaf8, 0x7e40, 0x19dd, 0xd384, 0x88b7, 0x1, 0x0);
        gbc.writeMem(0x584e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 00FC
        gbc.setState(0x3a08, 0x180, 0x5430, 0xadf4, 0xb2c8, 0x803d, 0x1, 0x1);
        gbc.writeMem(0x3a08, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x180, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00FD
        gbc.setState(0xb14, 0x4bd0, 0xaf30, 0xd2fb, 0xc683, 0xbb2d, 0x1, 0x1);
        gbc.writeMem(0xb14, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4bd0, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00FE
        gbc.setState(0x6f8e, 0x3c34, 0x8030, 0x351a, 0x4d6, 0xa9ae, 0x0, 0x1);
        gbc.writeMem(0x6f8e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 00FF
        gbc.setState(0x9fa1, 0x9b4d, 0xa060, 0xfc93, 0xbd7c, 0x8ee5, 0x1, 0x1);
        gbc.writeMem(0x9fa1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9b4d, gbc.sp());
        EXPECT(0x9fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa1));
        EXPECT(0xf1, gbc.readMem(0x9fa2));
        // CB F1 0100
        gbc.setState(0x18c3, 0x51b5, 0x1640, 0xc70, 0x473a, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x18c3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51b5, gbc.sp());
        EXPECT(0x18c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0101
        gbc.setState(0x1d3f, 0xbb95, 0x1c30, 0x507, 0x7c01, 0x3647, 0x1, 0x0);
        gbc.writeMem(0x1d3f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbb95, gbc.sp());
        EXPECT(0x1d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0102
        gbc.setState(0x8b21, 0x5f9a, 0x5a90, 0xabde, 0x1880, 0x7e97, 0x1, 0x1);
        gbc.writeMem(0x8b21, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5f9a, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b21));
        EXPECT(0xf1, gbc.readMem(0x8b22));
        // CB F1 0103
        gbc.setState(0x6068, 0x3a06, 0x4e80, 0xe7f3, 0xbbf5, 0x129e, 0x1, 0x1);
        gbc.writeMem(0x6068, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0104
        gbc.setState(0xea72, 0xcee2, 0xd350, 0x33f7, 0xd930, 0x29ce, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0xf1, gbc.readMem(0xea73));
        // CB F1 0105
        gbc.setState(0xc50b, 0xeae, 0x53a0, 0x7c9c, 0x7831, 0x262d, 0x0, 0x0);
        gbc.writeMem(0xc50b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeae, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0xf1, gbc.readMem(0xc50c));
        // CB F1 0106
        gbc.setState(0xb20c, 0x89b2, 0xf020, 0xd56c, 0x4cbe, 0x32db, 0x0, 0x1);
        gbc.writeMem(0xb20c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x89b2, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20c));
        EXPECT(0xf1, gbc.readMem(0xb20d));
        // CB F1 0107
        gbc.setState(0x90e0, 0xf44, 0x8030, 0x7aa0, 0x7263, 0xff67, 0x1, 0x0);
        gbc.writeMem(0x90e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0x90e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e0));
        EXPECT(0xf1, gbc.readMem(0x90e1));
        // CB F1 0108
        gbc.setState(0x9a72, 0xa74c, 0x5a00, 0x73d, 0x582d, 0xd977, 0x1, 0x0);
        gbc.writeMem(0x9a72, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa74c, gbc.sp());
        EXPECT(0x9a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a72));
        EXPECT(0xf1, gbc.readMem(0x9a73));
        // CB F1 0109
        gbc.setState(0x6a8a, 0xf1cd, 0x81a0, 0x7bbc, 0x6a70, 0x5fc9, 0x1, 0x0);
        gbc.writeMem(0x6a8a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf1cd, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 010A
        gbc.setState(0x9342, 0x4290, 0x50c0, 0xbcaa, 0xef9d, 0x764e, 0x0, 0x0);
        gbc.writeMem(0x9342, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9342));
        EXPECT(0xf1, gbc.readMem(0x9343));
        // CB F1 010B
        gbc.setState(0x6320, 0xd743, 0x2ba0, 0x871f, 0x7235, 0x655, 0x0, 0x0);
        gbc.writeMem(0x6320, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 010C
        gbc.setState(0xc9c, 0x8279, 0x7b50, 0x320b, 0x8978, 0x4ce6, 0x1, 0x1);
        gbc.writeMem(0xc9c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8279, gbc.sp());
        EXPECT(0xc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 010D
        gbc.setState(0xbdf1, 0xf80a, 0xed30, 0x4db, 0x6c63, 0x9ce4, 0x0, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf80a, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0xf1, gbc.readMem(0xbdf2));
        // CB F1 010E
        gbc.setState(0xc0cf, 0xada0, 0xb410, 0xa77c, 0x2b88, 0x472c, 0x1, 0x0);
        gbc.writeMem(0xc0cf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xada0, gbc.sp());
        EXPECT(0xc0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cf));
        EXPECT(0xf1, gbc.readMem(0xc0d0));
        // CB F1 010F
        gbc.setState(0x3673, 0xc08c, 0x2e90, 0x1fd1, 0x13d, 0xf452, 0x1, 0x1);
        gbc.writeMem(0x3673, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0111
        gbc.setState(0xbd4a, 0xb280, 0x2500, 0x7bff, 0x6487, 0xf9d4, 0x0, 0x0);
        gbc.writeMem(0xbd4a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb280, gbc.sp());
        EXPECT(0xbd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4a));
        EXPECT(0xf1, gbc.readMem(0xbd4b));
        // CB F1 0112
        gbc.setState(0x1262, 0xebd7, 0x5230, 0x9c47, 0x531, 0x8ce8, 0x0, 0x1);
        gbc.writeMem(0x1262, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xebd7, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0113
        gbc.setState(0xb5, 0x4da1, 0x6870, 0x8e85, 0x942, 0xb1f9, 0x1, 0x1);
        gbc.writeMem(0xb5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0115
        gbc.setState(0x2e60, 0x717c, 0x2000, 0xeba0, 0x3914, 0x2c97, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x2e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0116
        gbc.setState(0xa86, 0x98a1, 0xd940, 0x67ad, 0xe590, 0x6d40, 0x1, 0x1);
        gbc.writeMem(0xa86, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0xa88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0117
        gbc.setState(0x9f09, 0x679e, 0x8af0, 0x8916, 0xf54e, 0x59dc, 0x0, 0x1);
        gbc.writeMem(0x9f09, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x9f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f09));
        EXPECT(0xf1, gbc.readMem(0x9f0a));
        // CB F1 0118
        gbc.setState(0x2d10, 0xb85b, 0xbf50, 0xfa0b, 0x24cc, 0xe66, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb85b, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0119
        gbc.setState(0x57fd, 0x45c2, 0xdcf0, 0x9637, 0xcd86, 0x5a2, 0x1, 0x1);
        gbc.writeMem(0x57fd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x57ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 011A
        gbc.setState(0x766a, 0x2001, 0x36c0, 0xaa06, 0xd83e, 0x7624, 0x0, 0x0);
        gbc.writeMem(0x766a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0x766c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 011B
        gbc.setState(0x6d84, 0x889d, 0xbb20, 0xbd41, 0xf148, 0x2b85, 0x0, 0x1);
        gbc.writeMem(0x6d84, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x889d, gbc.sp());
        EXPECT(0x6d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 011C
        gbc.setState(0xc17, 0x7310, 0x1e10, 0x9209, 0x5a51, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0xc17, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7310, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 011D
        gbc.setState(0x9f29, 0x52fa, 0xe2b0, 0x2e54, 0x8345, 0xa6e2, 0x1, 0x0);
        gbc.writeMem(0x9f29, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f29));
        EXPECT(0xf1, gbc.readMem(0x9f2a));
        // CB F1 011E
        gbc.setState(0x5ad0, 0xedde, 0x490, 0x95b4, 0xdf6b, 0xd18, 0x0, 0x0);
        gbc.writeMem(0x5ad0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xedde, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 011F
        gbc.setState(0xa33c, 0xfaa6, 0xa290, 0x1894, 0xc7dc, 0x61e6, 0x1, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfaa6, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0xf1, gbc.readMem(0xa33d));
        // CB F1 0120
        gbc.setState(0x4048, 0xdd7a, 0x83f0, 0x5c68, 0x1e04, 0x2507, 0x1, 0x1);
        gbc.writeMem(0x4048, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdd7a, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0121
        gbc.setState(0xeb1, 0xacea, 0x500, 0x7a3, 0xeed7, 0xb47a, 0x1, 0x0);
        gbc.writeMem(0xeb1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0122
        gbc.setState(0xcacc, 0x7858, 0x69b0, 0x3c86, 0x23a6, 0x1f94, 0x1, 0x1);
        gbc.writeMem(0xcacc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7858, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacc));
        EXPECT(0xf1, gbc.readMem(0xcacd));
        // CB F1 0126
        gbc.setState(0x8ea5, 0x8929, 0xca0, 0x7b82, 0x70f7, 0x797f, 0x1, 0x0);
        gbc.writeMem(0x8ea5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea5));
        EXPECT(0xf1, gbc.readMem(0x8ea6));
        // CB F1 0127
        gbc.setState(0x3a5e, 0x3a23, 0xe720, 0x4703, 0xb37a, 0x47a8, 0x0, 0x0);
        gbc.writeMem(0x3a5e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0x3a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0128
        gbc.setState(0xd1ff, 0xd64c, 0xf40, 0x49ee, 0x5d00, 0x3534, 0x0, 0x0);
        gbc.writeMem(0xd1ff, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd64c, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ff));
        EXPECT(0xf1, gbc.readMem(0xd200));
        // CB F1 0129
        gbc.setState(0x675c, 0xa621, 0x8640, 0xacc8, 0xc84f, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x675c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa621, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 012A
        gbc.setState(0xb2f2, 0x9362, 0xa320, 0x4c43, 0x42ca, 0xdaf4, 0x0, 0x0);
        gbc.writeMem(0xb2f2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f2));
        EXPECT(0xf1, gbc.readMem(0xb2f3));
        // CB F1 012B
        gbc.setState(0x37c, 0x62d4, 0x470, 0x954b, 0x4fc8, 0xeadf, 0x0, 0x0);
        gbc.writeMem(0x37c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x62d4, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 012C
        gbc.setState(0x4631, 0x1e7d, 0x9b50, 0x5f4e, 0x67a3, 0x9d1c, 0x0, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1e7d, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 012D
        gbc.setState(0x6de2, 0xec5b, 0x1d80, 0x6c1f, 0xa854, 0x9b90, 0x1, 0x0);
        gbc.writeMem(0x6de2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x6de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 012E
        gbc.setState(0x679, 0x6771, 0x6490, 0x424e, 0x18ba, 0xa7c8, 0x0, 0x0);
        gbc.writeMem(0x679, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6771, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 012F
        gbc.setState(0x1060, 0x1fff, 0x5440, 0xf705, 0xf23a, 0x52b4, 0x1, 0x1);
        gbc.writeMem(0x1060, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0x1062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0130
        gbc.setState(0x686b, 0x758b, 0x1ea0, 0xf43a, 0x26d4, 0xaf31, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0131
        gbc.setState(0x3f34, 0xd3a5, 0xd670, 0xc329, 0x9ae2, 0xfdb3, 0x0, 0x1);
        gbc.writeMem(0x3f34, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0x3f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0132
        gbc.setState(0x2d23, 0x6028, 0x10, 0xa143, 0x9b05, 0xded6, 0x1, 0x0);
        gbc.writeMem(0x2d23, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6028, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0133
        gbc.setState(0x44f2, 0xd8a4, 0x3a30, 0x6f28, 0xed56, 0x4826, 0x1, 0x1);
        gbc.writeMem(0x44f2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd8a4, gbc.sp());
        EXPECT(0x44f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0134
        gbc.setState(0xe302, 0x80de, 0xe540, 0x8040, 0xfefc, 0x75b6, 0x0, 0x0);
        gbc.writeMem(0xe302, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80de, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe302));
        EXPECT(0xf1, gbc.readMem(0xe303));
        // CB F1 0135
        gbc.setState(0x75ef, 0xe81b, 0x9500, 0xe657, 0xdd43, 0x46f3, 0x0, 0x1);
        gbc.writeMem(0x75ef, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0x75f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0136
        gbc.setState(0x3df2, 0xade0, 0xe370, 0x35bf, 0xeb5f, 0x621b, 0x0, 0x0);
        gbc.writeMem(0x3df2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0137
        gbc.setState(0x31f7, 0x3fb7, 0x29f0, 0x6429, 0x590c, 0x2b68, 0x1, 0x1);
        gbc.writeMem(0x31f7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0x31f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0138
        gbc.setState(0xd017, 0x1b69, 0x6310, 0xee63, 0x7683, 0x93d7, 0x1, 0x0);
        gbc.writeMem(0xd017, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1b69, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd017));
        EXPECT(0xf1, gbc.readMem(0xd018));
        // CB F1 0139
        gbc.setState(0x368b, 0xa009, 0x5370, 0x1f81, 0xd94f, 0x901d, 0x0, 0x0);
        gbc.writeMem(0x368b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0x368d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 013A
        gbc.setState(0xd78f, 0xdc0c, 0x6fc0, 0x2101, 0x56a7, 0xb086, 0x0, 0x0);
        gbc.writeMem(0xd78f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0xd791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78f));
        EXPECT(0xf1, gbc.readMem(0xd790));
        // CB F1 013C
        gbc.setState(0xc3e2, 0x65d, 0x2d10, 0x5bcd, 0x4e0, 0x6c2d, 0x1, 0x1);
        gbc.writeMem(0xc3e2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x65d, gbc.sp());
        EXPECT(0xc3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e2));
        EXPECT(0xf1, gbc.readMem(0xc3e3));
        // CB F1 013D
        gbc.setState(0xdb66, 0x4dc9, 0x5790, 0x16eb, 0xdb5f, 0x3503, 0x0, 0x0);
        gbc.writeMem(0xdb66, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4dc9, gbc.sp());
        EXPECT(0xdb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb66));
        EXPECT(0xf1, gbc.readMem(0xdb67));
        // CB F1 013E
        gbc.setState(0x1bc3, 0x5eaa, 0x4c30, 0x385f, 0x1dd0, 0x4f45, 0x1, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5eaa, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 013F
        gbc.setState(0x50ec, 0xf5ac, 0x77c0, 0x3cbb, 0xea33, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x50ec, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf5ac, gbc.sp());
        EXPECT(0x50ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0140
        gbc.setState(0x4c5d, 0xe840, 0x10f0, 0x40ac, 0x525f, 0x73af, 0x0, 0x0);
        gbc.writeMem(0x4c5d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe840, gbc.sp());
        EXPECT(0x4c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0141
        gbc.setState(0x6e24, 0xb9f3, 0x7bf0, 0xa807, 0xfcd5, 0xc555, 0x1, 0x0);
        gbc.writeMem(0x6e24, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb9f3, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0142
        gbc.setState(0x19ff, 0xf275, 0x8740, 0x79bf, 0x29e, 0x6c9a, 0x0, 0x1);
        gbc.writeMem(0x19ff, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf275, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0143
        gbc.setState(0x5660, 0x3129, 0x52c0, 0xa9b0, 0xa2d7, 0xa0, 0x0, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0144
        gbc.setState(0x42d2, 0xa09e, 0x4240, 0xbff6, 0xe1d5, 0xe6b, 0x0, 0x1);
        gbc.writeMem(0x42d2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa09e, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0145
        gbc.setState(0xcd7f, 0xf3f, 0x8860, 0x39f1, 0xd13d, 0x2a33, 0x0, 0x1);
        gbc.writeMem(0xcd7f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf3f, gbc.sp());
        EXPECT(0xcd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7f));
        EXPECT(0xf1, gbc.readMem(0xcd80));
        // CB F1 0146
        gbc.setState(0xc95d, 0x1c19, 0x28c0, 0x316b, 0x833a, 0x52c3, 0x0, 0x1);
        gbc.writeMem(0xc95d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1c19, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95d));
        EXPECT(0xf1, gbc.readMem(0xc95e));
        // CB F1 0147
        gbc.setState(0x1109, 0x737a, 0xb9f0, 0x57ee, 0x3828, 0xc648, 0x0, 0x0);
        gbc.writeMem(0x1109, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x737a, gbc.sp());
        EXPECT(0x110b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0148
        gbc.setState(0x684f, 0x1a91, 0xb070, 0xab9, 0xaa0b, 0x8ce7, 0x1, 0x1);
        gbc.writeMem(0x684f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0149
        gbc.setState(0xa7e4, 0x4ecd, 0x8f40, 0xbba5, 0x403e, 0xc4e3, 0x1, 0x0);
        gbc.writeMem(0xa7e4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4ecd, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e4));
        EXPECT(0xf1, gbc.readMem(0xa7e5));
        // CB F1 014B
        gbc.setState(0x3198, 0xf0ae, 0xbcf0, 0xbe1f, 0x4561, 0x193c, 0x0, 0x0);
        gbc.writeMem(0x3198, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf0ae, gbc.sp());
        EXPECT(0x319a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 014C
        gbc.setState(0xa9d6, 0xc918, 0x7c0, 0xdff1, 0x36dd, 0x16b4, 0x1, 0x0);
        gbc.writeMem(0xa9d6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d6));
        EXPECT(0xf1, gbc.readMem(0xa9d7));
        // CB F1 014D
        gbc.setState(0x15b5, 0xb8b2, 0x9570, 0xce22, 0x393c, 0xddfc, 0x0, 0x1);
        gbc.writeMem(0x15b5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x15b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 014E
        gbc.setState(0x1123, 0xe740, 0xeda0, 0x1ad, 0x95fc, 0xdd25, 0x1, 0x1);
        gbc.writeMem(0x1123, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x1125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 014F
        gbc.setState(0x7129, 0x25a, 0x16d0, 0x5c06, 0xb2c1, 0x6a85, 0x0, 0x1);
        gbc.writeMem(0x7129, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x25a, gbc.sp());
        EXPECT(0x712b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0150
        gbc.setState(0x2c77, 0x66f8, 0x32a0, 0x7fec, 0x6f0e, 0x1a30, 0x1, 0x0);
        gbc.writeMem(0x2c77, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x66f8, gbc.sp());
        EXPECT(0x2c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0151
        gbc.setState(0x923d, 0x1ca7, 0xb6e0, 0x8a42, 0x7964, 0xa320, 0x1, 0x0);
        gbc.writeMem(0x923d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1ca7, gbc.sp());
        EXPECT(0x923f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x923d));
        EXPECT(0xf1, gbc.readMem(0x923e));
        // CB F1 0152
        gbc.setState(0xa304, 0x80c9, 0xd910, 0x1bcc, 0xc67, 0x1bbe, 0x0, 0x1);
        gbc.writeMem(0xa304, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa304));
        EXPECT(0xf1, gbc.readMem(0xa305));
        // CB F1 0153
        gbc.setState(0x4916, 0x8d23, 0xc5d0, 0xe352, 0x77ec, 0x75a1, 0x0, 0x0);
        gbc.writeMem(0x4916, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0154
        gbc.setState(0x791, 0x7f5a, 0xd110, 0x8d89, 0xa627, 0xd591, 0x0, 0x0);
        gbc.writeMem(0x791, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7f5a, gbc.sp());
        EXPECT(0x793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0155
        gbc.setState(0xc33c, 0xa355, 0x9f60, 0xa8c, 0xb973, 0x241, 0x1, 0x0);
        gbc.writeMem(0xc33c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa355, gbc.sp());
        EXPECT(0xc33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33c));
        EXPECT(0xf1, gbc.readMem(0xc33d));
        // CB F1 0156
        gbc.setState(0xd1a7, 0x9a14, 0x79b0, 0xbf61, 0xa151, 0x54a3, 0x1, 0x0);
        gbc.writeMem(0xd1a7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0xd1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a7));
        EXPECT(0xf1, gbc.readMem(0xd1a8));
        // CB F1 0157
        gbc.setState(0x3bb9, 0x8aa1, 0xabc0, 0xd690, 0x3e1c, 0x628e, 0x1, 0x1);
        gbc.writeMem(0x3bb9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x3bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0158
        gbc.setState(0x1d50, 0x25d4, 0x6980, 0x8fa4, 0x224d, 0xbffe, 0x0, 0x1);
        gbc.writeMem(0x1d50, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x25d4, gbc.sp());
        EXPECT(0x1d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0159
        gbc.setState(0x9ce6, 0xb4c4, 0xa120, 0xd89, 0x23a7, 0xbbc8, 0x1, 0x1);
        gbc.writeMem(0x9ce6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x9ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce6));
        EXPECT(0xf1, gbc.readMem(0x9ce7));
        // CB F1 015A
        gbc.setState(0x949f, 0x1f63, 0x5d30, 0x1f7d, 0x93c5, 0xc845, 0x1, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1f63, gbc.sp());
        EXPECT(0x94a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949f));
        EXPECT(0xf1, gbc.readMem(0x94a0));
        // CB F1 015B
        gbc.setState(0xd591, 0xbf9e, 0x1190, 0x9d52, 0x312d, 0xa20e, 0x1, 0x1);
        gbc.writeMem(0xd591, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbf9e, gbc.sp());
        EXPECT(0xd593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd591));
        EXPECT(0xf1, gbc.readMem(0xd592));
        // CB F1 015C
        gbc.setState(0x2dbb, 0x398d, 0xe180, 0x44fb, 0xc135, 0x2d5, 0x1, 0x0);
        gbc.writeMem(0x2dbb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x398d, gbc.sp());
        EXPECT(0x2dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 015E
        gbc.setState(0x2c0b, 0x5b9a, 0x8d0, 0x8077, 0x622e, 0x7da5, 0x0, 0x1);
        gbc.writeMem(0x2c0b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5b9a, gbc.sp());
        EXPECT(0x2c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0160
        gbc.setState(0x9d01, 0xee83, 0x5900, 0xb8a8, 0x9cec, 0x5f5, 0x0, 0x0);
        gbc.writeMem(0x9d01, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0x9d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d01));
        EXPECT(0xf1, gbc.readMem(0x9d02));
        // CB F1 0161
        gbc.setState(0xe37e, 0xae80, 0xfc80, 0x55d5, 0xce29, 0xdb9, 0x0, 0x0);
        gbc.writeMem(0xe37e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae80, gbc.sp());
        EXPECT(0xe380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37e));
        EXPECT(0xf1, gbc.readMem(0xe37f));
        // CB F1 0162
        gbc.setState(0xc629, 0xd093, 0xc970, 0xb386, 0x54c4, 0xa4c8, 0x0, 0x1);
        gbc.writeMem(0xc629, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc629));
        EXPECT(0xf1, gbc.readMem(0xc62a));
        // CB F1 0164
        gbc.setState(0x5c6, 0xc935, 0x28d0, 0xb3cf, 0x2197, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x5c6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc935, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0165
        gbc.setState(0x1637, 0x9206, 0x8710, 0xb6e7, 0x563b, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x1637, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9206, gbc.sp());
        EXPECT(0x1639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0167
        gbc.setState(0xbb97, 0x6a3b, 0x5a20, 0xfad1, 0xd5b9, 0xabd7, 0x0, 0x0);
        gbc.writeMem(0xbb97, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6a3b, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb97));
        EXPECT(0xf1, gbc.readMem(0xbb98));
        // CB F1 0168
        gbc.setState(0x44, 0xcd1e, 0x9bd0, 0xea73, 0xbaed, 0x6454, 0x0, 0x1);
        gbc.writeMem(0x44, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcd1e, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0169
        gbc.setState(0x8c65, 0x5732, 0x9060, 0x388f, 0x2e22, 0xc2ec, 0x0, 0x0);
        gbc.writeMem(0x8c65, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5732, gbc.sp());
        EXPECT(0x8c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c65));
        EXPECT(0xf1, gbc.readMem(0x8c66));
        // CB F1 016A
        gbc.setState(0xc1d, 0x541c, 0xb0b0, 0x1f5c, 0x7d19, 0x97d8, 0x1, 0x0);
        gbc.writeMem(0xc1d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0xc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 016C
        gbc.setState(0x7b02, 0x406c, 0xf490, 0xcf2a, 0xe86a, 0x7711, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x406c, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 016D
        gbc.setState(0x8cf, 0x4efc, 0x3e70, 0x3243, 0xf600, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0x8cf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4efc, gbc.sp());
        EXPECT(0x8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 016E
        gbc.setState(0x38b8, 0x7e9d, 0x2770, 0xd903, 0xb571, 0x4de8, 0x1, 0x1);
        gbc.writeMem(0x38b8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7e9d, gbc.sp());
        EXPECT(0x38ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 016F
        gbc.setState(0x2e93, 0x58ef, 0x85c0, 0x85a5, 0x4d2b, 0x8c6, 0x1, 0x0);
        gbc.writeMem(0x2e93, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x58ef, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0170
        gbc.setState(0x73d4, 0x4e7c, 0x5f80, 0xc838, 0xc9d3, 0x34e6, 0x1, 0x0);
        gbc.writeMem(0x73d4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4e7c, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0171
        gbc.setState(0x75c4, 0xa2c4, 0x2c0, 0x508c, 0x8fee, 0xf80e, 0x1, 0x1);
        gbc.writeMem(0x75c4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa2c4, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0172
        gbc.setState(0x450, 0x1176, 0x4540, 0x911e, 0x56e6, 0x17f8, 0x1, 0x0);
        gbc.writeMem(0x450, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1176, gbc.sp());
        EXPECT(0x452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0173
        gbc.setState(0x8fcf, 0xb4e7, 0xbae0, 0xf6e0, 0x5ca9, 0x593d, 0x0, 0x0);
        gbc.writeMem(0x8fcf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcf));
        EXPECT(0xf1, gbc.readMem(0x8fd0));
        // CB F1 0174
        gbc.setState(0x618b, 0x2046, 0x5e80, 0x8f85, 0xf138, 0x7b89, 0x0, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0175
        gbc.setState(0x9f22, 0xa534, 0x6ad0, 0x640, 0x25e4, 0x2960, 0x0, 0x1);
        gbc.writeMem(0x9f22, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa534, gbc.sp());
        EXPECT(0x9f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f22));
        EXPECT(0xf1, gbc.readMem(0x9f23));
        // CB F1 0176
        gbc.setState(0x12d7, 0xa872, 0x8d50, 0xb433, 0x7a26, 0x75fd, 0x0, 0x1);
        gbc.writeMem(0x12d7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa872, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0177
        gbc.setState(0x818e, 0x4cd2, 0x9120, 0x86b8, 0x70bc, 0x91ba, 0x0, 0x0);
        gbc.writeMem(0x818e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4cd2, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818e));
        EXPECT(0xf1, gbc.readMem(0x818f));
        // CB F1 0178
        gbc.setState(0x66cb, 0x1dc0, 0xc070, 0x8d8d, 0xc777, 0x656e, 0x1, 0x1);
        gbc.writeMem(0x66cb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1dc0, gbc.sp());
        EXPECT(0x66cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0179
        gbc.setState(0xd577, 0xc8ac, 0x8160, 0x3dfe, 0xde8f, 0x4bd2, 0x0, 0x1);
        gbc.writeMem(0xd577, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0xd579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd577));
        EXPECT(0xf1, gbc.readMem(0xd578));
        // CB F1 017A
        gbc.setState(0xd10, 0x748, 0x2ac0, 0x1360, 0xd72d, 0xb4a, 0x1, 0x1);
        gbc.writeMem(0xd10, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xd12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 017B
        gbc.setState(0x4500, 0x6b03, 0x32b0, 0xc7a1, 0x7e6e, 0x3e9c, 0x0, 0x0);
        gbc.writeMem(0x4500, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x4502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 017C
        gbc.setState(0x2b33, 0xc1cc, 0xb60, 0x401a, 0x83dc, 0x97da, 0x1, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 017D
        gbc.setState(0x3694, 0xf9c5, 0x7e60, 0x49fd, 0x75f2, 0x7214, 0x1, 0x1);
        gbc.writeMem(0x3694, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf9c5, gbc.sp());
        EXPECT(0x3696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 017E
        gbc.setState(0x20e0, 0xbf8a, 0x3d20, 0xa565, 0x1a14, 0x2740, 0x1, 0x1);
        gbc.writeMem(0x20e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x20e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 017F
        gbc.setState(0x3d3e, 0xd1e5, 0xb810, 0xcd9c, 0xdb98, 0x9fd0, 0x0, 0x1);
        gbc.writeMem(0x3d3e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0x3d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0180
        gbc.setState(0xbd49, 0x29ea, 0xfa30, 0xee3a, 0xa712, 0xe9e8, 0x0, 0x1);
        gbc.writeMem(0xbd49, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0xf1, gbc.readMem(0xbd4a));
        // CB F1 0181
        gbc.setState(0x6289, 0x887d, 0xa0, 0xeff1, 0xbe4e, 0x1c4b, 0x0, 0x0);
        gbc.writeMem(0x6289, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x887d, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0182
        gbc.setState(0x410a, 0xfce4, 0x3b0, 0xcc6f, 0xbcf5, 0xe5a8, 0x0, 0x0);
        gbc.writeMem(0x410a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfce4, gbc.sp());
        EXPECT(0x410c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0183
        gbc.setState(0x1023, 0xc664, 0xf3a0, 0x98d5, 0x5932, 0x188e, 0x1, 0x0);
        gbc.writeMem(0x1023, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc664, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0184
        gbc.setState(0xc41d, 0xdd09, 0x630, 0x7578, 0xeefb, 0x2448, 0x1, 0x1);
        gbc.writeMem(0xc41d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdd09, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41d));
        EXPECT(0xf1, gbc.readMem(0xc41e));
        // CB F1 0186
        gbc.setState(0x6028, 0x7f58, 0x7630, 0xf1ea, 0x969d, 0xf00f, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7f58, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0187
        gbc.setState(0x4c6e, 0x70c1, 0x9e70, 0x9c10, 0x8ece, 0x700a, 0x1, 0x1);
        gbc.writeMem(0x4c6e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x70c1, gbc.sp());
        EXPECT(0x4c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0188
        gbc.setState(0x8a1d, 0xf3b3, 0xa300, 0x6716, 0x4d49, 0xc8da, 0x1, 0x0);
        gbc.writeMem(0x8a1d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf3b3, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1d));
        EXPECT(0xf1, gbc.readMem(0x8a1e));
        // CB F1 0189
        gbc.setState(0x9108, 0x4c25, 0xe760, 0x1233, 0x462c, 0x3cf0, 0x1, 0x0);
        gbc.writeMem(0x9108, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9108));
        EXPECT(0xf1, gbc.readMem(0x9109));
        // CB F1 018A
        gbc.setState(0x9f8c, 0x171c, 0xdd10, 0x588f, 0x8d24, 0x3679, 0x0, 0x0);
        gbc.writeMem(0x9f8c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x171c, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8c));
        EXPECT(0xf1, gbc.readMem(0x9f8d));
        // CB F1 018B
        gbc.setState(0xb57f, 0x5de7, 0xbb0, 0x116c, 0xdf4d, 0xf0dd, 0x0, 0x0);
        gbc.writeMem(0xb57f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5de7, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0xf1, gbc.readMem(0xb580));
        // CB F1 018C
        gbc.setState(0x4cf6, 0x6092, 0x4650, 0x7a74, 0xaa3b, 0x6a08, 0x1, 0x0);
        gbc.writeMem(0x4cf6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6092, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 018E
        gbc.setState(0x7238, 0xb585, 0xf0b0, 0x6621, 0xbdb5, 0xd742, 0x1, 0x0);
        gbc.writeMem(0x7238, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 018F
        gbc.setState(0x4133, 0x7474, 0x7ff0, 0x7f8f, 0x30f4, 0xc718, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7474, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0190
        gbc.setState(0xbb46, 0x615d, 0x1530, 0x61f3, 0x6068, 0x8107, 0x0, 0x1);
        gbc.writeMem(0xbb46, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb46));
        EXPECT(0xf1, gbc.readMem(0xbb47));
        // CB F1 0191
        gbc.setState(0x7aaf, 0x3ed, 0xc9a0, 0x5081, 0x9e04, 0xfd38, 0x1, 0x0);
        gbc.writeMem(0x7aaf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3ed, gbc.sp());
        EXPECT(0x7ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0192
        gbc.setState(0xa377, 0x2c7b, 0xf0d0, 0xc429, 0xa7f4, 0xc210, 0x1, 0x1);
        gbc.writeMem(0xa377, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0xf1, gbc.readMem(0xa378));
        // CB F1 0194
        gbc.setState(0x252, 0xc5e3, 0xfbc0, 0xb962, 0xd3d8, 0x962e, 0x1, 0x0);
        gbc.writeMem(0x252, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc5e3, gbc.sp());
        EXPECT(0x254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0195
        gbc.setState(0x3978, 0x9b2c, 0xcb10, 0x2156, 0x6634, 0x3a8, 0x0, 0x0);
        gbc.writeMem(0x3978, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9b2c, gbc.sp());
        EXPECT(0x397a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0196
        gbc.setState(0x69dd, 0x52b0, 0x4c20, 0x1988, 0xb58b, 0x31ab, 0x0, 0x0);
        gbc.writeMem(0x69dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0x69df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0197
        gbc.setState(0x5b82, 0xb6ef, 0xcff0, 0xcd24, 0x67ff, 0x32ce, 0x1, 0x0);
        gbc.writeMem(0x5b82, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x5b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0198
        gbc.setState(0xa466, 0x6a9c, 0xfd0, 0xce9b, 0x69d3, 0x5a88, 0x0, 0x1);
        gbc.writeMem(0xa466, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a9c, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa466));
        EXPECT(0xf1, gbc.readMem(0xa467));
        // CB F1 0199
        gbc.setState(0xc250, 0xe421, 0x6ba0, 0x70e0, 0x4f22, 0xb038, 0x0, 0x0);
        gbc.writeMem(0xc250, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe421, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc250));
        EXPECT(0xf1, gbc.readMem(0xc251));
        // CB F1 019A
        gbc.setState(0xbe96, 0x8556, 0x1350, 0x3f82, 0x702c, 0x1d3, 0x0, 0x1);
        gbc.writeMem(0xbe96, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe96));
        EXPECT(0xf1, gbc.readMem(0xbe97));
        // CB F1 019B
        gbc.setState(0x7a4, 0xf35a, 0x5d00, 0x23af, 0x5769, 0x630f, 0x1, 0x1);
        gbc.writeMem(0x7a4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf35a, gbc.sp());
        EXPECT(0x7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 019C
        gbc.setState(0x204f, 0x7792, 0x3d60, 0xf1d1, 0xe1c6, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0x204f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7792, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 019D
        gbc.setState(0x677, 0x83ff, 0xa7b0, 0x3e0e, 0xb2cb, 0x68c8, 0x0, 0x0);
        gbc.writeMem(0x677, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 019E
        gbc.setState(0x5137, 0xac27, 0x68c0, 0xa8d9, 0x8034, 0xb039, 0x1, 0x1);
        gbc.writeMem(0x5137, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 019F
        gbc.setState(0x51ed, 0x9bdf, 0xed40, 0x55a9, 0x484, 0x5802, 0x1, 0x0);
        gbc.writeMem(0x51ed, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9bdf, gbc.sp());
        EXPECT(0x51ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01A0
        gbc.setState(0xc1bf, 0x42ac, 0xa450, 0xf3f6, 0x5817, 0xd9aa, 0x1, 0x1);
        gbc.writeMem(0xc1bf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x42ac, gbc.sp());
        EXPECT(0xc1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bf));
        EXPECT(0xf1, gbc.readMem(0xc1c0));
        // CB F1 01A2
        gbc.setState(0xede9, 0xb38b, 0x96b0, 0x4cf, 0x4bb5, 0xb33a, 0x0, 0x1);
        gbc.writeMem(0xede9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb38b, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede9));
        EXPECT(0xf1, gbc.readMem(0xedea));
        // CB F1 01A3
        gbc.setState(0x7e0d, 0x28aa, 0xe440, 0x7cf2, 0xd4a5, 0x8410, 0x0, 0x1);
        gbc.writeMem(0x7e0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x28aa, gbc.sp());
        EXPECT(0x7e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01A4
        gbc.setState(0xc14c, 0xa044, 0x2c0, 0xd169, 0xa6c6, 0x80b1, 0x1, 0x0);
        gbc.writeMem(0xc14c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa044, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14c));
        EXPECT(0xf1, gbc.readMem(0xc14d));
        // CB F1 01A5
        gbc.setState(0x43ef, 0x3081, 0xf780, 0x9abb, 0xad9e, 0xd473, 0x0, 0x1);
        gbc.writeMem(0x43ef, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0x43f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01A6
        gbc.setState(0x3f0, 0x4a40, 0xa610, 0x5b95, 0xf917, 0x8845, 0x1, 0x0);
        gbc.writeMem(0x3f0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4a40, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01A7
        gbc.setState(0xba6, 0x4b94, 0x6080, 0x2acc, 0x1643, 0x4d15, 0x0, 0x1);
        gbc.writeMem(0xba6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4b94, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01A8
        gbc.setState(0x63cd, 0x3203, 0x4240, 0xcadf, 0xe59e, 0xd3bc, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x63cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01A9
        gbc.setState(0xa281, 0x10ab, 0x26e0, 0x56cf, 0x9bec, 0x1c81, 0x1, 0x1);
        gbc.writeMem(0xa281, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0xa283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa281));
        EXPECT(0xf1, gbc.readMem(0xa282));
        // CB F1 01AA
        gbc.setState(0xc656, 0x2c0f, 0x92f0, 0x1b38, 0x3c59, 0xa2a8, 0x1, 0x1);
        gbc.writeMem(0xc656, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2c0f, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc656));
        EXPECT(0xf1, gbc.readMem(0xc657));
        // CB F1 01AB
        gbc.setState(0x7d4d, 0x80e8, 0x2460, 0x479e, 0x28e1, 0xaf1, 0x0, 0x1);
        gbc.writeMem(0x7d4d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x80e8, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01AC
        gbc.setState(0xc387, 0x2d46, 0x5e00, 0x18ca, 0x9e1f, 0xd540, 0x0, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0xf1, gbc.readMem(0xc388));
        // CB F1 01AD
        gbc.setState(0x67cb, 0x45f8, 0xe810, 0xa8c6, 0xec76, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0x67cb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01AF
        gbc.setState(0x59a9, 0x8228, 0x34f0, 0x8ae9, 0x69a2, 0xd280, 0x0, 0x1);
        gbc.writeMem(0x59a9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8228, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01B0
        gbc.setState(0x8397, 0x7e9f, 0xfe30, 0x4b43, 0x5b8e, 0x8b47, 0x1, 0x0);
        gbc.writeMem(0x8397, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7e9f, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8397));
        EXPECT(0xf1, gbc.readMem(0x8398));
        // CB F1 01B1
        gbc.setState(0xbd36, 0x1763, 0x4000, 0x138f, 0x5c6, 0xf885, 0x1, 0x0);
        gbc.writeMem(0xbd36, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1763, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd36));
        EXPECT(0xf1, gbc.readMem(0xbd37));
        // CB F1 01B2
        gbc.setState(0x378b, 0x5cbe, 0xde40, 0x4803, 0x4ebb, 0xe36, 0x1, 0x0);
        gbc.writeMem(0x378b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0x378d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01B3
        gbc.setState(0xea4b, 0xf1b4, 0x4290, 0xf9de, 0xae19, 0x35a, 0x0, 0x1);
        gbc.writeMem(0xea4b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0xea4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4b));
        EXPECT(0xf1, gbc.readMem(0xea4c));
        // CB F1 01B4
        gbc.setState(0x82fd, 0x7398, 0x8a90, 0x8288, 0xbcf3, 0xb5c3, 0x1, 0x0);
        gbc.writeMem(0x82fd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7398, gbc.sp());
        EXPECT(0x82ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fd));
        EXPECT(0xf1, gbc.readMem(0x82fe));
        // CB F1 01B5
        gbc.setState(0xdadb, 0xe5d0, 0xb310, 0xab4e, 0x212a, 0x2432, 0x0, 0x1);
        gbc.writeMem(0xdadb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0xdadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdadb));
        EXPECT(0xf1, gbc.readMem(0xdadc));
        // CB F1 01B6
        gbc.setState(0xb958, 0xc9a3, 0xb4e0, 0xfacd, 0xb62b, 0x3899, 0x0, 0x1);
        gbc.writeMem(0xb958, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb958));
        EXPECT(0xf1, gbc.readMem(0xb959));
        // CB F1 01B7
        gbc.setState(0x2482, 0xdf58, 0x8d50, 0x25a8, 0x476f, 0x1392, 0x0, 0x1);
        gbc.writeMem(0x2482, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0x2484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01B8
        gbc.setState(0x2f9f, 0xc15f, 0xc210, 0x3e97, 0xdc0c, 0x5528, 0x0, 0x0);
        gbc.writeMem(0x2f9f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0x2fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01B9
        gbc.setState(0x9f21, 0x508, 0x23b0, 0x222b, 0x77d6, 0x8bd5, 0x1, 0x1);
        gbc.writeMem(0x9f21, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x508, gbc.sp());
        EXPECT(0x9f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f21));
        EXPECT(0xf1, gbc.readMem(0x9f22));
        // CB F1 01BA
        gbc.setState(0xc61, 0xb93, 0xd160, 0x4070, 0x2b5d, 0xe19e, 0x1, 0x0);
        gbc.writeMem(0xc61, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0xc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01BB
        gbc.setState(0xa30e, 0xc68d, 0xe5f0, 0xf818, 0xebd9, 0xcce2, 0x0, 0x0);
        gbc.writeMem(0xa30e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30e));
        EXPECT(0xf1, gbc.readMem(0xa30f));
        // CB F1 01BC
        gbc.setState(0x61a5, 0x4852, 0xe320, 0x1b37, 0xa9be, 0x9950, 0x1, 0x1);
        gbc.writeMem(0x61a5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4852, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01BD
        gbc.setState(0x8c49, 0x52db, 0xdac0, 0x3bd6, 0x8e5d, 0xff39, 0x1, 0x0);
        gbc.writeMem(0x8c49, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x52db, gbc.sp());
        EXPECT(0x8c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c49));
        EXPECT(0xf1, gbc.readMem(0x8c4a));
        // CB F1 01BE
        gbc.setState(0xadb, 0x1429, 0x6160, 0xaf48, 0x7789, 0x3634, 0x0, 0x1);
        gbc.writeMem(0xadb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0xadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01BF
        gbc.setState(0x6030, 0xbb58, 0xc5e0, 0xa4bd, 0xcbda, 0x1292, 0x1, 0x0);
        gbc.writeMem(0x6030, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0x6032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01C0
        gbc.setState(0x6ada, 0xe157, 0x5b80, 0x8e97, 0x7f90, 0x1ea, 0x0, 0x0);
        gbc.writeMem(0x6ada, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe157, gbc.sp());
        EXPECT(0x6adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01C1
        gbc.setState(0x9223, 0xbfb0, 0x30, 0x656f, 0x8cbb, 0xddd1, 0x0, 0x1);
        gbc.writeMem(0x9223, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbfb0, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0xf1, gbc.readMem(0x9224));
        // CB F1 01C2
        gbc.setState(0x7054, 0xddd3, 0x2f10, 0xe0a5, 0x94f1, 0xe912, 0x0, 0x0);
        gbc.writeMem(0x7054, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0x7056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01C3
        gbc.setState(0x7320, 0xb6ad, 0x6100, 0xafd0, 0x7b63, 0xdaa6, 0x1, 0x0);
        gbc.writeMem(0x7320, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0x7322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01C5
        gbc.setState(0x6afc, 0x24e5, 0x6cc0, 0x7d1f, 0x228c, 0x9faa, 0x0, 0x1);
        gbc.writeMem(0x6afc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x24e5, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01C6
        gbc.setState(0xdab5, 0x470f, 0x700, 0x1b4d, 0x87b4, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0xdab5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x470f, gbc.sp());
        EXPECT(0xdab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab5));
        EXPECT(0xf1, gbc.readMem(0xdab6));
        // CB F1 01C7
        gbc.setState(0x1d94, 0xe462, 0x390, 0xdc66, 0x2670, 0x76f2, 0x0, 0x0);
        gbc.writeMem(0x1d94, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x1d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01C8
        gbc.setState(0x2caa, 0x12f5, 0x7560, 0xebd5, 0x2118, 0xc003, 0x0, 0x0);
        gbc.writeMem(0x2caa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x12f5, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01CA
        gbc.setState(0xbf9, 0x4831, 0xde90, 0xb3c, 0xb65c, 0x2bb6, 0x1, 0x0);
        gbc.writeMem(0xbf9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4831, gbc.sp());
        EXPECT(0xbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01CB
        gbc.setState(0x5487, 0x3a48, 0x67c0, 0x270c, 0xe4c2, 0xd209, 0x0, 0x1);
        gbc.writeMem(0x5487, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3a48, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01CC
        gbc.setState(0x1d5b, 0x89f7, 0x3890, 0x6b1d, 0x25d3, 0x9bf2, 0x1, 0x0);
        gbc.writeMem(0x1d5b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x1d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01CD
        gbc.setState(0xeae1, 0xe931, 0x6c10, 0x6fc, 0xafc6, 0x36bc, 0x0, 0x0);
        gbc.writeMem(0xeae1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0xeae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae1));
        EXPECT(0xf1, gbc.readMem(0xeae2));
        // CB F1 01CE
        gbc.setState(0xd691, 0x6b24, 0xd290, 0xc433, 0x45d5, 0xb59c, 0x0, 0x1);
        gbc.writeMem(0xd691, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b24, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd691));
        EXPECT(0xf1, gbc.readMem(0xd692));
        // CB F1 01CF
        gbc.setState(0x72ba, 0xc34f, 0x9db0, 0xe313, 0x5186, 0xc471, 0x1, 0x0);
        gbc.writeMem(0x72ba, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0x72bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01D0
        gbc.setState(0x6cb2, 0xa4f6, 0xca50, 0x525d, 0x178a, 0x3bd8, 0x0, 0x0);
        gbc.writeMem(0x6cb2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa4f6, gbc.sp());
        EXPECT(0x6cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01D1
        gbc.setState(0x583f, 0x93dc, 0x2be0, 0x995d, 0xf9ee, 0xad64, 0x0, 0x0);
        gbc.writeMem(0x583f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x93dc, gbc.sp());
        EXPECT(0x5841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01D2
        gbc.setState(0xa970, 0x436b, 0xc700, 0x37d3, 0x3602, 0x7af5, 0x0, 0x0);
        gbc.writeMem(0xa970, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0xa972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa970));
        EXPECT(0xf1, gbc.readMem(0xa971));
        // CB F1 01D3
        gbc.setState(0xeb4e, 0x6b0f, 0x6660, 0x62f5, 0x23a3, 0xdfbe, 0x1, 0x1);
        gbc.writeMem(0xeb4e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4e));
        EXPECT(0xf1, gbc.readMem(0xeb4f));
        // CB F1 01D4
        gbc.setState(0xe26e, 0xfb07, 0x4340, 0xba15, 0xf39f, 0x6cba, 0x0, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfb07, gbc.sp());
        EXPECT(0xe270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26e));
        EXPECT(0xf1, gbc.readMem(0xe26f));
        // CB F1 01D5
        gbc.setState(0xcc00, 0xe256, 0xdcf0, 0x97f6, 0xca4e, 0x6b76, 0x0, 0x0);
        gbc.writeMem(0xcc00, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe256, gbc.sp());
        EXPECT(0xcc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc00));
        EXPECT(0xf1, gbc.readMem(0xcc01));
        // CB F1 01D7
        gbc.setState(0x49d2, 0xffbd, 0x5570, 0x2b9f, 0x7325, 0xe758, 0x1, 0x0);
        gbc.writeMem(0x49d2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xffbd, gbc.sp());
        EXPECT(0x49d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01D8
        gbc.setState(0x9b42, 0xa69a, 0xd50, 0x4ad9, 0xdd95, 0xd01, 0x0, 0x0);
        gbc.writeMem(0x9b42, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa69a, gbc.sp());
        EXPECT(0x9b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b42));
        EXPECT(0xf1, gbc.readMem(0x9b43));
        // CB F1 01D9
        gbc.setState(0xb4f0, 0x783b, 0x8020, 0x8ada, 0xa409, 0x2e8d, 0x0, 0x1);
        gbc.writeMem(0xb4f0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0xb4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f0));
        EXPECT(0xf1, gbc.readMem(0xb4f1));
        // CB F1 01DA
        gbc.setState(0xb408, 0xccbc, 0xc3c0, 0x1e7f, 0xb74a, 0xf0b7, 0x1, 0x1);
        gbc.writeMem(0xb408, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xccbc, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0xf1, gbc.readMem(0xb409));
        // CB F1 01DB
        gbc.setState(0x7b92, 0x9efe, 0xed00, 0xedd0, 0x1676, 0xb09, 0x0, 0x1);
        gbc.writeMem(0x7b92, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x7b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01DC
        gbc.setState(0x13c5, 0x911a, 0xbff0, 0x759b, 0xeff1, 0xcdb8, 0x0, 0x1);
        gbc.writeMem(0x13c5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0x13c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01DD
        gbc.setState(0x75d1, 0x9294, 0x6220, 0x7a06, 0x2313, 0x2833, 0x1, 0x1);
        gbc.writeMem(0x75d1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0x75d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01DE
        gbc.setState(0x513e, 0x5da, 0xec40, 0x4caa, 0x7a73, 0xacca, 0x0, 0x1);
        gbc.writeMem(0x513e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5da, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01DF
        gbc.setState(0x856b, 0x2377, 0x7580, 0x5d3, 0x25f2, 0x6858, 0x1, 0x0);
        gbc.writeMem(0x856b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2377, gbc.sp());
        EXPECT(0x856d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856b));
        EXPECT(0xf1, gbc.readMem(0x856c));
        // CB F1 01E1
        gbc.setState(0xbd0b, 0xb78, 0x86d0, 0x678f, 0x2fb9, 0x309d, 0x1, 0x0);
        gbc.writeMem(0xbd0b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb78, gbc.sp());
        EXPECT(0xbd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0b));
        EXPECT(0xf1, gbc.readMem(0xbd0c));
        // CB F1 01E2
        gbc.setState(0x3af, 0x98b2, 0x2400, 0xe709, 0xea31, 0xf0eb, 0x1, 0x1);
        gbc.writeMem(0x3af, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x98b2, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01E3
        gbc.setState(0xa18c, 0xb175, 0x8040, 0x2f1b, 0x3eca, 0xba16, 0x0, 0x1);
        gbc.writeMem(0xa18c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb175, gbc.sp());
        EXPECT(0xa18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18c));
        EXPECT(0xf1, gbc.readMem(0xa18d));
        // CB F1 01E4
        gbc.setState(0x338b, 0x5361, 0x5d20, 0x501d, 0xee73, 0x3e37, 0x0, 0x1);
        gbc.writeMem(0x338b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5361, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01E5
        gbc.setState(0xb555, 0xe354, 0x2180, 0xe4dc, 0x8044, 0x5ac4, 0x1, 0x0);
        gbc.writeMem(0xb555, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0xb557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb555));
        EXPECT(0xf1, gbc.readMem(0xb556));
        // CB F1 01E6
        gbc.setState(0x502d, 0xe8bf, 0x480, 0x98f, 0x8c6e, 0x8fa5, 0x0, 0x1);
        gbc.writeMem(0x502d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01E7
        gbc.setState(0x9e3b, 0x4d0b, 0xe140, 0xeedd, 0x2a86, 0x26e1, 0x0, 0x0);
        gbc.writeMem(0x9e3b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4d0b, gbc.sp());
        EXPECT(0x9e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3b));
        EXPECT(0xf1, gbc.readMem(0x9e3c));
        // CB F1 01E8
        gbc.setState(0xa760, 0xb121, 0x8640, 0x956a, 0x6551, 0xdbad, 0x0, 0x0);
        gbc.writeMem(0xa760, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa760));
        EXPECT(0xf1, gbc.readMem(0xa761));
        // CB F1 01E9
        gbc.setState(0x3569, 0xb81d, 0x7aa0, 0xdc8f, 0xe63a, 0xbc94, 0x1, 0x0);
        gbc.writeMem(0x3569, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01EA
        gbc.setState(0x3d56, 0x933c, 0x6f30, 0xa016, 0x16e3, 0xca76, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01EB
        gbc.setState(0xb3c2, 0xaaea, 0x3420, 0x2d2c, 0xb99c, 0x17bb, 0x0, 0x0);
        gbc.writeMem(0xb3c2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c2));
        EXPECT(0xf1, gbc.readMem(0xb3c3));
        // CB F1 01EC
        gbc.setState(0x5f47, 0x9bf4, 0xd10, 0x5f73, 0xf9bd, 0xa5da, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9bf4, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01ED
        gbc.setState(0xaa8f, 0x4b04, 0xb8d0, 0xae77, 0xa050, 0x82c, 0x1, 0x0);
        gbc.writeMem(0xaa8f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0xaa91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8f));
        EXPECT(0xf1, gbc.readMem(0xaa90));
        // CB F1 01EE
        gbc.setState(0x2c26, 0x5119, 0x2000, 0xef6d, 0x3f7, 0xafc3, 0x0, 0x0);
        gbc.writeMem(0x2c26, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5119, gbc.sp());
        EXPECT(0x2c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01EF
        gbc.setState(0xa50a, 0x2f44, 0x80b0, 0xfd8, 0x8c69, 0x3af, 0x1, 0x1);
        gbc.writeMem(0xa50a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50a));
        EXPECT(0xf1, gbc.readMem(0xa50b));
        // CB F1 01F0
        gbc.setState(0xeee9, 0x208c, 0x2740, 0xd066, 0xacb2, 0x69b6, 0x0, 0x1);
        gbc.writeMem(0xeee9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x208c, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee9));
        EXPECT(0xf1, gbc.readMem(0xeeea));
        // CB F1 01F1
        gbc.setState(0xae3a, 0xb415, 0xe4b0, 0xd224, 0xe33d, 0x2f6b, 0x1, 0x1);
        gbc.writeMem(0xae3a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3a));
        EXPECT(0xf1, gbc.readMem(0xae3b));
        // CB F1 01F2
        gbc.setState(0xaa28, 0x729a, 0x71a0, 0x46e6, 0xdab9, 0xd474, 0x0, 0x1);
        gbc.writeMem(0xaa28, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa28));
        EXPECT(0xf1, gbc.readMem(0xaa29));
        // CB F1 01F3
        gbc.setState(0x89be, 0x7506, 0x3f0, 0xfe3d, 0x3479, 0x7fe4, 0x0, 0x0);
        gbc.writeMem(0x89be, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7506, gbc.sp());
        EXPECT(0x89c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89be));
        EXPECT(0xf1, gbc.readMem(0x89bf));
        // CB F1 01F4
        gbc.setState(0x1629, 0x2b88, 0xbd50, 0x8e2d, 0xa86b, 0xfbd7, 0x0, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01F5
        gbc.setState(0xeb63, 0xbb7f, 0x4e00, 0xc699, 0xbbc0, 0xca52, 0x0, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbb7f, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb63));
        EXPECT(0xf1, gbc.readMem(0xeb64));
        // CB F1 01F6
        gbc.setState(0x9330, 0xa9ac, 0xac30, 0xf2ca, 0xd0d, 0xbfdd, 0x0, 0x0);
        gbc.writeMem(0x9330, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa9ac, gbc.sp());
        EXPECT(0x9332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9330));
        EXPECT(0xf1, gbc.readMem(0x9331));
        // CB F1 01F7
        gbc.setState(0xcacb, 0x4472, 0xc1c0, 0x77de, 0x28e4, 0x3960, 0x1, 0x1);
        gbc.writeMem(0xcacb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4472, gbc.sp());
        EXPECT(0xcacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacb));
        EXPECT(0xf1, gbc.readMem(0xcacc));
        // CB F1 01F8
        gbc.setState(0x1f90, 0x5023, 0x2cb0, 0xaecd, 0xfa33, 0x4b61, 0x0, 0x0);
        gbc.writeMem(0x1f90, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5023, gbc.sp());
        EXPECT(0x1f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01F9
        gbc.setState(0x7308, 0x52c4, 0x7eb0, 0x8d59, 0x35d6, 0xf53e, 0x1, 0x0);
        gbc.writeMem(0x7308, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x52c4, gbc.sp());
        EXPECT(0x730a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01FA
        gbc.setState(0xa4dd, 0x6d0a, 0xaf50, 0x9893, 0x3115, 0x2197, 0x1, 0x1);
        gbc.writeMem(0xa4dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d0a, gbc.sp());
        EXPECT(0xa4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4dd));
        EXPECT(0xf1, gbc.readMem(0xa4de));
        // CB F1 01FB
        gbc.setState(0x32f3, 0xac2, 0x9150, 0x652f, 0x8d57, 0xe9eb, 0x1, 0x0);
        gbc.writeMem(0x32f3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xac2, gbc.sp());
        EXPECT(0x32f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 01FC
        gbc.setState(0x836a, 0x14e0, 0xe7b0, 0x4db6, 0xdef6, 0x5d59, 0x0, 0x1);
        gbc.writeMem(0x836a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x14e0, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836a));
        EXPECT(0xf1, gbc.readMem(0x836b));
        // CB F1 01FD
        gbc.setState(0xb042, 0xbcbd, 0x59f0, 0x6607, 0xcbe6, 0xe3c5, 0x1, 0x0);
        gbc.writeMem(0xb042, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb042));
        EXPECT(0xf1, gbc.readMem(0xb043));
        // CB F1 01FE
        gbc.setState(0x3f2d, 0x85e0, 0x6020, 0xfcf1, 0xe9ef, 0x7259, 0x0, 0x1);
        gbc.writeMem(0x3f2d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 01FF
        gbc.setState(0xa280, 0x6a6b, 0xa220, 0x8439, 0x2bcf, 0xd6bb, 0x1, 0x1);
        gbc.writeMem(0xa280, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0xa282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa280));
        EXPECT(0xf1, gbc.readMem(0xa281));
        // CB F1 0200
        gbc.setState(0x56fe, 0x6bf5, 0xc020, 0xe8f3, 0x2594, 0xb51d, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6bf5, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0201
        gbc.setState(0x18de, 0x6fa2, 0x4db0, 0xaad6, 0xaf0b, 0x2793, 0x1, 0x1);
        gbc.writeMem(0x18de, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0x18e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0202
        gbc.setState(0x640b, 0x273a, 0x6b20, 0x145b, 0x5c6d, 0x546e, 0x1, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x273a, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0203
        gbc.setState(0xd424, 0x850, 0xf9a0, 0x5b14, 0xf6a5, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0xd424, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x850, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd424));
        EXPECT(0xf1, gbc.readMem(0xd425));
        // CB F1 0204
        gbc.setState(0xbb67, 0x14fc, 0x6f10, 0x1b79, 0x1e10, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0xbb67, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x14fc, gbc.sp());
        EXPECT(0xbb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb67));
        EXPECT(0xf1, gbc.readMem(0xbb68));
        // CB F1 0205
        gbc.setState(0x7443, 0x6313, 0x7ad0, 0xcc7b, 0x7c7f, 0x98c1, 0x0, 0x1);
        gbc.writeMem(0x7443, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6313, gbc.sp());
        EXPECT(0x7445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0206
        gbc.setState(0xb2b1, 0xe1cb, 0x4b00, 0x930, 0xdd66, 0x3df4, 0x1, 0x1);
        gbc.writeMem(0xb2b1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0xb2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b1));
        EXPECT(0xf1, gbc.readMem(0xb2b2));
        // CB F1 0207
        gbc.setState(0xaa2e, 0x4482, 0xf6f0, 0x9a26, 0xde55, 0xb583, 0x0, 0x1);
        gbc.writeMem(0xaa2e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4482, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2e));
        EXPECT(0xf1, gbc.readMem(0xaa2f));
        // CB F1 0208
        gbc.setState(0xc7b7, 0x8aa5, 0xc140, 0xbc58, 0xa280, 0x187d, 0x0, 0x1);
        gbc.writeMem(0xc7b7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8aa5, gbc.sp());
        EXPECT(0xc7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b7));
        EXPECT(0xf1, gbc.readMem(0xc7b8));
        // CB F1 0209
        gbc.setState(0x452, 0x6f04, 0x3690, 0x53b4, 0xf838, 0xe869, 0x1, 0x1);
        gbc.writeMem(0x452, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 020A
        gbc.setState(0x687a, 0xe67c, 0x6620, 0xf84a, 0x63d5, 0xae80, 0x1, 0x1);
        gbc.writeMem(0x687a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe67c, gbc.sp());
        EXPECT(0x687c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 020B
        gbc.setState(0x9df5, 0x767b, 0x6800, 0x2b61, 0xf709, 0x480d, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x767b, gbc.sp());
        EXPECT(0x9df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df5));
        EXPECT(0xf1, gbc.readMem(0x9df6));
        // CB F1 020C
        gbc.setState(0xe306, 0xd19d, 0x5320, 0xb333, 0x4c7f, 0x40a3, 0x0, 0x0);
        gbc.writeMem(0xe306, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd19d, gbc.sp());
        EXPECT(0xe308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe306));
        EXPECT(0xf1, gbc.readMem(0xe307));
        // CB F1 020D
        gbc.setState(0xa41d, 0x2696, 0xe920, 0xa748, 0xa945, 0xaeb1, 0x1, 0x0);
        gbc.writeMem(0xa41d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2696, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41d));
        EXPECT(0xf1, gbc.readMem(0xa41e));
        // CB F1 020E
        gbc.setState(0x4350, 0xe619, 0xfcd0, 0xf72, 0xc9af, 0xd188, 0x1, 0x0);
        gbc.writeMem(0x4350, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0x4352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 020F
        gbc.setState(0x4cc5, 0x88d7, 0xdd50, 0x8af1, 0xe26a, 0xae68, 0x1, 0x0);
        gbc.writeMem(0x4cc5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0210
        gbc.setState(0x3874, 0x61e3, 0xc5e0, 0x2a1a, 0x3f8e, 0x29e, 0x1, 0x0);
        gbc.writeMem(0x3874, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0211
        gbc.setState(0x9ce3, 0xc245, 0x1240, 0x15e1, 0xfd6d, 0x6d2b, 0x0, 0x0);
        gbc.writeMem(0x9ce3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x9ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce3));
        EXPECT(0xf1, gbc.readMem(0x9ce4));
        // CB F1 0212
        gbc.setState(0x17a8, 0x32af, 0xa730, 0xae32, 0x35cc, 0xc4b5, 0x1, 0x0);
        gbc.writeMem(0x17a8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x32af, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0213
        gbc.setState(0xb949, 0xf75c, 0xc100, 0x8646, 0x230d, 0xc917, 0x0, 0x0);
        gbc.writeMem(0xb949, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf75c, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb949));
        EXPECT(0xf1, gbc.readMem(0xb94a));
        // CB F1 0214
        gbc.setState(0x8d8, 0xc535, 0xe290, 0x701a, 0x69fa, 0xfdf3, 0x0, 0x0);
        gbc.writeMem(0x8d8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0x8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0215
        gbc.setState(0x9a5, 0x608a, 0xa3c0, 0xb08f, 0x9c2b, 0xa323, 0x1, 0x1);
        gbc.writeMem(0x9a5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x608a, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0217
        gbc.setState(0x9139, 0x837a, 0xc580, 0xd903, 0x785f, 0xd416, 0x0, 0x0);
        gbc.writeMem(0x9139, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9139));
        EXPECT(0xf1, gbc.readMem(0x913a));
        // CB F1 0218
        gbc.setState(0xa97f, 0x6ca6, 0x4a00, 0x8945, 0x5173, 0xfafa, 0x0, 0x1);
        gbc.writeMem(0xa97f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6ca6, gbc.sp());
        EXPECT(0xa981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97f));
        EXPECT(0xf1, gbc.readMem(0xa980));
        // CB F1 0219
        gbc.setState(0xa29c, 0x83af, 0xbbf0, 0xc313, 0x9a4b, 0x8bca, 0x0, 0x0);
        gbc.writeMem(0xa29c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29c));
        EXPECT(0xf1, gbc.readMem(0xa29d));
        // CB F1 021A
        gbc.setState(0x6ef7, 0xb36f, 0xb270, 0x5885, 0xac17, 0x1809, 0x1, 0x0);
        gbc.writeMem(0x6ef7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 021B
        gbc.setState(0x85e3, 0x9984, 0x440, 0xe909, 0xcacc, 0xb583, 0x0, 0x1);
        gbc.writeMem(0x85e3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9984, gbc.sp());
        EXPECT(0x85e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e3));
        EXPECT(0xf1, gbc.readMem(0x85e4));
        // CB F1 021C
        gbc.setState(0x3a30, 0x8170, 0xe1c0, 0x51a8, 0x7e8b, 0x2535, 0x0, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 021E
        gbc.setState(0xc5f7, 0xb084, 0x4970, 0x30e5, 0x2cf5, 0x5b0a, 0x0, 0x0);
        gbc.writeMem(0xc5f7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb084, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f7));
        EXPECT(0xf1, gbc.readMem(0xc5f8));
        // CB F1 021F
        gbc.setState(0x6469, 0x5433, 0xbc0, 0xdef, 0xac60, 0xd4a3, 0x1, 0x0);
        gbc.writeMem(0x6469, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0x646b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0221
        gbc.setState(0xcaa7, 0x5521, 0x21e0, 0xa59e, 0xa66, 0x9263, 0x1, 0x1);
        gbc.writeMem(0xcaa7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0xcaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa7));
        EXPECT(0xf1, gbc.readMem(0xcaa8));
        // CB F1 0222
        gbc.setState(0xb362, 0xceee, 0xfa60, 0x846c, 0xace6, 0xa48c, 0x0, 0x1);
        gbc.writeMem(0xb362, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0xb364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb362));
        EXPECT(0xf1, gbc.readMem(0xb363));
        // CB F1 0223
        gbc.setState(0x18b1, 0x38, 0x4b00, 0xdda, 0xa783, 0xd17b, 0x1, 0x0);
        gbc.writeMem(0x18b1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0x18b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0224
        gbc.setState(0x3054, 0x52eb, 0x1ff0, 0xbd09, 0x4212, 0x7414, 0x0, 0x1);
        gbc.writeMem(0x3054, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0225
        gbc.setState(0xe817, 0x999c, 0x1fb0, 0xd0ee, 0xb4c1, 0xd150, 0x1, 0x1);
        gbc.writeMem(0xe817, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0xe819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe817));
        EXPECT(0xf1, gbc.readMem(0xe818));
        // CB F1 0226
        gbc.setState(0x3d8c, 0xbdd0, 0x6480, 0xca57, 0xa3de, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x3d8c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbdd0, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0227
        gbc.setState(0xacd7, 0x62cc, 0xe2e0, 0xaf81, 0xef11, 0x88f1, 0x1, 0x0);
        gbc.writeMem(0xacd7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd7));
        EXPECT(0xf1, gbc.readMem(0xacd8));
        // CB F1 0229
        gbc.setState(0x62db, 0xa2ab, 0xc530, 0xd526, 0x5daa, 0x9c08, 0x1, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa2ab, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 022B
        gbc.setState(0xadf5, 0xd33a, 0x6950, 0x6687, 0xd3ba, 0xe6ab, 0x0, 0x0);
        gbc.writeMem(0xadf5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd33a, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf5));
        EXPECT(0xf1, gbc.readMem(0xadf6));
        // CB F1 022D
        gbc.setState(0x417c, 0xea96, 0x3b00, 0x2b25, 0x71a, 0xad7c, 0x0, 0x1);
        gbc.writeMem(0x417c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea96, gbc.sp());
        EXPECT(0x417e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 022E
        gbc.setState(0xe731, 0xf9fe, 0x4610, 0x3a5f, 0x5861, 0x8bae, 0x1, 0x0);
        gbc.writeMem(0xe731, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf9fe, gbc.sp());
        EXPECT(0xe733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe731));
        EXPECT(0xf1, gbc.readMem(0xe732));
        // CB F1 022F
        gbc.setState(0x4eb5, 0xfdb5, 0x4130, 0xcfe1, 0x62d8, 0x4776, 0x0, 0x0);
        gbc.writeMem(0x4eb5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0231
        gbc.setState(0x5038, 0x7b58, 0x190, 0xebeb, 0xd2a3, 0xaa5d, 0x0, 0x1);
        gbc.writeMem(0x5038, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7b58, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0232
        gbc.setState(0xef33, 0xedcf, 0x9f60, 0x1e51, 0x19bd, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0xef33, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xedcf, gbc.sp());
        EXPECT(0xef35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef33));
        EXPECT(0xf1, gbc.readMem(0xef34));
        // CB F1 0233
        gbc.setState(0x8bbf, 0xeaf1, 0x5830, 0x9479, 0x6fbc, 0x3708, 0x1, 0x0);
        gbc.writeMem(0x8bbf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0x8bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbf));
        EXPECT(0xf1, gbc.readMem(0x8bc0));
        // CB F1 0234
        gbc.setState(0x5d63, 0x111, 0xa9e0, 0x5260, 0x1384, 0x1b60, 0x0, 0x1);
        gbc.writeMem(0x5d63, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0235
        gbc.setState(0xc42, 0x2466, 0x3a10, 0xba2, 0x2e48, 0xc16, 0x0, 0x1);
        gbc.writeMem(0xc42, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0236
        gbc.setState(0x4982, 0x2716, 0x84c0, 0x9a7f, 0x4973, 0x3cbd, 0x1, 0x0);
        gbc.writeMem(0x4982, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x4984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0238
        gbc.setState(0x97, 0xf058, 0x33b0, 0x156, 0xeeb, 0xae60, 0x0, 0x1);
        gbc.writeMem(0x97, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf058, gbc.sp());
        EXPECT(0x99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0239
        gbc.setState(0xd2f3, 0xf9fa, 0xe3b0, 0xca98, 0x17ba, 0xb2c1, 0x0, 0x0);
        gbc.writeMem(0xd2f3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0xd2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f3));
        EXPECT(0xf1, gbc.readMem(0xd2f4));
        // CB F1 023A
        gbc.setState(0xee36, 0x8902, 0xd570, 0xeded, 0x71a3, 0x38f1, 0x0, 0x0);
        gbc.writeMem(0xee36, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8902, gbc.sp());
        EXPECT(0xee38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee36));
        EXPECT(0xf1, gbc.readMem(0xee37));
        // CB F1 023B
        gbc.setState(0x3bea, 0xc766, 0xb00, 0x1d36, 0xe31d, 0xc3dc, 0x1, 0x0);
        gbc.writeMem(0x3bea, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc766, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 023C
        gbc.setState(0x1d78, 0x71f5, 0xc960, 0xe1f, 0x3a78, 0x643c, 0x1, 0x0);
        gbc.writeMem(0x1d78, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x71f5, gbc.sp());
        EXPECT(0x1d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 023D
        gbc.setState(0xea7d, 0x39d4, 0xe980, 0x3628, 0x596b, 0xda62, 0x1, 0x1);
        gbc.writeMem(0xea7d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0xea7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7d));
        EXPECT(0xf1, gbc.readMem(0xea7e));
        // CB F1 023E
        gbc.setState(0x6d76, 0x7156, 0x24f0, 0x995b, 0x63df, 0xb57c, 0x1, 0x0);
        gbc.writeMem(0x6d76, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7156, gbc.sp());
        EXPECT(0x6d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 023F
        gbc.setState(0xa917, 0xdbbb, 0xd140, 0xc2d, 0xf69d, 0xee3b, 0x1, 0x0);
        gbc.writeMem(0xa917, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdbbb, gbc.sp());
        EXPECT(0xa919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa917));
        EXPECT(0xf1, gbc.readMem(0xa918));
        // CB F1 0240
        gbc.setState(0x1420, 0x1065, 0xad70, 0xca32, 0x1bc4, 0xd355, 0x0, 0x1);
        gbc.writeMem(0x1420, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0241
        gbc.setState(0xb2b6, 0x32da, 0x4f70, 0x25b5, 0x737a, 0x3097, 0x1, 0x0);
        gbc.writeMem(0xb2b6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x32da, gbc.sp());
        EXPECT(0xb2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b6));
        EXPECT(0xf1, gbc.readMem(0xb2b7));
        // CB F1 0242
        gbc.setState(0x9347, 0xbeef, 0x1860, 0xcb84, 0xb227, 0xb689, 0x0, 0x0);
        gbc.writeMem(0x9347, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbeef, gbc.sp());
        EXPECT(0x9349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9347));
        EXPECT(0xf1, gbc.readMem(0x9348));
        // CB F1 0243
        gbc.setState(0x4e35, 0x8eaf, 0x8320, 0x950, 0xe7ee, 0x833a, 0x1, 0x0);
        gbc.writeMem(0x4e35, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x4e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0245
        gbc.setState(0x76f8, 0x9787, 0xc90, 0x5011, 0xc122, 0xa331, 0x0, 0x0);
        gbc.writeMem(0x76f8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0x76fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0246
        gbc.setState(0x8ee9, 0xc71a, 0x54b0, 0x9baf, 0xf0ef, 0x12db, 0x0, 0x0);
        gbc.writeMem(0x8ee9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc71a, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0xf1, gbc.readMem(0x8eea));
        // CB F1 0247
        gbc.setState(0xf39, 0x5535, 0xd1e0, 0x637d, 0xf615, 0xa487, 0x1, 0x0);
        gbc.writeMem(0xf39, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5535, gbc.sp());
        EXPECT(0xf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0248
        gbc.setState(0xe83f, 0xf627, 0x88f0, 0x98ce, 0x847a, 0x784d, 0x0, 0x0);
        gbc.writeMem(0xe83f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0xe841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83f));
        EXPECT(0xf1, gbc.readMem(0xe840));
        // CB F1 0249
        gbc.setState(0x30b7, 0xf1f5, 0x65a0, 0x901a, 0x4fb8, 0x2f46, 0x1, 0x1);
        gbc.writeMem(0x30b7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0x30b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 024A
        gbc.setState(0x4a41, 0x27fa, 0xecb0, 0x5444, 0x85b2, 0xfa42, 0x0, 0x1);
        gbc.writeMem(0x4a41, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x27fa, gbc.sp());
        EXPECT(0x4a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 024B
        gbc.setState(0x9bfe, 0xf5f0, 0xc730, 0xdea9, 0x5ec9, 0x1ec6, 0x1, 0x0);
        gbc.writeMem(0x9bfe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfe));
        EXPECT(0xf1, gbc.readMem(0x9bff));
        // CB F1 024C
        gbc.setState(0x3507, 0x407e, 0xa9f0, 0xa9d4, 0x586c, 0x529e, 0x1, 0x0);
        gbc.writeMem(0x3507, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x407e, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 024D
        gbc.setState(0x2392, 0xca1b, 0x7000, 0x81a0, 0x301e, 0x65e6, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 024E
        gbc.setState(0x5cd9, 0x226a, 0x2160, 0x3d1e, 0x45c3, 0x2ad8, 0x0, 0x0);
        gbc.writeMem(0x5cd9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 024F
        gbc.setState(0x28ce, 0x25d6, 0xb000, 0x8f7f, 0x8421, 0xbdd3, 0x0, 0x0);
        gbc.writeMem(0x28ce, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x25d6, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0250
        gbc.setState(0x5f5b, 0xa597, 0x9d10, 0x22e5, 0x46df, 0x8fa8, 0x1, 0x0);
        gbc.writeMem(0x5f5b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0251
        gbc.setState(0x7a2, 0x1198, 0x5950, 0xd731, 0x38c2, 0x3415, 0x0, 0x1);
        gbc.writeMem(0x7a2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1198, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0252
        gbc.setState(0xbb1f, 0xaf88, 0x3480, 0xc788, 0x3dc9, 0xe411, 0x1, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaf88, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1f));
        EXPECT(0xf1, gbc.readMem(0xbb20));
        // CB F1 0253
        gbc.setState(0x2bdb, 0xd35d, 0x2e40, 0x61e5, 0x7625, 0x39e, 0x0, 0x1);
        gbc.writeMem(0x2bdb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x2bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0254
        gbc.setState(0xe8dd, 0x5535, 0x1890, 0xdeb7, 0xc319, 0x9699, 0x0, 0x0);
        gbc.writeMem(0xe8dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5535, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0xf1, gbc.readMem(0xe8de));
        // CB F1 0255
        gbc.setState(0xecd2, 0x92b0, 0xd210, 0x45b1, 0x5f2a, 0xa66f, 0x0, 0x0);
        gbc.writeMem(0xecd2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x92b0, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd2));
        EXPECT(0xf1, gbc.readMem(0xecd3));
        // CB F1 0256
        gbc.setState(0xd1b0, 0x151b, 0x45c0, 0x6486, 0x9c9a, 0xed12, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0xf1, gbc.readMem(0xd1b1));
        // CB F1 0257
        gbc.setState(0x8c3a, 0xb64e, 0x27c0, 0xfb8b, 0x7e05, 0x1359, 0x1, 0x1);
        gbc.writeMem(0x8c3a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb64e, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3a));
        EXPECT(0xf1, gbc.readMem(0x8c3b));
        // CB F1 0258
        gbc.setState(0x3842, 0x63c6, 0x62f0, 0x72ab, 0xc1d3, 0x66ad, 0x0, 0x0);
        gbc.writeMem(0x3842, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0259
        gbc.setState(0x8b8e, 0x973, 0x2f10, 0xcfc6, 0x4e52, 0xfd91, 0x1, 0x0);
        gbc.writeMem(0x8b8e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x973, gbc.sp());
        EXPECT(0x8b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8e));
        EXPECT(0xf1, gbc.readMem(0x8b8f));
        // CB F1 025A
        gbc.setState(0xc401, 0x8337, 0x6580, 0x36, 0x3a5d, 0xf25b, 0x1, 0x1);
        gbc.writeMem(0xc401, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0xc403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc401));
        EXPECT(0xf1, gbc.readMem(0xc402));
        // CB F1 025B
        gbc.setState(0x3f39, 0xd3b9, 0xdcb0, 0xc01e, 0x2c4f, 0xcd80, 0x1, 0x0);
        gbc.writeMem(0x3f39, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0x3f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 025C
        gbc.setState(0xec63, 0xd470, 0xe490, 0x9086, 0x59cb, 0xa2b2, 0x0, 0x0);
        gbc.writeMem(0xec63, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd470, gbc.sp());
        EXPECT(0xec65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec63));
        EXPECT(0xf1, gbc.readMem(0xec64));
        // CB F1 025D
        gbc.setState(0x4946, 0xe45f, 0x5fe0, 0xd295, 0x89ee, 0x99cb, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe45f, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 025E
        gbc.setState(0x411f, 0x9768, 0xd8a0, 0x8be0, 0x39cd, 0x9730, 0x1, 0x1);
        gbc.writeMem(0x411f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9768, gbc.sp());
        EXPECT(0x4121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 025F
        gbc.setState(0x7c96, 0xc31a, 0x17e0, 0x2099, 0xfdb2, 0x973, 0x1, 0x0);
        gbc.writeMem(0x7c96, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc31a, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0260
        gbc.setState(0xa2e4, 0xb5cb, 0x2620, 0x3857, 0x490e, 0x842e, 0x1, 0x1);
        gbc.writeMem(0xa2e4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb5cb, gbc.sp());
        EXPECT(0xa2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e4));
        EXPECT(0xf1, gbc.readMem(0xa2e5));
        // CB F1 0261
        gbc.setState(0xef64, 0x8111, 0x4cb0, 0xd871, 0x2532, 0xa8f6, 0x0, 0x0);
        gbc.writeMem(0xef64, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xef66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef64));
        EXPECT(0xf1, gbc.readMem(0xef65));
        // CB F1 0262
        gbc.setState(0xda30, 0x4b45, 0x8b40, 0x734a, 0x1ef0, 0x4cfb, 0x0, 0x1);
        gbc.writeMem(0xda30, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0xf1, gbc.readMem(0xda31));
        // CB F1 0263
        gbc.setState(0x350d, 0xe8c2, 0x6d20, 0x2c5, 0x7da3, 0xe869, 0x1, 0x1);
        gbc.writeMem(0x350d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0x350f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0264
        gbc.setState(0xac37, 0xfae, 0x56a0, 0x555f, 0x9565, 0x33b3, 0x1, 0x0);
        gbc.writeMem(0xac37, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0xac39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac37));
        EXPECT(0xf1, gbc.readMem(0xac38));
        // CB F1 0265
        gbc.setState(0x77b0, 0x117, 0x400, 0x92aa, 0x463a, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0x77b0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0x77b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0266
        gbc.setState(0xeb0d, 0xf4ff, 0x48f0, 0xcb0b, 0x771d, 0x51ce, 0x1, 0x0);
        gbc.writeMem(0xeb0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0xeb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0d));
        EXPECT(0xf1, gbc.readMem(0xeb0e));
        // CB F1 0267
        gbc.setState(0x7840, 0x2226, 0xa700, 0xcf71, 0x7945, 0xbbcc, 0x1, 0x0);
        gbc.writeMem(0x7840, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2226, gbc.sp());
        EXPECT(0x7842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0268
        gbc.setState(0x73da, 0x13e4, 0x6cb0, 0x1b, 0xb1c9, 0x182c, 0x0, 0x0);
        gbc.writeMem(0x73da, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x13e4, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0269
        gbc.setState(0x7502, 0x25a1, 0x64e0, 0x598f, 0x35f6, 0x70f5, 0x1, 0x1);
        gbc.writeMem(0x7502, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0x7504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 026A
        gbc.setState(0x71c4, 0x3ed9, 0xdbf0, 0x5752, 0x369a, 0x460b, 0x1, 0x0);
        gbc.writeMem(0x71c4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x71c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 026B
        gbc.setState(0x129, 0x803d, 0x4db0, 0x1477, 0xc934, 0xf4a6, 0x1, 0x1);
        gbc.writeMem(0x129, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0x12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 026C
        gbc.setState(0x1d60, 0xa180, 0xc3c0, 0x78c1, 0xe29e, 0x35e8, 0x1, 0x0);
        gbc.writeMem(0x1d60, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa180, gbc.sp());
        EXPECT(0x1d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 026D
        gbc.setState(0x7277, 0xf1a1, 0xee50, 0xe563, 0x1492, 0xd5db, 0x1, 0x1);
        gbc.writeMem(0x7277, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf1a1, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 026E
        gbc.setState(0x2299, 0x5409, 0x2360, 0x3c03, 0xfbfd, 0x2903, 0x1, 0x0);
        gbc.writeMem(0x2299, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5409, gbc.sp());
        EXPECT(0x229b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 026F
        gbc.setState(0xdbf8, 0x4b5c, 0xb0a0, 0x7304, 0x5c31, 0xafa6, 0x1, 0x0);
        gbc.writeMem(0xdbf8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf8));
        EXPECT(0xf1, gbc.readMem(0xdbf9));
        // CB F1 0271
        gbc.setState(0x9cb2, 0x3ef2, 0xffc0, 0x4a28, 0xda85, 0xdad0, 0x1, 0x0);
        gbc.writeMem(0x9cb2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3ef2, gbc.sp());
        EXPECT(0x9cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb2));
        EXPECT(0xf1, gbc.readMem(0x9cb3));
        // CB F1 0272
        gbc.setState(0x47fa, 0x99d3, 0xba20, 0xa5db, 0x5cf2, 0xcec7, 0x1, 0x1);
        gbc.writeMem(0x47fa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x99d3, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0273
        gbc.setState(0x4525, 0xf09a, 0xc080, 0x1d99, 0xa22a, 0x6f2c, 0x1, 0x1);
        gbc.writeMem(0x4525, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf09a, gbc.sp());
        EXPECT(0x4527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0274
        gbc.setState(0xdbde, 0x3b3e, 0x12c0, 0xf4fe, 0xea8c, 0xfcd9, 0x1, 0x0);
        gbc.writeMem(0xdbde, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3b3e, gbc.sp());
        EXPECT(0xdbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbde));
        EXPECT(0xf1, gbc.readMem(0xdbdf));
        // CB F1 0275
        gbc.setState(0xcd20, 0x88a6, 0x9440, 0x3831, 0xaf4d, 0xd0ed, 0x0, 0x0);
        gbc.writeMem(0xcd20, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd20));
        EXPECT(0xf1, gbc.readMem(0xcd21));
        // CB F1 0276
        gbc.setState(0xc835, 0x430d, 0x22b0, 0x5a6a, 0x6231, 0x5713, 0x1, 0x0);
        gbc.writeMem(0xc835, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0xc837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc835));
        EXPECT(0xf1, gbc.readMem(0xc836));
        // CB F1 0277
        gbc.setState(0x9d4f, 0x799e, 0xde60, 0x1a05, 0xb1c6, 0xcbb5, 0x0, 0x1);
        gbc.writeMem(0x9d4f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0x9d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4f));
        EXPECT(0xf1, gbc.readMem(0x9d50));
        // CB F1 0278
        gbc.setState(0x33ef, 0x8eaf, 0x2de0, 0xb82e, 0xc2c9, 0x618c, 0x1, 0x0);
        gbc.writeMem(0x33ef, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0279
        gbc.setState(0xbc16, 0xc34d, 0xa130, 0x70fa, 0xb183, 0x52ca, 0x0, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc16));
        EXPECT(0xf1, gbc.readMem(0xbc17));
        // CB F1 027A
        gbc.setState(0x7450, 0xf0df, 0x3fa0, 0xf1a3, 0x160a, 0x33ae, 0x1, 0x0);
        gbc.writeMem(0x7450, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 027B
        gbc.setState(0x68e, 0xc7cd, 0x5850, 0x8546, 0xb033, 0x18cf, 0x0, 0x1);
        gbc.writeMem(0x68e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc7cd, gbc.sp());
        EXPECT(0x690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 027C
        gbc.setState(0x209b, 0x37d, 0x40d0, 0xf31d, 0xb77, 0x47fa, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x209d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 027D
        gbc.setState(0x7669, 0x6a24, 0x18b0, 0x23b4, 0xea09, 0xc8ec, 0x0, 0x1);
        gbc.writeMem(0x7669, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6a24, gbc.sp());
        EXPECT(0x766b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 027E
        gbc.setState(0x54b0, 0xa12, 0xed40, 0x49f, 0xdd9f, 0x58b4, 0x0, 0x1);
        gbc.writeMem(0x54b0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa12, gbc.sp());
        EXPECT(0x54b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 027F
        gbc.setState(0x66ed, 0x72fd, 0x2d80, 0x9243, 0xace5, 0x4ac5, 0x0, 0x0);
        gbc.writeMem(0x66ed, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x72fd, gbc.sp());
        EXPECT(0x66ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0280
        gbc.setState(0xbcad, 0x8e75, 0x77a0, 0xf2e8, 0xa2ce, 0x584b, 0x0, 0x0);
        gbc.writeMem(0xbcad, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e75, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0xf1, gbc.readMem(0xbcae));
        // CB F1 0281
        gbc.setState(0x9aeb, 0xbcbc, 0x4d40, 0xd747, 0xc16e, 0x2533, 0x1, 0x0);
        gbc.writeMem(0x9aeb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aeb));
        EXPECT(0xf1, gbc.readMem(0x9aec));
        // CB F1 0283
        gbc.setState(0x61c0, 0xa0a, 0x2430, 0xedb2, 0x903d, 0xc37c, 0x0, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa0a, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0284
        gbc.setState(0xeaa, 0xfc49, 0x5f30, 0x595b, 0xb183, 0x5f76, 0x0, 0x0);
        gbc.writeMem(0xeaa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0285
        gbc.setState(0xd38c, 0x938, 0x28a0, 0xd0b7, 0x2d15, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38c));
        EXPECT(0xf1, gbc.readMem(0xd38d));
        // CB F1 0286
        gbc.setState(0x1109, 0x9a36, 0xfb20, 0xf29a, 0x9fad, 0xe126, 0x0, 0x1);
        gbc.writeMem(0x1109, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0x110b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0287
        gbc.setState(0xa56e, 0xcc17, 0xfa30, 0x11e6, 0xb469, 0x6928, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0xa570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56e));
        EXPECT(0xf1, gbc.readMem(0xa56f));
        // CB F1 0288
        gbc.setState(0x48d3, 0x663b, 0x5a90, 0x924c, 0x320d, 0x30b9, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x663b, gbc.sp());
        EXPECT(0x48d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0289
        gbc.setState(0x6f82, 0xa19f, 0x3ee0, 0x2e78, 0x4bf, 0xdd2d, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 028A
        gbc.setState(0x1376, 0xf4d3, 0xdca0, 0x3a80, 0x2af7, 0x16e3, 0x0, 0x1);
        gbc.writeMem(0x1376, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf4d3, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 028B
        gbc.setState(0x8258, 0xfef3, 0xd680, 0x6a14, 0x8a7c, 0x4321, 0x1, 0x1);
        gbc.writeMem(0x8258, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfef3, gbc.sp());
        EXPECT(0x825a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8258));
        EXPECT(0xf1, gbc.readMem(0x8259));
        // CB F1 028C
        gbc.setState(0x668e, 0x953c, 0x5ab0, 0x4e0e, 0x64a0, 0x3ef, 0x0, 0x0);
        gbc.writeMem(0x668e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0x6690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 028D
        gbc.setState(0xba38, 0xf8a6, 0xd0c0, 0x7e1f, 0x69ca, 0x2ad3, 0x0, 0x1);
        gbc.writeMem(0xba38, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf8a6, gbc.sp());
        EXPECT(0xba3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba38));
        EXPECT(0xf1, gbc.readMem(0xba39));
        // CB F1 028E
        gbc.setState(0x706b, 0x1ac5, 0x5860, 0x203a, 0xd882, 0x21c4, 0x0, 0x0);
        gbc.writeMem(0x706b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0290
        gbc.setState(0x37b9, 0x56a9, 0x1160, 0x5969, 0xe84e, 0x19c2, 0x0, 0x1);
        gbc.writeMem(0x37b9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x37bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0291
        gbc.setState(0xa443, 0x1d8d, 0x5ac0, 0xb41e, 0x4a4, 0x68, 0x0, 0x0);
        gbc.writeMem(0xa443, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa443));
        EXPECT(0xf1, gbc.readMem(0xa444));
        // CB F1 0292
        gbc.setState(0x41db, 0x1e42, 0xcaf0, 0x5dd7, 0xbd4a, 0xf005, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1e42, gbc.sp());
        EXPECT(0x41dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0293
        gbc.setState(0x63cc, 0x9242, 0x78e0, 0x1bdb, 0x931a, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x63cc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9242, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0295
        gbc.setState(0x2e2, 0xfefe, 0x6f50, 0x4536, 0xb1ea, 0x170b, 0x0, 0x0);
        gbc.writeMem(0x2e2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfefe, gbc.sp());
        EXPECT(0x2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0296
        gbc.setState(0x7ed7, 0xaef7, 0x5d10, 0x337b, 0xaf17, 0x79d2, 0x0, 0x1);
        gbc.writeMem(0x7ed7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0297
        gbc.setState(0xab78, 0x6a9f, 0xe0d0, 0xdec4, 0xefed, 0xa0, 0x0, 0x1);
        gbc.writeMem(0xab78, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a9f, gbc.sp());
        EXPECT(0xab7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab78));
        EXPECT(0xf1, gbc.readMem(0xab79));
        // CB F1 0298
        gbc.setState(0x5bf0, 0xf24b, 0x2570, 0xd5ab, 0x7de5, 0xad72, 0x0, 0x1);
        gbc.writeMem(0x5bf0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0299
        gbc.setState(0x63f4, 0x6f11, 0x440, 0xde8c, 0xb823, 0xee77, 0x1, 0x0);
        gbc.writeMem(0x63f4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0x63f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 029A
        gbc.setState(0x6c03, 0xeba2, 0xe670, 0xfd3d, 0x26d, 0x493f, 0x0, 0x1);
        gbc.writeMem(0x6c03, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 029B
        gbc.setState(0x4943, 0x6c02, 0x6ac0, 0xdcff, 0x2923, 0x5960, 0x0, 0x1);
        gbc.writeMem(0x4943, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6c02, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 029C
        gbc.setState(0xc427, 0xbd3f, 0x6ea0, 0x726c, 0xb276, 0x923f, 0x1, 0x0);
        gbc.writeMem(0xc427, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd3f, gbc.sp());
        EXPECT(0xc429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc427));
        EXPECT(0xf1, gbc.readMem(0xc428));
        // CB F1 029D
        gbc.setState(0x147a, 0x6df9, 0xac20, 0x78d0, 0x326d, 0x9890, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6df9, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 029E
        gbc.setState(0x9b8b, 0xe9e7, 0xdec0, 0x3dc8, 0xde4d, 0x17ad, 0x0, 0x1);
        gbc.writeMem(0x9b8b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe9e7, gbc.sp());
        EXPECT(0x9b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8b));
        EXPECT(0xf1, gbc.readMem(0x9b8c));
        // CB F1 029F
        gbc.setState(0x27c6, 0x4f86, 0xf140, 0xfa51, 0x90ad, 0xb269, 0x0, 0x1);
        gbc.writeMem(0x27c6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02A0
        gbc.setState(0x595c, 0x1577, 0x1210, 0xd345, 0x934f, 0x76bb, 0x1, 0x0);
        gbc.writeMem(0x595c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1577, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02A1
        gbc.setState(0xde0e, 0x9b0d, 0x4630, 0x4b12, 0xa024, 0x5599, 0x0, 0x0);
        gbc.writeMem(0xde0e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0xde10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0e));
        EXPECT(0xf1, gbc.readMem(0xde0f));
        // CB F1 02A2
        gbc.setState(0x71a5, 0xda89, 0xaf40, 0x562b, 0xce5b, 0xe18c, 0x0, 0x0);
        gbc.writeMem(0x71a5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02A3
        gbc.setState(0xa7cd, 0x622a, 0x1660, 0x4663, 0x8bf3, 0xff25, 0x1, 0x1);
        gbc.writeMem(0xa7cd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x622a, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cd));
        EXPECT(0xf1, gbc.readMem(0xa7ce));
        // CB F1 02A4
        gbc.setState(0x43c2, 0x1c34, 0x54a0, 0x7d68, 0x660, 0xa9d3, 0x1, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1c34, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02A5
        gbc.setState(0xe4c5, 0x3992, 0xf590, 0x65a, 0x4083, 0x419f, 0x1, 0x0);
        gbc.writeMem(0xe4c5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3992, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c5));
        EXPECT(0xf1, gbc.readMem(0xe4c6));
        // CB F1 02A6
        gbc.setState(0x4435, 0x4b7, 0x3820, 0xaf20, 0xf54, 0x5913, 0x1, 0x0);
        gbc.writeMem(0x4435, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0x4437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02A7
        gbc.setState(0x93cd, 0x5d36, 0xbd70, 0xf515, 0xe189, 0x4849, 0x0, 0x0);
        gbc.writeMem(0x93cd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cd));
        EXPECT(0xf1, gbc.readMem(0x93ce));
        // CB F1 02A8
        gbc.setState(0x3fc6, 0x48fc, 0x5c40, 0xcb1b, 0xb04f, 0x524c, 0x1, 0x0);
        gbc.writeMem(0x3fc6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x48fc, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02A9
        gbc.setState(0x3071, 0xe40, 0x2010, 0x9c9, 0x6e5f, 0x82fd, 0x0, 0x1);
        gbc.writeMem(0x3071, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02AA
        gbc.setState(0x3e0d, 0xfa23, 0xd10, 0xbf45, 0x19a3, 0xa0ac, 0x1, 0x0);
        gbc.writeMem(0x3e0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfa23, gbc.sp());
        EXPECT(0x3e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02AB
        gbc.setState(0xb71, 0x789c, 0x1720, 0x369d, 0x842, 0xc549, 0x0, 0x0);
        gbc.writeMem(0xb71, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x789c, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02AC
        gbc.setState(0x847c, 0x3ec1, 0x8720, 0x6cd2, 0xd2d1, 0xb6df, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847c));
        EXPECT(0xf1, gbc.readMem(0x847d));
        // CB F1 02AD
        gbc.setState(0x2e52, 0x9e19, 0x99b0, 0xbf5d, 0xcf4a, 0xc0ac, 0x1, 0x0);
        gbc.writeMem(0x2e52, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9e19, gbc.sp());
        EXPECT(0x2e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02AE
        gbc.setState(0xd3a3, 0x9eb5, 0xb1c0, 0x8c7b, 0xe142, 0x1924, 0x1, 0x0);
        gbc.writeMem(0xd3a3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0xd3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a3));
        EXPECT(0xf1, gbc.readMem(0xd3a4));
        // CB F1 02AF
        gbc.setState(0x1dcd, 0x818c, 0x2480, 0x1e40, 0x466b, 0x3774, 0x0, 0x0);
        gbc.writeMem(0x1dcd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02B0
        gbc.setState(0x7691, 0x15be, 0xf330, 0xe8ef, 0x5f39, 0x7310, 0x1, 0x1);
        gbc.writeMem(0x7691, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02B1
        gbc.setState(0xd5b4, 0x421f, 0x5b90, 0xaf54, 0x142c, 0x1f2c, 0x1, 0x0);
        gbc.writeMem(0xd5b4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b4));
        EXPECT(0xf1, gbc.readMem(0xd5b5));
        // CB F1 02B2
        gbc.setState(0x126f, 0x913, 0xbd50, 0xfcd9, 0xd2d1, 0x3990, 0x0, 0x1);
        gbc.writeMem(0x126f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0x1271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02B3
        gbc.setState(0x9a0c, 0x5e3d, 0xdcd0, 0x9d8c, 0x5830, 0x3104, 0x0, 0x0);
        gbc.writeMem(0x9a0c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5e3d, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0c));
        EXPECT(0xf1, gbc.readMem(0x9a0d));
        // CB F1 02B4
        gbc.setState(0xd197, 0x744b, 0xa940, 0x6e77, 0x9ab7, 0xb28d, 0x0, 0x1);
        gbc.writeMem(0xd197, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x744b, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd197));
        EXPECT(0xf1, gbc.readMem(0xd198));
        // CB F1 02B6
        gbc.setState(0x1e64, 0x5b06, 0x71e0, 0x720d, 0x8c6a, 0x7906, 0x0, 0x0);
        gbc.writeMem(0x1e64, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5b06, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02B7
        gbc.setState(0x372c, 0x58a5, 0xb020, 0xdf5e, 0x44b7, 0x749b, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x58a5, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02B8
        gbc.setState(0x4459, 0xa21c, 0x3590, 0x2876, 0x495f, 0x2114, 0x0, 0x1);
        gbc.writeMem(0x4459, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa21c, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02B9
        gbc.setState(0x5fb4, 0x30b8, 0xcd80, 0x601e, 0xab7e, 0x5c0, 0x0, 0x1);
        gbc.writeMem(0x5fb4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0x5fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02BA
        gbc.setState(0xc9af, 0x5f40, 0xc6c0, 0xb5b7, 0x5616, 0x70d1, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5f40, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0xf1, gbc.readMem(0xc9b0));
        // CB F1 02BB
        gbc.setState(0x330, 0x6992, 0x3b90, 0xb18d, 0xb95e, 0xc6ca, 0x1, 0x1);
        gbc.writeMem(0x330, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6992, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02BC
        gbc.setState(0x7689, 0x4d3a, 0xcb60, 0x854d, 0xe3a, 0xe9cc, 0x1, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4d3a, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02BD
        gbc.setState(0xd123, 0x62, 0x3e30, 0xb8ec, 0xf139, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0xd123, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x62, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0xf1, gbc.readMem(0xd124));
        // CB F1 02BE
        gbc.setState(0xe38b, 0xf3da, 0x35e0, 0x6cd4, 0xb548, 0x9bd5, 0x0, 0x1);
        gbc.writeMem(0xe38b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0xe38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38b));
        EXPECT(0xf1, gbc.readMem(0xe38c));
        // CB F1 02BF
        gbc.setState(0x66d5, 0xd085, 0x62a0, 0x699a, 0x816d, 0xf128, 0x0, 0x0);
        gbc.writeMem(0x66d5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0x66d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02C0
        gbc.setState(0x46dd, 0x420f, 0x4eb0, 0x601c, 0xc67, 0x8e23, 0x0, 0x0);
        gbc.writeMem(0x46dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02C1
        gbc.setState(0xd82b, 0xf2a5, 0x9560, 0x714e, 0xe6bf, 0x3023, 0x1, 0x1);
        gbc.writeMem(0xd82b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0xd82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82b));
        EXPECT(0xf1, gbc.readMem(0xd82c));
        // CB F1 02C2
        gbc.setState(0x1cbc, 0xb1f5, 0x1cc0, 0xcf66, 0x8a44, 0x598b, 0x1, 0x0);
        gbc.writeMem(0x1cbc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb1f5, gbc.sp());
        EXPECT(0x1cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02C3
        gbc.setState(0x4fa4, 0xbc88, 0x95e0, 0x978e, 0xe7d3, 0xfebd, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbc88, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02C4
        gbc.setState(0x4f76, 0x62ad, 0xd3f0, 0xb113, 0x59cf, 0xdddc, 0x0, 0x0);
        gbc.writeMem(0x4f76, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0x4f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02C5
        gbc.setState(0x5124, 0xaab6, 0xd6f0, 0x2bf2, 0x5f0, 0x23f2, 0x1, 0x0);
        gbc.writeMem(0x5124, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x5126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02C6
        gbc.setState(0xce62, 0x7669, 0x1340, 0xf2c6, 0x301e, 0x4b78, 0x0, 0x1);
        gbc.writeMem(0xce62, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce62));
        EXPECT(0xf1, gbc.readMem(0xce63));
        // CB F1 02C7
        gbc.setState(0x7048, 0x8a98, 0xfe0, 0x53c0, 0xd982, 0xccde, 0x1, 0x1);
        gbc.writeMem(0x7048, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8a98, gbc.sp());
        EXPECT(0x704a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02C9
        gbc.setState(0x2145, 0x7882, 0x8700, 0xc347, 0x8c5e, 0x20c3, 0x1, 0x1);
        gbc.writeMem(0x2145, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x2147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02CA
        gbc.setState(0xc405, 0x557d, 0x7a30, 0x82fc, 0xc8ec, 0xd3b3, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0xc407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc405));
        EXPECT(0xf1, gbc.readMem(0xc406));
        // CB F1 02CC
        gbc.setState(0x2436, 0xacee, 0xe310, 0xe528, 0xde6, 0x760f, 0x1, 0x0);
        gbc.writeMem(0x2436, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02CD
        gbc.setState(0x3651, 0x2f61, 0x70d0, 0xa9a1, 0x280e, 0xd4f8, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2f61, gbc.sp());
        EXPECT(0x3653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02CE
        gbc.setState(0x23b, 0xd7df, 0x29f0, 0x1907, 0xa175, 0x5fe, 0x1, 0x1);
        gbc.writeMem(0x23b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd7df, gbc.sp());
        EXPECT(0x23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02CF
        gbc.setState(0x12e0, 0x8816, 0x11c0, 0x436b, 0x441e, 0xc104, 0x1, 0x1);
        gbc.writeMem(0x12e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02D0
        gbc.setState(0x453a, 0x6362, 0x4f80, 0xe3bc, 0xb93, 0xeb13, 0x1, 0x0);
        gbc.writeMem(0x453a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6362, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02D2
        gbc.setState(0x2f81, 0xed10, 0x86f0, 0x7f3e, 0x14ff, 0xbf4f, 0x1, 0x0);
        gbc.writeMem(0x2f81, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0x2f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02D3
        gbc.setState(0x4ddb, 0xfaf3, 0x6a0, 0x579, 0x14d3, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0x4ddb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfaf3, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02D4
        gbc.setState(0xeb7b, 0xae99, 0x5a60, 0x4852, 0x4a9d, 0xdc2d, 0x1, 0x1);
        gbc.writeMem(0xeb7b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0xeb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7b));
        EXPECT(0xf1, gbc.readMem(0xeb7c));
        // CB F1 02D5
        gbc.setState(0x5f6, 0xf796, 0x9470, 0x4dab, 0x95fe, 0xf4f, 0x1, 0x0);
        gbc.writeMem(0x5f6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf796, gbc.sp());
        EXPECT(0x5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02D6
        gbc.setState(0x3b0c, 0x103f, 0xd510, 0x52b6, 0x8605, 0xb70f, 0x1, 0x0);
        gbc.writeMem(0x3b0c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0x3b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02D7
        gbc.setState(0xa008, 0xd42f, 0xc770, 0x89c, 0x9e, 0x5120, 0x1, 0x0);
        gbc.writeMem(0xa008, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd42f, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa008));
        EXPECT(0xf1, gbc.readMem(0xa009));
        // CB F1 02D8
        gbc.setState(0xb665, 0xedfc, 0xba20, 0xd496, 0x6b4c, 0xb31b, 0x0, 0x1);
        gbc.writeMem(0xb665, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb665));
        EXPECT(0xf1, gbc.readMem(0xb666));
        // CB F1 02D9
        gbc.setState(0x7292, 0x99b8, 0x90f0, 0x8adc, 0xcab8, 0x4dcd, 0x1, 0x1);
        gbc.writeMem(0x7292, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x99b8, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02DA
        gbc.setState(0xb81f, 0xb1a7, 0xf0, 0xa15c, 0xb1a4, 0x7e68, 0x1, 0x0);
        gbc.writeMem(0xb81f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81f));
        EXPECT(0xf1, gbc.readMem(0xb820));
        // CB F1 02DB
        gbc.setState(0x1d6d, 0x4e6a, 0x9610, 0x5643, 0x7c2f, 0xdafc, 0x1, 0x0);
        gbc.writeMem(0x1d6d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0x1d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02DC
        gbc.setState(0xb248, 0xc972, 0x9b30, 0xd3e8, 0x8d81, 0x650a, 0x1, 0x1);
        gbc.writeMem(0xb248, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc972, gbc.sp());
        EXPECT(0xb24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb248));
        EXPECT(0xf1, gbc.readMem(0xb249));
        // CB F1 02DD
        gbc.setState(0x31b4, 0xc677, 0xcee0, 0x1481, 0xa250, 0x1dfd, 0x0, 0x1);
        gbc.writeMem(0x31b4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc677, gbc.sp());
        EXPECT(0x31b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02DE
        gbc.setState(0xbf96, 0xf590, 0x97e0, 0xedd7, 0x5606, 0x5b28, 0x0, 0x1);
        gbc.writeMem(0xbf96, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0xbf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf96));
        EXPECT(0xf1, gbc.readMem(0xbf97));
        // CB F1 02DF
        gbc.setState(0x444c, 0xdfe2, 0x4710, 0x909b, 0x10ee, 0xbaa4, 0x1, 0x1);
        gbc.writeMem(0x444c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdfe2, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02E0
        gbc.setState(0xc960, 0xeaaf, 0x3230, 0x5f81, 0x66e1, 0x936c, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc960));
        EXPECT(0xf1, gbc.readMem(0xc961));
        // CB F1 02E1
        gbc.setState(0x8ed7, 0x194b, 0xff00, 0xdad2, 0x4c21, 0x4a66, 0x1, 0x0);
        gbc.writeMem(0x8ed7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x194b, gbc.sp());
        EXPECT(0x8ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed7));
        EXPECT(0xf1, gbc.readMem(0x8ed8));
        // CB F1 02E2
        gbc.setState(0xdb5d, 0x4a12, 0x57b0, 0xf0a1, 0xdb29, 0x1fd, 0x0, 0x0);
        gbc.writeMem(0xdb5d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4a12, gbc.sp());
        EXPECT(0xdb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5d));
        EXPECT(0xf1, gbc.readMem(0xdb5e));
        // CB F1 02E3
        gbc.setState(0x222c, 0x17de, 0xf030, 0x4d3f, 0x8d4b, 0x403a, 0x0, 0x1);
        gbc.writeMem(0x222c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x17de, gbc.sp());
        EXPECT(0x222e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02E4
        gbc.setState(0x15e0, 0x1bef, 0xd590, 0x6e2d, 0xdf53, 0x777f, 0x0, 0x1);
        gbc.writeMem(0x15e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0x15e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02E5
        gbc.setState(0x25dd, 0xe13a, 0xd160, 0xe2a4, 0x3db, 0x8bd8, 0x1, 0x1);
        gbc.writeMem(0x25dd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe13a, gbc.sp());
        EXPECT(0x25df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02E6
        gbc.setState(0x181, 0xd814, 0xeb00, 0x4ab0, 0xcc0f, 0xb09b, 0x1, 0x0);
        gbc.writeMem(0x181, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd814, gbc.sp());
        EXPECT(0x183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02E7
        gbc.setState(0x12fc, 0x73d1, 0xc000, 0xab42, 0xe631, 0xdef7, 0x0, 0x1);
        gbc.writeMem(0x12fc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02E8
        gbc.setState(0x159d, 0x3e1e, 0x6110, 0x979a, 0x5069, 0x8c05, 0x1, 0x0);
        gbc.writeMem(0x159d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3e1e, gbc.sp());
        EXPECT(0x159f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02E9
        gbc.setState(0xe7d9, 0xa43a, 0x4fd0, 0xf195, 0x8c1a, 0x4d2b, 0x1, 0x0);
        gbc.writeMem(0xe7d9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa43a, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d9));
        EXPECT(0xf1, gbc.readMem(0xe7da));
        // CB F1 02EA
        gbc.setState(0x5390, 0x14cd, 0x40f0, 0xf660, 0xaa41, 0x3d77, 0x1, 0x1);
        gbc.writeMem(0x5390, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x14cd, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02EB
        gbc.setState(0x5c41, 0x7f97, 0xf890, 0xf6dd, 0xcccc, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x5c41, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7f97, gbc.sp());
        EXPECT(0x5c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02EC
        gbc.setState(0x21ae, 0xf180, 0x8950, 0xee3a, 0xf88e, 0xc913, 0x1, 0x1);
        gbc.writeMem(0x21ae, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf180, gbc.sp());
        EXPECT(0x21b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02ED
        gbc.setState(0x2a4c, 0x4f73, 0xdca0, 0x1cff, 0xb855, 0x742e, 0x1, 0x1);
        gbc.writeMem(0x2a4c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02EE
        gbc.setState(0xc24b, 0x37e8, 0x42e0, 0xd6ff, 0x560f, 0xf5b, 0x1, 0x1);
        gbc.writeMem(0xc24b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x37e8, gbc.sp());
        EXPECT(0xc24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24b));
        EXPECT(0xf1, gbc.readMem(0xc24c));
        // CB F1 02EF
        gbc.setState(0x87aa, 0x1269, 0xb4d0, 0x4421, 0xe422, 0x2d6f, 0x0, 0x0);
        gbc.writeMem(0x87aa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0x87ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87aa));
        EXPECT(0xf1, gbc.readMem(0x87ab));
        // CB F1 02F0
        gbc.setState(0x6f0b, 0xeaf3, 0x33c0, 0x999c, 0xa252, 0xee0e, 0x0, 0x1);
        gbc.writeMem(0x6f0b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeaf3, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02F1
        gbc.setState(0x2f1c, 0xaa1d, 0xd7f0, 0x3d0b, 0xbe28, 0x5644, 0x0, 0x0);
        gbc.writeMem(0x2f1c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x2f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02F2
        gbc.setState(0x9e1a, 0x5534, 0x4750, 0xfaa3, 0xe091, 0xe097, 0x0, 0x1);
        gbc.writeMem(0x9e1a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1a));
        EXPECT(0xf1, gbc.readMem(0x9e1b));
        // CB F1 02F3
        gbc.setState(0x7649, 0x15b7, 0xb110, 0x5246, 0x6162, 0x8c04, 0x0, 0x0);
        gbc.writeMem(0x7649, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0x764b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02F4
        gbc.setState(0x48f2, 0x8fd1, 0x8a30, 0xa7b3, 0x84b5, 0xaa3d, 0x0, 0x0);
        gbc.writeMem(0x48f2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0x48f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02F5
        gbc.setState(0x9ca6, 0x733e, 0x6380, 0x93db, 0x32db, 0x6526, 0x1, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca6));
        EXPECT(0xf1, gbc.readMem(0x9ca7));
        // CB F1 02F6
        gbc.setState(0x4efb, 0xfc51, 0xc580, 0x18cb, 0x3382, 0x98a0, 0x1, 0x1);
        gbc.writeMem(0x4efb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfc51, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02F7
        gbc.setState(0xcfb3, 0x6a9a, 0x9b90, 0x697c, 0x5ce3, 0xed39, 0x1, 0x0);
        gbc.writeMem(0xcfb3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6a9a, gbc.sp());
        EXPECT(0xcfb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb3));
        EXPECT(0xf1, gbc.readMem(0xcfb4));
        // CB F1 02F8
        gbc.setState(0x21e2, 0xd1cb, 0xb370, 0xbf5f, 0xf768, 0x400f, 0x1, 0x0);
        gbc.writeMem(0x21e2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd1cb, gbc.sp());
        EXPECT(0x21e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02F9
        gbc.setState(0xbbdf, 0x672b, 0xe050, 0xe5ca, 0x666c, 0x9e19, 0x1, 0x0);
        gbc.writeMem(0xbbdf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x672b, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0xf1, gbc.readMem(0xbbe0));
        // CB F1 02FA
        gbc.setState(0x6ae3, 0xfddc, 0xa460, 0x333, 0xf183, 0xea7d, 0x0, 0x1);
        gbc.writeMem(0x6ae3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0x6ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02FB
        gbc.setState(0x859e, 0xb504, 0x8b20, 0xa31e, 0xc9a3, 0xe137, 0x1, 0x1);
        gbc.writeMem(0x859e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859e));
        EXPECT(0xf1, gbc.readMem(0x859f));
        // CB F1 02FC
        gbc.setState(0x7cad, 0x6f58, 0x7150, 0x239b, 0xfa08, 0xaa4, 0x0, 0x0);
        gbc.writeMem(0x7cad, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0x7caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 02FD
        gbc.setState(0x21f1, 0xb2ea, 0xed00, 0x4c35, 0x9ca1, 0xa001, 0x1, 0x0);
        gbc.writeMem(0x21f1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0x21f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 02FE
        gbc.setState(0x8011, 0xfef1, 0xc240, 0x2a10, 0x1e27, 0x311, 0x1, 0x1);
        gbc.writeMem(0x8011, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfef1, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8011));
        EXPECT(0xf1, gbc.readMem(0x8012));
        // CB F1 02FF
        gbc.setState(0x905c, 0xd99c, 0x1fb0, 0x48fb, 0x2d54, 0x696d, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd99c, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905c));
        EXPECT(0xf1, gbc.readMem(0x905d));
        // CB F1 0300
        gbc.setState(0x8449, 0xc3e4, 0x3240, 0xe2f7, 0x36bc, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x8449, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc3e4, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8449));
        EXPECT(0xf1, gbc.readMem(0x844a));
        // CB F1 0302
        gbc.setState(0x7163, 0xdf2, 0x3430, 0xe9bc, 0xe093, 0xc8e2, 0x0, 0x0);
        gbc.writeMem(0x7163, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0x7165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0303
        gbc.setState(0xc160, 0xb7fd, 0xfb60, 0x3d4e, 0x601e, 0x7bd7, 0x0, 0x0);
        gbc.writeMem(0xc160, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc160));
        EXPECT(0xf1, gbc.readMem(0xc161));
        // CB F1 0304
        gbc.setState(0x73de, 0x2a72, 0x6de0, 0xaf75, 0xfff3, 0x7ba, 0x0, 0x0);
        gbc.writeMem(0x73de, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0x73e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0305
        gbc.setState(0x627c, 0xbef3, 0x41b0, 0xa6de, 0x6aa1, 0x8c92, 0x0, 0x1);
        gbc.writeMem(0x627c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x627e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0306
        gbc.setState(0x2bc7, 0x26fd, 0x4510, 0x88f9, 0xb5ce, 0xfe1b, 0x1, 0x0);
        gbc.writeMem(0x2bc7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x2bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0307
        gbc.setState(0x7dd7, 0xea29, 0xf00, 0x43f5, 0x3e71, 0x7817, 0x0, 0x0);
        gbc.writeMem(0x7dd7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0x7dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0308
        gbc.setState(0x42c9, 0xd62, 0x7fd0, 0xc118, 0xab73, 0xdcf2, 0x0, 0x0);
        gbc.writeMem(0x42c9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd62, gbc.sp());
        EXPECT(0x42cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0309
        gbc.setState(0xa792, 0x66dd, 0x32a0, 0x625e, 0xb4ec, 0x25b0, 0x0, 0x1);
        gbc.writeMem(0xa792, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x66dd, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa792));
        EXPECT(0xf1, gbc.readMem(0xa793));
        // CB F1 030A
        gbc.setState(0x318b, 0x9864, 0xa390, 0xeded, 0xd173, 0x773, 0x1, 0x0);
        gbc.writeMem(0x318b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9864, gbc.sp());
        EXPECT(0x318d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 030B
        gbc.setState(0x2bd6, 0x5d8c, 0x4600, 0x3f4d, 0xde43, 0x28d6, 0x1, 0x0);
        gbc.writeMem(0x2bd6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0x2bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 030C
        gbc.setState(0x7373, 0xfa9d, 0xc930, 0xb872, 0xd4e6, 0x62fd, 0x0, 0x1);
        gbc.writeMem(0x7373, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 030D
        gbc.setState(0x2b65, 0x257, 0x590, 0x1eeb, 0x9e3e, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x2b65, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x257, gbc.sp());
        EXPECT(0x2b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 030E
        gbc.setState(0x3340, 0x5b3a, 0x8ea0, 0x8ae6, 0xde9b, 0xcd7f, 0x0, 0x0);
        gbc.writeMem(0x3340, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5b3a, gbc.sp());
        EXPECT(0x3342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 030F
        gbc.setState(0xd618, 0xe576, 0x38c0, 0x1cc6, 0x887e, 0x7fc6, 0x0, 0x0);
        gbc.writeMem(0xd618, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd618));
        EXPECT(0xf1, gbc.readMem(0xd619));
        // CB F1 0310
        gbc.setState(0x3a6a, 0xf998, 0x58f0, 0x66f9, 0xfd8b, 0xe012, 0x0, 0x0);
        gbc.writeMem(0x3a6a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf998, gbc.sp());
        EXPECT(0x3a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0311
        gbc.setState(0x19bd, 0x1abe, 0x39c0, 0x9fe9, 0xdd2d, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x19bd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0312
        gbc.setState(0xc262, 0xea83, 0x8a60, 0xac3, 0x17e3, 0x20c, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xea83, gbc.sp());
        EXPECT(0xc264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc262));
        EXPECT(0xf1, gbc.readMem(0xc263));
        // CB F1 0313
        gbc.setState(0x7c0d, 0x5033, 0xdd00, 0x61b2, 0x7c27, 0x9718, 0x0, 0x0);
        gbc.writeMem(0x7c0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0x7c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0314
        gbc.setState(0xdb88, 0xbf7b, 0xa760, 0x6752, 0xa8d6, 0xf26b, 0x0, 0x0);
        gbc.writeMem(0xdb88, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbf7b, gbc.sp());
        EXPECT(0xdb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb88));
        EXPECT(0xf1, gbc.readMem(0xdb89));
        // CB F1 0315
        gbc.setState(0xc471, 0x9d2f, 0x7f60, 0x5ae4, 0xd63a, 0x3c96, 0x1, 0x1);
        gbc.writeMem(0xc471, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc471));
        EXPECT(0xf1, gbc.readMem(0xc472));
        // CB F1 0317
        gbc.setState(0x88ca, 0x6956, 0xb180, 0x16fd, 0xaaf3, 0xdeb3, 0x1, 0x0);
        gbc.writeMem(0x88ca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0x88cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ca));
        EXPECT(0xf1, gbc.readMem(0x88cb));
        // CB F1 0318
        gbc.setState(0xefce, 0xab45, 0x170, 0x6336, 0x711c, 0x51a7, 0x0, 0x1);
        gbc.writeMem(0xefce, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0xf1, gbc.readMem(0xefcf));
        // CB F1 0319
        gbc.setState(0x6d40, 0xd824, 0xfd0, 0x694, 0x2ffa, 0x3746, 0x1, 0x0);
        gbc.writeMem(0x6d40, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd824, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 031A
        gbc.setState(0x6ce6, 0x4bb, 0xa2d0, 0xb8e6, 0xdf0, 0xcc85, 0x0, 0x0);
        gbc.writeMem(0x6ce6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 031B
        gbc.setState(0x30ab, 0x8b60, 0x4090, 0x3c0c, 0xfbbb, 0xa2c8, 0x0, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b60, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 031C
        gbc.setState(0x1b25, 0x7f67, 0xe2d0, 0x2bcc, 0x683, 0x5578, 0x0, 0x0);
        gbc.writeMem(0x1b25, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7f67, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 031D
        gbc.setState(0x9580, 0xf774, 0x1d30, 0xb0a9, 0xad09, 0x4b4a, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf774, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0xf1, gbc.readMem(0x9581));
        // CB F1 031E
        gbc.setState(0xb490, 0x5488, 0x35c0, 0x615c, 0xb6cd, 0xe0a3, 0x0, 0x1);
        gbc.writeMem(0xb490, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0xb492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb490));
        EXPECT(0xf1, gbc.readMem(0xb491));
        // CB F1 031F
        gbc.setState(0x95d1, 0xc1ef, 0xf0, 0x9255, 0x8708, 0xa3d9, 0x1, 0x1);
        gbc.writeMem(0x95d1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x95d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d1));
        EXPECT(0xf1, gbc.readMem(0x95d2));
        // CB F1 0320
        gbc.setState(0x5d0, 0xd502, 0x9660, 0x18ed, 0xdae6, 0x753, 0x0, 0x0);
        gbc.writeMem(0x5d0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd502, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0321
        gbc.setState(0xd36b, 0xea2d, 0xb730, 0x42ea, 0xd50d, 0x9be6, 0x1, 0x1);
        gbc.writeMem(0xd36b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea2d, gbc.sp());
        EXPECT(0xd36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36b));
        EXPECT(0xf1, gbc.readMem(0xd36c));
        // CB F1 0322
        gbc.setState(0x8a58, 0xbd4, 0x6510, 0x93ce, 0x18d7, 0xcb6c, 0x0, 0x1);
        gbc.writeMem(0x8a58, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x8a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a58));
        EXPECT(0xf1, gbc.readMem(0x8a59));
        // CB F1 0323
        gbc.setState(0x6f0d, 0xc174, 0x2630, 0xf134, 0x6794, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x6f0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc174, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0324
        gbc.setState(0x6cc7, 0x8533, 0x47d0, 0x4889, 0x5205, 0x939b, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0x6cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0325
        gbc.setState(0xcf7c, 0x3dd4, 0x74b0, 0xb194, 0x3242, 0x5b89, 0x0, 0x1);
        gbc.writeMem(0xcf7c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3dd4, gbc.sp());
        EXPECT(0xcf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7c));
        EXPECT(0xf1, gbc.readMem(0xcf7d));
        // CB F1 0326
        gbc.setState(0x9d9d, 0x9839, 0xf2c0, 0x2328, 0x1edc, 0x8999, 0x1, 0x0);
        gbc.writeMem(0x9d9d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0x9d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9d));
        EXPECT(0xf1, gbc.readMem(0x9d9e));
        // CB F1 0327
        gbc.setState(0x32ca, 0xfb6, 0xbf10, 0x16bb, 0x9582, 0x73a6, 0x0, 0x0);
        gbc.writeMem(0x32ca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0328
        gbc.setState(0x9d52, 0xca21, 0x6d80, 0x71c7, 0xb0eb, 0x6292, 0x0, 0x0);
        gbc.writeMem(0x9d52, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x9d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d52));
        EXPECT(0xf1, gbc.readMem(0x9d53));
        // CB F1 0329
        gbc.setState(0xcd0e, 0x9ff3, 0x5c80, 0x69b4, 0x8b33, 0xbff6, 0x1, 0x1);
        gbc.writeMem(0xcd0e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0e));
        EXPECT(0xf1, gbc.readMem(0xcd0f));
        // CB F1 032A
        gbc.setState(0xf7e, 0xbf36, 0x4b80, 0x294a, 0x18cc, 0x2cf3, 0x0, 0x0);
        gbc.writeMem(0xf7e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 032B
        gbc.setState(0xc2a1, 0x6a5e, 0xf370, 0x7ca8, 0x768b, 0x5374, 0x1, 0x1);
        gbc.writeMem(0xc2a1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a1));
        EXPECT(0xf1, gbc.readMem(0xc2a2));
        // CB F1 032C
        gbc.setState(0x98f5, 0xb8b1, 0xe4a0, 0x434b, 0xf220, 0x7ed7, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f5));
        EXPECT(0xf1, gbc.readMem(0x98f6));
        // CB F1 032D
        gbc.setState(0x1931, 0x5c0e, 0x9810, 0xa9db, 0x216b, 0xc201, 0x1, 0x0);
        gbc.writeMem(0x1931, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0x1933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 032E
        gbc.setState(0x84b7, 0x6193, 0x32e0, 0x787d, 0x6d7f, 0x272c, 0x1, 0x0);
        gbc.writeMem(0x84b7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0x84b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b7));
        EXPECT(0xf1, gbc.readMem(0x84b8));
        // CB F1 032F
        gbc.setState(0x79ff, 0x56f0, 0xa3b0, 0x8b25, 0x55e3, 0xa369, 0x1, 0x1);
        gbc.writeMem(0x79ff, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0x7a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0330
        gbc.setState(0x1231, 0x7260, 0x1d30, 0x2556, 0x55e2, 0x30cc, 0x0, 0x1);
        gbc.writeMem(0x1231, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0331
        gbc.setState(0xb802, 0x2ba2, 0x47e0, 0x9931, 0xfeb0, 0x92e4, 0x1, 0x1);
        gbc.writeMem(0xb802, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0xb804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb802));
        EXPECT(0xf1, gbc.readMem(0xb803));
        // CB F1 0332
        gbc.setState(0xd4c4, 0x49e, 0x9390, 0x9cf4, 0xfd69, 0x5d69, 0x0, 0x0);
        gbc.writeMem(0xd4c4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c4));
        EXPECT(0xf1, gbc.readMem(0xd4c5));
        // CB F1 0333
        gbc.setState(0x5f5a, 0xcef2, 0xf8c0, 0x2b93, 0x68d6, 0xcb2e, 0x1, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0334
        gbc.setState(0x3c40, 0xf90d, 0x4d70, 0x48fa, 0xd9d7, 0xa158, 0x0, 0x0);
        gbc.writeMem(0x3c40, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf90d, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0335
        gbc.setState(0x5797, 0x4b56, 0xc730, 0x2da1, 0xd8ff, 0x986c, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4b56, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0337
        gbc.setState(0xd673, 0x8228, 0x4210, 0xeb48, 0x49e6, 0x4024, 0x0, 0x0);
        gbc.writeMem(0xd673, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8228, gbc.sp());
        EXPECT(0xd675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd673));
        EXPECT(0xf1, gbc.readMem(0xd674));
        // CB F1 0338
        gbc.setState(0xb2cc, 0x137f, 0xbc60, 0x61d4, 0x47cc, 0x86da, 0x1, 0x1);
        gbc.writeMem(0xb2cc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0xb2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cc));
        EXPECT(0xf1, gbc.readMem(0xb2cd));
        // CB F1 0339
        gbc.setState(0x6370, 0xd328, 0x7bb0, 0x93fa, 0x2316, 0xfb8d, 0x1, 0x0);
        gbc.writeMem(0x6370, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd328, gbc.sp());
        EXPECT(0x6372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 033A
        gbc.setState(0x7ab9, 0x34d4, 0x43f0, 0x9dd, 0x132a, 0xad89, 0x1, 0x1);
        gbc.writeMem(0x7ab9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0x7abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 033B
        gbc.setState(0xd863, 0xb6c0, 0xe00, 0xd4ea, 0x10a9, 0xc031, 0x0, 0x1);
        gbc.writeMem(0xd863, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd863));
        EXPECT(0xf1, gbc.readMem(0xd864));
        // CB F1 033C
        gbc.setState(0x5e1a, 0x20e, 0xbd70, 0xdee6, 0x899f, 0x42, 0x0, 0x0);
        gbc.writeMem(0x5e1a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x5e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 033D
        gbc.setState(0x9b2c, 0xb83b, 0x6450, 0x5229, 0xfd1d, 0x6a30, 0x0, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb83b, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2c));
        EXPECT(0xf1, gbc.readMem(0x9b2d));
        // CB F1 033E
        gbc.setState(0x7db9, 0x56c, 0x9a60, 0x3637, 0x4d5, 0x12d7, 0x1, 0x0);
        gbc.writeMem(0x7db9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0x7dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 033F
        gbc.setState(0xbb45, 0xd168, 0x3d20, 0x20f7, 0x9a0b, 0x16a6, 0x1, 0x0);
        gbc.writeMem(0xbb45, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd168, gbc.sp());
        EXPECT(0xbb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb45));
        EXPECT(0xf1, gbc.readMem(0xbb46));
        // CB F1 0340
        gbc.setState(0x6366, 0xc142, 0x1720, 0xbbe9, 0x9348, 0x69cc, 0x1, 0x1);
        gbc.writeMem(0x6366, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc142, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0341
        gbc.setState(0xcd21, 0x9b80, 0xb460, 0x5a1e, 0x607f, 0xccda, 0x1, 0x0);
        gbc.writeMem(0xcd21, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0xcd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd21));
        EXPECT(0xf1, gbc.readMem(0xcd22));
        // CB F1 0342
        gbc.setState(0x18f9, 0x4dee, 0x3230, 0x72b3, 0x8d24, 0x6c98, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0343
        gbc.setState(0x9090, 0xb1e9, 0x77a0, 0x4792, 0x1a3b, 0xfdc, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb1e9, gbc.sp());
        EXPECT(0x9092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9090));
        EXPECT(0xf1, gbc.readMem(0x9091));
        // CB F1 0344
        gbc.setState(0x39c8, 0x451, 0xc990, 0x3141, 0x847a, 0xd4f0, 0x1, 0x0);
        gbc.writeMem(0x39c8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x451, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0345
        gbc.setState(0xed2f, 0x4c24, 0x1eb0, 0xbdc9, 0xd1e5, 0xb516, 0x0, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4c24, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2f));
        EXPECT(0xf1, gbc.readMem(0xed30));
        // CB F1 0346
        gbc.setState(0x3a8a, 0x1203, 0x6d80, 0xcc55, 0x22ac, 0x1eeb, 0x0, 0x1);
        gbc.writeMem(0x3a8a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1203, gbc.sp());
        EXPECT(0x3a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0348
        gbc.setState(0xd8c1, 0xb925, 0xc400, 0x31e1, 0xd786, 0xc74b, 0x1, 0x1);
        gbc.writeMem(0xd8c1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0xd8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c1));
        EXPECT(0xf1, gbc.readMem(0xd8c2));
        // CB F1 0349
        gbc.setState(0x51f8, 0x620f, 0x8870, 0x38df, 0x2e1c, 0xcbd, 0x0, 0x1);
        gbc.writeMem(0x51f8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x620f, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 034A
        gbc.setState(0x7163, 0x5c4d, 0x88e0, 0xa9bb, 0xf8d5, 0xe47e, 0x0, 0x0);
        gbc.writeMem(0x7163, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5c4d, gbc.sp());
        EXPECT(0x7165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 034B
        gbc.setState(0xbaec, 0x1541, 0xc970, 0xae6a, 0x3181, 0x4cb6, 0x0, 0x1);
        gbc.writeMem(0xbaec, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaec));
        EXPECT(0xf1, gbc.readMem(0xbaed));
        // CB F1 034C
        gbc.setState(0xa599, 0x172a, 0x2e90, 0x1ef3, 0x3e76, 0xf3c, 0x0, 0x1);
        gbc.writeMem(0xa599, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x172a, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa599));
        EXPECT(0xf1, gbc.readMem(0xa59a));
        // CB F1 034E
        gbc.setState(0x9caa, 0xa83e, 0x4de0, 0xca89, 0xba8e, 0xd99b, 0x0, 0x0);
        gbc.writeMem(0x9caa, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa83e, gbc.sp());
        EXPECT(0x9cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caa));
        EXPECT(0xf1, gbc.readMem(0x9cab));
        // CB F1 0350
        gbc.setState(0xfca, 0xb7ea, 0x3a10, 0xdcee, 0x41b6, 0xd47, 0x0, 0x0);
        gbc.writeMem(0xfca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0xfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0351
        gbc.setState(0x5cc5, 0xa2ef, 0xd30, 0x2082, 0xc0c3, 0x7619, 0x1, 0x0);
        gbc.writeMem(0x5cc5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0352
        gbc.setState(0xaf78, 0x7f5b, 0xeb0, 0xa497, 0x7ad5, 0x41c9, 0x0, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7f5b, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0xf1, gbc.readMem(0xaf79));
        // CB F1 0353
        gbc.setState(0x8b79, 0xeea6, 0x70, 0xe283, 0x11c5, 0x3144, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeea6, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b79));
        EXPECT(0xf1, gbc.readMem(0x8b7a));
        // CB F1 0355
        gbc.setState(0x4727, 0xf749, 0x2770, 0xef59, 0xff13, 0x8f3a, 0x0, 0x1);
        gbc.writeMem(0x4727, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0356
        gbc.setState(0xaa8e, 0x369b, 0xba40, 0xae91, 0xfc53, 0xb151, 0x1, 0x0);
        gbc.writeMem(0xaa8e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0xaa90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8e));
        EXPECT(0xf1, gbc.readMem(0xaa8f));
        // CB F1 0357
        gbc.setState(0xb0ff, 0xb207, 0x52e0, 0x72e6, 0x5026, 0x5e1a, 0x0, 0x1);
        gbc.writeMem(0xb0ff, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ff));
        EXPECT(0xf1, gbc.readMem(0xb100));
        // CB F1 0358
        gbc.setState(0xdc8b, 0xb182, 0xbe00, 0x485e, 0x337, 0x19da, 0x1, 0x0);
        gbc.writeMem(0xdc8b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8b));
        EXPECT(0xf1, gbc.readMem(0xdc8c));
        // CB F1 0359
        gbc.setState(0x5640, 0x1423, 0x6810, 0xbf7, 0x710c, 0x297, 0x1, 0x1);
        gbc.writeMem(0x5640, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1423, gbc.sp());
        EXPECT(0x5642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 035B
        gbc.setState(0xaee9, 0x653, 0xc9d0, 0xf68d, 0xad75, 0xade0, 0x0, 0x0);
        gbc.writeMem(0xaee9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x653, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee9));
        EXPECT(0xf1, gbc.readMem(0xaeea));
        // CB F1 035C
        gbc.setState(0xe42a, 0x2408, 0x8fc0, 0x82a5, 0xa2ae, 0xc0e5, 0x0, 0x0);
        gbc.writeMem(0xe42a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2408, gbc.sp());
        EXPECT(0xe42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42a));
        EXPECT(0xf1, gbc.readMem(0xe42b));
        // CB F1 035D
        gbc.setState(0x1bca, 0x33f8, 0xcf80, 0x8233, 0xb71b, 0x9a67, 0x0, 0x0);
        gbc.writeMem(0x1bca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x33f8, gbc.sp());
        EXPECT(0x1bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 035E
        gbc.setState(0x94a, 0x7b96, 0xf660, 0x6afa, 0xd62d, 0x99cf, 0x1, 0x1);
        gbc.writeMem(0x94a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 035F
        gbc.setState(0x9f5b, 0xc95a, 0xa3b0, 0x1bc1, 0x6cb2, 0x8d68, 0x0, 0x1);
        gbc.writeMem(0x9f5b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5b));
        EXPECT(0xf1, gbc.readMem(0x9f5c));
        // CB F1 0360
        gbc.setState(0xd140, 0x9e5a, 0x7100, 0x5580, 0x45ea, 0x9891, 0x1, 0x0);
        gbc.writeMem(0xd140, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9e5a, gbc.sp());
        EXPECT(0xd142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd140));
        EXPECT(0xf1, gbc.readMem(0xd141));
        // CB F1 0361
        gbc.setState(0x2e4b, 0x7ae0, 0x5d0, 0xfb2c, 0x72dd, 0xee80, 0x1, 0x1);
        gbc.writeMem(0x2e4b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0362
        gbc.setState(0xbb38, 0x4f8a, 0xb510, 0x8740, 0x9d2, 0xf85b, 0x0, 0x1);
        gbc.writeMem(0xbb38, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0xf1, gbc.readMem(0xbb39));
        // CB F1 0363
        gbc.setState(0x9c43, 0xcdc0, 0x8050, 0x4797, 0x4f3, 0x27d5, 0x0, 0x1);
        gbc.writeMem(0x9c43, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcdc0, gbc.sp());
        EXPECT(0x9c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c43));
        EXPECT(0xf1, gbc.readMem(0x9c44));
        // CB F1 0364
        gbc.setState(0x47f, 0xed17, 0x26f0, 0x8679, 0x20dc, 0x20d1, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed17, gbc.sp());
        EXPECT(0x481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0365
        gbc.setState(0x238b, 0xc9fd, 0x6a60, 0x8951, 0xcc1c, 0xfc6f, 0x1, 0x1);
        gbc.writeMem(0x238b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc9fd, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0366
        gbc.setState(0x207f, 0xcb9c, 0x6280, 0x7538, 0x617c, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0x207f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0367
        gbc.setState(0xbf31, 0x83b2, 0x7390, 0x9f22, 0x9b06, 0x75f3, 0x1, 0x0);
        gbc.writeMem(0xbf31, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0xbf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf31));
        EXPECT(0xf1, gbc.readMem(0xbf32));
        // CB F1 0368
        gbc.setState(0x884b, 0x2bc2, 0xba0, 0xc35e, 0xb899, 0x799b, 0x0, 0x0);
        gbc.writeMem(0x884b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2bc2, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884b));
        EXPECT(0xf1, gbc.readMem(0x884c));
        // CB F1 0369
        gbc.setState(0x4eba, 0x589, 0xe5c0, 0x177c, 0x167b, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0x4eba, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x589, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 036A
        gbc.setState(0x3818, 0x9150, 0xdaf0, 0x7029, 0x4021, 0xb5ef, 0x0, 0x1);
        gbc.writeMem(0x3818, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 036B
        gbc.setState(0xf8c, 0x2859, 0xedb0, 0xa0a, 0x61c0, 0xf53c, 0x1, 0x1);
        gbc.writeMem(0xf8c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2859, gbc.sp());
        EXPECT(0xf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 036C
        gbc.setState(0x1ea6, 0xf2f9, 0x55a0, 0xd6c2, 0xef00, 0x1e1a, 0x1, 0x1);
        gbc.writeMem(0x1ea6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf2f9, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 036D
        gbc.setState(0x2371, 0xece4, 0xf400, 0x48f0, 0x67e4, 0xbb62, 0x0, 0x1);
        gbc.writeMem(0x2371, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0x2373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 036E
        gbc.setState(0xabfb, 0xf39, 0x6d80, 0xa5e6, 0x6ab6, 0x9dbe, 0x1, 0x1);
        gbc.writeMem(0xabfb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf39, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfb));
        EXPECT(0xf1, gbc.readMem(0xabfc));
        // CB F1 036F
        gbc.setState(0xe938, 0xf42f, 0xe6c0, 0xaad8, 0x91de, 0xe1ed, 0x1, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe938));
        EXPECT(0xf1, gbc.readMem(0xe939));
        // CB F1 0370
        gbc.setState(0xa81b, 0xdf15, 0x7b40, 0x70b5, 0x2ac7, 0x6af1, 0x0, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf15, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0xf1, gbc.readMem(0xa81c));
        // CB F1 0371
        gbc.setState(0xca3e, 0x714b, 0xc6c0, 0x2c4f, 0x297b, 0x8270, 0x0, 0x1);
        gbc.writeMem(0xca3e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x714b, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3e));
        EXPECT(0xf1, gbc.readMem(0xca3f));
        // CB F1 0372
        gbc.setState(0xbfae, 0x5a8d, 0xe290, 0xbc7c, 0x6924, 0xe9e3, 0x1, 0x0);
        gbc.writeMem(0xbfae, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0xf1, gbc.readMem(0xbfaf));
        // CB F1 0373
        gbc.setState(0xa68f, 0x4d04, 0x4aa0, 0x59d0, 0x9cc9, 0x719a, 0x1, 0x1);
        gbc.writeMem(0xa68f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4d04, gbc.sp());
        EXPECT(0xa691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68f));
        EXPECT(0xf1, gbc.readMem(0xa690));
        // CB F1 0374
        gbc.setState(0x86a3, 0xb97d, 0x8cf0, 0x2d5a, 0x23e4, 0x59ca, 0x0, 0x1);
        gbc.writeMem(0x86a3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0x86a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a3));
        EXPECT(0xf1, gbc.readMem(0x86a4));
        // CB F1 0375
        gbc.setState(0x5d3b, 0x4eba, 0x2c90, 0x5392, 0x4f12, 0xb205, 0x0, 0x0);
        gbc.writeMem(0x5d3b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4eba, gbc.sp());
        EXPECT(0x5d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0376
        gbc.setState(0x785b, 0xef73, 0xb660, 0xbe07, 0x1a69, 0x6a62, 0x0, 0x0);
        gbc.writeMem(0x785b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xef73, gbc.sp());
        EXPECT(0x785d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0377
        gbc.setState(0x8ddf, 0x9ad9, 0xeb90, 0x6db8, 0x9fae, 0x3a5b, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9ad9, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddf));
        EXPECT(0xf1, gbc.readMem(0x8de0));
        // CB F1 0379
        gbc.setState(0x5818, 0x22fa, 0xfd60, 0x8996, 0xca34, 0x8a04, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x22fa, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 037A
        gbc.setState(0x6879, 0xa02c, 0xd380, 0x7eab, 0x2548, 0x77af, 0x1, 0x1);
        gbc.writeMem(0x6879, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa02c, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 037B
        gbc.setState(0x60bc, 0x3236, 0x4050, 0x6765, 0x2550, 0x62a1, 0x0, 0x1);
        gbc.writeMem(0x60bc, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3236, gbc.sp());
        EXPECT(0x60be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 037C
        gbc.setState(0x1aa3, 0xa10a, 0x2a20, 0x29da, 0xe17e, 0x1b52, 0x0, 0x0);
        gbc.writeMem(0x1aa3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa10a, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 037D
        gbc.setState(0x5fc8, 0x1c5d, 0xe300, 0xd750, 0x4021, 0x666e, 0x1, 0x0);
        gbc.writeMem(0x5fc8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1c5d, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 037E
        gbc.setState(0xa512, 0x696, 0x14a0, 0xa95d, 0x306c, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0xa512, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0xa514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa512));
        EXPECT(0xf1, gbc.readMem(0xa513));
        // CB F1 037F
        gbc.setState(0x807e, 0x7a73, 0xab50, 0xc472, 0x8f42, 0x72d1, 0x1, 0x0);
        gbc.writeMem(0x807e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x8080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807e));
        EXPECT(0xf1, gbc.readMem(0x807f));
        // CB F1 0380
        gbc.setState(0x5ea7, 0x885a, 0x8bb0, 0x41e0, 0x2623, 0x1206, 0x1, 0x1);
        gbc.writeMem(0x5ea7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x885a, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0381
        gbc.setState(0xb3c, 0x80c9, 0xa780, 0x81ef, 0x246d, 0xe320, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0382
        gbc.setState(0xedbf, 0x93de, 0x7000, 0x2e0c, 0x9dcd, 0x727e, 0x0, 0x0);
        gbc.writeMem(0xedbf, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbf));
        EXPECT(0xf1, gbc.readMem(0xedc0));
        // CB F1 0383
        gbc.setState(0x3c6, 0xa669, 0xdf30, 0x9d16, 0x54d5, 0x7c21, 0x0, 0x0);
        gbc.writeMem(0x3c6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0x3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0384
        gbc.setState(0x7140, 0x48e8, 0xcf80, 0x9216, 0x567e, 0x3fff, 0x1, 0x0);
        gbc.writeMem(0x7140, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0385
        gbc.setState(0x166b, 0xec02, 0xb320, 0xd949, 0x9107, 0x877a, 0x1, 0x1);
        gbc.writeMem(0x166b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xec02, gbc.sp());
        EXPECT(0x166d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0386
        gbc.setState(0x597a, 0xf28, 0x3250, 0xa3ac, 0xf226, 0xe6c0, 0x0, 0x0);
        gbc.writeMem(0x597a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0x597c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0387
        gbc.setState(0xd9e0, 0x95b2, 0x1f40, 0x3c84, 0xf2d4, 0xa6a7, 0x1, 0x1);
        gbc.writeMem(0xd9e0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x95b2, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e0));
        EXPECT(0xf1, gbc.readMem(0xd9e1));
        // CB F1 0388
        gbc.setState(0xa53c, 0x4b18, 0x9dd0, 0xe681, 0x1401, 0x6acc, 0x0, 0x1);
        gbc.writeMem(0xa53c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53c));
        EXPECT(0xf1, gbc.readMem(0xa53d));
        // CB F1 0389
        gbc.setState(0xb8f7, 0x676c, 0x2010, 0x1277, 0x53d, 0xb998, 0x1, 0x1);
        gbc.writeMem(0xb8f7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x676c, gbc.sp());
        EXPECT(0xb8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f7));
        EXPECT(0xf1, gbc.readMem(0xb8f8));
        // CB F1 038B
        gbc.setState(0x3396, 0xac64, 0x3100, 0xb14d, 0x13e1, 0xa04b, 0x0, 0x1);
        gbc.writeMem(0x3396, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 038C
        gbc.setState(0x5a72, 0x6147, 0x7b70, 0xce5f, 0xa9d6, 0x3201, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6147, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 038D
        gbc.setState(0xf0, 0xd237, 0xfc30, 0xbf51, 0xc6cc, 0x3f1a, 0x1, 0x0);
        gbc.writeMem(0xf0, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd237, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 038E
        gbc.setState(0xb02c, 0xd0a, 0x68c0, 0x5812, 0x44c7, 0xf5f7, 0x1, 0x1);
        gbc.writeMem(0xb02c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd0a, gbc.sp());
        EXPECT(0xb02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02c));
        EXPECT(0xf1, gbc.readMem(0xb02d));
        // CB F1 038F
        gbc.setState(0x9e6d, 0xfb6c, 0xf530, 0x84c, 0xbaa2, 0x3f9, 0x1, 0x1);
        gbc.writeMem(0x9e6d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfb6c, gbc.sp());
        EXPECT(0x9e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6d));
        EXPECT(0xf1, gbc.readMem(0x9e6e));
        // CB F1 0390
        gbc.setState(0x26d4, 0xfe9, 0x5e0, 0xe49d, 0xfaca, 0x216d, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0391
        gbc.setState(0x9655, 0x52c6, 0x9de0, 0x8f21, 0xee5, 0x16e9, 0x1, 0x0);
        gbc.writeMem(0x9655, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9655));
        EXPECT(0xf1, gbc.readMem(0x9656));
        // CB F1 0392
        gbc.setState(0xddb5, 0x254a, 0x36f0, 0x638a, 0xdc4d, 0x9ea8, 0x0, 0x1);
        gbc.writeMem(0xddb5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x254a, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb5));
        EXPECT(0xf1, gbc.readMem(0xddb6));
        // CB F1 0393
        gbc.setState(0x1ac, 0xc30e, 0xb500, 0x3344, 0x8690, 0xd89, 0x0, 0x1);
        gbc.writeMem(0x1ac, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc30e, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0394
        gbc.setState(0x624a, 0x16c2, 0x5810, 0x6839, 0xebe1, 0x3b9a, 0x1, 0x1);
        gbc.writeMem(0x624a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 0395
        gbc.setState(0x2e92, 0x645, 0xaf60, 0x107a, 0x1e32, 0xc32e, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x645, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0396
        gbc.setState(0x757e, 0x4ad6, 0x7420, 0xee51, 0x57a, 0xec0c, 0x0, 0x1);
        gbc.writeMem(0x757e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0x7580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 0397
        gbc.setState(0xc6ca, 0x4a6a, 0x4ec0, 0x5d29, 0xc7b2, 0x8ab8, 0x1, 0x1);
        gbc.writeMem(0xc6ca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a6a, gbc.sp());
        EXPECT(0xc6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ca));
        EXPECT(0xf1, gbc.readMem(0xc6cb));
        // CB F1 0398
        gbc.setState(0xefd5, 0xca06, 0x3450, 0xc55c, 0xd7ff, 0x3391, 0x1, 0x0);
        gbc.writeMem(0xefd5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xca06, gbc.sp());
        EXPECT(0xefd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd5));
        EXPECT(0xf1, gbc.readMem(0xefd6));
        // CB F1 0399
        gbc.setState(0x33f3, 0xefa7, 0xd870, 0x7a62, 0x80ad, 0xce48, 0x0, 0x0);
        gbc.writeMem(0x33f3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xefa7, gbc.sp());
        EXPECT(0x33f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 039A
        gbc.setState(0xe7f6, 0x6b99, 0x58e0, 0x18d9, 0x2c26, 0xebab, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6b99, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0xf1, gbc.readMem(0xe7f7));
        // CB F1 039B
        gbc.setState(0x6d59, 0xf982, 0x7ea0, 0xa4ae, 0x4b05, 0xdec1, 0x1, 0x0);
        gbc.writeMem(0x6d59, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf982, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 039C
        gbc.setState(0xbf23, 0x9134, 0xc840, 0xbdc9, 0xa888, 0x90b9, 0x0, 0x0);
        gbc.writeMem(0xbf23, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9134, gbc.sp());
        EXPECT(0xbf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf23));
        EXPECT(0xf1, gbc.readMem(0xbf24));
        // CB F1 039D
        gbc.setState(0x4ff1, 0x112, 0xb9d0, 0x9d6d, 0x1ca4, 0xe847, 0x0, 0x1);
        gbc.writeMem(0x4ff1, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x112, gbc.sp());
        EXPECT(0x4ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 039F
        gbc.setState(0x60ed, 0x394f, 0x4c00, 0x79a6, 0x4969, 0x6c8d, 0x1, 0x0);
        gbc.writeMem(0x60ed, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x394f, gbc.sp());
        EXPECT(0x60ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03A0
        gbc.setState(0xfea, 0x9135, 0x3b80, 0x46d6, 0xc6c7, 0x84f5, 0x0, 0x1);
        gbc.writeMem(0xfea, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9135, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03A1
        gbc.setState(0x64ba, 0xf871, 0xd40, 0x7a53, 0xd21, 0xfca2, 0x1, 0x0);
        gbc.writeMem(0x64ba, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03A2
        gbc.setState(0xebb2, 0xa7c5, 0x6580, 0x7e57, 0xb79e, 0x3755, 0x0, 0x0);
        gbc.writeMem(0xebb2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa7c5, gbc.sp());
        EXPECT(0xebb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb2));
        EXPECT(0xf1, gbc.readMem(0xebb3));
        // CB F1 03A4
        gbc.setState(0xaf40, 0x2df1, 0xf70, 0x6168, 0xb16a, 0xd2ae, 0x0, 0x0);
        gbc.writeMem(0xaf40, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0xaf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf40));
        EXPECT(0xf1, gbc.readMem(0xaf41));
        // CB F1 03A5
        gbc.setState(0x3348, 0x49e6, 0x8ab0, 0x2e11, 0x8243, 0x69ec, 0x1, 0x0);
        gbc.writeMem(0x3348, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x49e6, gbc.sp());
        EXPECT(0x334a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03A6
        gbc.setState(0x6911, 0x2fbe, 0xc670, 0xd6b9, 0xc4b5, 0x435d, 0x0, 0x0);
        gbc.writeMem(0x6911, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0x6913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03A8
        gbc.setState(0x218e, 0xa344, 0x9030, 0xe4ad, 0x9a6b, 0xa449, 0x1, 0x1);
        gbc.writeMem(0x218e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa344, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03A9
        gbc.setState(0xeb62, 0xe945, 0x5920, 0x9338, 0x4dac, 0xec48, 0x1, 0x0);
        gbc.writeMem(0xeb62, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe945, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0xf1, gbc.readMem(0xeb63));
        // CB F1 03AA
        gbc.setState(0x6db9, 0xb722, 0xd0, 0x71af, 0x9b48, 0xcc5e, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x6dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03AB
        gbc.setState(0xb42a, 0x3810, 0x1800, 0x312c, 0x3577, 0xf3f9, 0x0, 0x0);
        gbc.writeMem(0xb42a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3810, gbc.sp());
        EXPECT(0xb42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42a));
        EXPECT(0xf1, gbc.readMem(0xb42b));
        // CB F1 03AC
        gbc.setState(0xbd75, 0xe67d, 0xa330, 0x969f, 0x4c20, 0x8d5b, 0x0, 0x1);
        gbc.writeMem(0xbd75, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe67d, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd75));
        EXPECT(0xf1, gbc.readMem(0xbd76));
        // CB F1 03AD
        gbc.setState(0xee7, 0x5e9c, 0x4060, 0x6f95, 0x717c, 0xa741, 0x0, 0x0);
        gbc.writeMem(0xee7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5e9c, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03AE
        gbc.setState(0x2945, 0xc399, 0x2ce0, 0x6699, 0x31ee, 0xa926, 0x0, 0x0);
        gbc.writeMem(0x2945, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x2947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03AF
        gbc.setState(0x84e, 0x263c, 0x6560, 0x305e, 0xaef3, 0xd454, 0x1, 0x0);
        gbc.writeMem(0x84e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0x850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03B0
        gbc.setState(0x477c, 0xfe36, 0x5570, 0xccff, 0xff04, 0xffeb, 0x0, 0x1);
        gbc.writeMem(0x477c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfe36, gbc.sp());
        EXPECT(0x477e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03B1
        gbc.setState(0xbbcd, 0x49ef, 0x4a80, 0xb53d, 0x7871, 0x58e0, 0x1, 0x1);
        gbc.writeMem(0xbbcd, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x49ef, gbc.sp());
        EXPECT(0xbbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcd));
        EXPECT(0xf1, gbc.readMem(0xbbce));
        // CB F1 03B2
        gbc.setState(0x4f67, 0xcaae, 0xba90, 0x2b13, 0xb47e, 0x2e7d, 0x0, 0x0);
        gbc.writeMem(0x4f67, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcaae, gbc.sp());
        EXPECT(0x4f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03B3
        gbc.setState(0x50ce, 0xe4f, 0x97f0, 0x4d87, 0xe535, 0xd10, 0x0, 0x1);
        gbc.writeMem(0x50ce, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0x50d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03B5
        gbc.setState(0xe3eb, 0x9a5f, 0xdff0, 0x6630, 0x7d9, 0x8671, 0x0, 0x0);
        gbc.writeMem(0xe3eb, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3eb));
        EXPECT(0xf1, gbc.readMem(0xe3ec));
        // CB F1 03B6
        gbc.setState(0xe4ab, 0xc701, 0xda50, 0x9543, 0x20af, 0xc522, 0x0, 0x0);
        gbc.writeMem(0xe4ab, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc701, gbc.sp());
        EXPECT(0xe4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ab));
        EXPECT(0xf1, gbc.readMem(0xe4ac));
        // CB F1 03B7
        gbc.setState(0x40e5, 0x2464, 0xbaf0, 0xf597, 0x3d30, 0x3484, 0x1, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03B8
        gbc.setState(0x7808, 0xa44c, 0xa2f0, 0x942b, 0x7332, 0x1eb9, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03B9
        gbc.setState(0x1758, 0x1ac7, 0x6070, 0x733d, 0x17c6, 0xde01, 0x1, 0x0);
        gbc.writeMem(0x1758, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ac7, gbc.sp());
        EXPECT(0x175a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03BA
        gbc.setState(0x50b5, 0x18f0, 0x4700, 0x950c, 0x503d, 0x21d9, 0x1, 0x0);
        gbc.writeMem(0x50b5, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0x50b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03BC
        gbc.setState(0x8734, 0xfb06, 0xde60, 0x7a46, 0x61ef, 0x1708, 0x1, 0x0);
        gbc.writeMem(0x8734, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8734));
        EXPECT(0xf1, gbc.readMem(0x8735));
        // CB F1 03BD
        gbc.setState(0x80c6, 0x8ab5, 0xced0, 0xce32, 0xf76e, 0x5b0e, 0x1, 0x0);
        gbc.writeMem(0x80c6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x80c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c6));
        EXPECT(0xf1, gbc.readMem(0x80c7));
        // CB F1 03BE
        gbc.setState(0xa549, 0x60f, 0x5560, 0xd1ad, 0x4d1e, 0xa0cd, 0x1, 0x1);
        gbc.writeMem(0xa549, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x60f, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa549));
        EXPECT(0xf1, gbc.readMem(0xa54a));
        // CB F1 03BF
        gbc.setState(0x4378, 0x11c, 0x87b0, 0x48d0, 0xbb58, 0x35f0, 0x0, 0x0);
        gbc.writeMem(0x4378, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x11c, gbc.sp());
        EXPECT(0x437a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03C0
        gbc.setState(0x91f2, 0x6167, 0x31e0, 0xa6f7, 0x3080, 0x3d64, 0x0, 0x1);
        gbc.writeMem(0x91f2, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6167, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0xf1, gbc.readMem(0x91f3));
        // CB F1 03C1
        gbc.setState(0xe95b, 0xc995, 0x3190, 0x3ba0, 0xbb30, 0x3803, 0x0, 0x0);
        gbc.writeMem(0xe95b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95b));
        EXPECT(0xf1, gbc.readMem(0xe95c));
        // CB F1 03C2
        gbc.setState(0x9407, 0xf410, 0xe6b0, 0x272d, 0xf0e1, 0x91d4, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf410, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9407));
        EXPECT(0xf1, gbc.readMem(0x9408));
        // CB F1 03C3
        gbc.setState(0x310b, 0xae5d, 0x3af0, 0xea88, 0x45d8, 0xd82d, 0x0, 0x0);
        gbc.writeMem(0x310b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x310d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03C4
        gbc.setState(0x8b0d, 0xf7c, 0xcc0, 0x3f78, 0x1905, 0xd57b, 0x0, 0x0);
        gbc.writeMem(0x8b0d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0d));
        EXPECT(0xf1, gbc.readMem(0x8b0e));
        // CB F1 03C5
        gbc.setState(0x7c6f, 0x3374, 0x250, 0xe58d, 0x87e1, 0x168, 0x1, 0x0);
        gbc.writeMem(0x7c6f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0x7c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03C6
        gbc.setState(0x89b3, 0xc2fb, 0x7130, 0xf28, 0x5182, 0xb81b, 0x1, 0x0);
        gbc.writeMem(0x89b3, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc2fb, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b3));
        EXPECT(0xf1, gbc.readMem(0x89b4));
        // CB F1 03C7
        gbc.setState(0x951a, 0x5b57, 0xe3e0, 0xd029, 0xface, 0x3de4, 0x0, 0x1);
        gbc.writeMem(0x951a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5b57, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951a));
        EXPECT(0xf1, gbc.readMem(0x951b));
        // CB F1 03C8
        gbc.setState(0xceca, 0x5470, 0x57e0, 0x8b97, 0x9064, 0x15c2, 0x0, 0x0);
        gbc.writeMem(0xceca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5470, gbc.sp());
        EXPECT(0xcecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceca));
        EXPECT(0xf1, gbc.readMem(0xcecb));
        // CB F1 03C9
        gbc.setState(0xe834, 0x6190, 0x2e80, 0x8714, 0x3f77, 0xa13e, 0x1, 0x1);
        gbc.writeMem(0xe834, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0xe836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe834));
        EXPECT(0xf1, gbc.readMem(0xe835));
        // CB F1 03CB
        gbc.setState(0x74fe, 0x3118, 0x2ba0, 0x5ef3, 0x8f76, 0x69a4, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3118, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03CC
        gbc.setState(0x379d, 0x751b, 0xb7a0, 0x3dac, 0xf147, 0x1c76, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0x379f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03CD
        gbc.setState(0x6c59, 0x3dd6, 0xcd40, 0x1627, 0x778f, 0xe4d8, 0x0, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3dd6, gbc.sp());
        EXPECT(0x6c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03CE
        gbc.setState(0x8320, 0x757a, 0x6db0, 0xc0c1, 0x55ff, 0x423e, 0x1, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x757a, gbc.sp());
        EXPECT(0x8322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8320));
        EXPECT(0xf1, gbc.readMem(0x8321));
        // CB F1 03CF
        gbc.setState(0x22d4, 0xb896, 0x4670, 0x8467, 0x70dd, 0x6a8a, 0x1, 0x1);
        gbc.writeMem(0x22d4, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb896, gbc.sp());
        EXPECT(0x22d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03D0
        gbc.setState(0x4395, 0xfae9, 0x1760, 0x3ecd, 0x81c7, 0xe70d, 0x1, 0x1);
        gbc.writeMem(0x4395, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfae9, gbc.sp());
        EXPECT(0x4397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03D1
        gbc.setState(0xd257, 0xc68d, 0xf3a0, 0xa888, 0x7cb5, 0x70de, 0x1, 0x0);
        gbc.writeMem(0xd257, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xd259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd257));
        EXPECT(0xf1, gbc.readMem(0xd258));
        // CB F1 03D2
        gbc.setState(0x5e92, 0x24a6, 0x69e0, 0x451f, 0xaad3, 0xa2f0, 0x1, 0x0);
        gbc.writeMem(0x5e92, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x24a6, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03D3
        gbc.setState(0x201, 0x9186, 0xe5e0, 0x2b40, 0x557e, 0xecb3, 0x1, 0x0);
        gbc.writeMem(0x201, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9186, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03D4
        gbc.setState(0x2d78, 0xcfd6, 0xf2d0, 0x4a9f, 0x56d8, 0xd7d0, 0x0, 0x0);
        gbc.writeMem(0x2d78, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcfd6, gbc.sp());
        EXPECT(0x2d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03D5
        gbc.setState(0xef7d, 0x38c0, 0x4960, 0xc67a, 0x355b, 0xc65e, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x38c0, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0xf1, gbc.readMem(0xef7e));
        // CB F1 03D6
        gbc.setState(0xe984, 0x505b, 0x8a50, 0x678b, 0x1524, 0x639b, 0x0, 0x1);
        gbc.writeMem(0xe984, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x505b, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe984));
        EXPECT(0xf1, gbc.readMem(0xe985));
        // CB F1 03D7
        gbc.setState(0x6f1b, 0xa980, 0x8800, 0x3c37, 0x622e, 0xdce, 0x1, 0x1);
        gbc.writeMem(0x6f1b, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa980, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03D8
        gbc.setState(0xe747, 0x2d1d, 0xb970, 0x485c, 0xdbb2, 0x5780, 0x0, 0x0);
        gbc.writeMem(0xe747, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2d1d, gbc.sp());
        EXPECT(0xe749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe747));
        EXPECT(0xf1, gbc.readMem(0xe748));
        // CB F1 03D9
        gbc.setState(0x8035, 0x5f07, 0x2c20, 0xb679, 0x9efb, 0x8e40, 0x0, 0x1);
        gbc.writeMem(0x8035, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0x8037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8035));
        EXPECT(0xf1, gbc.readMem(0x8036));
        // CB F1 03DA
        gbc.setState(0x916a, 0x5ea6, 0x91f0, 0xa477, 0xd046, 0xbf9a, 0x0, 0x0);
        gbc.writeMem(0x916a, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5ea6, gbc.sp());
        EXPECT(0x916c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916a));
        EXPECT(0xf1, gbc.readMem(0x916b));
        // CB F1 03DB
        gbc.setState(0x9b77, 0x3a6, 0x70b0, 0xd6a6, 0xf041, 0x2098, 0x0, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b77));
        EXPECT(0xf1, gbc.readMem(0x9b78));
        // CB F1 03DC
        gbc.setState(0x85b8, 0xd796, 0x4890, 0xcec3, 0x139, 0x11f3, 0x1, 0x0);
        gbc.writeMem(0x85b8, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd796, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b8));
        EXPECT(0xf1, gbc.readMem(0x85b9));
        // CB F1 03DD
        gbc.setState(0x9cca, 0x5600, 0xf910, 0xf92a, 0x6bac, 0xb4e8, 0x0, 0x1);
        gbc.writeMem(0x9cca, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0xf1, gbc.readMem(0x9ccb));
        // CB F1 03DE
        gbc.setState(0xb5e7, 0x8de3, 0x90e0, 0x5cab, 0x496e, 0xefb5, 0x0, 0x0);
        gbc.writeMem(0xb5e7, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e7));
        EXPECT(0xf1, gbc.readMem(0xb5e8));
        // CB F1 03DF
        gbc.setState(0x7eed, 0xcedf, 0x6ca0, 0x39dd, 0x7259, 0x287e, 0x0, 0x1);
        gbc.writeMem(0x7eed, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03E0
        gbc.setState(0x2126, 0x96c4, 0x38e0, 0xa506, 0x28a1, 0x3496, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x96c4, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03E1
        gbc.setState(0x6e2e, 0x4303, 0x8c0, 0x2449, 0x418f, 0xeaf4, 0x0, 0x0);
        gbc.writeMem(0x6e2e, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4303, gbc.sp());
        EXPECT(0x6e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03E2
        gbc.setState(0x705f, 0x36cf, 0x840, 0xe14e, 0x6179, 0xc0d6, 0x1, 0x0);
        gbc.writeMem(0x705f, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x36cf, gbc.sp());
        EXPECT(0x7061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F1 03E3
        gbc.setState(0xd94, 0xf329, 0x9770, 0xb89e, 0x48, 0xfefd, 0x1, 0x0);
        gbc.writeMem(0xd94, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0xd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F1 03E4
        gbc.setState(0xbdf6, 0xf977, 0x4260, 0x846c, 0x591e, 0xb4db, 0x0, 0x1);
        gbc.writeMem(0xbdf6, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf977, gbc.sp());
        EXPECT(0xbdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf6));
        EXPECT(0xf1, gbc.readMem(0xbdf7));
        // CB F1 03E5
        gbc.setState(0x84b9, 0x1cfa, 0xed00, 0xca23, 0x6ced, 0x394f, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1cfa, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b9));
        EXPECT(0xf1, gbc.readMem(0x84ba));
        // CB F1 03E7
        gbc.setState(0x847c, 0xccca, 0xc4d0, 0x6a90, 0x17eb, 0xf646, 0x0, 0x0);
        gbc.writeMem(0x847c, { 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847c));
        EXPECT(0xf1, gbc.readMem(0x847d));
    }
