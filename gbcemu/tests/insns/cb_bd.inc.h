    TEST(gbcemu, opcode_cb_bd) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BD 0000
        gbc.setState(0xc4a1, 0xb4ed, 0xf520, 0xdf4c, 0xf6c, 0xf0d6, 0x1, 0x0);
        gbc.writeMem(0xc4a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb4ed);
        EXPECT(gbc.pc(), 0xc4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a1), 0xcb);
        EXPECT(gbc.readMem(0xc4a2), 0xbd);
        // CB BD 0001
        gbc.setState(0x9432, 0x44c3, 0x2e00, 0xd53a, 0xb407, 0x49cf, 0x0, 0x1);
        gbc.writeMem(0x9432, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x44c3);
        EXPECT(gbc.pc(), 0x9434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9432), 0xcb);
        EXPECT(gbc.readMem(0x9433), 0xbd);
        // CB BD 0002
        gbc.setState(0x9f09, 0x902a, 0x5a90, 0x917c, 0x94c9, 0x8adf, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x902a);
        EXPECT(gbc.pc(), 0x9f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f09), 0xcb);
        EXPECT(gbc.readMem(0x9f0a), 0xbd);
        // CB BD 0003
        gbc.setState(0x5866, 0x7059, 0xea00, 0x7730, 0x6870, 0x1886, 0x1, 0x0);
        gbc.writeMem(0x5866, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7059);
        EXPECT(gbc.pc(), 0x5868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0004
        gbc.setState(0xb903, 0x5a8c, 0x66e0, 0xb608, 0x84c3, 0xe9d2, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5a8c);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0xcb);
        EXPECT(gbc.readMem(0xb904), 0xbd);
        // CB BD 0005
        gbc.setState(0xb5a8, 0xa0bc, 0x17f0, 0x36ee, 0x34ad, 0x5e52, 0x1, 0x1);
        gbc.writeMem(0xb5a8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa0bc);
        EXPECT(gbc.pc(), 0xb5aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a8), 0xcb);
        EXPECT(gbc.readMem(0xb5a9), 0xbd);
        // CB BD 0006
        gbc.setState(0x4a55, 0x9f9c, 0x4110, 0x3663, 0xaf66, 0x62d8, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9f9c);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0007
        gbc.setState(0x1bfb, 0x34fc, 0x7100, 0xe781, 0x1a6e, 0x352f, 0x1, 0x1);
        gbc.writeMem(0x1bfb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x34fc);
        EXPECT(gbc.pc(), 0x1bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0008
        gbc.setState(0x8753, 0xf3f0, 0x7b20, 0xbe14, 0x424a, 0x3a49, 0x1, 0x1);
        gbc.writeMem(0x8753, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf3f0);
        EXPECT(gbc.pc(), 0x8755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8753), 0xcb);
        EXPECT(gbc.readMem(0x8754), 0xbd);
        // CB BD 0009
        gbc.setState(0x614a, 0x8257, 0xb7f0, 0xad35, 0x6dda, 0x9778, 0x0, 0x0);
        gbc.writeMem(0x614a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8257);
        EXPECT(gbc.pc(), 0x614c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 000A
        gbc.setState(0x73ab, 0x1021, 0x7820, 0xddd1, 0xc774, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x73ab, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1021);
        EXPECT(gbc.pc(), 0x73ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 000B
        gbc.setState(0x78ae, 0x839a, 0x7da0, 0x9001, 0x93fd, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0x78ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x839a);
        EXPECT(gbc.pc(), 0x78b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 000C
        gbc.setState(0xa7f4, 0xa659, 0x9d60, 0xbafa, 0xe482, 0xdb05, 0x1, 0x0);
        gbc.writeMem(0xa7f4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa659);
        EXPECT(gbc.pc(), 0xa7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f4), 0xcb);
        EXPECT(gbc.readMem(0xa7f5), 0xbd);
        // CB BD 000D
        gbc.setState(0x9a4b, 0xe71e, 0x8970, 0x884e, 0x2103, 0x40fc, 0x1, 0x0);
        gbc.writeMem(0x9a4b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe71e);
        EXPECT(gbc.pc(), 0x9a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4b), 0xcb);
        EXPECT(gbc.readMem(0x9a4c), 0xbd);
        // CB BD 000E
        gbc.setState(0x9e53, 0x606a, 0xfdb0, 0xd559, 0x5afa, 0x983d, 0x0, 0x0);
        gbc.writeMem(0x9e53, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x606a);
        EXPECT(gbc.pc(), 0x9e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e53), 0xcb);
        EXPECT(gbc.readMem(0x9e54), 0xbd);
        // CB BD 000F
        gbc.setState(0x3580, 0x55d4, 0x4be0, 0xc6e1, 0xd04c, 0xfa91, 0x1, 0x1);
        gbc.writeMem(0x3580, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x55d4);
        EXPECT(gbc.pc(), 0x3582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0010
        gbc.setState(0x54cd, 0x6fd8, 0xf230, 0x793e, 0x67e7, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x54cd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6fd8);
        EXPECT(gbc.pc(), 0x54cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0011
        gbc.setState(0xdaf3, 0xf4a3, 0xe870, 0x64e0, 0x5c6c, 0x71d, 0x0, 0x1);
        gbc.writeMem(0xdaf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xdaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf3), 0xcb);
        EXPECT(gbc.readMem(0xdaf4), 0xbd);
        // CB BD 0012
        gbc.setState(0xbbfa, 0xef23, 0x2610, 0xd9f1, 0x95bb, 0x44f9, 0x1, 0x1);
        gbc.writeMem(0xbbfa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xef23);
        EXPECT(gbc.pc(), 0xbbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfa), 0xcb);
        EXPECT(gbc.readMem(0xbbfb), 0xbd);
        // CB BD 0013
        gbc.setState(0x9b8a, 0x5d21, 0xae00, 0x2f9e, 0xac8f, 0x1913, 0x1, 0x1);
        gbc.writeMem(0x9b8a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5d21);
        EXPECT(gbc.pc(), 0x9b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8a), 0xcb);
        EXPECT(gbc.readMem(0x9b8b), 0xbd);
        // CB BD 0015
        gbc.setState(0x594c, 0x9ceb, 0xccb0, 0x92af, 0xc5e5, 0xaa2d, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9ceb);
        EXPECT(gbc.pc(), 0x594e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0017
        gbc.setState(0x10b7, 0xba8c, 0xf6f0, 0x81de, 0xa12, 0xb63e, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xba8c);
        EXPECT(gbc.pc(), 0x10b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0018
        gbc.setState(0x1e32, 0x3217, 0x6160, 0x115, 0x7bad, 0x16a, 0x0, 0x0);
        gbc.writeMem(0x1e32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3217);
        EXPECT(gbc.pc(), 0x1e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0019
        gbc.setState(0xad2, 0xde16, 0x3380, 0x935f, 0x7910, 0x1979, 0x0, 0x0);
        gbc.writeMem(0xad2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xde16);
        EXPECT(gbc.pc(), 0xad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 001A
        gbc.setState(0x5ce9, 0x7447, 0x3080, 0x6f0f, 0x3962, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0x5ce9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7447);
        EXPECT(gbc.pc(), 0x5ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 001B
        gbc.setState(0x83b5, 0x84d4, 0xb530, 0xb65b, 0x5cc, 0x4196, 0x0, 0x0);
        gbc.writeMem(0x83b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x84d4);
        EXPECT(gbc.pc(), 0x83b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b5), 0xcb);
        EXPECT(gbc.readMem(0x83b6), 0xbd);
        // CB BD 001C
        gbc.setState(0x21ed, 0xc86d, 0xdd10, 0x6ce2, 0xa11, 0xfe1b, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc86d);
        EXPECT(gbc.pc(), 0x21ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 001D
        gbc.setState(0x6d52, 0x1ebb, 0x7c20, 0x3b35, 0x4086, 0x5386, 0x0, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1ebb);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 001E
        gbc.setState(0xd9c7, 0xd8f8, 0x3d0, 0x18e3, 0x4f5a, 0xa009, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd8f8);
        EXPECT(gbc.pc(), 0xd9c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c7), 0xcb);
        EXPECT(gbc.readMem(0xd9c8), 0xbd);
        // CB BD 001F
        gbc.setState(0x2f65, 0xe7ef, 0x7cf0, 0x7f8d, 0xdeec, 0x5ffa, 0x0, 0x1);
        gbc.writeMem(0x2f65, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe7ef);
        EXPECT(gbc.pc(), 0x2f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0020
        gbc.setState(0x18f8, 0xbbb7, 0xa590, 0x51e3, 0xf571, 0xd53c, 0x1, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbbb7);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0021
        gbc.setState(0x231c, 0x162a, 0x53b0, 0x9bc5, 0x2dac, 0xbd67, 0x0, 0x0);
        gbc.writeMem(0x231c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x162a);
        EXPECT(gbc.pc(), 0x231e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0022
        gbc.setState(0xb43, 0xfd56, 0x1700, 0xba98, 0xe243, 0xf494, 0x1, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfd56);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0023
        gbc.setState(0xcf84, 0xc77a, 0x9b10, 0x232a, 0x7de7, 0x125b, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc77a);
        EXPECT(gbc.pc(), 0xcf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf84), 0xcb);
        EXPECT(gbc.readMem(0xcf85), 0xbd);
        // CB BD 0024
        gbc.setState(0xbcc6, 0x3e60, 0x8590, 0xee2c, 0x847d, 0x3a3, 0x1, 0x0);
        gbc.writeMem(0xbcc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3e60);
        EXPECT(gbc.pc(), 0xbcc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc6), 0xcb);
        EXPECT(gbc.readMem(0xbcc7), 0xbd);
        // CB BD 0025
        gbc.setState(0x4fd6, 0xd8bb, 0x2850, 0x7a6b, 0x4af6, 0x94bf, 0x1, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd8bb);
        EXPECT(gbc.pc(), 0x4fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0026
        gbc.setState(0xebc7, 0xc7c1, 0x4d80, 0xdab3, 0x6891, 0x33f4, 0x0, 0x0);
        gbc.writeMem(0xebc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc7c1);
        EXPECT(gbc.pc(), 0xebc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc7), 0xcb);
        EXPECT(gbc.readMem(0xebc8), 0xbd);
        // CB BD 0027
        gbc.setState(0x3309, 0xf053, 0x9b00, 0x6177, 0xd8b6, 0xd9c2, 0x1, 0x0);
        gbc.writeMem(0x3309, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf053);
        EXPECT(gbc.pc(), 0x330b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0028
        gbc.setState(0x4f13, 0x1228, 0x79c0, 0x9dcc, 0x733f, 0x4794, 0x1, 0x1);
        gbc.writeMem(0x4f13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1228);
        EXPECT(gbc.pc(), 0x4f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0029
        gbc.setState(0x1b99, 0x193f, 0xf9a0, 0x728, 0xea7a, 0x6572, 0x0, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x193f);
        EXPECT(gbc.pc(), 0x1b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 002A
        gbc.setState(0x5ea7, 0x22d6, 0x6b70, 0x9cd2, 0x4ad9, 0xb6b9, 0x1, 0x1);
        gbc.writeMem(0x5ea7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x22d6);
        EXPECT(gbc.pc(), 0x5ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 002B
        gbc.setState(0x884d, 0x561f, 0x4c30, 0x49c, 0x7b51, 0x3fa9, 0x0, 0x0);
        gbc.writeMem(0x884d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x561f);
        EXPECT(gbc.pc(), 0x884f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884d), 0xcb);
        EXPECT(gbc.readMem(0x884e), 0xbd);
        // CB BD 002C
        gbc.setState(0x7964, 0x23df, 0xbd00, 0x9fa0, 0x4367, 0xe022, 0x1, 0x1);
        gbc.writeMem(0x7964, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x23df);
        EXPECT(gbc.pc(), 0x7966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 002D
        gbc.setState(0x4455, 0xf602, 0xc9b0, 0x301c, 0x739a, 0x79f6, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf602);
        EXPECT(gbc.pc(), 0x4457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 002E
        gbc.setState(0xdacd, 0x46fc, 0x2df0, 0xc53d, 0xdd8a, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xdacd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x46fc);
        EXPECT(gbc.pc(), 0xdacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdacd), 0xcb);
        EXPECT(gbc.readMem(0xdace), 0xbd);
        // CB BD 002F
        gbc.setState(0x8b50, 0xcb, 0x5cb0, 0xa008, 0x29cd, 0x5539, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcb);
        EXPECT(gbc.pc(), 0x8b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b50), 0xcb);
        EXPECT(gbc.readMem(0x8b51), 0xbd);
        // CB BD 0030
        gbc.setState(0x39d, 0xf277, 0x2e10, 0xfc10, 0xef1d, 0x707a, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf277);
        EXPECT(gbc.pc(), 0x39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0031
        gbc.setState(0xb0e3, 0x16d9, 0x4eb0, 0x58cd, 0xfd1f, 0x5e68, 0x0, 0x0);
        gbc.writeMem(0xb0e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x16d9);
        EXPECT(gbc.pc(), 0xb0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e3), 0xcb);
        EXPECT(gbc.readMem(0xb0e4), 0xbd);
        // CB BD 0032
        gbc.setState(0x6805, 0x6a68, 0x7e60, 0x624c, 0xab8c, 0x8a2d, 0x1, 0x1);
        gbc.writeMem(0x6805, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6a68);
        EXPECT(gbc.pc(), 0x6807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0033
        gbc.setState(0x51b1, 0x1a08, 0x2880, 0x44a1, 0x63e, 0x6bef, 0x0, 0x1);
        gbc.writeMem(0x51b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1a08);
        EXPECT(gbc.pc(), 0x51b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0034
        gbc.setState(0x3d9e, 0x3cbd, 0x2300, 0x326c, 0x2203, 0x65df, 0x1, 0x0);
        gbc.writeMem(0x3d9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3cbd);
        EXPECT(gbc.pc(), 0x3da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0035
        gbc.setState(0x52b8, 0xa2af, 0xf630, 0x38c6, 0xd0f4, 0xf73b, 0x1, 0x0);
        gbc.writeMem(0x52b8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa2af);
        EXPECT(gbc.pc(), 0x52ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0036
        gbc.setState(0x56c, 0xcc89, 0x6440, 0xc920, 0xf685, 0xf6da, 0x0, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcc89);
        EXPECT(gbc.pc(), 0x56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0037
        gbc.setState(0x1417, 0xb112, 0x6980, 0xe622, 0xdddd, 0xc694, 0x1, 0x0);
        gbc.writeMem(0x1417, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb112);
        EXPECT(gbc.pc(), 0x1419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0038
        gbc.setState(0xd521, 0x4cea, 0x15a0, 0x750c, 0xdd4b, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4cea);
        EXPECT(gbc.pc(), 0xd523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd521), 0xcb);
        EXPECT(gbc.readMem(0xd522), 0xbd);
        // CB BD 0039
        gbc.setState(0x249e, 0x27cd, 0x9f40, 0x3777, 0x10a6, 0xc147, 0x0, 0x0);
        gbc.writeMem(0x249e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x27cd);
        EXPECT(gbc.pc(), 0x24a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 003A
        gbc.setState(0x15bc, 0xfc, 0x3d60, 0xeb5b, 0x10a8, 0x4515, 0x1, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 003B
        gbc.setState(0x3ad7, 0xb168, 0x9e0, 0x2c8a, 0x3a35, 0x15f8, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb168);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 003C
        gbc.setState(0x6f60, 0x8bca, 0xd970, 0x70b7, 0x7aa6, 0xf8ab, 0x0, 0x1);
        gbc.writeMem(0x6f60, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8bca);
        EXPECT(gbc.pc(), 0x6f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 003D
        gbc.setState(0xef77, 0x7b8b, 0x250, 0x94a2, 0xb51d, 0x427c, 0x0, 0x0);
        gbc.writeMem(0xef77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7b8b);
        EXPECT(gbc.pc(), 0xef79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef77), 0xcb);
        EXPECT(gbc.readMem(0xef78), 0xbd);
        // CB BD 003E
        gbc.setState(0x4b5, 0x1a8c, 0xa1d0, 0x419f, 0x2859, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0x4b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1a8c);
        EXPECT(gbc.pc(), 0x4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 003F
        gbc.setState(0xb0bf, 0x3ce8, 0xce10, 0x80da, 0x7e12, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0xb0bf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3ce8);
        EXPECT(gbc.pc(), 0xb0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bf), 0xcb);
        EXPECT(gbc.readMem(0xb0c0), 0xbd);
        // CB BD 0040
        gbc.setState(0x8b26, 0x1e9d, 0xd390, 0xd45, 0x72cc, 0xa8fd, 0x0, 0x0);
        gbc.writeMem(0x8b26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1e9d);
        EXPECT(gbc.pc(), 0x8b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b26), 0xcb);
        EXPECT(gbc.readMem(0x8b27), 0xbd);
        // CB BD 0041
        gbc.setState(0x3e8b, 0x7e57, 0x3300, 0x9f69, 0x2f95, 0x44d9, 0x1, 0x1);
        gbc.writeMem(0x3e8b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0x3e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0042
        gbc.setState(0x9871, 0x2172, 0x4f90, 0xf242, 0x8f74, 0x32cd, 0x1, 0x0);
        gbc.writeMem(0x9871, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2172);
        EXPECT(gbc.pc(), 0x9873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9871), 0xcb);
        EXPECT(gbc.readMem(0x9872), 0xbd);
        // CB BD 0044
        gbc.setState(0x5a15, 0x303a, 0x8ae0, 0x28a2, 0xf292, 0xde5f, 0x1, 0x0);
        gbc.writeMem(0x5a15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x303a);
        EXPECT(gbc.pc(), 0x5a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0045
        gbc.setState(0x3865, 0xdda1, 0x5320, 0x9eb7, 0xd822, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0x3865, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdda1);
        EXPECT(gbc.pc(), 0x3867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0046
        gbc.setState(0x47cc, 0x5c15, 0x39b0, 0x198, 0x354a, 0x8038, 0x1, 0x1);
        gbc.writeMem(0x47cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5c15);
        EXPECT(gbc.pc(), 0x47ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0047
        gbc.setState(0x127d, 0x3284, 0x2120, 0x44d6, 0x3df4, 0x7176, 0x1, 0x0);
        gbc.writeMem(0x127d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3284);
        EXPECT(gbc.pc(), 0x127f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0048
        gbc.setState(0x410d, 0x3f2a, 0x4820, 0xe320, 0xb979, 0x12cd, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3f2a);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0049
        gbc.setState(0x5897, 0xe733, 0xfd0, 0xb1, 0x17db, 0xf398, 0x1, 0x1);
        gbc.writeMem(0x5897, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe733);
        EXPECT(gbc.pc(), 0x5899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 004A
        gbc.setState(0xda, 0x5fff, 0x8900, 0xb863, 0x12ea, 0xb52f, 0x0, 0x1);
        gbc.writeMem(0xda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0xdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 004B
        gbc.setState(0x7e6a, 0xec29, 0xa140, 0x4534, 0xba9a, 0xd8b1, 0x1, 0x0);
        gbc.writeMem(0x7e6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xec29);
        EXPECT(gbc.pc(), 0x7e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 004C
        gbc.setState(0x8d46, 0xd2d3, 0x34d0, 0x5f17, 0xbe7d, 0xe6b9, 0x1, 0x1);
        gbc.writeMem(0x8d46, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd2d3);
        EXPECT(gbc.pc(), 0x8d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d46), 0xcb);
        EXPECT(gbc.readMem(0x8d47), 0xbd);
        // CB BD 004D
        gbc.setState(0x3505, 0x4b7d, 0xd570, 0x63bf, 0x468d, 0x8b78, 0x1, 0x1);
        gbc.writeMem(0x3505, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0x3507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 004E
        gbc.setState(0x5039, 0x89d1, 0xdfd0, 0xc78c, 0xd946, 0xba5, 0x0, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x89d1);
        EXPECT(gbc.pc(), 0x503b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 004F
        gbc.setState(0xdfaa, 0x8d56, 0xcf60, 0x3fb0, 0xcf61, 0xf3f8, 0x1, 0x0);
        gbc.writeMem(0xdfaa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8d56);
        EXPECT(gbc.pc(), 0xdfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfaa), 0xcb);
        EXPECT(gbc.readMem(0xdfab), 0xbd);
        // CB BD 0050
        gbc.setState(0xa633, 0x50ad, 0x5780, 0xabca, 0xb697, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0xa633, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x50ad);
        EXPECT(gbc.pc(), 0xa635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa633), 0xcb);
        EXPECT(gbc.readMem(0xa634), 0xbd);
        // CB BD 0051
        gbc.setState(0x9b7, 0xc21b, 0xd940, 0xf944, 0xb7b1, 0x79f8, 0x0, 0x1);
        gbc.writeMem(0x9b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc21b);
        EXPECT(gbc.pc(), 0x9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0053
        gbc.setState(0x5f5, 0x3fc7, 0xc9f0, 0x766, 0xcaeb, 0x2714, 0x0, 0x1);
        gbc.writeMem(0x5f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3fc7);
        EXPECT(gbc.pc(), 0x5f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0054
        gbc.setState(0x6cbd, 0x9fea, 0x340, 0x786f, 0xb5ea, 0xc0a6, 0x1, 0x0);
        gbc.writeMem(0x6cbd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9fea);
        EXPECT(gbc.pc(), 0x6cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0055
        gbc.setState(0x6c5f, 0x7482, 0xc9b0, 0xa225, 0xcc2c, 0x746e, 0x0, 0x0);
        gbc.writeMem(0x6c5f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0056
        gbc.setState(0xedfe, 0x6f92, 0x4430, 0x69c9, 0x2bb8, 0xc5f8, 0x0, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6f92);
        EXPECT(gbc.pc(), 0xee00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfe), 0xcb);
        EXPECT(gbc.readMem(0xedff), 0xbd);
        // CB BD 0057
        gbc.setState(0x5d9e, 0xf3ec, 0x8de0, 0xa641, 0x7342, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0x5d9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x5da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0058
        gbc.setState(0x531e, 0x58f3, 0x6790, 0x60a4, 0xb1b1, 0x5714, 0x1, 0x0);
        gbc.writeMem(0x531e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x58f3);
        EXPECT(gbc.pc(), 0x5320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0059
        gbc.setState(0x991f, 0x8520, 0x21c0, 0x2f05, 0x2224, 0x56de, 0x0, 0x0);
        gbc.writeMem(0x991f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8520);
        EXPECT(gbc.pc(), 0x9921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x991f), 0xcb);
        EXPECT(gbc.readMem(0x9920), 0xbd);
        // CB BD 005A
        gbc.setState(0x2041, 0x32a3, 0xde00, 0x4ac0, 0xddc2, 0xf6f0, 0x0, 0x0);
        gbc.writeMem(0x2041, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x32a3);
        EXPECT(gbc.pc(), 0x2043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 005B
        gbc.setState(0xaf3a, 0xe676, 0x9ee0, 0xc8db, 0x9dbc, 0x4d0, 0x1, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe676);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3a), 0xcb);
        EXPECT(gbc.readMem(0xaf3b), 0xbd);
        // CB BD 005C
        gbc.setState(0xae35, 0x2df0, 0xcf30, 0xe1c0, 0x391d, 0x568e, 0x1, 0x0);
        gbc.writeMem(0xae35, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2df0);
        EXPECT(gbc.pc(), 0xae37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae35), 0xcb);
        EXPECT(gbc.readMem(0xae36), 0xbd);
        // CB BD 005D
        gbc.setState(0x8a80, 0x4655, 0x5930, 0x204a, 0x3405, 0xc000, 0x0, 0x1);
        gbc.writeMem(0x8a80, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4655);
        EXPECT(gbc.pc(), 0x8a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a80), 0xcb);
        EXPECT(gbc.readMem(0x8a81), 0xbd);
        // CB BD 005F
        gbc.setState(0xc117, 0x35b3, 0xf610, 0x49b0, 0xd1dc, 0x62e4, 0x1, 0x0);
        gbc.writeMem(0xc117, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35b3);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc117), 0xcb);
        EXPECT(gbc.readMem(0xc118), 0xbd);
        // CB BD 0061
        gbc.setState(0xd208, 0x1623, 0xcea0, 0x6373, 0xdeed, 0xb4af, 0x0, 0x1);
        gbc.writeMem(0xd208, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1623);
        EXPECT(gbc.pc(), 0xd20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd208), 0xcb);
        EXPECT(gbc.readMem(0xd209), 0xbd);
        // CB BD 0062
        gbc.setState(0x510d, 0xeda7, 0x2aa0, 0xde49, 0x6aa1, 0x5bf, 0x0, 0x1);
        gbc.writeMem(0x510d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeda7);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0063
        gbc.setState(0xcbb5, 0xe6c6, 0xd720, 0xbf83, 0x3d4d, 0x6e4b, 0x1, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe6c6);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0xbd);
        // CB BD 0064
        gbc.setState(0x411, 0x5783, 0x7d80, 0x66df, 0x5581, 0x1cf, 0x1, 0x0);
        gbc.writeMem(0x411, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5783);
        EXPECT(gbc.pc(), 0x413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0065
        gbc.setState(0xa03a, 0x7807, 0xcbb0, 0xe6c6, 0xd71a, 0x2ce7, 0x0, 0x1);
        gbc.writeMem(0xa03a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7807);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03a), 0xcb);
        EXPECT(gbc.readMem(0xa03b), 0xbd);
        // CB BD 0066
        gbc.setState(0xeb61, 0xc240, 0xb980, 0x8c1b, 0x4de1, 0x54f7, 0x0, 0x1);
        gbc.writeMem(0xeb61, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc240);
        EXPECT(gbc.pc(), 0xeb63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb61), 0xcb);
        EXPECT(gbc.readMem(0xeb62), 0xbd);
        // CB BD 0067
        gbc.setState(0x1092, 0x54d2, 0xc170, 0xf4ea, 0xda42, 0x5c00, 0x1, 0x1);
        gbc.writeMem(0x1092, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x54d2);
        EXPECT(gbc.pc(), 0x1094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0068
        gbc.setState(0x6e15, 0xbf19, 0xe0e0, 0xecdf, 0xe3d8, 0xb766, 0x1, 0x1);
        gbc.writeMem(0x6e15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbf19);
        EXPECT(gbc.pc(), 0x6e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0069
        gbc.setState(0xafc1, 0x8adf, 0x7310, 0xab3f, 0x76b0, 0xcaa5, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8adf);
        EXPECT(gbc.pc(), 0xafc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc1), 0xcb);
        EXPECT(gbc.readMem(0xafc2), 0xbd);
        // CB BD 006A
        gbc.setState(0xe87a, 0xf168, 0xead0, 0xa22d, 0xf502, 0xb52e, 0x0, 0x1);
        gbc.writeMem(0xe87a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf168);
        EXPECT(gbc.pc(), 0xe87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87a), 0xcb);
        EXPECT(gbc.readMem(0xe87b), 0xbd);
        // CB BD 006B
        gbc.setState(0x34e7, 0x24d3, 0xd5b0, 0xaf, 0xbba7, 0x5c51, 0x0, 0x0);
        gbc.writeMem(0x34e7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x24d3);
        EXPECT(gbc.pc(), 0x34e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 006C
        gbc.setState(0xc567, 0x578c, 0xd1d0, 0x8073, 0x99a9, 0x7132, 0x1, 0x1);
        gbc.writeMem(0xc567, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x578c);
        EXPECT(gbc.pc(), 0xc569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc567), 0xcb);
        EXPECT(gbc.readMem(0xc568), 0xbd);
        // CB BD 006D
        gbc.setState(0xbb88, 0x8eab, 0xf790, 0x85b3, 0x3c24, 0x173c, 0x0, 0x1);
        gbc.writeMem(0xbb88, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8eab);
        EXPECT(gbc.pc(), 0xbb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb88), 0xcb);
        EXPECT(gbc.readMem(0xbb89), 0xbd);
        // CB BD 006E
        gbc.setState(0xd13, 0xa11b, 0xe490, 0xa9f0, 0xff53, 0x1a7b, 0x1, 0x1);
        gbc.writeMem(0xd13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa11b);
        EXPECT(gbc.pc(), 0xd15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 006F
        gbc.setState(0x90d3, 0x66d8, 0x2e30, 0x61db, 0xd60e, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x90d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x66d8);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d3), 0xcb);
        EXPECT(gbc.readMem(0x90d4), 0xbd);
        // CB BD 0070
        gbc.setState(0xd118, 0xfb5d, 0x6cf0, 0xef38, 0xe89d, 0xf03e, 0x0, 0x1);
        gbc.writeMem(0xd118, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfb5d);
        EXPECT(gbc.pc(), 0xd11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd118), 0xcb);
        EXPECT(gbc.readMem(0xd119), 0xbd);
        // CB BD 0071
        gbc.setState(0x385c, 0xe225, 0xe9f0, 0x7037, 0xfc11, 0x6ca2, 0x0, 0x1);
        gbc.writeMem(0x385c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe225);
        EXPECT(gbc.pc(), 0x385e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0072
        gbc.setState(0xa1e4, 0x53ae, 0x2100, 0xba17, 0x389d, 0xc4ea, 0x1, 0x0);
        gbc.writeMem(0xa1e4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x53ae);
        EXPECT(gbc.pc(), 0xa1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e4), 0xcb);
        EXPECT(gbc.readMem(0xa1e5), 0xbd);
        // CB BD 0073
        gbc.setState(0x6ecf, 0x2734, 0x2b30, 0x80d6, 0x2572, 0xf865, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2734);
        EXPECT(gbc.pc(), 0x6ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0074
        gbc.setState(0xabe4, 0x233b, 0x7a20, 0x5ce4, 0x2ee1, 0x218d, 0x1, 0x1);
        gbc.writeMem(0xabe4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x233b);
        EXPECT(gbc.pc(), 0xabe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe4), 0xcb);
        EXPECT(gbc.readMem(0xabe5), 0xbd);
        // CB BD 0075
        gbc.setState(0x3b14, 0x3ff2, 0xd980, 0x71da, 0xfd54, 0x9098, 0x1, 0x1);
        gbc.writeMem(0x3b14, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3ff2);
        EXPECT(gbc.pc(), 0x3b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0076
        gbc.setState(0x4e63, 0xdf, 0xda10, 0xe45d, 0xc70, 0xc29a, 0x0, 0x0);
        gbc.writeMem(0x4e63, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdf);
        EXPECT(gbc.pc(), 0x4e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0077
        gbc.setState(0x9dac, 0x98e4, 0xb070, 0x1a1, 0xd231, 0x8140, 0x0, 0x0);
        gbc.writeMem(0x9dac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x98e4);
        EXPECT(gbc.pc(), 0x9dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dac), 0xcb);
        EXPECT(gbc.readMem(0x9dad), 0xbd);
        // CB BD 0078
        gbc.setState(0xea0e, 0xa14, 0xb690, 0x8244, 0xfdb3, 0x7da1, 0x0, 0x1);
        gbc.writeMem(0xea0e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa14);
        EXPECT(gbc.pc(), 0xea10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea0e), 0xcb);
        EXPECT(gbc.readMem(0xea0f), 0xbd);
        // CB BD 0079
        gbc.setState(0x58cc, 0x90fc, 0xfb90, 0xc6d5, 0xb8b1, 0x63c8, 0x1, 0x1);
        gbc.writeMem(0x58cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0x58ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 007A
        gbc.setState(0x14d7, 0x880a, 0xf5e0, 0x3941, 0x7fa5, 0x5e1e, 0x0, 0x0);
        gbc.writeMem(0x14d7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x880a);
        EXPECT(gbc.pc(), 0x14d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 007B
        gbc.setState(0xee2b, 0x3c9, 0x7830, 0x5c7, 0x1b70, 0xce8f, 0x1, 0x1);
        gbc.writeMem(0xee2b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3c9);
        EXPECT(gbc.pc(), 0xee2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2b), 0xcb);
        EXPECT(gbc.readMem(0xee2c), 0xbd);
        // CB BD 007C
        gbc.setState(0xb32a, 0x2312, 0x1520, 0x8d9d, 0x111a, 0xc86c, 0x0, 0x0);
        gbc.writeMem(0xb32a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2312);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0xbd);
        // CB BD 007D
        gbc.setState(0x56, 0xfff5, 0xb1e0, 0x5822, 0x7ffc, 0xb194, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfff5);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 007E
        gbc.setState(0x4669, 0x6471, 0x7ac0, 0x9da0, 0xc9c, 0xb2f7, 0x0, 0x0);
        gbc.writeMem(0x4669, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0x466b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 007F
        gbc.setState(0x42b3, 0xe132, 0x7ee0, 0xe7db, 0x73e7, 0x7a2a, 0x1, 0x0);
        gbc.writeMem(0x42b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe132);
        EXPECT(gbc.pc(), 0x42b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0080
        gbc.setState(0xc94, 0xc384, 0xcaf0, 0xbaf4, 0xbb2c, 0x5baf, 0x0, 0x1);
        gbc.writeMem(0xc94, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc384);
        EXPECT(gbc.pc(), 0xc96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0081
        gbc.setState(0xdf0a, 0xe08c, 0xdfb0, 0x984b, 0x5e21, 0x57c8, 0x1, 0x0);
        gbc.writeMem(0xdf0a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe08c);
        EXPECT(gbc.pc(), 0xdf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0a), 0xcb);
        EXPECT(gbc.readMem(0xdf0b), 0xbd);
        // CB BD 0082
        gbc.setState(0xe13c, 0x8313, 0x3710, 0x86bd, 0x3bcd, 0xbe94, 0x0, 0x0);
        gbc.writeMem(0xe13c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8313);
        EXPECT(gbc.pc(), 0xe13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13c), 0xcb);
        EXPECT(gbc.readMem(0xe13d), 0xbd);
        // CB BD 0083
        gbc.setState(0xdbf, 0x87ea, 0x7080, 0x8582, 0xd46, 0x84a, 0x1, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x87ea);
        EXPECT(gbc.pc(), 0xdc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0084
        gbc.setState(0x3191, 0x1d1f, 0x9e90, 0x583, 0x6ba, 0xcc8f, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1d1f);
        EXPECT(gbc.pc(), 0x3193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0086
        gbc.setState(0x8797, 0xed46, 0x6830, 0x5f68, 0x7f75, 0xabff, 0x0, 0x1);
        gbc.writeMem(0x8797, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0x8799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8797), 0xcb);
        EXPECT(gbc.readMem(0x8798), 0xbd);
        // CB BD 0087
        gbc.setState(0x1b4e, 0xc0f1, 0x12a0, 0xa051, 0x7db7, 0x5721, 0x1, 0x1);
        gbc.writeMem(0x1b4e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc0f1);
        EXPECT(gbc.pc(), 0x1b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0088
        gbc.setState(0x22ee, 0xf65e, 0x7a10, 0xd03a, 0x522e, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf65e);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0089
        gbc.setState(0x6a6f, 0x7973, 0x9c40, 0x9538, 0x3dc9, 0x3ee5, 0x1, 0x0);
        gbc.writeMem(0x6a6f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7973);
        EXPECT(gbc.pc(), 0x6a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 008A
        gbc.setState(0x4039, 0x185, 0x6460, 0xbc6d, 0xa465, 0x5fb3, 0x1, 0x1);
        gbc.writeMem(0x4039, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x185);
        EXPECT(gbc.pc(), 0x403b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 008B
        gbc.setState(0x8694, 0xbcac, 0xe3f0, 0x5783, 0x2512, 0x15d7, 0x1, 0x1);
        gbc.writeMem(0x8694, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbcac);
        EXPECT(gbc.pc(), 0x8696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8694), 0xcb);
        EXPECT(gbc.readMem(0x8695), 0xbd);
        // CB BD 008C
        gbc.setState(0x21e5, 0x52fc, 0xe70, 0xa49b, 0xd8d1, 0x5a24, 0x1, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x52fc);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 008D
        gbc.setState(0x31f3, 0x883f, 0xdd40, 0x2fab, 0x9c99, 0xbda7, 0x1, 0x1);
        gbc.writeMem(0x31f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x883f);
        EXPECT(gbc.pc(), 0x31f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 008F
        gbc.setState(0x422e, 0x125a, 0x38a0, 0x3bc0, 0xe53f, 0xba14, 0x1, 0x1);
        gbc.writeMem(0x422e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x125a);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0090
        gbc.setState(0x8bdc, 0x46c9, 0x4ff0, 0x66fe, 0x226, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0x8bdc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x46c9);
        EXPECT(gbc.pc(), 0x8bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bdc), 0xcb);
        EXPECT(gbc.readMem(0x8bdd), 0xbd);
        // CB BD 0091
        gbc.setState(0xbb81, 0x9a5b, 0x84c0, 0x4efd, 0x8b0e, 0xd110, 0x0, 0x0);
        gbc.writeMem(0xbb81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9a5b);
        EXPECT(gbc.pc(), 0xbb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0xcb);
        EXPECT(gbc.readMem(0xbb82), 0xbd);
        // CB BD 0092
        gbc.setState(0xc940, 0x3b98, 0x8fc0, 0x24e9, 0x36e0, 0x60d, 0x1, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3b98);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc940), 0xcb);
        EXPECT(gbc.readMem(0xc941), 0xbd);
        // CB BD 0093
        gbc.setState(0x8a9b, 0x87b, 0xa910, 0x22c4, 0xed07, 0x7dbf, 0x1, 0x0);
        gbc.writeMem(0x8a9b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x87b);
        EXPECT(gbc.pc(), 0x8a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9b), 0xcb);
        EXPECT(gbc.readMem(0x8a9c), 0xbd);
        // CB BD 0094
        gbc.setState(0x7a74, 0x1858, 0xfad0, 0x768f, 0x9084, 0x8ec, 0x1, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1858);
        EXPECT(gbc.pc(), 0x7a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0095
        gbc.setState(0x7194, 0x5828, 0xb170, 0xa34a, 0x5c02, 0xa432, 0x0, 0x1);
        gbc.writeMem(0x7194, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5828);
        EXPECT(gbc.pc(), 0x7196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0096
        gbc.setState(0xd6f2, 0x62d4, 0x3d50, 0x82f8, 0xcd58, 0xa0a0, 0x1, 0x0);
        gbc.writeMem(0xd6f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x62d4);
        EXPECT(gbc.pc(), 0xd6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f2), 0xcb);
        EXPECT(gbc.readMem(0xd6f3), 0xbd);
        // CB BD 0098
        gbc.setState(0x9031, 0x2093, 0xf2d0, 0x65a0, 0xd924, 0x2c72, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2093);
        EXPECT(gbc.pc(), 0x9033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9031), 0xcb);
        EXPECT(gbc.readMem(0x9032), 0xbd);
        // CB BD 0099
        gbc.setState(0x9d3a, 0x1ace, 0x1d10, 0x7f4b, 0x2174, 0xc609, 0x0, 0x0);
        gbc.writeMem(0x9d3a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x9d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3a), 0xcb);
        EXPECT(gbc.readMem(0x9d3b), 0xbd);
        // CB BD 009A
        gbc.setState(0x3307, 0xb2aa, 0x4e20, 0x723a, 0x7029, 0x1091, 0x1, 0x0);
        gbc.writeMem(0x3307, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb2aa);
        EXPECT(gbc.pc(), 0x3309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 009B
        gbc.setState(0x3ebc, 0x4688, 0xe170, 0x56fe, 0x6cd7, 0xcf51, 0x0, 0x0);
        gbc.writeMem(0x3ebc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4688);
        EXPECT(gbc.pc(), 0x3ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 009C
        gbc.setState(0xed4b, 0x3f26, 0xf430, 0xeb61, 0x469e, 0xf9fe, 0x0, 0x1);
        gbc.writeMem(0xed4b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3f26);
        EXPECT(gbc.pc(), 0xed4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed4b), 0xcb);
        EXPECT(gbc.readMem(0xed4c), 0xbd);
        // CB BD 009D
        gbc.setState(0x8485, 0x7077, 0xf100, 0xd2d2, 0x7cc3, 0x7466, 0x1, 0x1);
        gbc.writeMem(0x8485, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7077);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8485), 0xcb);
        EXPECT(gbc.readMem(0x8486), 0xbd);
        // CB BD 009E
        gbc.setState(0xbe8, 0x8c36, 0x3630, 0x1b6d, 0xc995, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8c36);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 009F
        gbc.setState(0x9517, 0x5afc, 0x93a0, 0xa7f4, 0xc8a3, 0x13a7, 0x0, 0x1);
        gbc.writeMem(0x9517, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5afc);
        EXPECT(gbc.pc(), 0x9519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9517), 0xcb);
        EXPECT(gbc.readMem(0x9518), 0xbd);
        // CB BD 00A0
        gbc.setState(0xe8a2, 0x30e8, 0xc570, 0xf0a2, 0x2c92, 0x8207, 0x0, 0x1);
        gbc.writeMem(0xe8a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x30e8);
        EXPECT(gbc.pc(), 0xe8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a2), 0xcb);
        EXPECT(gbc.readMem(0xe8a3), 0xbd);
        // CB BD 00A1
        gbc.setState(0xcb81, 0x5206, 0xc7d0, 0xbe8f, 0x6554, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5206);
        EXPECT(gbc.pc(), 0xcb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb81), 0xcb);
        EXPECT(gbc.readMem(0xcb82), 0xbd);
        // CB BD 00A2
        gbc.setState(0x5234, 0x2234, 0x78d0, 0xff52, 0x716b, 0x5292, 0x1, 0x0);
        gbc.writeMem(0x5234, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2234);
        EXPECT(gbc.pc(), 0x5236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00A3
        gbc.setState(0x2d05, 0xfe49, 0x7930, 0x5fa3, 0xa5d2, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x2d05, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfe49);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00A4
        gbc.setState(0x1b29, 0xb070, 0x3c50, 0x69b4, 0x2558, 0xea3f, 0x1, 0x0);
        gbc.writeMem(0x1b29, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb070);
        EXPECT(gbc.pc(), 0x1b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00A5
        gbc.setState(0x4eef, 0x7e12, 0x4b60, 0xc2b1, 0x5a5e, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0x4eef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7e12);
        EXPECT(gbc.pc(), 0x4ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00A6
        gbc.setState(0x4ef0, 0x7f32, 0x49d0, 0x4714, 0xb8f4, 0x1f37, 0x1, 0x1);
        gbc.writeMem(0x4ef0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7f32);
        EXPECT(gbc.pc(), 0x4ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00A7
        gbc.setState(0x7ef, 0x274b, 0xe2b0, 0x98a, 0xe1ae, 0x7b87, 0x1, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x274b);
        EXPECT(gbc.pc(), 0x7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00A8
        gbc.setState(0xa3af, 0xc999, 0xc540, 0xa8bd, 0xa532, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0xa3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc999);
        EXPECT(gbc.pc(), 0xa3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3af), 0xcb);
        EXPECT(gbc.readMem(0xa3b0), 0xbd);
        // CB BD 00A9
        gbc.setState(0x113b, 0x22b, 0xc710, 0x4c5d, 0x5ed3, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0x113b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x22b);
        EXPECT(gbc.pc(), 0x113d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00AA
        gbc.setState(0x7f40, 0x5afd, 0x95d0, 0x69a5, 0x8688, 0xbabe, 0x1, 0x0);
        gbc.writeMem(0x7f40, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5afd);
        EXPECT(gbc.pc(), 0x7f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00AB
        gbc.setState(0xd25e, 0x48a, 0xda90, 0x730f, 0x2c5c, 0xc88, 0x1, 0x0);
        gbc.writeMem(0xd25e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x48a);
        EXPECT(gbc.pc(), 0xd260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25e), 0xcb);
        EXPECT(gbc.readMem(0xd25f), 0xbd);
        // CB BD 00AC
        gbc.setState(0x2c5d, 0x204c, 0x86f0, 0xef2b, 0x1b89, 0x7013, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00AE
        gbc.setState(0xd898, 0x4da3, 0xa700, 0x10da, 0x5cbd, 0x754d, 0x0, 0x0);
        gbc.writeMem(0xd898, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0xd89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd898), 0xcb);
        EXPECT(gbc.readMem(0xd899), 0xbd);
        // CB BD 00AF
        gbc.setState(0xdf91, 0xc9c5, 0x5180, 0x708e, 0x4a4f, 0x2c62, 0x1, 0x1);
        gbc.writeMem(0xdf91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc9c5);
        EXPECT(gbc.pc(), 0xdf93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf91), 0xcb);
        EXPECT(gbc.readMem(0xdf92), 0xbd);
        // CB BD 00B0
        gbc.setState(0x8d6e, 0x19d6, 0xdcf0, 0xbe82, 0xf384, 0xb980, 0x0, 0x0);
        gbc.writeMem(0x8d6e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x19d6);
        EXPECT(gbc.pc(), 0x8d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6e), 0xcb);
        EXPECT(gbc.readMem(0x8d6f), 0xbd);
        // CB BD 00B1
        gbc.setState(0x87db, 0x48dd, 0xda0, 0x1317, 0xbcde, 0x1c68, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x48dd);
        EXPECT(gbc.pc(), 0x87dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87db), 0xcb);
        EXPECT(gbc.readMem(0x87dc), 0xbd);
        // CB BD 00B2
        gbc.setState(0x6730, 0x884a, 0x8290, 0x5348, 0x470c, 0xa86, 0x1, 0x1);
        gbc.writeMem(0x6730, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x884a);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00B3
        gbc.setState(0xc5fa, 0x2999, 0xce70, 0xee8e, 0xd7b, 0xfa68, 0x1, 0x0);
        gbc.writeMem(0xc5fa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2999);
        EXPECT(gbc.pc(), 0xc5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fa), 0xcb);
        EXPECT(gbc.readMem(0xc5fb), 0xbd);
        // CB BD 00B4
        gbc.setState(0x9a97, 0xaeda, 0x1f10, 0x6994, 0x1efe, 0x24fd, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xaeda);
        EXPECT(gbc.pc(), 0x9a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a97), 0xcb);
        EXPECT(gbc.readMem(0x9a98), 0xbd);
        // CB BD 00B5
        gbc.setState(0xe712, 0x1ebb, 0xb6d0, 0xd8f9, 0xf0dd, 0x474a, 0x1, 0x1);
        gbc.writeMem(0xe712, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1ebb);
        EXPECT(gbc.pc(), 0xe714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe712), 0xcb);
        EXPECT(gbc.readMem(0xe713), 0xbd);
        // CB BD 00B7
        gbc.setState(0xbb1d, 0xe658, 0x14e0, 0xd64a, 0xfba4, 0x4c5d, 0x0, 0x1);
        gbc.writeMem(0xbb1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe658);
        EXPECT(gbc.pc(), 0xbb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1d), 0xcb);
        EXPECT(gbc.readMem(0xbb1e), 0xbd);
        // CB BD 00B8
        gbc.setState(0x9822, 0x21cc, 0x12c0, 0xbadb, 0x8b9b, 0x1d27, 0x1, 0x1);
        gbc.writeMem(0x9822, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x21cc);
        EXPECT(gbc.pc(), 0x9824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9822), 0xcb);
        EXPECT(gbc.readMem(0x9823), 0xbd);
        // CB BD 00B9
        gbc.setState(0x94b2, 0x89cb, 0xc5f0, 0xdcc9, 0x3c7e, 0x1881, 0x1, 0x0);
        gbc.writeMem(0x94b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x89cb);
        EXPECT(gbc.pc(), 0x94b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b2), 0xcb);
        EXPECT(gbc.readMem(0x94b3), 0xbd);
        // CB BD 00BA
        gbc.setState(0xa4d0, 0x72b3, 0xf9c0, 0x8edd, 0x6c28, 0xdb7f, 0x1, 0x0);
        gbc.writeMem(0xa4d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x72b3);
        EXPECT(gbc.pc(), 0xa4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d0), 0xcb);
        EXPECT(gbc.readMem(0xa4d1), 0xbd);
        // CB BD 00BB
        gbc.setState(0x2545, 0x3d10, 0x3af0, 0x9509, 0xed4b, 0x2c68, 0x0, 0x0);
        gbc.writeMem(0x2545, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x2547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00BC
        gbc.setState(0x9c3d, 0x6522, 0xee60, 0x3971, 0xce04, 0xa22e, 0x1, 0x0);
        gbc.writeMem(0x9c3d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6522);
        EXPECT(gbc.pc(), 0x9c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3d), 0xcb);
        EXPECT(gbc.readMem(0x9c3e), 0xbd);
        // CB BD 00BD
        gbc.setState(0x2645, 0x523e, 0xc260, 0x6873, 0x8c8b, 0xc964, 0x0, 0x1);
        gbc.writeMem(0x2645, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x523e);
        EXPECT(gbc.pc(), 0x2647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00BE
        gbc.setState(0x6a8f, 0x3c20, 0x84f0, 0x1a59, 0x1166, 0x1e24, 0x0, 0x1);
        gbc.writeMem(0x6a8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3c20);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00BF
        gbc.setState(0x9c3, 0x9a27, 0xb5e0, 0xe549, 0x67f6, 0xcee3, 0x1, 0x0);
        gbc.writeMem(0x9c3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9a27);
        EXPECT(gbc.pc(), 0x9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00C0
        gbc.setState(0xce15, 0x4c9d, 0x5980, 0x1d67, 0x51d5, 0xbea6, 0x0, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4c9d);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce15), 0xcb);
        EXPECT(gbc.readMem(0xce16), 0xbd);
        // CB BD 00C1
        gbc.setState(0x97f1, 0x39d3, 0x9dd0, 0x2e44, 0xa721, 0x6cc0, 0x1, 0x0);
        gbc.writeMem(0x97f1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x39d3);
        EXPECT(gbc.pc(), 0x97f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f1), 0xcb);
        EXPECT(gbc.readMem(0x97f2), 0xbd);
        // CB BD 00C2
        gbc.setState(0x6ed0, 0xfa39, 0x5330, 0x2b3a, 0x1529, 0xd536, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfa39);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00C3
        gbc.setState(0x9dfb, 0x1d5c, 0xa920, 0xa56, 0x219d, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x9dfb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1d5c);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfb), 0xcb);
        EXPECT(gbc.readMem(0x9dfc), 0xbd);
        // CB BD 00C4
        gbc.setState(0x1747, 0x637d, 0xa0a0, 0xdf59, 0x34ca, 0x456, 0x1, 0x1);
        gbc.writeMem(0x1747, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x637d);
        EXPECT(gbc.pc(), 0x1749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00C5
        gbc.setState(0x5216, 0xba00, 0xdbd0, 0x25bb, 0x1bd6, 0x3e75, 0x1, 0x1);
        gbc.writeMem(0x5216, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xba00);
        EXPECT(gbc.pc(), 0x5218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00C6
        gbc.setState(0x88fb, 0xc5fd, 0x2710, 0x5541, 0x338a, 0x718f, 0x0, 0x1);
        gbc.writeMem(0x88fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc5fd);
        EXPECT(gbc.pc(), 0x88fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fb), 0xcb);
        EXPECT(gbc.readMem(0x88fc), 0xbd);
        // CB BD 00C7
        gbc.setState(0x465c, 0x810a, 0x3010, 0xcf82, 0x4e17, 0x804c, 0x0, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x810a);
        EXPECT(gbc.pc(), 0x465e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00C8
        gbc.setState(0x9529, 0x8a7e, 0xb990, 0x4ffc, 0xe987, 0xb7b, 0x1, 0x0);
        gbc.writeMem(0x9529, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8a7e);
        EXPECT(gbc.pc(), 0x952b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9529), 0xcb);
        EXPECT(gbc.readMem(0x952a), 0xbd);
        // CB BD 00C9
        gbc.setState(0xc947, 0x646d, 0x9e0, 0x5a28, 0x2334, 0x4e0b, 0x1, 0x1);
        gbc.writeMem(0xc947, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x646d);
        EXPECT(gbc.pc(), 0xc949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc947), 0xcb);
        EXPECT(gbc.readMem(0xc948), 0xbd);
        // CB BD 00CA
        gbc.setState(0x66c4, 0xf1b6, 0x7350, 0x64d8, 0x1b96, 0xd4f8, 0x1, 0x1);
        gbc.writeMem(0x66c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf1b6);
        EXPECT(gbc.pc(), 0x66c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00CB
        gbc.setState(0xc8c0, 0x64f0, 0xf350, 0x4d4c, 0x8b56, 0x2aa3, 0x0, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x64f0);
        EXPECT(gbc.pc(), 0xc8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c0), 0xcb);
        EXPECT(gbc.readMem(0xc8c1), 0xbd);
        // CB BD 00CC
        gbc.setState(0xe75c, 0xe0c1, 0x8e40, 0xfcc4, 0xe428, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0xe75c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe0c1);
        EXPECT(gbc.pc(), 0xe75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75c), 0xcb);
        EXPECT(gbc.readMem(0xe75d), 0xbd);
        // CB BD 00CD
        gbc.setState(0xda27, 0xd1f9, 0x8910, 0x345e, 0xc14e, 0xc5f1, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0xda29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda27), 0xcb);
        EXPECT(gbc.readMem(0xda28), 0xbd);
        // CB BD 00CE
        gbc.setState(0x13d4, 0xdfde, 0xcbd0, 0x4a2c, 0xcc3e, 0xf633, 0x1, 0x0);
        gbc.writeMem(0x13d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdfde);
        EXPECT(gbc.pc(), 0x13d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00CF
        gbc.setState(0x2044, 0x1014, 0xfc40, 0xd822, 0x9efc, 0x170a, 0x1, 0x1);
        gbc.writeMem(0x2044, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1014);
        EXPECT(gbc.pc(), 0x2046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00D0
        gbc.setState(0x271f, 0xfbf8, 0xf9a0, 0xdac8, 0x8c62, 0xd372, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfbf8);
        EXPECT(gbc.pc(), 0x2721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00D1
        gbc.setState(0x5b00, 0x4ec8, 0x5c90, 0xf75c, 0x4e1b, 0x19a9, 0x1, 0x0);
        gbc.writeMem(0x5b00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4ec8);
        EXPECT(gbc.pc(), 0x5b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00D2
        gbc.setState(0xa18e, 0xfc, 0x5700, 0xa5b8, 0x65a9, 0x5a00, 0x0, 0x1);
        gbc.writeMem(0xa18e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfc);
        EXPECT(gbc.pc(), 0xa190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18e), 0xcb);
        EXPECT(gbc.readMem(0xa18f), 0xbd);
        // CB BD 00D3
        gbc.setState(0xe084, 0x9291, 0xa7a0, 0xb7f, 0xc078, 0x4b82, 0x0, 0x0);
        gbc.writeMem(0xe084, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9291);
        EXPECT(gbc.pc(), 0xe086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe084), 0xcb);
        EXPECT(gbc.readMem(0xe085), 0xbd);
        // CB BD 00D5
        gbc.setState(0x3a93, 0x9863, 0xb70, 0x2a97, 0x648f, 0x8258, 0x1, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9863);
        EXPECT(gbc.pc(), 0x3a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00D6
        gbc.setState(0xe8f8, 0x45d5, 0x4680, 0xf0df, 0xe368, 0xae7b, 0x1, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x45d5);
        EXPECT(gbc.pc(), 0xe8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f8), 0xcb);
        EXPECT(gbc.readMem(0xe8f9), 0xbd);
        // CB BD 00D7
        gbc.setState(0x158d, 0xe868, 0xefa0, 0xb08a, 0xce49, 0x9f38, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe868);
        EXPECT(gbc.pc(), 0x158f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00D8
        gbc.setState(0xa56c, 0x834d, 0xe970, 0xda47, 0x9f5c, 0x4b74, 0x1, 0x0);
        gbc.writeMem(0xa56c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x834d);
        EXPECT(gbc.pc(), 0xa56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56c), 0xcb);
        EXPECT(gbc.readMem(0xa56d), 0xbd);
        // CB BD 00D9
        gbc.setState(0x9ad4, 0x9c55, 0xc3e0, 0x62fa, 0x2cfd, 0x1537, 0x1, 0x0);
        gbc.writeMem(0x9ad4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9c55);
        EXPECT(gbc.pc(), 0x9ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad4), 0xcb);
        EXPECT(gbc.readMem(0x9ad5), 0xbd);
        // CB BD 00DA
        gbc.setState(0x6ef4, 0xa50d, 0x6400, 0x5a4f, 0x95ae, 0x1b05, 0x1, 0x0);
        gbc.writeMem(0x6ef4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0x6ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00DB
        gbc.setState(0xcee8, 0xfdcf, 0xde70, 0x94ff, 0x1bea, 0xfd95, 0x0, 0x1);
        gbc.writeMem(0xcee8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfdcf);
        EXPECT(gbc.pc(), 0xceea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee8), 0xcb);
        EXPECT(gbc.readMem(0xcee9), 0xbd);
        // CB BD 00DC
        gbc.setState(0xdfde, 0x833a, 0xf5c0, 0xcfaa, 0xb48, 0x546c, 0x1, 0x1);
        gbc.writeMem(0xdfde, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x833a);
        EXPECT(gbc.pc(), 0xdfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfde), 0xcb);
        EXPECT(gbc.readMem(0xdfdf), 0xbd);
        // CB BD 00DD
        gbc.setState(0x57e, 0xe69e, 0x2190, 0xdc31, 0x2fb3, 0x6f29, 0x0, 0x0);
        gbc.writeMem(0x57e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe69e);
        EXPECT(gbc.pc(), 0x580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00DE
        gbc.setState(0xb801, 0xb8b6, 0x2e70, 0x1302, 0xfad6, 0x5958, 0x0, 0x1);
        gbc.writeMem(0xb801, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb8b6);
        EXPECT(gbc.pc(), 0xb803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb801), 0xcb);
        EXPECT(gbc.readMem(0xb802), 0xbd);
        // CB BD 00DF
        gbc.setState(0x9eb5, 0x7931, 0x3770, 0xff0e, 0x9609, 0x8f51, 0x1, 0x0);
        gbc.writeMem(0x9eb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7931);
        EXPECT(gbc.pc(), 0x9eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb5), 0xcb);
        EXPECT(gbc.readMem(0x9eb6), 0xbd);
        // CB BD 00E0
        gbc.setState(0x1636, 0xb260, 0xee0, 0x3a6b, 0xfa9e, 0x48b2, 0x1, 0x1);
        gbc.writeMem(0x1636, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb260);
        EXPECT(gbc.pc(), 0x1638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00E1
        gbc.setState(0x8386, 0xa09f, 0x7f90, 0x6634, 0xf955, 0xff16, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa09f);
        EXPECT(gbc.pc(), 0x8388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8386), 0xcb);
        EXPECT(gbc.readMem(0x8387), 0xbd);
        // CB BD 00E2
        gbc.setState(0x37de, 0x859e, 0xc8a0, 0xf9a7, 0x1f98, 0x26a0, 0x0, 0x1);
        gbc.writeMem(0x37de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x859e);
        EXPECT(gbc.pc(), 0x37e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00E3
        gbc.setState(0x94d, 0xc0, 0x7ea0, 0x2dc6, 0xbc5c, 0xd94c, 0x1, 0x1);
        gbc.writeMem(0x94d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc0);
        EXPECT(gbc.pc(), 0x94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00E4
        gbc.setState(0xea2, 0x9caf, 0xd250, 0x6a9d, 0xf938, 0x129b, 0x1, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9caf);
        EXPECT(gbc.pc(), 0xea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00E5
        gbc.setState(0x8ee7, 0xe278, 0x6ac0, 0xb614, 0x16d1, 0xd68e, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x8ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee7), 0xcb);
        EXPECT(gbc.readMem(0x8ee8), 0xbd);
        // CB BD 00E6
        gbc.setState(0x8dfe, 0x72d7, 0x8460, 0xf6a6, 0xf141, 0x54ce, 0x1, 0x0);
        gbc.writeMem(0x8dfe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x72d7);
        EXPECT(gbc.pc(), 0x8e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfe), 0xcb);
        EXPECT(gbc.readMem(0x8dff), 0xbd);
        // CB BD 00E7
        gbc.setState(0xdd01, 0xe03a, 0xe6a0, 0xb976, 0x8cf0, 0xa2cc, 0x0, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe03a);
        EXPECT(gbc.pc(), 0xdd03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd01), 0xcb);
        EXPECT(gbc.readMem(0xdd02), 0xbd);
        // CB BD 00E8
        gbc.setState(0xb751, 0x7afe, 0xec50, 0x704b, 0xab2c, 0x6696, 0x0, 0x1);
        gbc.writeMem(0xb751, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7afe);
        EXPECT(gbc.pc(), 0xb753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb751), 0xcb);
        EXPECT(gbc.readMem(0xb752), 0xbd);
        // CB BD 00E9
        gbc.setState(0xdbe5, 0x7f40, 0xc860, 0xdd46, 0xa464, 0x274b, 0x1, 0x1);
        gbc.writeMem(0xdbe5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0xdbe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe5), 0xcb);
        EXPECT(gbc.readMem(0xdbe6), 0xbd);
        // CB BD 00EA
        gbc.setState(0x39a7, 0x4344, 0x5bc0, 0xb355, 0x4bed, 0xf960, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4344);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00EC
        gbc.setState(0x3036, 0xeae9, 0x8f10, 0x8812, 0xc6bb, 0x6624, 0x1, 0x1);
        gbc.writeMem(0x3036, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xeae9);
        EXPECT(gbc.pc(), 0x3038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00ED
        gbc.setState(0x5b37, 0xa47a, 0x1f0, 0xdf67, 0x3a65, 0x277a, 0x1, 0x1);
        gbc.writeMem(0x5b37, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa47a);
        EXPECT(gbc.pc(), 0x5b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00EE
        gbc.setState(0x7cd0, 0x1ff6, 0xb590, 0xe31, 0x39b6, 0x9406, 0x1, 0x1);
        gbc.writeMem(0x7cd0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1ff6);
        EXPECT(gbc.pc(), 0x7cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00EF
        gbc.setState(0x798f, 0x4194, 0x8a50, 0xd33b, 0xc8cf, 0x12fa, 0x0, 0x0);
        gbc.writeMem(0x798f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4194);
        EXPECT(gbc.pc(), 0x7991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00F0
        gbc.setState(0x35fe, 0x633e, 0xf730, 0x37b0, 0x4f1a, 0x32a6, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x633e);
        EXPECT(gbc.pc(), 0x3600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00F1
        gbc.setState(0xefb8, 0x2aa6, 0x3de0, 0xf772, 0xb372, 0x9901, 0x1, 0x0);
        gbc.writeMem(0xefb8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2aa6);
        EXPECT(gbc.pc(), 0xefba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb8), 0xcb);
        EXPECT(gbc.readMem(0xefb9), 0xbd);
        // CB BD 00F2
        gbc.setState(0xb47f, 0xee67, 0x3d90, 0x1271, 0x8beb, 0x5e2, 0x1, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee67);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0xbd);
        // CB BD 00F3
        gbc.setState(0xdbf5, 0x3de9, 0xeac0, 0x527d, 0xc7c, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0xdbf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3de9);
        EXPECT(gbc.pc(), 0xdbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf5), 0xcb);
        EXPECT(gbc.readMem(0xdbf6), 0xbd);
        // CB BD 00F4
        gbc.setState(0xb227, 0x996d, 0x73b0, 0x96bc, 0xb957, 0xea5d, 0x0, 0x1);
        gbc.writeMem(0xb227, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x996d);
        EXPECT(gbc.pc(), 0xb229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb227), 0xcb);
        EXPECT(gbc.readMem(0xb228), 0xbd);
        // CB BD 00F5
        gbc.setState(0x68ec, 0x19a8, 0xa060, 0x8f58, 0xa64f, 0x356a, 0x0, 0x0);
        gbc.writeMem(0x68ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x19a8);
        EXPECT(gbc.pc(), 0x68ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00F6
        gbc.setState(0xdf3c, 0xca96, 0x2e30, 0xc3b, 0xa5a8, 0x36f4, 0x0, 0x1);
        gbc.writeMem(0xdf3c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xca96);
        EXPECT(gbc.pc(), 0xdf3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3c), 0xcb);
        EXPECT(gbc.readMem(0xdf3d), 0xbd);
        // CB BD 00F9
        gbc.setState(0x5d73, 0xc5bb, 0x1970, 0x39e6, 0x460b, 0xcb, 0x1, 0x1);
        gbc.writeMem(0x5d73, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc5bb);
        EXPECT(gbc.pc(), 0x5d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 00FA
        gbc.setState(0xb428, 0xfe56, 0x2340, 0xf5e1, 0xd6b6, 0x8ddf, 0x0, 0x1);
        gbc.writeMem(0xb428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfe56);
        EXPECT(gbc.pc(), 0xb42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb428), 0xcb);
        EXPECT(gbc.readMem(0xb429), 0xbd);
        // CB BD 00FB
        gbc.setState(0x1962, 0x4c4b, 0x8a40, 0xd74f, 0xaf81, 0xca91, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4c4b);
        EXPECT(gbc.pc(), 0x1964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00FC
        gbc.setState(0x360c, 0x168d, 0x5280, 0x8934, 0x744a, 0x4333, 0x0, 0x1);
        gbc.writeMem(0x360c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x168d);
        EXPECT(gbc.pc(), 0x360e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00FD
        gbc.setState(0x45ce, 0x31f1, 0xcde0, 0x5218, 0x8687, 0x5d08, 0x1, 0x0);
        gbc.writeMem(0x45ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x31f1);
        EXPECT(gbc.pc(), 0x45d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 00FE
        gbc.setState(0xb82d, 0xc0d0, 0x4740, 0x4325, 0x670d, 0xc5c0, 0x0, 0x1);
        gbc.writeMem(0xb82d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc0d0);
        EXPECT(gbc.pc(), 0xb82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82d), 0xcb);
        EXPECT(gbc.readMem(0xb82e), 0xbd);
        // CB BD 00FF
        gbc.setState(0xe95b, 0x9672, 0x2670, 0x626c, 0x91c3, 0x198f, 0x0, 0x0);
        gbc.writeMem(0xe95b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9672);
        EXPECT(gbc.pc(), 0xe95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95b), 0xcb);
        EXPECT(gbc.readMem(0xe95c), 0xbd);
        // CB BD 0100
        gbc.setState(0x352f, 0x7d68, 0x8020, 0x7c89, 0xd431, 0x95cb, 0x1, 0x0);
        gbc.writeMem(0x352f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7d68);
        EXPECT(gbc.pc(), 0x3531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0103
        gbc.setState(0xef46, 0xc1ab, 0x9270, 0xa402, 0x4bac, 0x8d16, 0x0, 0x0);
        gbc.writeMem(0xef46, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc1ab);
        EXPECT(gbc.pc(), 0xef48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef46), 0xcb);
        EXPECT(gbc.readMem(0xef47), 0xbd);
        // CB BD 0104
        gbc.setState(0xbbd8, 0x9f97, 0xa90, 0x8d07, 0x267b, 0xa32e, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9f97);
        EXPECT(gbc.pc(), 0xbbda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd8), 0xcb);
        EXPECT(gbc.readMem(0xbbd9), 0xbd);
        // CB BD 0105
        gbc.setState(0xb3aa, 0x9d35, 0x5c0, 0xc2c4, 0xcb46, 0x79df, 0x0, 0x1);
        gbc.writeMem(0xb3aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9d35);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3aa), 0xcb);
        EXPECT(gbc.readMem(0xb3ab), 0xbd);
        // CB BD 0106
        gbc.setState(0x31de, 0x8afd, 0x96d0, 0xf6e0, 0xaf2c, 0xf763, 0x1, 0x1);
        gbc.writeMem(0x31de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8afd);
        EXPECT(gbc.pc(), 0x31e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0107
        gbc.setState(0x28b2, 0x1661, 0x6280, 0x3069, 0xab74, 0xd199, 0x1, 0x0);
        gbc.writeMem(0x28b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1661);
        EXPECT(gbc.pc(), 0x28b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0108
        gbc.setState(0x5d13, 0x8a19, 0xfc40, 0x74a1, 0xe839, 0x8960, 0x1, 0x1);
        gbc.writeMem(0x5d13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8a19);
        EXPECT(gbc.pc(), 0x5d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0109
        gbc.setState(0x9fed, 0xaf7c, 0xa0e0, 0x5e32, 0xdadd, 0xc605, 0x0, 0x0);
        gbc.writeMem(0x9fed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaf7c);
        EXPECT(gbc.pc(), 0x9fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fed), 0xcb);
        EXPECT(gbc.readMem(0x9fee), 0xbd);
        // CB BD 010A
        gbc.setState(0x6501, 0xc7c8, 0xdf50, 0x922, 0x378b, 0x81d8, 0x1, 0x1);
        gbc.writeMem(0x6501, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc7c8);
        EXPECT(gbc.pc(), 0x6503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 010B
        gbc.setState(0x2cb5, 0x87bc, 0xb320, 0x4934, 0x5325, 0x8a6d, 0x0, 0x1);
        gbc.writeMem(0x2cb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x87bc);
        EXPECT(gbc.pc(), 0x2cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 010C
        gbc.setState(0xd933, 0x14b5, 0x5a20, 0x5d05, 0xd587, 0xaca8, 0x1, 0x0);
        gbc.writeMem(0xd933, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0xd935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd933), 0xcb);
        EXPECT(gbc.readMem(0xd934), 0xbd);
        // CB BD 010D
        gbc.setState(0x87eb, 0xc934, 0xae50, 0x9479, 0xefcf, 0x7102, 0x1, 0x0);
        gbc.writeMem(0x87eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc934);
        EXPECT(gbc.pc(), 0x87ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87eb), 0xcb);
        EXPECT(gbc.readMem(0x87ec), 0xbd);
        // CB BD 010E
        gbc.setState(0x3e83, 0xcb36, 0xfe50, 0xbe46, 0x97e7, 0x419f, 0x1, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcb36);
        EXPECT(gbc.pc(), 0x3e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 010F
        gbc.setState(0x932f, 0x3f4, 0xa3f0, 0x563a, 0x6a10, 0x99a8, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0x9331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932f), 0xcb);
        EXPECT(gbc.readMem(0x9330), 0xbd);
        // CB BD 0110
        gbc.setState(0x5167, 0x18c1, 0xba70, 0x813d, 0xb103, 0xab14, 0x0, 0x1);
        gbc.writeMem(0x5167, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x18c1);
        EXPECT(gbc.pc(), 0x5169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0111
        gbc.setState(0x1817, 0xcca6, 0xe140, 0x78f6, 0x872c, 0xfdec, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcca6);
        EXPECT(gbc.pc(), 0x1819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0112
        gbc.setState(0x6e5e, 0xce48, 0x1be0, 0x2eed, 0xe797, 0xb98b, 0x0, 0x0);
        gbc.writeMem(0x6e5e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xce48);
        EXPECT(gbc.pc(), 0x6e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0113
        gbc.setState(0x154a, 0xa66, 0x8160, 0x25a6, 0x77df, 0x3408, 0x0, 0x0);
        gbc.writeMem(0x154a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa66);
        EXPECT(gbc.pc(), 0x154c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0114
        gbc.setState(0xeb63, 0x294a, 0xa50, 0x57f0, 0xed72, 0xe687, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x294a);
        EXPECT(gbc.pc(), 0xeb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb63), 0xcb);
        EXPECT(gbc.readMem(0xeb64), 0xbd);
        // CB BD 0115
        gbc.setState(0x3bbb, 0x70bb, 0x9ed0, 0xdc9d, 0xdfea, 0x3b8a, 0x1, 0x1);
        gbc.writeMem(0x3bbb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x70bb);
        EXPECT(gbc.pc(), 0x3bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0117
        gbc.setState(0x1ee3, 0xb140, 0xd330, 0x8ae7, 0xdb45, 0x361a, 0x1, 0x1);
        gbc.writeMem(0x1ee3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb140);
        EXPECT(gbc.pc(), 0x1ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0118
        gbc.setState(0x8ab8, 0x6711, 0x4180, 0xf347, 0x6095, 0x471, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6711);
        EXPECT(gbc.pc(), 0x8aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab8), 0xcb);
        EXPECT(gbc.readMem(0x8ab9), 0xbd);
        // CB BD 0119
        gbc.setState(0x68ea, 0x7882, 0xd530, 0x1e66, 0xb81, 0x8b55, 0x1, 0x1);
        gbc.writeMem(0x68ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0x68ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 011A
        gbc.setState(0x6341, 0xc691, 0xf710, 0x9b8a, 0x8f65, 0x1b13, 0x0, 0x1);
        gbc.writeMem(0x6341, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc691);
        EXPECT(gbc.pc(), 0x6343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 011B
        gbc.setState(0x32d, 0x9e74, 0x5f20, 0xb761, 0x5e5c, 0x6c56, 0x0, 0x0);
        gbc.writeMem(0x32d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9e74);
        EXPECT(gbc.pc(), 0x32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 011C
        gbc.setState(0x8dc4, 0x5a32, 0x18f0, 0xa6b3, 0x31aa, 0xb5f2, 0x1, 0x0);
        gbc.writeMem(0x8dc4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5a32);
        EXPECT(gbc.pc(), 0x8dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc4), 0xcb);
        EXPECT(gbc.readMem(0x8dc5), 0xbd);
        // CB BD 011D
        gbc.setState(0xe121, 0x242e, 0x2bc0, 0x1db0, 0x33b0, 0x3a95, 0x0, 0x1);
        gbc.writeMem(0xe121, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x242e);
        EXPECT(gbc.pc(), 0xe123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe121), 0xcb);
        EXPECT(gbc.readMem(0xe122), 0xbd);
        // CB BD 011E
        gbc.setState(0x764e, 0xfb74, 0xafc0, 0x1f1c, 0xe1bc, 0x8e1d, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfb74);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 011F
        gbc.setState(0x1556, 0xcd6e, 0xb4f0, 0xfc66, 0x2e13, 0x278a, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcd6e);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0120
        gbc.setState(0x9226, 0x9c1f, 0xe70, 0x6b3e, 0x1a00, 0x30ad, 0x0, 0x1);
        gbc.writeMem(0x9226, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9c1f);
        EXPECT(gbc.pc(), 0x9228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9226), 0xcb);
        EXPECT(gbc.readMem(0x9227), 0xbd);
        // CB BD 0121
        gbc.setState(0xcea9, 0x5a0a, 0xdba0, 0xdeb0, 0xbe0b, 0xa486, 0x1, 0x1);
        gbc.writeMem(0xcea9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5a0a);
        EXPECT(gbc.pc(), 0xceab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea9), 0xcb);
        EXPECT(gbc.readMem(0xceaa), 0xbd);
        // CB BD 0122
        gbc.setState(0x6b5d, 0xeeb4, 0xe2b0, 0x62c0, 0x9391, 0x4a03, 0x0, 0x0);
        gbc.writeMem(0x6b5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xeeb4);
        EXPECT(gbc.pc(), 0x6b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0123
        gbc.setState(0x5cf5, 0x13de, 0x56a0, 0xc725, 0xc135, 0xc88f, 0x1, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x13de);
        EXPECT(gbc.pc(), 0x5cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0124
        gbc.setState(0xa47d, 0x76e6, 0x67f0, 0xf8a, 0x5d34, 0x194f, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x76e6);
        EXPECT(gbc.pc(), 0xa47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47d), 0xcb);
        EXPECT(gbc.readMem(0xa47e), 0xbd);
        // CB BD 0125
        gbc.setState(0x1bfa, 0xc8db, 0x4030, 0xbccb, 0x1017, 0x298b, 0x1, 0x1);
        gbc.writeMem(0x1bfa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc8db);
        EXPECT(gbc.pc(), 0x1bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0126
        gbc.setState(0x32a6, 0xeb4e, 0x670, 0x5c43, 0xdbc7, 0x1f54, 0x1, 0x1);
        gbc.writeMem(0x32a6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeb4e);
        EXPECT(gbc.pc(), 0x32a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0127
        gbc.setState(0xcafe, 0xf6e6, 0x9550, 0x8ca5, 0x88d, 0xadd1, 0x1, 0x1);
        gbc.writeMem(0xcafe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf6e6);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafe), 0xcb);
        EXPECT(gbc.readMem(0xcaff), 0xbd);
        // CB BD 0128
        gbc.setState(0x42f0, 0x6018, 0xb80, 0x9787, 0x971b, 0x3b18, 0x0, 0x0);
        gbc.writeMem(0x42f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6018);
        EXPECT(gbc.pc(), 0x42f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0129
        gbc.setState(0x4b54, 0x6ff9, 0x9d40, 0x8d87, 0xdfdd, 0xe94c, 0x0, 0x1);
        gbc.writeMem(0x4b54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x4b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 012A
        gbc.setState(0xab76, 0xe6b5, 0x7620, 0x7599, 0xe790, 0xf62c, 0x0, 0x1);
        gbc.writeMem(0xab76, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe6b5);
        EXPECT(gbc.pc(), 0xab78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab76), 0xcb);
        EXPECT(gbc.readMem(0xab77), 0xbd);
        // CB BD 012B
        gbc.setState(0xe856, 0x6081, 0xe7a0, 0xdc21, 0xdf3a, 0xb872, 0x0, 0x1);
        gbc.writeMem(0xe856, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6081);
        EXPECT(gbc.pc(), 0xe858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe856), 0xcb);
        EXPECT(gbc.readMem(0xe857), 0xbd);
        // CB BD 012C
        gbc.setState(0x9bda, 0xbb4b, 0xf360, 0x5bea, 0x3910, 0xaca3, 0x1, 0x1);
        gbc.writeMem(0x9bda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbb4b);
        EXPECT(gbc.pc(), 0x9bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bda), 0xcb);
        EXPECT(gbc.readMem(0x9bdb), 0xbd);
        // CB BD 012D
        gbc.setState(0x757a, 0xf32b, 0x3ea0, 0x67b3, 0x5fff, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x757a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0x757c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 012E
        gbc.setState(0x52ec, 0x92bb, 0x41c0, 0x95ba, 0x9f54, 0x4051, 0x1, 0x0);
        gbc.writeMem(0x52ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x92bb);
        EXPECT(gbc.pc(), 0x52ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 012F
        gbc.setState(0xa15d, 0x7d2b, 0x57a0, 0xf558, 0x4d22, 0x1878, 0x1, 0x0);
        gbc.writeMem(0xa15d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7d2b);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15d), 0xcb);
        EXPECT(gbc.readMem(0xa15e), 0xbd);
        // CB BD 0130
        gbc.setState(0x57c2, 0xb48e, 0xae00, 0xd108, 0x5e73, 0x5cf, 0x1, 0x0);
        gbc.writeMem(0x57c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb48e);
        EXPECT(gbc.pc(), 0x57c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0131
        gbc.setState(0x972f, 0xe8b, 0x7280, 0x4a3, 0x3aac, 0x860c, 0x1, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe8b);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0xbd);
        // CB BD 0132
        gbc.setState(0xb6cc, 0x12d4, 0xe4e0, 0x7f33, 0x8fb4, 0x15bc, 0x1, 0x0);
        gbc.writeMem(0xb6cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x12d4);
        EXPECT(gbc.pc(), 0xb6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cc), 0xcb);
        EXPECT(gbc.readMem(0xb6cd), 0xbd);
        // CB BD 0133
        gbc.setState(0xc4bf, 0x82c5, 0xb0f0, 0xa9ba, 0x4e38, 0xd62a, 0x1, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x82c5);
        EXPECT(gbc.pc(), 0xc4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bf), 0xcb);
        EXPECT(gbc.readMem(0xc4c0), 0xbd);
        // CB BD 0134
        gbc.setState(0x42ab, 0x6610, 0x3a80, 0x3ef2, 0x8b95, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x42ab, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6610);
        EXPECT(gbc.pc(), 0x42ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0135
        gbc.setState(0x5517, 0xbe05, 0xc240, 0x7fcb, 0x3f51, 0x7479, 0x1, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbe05);
        EXPECT(gbc.pc(), 0x5519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0136
        gbc.setState(0x594f, 0x9efd, 0x1720, 0x86e1, 0x2df6, 0x351a, 0x1, 0x1);
        gbc.writeMem(0x594f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9efd);
        EXPECT(gbc.pc(), 0x5951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0137
        gbc.setState(0x769, 0xaf5c, 0x5c90, 0xa96f, 0xb8a0, 0xb397, 0x0, 0x1);
        gbc.writeMem(0x769, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xaf5c);
        EXPECT(gbc.pc(), 0x76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0138
        gbc.setState(0xdc7, 0x2c30, 0x73f0, 0x44fd, 0xdbf6, 0xa2b1, 0x0, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2c30);
        EXPECT(gbc.pc(), 0xdc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0139
        gbc.setState(0xe156, 0x66e2, 0x8310, 0x596, 0xc7ca, 0x2179, 0x1, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x66e2);
        EXPECT(gbc.pc(), 0xe158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe156), 0xcb);
        EXPECT(gbc.readMem(0xe157), 0xbd);
        // CB BD 013A
        gbc.setState(0x74e5, 0x5aa9, 0xbca0, 0x9076, 0xe06e, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0x74e5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5aa9);
        EXPECT(gbc.pc(), 0x74e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 013B
        gbc.setState(0x77e2, 0x1ad7, 0xf5f0, 0x310c, 0xadcc, 0x5a1, 0x0, 0x0);
        gbc.writeMem(0x77e2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1ad7);
        EXPECT(gbc.pc(), 0x77e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 013C
        gbc.setState(0xc77, 0x9a1c, 0x1bf0, 0xfef0, 0xe1d8, 0x1f7a, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9a1c);
        EXPECT(gbc.pc(), 0xc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 013D
        gbc.setState(0x82b4, 0xf09f, 0xd130, 0x4104, 0xf732, 0xe9c3, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf09f);
        EXPECT(gbc.pc(), 0x82b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b4), 0xcb);
        EXPECT(gbc.readMem(0x82b5), 0xbd);
        // CB BD 013E
        gbc.setState(0x9f39, 0x733d, 0xf150, 0x7fb8, 0x4d47, 0x837, 0x0, 0x1);
        gbc.writeMem(0x9f39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x733d);
        EXPECT(gbc.pc(), 0x9f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f39), 0xcb);
        EXPECT(gbc.readMem(0x9f3a), 0xbd);
        // CB BD 0140
        gbc.setState(0x293e, 0x1c37, 0xbf20, 0x1a84, 0x7093, 0xe107, 0x1, 0x0);
        gbc.writeMem(0x293e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1c37);
        EXPECT(gbc.pc(), 0x2940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0141
        gbc.setState(0x35cc, 0x4624, 0xd3c0, 0x106b, 0xaaf8, 0x41e1, 0x1, 0x1);
        gbc.writeMem(0x35cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4624);
        EXPECT(gbc.pc(), 0x35ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0142
        gbc.setState(0x266d, 0x1e64, 0xc1e0, 0x2d6a, 0xedfd, 0x5722, 0x0, 0x0);
        gbc.writeMem(0x266d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1e64);
        EXPECT(gbc.pc(), 0x266f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0143
        gbc.setState(0x86fb, 0x5769, 0x4c60, 0x2a52, 0x8d28, 0x2ba1, 0x0, 0x1);
        gbc.writeMem(0x86fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5769);
        EXPECT(gbc.pc(), 0x86fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fb), 0xcb);
        EXPECT(gbc.readMem(0x86fc), 0xbd);
        // CB BD 0144
        gbc.setState(0x600a, 0x95f5, 0x280, 0x62cc, 0xb0df, 0x9c46, 0x1, 0x0);
        gbc.writeMem(0x600a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x95f5);
        EXPECT(gbc.pc(), 0x600c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0145
        gbc.setState(0x490a, 0x97a0, 0x90e0, 0x1071, 0x7610, 0x165a, 0x1, 0x1);
        gbc.writeMem(0x490a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x97a0);
        EXPECT(gbc.pc(), 0x490c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0147
        gbc.setState(0xa952, 0xed5f, 0x20a0, 0xd43e, 0x187e, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0xa952, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xed5f);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0xbd);
        // CB BD 0148
        gbc.setState(0x2a8c, 0x401a, 0x39c0, 0x2c08, 0x969, 0x33b6, 0x0, 0x1);
        gbc.writeMem(0x2a8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x401a);
        EXPECT(gbc.pc(), 0x2a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0149
        gbc.setState(0x3b39, 0x2637, 0x6780, 0xe4a0, 0x2479, 0xdce1, 0x0, 0x0);
        gbc.writeMem(0x3b39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2637);
        EXPECT(gbc.pc(), 0x3b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 014A
        gbc.setState(0x5edb, 0x656, 0xaff0, 0x3d20, 0x9a6f, 0x83a4, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x656);
        EXPECT(gbc.pc(), 0x5edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 014B
        gbc.setState(0x81a, 0x4a24, 0xa3a0, 0xd0cc, 0xc4b, 0x2e03, 0x0, 0x0);
        gbc.writeMem(0x81a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4a24);
        EXPECT(gbc.pc(), 0x81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 014C
        gbc.setState(0x69d, 0xd476, 0x2c60, 0xce6, 0xdd6b, 0x4bbd, 0x0, 0x0);
        gbc.writeMem(0x69d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd476);
        EXPECT(gbc.pc(), 0x69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 014E
        gbc.setState(0x9677, 0x5853, 0x8190, 0x7a75, 0x5df2, 0x9f4, 0x1, 0x1);
        gbc.writeMem(0x9677, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5853);
        EXPECT(gbc.pc(), 0x9679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9677), 0xcb);
        EXPECT(gbc.readMem(0x9678), 0xbd);
        // CB BD 014F
        gbc.setState(0x8db3, 0xd27a, 0x3980, 0x6dd8, 0x8302, 0x2624, 0x0, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd27a);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0xbd);
        // CB BD 0150
        gbc.setState(0xa792, 0x689b, 0xa590, 0x1b76, 0x534f, 0x7ce7, 0x1, 0x1);
        gbc.writeMem(0xa792, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0xa794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa792), 0xcb);
        EXPECT(gbc.readMem(0xa793), 0xbd);
        // CB BD 0152
        gbc.setState(0x6016, 0x67f5, 0xb180, 0xde82, 0x43c1, 0x15cb, 0x0, 0x1);
        gbc.writeMem(0x6016, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x67f5);
        EXPECT(gbc.pc(), 0x6018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0153
        gbc.setState(0x41f7, 0xa2a, 0x6680, 0x1335, 0x3d, 0x14c0, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa2a);
        EXPECT(gbc.pc(), 0x41f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0154
        gbc.setState(0x4895, 0x1b25, 0x9f70, 0xc58d, 0x8d81, 0xeb70, 0x0, 0x0);
        gbc.writeMem(0x4895, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1b25);
        EXPECT(gbc.pc(), 0x4897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0155
        gbc.setState(0x7bbb, 0xb31a, 0xd140, 0x6364, 0xb061, 0x501e, 0x0, 0x1);
        gbc.writeMem(0x7bbb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb31a);
        EXPECT(gbc.pc(), 0x7bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0156
        gbc.setState(0xcc81, 0x7260, 0x6150, 0x408e, 0x21cf, 0xa73e, 0x0, 0x0);
        gbc.writeMem(0xcc81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7260);
        EXPECT(gbc.pc(), 0xcc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc81), 0xcb);
        EXPECT(gbc.readMem(0xcc82), 0xbd);
        // CB BD 0157
        gbc.setState(0x5bc7, 0x7dc9, 0xc4e0, 0x2591, 0x2077, 0xbe12, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7dc9);
        EXPECT(gbc.pc(), 0x5bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0158
        gbc.setState(0xdba3, 0xe02b, 0x1310, 0xb75f, 0x3327, 0x2bcd, 0x1, 0x0);
        gbc.writeMem(0xdba3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe02b);
        EXPECT(gbc.pc(), 0xdba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba3), 0xcb);
        EXPECT(gbc.readMem(0xdba4), 0xbd);
        // CB BD 0159
        gbc.setState(0xd0f2, 0xd65d, 0x3790, 0x6fe3, 0xcbc4, 0x1045, 0x0, 0x1);
        gbc.writeMem(0xd0f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd65d);
        EXPECT(gbc.pc(), 0xd0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f2), 0xcb);
        EXPECT(gbc.readMem(0xd0f3), 0xbd);
        // CB BD 015A
        gbc.setState(0xbce2, 0x7961, 0xb0f0, 0x37bb, 0x3298, 0x598f, 0x0, 0x0);
        gbc.writeMem(0xbce2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7961);
        EXPECT(gbc.pc(), 0xbce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce2), 0xcb);
        EXPECT(gbc.readMem(0xbce3), 0xbd);
        // CB BD 015B
        gbc.setState(0x4e0f, 0xba02, 0x6520, 0x20c1, 0xb514, 0x34fe, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xba02);
        EXPECT(gbc.pc(), 0x4e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 015D
        gbc.setState(0x4f5b, 0x75a3, 0xe80, 0xac36, 0x5992, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x75a3);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 015E
        gbc.setState(0x1d5a, 0x2c70, 0x8150, 0x3319, 0xfc11, 0xc837, 0x0, 0x1);
        gbc.writeMem(0x1d5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2c70);
        EXPECT(gbc.pc(), 0x1d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0160
        gbc.setState(0xb98c, 0x2480, 0x2e70, 0xd9d7, 0x6647, 0x49de, 0x1, 0x1);
        gbc.writeMem(0xb98c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2480);
        EXPECT(gbc.pc(), 0xb98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98c), 0xcb);
        EXPECT(gbc.readMem(0xb98d), 0xbd);
        // CB BD 0162
        gbc.setState(0x266d, 0x831e, 0xefc0, 0xe0f5, 0x2b3a, 0x9234, 0x1, 0x1);
        gbc.writeMem(0x266d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x831e);
        EXPECT(gbc.pc(), 0x266f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0163
        gbc.setState(0x6e8c, 0x3c77, 0xec00, 0xa6f2, 0x4ffb, 0xf8b7, 0x0, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3c77);
        EXPECT(gbc.pc(), 0x6e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0164
        gbc.setState(0xe1c4, 0xd458, 0x6230, 0x1c9c, 0x2223, 0xe12b, 0x1, 0x1);
        gbc.writeMem(0xe1c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0xe1c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c4), 0xcb);
        EXPECT(gbc.readMem(0xe1c5), 0xbd);
        // CB BD 0165
        gbc.setState(0x19fe, 0x4a7f, 0x4230, 0x57c, 0x6c2, 0x2dee, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4a7f);
        EXPECT(gbc.pc(), 0x1a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0166
        gbc.setState(0xc665, 0x7459, 0xbe90, 0xb58c, 0xd89b, 0x8865, 0x0, 0x0);
        gbc.writeMem(0xc665, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7459);
        EXPECT(gbc.pc(), 0xc667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc665), 0xcb);
        EXPECT(gbc.readMem(0xc666), 0xbd);
        // CB BD 0167
        gbc.setState(0x59fd, 0x193b, 0x5380, 0xdc5d, 0xe952, 0x5168, 0x1, 0x0);
        gbc.writeMem(0x59fd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x193b);
        EXPECT(gbc.pc(), 0x59ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0168
        gbc.setState(0x287c, 0xcb4, 0x5f60, 0x1e23, 0xc367, 0x5661, 0x1, 0x0);
        gbc.writeMem(0x287c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcb4);
        EXPECT(gbc.pc(), 0x287e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0169
        gbc.setState(0x12b9, 0x1019, 0xedc0, 0x3959, 0x528, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x12b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0x12bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 016A
        gbc.setState(0xea28, 0xd7e8, 0xbf40, 0x8242, 0xafe8, 0xc5fc, 0x0, 0x1);
        gbc.writeMem(0xea28, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0xea2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea28), 0xcb);
        EXPECT(gbc.readMem(0xea29), 0xbd);
        // CB BD 016B
        gbc.setState(0x555d, 0x662c, 0xd4d0, 0x1c5c, 0x7332, 0xf1f, 0x1, 0x1);
        gbc.writeMem(0x555d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x662c);
        EXPECT(gbc.pc(), 0x555f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 016C
        gbc.setState(0xa4d8, 0xbe0a, 0xd320, 0xcb4a, 0xa779, 0x6131, 0x0, 0x1);
        gbc.writeMem(0xa4d8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe0a);
        EXPECT(gbc.pc(), 0xa4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d8), 0xcb);
        EXPECT(gbc.readMem(0xa4d9), 0xbd);
        // CB BD 016D
        gbc.setState(0x5ffa, 0x6b7, 0x45c0, 0xe53, 0x5868, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x5ffa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6b7);
        EXPECT(gbc.pc(), 0x5ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 016E
        gbc.setState(0x10f0, 0xf282, 0xee40, 0xde08, 0x75, 0x1cec, 0x1, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf282);
        EXPECT(gbc.pc(), 0x10f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 016F
        gbc.setState(0x5925, 0x5733, 0xcca0, 0xeca3, 0x7ce, 0x5918, 0x0, 0x0);
        gbc.writeMem(0x5925, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5733);
        EXPECT(gbc.pc(), 0x5927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0170
        gbc.setState(0xde9f, 0xd013, 0x1620, 0x204c, 0x5eb1, 0x4e02, 0x1, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd013);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xcb);
        EXPECT(gbc.readMem(0xdea0), 0xbd);
        // CB BD 0171
        gbc.setState(0x635e, 0xf644, 0x2200, 0xff2b, 0x199d, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x635e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf644);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0173
        gbc.setState(0xb1d0, 0x95cb, 0x1420, 0x1420, 0x1123, 0x756a, 0x0, 0x0);
        gbc.writeMem(0xb1d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x95cb);
        EXPECT(gbc.pc(), 0xb1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d0), 0xcb);
        EXPECT(gbc.readMem(0xb1d1), 0xbd);
        // CB BD 0176
        gbc.setState(0x6412, 0xfc5, 0xfcf0, 0x5bc, 0x716f, 0x4e02, 0x1, 0x0);
        gbc.writeMem(0x6412, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfc5);
        EXPECT(gbc.pc(), 0x6414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0178
        gbc.setState(0x5436, 0x4b22, 0x5630, 0x7f10, 0xe7e2, 0x3cd6, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4b22);
        EXPECT(gbc.pc(), 0x5438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0179
        gbc.setState(0xcc8c, 0xb771, 0x69d0, 0x9e4b, 0xa9e2, 0x2465, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0xbd);
        // CB BD 017A
        gbc.setState(0x9462, 0xd42a, 0x8b00, 0x6da7, 0xc9d8, 0xdf33, 0x1, 0x1);
        gbc.writeMem(0x9462, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd42a);
        EXPECT(gbc.pc(), 0x9464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9462), 0xcb);
        EXPECT(gbc.readMem(0x9463), 0xbd);
        // CB BD 017B
        gbc.setState(0x3e1f, 0xb7f, 0x9b40, 0x8e1e, 0x664e, 0x4bb2, 0x1, 0x1);
        gbc.writeMem(0x3e1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb7f);
        EXPECT(gbc.pc(), 0x3e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 017C
        gbc.setState(0x4682, 0x9d2f, 0x1580, 0x4ab2, 0xabac, 0x272b, 0x0, 0x0);
        gbc.writeMem(0x4682, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0x4684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 017D
        gbc.setState(0xcfc6, 0x71e6, 0xa860, 0x6df1, 0x583a, 0xea8, 0x1, 0x0);
        gbc.writeMem(0xcfc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x71e6);
        EXPECT(gbc.pc(), 0xcfc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc6), 0xcb);
        EXPECT(gbc.readMem(0xcfc7), 0xbd);
        // CB BD 017E
        gbc.setState(0xb428, 0xb197, 0x7ee0, 0x88c2, 0x3fc0, 0x46b3, 0x1, 0x1);
        gbc.writeMem(0xb428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb197);
        EXPECT(gbc.pc(), 0xb42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb428), 0xcb);
        EXPECT(gbc.readMem(0xb429), 0xbd);
        // CB BD 017F
        gbc.setState(0x1f17, 0x5267, 0x5bf0, 0xc8ef, 0xcd2, 0xa59f, 0x0, 0x1);
        gbc.writeMem(0x1f17, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5267);
        EXPECT(gbc.pc(), 0x1f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0180
        gbc.setState(0x3c84, 0xdc80, 0x8870, 0x7b20, 0x3c1f, 0x645f, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdc80);
        EXPECT(gbc.pc(), 0x3c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0181
        gbc.setState(0x9555, 0x58b9, 0xe890, 0xb2f3, 0x648f, 0xbc2e, 0x0, 0x1);
        gbc.writeMem(0x9555, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x58b9);
        EXPECT(gbc.pc(), 0x9557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9555), 0xcb);
        EXPECT(gbc.readMem(0x9556), 0xbd);
        // CB BD 0182
        gbc.setState(0xd6bb, 0x6928, 0xc3c0, 0x2c53, 0xce65, 0x7ad8, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6928);
        EXPECT(gbc.pc(), 0xd6bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6bb), 0xcb);
        EXPECT(gbc.readMem(0xd6bc), 0xbd);
        // CB BD 0183
        gbc.setState(0xcac2, 0x36d3, 0x3b0, 0x12da, 0x9cfa, 0xddf6, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x36d3);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac2), 0xcb);
        EXPECT(gbc.readMem(0xcac3), 0xbd);
        // CB BD 0184
        gbc.setState(0x4847, 0x8919, 0x3980, 0x992d, 0x4f7b, 0x8ba3, 0x1, 0x1);
        gbc.writeMem(0x4847, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0x4849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0185
        gbc.setState(0x4a1f, 0x1c57, 0x6080, 0xe5c9, 0x1686, 0xfe84, 0x1, 0x0);
        gbc.writeMem(0x4a1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1c57);
        EXPECT(gbc.pc(), 0x4a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0186
        gbc.setState(0x1279, 0xe68c, 0x2e60, 0x3e85, 0x9f7e, 0x19bd, 0x1, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe68c);
        EXPECT(gbc.pc(), 0x127b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0187
        gbc.setState(0x5e8c, 0x6ce2, 0x27d0, 0x296, 0x8d25, 0xa113, 0x0, 0x1);
        gbc.writeMem(0x5e8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6ce2);
        EXPECT(gbc.pc(), 0x5e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0188
        gbc.setState(0x80fb, 0x1e1c, 0xe2b0, 0xc66, 0xabf5, 0x68eb, 0x0, 0x1);
        gbc.writeMem(0x80fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1e1c);
        EXPECT(gbc.pc(), 0x80fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80fb), 0xcb);
        EXPECT(gbc.readMem(0x80fc), 0xbd);
        // CB BD 0189
        gbc.setState(0x4354, 0x528c, 0x6690, 0x76d8, 0xb728, 0x5aba, 0x1, 0x0);
        gbc.writeMem(0x4354, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x528c);
        EXPECT(gbc.pc(), 0x4356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 018A
        gbc.setState(0xb47a, 0x174f, 0x43c0, 0x19c1, 0x6cad, 0xbabc, 0x0, 0x1);
        gbc.writeMem(0xb47a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x174f);
        EXPECT(gbc.pc(), 0xb47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47a), 0xcb);
        EXPECT(gbc.readMem(0xb47b), 0xbd);
        // CB BD 018B
        gbc.setState(0x29cb, 0x7236, 0x25b0, 0x87c1, 0x6ca8, 0xaaed, 0x0, 0x0);
        gbc.writeMem(0x29cb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0x29cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 018C
        gbc.setState(0x5529, 0x4db9, 0x46e0, 0xdf40, 0x8931, 0xe52a, 0x0, 0x1);
        gbc.writeMem(0x5529, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4db9);
        EXPECT(gbc.pc(), 0x552b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 018D
        gbc.setState(0xcd09, 0x5c18, 0x8830, 0x318e, 0x8c1, 0xd774, 0x0, 0x1);
        gbc.writeMem(0xcd09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5c18);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd09), 0xcb);
        EXPECT(gbc.readMem(0xcd0a), 0xbd);
        // CB BD 018E
        gbc.setState(0xceda, 0xfbed, 0x18d0, 0xa0d8, 0x7c86, 0xa8f9, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfbed);
        EXPECT(gbc.pc(), 0xcedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceda), 0xcb);
        EXPECT(gbc.readMem(0xcedb), 0xbd);
        // CB BD 018F
        gbc.setState(0xbc2a, 0x41db, 0x5f70, 0xb772, 0x3315, 0x605e, 0x0, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x41db);
        EXPECT(gbc.pc(), 0xbc2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2a), 0xcb);
        EXPECT(gbc.readMem(0xbc2b), 0xbd);
        // CB BD 0190
        gbc.setState(0x9374, 0x934, 0x1a90, 0xa055, 0x633a, 0xc3ce, 0x1, 0x1);
        gbc.writeMem(0x9374, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x934);
        EXPECT(gbc.pc(), 0x9376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9374), 0xcb);
        EXPECT(gbc.readMem(0x9375), 0xbd);
        // CB BD 0191
        gbc.setState(0x404d, 0xf135, 0x6e0, 0xfb22, 0x373d, 0x8dfb, 0x0, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf135);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0192
        gbc.setState(0xe0ea, 0xd68a, 0x24d0, 0xe470, 0x9feb, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0xe0ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd68a);
        EXPECT(gbc.pc(), 0xe0ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ea), 0xcb);
        EXPECT(gbc.readMem(0xe0eb), 0xbd);
        // CB BD 0193
        gbc.setState(0xe7db, 0x75f9, 0x25a0, 0x37fd, 0x55dc, 0xea1b, 0x1, 0x0);
        gbc.writeMem(0xe7db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x75f9);
        EXPECT(gbc.pc(), 0xe7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7db), 0xcb);
        EXPECT(gbc.readMem(0xe7dc), 0xbd);
        // CB BD 0194
        gbc.setState(0xae2d, 0xa3dc, 0x4eb0, 0x9762, 0x869c, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0xae2d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa3dc);
        EXPECT(gbc.pc(), 0xae2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2d), 0xcb);
        EXPECT(gbc.readMem(0xae2e), 0xbd);
        // CB BD 0195
        gbc.setState(0x9b1, 0x33a3, 0x6d00, 0x7d2, 0x39e2, 0x480b, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x33a3);
        EXPECT(gbc.pc(), 0x9b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0196
        gbc.setState(0x6d3d, 0x859f, 0xc540, 0x5035, 0x3954, 0xc3dd, 0x0, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x859f);
        EXPECT(gbc.pc(), 0x6d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0197
        gbc.setState(0x2f6b, 0x6f1b, 0x20e0, 0x5834, 0xb334, 0x4a35, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6f1b);
        EXPECT(gbc.pc(), 0x2f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0198
        gbc.setState(0x9804, 0x2be4, 0x7ea0, 0x296d, 0x8cfd, 0xbf54, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2be4);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9804), 0xcb);
        EXPECT(gbc.readMem(0x9805), 0xbd);
        // CB BD 0199
        gbc.setState(0x2603, 0xd130, 0xbcb0, 0xa9bb, 0x9007, 0xf6a8, 0x0, 0x1);
        gbc.writeMem(0x2603, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd130);
        EXPECT(gbc.pc(), 0x2605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 019A
        gbc.setState(0x142b, 0xb7b8, 0x100, 0x8133, 0xc37, 0x755e, 0x0, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb7b8);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 019B
        gbc.setState(0x936b, 0x9ddc, 0x93e0, 0x72e, 0xfef9, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0x936b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9ddc);
        EXPECT(gbc.pc(), 0x936d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936b), 0xcb);
        EXPECT(gbc.readMem(0x936c), 0xbd);
        // CB BD 019C
        gbc.setState(0x1c4c, 0x54b4, 0x1820, 0xd02, 0xdfc5, 0x2263, 0x0, 0x1);
        gbc.writeMem(0x1c4c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x54b4);
        EXPECT(gbc.pc(), 0x1c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 019D
        gbc.setState(0x2bd7, 0x48e7, 0x7560, 0xb365, 0x549a, 0xc1b8, 0x1, 0x1);
        gbc.writeMem(0x2bd7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x48e7);
        EXPECT(gbc.pc(), 0x2bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 019E
        gbc.setState(0x764f, 0x22ea, 0x8e00, 0xfdc8, 0x6576, 0x4508, 0x0, 0x0);
        gbc.writeMem(0x764f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x22ea);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 019F
        gbc.setState(0x9439, 0x81a2, 0x77c0, 0x3f1a, 0xdcec, 0x614c, 0x1, 0x1);
        gbc.writeMem(0x9439, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x81a2);
        EXPECT(gbc.pc(), 0x943b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9439), 0xcb);
        EXPECT(gbc.readMem(0x943a), 0xbd);
        // CB BD 01A0
        gbc.setState(0x75f3, 0x5cc7, 0x8550, 0x5070, 0xf393, 0x86b9, 0x0, 0x1);
        gbc.writeMem(0x75f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5cc7);
        EXPECT(gbc.pc(), 0x75f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A1
        gbc.setState(0x6bec, 0xee5e, 0xfeb0, 0x156c, 0x9a64, 0xe9a7, 0x1, 0x0);
        gbc.writeMem(0x6bec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xee5e);
        EXPECT(gbc.pc(), 0x6bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A2
        gbc.setState(0xb652, 0x35eb, 0x20c0, 0xf592, 0x24a3, 0x8658, 0x0, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x35eb);
        EXPECT(gbc.pc(), 0xb654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb652), 0xcb);
        EXPECT(gbc.readMem(0xb653), 0xbd);
        // CB BD 01A4
        gbc.setState(0xd3af, 0x16b3, 0x2250, 0xb44d, 0x67e2, 0xe59e, 0x1, 0x1);
        gbc.writeMem(0xd3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x16b3);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3af), 0xcb);
        EXPECT(gbc.readMem(0xd3b0), 0xbd);
        // CB BD 01A5
        gbc.setState(0x4fdf, 0x6550, 0x330, 0x7bed, 0x5a88, 0x1a7, 0x0, 0x1);
        gbc.writeMem(0x4fdf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6550);
        EXPECT(gbc.pc(), 0x4fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A6
        gbc.setState(0x4865, 0xd6, 0x36b0, 0xeb58, 0xef5e, 0x23d2, 0x0, 0x1);
        gbc.writeMem(0x4865, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd6);
        EXPECT(gbc.pc(), 0x4867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A7
        gbc.setState(0x2988, 0x9eaf, 0xec30, 0x8189, 0xd0bf, 0x8418, 0x1, 0x1);
        gbc.writeMem(0x2988, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9eaf);
        EXPECT(gbc.pc(), 0x298a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A8
        gbc.setState(0x36f3, 0x706c, 0xaad0, 0x909, 0x7f38, 0x3d90, 0x1, 0x1);
        gbc.writeMem(0x36f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x706c);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01A9
        gbc.setState(0x431b, 0xdc6e, 0x25c0, 0x2ac5, 0xe3a6, 0xdeea, 0x1, 0x1);
        gbc.writeMem(0x431b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdc6e);
        EXPECT(gbc.pc(), 0x431d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01AA
        gbc.setState(0x8842, 0xa44a, 0x1f50, 0xc0f4, 0x3049, 0x864a, 0x0, 0x1);
        gbc.writeMem(0x8842, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa44a);
        EXPECT(gbc.pc(), 0x8844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8842), 0xcb);
        EXPECT(gbc.readMem(0x8843), 0xbd);
        // CB BD 01AB
        gbc.setState(0x88f6, 0x14d0, 0xabe0, 0xa6d5, 0x6b94, 0x7281, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x14d0);
        EXPECT(gbc.pc(), 0x88f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f6), 0xcb);
        EXPECT(gbc.readMem(0x88f7), 0xbd);
        // CB BD 01AC
        gbc.setState(0x30bd, 0x7ce3, 0x7440, 0x78, 0xf013, 0xdf7a, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7ce3);
        EXPECT(gbc.pc(), 0x30bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01AD
        gbc.setState(0xc7fb, 0xaa65, 0x6650, 0x7a12, 0x3677, 0xa10, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaa65);
        EXPECT(gbc.pc(), 0xc7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7fb), 0xcb);
        EXPECT(gbc.readMem(0xc7fc), 0xbd);
        // CB BD 01AE
        gbc.setState(0x4e5d, 0x2487, 0x32c0, 0xb08f, 0xead2, 0x52eb, 0x0, 0x0);
        gbc.writeMem(0x4e5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2487);
        EXPECT(gbc.pc(), 0x4e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01AF
        gbc.setState(0xbf9a, 0xbf75, 0x67d0, 0x7f5c, 0xc932, 0xef1a, 0x0, 0x0);
        gbc.writeMem(0xbf9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbf75);
        EXPECT(gbc.pc(), 0xbf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9a), 0xcb);
        EXPECT(gbc.readMem(0xbf9b), 0xbd);
        // CB BD 01B0
        gbc.setState(0xeb59, 0xce32, 0x7af0, 0x80d6, 0xbaf3, 0x556e, 0x0, 0x1);
        gbc.writeMem(0xeb59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0xeb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb59), 0xcb);
        EXPECT(gbc.readMem(0xeb5a), 0xbd);
        // CB BD 01B1
        gbc.setState(0xb792, 0x533f, 0xe070, 0xbb63, 0x172, 0x19e5, 0x0, 0x0);
        gbc.writeMem(0xb792, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x533f);
        EXPECT(gbc.pc(), 0xb794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb792), 0xcb);
        EXPECT(gbc.readMem(0xb793), 0xbd);
        // CB BD 01B2
        gbc.setState(0xeab6, 0x99b0, 0xa800, 0xa212, 0x63e4, 0x4f47, 0x0, 0x1);
        gbc.writeMem(0xeab6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x99b0);
        EXPECT(gbc.pc(), 0xeab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab6), 0xcb);
        EXPECT(gbc.readMem(0xeab7), 0xbd);
        // CB BD 01B3
        gbc.setState(0x8ea, 0xe59f, 0x5f40, 0xfe30, 0x5462, 0xaa4f, 0x0, 0x0);
        gbc.writeMem(0x8ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe59f);
        EXPECT(gbc.pc(), 0x8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01B4
        gbc.setState(0xae33, 0xf145, 0xde20, 0x1ab7, 0xfba5, 0x7481, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf145);
        EXPECT(gbc.pc(), 0xae35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae33), 0xcb);
        EXPECT(gbc.readMem(0xae34), 0xbd);
        // CB BD 01B5
        gbc.setState(0x9270, 0xf09b, 0xc940, 0xfc11, 0x7ad9, 0xaaa1, 0x0, 0x1);
        gbc.writeMem(0x9270, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf09b);
        EXPECT(gbc.pc(), 0x9272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9270), 0xcb);
        EXPECT(gbc.readMem(0x9271), 0xbd);
        // CB BD 01B6
        gbc.setState(0x7b54, 0xa4a3, 0xc2c0, 0x6b59, 0x754e, 0xa21f, 0x1, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa4a3);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01B7
        gbc.setState(0x43ac, 0x6b32, 0x7f80, 0x9578, 0xd010, 0x1ff2, 0x0, 0x0);
        gbc.writeMem(0x43ac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6b32);
        EXPECT(gbc.pc(), 0x43ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01B8
        gbc.setState(0x1261, 0x30f0, 0x6ad0, 0xc949, 0xa3e6, 0x58b2, 0x1, 0x1);
        gbc.writeMem(0x1261, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x30f0);
        EXPECT(gbc.pc(), 0x1263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01B9
        gbc.setState(0xeb8f, 0x6b98, 0xe180, 0xbfa6, 0xed5f, 0x46, 0x1, 0x0);
        gbc.writeMem(0xeb8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6b98);
        EXPECT(gbc.pc(), 0xeb91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8f), 0xcb);
        EXPECT(gbc.readMem(0xeb90), 0xbd);
        // CB BD 01BA
        gbc.setState(0x3b97, 0x2a65, 0xfd20, 0x3cc8, 0xfdc6, 0xc0ff, 0x0, 0x1);
        gbc.writeMem(0x3b97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2a65);
        EXPECT(gbc.pc(), 0x3b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01BB
        gbc.setState(0x685f, 0x68dc, 0x4bd0, 0xc9fe, 0xe88b, 0x49e3, 0x1, 0x0);
        gbc.writeMem(0x685f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x68dc);
        EXPECT(gbc.pc(), 0x6861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01BC
        gbc.setState(0xba41, 0xa77b, 0x1be0, 0x5458, 0x210b, 0xe55d, 0x0, 0x0);
        gbc.writeMem(0xba41, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa77b);
        EXPECT(gbc.pc(), 0xba43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba41), 0xcb);
        EXPECT(gbc.readMem(0xba42), 0xbd);
        // CB BD 01BD
        gbc.setState(0xce2f, 0x977c, 0x8e30, 0x2e22, 0x3e97, 0xfa76, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x977c);
        EXPECT(gbc.pc(), 0xce31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2f), 0xcb);
        EXPECT(gbc.readMem(0xce30), 0xbd);
        // CB BD 01BE
        gbc.setState(0x1c66, 0x5e6f, 0x3640, 0x1605, 0x40a7, 0xecb3, 0x1, 0x0);
        gbc.writeMem(0x1c66, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5e6f);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01BF
        gbc.setState(0x8a7a, 0x2b70, 0x7600, 0xced1, 0x69be, 0xb312, 0x0, 0x1);
        gbc.writeMem(0x8a7a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2b70);
        EXPECT(gbc.pc(), 0x8a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7a), 0xcb);
        EXPECT(gbc.readMem(0x8a7b), 0xbd);
        // CB BD 01C1
        gbc.setState(0x2de1, 0x6f9, 0x94e0, 0x3db5, 0x9429, 0xbbb2, 0x1, 0x0);
        gbc.writeMem(0x2de1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6f9);
        EXPECT(gbc.pc(), 0x2de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01C2
        gbc.setState(0x2efc, 0xaa54, 0x1d70, 0xbcbe, 0xf7de, 0xc1b0, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xaa54);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01C3
        gbc.setState(0x8762, 0x70bd, 0xfce0, 0xfab0, 0x7e63, 0x8144, 0x0, 0x0);
        gbc.writeMem(0x8762, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x70bd);
        EXPECT(gbc.pc(), 0x8764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8762), 0xcb);
        EXPECT(gbc.readMem(0x8763), 0xbd);
        // CB BD 01C4
        gbc.setState(0x7d9a, 0xc843, 0xd010, 0xf715, 0x2b69, 0xe626, 0x1, 0x1);
        gbc.writeMem(0x7d9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc843);
        EXPECT(gbc.pc(), 0x7d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01C5
        gbc.setState(0x95d3, 0x87b3, 0x7e50, 0xd56b, 0xc39a, 0x4f70, 0x1, 0x0);
        gbc.writeMem(0x95d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x87b3);
        EXPECT(gbc.pc(), 0x95d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d3), 0xcb);
        EXPECT(gbc.readMem(0x95d4), 0xbd);
        // CB BD 01C6
        gbc.setState(0x6d21, 0x1078, 0x7f10, 0x1f4a, 0x9b8c, 0x93ed, 0x0, 0x0);
        gbc.writeMem(0x6d21, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1078);
        EXPECT(gbc.pc(), 0x6d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01C7
        gbc.setState(0x476b, 0x3375, 0x85c0, 0x89b0, 0xc6e, 0xa660, 0x0, 0x0);
        gbc.writeMem(0x476b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3375);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01C8
        gbc.setState(0x73ca, 0x4d9, 0xd3d0, 0x7715, 0xa4d2, 0x9c62, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4d9);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01C9
        gbc.setState(0xe42, 0xd8c9, 0x9190, 0xe34c, 0xf58, 0x3a6c, 0x0, 0x1);
        gbc.writeMem(0xe42, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd8c9);
        EXPECT(gbc.pc(), 0xe44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01CA
        gbc.setState(0x1de3, 0x2ae8, 0xf780, 0x73af, 0xabd4, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0x1de3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2ae8);
        EXPECT(gbc.pc(), 0x1de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01CB
        gbc.setState(0x15c9, 0xe1f5, 0xb9d0, 0x80f6, 0x6cc3, 0xbde, 0x0, 0x1);
        gbc.writeMem(0x15c9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe1f5);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01CC
        gbc.setState(0xd13a, 0xa113, 0x5380, 0x67df, 0x9cfa, 0xb485, 0x1, 0x0);
        gbc.writeMem(0xd13a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa113);
        EXPECT(gbc.pc(), 0xd13c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13a), 0xcb);
        EXPECT(gbc.readMem(0xd13b), 0xbd);
        // CB BD 01CD
        gbc.setState(0x812e, 0xc734, 0xb6a0, 0xe771, 0x803c, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0x812e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc734);
        EXPECT(gbc.pc(), 0x8130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812e), 0xcb);
        EXPECT(gbc.readMem(0x812f), 0xbd);
        // CB BD 01CE
        gbc.setState(0x5f77, 0xb3f0, 0x3ac0, 0x865b, 0x6cea, 0x3d91, 0x1, 0x0);
        gbc.writeMem(0x5f77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb3f0);
        EXPECT(gbc.pc(), 0x5f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01CF
        gbc.setState(0x8e98, 0xb788, 0xfb30, 0x2546, 0xbbe6, 0x56a8, 0x1, 0x0);
        gbc.writeMem(0x8e98, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb788);
        EXPECT(gbc.pc(), 0x8e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e98), 0xcb);
        EXPECT(gbc.readMem(0x8e99), 0xbd);
        // CB BD 01D0
        gbc.setState(0x4178, 0x39ac, 0xacb0, 0x1291, 0xd016, 0xc605, 0x1, 0x0);
        gbc.writeMem(0x4178, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x39ac);
        EXPECT(gbc.pc(), 0x417a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01D1
        gbc.setState(0x18fc, 0xd281, 0xae00, 0xab87, 0x47eb, 0xdae3, 0x1, 0x1);
        gbc.writeMem(0x18fc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0x18fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01D2
        gbc.setState(0x9f8c, 0x154, 0xbcd0, 0xc072, 0xc2c8, 0xe9fb, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x154);
        EXPECT(gbc.pc(), 0x9f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8c), 0xcb);
        EXPECT(gbc.readMem(0x9f8d), 0xbd);
        // CB BD 01D3
        gbc.setState(0x1f70, 0x6deb, 0x87e0, 0x42e2, 0x51b9, 0x3c45, 0x1, 0x0);
        gbc.writeMem(0x1f70, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6deb);
        EXPECT(gbc.pc(), 0x1f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01D4
        gbc.setState(0x3afe, 0x417c, 0x7470, 0x417d, 0xf26b, 0x4906, 0x0, 0x0);
        gbc.writeMem(0x3afe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x417c);
        EXPECT(gbc.pc(), 0x3b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01D5
        gbc.setState(0x69e2, 0x5d6, 0x7030, 0x38fe, 0xe3a7, 0xdbb9, 0x0, 0x1);
        gbc.writeMem(0x69e2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5d6);
        EXPECT(gbc.pc(), 0x69e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01D6
        gbc.setState(0xbb9f, 0xa3c5, 0xe790, 0x8b5b, 0x2f5e, 0x4596, 0x0, 0x1);
        gbc.writeMem(0xbb9f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa3c5);
        EXPECT(gbc.pc(), 0xbba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9f), 0xcb);
        EXPECT(gbc.readMem(0xbba0), 0xbd);
        // CB BD 01D7
        gbc.setState(0x95b1, 0x575a, 0x3370, 0x2f3a, 0xe092, 0xde92, 0x1, 0x1);
        gbc.writeMem(0x95b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x575a);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b1), 0xcb);
        EXPECT(gbc.readMem(0x95b2), 0xbd);
        // CB BD 01D8
        gbc.setState(0x9af0, 0x2b9e, 0x8810, 0xef80, 0xe82c, 0x5ebe, 0x1, 0x1);
        gbc.writeMem(0x9af0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b9e);
        EXPECT(gbc.pc(), 0x9af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af0), 0xcb);
        EXPECT(gbc.readMem(0x9af1), 0xbd);
        // CB BD 01D9
        gbc.setState(0x61f, 0x8180, 0xc530, 0xb946, 0xee1b, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x61f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8180);
        EXPECT(gbc.pc(), 0x621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01DA
        gbc.setState(0x2126, 0xcd0a, 0x7aa0, 0x7949, 0xc715, 0x38f1, 0x1, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcd0a);
        EXPECT(gbc.pc(), 0x2128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01DB
        gbc.setState(0xbafc, 0xcc32, 0x1fe0, 0xe699, 0x23d9, 0x171a, 0x0, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcc32);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafc), 0xcb);
        EXPECT(gbc.readMem(0xbafd), 0xbd);
        // CB BD 01DC
        gbc.setState(0x200d, 0xe509, 0x7330, 0x47a4, 0x3073, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0x200d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe509);
        EXPECT(gbc.pc(), 0x200f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01DD
        gbc.setState(0xe860, 0xef35, 0x3d30, 0xec18, 0x1999, 0xaa3b, 0x1, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xef35);
        EXPECT(gbc.pc(), 0xe862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe860), 0xcb);
        EXPECT(gbc.readMem(0xe861), 0xbd);
        // CB BD 01DE
        gbc.setState(0xb6d, 0xd4f2, 0x3030, 0x378f, 0xf1c, 0xb8d7, 0x0, 0x1);
        gbc.writeMem(0xb6d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd4f2);
        EXPECT(gbc.pc(), 0xb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01DF
        gbc.setState(0x74c8, 0xf7da, 0xa6f0, 0x65, 0xe877, 0x5637, 0x1, 0x1);
        gbc.writeMem(0x74c8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf7da);
        EXPECT(gbc.pc(), 0x74ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01E0
        gbc.setState(0x1197, 0xe162, 0x2b70, 0x4ef7, 0x192e, 0x3205, 0x1, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe162);
        EXPECT(gbc.pc(), 0x1199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01E2
        gbc.setState(0xbc2a, 0x75a4, 0xdd20, 0x3ca9, 0xa6e5, 0x21d, 0x0, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x75a4);
        EXPECT(gbc.pc(), 0xbc2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2a), 0xcb);
        EXPECT(gbc.readMem(0xbc2b), 0xbd);
        // CB BD 01E3
        gbc.setState(0x5df3, 0xe5db, 0x5d20, 0xf9d4, 0x170e, 0xa5fc, 0x1, 0x0);
        gbc.writeMem(0x5df3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe5db);
        EXPECT(gbc.pc(), 0x5df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01E4
        gbc.setState(0x809c, 0x74ee, 0x55b0, 0x7b11, 0xdbf5, 0xecce, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0x809e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809c), 0xcb);
        EXPECT(gbc.readMem(0x809d), 0xbd);
        // CB BD 01E5
        gbc.setState(0x1564, 0x643d, 0xf820, 0xcd0d, 0x45ed, 0x1400, 0x1, 0x0);
        gbc.writeMem(0x1564, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0x1566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01E6
        gbc.setState(0xcaf4, 0xb925, 0xc6e0, 0x2342, 0x4a1, 0xfb0e, 0x0, 0x0);
        gbc.writeMem(0xcaf4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb925);
        EXPECT(gbc.pc(), 0xcaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf4), 0xcb);
        EXPECT(gbc.readMem(0xcaf5), 0xbd);
        // CB BD 01E7
        gbc.setState(0x8675, 0xf453, 0x7d90, 0x2a6c, 0x444c, 0xe18c, 0x1, 0x1);
        gbc.writeMem(0x8675, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0x8677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8675), 0xcb);
        EXPECT(gbc.readMem(0x8676), 0xbd);
        // CB BD 01E8
        gbc.setState(0xe976, 0xe77f, 0x4c10, 0x35f6, 0xa756, 0xe6af, 0x1, 0x1);
        gbc.writeMem(0xe976, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe77f);
        EXPECT(gbc.pc(), 0xe978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe976), 0xcb);
        EXPECT(gbc.readMem(0xe977), 0xbd);
        // CB BD 01E9
        gbc.setState(0xa7b2, 0x6332, 0x2350, 0x58fa, 0x9a32, 0xdde5, 0x1, 0x1);
        gbc.writeMem(0xa7b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6332);
        EXPECT(gbc.pc(), 0xa7b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b2), 0xcb);
        EXPECT(gbc.readMem(0xa7b3), 0xbd);
        // CB BD 01EA
        gbc.setState(0x7c69, 0x6833, 0xe540, 0xba3e, 0xff3b, 0xa16f, 0x1, 0x0);
        gbc.writeMem(0x7c69, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6833);
        EXPECT(gbc.pc(), 0x7c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01EB
        gbc.setState(0x801f, 0xe249, 0x5b10, 0x808b, 0x32cd, 0xfaf0, 0x1, 0x1);
        gbc.writeMem(0x801f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe249);
        EXPECT(gbc.pc(), 0x8021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801f), 0xcb);
        EXPECT(gbc.readMem(0x8020), 0xbd);
        // CB BD 01EE
        gbc.setState(0xa701, 0x3752, 0x1f10, 0x87d0, 0x92d6, 0x7427, 0x0, 0x0);
        gbc.writeMem(0xa701, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3752);
        EXPECT(gbc.pc(), 0xa703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa701), 0xcb);
        EXPECT(gbc.readMem(0xa702), 0xbd);
        // CB BD 01EF
        gbc.setState(0x278d, 0xc86, 0xa1d0, 0xf4e7, 0xbcf0, 0xc27f, 0x0, 0x1);
        gbc.writeMem(0x278d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc86);
        EXPECT(gbc.pc(), 0x278f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01F0
        gbc.setState(0xd1a2, 0x60d7, 0x2dd0, 0xe33e, 0xa764, 0xabae, 0x1, 0x1);
        gbc.writeMem(0xd1a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x60d7);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a2), 0xcb);
        EXPECT(gbc.readMem(0xd1a3), 0xbd);
        // CB BD 01F1
        gbc.setState(0x97a1, 0x7d7a, 0x6d00, 0xbee0, 0x2207, 0xb324, 0x0, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7d7a);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0xbd);
        // CB BD 01F2
        gbc.setState(0x6f16, 0x5d74, 0x5ca0, 0xf300, 0x67ba, 0x9f5b, 0x1, 0x0);
        gbc.writeMem(0x6f16, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5d74);
        EXPECT(gbc.pc(), 0x6f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01F3
        gbc.setState(0x33be, 0xeafd, 0xb6d0, 0x45cb, 0xb2eb, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x33be, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xeafd);
        EXPECT(gbc.pc(), 0x33c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01F4
        gbc.setState(0xce98, 0x7037, 0x1a00, 0x5bce, 0x6b80, 0xc122, 0x1, 0x1);
        gbc.writeMem(0xce98, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7037);
        EXPECT(gbc.pc(), 0xce9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce98), 0xcb);
        EXPECT(gbc.readMem(0xce99), 0xbd);
        // CB BD 01F5
        gbc.setState(0x4b86, 0xdced, 0x9990, 0xe4d9, 0x75ac, 0x1979, 0x0, 0x1);
        gbc.writeMem(0x4b86, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdced);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01F6
        gbc.setState(0x2cad, 0x9b10, 0x22b0, 0x835, 0x8bc1, 0x381b, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9b10);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 01F7
        gbc.setState(0x16cc, 0xddfc, 0xad80, 0xe8c4, 0xa9a8, 0x5500, 0x0, 0x1);
        gbc.writeMem(0x16cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xddfc);
        EXPECT(gbc.pc(), 0x16ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01F8
        gbc.setState(0xb827, 0x9b6c, 0x23c0, 0x2700, 0x334b, 0x3165, 0x1, 0x0);
        gbc.writeMem(0xb827, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9b6c);
        EXPECT(gbc.pc(), 0xb829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb827), 0xcb);
        EXPECT(gbc.readMem(0xb828), 0xbd);
        // CB BD 01F9
        gbc.setState(0x144c, 0xe26c, 0xde0, 0x8561, 0x65b6, 0x5394, 0x1, 0x1);
        gbc.writeMem(0x144c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe26c);
        EXPECT(gbc.pc(), 0x144e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 01FA
        gbc.setState(0xa5c2, 0x5671, 0xfa70, 0xfbb0, 0x4201, 0xe590, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5671);
        EXPECT(gbc.pc(), 0xa5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c2), 0xcb);
        EXPECT(gbc.readMem(0xa5c3), 0xbd);
        // CB BD 01FB
        gbc.setState(0x8f26, 0x8f7e, 0xa1c0, 0x2ad7, 0xb67, 0x827f, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f26), 0xcb);
        EXPECT(gbc.readMem(0x8f27), 0xbd);
        // CB BD 01FC
        gbc.setState(0xec8f, 0x3210, 0x9d40, 0xf74b, 0xbb8b, 0x1359, 0x0, 0x0);
        gbc.writeMem(0xec8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3210);
        EXPECT(gbc.pc(), 0xec91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8f), 0xcb);
        EXPECT(gbc.readMem(0xec90), 0xbd);
        // CB BD 01FD
        gbc.setState(0xbcff, 0xb5e0, 0xc570, 0x7aa3, 0x5a31, 0xaf5a, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0xbd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcff), 0xcb);
        EXPECT(gbc.readMem(0xbd00), 0xbd);
        // CB BD 01FE
        gbc.setState(0xea7d, 0xea78, 0x6490, 0x7774, 0x8def, 0x93a0, 0x0, 0x0);
        gbc.writeMem(0xea7d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xea78);
        EXPECT(gbc.pc(), 0xea7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7d), 0xcb);
        EXPECT(gbc.readMem(0xea7e), 0xbd);
        // CB BD 01FF
        gbc.setState(0x1187, 0x8f00, 0xed90, 0xeb04, 0x49f6, 0x4404, 0x1, 0x1);
        gbc.writeMem(0x1187, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8f00);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0200
        gbc.setState(0x7303, 0x6dc2, 0xe390, 0xcd86, 0x4537, 0x3917, 0x0, 0x1);
        gbc.writeMem(0x7303, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6dc2);
        EXPECT(gbc.pc(), 0x7305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0202
        gbc.setState(0xe7, 0xdf01, 0xfa0, 0x2006, 0x4ed0, 0x9125, 0x1, 0x1);
        gbc.writeMem(0xe7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdf01);
        EXPECT(gbc.pc(), 0xe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0203
        gbc.setState(0xac3f, 0x5ffd, 0x5b0, 0xe74d, 0x4f10, 0xd8b4, 0x1, 0x1);
        gbc.writeMem(0xac3f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5ffd);
        EXPECT(gbc.pc(), 0xac41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3f), 0xcb);
        EXPECT(gbc.readMem(0xac40), 0xbd);
        // CB BD 0204
        gbc.setState(0xb594, 0x9136, 0xd4d0, 0x223a, 0x45cf, 0x6072, 0x0, 0x1);
        gbc.writeMem(0xb594, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9136);
        EXPECT(gbc.pc(), 0xb596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb594), 0xcb);
        EXPECT(gbc.readMem(0xb595), 0xbd);
        // CB BD 0205
        gbc.setState(0x76b1, 0x6c8d, 0xe9f0, 0x24a6, 0xf114, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6c8d);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0206
        gbc.setState(0x5545, 0xbdad, 0xda70, 0x9bb2, 0x4ddb, 0xfba8, 0x1, 0x1);
        gbc.writeMem(0x5545, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbdad);
        EXPECT(gbc.pc(), 0x5547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0207
        gbc.setState(0x4d4, 0xbc70, 0xce0, 0xdfff, 0x3c3, 0x4b02, 0x0, 0x1);
        gbc.writeMem(0x4d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbc70);
        EXPECT(gbc.pc(), 0x4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0208
        gbc.setState(0x46f5, 0xaeec, 0x6600, 0xfe70, 0x638f, 0xe794, 0x0, 0x1);
        gbc.writeMem(0x46f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaeec);
        EXPECT(gbc.pc(), 0x46f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0209
        gbc.setState(0x5dda, 0xd6f7, 0x6f60, 0x8659, 0xacab, 0x79aa, 0x0, 0x1);
        gbc.writeMem(0x5dda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd6f7);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 020A
        gbc.setState(0x76d0, 0x7857, 0xafe0, 0x7960, 0x59d4, 0x3490, 0x1, 0x1);
        gbc.writeMem(0x76d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7857);
        EXPECT(gbc.pc(), 0x76d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 020B
        gbc.setState(0x6caa, 0x9396, 0x75a0, 0xc64f, 0x5e6b, 0xdd12, 0x0, 0x1);
        gbc.writeMem(0x6caa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9396);
        EXPECT(gbc.pc(), 0x6cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 020C
        gbc.setState(0x2e97, 0xe18d, 0x5910, 0x562e, 0x4548, 0xc10a, 0x0, 0x0);
        gbc.writeMem(0x2e97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe18d);
        EXPECT(gbc.pc(), 0x2e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 020D
        gbc.setState(0xace6, 0x38a3, 0xda70, 0x79d5, 0xaceb, 0x58b1, 0x1, 0x0);
        gbc.writeMem(0xace6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0xace8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace6), 0xcb);
        EXPECT(gbc.readMem(0xace7), 0xbd);
        // CB BD 020E
        gbc.setState(0x27cc, 0x9250, 0x49d0, 0x2a18, 0x3535, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x27cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9250);
        EXPECT(gbc.pc(), 0x27ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 020F
        gbc.setState(0x6c32, 0x75f6, 0xe560, 0x2039, 0x61bb, 0xb9f9, 0x1, 0x1);
        gbc.writeMem(0x6c32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x6c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0210
        gbc.setState(0x1827, 0x5101, 0xe7d0, 0xe6ef, 0x882a, 0x679f, 0x0, 0x1);
        gbc.writeMem(0x1827, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5101);
        EXPECT(gbc.pc(), 0x1829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0211
        gbc.setState(0x6579, 0x81e0, 0x2b20, 0xe5b4, 0xc2f3, 0x55c0, 0x1, 0x0);
        gbc.writeMem(0x6579, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x81e0);
        EXPECT(gbc.pc(), 0x657b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0212
        gbc.setState(0x63e0, 0x75e5, 0x1db0, 0xb0fc, 0x3eb9, 0x251a, 0x1, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x75e5);
        EXPECT(gbc.pc(), 0x63e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0213
        gbc.setState(0xa522, 0x93d5, 0xef80, 0xf9b4, 0xc6f6, 0x21cf, 0x1, 0x1);
        gbc.writeMem(0xa522, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0xa524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa522), 0xcb);
        EXPECT(gbc.readMem(0xa523), 0xbd);
        // CB BD 0215
        gbc.setState(0x8693, 0xba5c, 0xabf0, 0x1133, 0xdfdb, 0xbc5, 0x1, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xba5c);
        EXPECT(gbc.pc(), 0x8695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8693), 0xcb);
        EXPECT(gbc.readMem(0x8694), 0xbd);
        // CB BD 0216
        gbc.setState(0x4e1f, 0xc65d, 0xd8b0, 0x2f06, 0xf990, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0x4e1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc65d);
        EXPECT(gbc.pc(), 0x4e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0217
        gbc.setState(0xe1f5, 0x745b, 0x1390, 0x37fb, 0x3317, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0xe1f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x745b);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f5), 0xcb);
        EXPECT(gbc.readMem(0xe1f6), 0xbd);
        // CB BD 0218
        gbc.setState(0xa656, 0x7e7f, 0x5d10, 0xdaca, 0xc2ad, 0x7948, 0x1, 0x1);
        gbc.writeMem(0xa656, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7e7f);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa656), 0xcb);
        EXPECT(gbc.readMem(0xa657), 0xbd);
        // CB BD 0219
        gbc.setState(0x5b27, 0x802f, 0xe6a0, 0x3db0, 0x6d24, 0x5745, 0x0, 0x1);
        gbc.writeMem(0x5b27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x802f);
        EXPECT(gbc.pc(), 0x5b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 021A
        gbc.setState(0x6844, 0x9d24, 0x85a0, 0x821b, 0xc333, 0xea70, 0x1, 0x0);
        gbc.writeMem(0x6844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9d24);
        EXPECT(gbc.pc(), 0x6846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 021B
        gbc.setState(0xb9d2, 0x54b6, 0xcb70, 0x3185, 0x6be0, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xb9d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x54b6);
        EXPECT(gbc.pc(), 0xb9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d2), 0xcb);
        EXPECT(gbc.readMem(0xb9d3), 0xbd);
        // CB BD 021C
        gbc.setState(0x3537, 0xe828, 0x8d60, 0xfab9, 0x115f, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x3537, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe828);
        EXPECT(gbc.pc(), 0x3539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 021D
        gbc.setState(0x1803, 0xf551, 0x5700, 0x5597, 0xf38e, 0x49a8, 0x1, 0x0);
        gbc.writeMem(0x1803, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0x1805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 021E
        gbc.setState(0x147f, 0x598b, 0x3070, 0x59d1, 0x285d, 0x2889, 0x1, 0x1);
        gbc.writeMem(0x147f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x598b);
        EXPECT(gbc.pc(), 0x1481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 021F
        gbc.setState(0x5693, 0xbec2, 0x5620, 0x9226, 0xf085, 0x6831, 0x0, 0x0);
        gbc.writeMem(0x5693, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbec2);
        EXPECT(gbc.pc(), 0x5695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0220
        gbc.setState(0x7d77, 0x4fb2, 0xc360, 0x1e5f, 0xbdeb, 0x65a0, 0x0, 0x0);
        gbc.writeMem(0x7d77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4fb2);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0221
        gbc.setState(0xeb62, 0x1929, 0x6b40, 0x34bf, 0x7a15, 0x68aa, 0x1, 0x0);
        gbc.writeMem(0xeb62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1929);
        EXPECT(gbc.pc(), 0xeb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb62), 0xcb);
        EXPECT(gbc.readMem(0xeb63), 0xbd);
        // CB BD 0223
        gbc.setState(0x79b3, 0x7463, 0xea60, 0x4e91, 0x8a5d, 0xf31b, 0x1, 0x0);
        gbc.writeMem(0x79b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7463);
        EXPECT(gbc.pc(), 0x79b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0224
        gbc.setState(0xb2eb, 0xc7e1, 0x66b0, 0x8b58, 0xfac4, 0xe0dd, 0x0, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc7e1);
        EXPECT(gbc.pc(), 0xb2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2eb), 0xcb);
        EXPECT(gbc.readMem(0xb2ec), 0xbd);
        // CB BD 0225
        gbc.setState(0xd1ee, 0x7db5, 0xead0, 0xfdab, 0xab24, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0xd1ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ee), 0xcb);
        EXPECT(gbc.readMem(0xd1ef), 0xbd);
        // CB BD 0226
        gbc.setState(0x4db8, 0x7424, 0xcc40, 0xc9e, 0x6e37, 0x9d84, 0x0, 0x1);
        gbc.writeMem(0x4db8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7424);
        EXPECT(gbc.pc(), 0x4dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0227
        gbc.setState(0xab01, 0x103c, 0xf0e0, 0xc519, 0x4825, 0x9d38, 0x0, 0x0);
        gbc.writeMem(0xab01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x103c);
        EXPECT(gbc.pc(), 0xab03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab01), 0xcb);
        EXPECT(gbc.readMem(0xab02), 0xbd);
        // CB BD 0228
        gbc.setState(0xedef, 0x5251, 0xb680, 0x57b, 0xdca0, 0xcd4b, 0x0, 0x1);
        gbc.writeMem(0xedef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5251);
        EXPECT(gbc.pc(), 0xedf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedef), 0xcb);
        EXPECT(gbc.readMem(0xedf0), 0xbd);
        // CB BD 0229
        gbc.setState(0x19ff, 0xe58d, 0xdd30, 0x4823, 0x2052, 0xa634, 0x0, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe58d);
        EXPECT(gbc.pc(), 0x1a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 022A
        gbc.setState(0x2a03, 0x4b72, 0x5610, 0x17a3, 0xe1ae, 0x3f9, 0x0, 0x1);
        gbc.writeMem(0x2a03, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4b72);
        EXPECT(gbc.pc(), 0x2a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 022B
        gbc.setState(0xb914, 0x6976, 0x2db0, 0xd5a2, 0x9c45, 0xefa6, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6976);
        EXPECT(gbc.pc(), 0xb916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb914), 0xcb);
        EXPECT(gbc.readMem(0xb915), 0xbd);
        // CB BD 022C
        gbc.setState(0x3b32, 0x484e, 0x92c0, 0x5f2d, 0xcb01, 0xdfb8, 0x1, 0x0);
        gbc.writeMem(0x3b32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x484e);
        EXPECT(gbc.pc(), 0x3b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 022D
        gbc.setState(0xb77a, 0x15d5, 0x1090, 0x584e, 0x854e, 0x4e07, 0x1, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77a), 0xcb);
        EXPECT(gbc.readMem(0xb77b), 0xbd);
        // CB BD 022E
        gbc.setState(0x7774, 0x55e7, 0x31b0, 0x721f, 0x30d1, 0x679d, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x55e7);
        EXPECT(gbc.pc(), 0x7776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 022F
        gbc.setState(0xd805, 0xc21d, 0xe9a0, 0x55ee, 0xd15e, 0xf10c, 0x0, 0x0);
        gbc.writeMem(0xd805, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc21d);
        EXPECT(gbc.pc(), 0xd807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd805), 0xcb);
        EXPECT(gbc.readMem(0xd806), 0xbd);
        // CB BD 0230
        gbc.setState(0xc81d, 0x18cc, 0x8660, 0x16a9, 0x2287, 0x625, 0x1, 0x0);
        gbc.writeMem(0xc81d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x18cc);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81d), 0xcb);
        EXPECT(gbc.readMem(0xc81e), 0xbd);
        // CB BD 0231
        gbc.setState(0x2f89, 0x5ef1, 0x5060, 0x609a, 0x4e13, 0xa656, 0x0, 0x1);
        gbc.writeMem(0x2f89, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5ef1);
        EXPECT(gbc.pc(), 0x2f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0232
        gbc.setState(0x1b99, 0x786f, 0x4cf0, 0x79c0, 0x66f8, 0xd8a5, 0x1, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x786f);
        EXPECT(gbc.pc(), 0x1b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0233
        gbc.setState(0xa1a6, 0xa888, 0x9390, 0x8703, 0xd8f4, 0x6aac, 0x1, 0x1);
        gbc.writeMem(0xa1a6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa888);
        EXPECT(gbc.pc(), 0xa1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a6), 0xcb);
        EXPECT(gbc.readMem(0xa1a7), 0xbd);
        // CB BD 0234
        gbc.setState(0xc5a, 0xeb7d, 0x9cc0, 0x7910, 0x773a, 0xe0e4, 0x1, 0x1);
        gbc.writeMem(0xc5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeb7d);
        EXPECT(gbc.pc(), 0xc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0235
        gbc.setState(0xc84, 0x2819, 0xb790, 0x8b71, 0xb375, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0236
        gbc.setState(0xa807, 0x70ae, 0xff00, 0x938e, 0x7a92, 0xae, 0x0, 0x1);
        gbc.writeMem(0xa807, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x70ae);
        EXPECT(gbc.pc(), 0xa809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa807), 0xcb);
        EXPECT(gbc.readMem(0xa808), 0xbd);
        // CB BD 0237
        gbc.setState(0x53e3, 0x1df8, 0xf2b0, 0x3eec, 0x929b, 0xfdd0, 0x0, 0x0);
        gbc.writeMem(0x53e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1df8);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0238
        gbc.setState(0x9533, 0xf847, 0xcff0, 0xa386, 0x6975, 0x8ea6, 0x0, 0x0);
        gbc.writeMem(0x9533, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf847);
        EXPECT(gbc.pc(), 0x9535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9533), 0xcb);
        EXPECT(gbc.readMem(0x9534), 0xbd);
        // CB BD 0239
        gbc.setState(0xd83d, 0x81bd, 0xb160, 0xfdec, 0xa1db, 0x4c6, 0x0, 0x1);
        gbc.writeMem(0xd83d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x81bd);
        EXPECT(gbc.pc(), 0xd83f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83d), 0xcb);
        EXPECT(gbc.readMem(0xd83e), 0xbd);
        // CB BD 023A
        gbc.setState(0x2222, 0x32bc, 0xff20, 0xc670, 0xfd86, 0xee8b, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x32bc);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 023B
        gbc.setState(0xb29c, 0x39fc, 0x4c30, 0xb5e2, 0xf997, 0x9e4d, 0x0, 0x1);
        gbc.writeMem(0xb29c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0xb29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29c), 0xcb);
        EXPECT(gbc.readMem(0xb29d), 0xbd);
        // CB BD 023C
        gbc.setState(0x7c6b, 0x1bee, 0xeab0, 0x4445, 0x9685, 0x60d2, 0x1, 0x0);
        gbc.writeMem(0x7c6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1bee);
        EXPECT(gbc.pc(), 0x7c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 023D
        gbc.setState(0x84c3, 0xc343, 0x4800, 0x5aa1, 0xe40b, 0x602b, 0x1, 0x0);
        gbc.writeMem(0x84c3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc343);
        EXPECT(gbc.pc(), 0x84c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c3), 0xcb);
        EXPECT(gbc.readMem(0x84c4), 0xbd);
        // CB BD 023E
        gbc.setState(0xe2c0, 0x7dee, 0xdb50, 0x7548, 0x4cf1, 0x974d, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7dee);
        EXPECT(gbc.pc(), 0xe2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c0), 0xcb);
        EXPECT(gbc.readMem(0xe2c1), 0xbd);
        // CB BD 023F
        gbc.setState(0xe0ee, 0xb178, 0xe750, 0xca1c, 0x3f30, 0x5398, 0x0, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb178);
        EXPECT(gbc.pc(), 0xe0f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ee), 0xcb);
        EXPECT(gbc.readMem(0xe0ef), 0xbd);
        // CB BD 0240
        gbc.setState(0x850e, 0xad9e, 0x38e0, 0xc6eb, 0x2f54, 0x98bc, 0x1, 0x0);
        gbc.writeMem(0x850e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0x8510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850e), 0xcb);
        EXPECT(gbc.readMem(0x850f), 0xbd);
        // CB BD 0241
        gbc.setState(0xb770, 0xab0e, 0x50f0, 0x29a4, 0xed43, 0xd10d, 0x1, 0x1);
        gbc.writeMem(0xb770, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xab0e);
        EXPECT(gbc.pc(), 0xb772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb770), 0xcb);
        EXPECT(gbc.readMem(0xb771), 0xbd);
        // CB BD 0242
        gbc.setState(0x53a5, 0x4b68, 0xe630, 0x84f1, 0xfe0a, 0x342, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4b68);
        EXPECT(gbc.pc(), 0x53a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0243
        gbc.setState(0x3114, 0x8e4d, 0xcce0, 0xfe46, 0xffa9, 0xb0ae, 0x1, 0x1);
        gbc.writeMem(0x3114, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8e4d);
        EXPECT(gbc.pc(), 0x3116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0244
        gbc.setState(0x77d4, 0xff98, 0x3a80, 0x3fcb, 0xc2b0, 0x4707, 0x1, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xff98);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0245
        gbc.setState(0xa5f6, 0xceb, 0x7fc0, 0xf57b, 0x1740, 0xd1a7, 0x0, 0x0);
        gbc.writeMem(0xa5f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xceb);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f6), 0xcb);
        EXPECT(gbc.readMem(0xa5f7), 0xbd);
        // CB BD 0246
        gbc.setState(0xb48f, 0x8303, 0xb910, 0x119, 0x2da1, 0x3d7, 0x0, 0x1);
        gbc.writeMem(0xb48f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8303);
        EXPECT(gbc.pc(), 0xb491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48f), 0xcb);
        EXPECT(gbc.readMem(0xb490), 0xbd);
        // CB BD 0247
        gbc.setState(0xe615, 0x7ca9, 0xec60, 0xa39c, 0xf6a9, 0xe9db, 0x1, 0x1);
        gbc.writeMem(0xe615, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7ca9);
        EXPECT(gbc.pc(), 0xe617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe615), 0xcb);
        EXPECT(gbc.readMem(0xe616), 0xbd);
        // CB BD 0248
        gbc.setState(0x46ff, 0xba8, 0xc920, 0x4c12, 0x3164, 0x9ca, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xba8);
        EXPECT(gbc.pc(), 0x4701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 024A
        gbc.setState(0x4cf7, 0xb829, 0xb8a0, 0x6a3c, 0xaeca, 0x3c12, 0x1, 0x0);
        gbc.writeMem(0x4cf7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb829);
        EXPECT(gbc.pc(), 0x4cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 024B
        gbc.setState(0xc724, 0x9f5d, 0x6d0, 0x2b5d, 0x53de, 0x62aa, 0x0, 0x1);
        gbc.writeMem(0xc724, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9f5d);
        EXPECT(gbc.pc(), 0xc726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc724), 0xcb);
        EXPECT(gbc.readMem(0xc725), 0xbd);
        // CB BD 024C
        gbc.setState(0xda81, 0xbb58, 0xa760, 0xc055, 0xd93e, 0xce41, 0x1, 0x1);
        gbc.writeMem(0xda81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbb58);
        EXPECT(gbc.pc(), 0xda83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda81), 0xcb);
        EXPECT(gbc.readMem(0xda82), 0xbd);
        // CB BD 024D
        gbc.setState(0x8cb7, 0x8842, 0x7f70, 0x4cc6, 0xdda, 0x738a, 0x1, 0x0);
        gbc.writeMem(0x8cb7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8842);
        EXPECT(gbc.pc(), 0x8cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb7), 0xcb);
        EXPECT(gbc.readMem(0x8cb8), 0xbd);
        // CB BD 024E
        gbc.setState(0xc9cb, 0x179f, 0x3dc0, 0xcb4b, 0x1d3a, 0x3ccc, 0x0, 0x0);
        gbc.writeMem(0xc9cb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x179f);
        EXPECT(gbc.pc(), 0xc9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cb), 0xcb);
        EXPECT(gbc.readMem(0xc9cc), 0xbd);
        // CB BD 024F
        gbc.setState(0xa0ad, 0x676a, 0x5600, 0x1354, 0x8f2e, 0x90e5, 0x0, 0x1);
        gbc.writeMem(0xa0ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x676a);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0xcb);
        EXPECT(gbc.readMem(0xa0ae), 0xbd);
        // CB BD 0250
        gbc.setState(0x4eba, 0xee69, 0x93f0, 0x5d47, 0x7a66, 0x6621, 0x1, 0x1);
        gbc.writeMem(0x4eba, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xee69);
        EXPECT(gbc.pc(), 0x4ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0251
        gbc.setState(0x355c, 0xc27, 0x2150, 0xdc3c, 0x389, 0x5aad, 0x0, 0x0);
        gbc.writeMem(0x355c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc27);
        EXPECT(gbc.pc(), 0x355e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0252
        gbc.setState(0x2386, 0x8270, 0xc110, 0x1715, 0x688b, 0x768, 0x1, 0x1);
        gbc.writeMem(0x2386, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8270);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0253
        gbc.setState(0x5a68, 0x3e48, 0x50b0, 0x6659, 0xd517, 0x590d, 0x1, 0x0);
        gbc.writeMem(0x5a68, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3e48);
        EXPECT(gbc.pc(), 0x5a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0254
        gbc.setState(0x98b5, 0x4d85, 0x31e0, 0xd334, 0xd951, 0x74ce, 0x1, 0x1);
        gbc.writeMem(0x98b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4d85);
        EXPECT(gbc.pc(), 0x98b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b5), 0xcb);
        EXPECT(gbc.readMem(0x98b6), 0xbd);
        // CB BD 0255
        gbc.setState(0x6e77, 0x5ae1, 0x9a30, 0x1fbc, 0x189e, 0xe351, 0x1, 0x0);
        gbc.writeMem(0x6e77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5ae1);
        EXPECT(gbc.pc(), 0x6e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0256
        gbc.setState(0xc4d1, 0x6802, 0x7ac0, 0xf873, 0x20a8, 0x616, 0x0, 0x1);
        gbc.writeMem(0xc4d1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6802);
        EXPECT(gbc.pc(), 0xc4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d1), 0xcb);
        EXPECT(gbc.readMem(0xc4d2), 0xbd);
        // CB BD 0257
        gbc.setState(0xe7ad, 0x7039, 0x4b40, 0xbb0e, 0xb06e, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0xe7ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7039);
        EXPECT(gbc.pc(), 0xe7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ad), 0xcb);
        EXPECT(gbc.readMem(0xe7ae), 0xbd);
        // CB BD 0258
        gbc.setState(0x6a7, 0x597, 0x13f0, 0xc7be, 0x9b14, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0x6a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x597);
        EXPECT(gbc.pc(), 0x6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0259
        gbc.setState(0xcee7, 0x40cf, 0x4d70, 0x899b, 0x922, 0x7ad6, 0x1, 0x0);
        gbc.writeMem(0xcee7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x40cf);
        EXPECT(gbc.pc(), 0xcee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee7), 0xcb);
        EXPECT(gbc.readMem(0xcee8), 0xbd);
        // CB BD 025B
        gbc.setState(0xa98f, 0x9a1d, 0x9910, 0x85a1, 0xbdd9, 0x5ed0, 0x0, 0x1);
        gbc.writeMem(0xa98f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0xa991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98f), 0xcb);
        EXPECT(gbc.readMem(0xa990), 0xbd);
        // CB BD 025C
        gbc.setState(0x5f21, 0x99c5, 0xcc50, 0x11a1, 0x1159, 0x2b4b, 0x0, 0x1);
        gbc.writeMem(0x5f21, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x99c5);
        EXPECT(gbc.pc(), 0x5f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 025D
        gbc.setState(0x75d0, 0xaddb, 0x8420, 0x598a, 0xfe2a, 0xbb5b, 0x1, 0x0);
        gbc.writeMem(0x75d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaddb);
        EXPECT(gbc.pc(), 0x75d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 025E
        gbc.setState(0x1440, 0xf5c6, 0x26c0, 0xd668, 0x3323, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0x1440, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf5c6);
        EXPECT(gbc.pc(), 0x1442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 025F
        gbc.setState(0x6590, 0x5fd7, 0x9cb0, 0xe15d, 0x8579, 0x141b, 0x0, 0x1);
        gbc.writeMem(0x6590, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5fd7);
        EXPECT(gbc.pc(), 0x6592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0260
        gbc.setState(0x68fb, 0x3723, 0xefd0, 0x2a01, 0xda83, 0xb01e, 0x0, 0x0);
        gbc.writeMem(0x68fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3723);
        EXPECT(gbc.pc(), 0x68fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0261
        gbc.setState(0x1636, 0xcfb0, 0xd160, 0x96f9, 0xc2e9, 0xfdba, 0x0, 0x1);
        gbc.writeMem(0x1636, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcfb0);
        EXPECT(gbc.pc(), 0x1638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0262
        gbc.setState(0xb156, 0xb33e, 0x2b60, 0xb524, 0xadab, 0x5b0d, 0x0, 0x0);
        gbc.writeMem(0xb156, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0xb158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb156), 0xcb);
        EXPECT(gbc.readMem(0xb157), 0xbd);
        // CB BD 0263
        gbc.setState(0xe22d, 0x4c34, 0x9d10, 0x2e63, 0x5a5d, 0x6a10, 0x1, 0x1);
        gbc.writeMem(0xe22d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4c34);
        EXPECT(gbc.pc(), 0xe22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22d), 0xcb);
        EXPECT(gbc.readMem(0xe22e), 0xbd);
        // CB BD 0264
        gbc.setState(0xe33b, 0x6584, 0x94f0, 0x1b52, 0x364c, 0xd8a6, 0x0, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0xe33d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33b), 0xcb);
        EXPECT(gbc.readMem(0xe33c), 0xbd);
        // CB BD 0265
        gbc.setState(0xd402, 0xfcfc, 0x98a0, 0xabf9, 0x10c, 0xa39b, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfcfc);
        EXPECT(gbc.pc(), 0xd404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd402), 0xcb);
        EXPECT(gbc.readMem(0xd403), 0xbd);
        // CB BD 0266
        gbc.setState(0xa1d, 0x81ea, 0xd780, 0x1dbc, 0xaa7c, 0x98db, 0x0, 0x0);
        gbc.writeMem(0xa1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x81ea);
        EXPECT(gbc.pc(), 0xa1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0268
        gbc.setState(0x4cca, 0x197e, 0xb680, 0xc830, 0x5205, 0x6dad, 0x0, 0x0);
        gbc.writeMem(0x4cca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x197e);
        EXPECT(gbc.pc(), 0x4ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0269
        gbc.setState(0xb31c, 0x9b8, 0xda20, 0x64ec, 0x5224, 0x4b65, 0x0, 0x1);
        gbc.writeMem(0xb31c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9b8);
        EXPECT(gbc.pc(), 0xb31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb31c), 0xcb);
        EXPECT(gbc.readMem(0xb31d), 0xbd);
        // CB BD 026A
        gbc.setState(0x6b8d, 0xbe8b, 0x2e70, 0xe59a, 0x868b, 0xe471, 0x1, 0x0);
        gbc.writeMem(0x6b8d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbe8b);
        EXPECT(gbc.pc(), 0x6b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 026B
        gbc.setState(0xc6d4, 0x8aa8, 0x4330, 0xc8d8, 0xc1f4, 0xdba3, 0x1, 0x1);
        gbc.writeMem(0xc6d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8aa8);
        EXPECT(gbc.pc(), 0xc6d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d4), 0xcb);
        EXPECT(gbc.readMem(0xc6d5), 0xbd);
        // CB BD 026C
        gbc.setState(0xe5f, 0xf009, 0x3440, 0x269b, 0x49b8, 0x42be, 0x1, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf009);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 026D
        gbc.setState(0xa98b, 0xe57c, 0xa0e0, 0x6939, 0x8f1b, 0x55e6, 0x1, 0x1);
        gbc.writeMem(0xa98b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe57c);
        EXPECT(gbc.pc(), 0xa98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98b), 0xcb);
        EXPECT(gbc.readMem(0xa98c), 0xbd);
        // CB BD 026E
        gbc.setState(0x2c34, 0x9e63, 0x1c80, 0xc98d, 0xb885, 0x77e, 0x1, 0x1);
        gbc.writeMem(0x2c34, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9e63);
        EXPECT(gbc.pc(), 0x2c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 026F
        gbc.setState(0x4265, 0x3ea6, 0x51e0, 0xa950, 0x9e39, 0xc3fc, 0x1, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3ea6);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0270
        gbc.setState(0x6b67, 0x40, 0xc6f0, 0xa098, 0x11f, 0x105, 0x1, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x40);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0271
        gbc.setState(0xc323, 0x5fbb, 0x9300, 0xe855, 0x6aea, 0x44e7, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5fbb);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc323), 0xcb);
        EXPECT(gbc.readMem(0xc324), 0xbd);
        // CB BD 0272
        gbc.setState(0x49a3, 0x45af, 0xf6e0, 0x697e, 0x6a53, 0xb191, 0x1, 0x1);
        gbc.writeMem(0x49a3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x45af);
        EXPECT(gbc.pc(), 0x49a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0273
        gbc.setState(0x7a12, 0x2986, 0x8a10, 0xc6f6, 0xcfe7, 0xd98f, 0x1, 0x0);
        gbc.writeMem(0x7a12, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2986);
        EXPECT(gbc.pc(), 0x7a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0274
        gbc.setState(0x7ea1, 0x3fc9, 0x9d30, 0xb4b7, 0xe205, 0xb439, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3fc9);
        EXPECT(gbc.pc(), 0x7ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0275
        gbc.setState(0xea8e, 0x4893, 0xcdf0, 0x2e50, 0xad81, 0x7d89, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4893);
        EXPECT(gbc.pc(), 0xea90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8e), 0xcb);
        EXPECT(gbc.readMem(0xea8f), 0xbd);
        // CB BD 0276
        gbc.setState(0x23d2, 0x3e5a, 0xa540, 0x6b9d, 0xf815, 0x9aa9, 0x0, 0x1);
        gbc.writeMem(0x23d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3e5a);
        EXPECT(gbc.pc(), 0x23d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0277
        gbc.setState(0xcfd1, 0xf250, 0x6840, 0xccce, 0xbd23, 0x867a, 0x0, 0x0);
        gbc.writeMem(0xcfd1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0xcfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd1), 0xcb);
        EXPECT(gbc.readMem(0xcfd2), 0xbd);
        // CB BD 0279
        gbc.setState(0xec11, 0xb81e, 0xc00, 0x4d2, 0x67ed, 0xb0ef, 0x0, 0x1);
        gbc.writeMem(0xec11, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb81e);
        EXPECT(gbc.pc(), 0xec13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec11), 0xcb);
        EXPECT(gbc.readMem(0xec12), 0xbd);
        // CB BD 027A
        gbc.setState(0x3e4a, 0xd48f, 0xa3c0, 0x858a, 0x737c, 0xace6, 0x0, 0x1);
        gbc.writeMem(0x3e4a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0x3e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 027B
        gbc.setState(0x7753, 0x98d5, 0x4400, 0x60d4, 0xea, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x7753, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x98d5);
        EXPECT(gbc.pc(), 0x7755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 027C
        gbc.setState(0x5c6c, 0x797d, 0x8890, 0x7378, 0x56cf, 0x5480, 0x1, 0x0);
        gbc.writeMem(0x5c6c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 027D
        gbc.setState(0xd26e, 0xd1bd, 0x20c0, 0x4ade, 0x6906, 0xc0bd, 0x1, 0x1);
        gbc.writeMem(0xd26e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd1bd);
        EXPECT(gbc.pc(), 0xd270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26e), 0xcb);
        EXPECT(gbc.readMem(0xd26f), 0xbd);
        // CB BD 027E
        gbc.setState(0x7c5e, 0x8dd6, 0x4700, 0x8bdd, 0xf1e6, 0xc5cf, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8dd6);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 027F
        gbc.setState(0x93eb, 0x5f49, 0xbaa0, 0x604c, 0xa18a, 0x85b2, 0x0, 0x1);
        gbc.writeMem(0x93eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5f49);
        EXPECT(gbc.pc(), 0x93ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93eb), 0xcb);
        EXPECT(gbc.readMem(0x93ec), 0xbd);
        // CB BD 0280
        gbc.setState(0xdf51, 0xa182, 0x2350, 0x741a, 0x9f63, 0xc7ff, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0xdf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf51), 0xcb);
        EXPECT(gbc.readMem(0xdf52), 0xbd);
        // CB BD 0281
        gbc.setState(0x2828, 0xd98a, 0x54a0, 0xd2dc, 0x54b0, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x2828, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x282a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0282
        gbc.setState(0xe5d8, 0xe5ef, 0x85a0, 0x7a8, 0xca31, 0x249e, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe5ef);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d8), 0xcb);
        EXPECT(gbc.readMem(0xe5d9), 0xbd);
        // CB BD 0283
        gbc.setState(0x6433, 0x72d, 0x9150, 0xd7fd, 0xf566, 0x45fa, 0x0, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x72d);
        EXPECT(gbc.pc(), 0x6435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0284
        gbc.setState(0x69c4, 0x14c2, 0x5ca0, 0x683e, 0x71f, 0xaee8, 0x1, 0x1);
        gbc.writeMem(0x69c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x14c2);
        EXPECT(gbc.pc(), 0x69c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0285
        gbc.setState(0x5d84, 0xd3cc, 0x3290, 0x6af3, 0x91fc, 0xeccd, 0x0, 0x1);
        gbc.writeMem(0x5d84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd3cc);
        EXPECT(gbc.pc(), 0x5d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0286
        gbc.setState(0xa6ce, 0x1a43, 0xcf30, 0x63a1, 0x6a00, 0x9476, 0x0, 0x1);
        gbc.writeMem(0xa6ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1a43);
        EXPECT(gbc.pc(), 0xa6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ce), 0xcb);
        EXPECT(gbc.readMem(0xa6cf), 0xbd);
        // CB BD 0287
        gbc.setState(0xa502, 0x753c, 0x26e0, 0x1e23, 0x330c, 0xed5e, 0x1, 0x1);
        gbc.writeMem(0xa502, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x753c);
        EXPECT(gbc.pc(), 0xa504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa502), 0xcb);
        EXPECT(gbc.readMem(0xa503), 0xbd);
        // CB BD 0288
        gbc.setState(0x4b84, 0x41a7, 0x8b40, 0xd947, 0x76e2, 0x162c, 0x1, 0x0);
        gbc.writeMem(0x4b84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x41a7);
        EXPECT(gbc.pc(), 0x4b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0289
        gbc.setState(0x4649, 0x104f, 0x9af0, 0x2c18, 0x65d5, 0xa4b1, 0x1, 0x1);
        gbc.writeMem(0x4649, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0x464b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 028A
        gbc.setState(0x3f59, 0x8335, 0x1500, 0x5acf, 0x5b86, 0x4545, 0x0, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8335);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 028B
        gbc.setState(0xa259, 0x96d9, 0x4010, 0x1573, 0xe738, 0x458d, 0x1, 0x1);
        gbc.writeMem(0xa259, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x96d9);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0xcb);
        EXPECT(gbc.readMem(0xa25a), 0xbd);
        // CB BD 028C
        gbc.setState(0x4add, 0xe17b, 0xaa60, 0x4d11, 0x1b8a, 0x9209, 0x0, 0x1);
        gbc.writeMem(0x4add, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 028D
        gbc.setState(0x17ae, 0x9211, 0xa60, 0x594b, 0xa75e, 0xd314, 0x1, 0x1);
        gbc.writeMem(0x17ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9211);
        EXPECT(gbc.pc(), 0x17b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 028E
        gbc.setState(0x7dc5, 0x2cb3, 0x3850, 0xb88e, 0xdc86, 0xe2a5, 0x0, 0x1);
        gbc.writeMem(0x7dc5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2cb3);
        EXPECT(gbc.pc(), 0x7dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 028F
        gbc.setState(0x40e7, 0xf313, 0xcdd0, 0x7704, 0x83db, 0x8c90, 0x0, 0x0);
        gbc.writeMem(0x40e7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf313);
        EXPECT(gbc.pc(), 0x40e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0290
        gbc.setState(0xe028, 0x2cf9, 0xabd0, 0xf213, 0x7d5f, 0xce49, 0x1, 0x0);
        gbc.writeMem(0xe028, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2cf9);
        EXPECT(gbc.pc(), 0xe02a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe028), 0xcb);
        EXPECT(gbc.readMem(0xe029), 0xbd);
        // CB BD 0291
        gbc.setState(0x5bc0, 0x15a5, 0xc3b0, 0xd748, 0x7bff, 0xad57, 0x1, 0x0);
        gbc.writeMem(0x5bc0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x15a5);
        EXPECT(gbc.pc(), 0x5bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0292
        gbc.setState(0x9935, 0x721d, 0x34c0, 0xda50, 0x591f, 0x4049, 0x0, 0x1);
        gbc.writeMem(0x9935, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x721d);
        EXPECT(gbc.pc(), 0x9937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9935), 0xcb);
        EXPECT(gbc.readMem(0x9936), 0xbd);
        // CB BD 0294
        gbc.setState(0x819, 0x82bd, 0xd290, 0x244f, 0xb23b, 0x2fe1, 0x0, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x82bd);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0295
        gbc.setState(0xc7f0, 0xa9d1, 0x4710, 0xab45, 0x7191, 0x33b2, 0x1, 0x0);
        gbc.writeMem(0xc7f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa9d1);
        EXPECT(gbc.pc(), 0xc7f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f0), 0xcb);
        EXPECT(gbc.readMem(0xc7f1), 0xbd);
        // CB BD 0296
        gbc.setState(0xcc40, 0x24ab, 0xa650, 0x1634, 0xe742, 0x28d9, 0x1, 0x0);
        gbc.writeMem(0xcc40, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x24ab);
        EXPECT(gbc.pc(), 0xcc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc40), 0xcb);
        EXPECT(gbc.readMem(0xcc41), 0xbd);
        // CB BD 0297
        gbc.setState(0x81d1, 0x74b5, 0x6790, 0xb146, 0xc8e5, 0x9aad, 0x0, 0x0);
        gbc.writeMem(0x81d1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x74b5);
        EXPECT(gbc.pc(), 0x81d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d1), 0xcb);
        EXPECT(gbc.readMem(0x81d2), 0xbd);
        // CB BD 0298
        gbc.setState(0x507d, 0x38c2, 0x5a80, 0xe96e, 0xe4c6, 0x4a47, 0x0, 0x0);
        gbc.writeMem(0x507d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x38c2);
        EXPECT(gbc.pc(), 0x507f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0299
        gbc.setState(0xccf3, 0xcf13, 0x2010, 0xb1b2, 0xce9f, 0x8d12, 0x0, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcf13);
        EXPECT(gbc.pc(), 0xccf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf3), 0xcb);
        EXPECT(gbc.readMem(0xccf4), 0xbd);
        // CB BD 029A
        gbc.setState(0xbf65, 0x4ce7, 0xd0b0, 0x7095, 0xcb2, 0xa7bf, 0x0, 0x1);
        gbc.writeMem(0xbf65, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4ce7);
        EXPECT(gbc.pc(), 0xbf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf65), 0xcb);
        EXPECT(gbc.readMem(0xbf66), 0xbd);
        // CB BD 029B
        gbc.setState(0xbd54, 0xddcb, 0x3cf0, 0x5afc, 0x129f, 0x46b5, 0x0, 0x1);
        gbc.writeMem(0xbd54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xddcb);
        EXPECT(gbc.pc(), 0xbd56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd54), 0xcb);
        EXPECT(gbc.readMem(0xbd55), 0xbd);
        // CB BD 029C
        gbc.setState(0xccdb, 0x2911, 0xb8f0, 0x2c1b, 0x9a98, 0x3ae, 0x1, 0x0);
        gbc.writeMem(0xccdb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2911);
        EXPECT(gbc.pc(), 0xccdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccdb), 0xcb);
        EXPECT(gbc.readMem(0xccdc), 0xbd);
        // CB BD 029D
        gbc.setState(0x9986, 0xe408, 0x6670, 0xcbc3, 0x3208, 0x421b, 0x1, 0x1);
        gbc.writeMem(0x9986, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe408);
        EXPECT(gbc.pc(), 0x9988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9986), 0xcb);
        EXPECT(gbc.readMem(0x9987), 0xbd);
        // CB BD 029E
        gbc.setState(0xbdf5, 0xb434, 0xe940, 0x27d, 0xeab7, 0x6642, 0x0, 0x1);
        gbc.writeMem(0xbdf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb434);
        EXPECT(gbc.pc(), 0xbdf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf5), 0xcb);
        EXPECT(gbc.readMem(0xbdf6), 0xbd);
        // CB BD 029F
        gbc.setState(0x63e3, 0x5dd5, 0xaf40, 0xfb01, 0x57dc, 0xb8a4, 0x0, 0x1);
        gbc.writeMem(0x63e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5dd5);
        EXPECT(gbc.pc(), 0x63e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02A0
        gbc.setState(0xd844, 0x25b3, 0xc0b0, 0xd4f0, 0x9e65, 0x3be7, 0x0, 0x1);
        gbc.writeMem(0xd844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x25b3);
        EXPECT(gbc.pc(), 0xd846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd844), 0xcb);
        EXPECT(gbc.readMem(0xd845), 0xbd);
        // CB BD 02A1
        gbc.setState(0x4ca, 0xcc12, 0x2120, 0x6abe, 0x8c9a, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0x4ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcc12);
        EXPECT(gbc.pc(), 0x4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02A2
        gbc.setState(0x5f83, 0x6f1a, 0xa7c0, 0xed12, 0xc20c, 0xd41d, 0x0, 0x1);
        gbc.writeMem(0x5f83, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6f1a);
        EXPECT(gbc.pc(), 0x5f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02A3
        gbc.setState(0xd99c, 0x4b6e, 0xee80, 0x3c97, 0xefcd, 0x402, 0x0, 0x0);
        gbc.writeMem(0xd99c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4b6e);
        EXPECT(gbc.pc(), 0xd99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99c), 0xcb);
        EXPECT(gbc.readMem(0xd99d), 0xbd);
        // CB BD 02A4
        gbc.setState(0xca7e, 0x2b3e, 0x84b0, 0x9101, 0x4a92, 0x7a0, 0x1, 0x0);
        gbc.writeMem(0xca7e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2b3e);
        EXPECT(gbc.pc(), 0xca80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7e), 0xcb);
        EXPECT(gbc.readMem(0xca7f), 0xbd);
        // CB BD 02A5
        gbc.setState(0xef3f, 0xf661, 0xc2d0, 0x35d7, 0xb712, 0x938, 0x1, 0x0);
        gbc.writeMem(0xef3f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf661);
        EXPECT(gbc.pc(), 0xef41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3f), 0xcb);
        EXPECT(gbc.readMem(0xef40), 0xbd);
        // CB BD 02A6
        gbc.setState(0x59ca, 0x6e5f, 0x8200, 0xae85, 0xe447, 0x4660, 0x1, 0x0);
        gbc.writeMem(0x59ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6e5f);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02A7
        gbc.setState(0x976f, 0x270, 0x2280, 0xfc8b, 0x5503, 0x86bc, 0x0, 0x1);
        gbc.writeMem(0x976f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x270);
        EXPECT(gbc.pc(), 0x9771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976f), 0xcb);
        EXPECT(gbc.readMem(0x9770), 0xbd);
        // CB BD 02A8
        gbc.setState(0x403d, 0x56fd, 0x8da0, 0x8a74, 0xea04, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x56fd);
        EXPECT(gbc.pc(), 0x403f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02A9
        gbc.setState(0xdeb2, 0xc168, 0xc8c0, 0xee75, 0xd324, 0x6734, 0x0, 0x0);
        gbc.writeMem(0xdeb2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc168);
        EXPECT(gbc.pc(), 0xdeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb2), 0xcb);
        EXPECT(gbc.readMem(0xdeb3), 0xbd);
        // CB BD 02AB
        gbc.setState(0x3dbf, 0xf21f, 0x4790, 0x6249, 0xb2f0, 0x51a, 0x0, 0x0);
        gbc.writeMem(0x3dbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0x3dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02AC
        gbc.setState(0x1232, 0x2536, 0x2100, 0x5971, 0xf532, 0xb592, 0x0, 0x0);
        gbc.writeMem(0x1232, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2536);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02AD
        gbc.setState(0x7433, 0x3a56, 0x3ad0, 0xfc39, 0xe20, 0xf3a5, 0x0, 0x1);
        gbc.writeMem(0x7433, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3a56);
        EXPECT(gbc.pc(), 0x7435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02AF
        gbc.setState(0xc53, 0x6462, 0x960, 0x1d14, 0x6661, 0xf5b5, 0x0, 0x0);
        gbc.writeMem(0xc53, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6462);
        EXPECT(gbc.pc(), 0xc55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02B0
        gbc.setState(0x54a1, 0x1419, 0xddb0, 0x433, 0xc419, 0x1ce2, 0x0, 0x0);
        gbc.writeMem(0x54a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1419);
        EXPECT(gbc.pc(), 0x54a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02B1
        gbc.setState(0x6738, 0xd267, 0xc9f0, 0xecf5, 0x277e, 0x65c3, 0x1, 0x0);
        gbc.writeMem(0x6738, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd267);
        EXPECT(gbc.pc(), 0x673a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02B2
        gbc.setState(0x1287, 0x8c68, 0x4d10, 0x8d38, 0x6136, 0xa297, 0x0, 0x1);
        gbc.writeMem(0x1287, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8c68);
        EXPECT(gbc.pc(), 0x1289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02B3
        gbc.setState(0x7a5c, 0xc190, 0x1d50, 0x668d, 0xeaa3, 0x7cba, 0x1, 0x0);
        gbc.writeMem(0x7a5c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc190);
        EXPECT(gbc.pc(), 0x7a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02B4
        gbc.setState(0xd706, 0x30b6, 0x1d80, 0x19da, 0x4d37, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0xd706, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x30b6);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd706), 0xcb);
        EXPECT(gbc.readMem(0xd707), 0xbd);
        // CB BD 02B5
        gbc.setState(0x9c15, 0xf126, 0x20e0, 0xe280, 0x974f, 0xbbe9, 0x0, 0x0);
        gbc.writeMem(0x9c15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf126);
        EXPECT(gbc.pc(), 0x9c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c15), 0xcb);
        EXPECT(gbc.readMem(0x9c16), 0xbd);
        // CB BD 02B6
        gbc.setState(0xddf, 0x920b, 0xc9c0, 0xa0d6, 0x22e6, 0xaf0, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x920b);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02B7
        gbc.setState(0x53e1, 0x83e2, 0xb580, 0x91ad, 0xb6fb, 0x9f3e, 0x1, 0x0);
        gbc.writeMem(0x53e1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0x53e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02B8
        gbc.setState(0x91f, 0xac78, 0xce90, 0x4cd8, 0x9aaa, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0x91f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xac78);
        EXPECT(gbc.pc(), 0x921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02B9
        gbc.setState(0x716f, 0xbb27, 0xed90, 0x57f6, 0x6284, 0x8aa, 0x0, 0x1);
        gbc.writeMem(0x716f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x7171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02BA
        gbc.setState(0x17b1, 0xf666, 0xa3b0, 0x157b, 0x9285, 0x75c2, 0x1, 0x0);
        gbc.writeMem(0x17b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf666);
        EXPECT(gbc.pc(), 0x17b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02BB
        gbc.setState(0x736a, 0x15a7, 0xb5e0, 0xd309, 0xa8, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0x736a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x15a7);
        EXPECT(gbc.pc(), 0x736c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02BC
        gbc.setState(0xcff9, 0x7b84, 0x5960, 0x8a4f, 0x87c7, 0x46a9, 0x1, 0x0);
        gbc.writeMem(0xcff9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff9), 0xcb);
        EXPECT(gbc.readMem(0xcffa), 0xbd);
        // CB BD 02BD
        gbc.setState(0xc3a1, 0x28b2, 0xca30, 0x7e2f, 0x4427, 0x9530, 0x1, 0x1);
        gbc.writeMem(0xc3a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x28b2);
        EXPECT(gbc.pc(), 0xc3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a1), 0xcb);
        EXPECT(gbc.readMem(0xc3a2), 0xbd);
        // CB BD 02BE
        gbc.setState(0x18c9, 0x1fa5, 0x5db0, 0x1413, 0xafe3, 0x635b, 0x1, 0x1);
        gbc.writeMem(0x18c9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1fa5);
        EXPECT(gbc.pc(), 0x18cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02BF
        gbc.setState(0xf7, 0xa097, 0x88c0, 0xdf8d, 0x6968, 0x8584, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa097);
        EXPECT(gbc.pc(), 0xf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02C0
        gbc.setState(0x696d, 0xf65e, 0xa820, 0xf098, 0x92d, 0x566d, 0x0, 0x1);
        gbc.writeMem(0x696d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf65e);
        EXPECT(gbc.pc(), 0x696f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02C1
        gbc.setState(0x610e, 0x6175, 0x89c0, 0xb984, 0x7677, 0xec2d, 0x1, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6175);
        EXPECT(gbc.pc(), 0x6110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02C2
        gbc.setState(0xd532, 0x912e, 0x6170, 0x4f77, 0x5b94, 0x7447, 0x0, 0x0);
        gbc.writeMem(0xd532, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x912e);
        EXPECT(gbc.pc(), 0xd534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd532), 0xcb);
        EXPECT(gbc.readMem(0xd533), 0xbd);
        // CB BD 02C3
        gbc.setState(0x352c, 0xd203, 0x1cb0, 0xf3, 0x947a, 0x1967, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd203);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02C4
        gbc.setState(0x7a01, 0xd34a, 0xb2d0, 0xdd76, 0x2d1f, 0x805, 0x0, 0x1);
        gbc.writeMem(0x7a01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd34a);
        EXPECT(gbc.pc(), 0x7a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02C5
        gbc.setState(0x46dd, 0x1a5e, 0xf810, 0xc8f8, 0x5e09, 0x7ec9, 0x1, 0x1);
        gbc.writeMem(0x46dd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1a5e);
        EXPECT(gbc.pc(), 0x46df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02C6
        gbc.setState(0x492a, 0xd0aa, 0x76a0, 0x9c42, 0x5e48, 0x73f8, 0x1, 0x0);
        gbc.writeMem(0x492a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd0aa);
        EXPECT(gbc.pc(), 0x492c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02C7
        gbc.setState(0x1631, 0xf7ec, 0x4810, 0xa2f0, 0x95ab, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x1631, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf7ec);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02C8
        gbc.setState(0x6bf4, 0xaeab, 0x3e20, 0x4c8b, 0xc13a, 0x114d, 0x1, 0x0);
        gbc.writeMem(0x6bf4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaeab);
        EXPECT(gbc.pc(), 0x6bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02C9
        gbc.setState(0x51d6, 0xab78, 0xf090, 0xe548, 0x76, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0x51d6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0x51d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02CA
        gbc.setState(0x8c9e, 0xeaf8, 0xf0a0, 0x394b, 0xc696, 0x1ea0, 0x0, 0x1);
        gbc.writeMem(0x8c9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x8ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9e), 0xcb);
        EXPECT(gbc.readMem(0x8c9f), 0xbd);
        // CB BD 02CB
        gbc.setState(0x7681, 0xc627, 0xd320, 0xba6d, 0x2165, 0x25b3, 0x1, 0x1);
        gbc.writeMem(0x7681, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc627);
        EXPECT(gbc.pc(), 0x7683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02CD
        gbc.setState(0x5f5a, 0x6aa8, 0xb310, 0xcaac, 0x5396, 0xc58b, 0x1, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6aa8);
        EXPECT(gbc.pc(), 0x5f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02CE
        gbc.setState(0xe154, 0xc5d1, 0x7110, 0x8380, 0xc057, 0xf82f, 0x1, 0x1);
        gbc.writeMem(0xe154, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc5d1);
        EXPECT(gbc.pc(), 0xe156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe154), 0xcb);
        EXPECT(gbc.readMem(0xe155), 0xbd);
        // CB BD 02CF
        gbc.setState(0x1405, 0x39d4, 0x9290, 0x8535, 0xb7f5, 0xed84, 0x1, 0x1);
        gbc.writeMem(0x1405, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x39d4);
        EXPECT(gbc.pc(), 0x1407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02D1
        gbc.setState(0xaa86, 0x41f1, 0xbbb0, 0xff00, 0x149, 0xfccc, 0x0, 0x1);
        gbc.writeMem(0xaa86, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x41f1);
        EXPECT(gbc.pc(), 0xaa88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa86), 0xcb);
        EXPECT(gbc.readMem(0xaa87), 0xbd);
        // CB BD 02D3
        gbc.setState(0xe62c, 0xaab1, 0x9810, 0xe2ff, 0x6161, 0x545f, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaab1);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62c), 0xcb);
        EXPECT(gbc.readMem(0xe62d), 0xbd);
        // CB BD 02D4
        gbc.setState(0x5d1b, 0x3fb, 0xd580, 0x98d0, 0x8113, 0xc00f, 0x0, 0x0);
        gbc.writeMem(0x5d1b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3fb);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02D5
        gbc.setState(0xeb57, 0x6632, 0x9fc0, 0x7a6c, 0x5270, 0xe4c9, 0x1, 0x1);
        gbc.writeMem(0xeb57, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6632);
        EXPECT(gbc.pc(), 0xeb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb57), 0xcb);
        EXPECT(gbc.readMem(0xeb58), 0xbd);
        // CB BD 02D6
        gbc.setState(0x1d42, 0x467b, 0x9870, 0xcd5f, 0xc505, 0x1317, 0x1, 0x1);
        gbc.writeMem(0x1d42, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x467b);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02D7
        gbc.setState(0x3c7c, 0x2fbf, 0x6b40, 0xc954, 0x8d84, 0x9c80, 0x1, 0x0);
        gbc.writeMem(0x3c7c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2fbf);
        EXPECT(gbc.pc(), 0x3c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02D8
        gbc.setState(0x5d68, 0xc846, 0xa210, 0xa426, 0x41d2, 0xcd9c, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc846);
        EXPECT(gbc.pc(), 0x5d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02D9
        gbc.setState(0xdb99, 0x6d74, 0xf8c0, 0x2b6a, 0xc21e, 0x2d5f, 0x1, 0x1);
        gbc.writeMem(0xdb99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6d74);
        EXPECT(gbc.pc(), 0xdb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb99), 0xcb);
        EXPECT(gbc.readMem(0xdb9a), 0xbd);
        // CB BD 02DA
        gbc.setState(0x42da, 0x3669, 0x6110, 0x1ed2, 0x72f6, 0x930e, 0x0, 0x1);
        gbc.writeMem(0x42da, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3669);
        EXPECT(gbc.pc(), 0x42dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02DB
        gbc.setState(0x4372, 0x42f7, 0xc720, 0xa227, 0xbf12, 0xe536, 0x0, 0x1);
        gbc.writeMem(0x4372, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x42f7);
        EXPECT(gbc.pc(), 0x4374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02DC
        gbc.setState(0x3892, 0x8c84, 0x6990, 0x6cc1, 0x654c, 0xf940, 0x1, 0x0);
        gbc.writeMem(0x3892, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8c84);
        EXPECT(gbc.pc(), 0x3894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02DD
        gbc.setState(0x811a, 0xbfbc, 0x6f60, 0xbd5c, 0xa16, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x811a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbfbc);
        EXPECT(gbc.pc(), 0x811c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811a), 0xcb);
        EXPECT(gbc.readMem(0x811b), 0xbd);
        // CB BD 02DF
        gbc.setState(0xe722, 0x7349, 0x89b0, 0x750, 0xc8f1, 0xfab7, 0x1, 0x1);
        gbc.writeMem(0xe722, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7349);
        EXPECT(gbc.pc(), 0xe724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe722), 0xcb);
        EXPECT(gbc.readMem(0xe723), 0xbd);
        // CB BD 02E0
        gbc.setState(0x8126, 0xf4a9, 0x4780, 0x2aaf, 0x9f8c, 0x5cc1, 0x0, 0x0);
        gbc.writeMem(0x8126, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf4a9);
        EXPECT(gbc.pc(), 0x8128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8126), 0xcb);
        EXPECT(gbc.readMem(0x8127), 0xbd);
        // CB BD 02E1
        gbc.setState(0xf26, 0x9c4c, 0x9650, 0x3765, 0xcd24, 0xf5aa, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0xf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02E2
        gbc.setState(0x91e6, 0xe26a, 0x7100, 0xee67, 0x1738, 0x512d, 0x0, 0x0);
        gbc.writeMem(0x91e6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe26a);
        EXPECT(gbc.pc(), 0x91e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e6), 0xcb);
        EXPECT(gbc.readMem(0x91e7), 0xbd);
        // CB BD 02E3
        gbc.setState(0xbd4c, 0x52e0, 0xd140, 0x425f, 0x858c, 0x5bec, 0x0, 0x0);
        gbc.writeMem(0xbd4c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x52e0);
        EXPECT(gbc.pc(), 0xbd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4c), 0xcb);
        EXPECT(gbc.readMem(0xbd4d), 0xbd);
        // CB BD 02E4
        gbc.setState(0x27e1, 0x2b39, 0xf360, 0x9fcf, 0x5cee, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0x27e1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2b39);
        EXPECT(gbc.pc(), 0x27e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02E5
        gbc.setState(0x5cc6, 0xe06a, 0x73e0, 0xac0c, 0x3af9, 0x6def, 0x1, 0x1);
        gbc.writeMem(0x5cc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe06a);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02E6
        gbc.setState(0x4123, 0x5ab0, 0x9200, 0x79b7, 0xc868, 0x666f, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5ab0);
        EXPECT(gbc.pc(), 0x4125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02E7
        gbc.setState(0x17ae, 0x4aee, 0xd310, 0xcf75, 0x3672, 0x750b, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0x17b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02E8
        gbc.setState(0xc3aa, 0x1465, 0xa0a0, 0x59cc, 0xd741, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0xc3aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1465);
        EXPECT(gbc.pc(), 0xc3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3aa), 0xcb);
        EXPECT(gbc.readMem(0xc3ab), 0xbd);
        // CB BD 02E9
        gbc.setState(0x9606, 0xe4e9, 0xad50, 0xa849, 0x9d71, 0x17f5, 0x0, 0x0);
        gbc.writeMem(0x9606, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe4e9);
        EXPECT(gbc.pc(), 0x9608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9606), 0xcb);
        EXPECT(gbc.readMem(0x9607), 0xbd);
        // CB BD 02EA
        gbc.setState(0x9d12, 0xae87, 0x3bb0, 0x8424, 0x24ac, 0xeea3, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xae87);
        EXPECT(gbc.pc(), 0x9d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d12), 0xcb);
        EXPECT(gbc.readMem(0x9d13), 0xbd);
        // CB BD 02EB
        gbc.setState(0x1d6c, 0xb93a, 0x8900, 0xa72e, 0x2e8d, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x1d6c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb93a);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02EC
        gbc.setState(0xae59, 0x4e8f, 0xd900, 0xd1ec, 0x14bf, 0xddd3, 0x1, 0x0);
        gbc.writeMem(0xae59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0xae5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae59), 0xcb);
        EXPECT(gbc.readMem(0xae5a), 0xbd);
        // CB BD 02ED
        gbc.setState(0xa0fe, 0x6472, 0x1e00, 0xd0d0, 0x453c, 0x7b40, 0x1, 0x0);
        gbc.writeMem(0xa0fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6472);
        EXPECT(gbc.pc(), 0xa100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fe), 0xcb);
        EXPECT(gbc.readMem(0xa0ff), 0xbd);
        // CB BD 02EE
        gbc.setState(0xaaf6, 0x2d9, 0x2b00, 0x2889, 0x9c14, 0xb836, 0x0, 0x1);
        gbc.writeMem(0xaaf6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2d9);
        EXPECT(gbc.pc(), 0xaaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf6), 0xcb);
        EXPECT(gbc.readMem(0xaaf7), 0xbd);
        // CB BD 02EF
        gbc.setState(0xbce, 0x27a5, 0xaa0, 0xe905, 0x3c2, 0xa1eb, 0x1, 0x1);
        gbc.writeMem(0xbce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x27a5);
        EXPECT(gbc.pc(), 0xbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02F0
        gbc.setState(0x1fe3, 0xb5f6, 0x3ac0, 0x42f7, 0x6d67, 0xdb1d, 0x1, 0x1);
        gbc.writeMem(0x1fe3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb5f6);
        EXPECT(gbc.pc(), 0x1fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02F1
        gbc.setState(0xe3af, 0x3e5e, 0xefd0, 0xc5bd, 0xa1f8, 0xac92, 0x0, 0x0);
        gbc.writeMem(0xe3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3e5e);
        EXPECT(gbc.pc(), 0xe3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3af), 0xcb);
        EXPECT(gbc.readMem(0xe3b0), 0xbd);
        // CB BD 02F2
        gbc.setState(0x33c8, 0xf054, 0x18f0, 0x7c54, 0x55f9, 0x5be8, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf054);
        EXPECT(gbc.pc(), 0x33ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 02F3
        gbc.setState(0x9515, 0x29fe, 0x6310, 0x2f92, 0xefd0, 0x53ee, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x29fe);
        EXPECT(gbc.pc(), 0x9517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9515), 0xcb);
        EXPECT(gbc.readMem(0x9516), 0xbd);
        // CB BD 02F4
        gbc.setState(0x7cf0, 0x93d9, 0xdbe0, 0xf350, 0x5e41, 0xb083, 0x0, 0x0);
        gbc.writeMem(0x7cf0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x93d9);
        EXPECT(gbc.pc(), 0x7cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02F6
        gbc.setState(0x9d3b, 0x15cd, 0xcc40, 0xfced, 0xfab0, 0xa5c, 0x0, 0x1);
        gbc.writeMem(0x9d3b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x15cd);
        EXPECT(gbc.pc(), 0x9d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3b), 0xcb);
        EXPECT(gbc.readMem(0x9d3c), 0xbd);
        // CB BD 02F7
        gbc.setState(0x7af5, 0xcd4b, 0x2a00, 0x5029, 0x5005, 0xf02d, 0x1, 0x1);
        gbc.writeMem(0x7af5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcd4b);
        EXPECT(gbc.pc(), 0x7af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02F8
        gbc.setState(0xe248, 0xb920, 0x2ff0, 0xc1d4, 0xfcc3, 0xc9cf, 0x0, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb920);
        EXPECT(gbc.pc(), 0xe24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe248), 0xcb);
        EXPECT(gbc.readMem(0xe249), 0xbd);
        // CB BD 02F9
        gbc.setState(0x4a39, 0x279e, 0x5d20, 0xfdb5, 0x366e, 0x8af7, 0x1, 0x0);
        gbc.writeMem(0x4a39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x279e);
        EXPECT(gbc.pc(), 0x4a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02FA
        gbc.setState(0xee9e, 0x4b3d, 0x4620, 0x6d9d, 0x7aca, 0x1fbd, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4b3d);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9e), 0xcb);
        EXPECT(gbc.readMem(0xee9f), 0xbd);
        // CB BD 02FB
        gbc.setState(0xa428, 0x20da, 0x6980, 0xbfab, 0x4292, 0x26fc, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x20da);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0xbd);
        // CB BD 02FC
        gbc.setState(0xc7a5, 0x94c7, 0x8170, 0xe1fc, 0xffff, 0x8062, 0x1, 0x1);
        gbc.writeMem(0xc7a5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x94c7);
        EXPECT(gbc.pc(), 0xc7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a5), 0xcb);
        EXPECT(gbc.readMem(0xc7a6), 0xbd);
        // CB BD 02FD
        gbc.setState(0x7c90, 0x1156, 0x4980, 0xdb7d, 0x2cfa, 0xf114, 0x0, 0x1);
        gbc.writeMem(0x7c90, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1156);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02FE
        gbc.setState(0x61b9, 0x48b8, 0x1ac0, 0xbd3, 0x1c0b, 0x1acc, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x48b8);
        EXPECT(gbc.pc(), 0x61bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 02FF
        gbc.setState(0x46d5, 0xf986, 0x3770, 0x352b, 0xe468, 0x9177, 0x0, 0x1);
        gbc.writeMem(0x46d5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf986);
        EXPECT(gbc.pc(), 0x46d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0300
        gbc.setState(0x4407, 0x3427, 0xb5b0, 0xba10, 0x9da0, 0x97fd, 0x0, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3427);
        EXPECT(gbc.pc(), 0x4409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0301
        gbc.setState(0x2f05, 0x2cb2, 0x8d50, 0x84f1, 0x94e6, 0x3c9, 0x1, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2cb2);
        EXPECT(gbc.pc(), 0x2f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0302
        gbc.setState(0x33da, 0xbf0d, 0x92c0, 0x47e3, 0x5935, 0xfe07, 0x0, 0x1);
        gbc.writeMem(0x33da, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbf0d);
        EXPECT(gbc.pc(), 0x33dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0303
        gbc.setState(0xe0de, 0x9300, 0x2cd0, 0x4913, 0x3e3d, 0x6967, 0x1, 0x1);
        gbc.writeMem(0xe0de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9300);
        EXPECT(gbc.pc(), 0xe0e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0de), 0xcb);
        EXPECT(gbc.readMem(0xe0df), 0xbd);
        // CB BD 0304
        gbc.setState(0xa1b2, 0x4a50, 0x70e0, 0x37e8, 0xe2dc, 0x3962, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4a50);
        EXPECT(gbc.pc(), 0xa1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b2), 0xcb);
        EXPECT(gbc.readMem(0xa1b3), 0xbd);
        // CB BD 0305
        gbc.setState(0x8368, 0xb473, 0x2100, 0xc692, 0xb42d, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb473);
        EXPECT(gbc.pc(), 0x836a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8368), 0xcb);
        EXPECT(gbc.readMem(0x8369), 0xbd);
        // CB BD 0306
        gbc.setState(0x5e54, 0xf64c, 0xd570, 0x1549, 0x4b6, 0xef47, 0x0, 0x0);
        gbc.writeMem(0x5e54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf64c);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0307
        gbc.setState(0x697b, 0x4b04, 0x44e0, 0x814d, 0x8ae0, 0xaec, 0x1, 0x0);
        gbc.writeMem(0x697b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4b04);
        EXPECT(gbc.pc(), 0x697d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0308
        gbc.setState(0xed59, 0x9278, 0x68a0, 0xa7e6, 0x15e3, 0xec00, 0x1, 0x0);
        gbc.writeMem(0xed59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9278);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0xbd);
        // CB BD 0309
        gbc.setState(0x8b6a, 0xaa1d, 0x7bc0, 0x9a9b, 0x82bf, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0x8b6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaa1d);
        EXPECT(gbc.pc(), 0x8b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6a), 0xcb);
        EXPECT(gbc.readMem(0x8b6b), 0xbd);
        // CB BD 030A
        gbc.setState(0x3891, 0xfa93, 0xb510, 0x3cf6, 0xcce5, 0xac7, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0x3893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 030B
        gbc.setState(0x11e0, 0x640d, 0x2d90, 0x15e2, 0x3e6a, 0xdcd7, 0x1, 0x0);
        gbc.writeMem(0x11e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x640d);
        EXPECT(gbc.pc(), 0x11e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 030D
        gbc.setState(0xb0f9, 0xbd15, 0x6530, 0x3938, 0xdd68, 0x47fc, 0x1, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbd15);
        EXPECT(gbc.pc(), 0xb0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f9), 0xcb);
        EXPECT(gbc.readMem(0xb0fa), 0xbd);
        // CB BD 030E
        gbc.setState(0xb161, 0x5142, 0x3dc0, 0x3521, 0x4833, 0xdbdf, 0x1, 0x1);
        gbc.writeMem(0xb161, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5142);
        EXPECT(gbc.pc(), 0xb163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb161), 0xcb);
        EXPECT(gbc.readMem(0xb162), 0xbd);
        // CB BD 030F
        gbc.setState(0x8224, 0xc4c4, 0x2c00, 0xd3dd, 0x517a, 0x7ee2, 0x1, 0x1);
        gbc.writeMem(0x8224, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc4c4);
        EXPECT(gbc.pc(), 0x8226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8224), 0xcb);
        EXPECT(gbc.readMem(0x8225), 0xbd);
        // CB BD 0310
        gbc.setState(0x77ef, 0x3980, 0x6310, 0xe40d, 0x3041, 0x3141, 0x0, 0x1);
        gbc.writeMem(0x77ef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3980);
        EXPECT(gbc.pc(), 0x77f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0311
        gbc.setState(0x1940, 0x4dde, 0xd6c0, 0xc55e, 0x4a16, 0xa03e, 0x1, 0x1);
        gbc.writeMem(0x1940, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4dde);
        EXPECT(gbc.pc(), 0x1942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0312
        gbc.setState(0xec2a, 0x4d31, 0x6000, 0xe858, 0xe934, 0x8883, 0x1, 0x0);
        gbc.writeMem(0xec2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4d31);
        EXPECT(gbc.pc(), 0xec2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2a), 0xcb);
        EXPECT(gbc.readMem(0xec2b), 0xbd);
        // CB BD 0313
        gbc.setState(0xbec, 0xc110, 0x8010, 0xd282, 0xc0c7, 0x6fc1, 0x0, 0x0);
        gbc.writeMem(0xbec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc110);
        EXPECT(gbc.pc(), 0xbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0314
        gbc.setState(0x11e6, 0xd3a, 0x59a0, 0x4320, 0x3949, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0x11e6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd3a);
        EXPECT(gbc.pc(), 0x11e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0315
        gbc.setState(0x5217, 0x981a, 0x6ab0, 0x7835, 0x67c9, 0x7e7c, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0x5219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0316
        gbc.setState(0x4004, 0xe569, 0x7cb0, 0xeca2, 0xc015, 0xc640, 0x1, 0x1);
        gbc.writeMem(0x4004, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe569);
        EXPECT(gbc.pc(), 0x4006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0317
        gbc.setState(0x899, 0xb3b9, 0xf8d0, 0x49e1, 0x65da, 0xd0af, 0x1, 0x1);
        gbc.writeMem(0x899, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb3b9);
        EXPECT(gbc.pc(), 0x89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0318
        gbc.setState(0x4522, 0x3def, 0xe8e0, 0x3c24, 0xe848, 0x2fe8, 0x0, 0x0);
        gbc.writeMem(0x4522, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3def);
        EXPECT(gbc.pc(), 0x4524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0319
        gbc.setState(0x4c89, 0xffb1, 0x4d50, 0x7564, 0x23f2, 0xc4d8, 0x0, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xffb1);
        EXPECT(gbc.pc(), 0x4c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 031A
        gbc.setState(0x8cac, 0xc11c, 0x8760, 0xb0ee, 0xeadd, 0x9c21, 0x0, 0x1);
        gbc.writeMem(0x8cac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc11c);
        EXPECT(gbc.pc(), 0x8cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cac), 0xcb);
        EXPECT(gbc.readMem(0x8cad), 0xbd);
        // CB BD 031B
        gbc.setState(0x2e7b, 0x71c7, 0x10a0, 0x5ec3, 0xa389, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0x2e7b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x71c7);
        EXPECT(gbc.pc(), 0x2e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 031C
        gbc.setState(0x7ccd, 0xdb46, 0xda20, 0xf88a, 0x97b, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdb46);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 031D
        gbc.setState(0x5130, 0xfd76, 0x810, 0x5f4a, 0x538c, 0xfb18, 0x1, 0x1);
        gbc.writeMem(0x5130, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfd76);
        EXPECT(gbc.pc(), 0x5132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 031F
        gbc.setState(0x56a, 0xd683, 0x7ec0, 0xa55a, 0x3e00, 0xdae9, 0x0, 0x0);
        gbc.writeMem(0x56a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd683);
        EXPECT(gbc.pc(), 0x56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0320
        gbc.setState(0x7d2b, 0x3075, 0x8830, 0x1507, 0xa53b, 0x1a60, 0x1, 0x1);
        gbc.writeMem(0x7d2b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3075);
        EXPECT(gbc.pc(), 0x7d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0321
        gbc.setState(0xeb91, 0x9229, 0x8400, 0xe844, 0x9983, 0xf99c, 0x0, 0x1);
        gbc.writeMem(0xeb91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9229);
        EXPECT(gbc.pc(), 0xeb93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb91), 0xcb);
        EXPECT(gbc.readMem(0xeb92), 0xbd);
        // CB BD 0322
        gbc.setState(0xa9aa, 0x8dbc, 0x25d0, 0xcf2a, 0x60a6, 0x8f03, 0x1, 0x0);
        gbc.writeMem(0xa9aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8dbc);
        EXPECT(gbc.pc(), 0xa9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9aa), 0xcb);
        EXPECT(gbc.readMem(0xa9ab), 0xbd);
        // CB BD 0323
        gbc.setState(0x976c, 0x5b55, 0x90e0, 0xec53, 0xa67b, 0xd737, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5b55);
        EXPECT(gbc.pc(), 0x976e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976c), 0xcb);
        EXPECT(gbc.readMem(0x976d), 0xbd);
        // CB BD 0324
        gbc.setState(0x9fa, 0xa17, 0x1d60, 0xbc5c, 0x8216, 0x201b, 0x0, 0x1);
        gbc.writeMem(0x9fa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa17);
        EXPECT(gbc.pc(), 0x9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0325
        gbc.setState(0x767b, 0xd1bf, 0xdfa0, 0xa16b, 0xe364, 0xa1a2, 0x0, 0x0);
        gbc.writeMem(0x767b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd1bf);
        EXPECT(gbc.pc(), 0x767d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0326
        gbc.setState(0xa724, 0x244a, 0xf630, 0xd3dc, 0xbf8a, 0xf53e, 0x0, 0x1);
        gbc.writeMem(0xa724, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x244a);
        EXPECT(gbc.pc(), 0xa726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa724), 0xcb);
        EXPECT(gbc.readMem(0xa725), 0xbd);
        // CB BD 0327
        gbc.setState(0x3948, 0xc40c, 0x5ba0, 0x5985, 0x8d50, 0xa1ec, 0x1, 0x0);
        gbc.writeMem(0x3948, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc40c);
        EXPECT(gbc.pc(), 0x394a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0328
        gbc.setState(0xe591, 0xb32a, 0xcfb0, 0x84d0, 0x6552, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xe591, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb32a);
        EXPECT(gbc.pc(), 0xe593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe591), 0xcb);
        EXPECT(gbc.readMem(0xe592), 0xbd);
        // CB BD 0329
        gbc.setState(0xbdec, 0x5872, 0x740, 0xd150, 0xd1d1, 0xe487, 0x0, 0x0);
        gbc.writeMem(0xbdec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5872);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdec), 0xcb);
        EXPECT(gbc.readMem(0xbded), 0xbd);
        // CB BD 032A
        gbc.setState(0x5fc6, 0x4995, 0xf920, 0xc3ea, 0x9a76, 0x2c4a, 0x0, 0x0);
        gbc.writeMem(0x5fc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0x5fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 032B
        gbc.setState(0x19ce, 0x9b40, 0x67c0, 0x9adb, 0x33e1, 0x72dc, 0x1, 0x1);
        gbc.writeMem(0x19ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9b40);
        EXPECT(gbc.pc(), 0x19d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 032C
        gbc.setState(0x2fbe, 0xdfef, 0xd120, 0xa6d2, 0x8fc7, 0xd16d, 0x1, 0x0);
        gbc.writeMem(0x2fbe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdfef);
        EXPECT(gbc.pc(), 0x2fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 032D
        gbc.setState(0x18b4, 0x721, 0x160, 0x6615, 0x2868, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0x18b4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x721);
        EXPECT(gbc.pc(), 0x18b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 032E
        gbc.setState(0x72f3, 0xa799, 0xec50, 0x31e2, 0xf30e, 0x84bc, 0x1, 0x0);
        gbc.writeMem(0x72f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa799);
        EXPECT(gbc.pc(), 0x72f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 032F
        gbc.setState(0xae9e, 0x57c, 0xabb0, 0x4c82, 0xeeab, 0x5ec1, 0x0, 0x1);
        gbc.writeMem(0xae9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x57c);
        EXPECT(gbc.pc(), 0xaea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9e), 0xcb);
        EXPECT(gbc.readMem(0xae9f), 0xbd);
        // CB BD 0330
        gbc.setState(0x9dd9, 0x6fb9, 0x1840, 0x2999, 0x865b, 0xaeca, 0x1, 0x0);
        gbc.writeMem(0x9dd9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6fb9);
        EXPECT(gbc.pc(), 0x9ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd9), 0xcb);
        EXPECT(gbc.readMem(0x9dda), 0xbd);
        // CB BD 0331
        gbc.setState(0x9f91, 0x5c05, 0x7220, 0x2f48, 0x42db, 0xb985, 0x1, 0x0);
        gbc.writeMem(0x9f91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5c05);
        EXPECT(gbc.pc(), 0x9f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f91), 0xcb);
        EXPECT(gbc.readMem(0x9f92), 0xbd);
        // CB BD 0332
        gbc.setState(0xb6b, 0x2e0, 0xb640, 0xb8c2, 0xd11e, 0xbf2b, 0x0, 0x0);
        gbc.writeMem(0xb6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2e0);
        EXPECT(gbc.pc(), 0xb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0333
        gbc.setState(0xe0f6, 0xea84, 0x7c00, 0xce28, 0xd5c6, 0x3a88, 0x1, 0x0);
        gbc.writeMem(0xe0f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0xe0f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f6), 0xcb);
        EXPECT(gbc.readMem(0xe0f7), 0xbd);
        // CB BD 0334
        gbc.setState(0x19c7, 0x7c8d, 0x3650, 0xe733, 0x1a4, 0x444, 0x0, 0x0);
        gbc.writeMem(0x19c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7c8d);
        EXPECT(gbc.pc(), 0x19c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0335
        gbc.setState(0x5844, 0x313, 0xf950, 0xbf05, 0x4ea, 0x9767, 0x1, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x313);
        EXPECT(gbc.pc(), 0x5846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0336
        gbc.setState(0xc0ca, 0xf90f, 0x3310, 0xb3ab, 0x646f, 0xa631, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf90f);
        EXPECT(gbc.pc(), 0xc0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ca), 0xcb);
        EXPECT(gbc.readMem(0xc0cb), 0xbd);
        // CB BD 0337
        gbc.setState(0x9414, 0x45c7, 0x3b20, 0x181a, 0x75e9, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0x9414, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x45c7);
        EXPECT(gbc.pc(), 0x9416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9414), 0xcb);
        EXPECT(gbc.readMem(0x9415), 0xbd);
        // CB BD 0338
        gbc.setState(0xc418, 0x3a36, 0x2160, 0x6063, 0xd460, 0xabf5, 0x1, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3a36);
        EXPECT(gbc.pc(), 0xc41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc418), 0xcb);
        EXPECT(gbc.readMem(0xc419), 0xbd);
        // CB BD 0339
        gbc.setState(0x4633, 0x485a, 0xd190, 0x866c, 0x6a1c, 0x44d7, 0x1, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x485a);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 033A
        gbc.setState(0x8e29, 0x596b, 0xc490, 0x370, 0xdaf4, 0xedeb, 0x1, 0x1);
        gbc.writeMem(0x8e29, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x596b);
        EXPECT(gbc.pc(), 0x8e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e29), 0xcb);
        EXPECT(gbc.readMem(0x8e2a), 0xbd);
        // CB BD 033B
        gbc.setState(0x3dd0, 0x7ea4, 0xbc40, 0x1e1e, 0x5e13, 0x8d5d, 0x0, 0x0);
        gbc.writeMem(0x3dd0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7ea4);
        EXPECT(gbc.pc(), 0x3dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 033C
        gbc.setState(0xc678, 0xa23e, 0xa680, 0xd7f8, 0x78a1, 0x6c19, 0x0, 0x0);
        gbc.writeMem(0xc678, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa23e);
        EXPECT(gbc.pc(), 0xc67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc678), 0xcb);
        EXPECT(gbc.readMem(0xc679), 0xbd);
        // CB BD 033D
        gbc.setState(0x6b88, 0xfd8a, 0x96f0, 0xfc1b, 0xbbc8, 0x578d, 0x0, 0x1);
        gbc.writeMem(0x6b88, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfd8a);
        EXPECT(gbc.pc(), 0x6b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 033E
        gbc.setState(0xa, 0xb760, 0xc490, 0x743, 0xcb11, 0x3c67, 0x0, 0x1);
        gbc.writeMem(0xa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb760);
        EXPECT(gbc.pc(), 0xc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 033F
        gbc.setState(0x95ff, 0x5b39, 0x3560, 0xb220, 0xb37a, 0x2522, 0x0, 0x0);
        gbc.writeMem(0x95ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5b39);
        EXPECT(gbc.pc(), 0x9601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ff), 0xcb);
        EXPECT(gbc.readMem(0x9600), 0xbd);
        // CB BD 0340
        gbc.setState(0xbb82, 0xcfd3, 0x570, 0xab1c, 0xc945, 0x22ce, 0x1, 0x1);
        gbc.writeMem(0xbb82, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcfd3);
        EXPECT(gbc.pc(), 0xbb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb82), 0xcb);
        EXPECT(gbc.readMem(0xbb83), 0xbd);
        // CB BD 0341
        gbc.setState(0xc6dd, 0x94f7, 0x5770, 0x2a4f, 0x45a0, 0x5d5b, 0x0, 0x0);
        gbc.writeMem(0xc6dd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x94f7);
        EXPECT(gbc.pc(), 0xc6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dd), 0xcb);
        EXPECT(gbc.readMem(0xc6de), 0xbd);
        // CB BD 0342
        gbc.setState(0xd9ec, 0x23bf, 0x3c30, 0x5dbd, 0x897d, 0xa4a6, 0x0, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x23bf);
        EXPECT(gbc.pc(), 0xd9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ec), 0xcb);
        EXPECT(gbc.readMem(0xd9ed), 0xbd);
        // CB BD 0343
        gbc.setState(0x84f2, 0x524c, 0x4870, 0x9c69, 0xfe4d, 0x47df, 0x0, 0x1);
        gbc.writeMem(0x84f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x524c);
        EXPECT(gbc.pc(), 0x84f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f2), 0xcb);
        EXPECT(gbc.readMem(0x84f3), 0xbd);
        // CB BD 0344
        gbc.setState(0xba08, 0xfa, 0xa000, 0x2073, 0xbbfb, 0x41fa, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfa);
        EXPECT(gbc.pc(), 0xba0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba08), 0xcb);
        EXPECT(gbc.readMem(0xba09), 0xbd);
        // CB BD 0345
        gbc.setState(0x4cd3, 0xf86f, 0xbe50, 0xf911, 0xac28, 0x680f, 0x0, 0x1);
        gbc.writeMem(0x4cd3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf86f);
        EXPECT(gbc.pc(), 0x4cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0346
        gbc.setState(0xcf55, 0x13ed, 0xecb0, 0x5485, 0xa3a5, 0x5d4c, 0x0, 0x1);
        gbc.writeMem(0xcf55, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x13ed);
        EXPECT(gbc.pc(), 0xcf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf55), 0xcb);
        EXPECT(gbc.readMem(0xcf56), 0xbd);
        // CB BD 0347
        gbc.setState(0xd2f6, 0x6743, 0xf0d0, 0x7258, 0x85c5, 0x5ef5, 0x0, 0x1);
        gbc.writeMem(0xd2f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0xd2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f6), 0xcb);
        EXPECT(gbc.readMem(0xd2f7), 0xbd);
        // CB BD 0348
        gbc.setState(0x949c, 0x65c6, 0x9160, 0x536a, 0x18fa, 0xa4f8, 0x1, 0x1);
        gbc.writeMem(0x949c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x65c6);
        EXPECT(gbc.pc(), 0x949e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949c), 0xcb);
        EXPECT(gbc.readMem(0x949d), 0xbd);
        // CB BD 0349
        gbc.setState(0x7267, 0x3324, 0x4de0, 0x8fa6, 0xed03, 0x5ef2, 0x1, 0x0);
        gbc.writeMem(0x7267, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3324);
        EXPECT(gbc.pc(), 0x7269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 034A
        gbc.setState(0x7f1d, 0xc5d5, 0x7a0, 0xb665, 0x284a, 0x84f5, 0x1, 0x0);
        gbc.writeMem(0x7f1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc5d5);
        EXPECT(gbc.pc(), 0x7f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 034B
        gbc.setState(0x1ebc, 0xed78, 0xb4d0, 0x903, 0x18fb, 0x130, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xed78);
        EXPECT(gbc.pc(), 0x1ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 034C
        gbc.setState(0xe477, 0xf64a, 0x1a10, 0xc34a, 0x9b2a, 0xd438, 0x0, 0x1);
        gbc.writeMem(0xe477, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf64a);
        EXPECT(gbc.pc(), 0xe479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe477), 0xcb);
        EXPECT(gbc.readMem(0xe478), 0xbd);
        // CB BD 034D
        gbc.setState(0xedbf, 0x167, 0xfd50, 0xeeb6, 0x685f, 0x4aea, 0x0, 0x0);
        gbc.writeMem(0xedbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x167);
        EXPECT(gbc.pc(), 0xedc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbf), 0xcb);
        EXPECT(gbc.readMem(0xedc0), 0xbd);
        // CB BD 034F
        gbc.setState(0xe28a, 0x55c1, 0xeb30, 0x14dd, 0x98a9, 0xe3b1, 0x1, 0x1);
        gbc.writeMem(0xe28a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x55c1);
        EXPECT(gbc.pc(), 0xe28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28a), 0xcb);
        EXPECT(gbc.readMem(0xe28b), 0xbd);
        // CB BD 0350
        gbc.setState(0xee54, 0x5f34, 0xf0, 0x24a, 0xc38d, 0x1a54, 0x0, 0x1);
        gbc.writeMem(0xee54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5f34);
        EXPECT(gbc.pc(), 0xee56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee54), 0xcb);
        EXPECT(gbc.readMem(0xee55), 0xbd);
        // CB BD 0351
        gbc.setState(0xb3d2, 0x8cfa, 0x6750, 0x6a31, 0x1be4, 0x599f, 0x1, 0x0);
        gbc.writeMem(0xb3d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8cfa);
        EXPECT(gbc.pc(), 0xb3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d2), 0xcb);
        EXPECT(gbc.readMem(0xb3d3), 0xbd);
        // CB BD 0352
        gbc.setState(0x197d, 0x3d6b, 0x2190, 0x8ba6, 0x66ee, 0x14ba, 0x1, 0x0);
        gbc.writeMem(0x197d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3d6b);
        EXPECT(gbc.pc(), 0x197f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0353
        gbc.setState(0x782a, 0x703c, 0xba50, 0x8b6b, 0x8e92, 0xc558, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x703c);
        EXPECT(gbc.pc(), 0x782c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0354
        gbc.setState(0x1986, 0xd521, 0x8a0, 0x4eac, 0x763b, 0xc9c, 0x1, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd521);
        EXPECT(gbc.pc(), 0x1988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0356
        gbc.setState(0x55fc, 0x52a, 0xe8c0, 0x99fc, 0xf604, 0xc3b, 0x0, 0x1);
        gbc.writeMem(0x55fc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x52a);
        EXPECT(gbc.pc(), 0x55fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0357
        gbc.setState(0xc144, 0x3e76, 0x1a40, 0xaa4f, 0xe184, 0x70da, 0x1, 0x0);
        gbc.writeMem(0xc144, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3e76);
        EXPECT(gbc.pc(), 0xc146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc144), 0xcb);
        EXPECT(gbc.readMem(0xc145), 0xbd);
        // CB BD 0358
        gbc.setState(0x13ad, 0xb713, 0x7c60, 0x5636, 0xa5d4, 0x58c0, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb713);
        EXPECT(gbc.pc(), 0x13af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0359
        gbc.setState(0xed09, 0x913b, 0x5180, 0xe7f0, 0x6b22, 0xe569, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x913b);
        EXPECT(gbc.pc(), 0xed0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed09), 0xcb);
        EXPECT(gbc.readMem(0xed0a), 0xbd);
        // CB BD 035A
        gbc.setState(0x92f7, 0xd8a1, 0xdbe0, 0x7089, 0x8920, 0x4b81, 0x0, 0x1);
        gbc.writeMem(0x92f7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd8a1);
        EXPECT(gbc.pc(), 0x92f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f7), 0xcb);
        EXPECT(gbc.readMem(0x92f8), 0xbd);
        // CB BD 035B
        gbc.setState(0xed27, 0xb5ba, 0xba0, 0xeeb, 0xac9b, 0x124c, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb5ba);
        EXPECT(gbc.pc(), 0xed29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed27), 0xcb);
        EXPECT(gbc.readMem(0xed28), 0xbd);
        // CB BD 035C
        gbc.setState(0x58f3, 0x3ef0, 0xb6b0, 0xc849, 0x8775, 0x3343, 0x0, 0x1);
        gbc.writeMem(0x58f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3ef0);
        EXPECT(gbc.pc(), 0x58f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 035D
        gbc.setState(0x1437, 0x5d0, 0x2e00, 0xc10c, 0x7e88, 0x9922, 0x1, 0x1);
        gbc.writeMem(0x1437, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5d0);
        EXPECT(gbc.pc(), 0x1439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 035E
        gbc.setState(0x4276, 0x3556, 0x5840, 0xb4e3, 0x4615, 0x3555, 0x1, 0x0);
        gbc.writeMem(0x4276, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3556);
        EXPECT(gbc.pc(), 0x4278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 035F
        gbc.setState(0x4e1c, 0x8fe5, 0xa5b0, 0x1e58, 0xcebc, 0x4cc9, 0x0, 0x0);
        gbc.writeMem(0x4e1c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8fe5);
        EXPECT(gbc.pc(), 0x4e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0360
        gbc.setState(0xb35f, 0x6f05, 0x6280, 0x7f51, 0xbeba, 0x7f27, 0x0, 0x0);
        gbc.writeMem(0xb35f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6f05);
        EXPECT(gbc.pc(), 0xb361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35f), 0xcb);
        EXPECT(gbc.readMem(0xb360), 0xbd);
        // CB BD 0361
        gbc.setState(0x6119, 0xf925, 0x69e0, 0x582, 0xa31f, 0x412d, 0x0, 0x1);
        gbc.writeMem(0x6119, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf925);
        EXPECT(gbc.pc(), 0x611b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0362
        gbc.setState(0xcf62, 0x7171, 0x6e40, 0xe907, 0x433e, 0xa545, 0x0, 0x0);
        gbc.writeMem(0xcf62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7171);
        EXPECT(gbc.pc(), 0xcf64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf62), 0xcb);
        EXPECT(gbc.readMem(0xcf63), 0xbd);
        // CB BD 0363
        gbc.setState(0x3c2, 0x7c74, 0xb130, 0x676d, 0x734d, 0xffb6, 0x1, 0x1);
        gbc.writeMem(0x3c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0364
        gbc.setState(0x3484, 0xab8e, 0xde80, 0x4344, 0x4ea1, 0x16f, 0x1, 0x1);
        gbc.writeMem(0x3484, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xab8e);
        EXPECT(gbc.pc(), 0x3486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0365
        gbc.setState(0xd12e, 0xa44a, 0x9d80, 0xda7e, 0xff57, 0x5415, 0x0, 0x0);
        gbc.writeMem(0xd12e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa44a);
        EXPECT(gbc.pc(), 0xd130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12e), 0xcb);
        EXPECT(gbc.readMem(0xd12f), 0xbd);
        // CB BD 0367
        gbc.setState(0x17a2, 0x692b, 0x88b0, 0xb413, 0xebaf, 0x21c8, 0x0, 0x1);
        gbc.writeMem(0x17a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x692b);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0368
        gbc.setState(0xebf3, 0xe8b6, 0xbe60, 0xd95d, 0x144d, 0xf300, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8b6);
        EXPECT(gbc.pc(), 0xebf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf3), 0xcb);
        EXPECT(gbc.readMem(0xebf4), 0xbd);
        // CB BD 0369
        gbc.setState(0x85c7, 0xfb1a, 0xf780, 0xe528, 0xb3da, 0xb328, 0x0, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfb1a);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c7), 0xcb);
        EXPECT(gbc.readMem(0x85c8), 0xbd);
        // CB BD 036A
        gbc.setState(0x348a, 0x1694, 0x5640, 0xdd74, 0xb272, 0xb431, 0x1, 0x1);
        gbc.writeMem(0x348a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1694);
        EXPECT(gbc.pc(), 0x348c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 036B
        gbc.setState(0xdf7f, 0x1e0b, 0x70e0, 0x7116, 0x1e7f, 0x679a, 0x0, 0x1);
        gbc.writeMem(0xdf7f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1e0b);
        EXPECT(gbc.pc(), 0xdf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7f), 0xcb);
        EXPECT(gbc.readMem(0xdf80), 0xbd);
        // CB BD 036C
        gbc.setState(0x7d34, 0x96ce, 0xc170, 0x9e38, 0xb9e7, 0x19f1, 0x1, 0x1);
        gbc.writeMem(0x7d34, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x96ce);
        EXPECT(gbc.pc(), 0x7d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 036D
        gbc.setState(0x984d, 0x5954, 0xb800, 0xf61b, 0x120e, 0xa912, 0x1, 0x1);
        gbc.writeMem(0x984d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5954);
        EXPECT(gbc.pc(), 0x984f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984d), 0xcb);
        EXPECT(gbc.readMem(0x984e), 0xbd);
        // CB BD 036E
        gbc.setState(0x5625, 0x7b9d, 0x4750, 0xc8a7, 0x47a1, 0xa81, 0x1, 0x1);
        gbc.writeMem(0x5625, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7b9d);
        EXPECT(gbc.pc(), 0x5627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 036F
        gbc.setState(0xb703, 0xc446, 0x200, 0x80cd, 0xb2ba, 0x91c4, 0x1, 0x0);
        gbc.writeMem(0xb703, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc446);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb703), 0xcb);
        EXPECT(gbc.readMem(0xb704), 0xbd);
        // CB BD 0370
        gbc.setState(0x3f38, 0xc42d, 0x9b0, 0x3b47, 0x71bd, 0x2009, 0x0, 0x0);
        gbc.writeMem(0x3f38, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc42d);
        EXPECT(gbc.pc(), 0x3f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0371
        gbc.setState(0x8296, 0xd17b, 0x3b40, 0xc92b, 0xead, 0x7f8e, 0x0, 0x0);
        gbc.writeMem(0x8296, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd17b);
        EXPECT(gbc.pc(), 0x8298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8296), 0xcb);
        EXPECT(gbc.readMem(0x8297), 0xbd);
        // CB BD 0372
        gbc.setState(0x1f91, 0x891c, 0x1e90, 0xfcd6, 0x7b53, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x891c);
        EXPECT(gbc.pc(), 0x1f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0373
        gbc.setState(0xd267, 0x6949, 0x6fb0, 0xea84, 0x6f38, 0x7447, 0x0, 0x1);
        gbc.writeMem(0xd267, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6949);
        EXPECT(gbc.pc(), 0xd269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd267), 0xcb);
        EXPECT(gbc.readMem(0xd268), 0xbd);
        // CB BD 0375
        gbc.setState(0x47aa, 0xf99f, 0xce20, 0xe579, 0x9297, 0x68a8, 0x1, 0x0);
        gbc.writeMem(0x47aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0x47ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0377
        gbc.setState(0xc871, 0xe16c, 0x8410, 0x9e3e, 0xd218, 0xceef, 0x1, 0x1);
        gbc.writeMem(0xc871, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe16c);
        EXPECT(gbc.pc(), 0xc873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc871), 0xcb);
        EXPECT(gbc.readMem(0xc872), 0xbd);
        // CB BD 0378
        gbc.setState(0x2085, 0x23fb, 0xad30, 0xfc74, 0x513b, 0x3207, 0x0, 0x1);
        gbc.writeMem(0x2085, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x23fb);
        EXPECT(gbc.pc(), 0x2087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0379
        gbc.setState(0x5e0, 0xcda6, 0x4af0, 0x45a4, 0x13ea, 0x2020, 0x1, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcda6);
        EXPECT(gbc.pc(), 0x5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 037A
        gbc.setState(0x364d, 0xd5bb, 0x29a0, 0xbc47, 0x9abc, 0x71fa, 0x0, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd5bb);
        EXPECT(gbc.pc(), 0x364f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 037B
        gbc.setState(0xa72, 0xbff1, 0xefa0, 0xdabb, 0x7eff, 0xe846, 0x1, 0x0);
        gbc.writeMem(0xa72, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 037C
        gbc.setState(0xea94, 0x215f, 0x670, 0x8143, 0x60ca, 0x652f, 0x1, 0x0);
        gbc.writeMem(0xea94, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x215f);
        EXPECT(gbc.pc(), 0xea96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea94), 0xcb);
        EXPECT(gbc.readMem(0xea95), 0xbd);
        // CB BD 037D
        gbc.setState(0x422b, 0xc7c7, 0xe570, 0x3af7, 0xdab0, 0x568d, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0x422d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 037E
        gbc.setState(0x7652, 0xe961, 0xd800, 0x8c63, 0x103b, 0xc971, 0x1, 0x1);
        gbc.writeMem(0x7652, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe961);
        EXPECT(gbc.pc(), 0x7654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 037F
        gbc.setState(0x65b3, 0xc894, 0x8310, 0xd04f, 0xce86, 0x6692, 0x0, 0x0);
        gbc.writeMem(0x65b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc894);
        EXPECT(gbc.pc(), 0x65b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0380
        gbc.setState(0x7570, 0xf898, 0x6120, 0x7be2, 0x77e6, 0x4c60, 0x1, 0x1);
        gbc.writeMem(0x7570, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf898);
        EXPECT(gbc.pc(), 0x7572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0381
        gbc.setState(0x3def, 0x3289, 0xe920, 0x6e5c, 0x46c2, 0x7ca4, 0x1, 0x1);
        gbc.writeMem(0x3def, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3289);
        EXPECT(gbc.pc(), 0x3df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0382
        gbc.setState(0x4c16, 0x2d4f, 0x5240, 0x508b, 0x47db, 0xdbb2, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2d4f);
        EXPECT(gbc.pc(), 0x4c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0383
        gbc.setState(0x2169, 0x4edf, 0x9b40, 0xe03f, 0x66bb, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4edf);
        EXPECT(gbc.pc(), 0x216b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0384
        gbc.setState(0xc3cf, 0x12ac, 0xece0, 0x1ddb, 0x4c7f, 0x2bdc, 0x1, 0x0);
        gbc.writeMem(0xc3cf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x12ac);
        EXPECT(gbc.pc(), 0xc3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cf), 0xcb);
        EXPECT(gbc.readMem(0xc3d0), 0xbd);
        // CB BD 0385
        gbc.setState(0x9af0, 0xbc9c, 0xd380, 0xdfa, 0x9a19, 0x44ee, 0x1, 0x1);
        gbc.writeMem(0x9af0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0x9af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af0), 0xcb);
        EXPECT(gbc.readMem(0x9af1), 0xbd);
        // CB BD 0386
        gbc.setState(0xae52, 0x2935, 0xb770, 0xe212, 0x6f43, 0xaf1d, 0x1, 0x0);
        gbc.writeMem(0xae52, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2935);
        EXPECT(gbc.pc(), 0xae54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae52), 0xcb);
        EXPECT(gbc.readMem(0xae53), 0xbd);
        // CB BD 0387
        gbc.setState(0xc099, 0x2b48, 0x5de0, 0x4392, 0xee57, 0x987, 0x1, 0x1);
        gbc.writeMem(0xc099, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2b48);
        EXPECT(gbc.pc(), 0xc09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc099), 0xcb);
        EXPECT(gbc.readMem(0xc09a), 0xbd);
        // CB BD 0388
        gbc.setState(0x937f, 0xb539, 0x2900, 0xf5a1, 0x6703, 0xf760, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0x9381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937f), 0xcb);
        EXPECT(gbc.readMem(0x9380), 0xbd);
        // CB BD 0389
        gbc.setState(0x4d99, 0xdc2c, 0xf040, 0xb981, 0xa173, 0xa183, 0x1, 0x1);
        gbc.writeMem(0x4d99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdc2c);
        EXPECT(gbc.pc(), 0x4d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 038A
        gbc.setState(0xaf03, 0x535b, 0x9d0, 0x9b3, 0xe7c7, 0x4e27, 0x0, 0x1);
        gbc.writeMem(0xaf03, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x535b);
        EXPECT(gbc.pc(), 0xaf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf03), 0xcb);
        EXPECT(gbc.readMem(0xaf04), 0xbd);
        // CB BD 038B
        gbc.setState(0x3533, 0xe90c, 0x600, 0xbd66, 0x92e4, 0x6128, 0x0, 0x1);
        gbc.writeMem(0x3533, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe90c);
        EXPECT(gbc.pc(), 0x3535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 038C
        gbc.setState(0x2163, 0xa2ec, 0x3c10, 0x5618, 0x3c10, 0x9523, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa2ec);
        EXPECT(gbc.pc(), 0x2165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 038D
        gbc.setState(0x5716, 0xcfc7, 0x3970, 0x998c, 0xb721, 0x18ee, 0x1, 0x0);
        gbc.writeMem(0x5716, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcfc7);
        EXPECT(gbc.pc(), 0x5718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 038E
        gbc.setState(0x5356, 0xed4c, 0x8320, 0xc42d, 0x9004, 0xf181, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xed4c);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 038F
        gbc.setState(0x18c1, 0x778, 0x10f0, 0x103a, 0xf13b, 0x1fbe, 0x1, 0x0);
        gbc.writeMem(0x18c1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x778);
        EXPECT(gbc.pc(), 0x18c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0390
        gbc.setState(0xbe07, 0x1ce5, 0x90d0, 0x6f90, 0x882, 0xdbac, 0x1, 0x1);
        gbc.writeMem(0xbe07, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1ce5);
        EXPECT(gbc.pc(), 0xbe09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe07), 0xcb);
        EXPECT(gbc.readMem(0xbe08), 0xbd);
        // CB BD 0391
        gbc.setState(0xbd6a, 0xa374, 0xd030, 0xeb10, 0x1f2c, 0xe4ac, 0x0, 0x0);
        gbc.writeMem(0xbd6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa374);
        EXPECT(gbc.pc(), 0xbd6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd6a), 0xcb);
        EXPECT(gbc.readMem(0xbd6b), 0xbd);
        // CB BD 0392
        gbc.setState(0x6556, 0x5158, 0x1d80, 0x1458, 0x2195, 0xbc1e, 0x1, 0x1);
        gbc.writeMem(0x6556, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5158);
        EXPECT(gbc.pc(), 0x6558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0393
        gbc.setState(0xdc7, 0x665, 0xeba0, 0x86b6, 0xf22c, 0xd4af, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x665);
        EXPECT(gbc.pc(), 0xdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0394
        gbc.setState(0x3fc7, 0x2d9d, 0x6440, 0xee00, 0x6154, 0xfe69, 0x0, 0x1);
        gbc.writeMem(0x3fc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0x3fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0395
        gbc.setState(0x8f2f, 0x4bc9, 0xeae0, 0xb8b4, 0x5d69, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x8f2f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4bc9);
        EXPECT(gbc.pc(), 0x8f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2f), 0xcb);
        EXPECT(gbc.readMem(0x8f30), 0xbd);
        // CB BD 0396
        gbc.setState(0x97a7, 0x6114, 0xe30, 0x3cf8, 0x5da1, 0xf7f1, 0x1, 0x1);
        gbc.writeMem(0x97a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6114);
        EXPECT(gbc.pc(), 0x97a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a7), 0xcb);
        EXPECT(gbc.readMem(0x97a8), 0xbd);
        // CB BD 0397
        gbc.setState(0x7c06, 0xc3d8, 0xf7b0, 0x9bbe, 0xcfc3, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x7c06, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc3d8);
        EXPECT(gbc.pc(), 0x7c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 0398
        gbc.setState(0x334e, 0xe93b, 0x3f80, 0x599b, 0x5860, 0x5b18, 0x1, 0x0);
        gbc.writeMem(0x334e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe93b);
        EXPECT(gbc.pc(), 0x3350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 0399
        gbc.setState(0x34d2, 0xe1ca, 0x2e80, 0x9497, 0x18cc, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x34d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe1ca);
        EXPECT(gbc.pc(), 0x34d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 039A
        gbc.setState(0x1500, 0x4ee3, 0x5660, 0xe4d7, 0xb998, 0x646c, 0x1, 0x0);
        gbc.writeMem(0x1500, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4ee3);
        EXPECT(gbc.pc(), 0x1502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 039B
        gbc.setState(0x989c, 0x6a1e, 0x6310, 0x65e6, 0xd81b, 0x9167, 0x1, 0x0);
        gbc.writeMem(0x989c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6a1e);
        EXPECT(gbc.pc(), 0x989e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989c), 0xcb);
        EXPECT(gbc.readMem(0x989d), 0xbd);
        // CB BD 039C
        gbc.setState(0x68f3, 0x69e9, 0xe820, 0xf216, 0x7a4, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0x68f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x69e9);
        EXPECT(gbc.pc(), 0x68f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 039E
        gbc.setState(0xb068, 0xbf2c, 0x35f0, 0x82a0, 0xf80f, 0xa501, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbf2c);
        EXPECT(gbc.pc(), 0xb06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb068), 0xcb);
        EXPECT(gbc.readMem(0xb069), 0xbd);
        // CB BD 03A0
        gbc.setState(0x1f9a, 0x7f35, 0x67a0, 0x6b3e, 0xd1f0, 0xd3f0, 0x0, 0x1);
        gbc.writeMem(0x1f9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7f35);
        EXPECT(gbc.pc(), 0x1f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03A1
        gbc.setState(0xe256, 0xd227, 0x9550, 0xa969, 0x3875, 0x5068, 0x1, 0x0);
        gbc.writeMem(0xe256, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd227);
        EXPECT(gbc.pc(), 0xe258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe256), 0xcb);
        EXPECT(gbc.readMem(0xe257), 0xbd);
        // CB BD 03A2
        gbc.setState(0x42f, 0x210, 0x4ac0, 0x94e5, 0x9021, 0x2582, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x210);
        EXPECT(gbc.pc(), 0x431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03A3
        gbc.setState(0xccf5, 0xf5f1, 0x6df0, 0xb14f, 0xb478, 0xb70, 0x0, 0x0);
        gbc.writeMem(0xccf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf5f1);
        EXPECT(gbc.pc(), 0xccf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf5), 0xcb);
        EXPECT(gbc.readMem(0xccf6), 0xbd);
        // CB BD 03A4
        gbc.setState(0x4fce, 0xbdfe, 0x4a20, 0x2f9f, 0xb4e, 0xb60c, 0x0, 0x1);
        gbc.writeMem(0x4fce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbdfe);
        EXPECT(gbc.pc(), 0x4fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03A5
        gbc.setState(0x4d73, 0x4b70, 0xaf80, 0x7c92, 0xec11, 0x231b, 0x0, 0x1);
        gbc.writeMem(0x4d73, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4b70);
        EXPECT(gbc.pc(), 0x4d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03A6
        gbc.setState(0x6abb, 0x5a9, 0x6f50, 0xcc9, 0x47d2, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03A7
        gbc.setState(0x87a7, 0xca5c, 0x8160, 0x54f2, 0x6945, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x87a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xca5c);
        EXPECT(gbc.pc(), 0x87a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a7), 0xcb);
        EXPECT(gbc.readMem(0x87a8), 0xbd);
        // CB BD 03A8
        gbc.setState(0xba11, 0xc679, 0xef80, 0x28d3, 0x491b, 0x482c, 0x0, 0x0);
        gbc.writeMem(0xba11, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc679);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba11), 0xcb);
        EXPECT(gbc.readMem(0xba12), 0xbd);
        // CB BD 03A9
        gbc.setState(0xcfd6, 0x8edf, 0x2870, 0xfb50, 0x7bde, 0x8e4b, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8edf);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd6), 0xcb);
        EXPECT(gbc.readMem(0xcfd7), 0xbd);
        // CB BD 03AA
        gbc.setState(0x96ae, 0x433, 0xd410, 0xbc4e, 0x53aa, 0x24a1, 0x0, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x433);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0xbd);
        // CB BD 03AB
        gbc.setState(0xded, 0xac7, 0xa800, 0xdb6f, 0x284a, 0xd6d9, 0x0, 0x1);
        gbc.writeMem(0xded, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xac7);
        EXPECT(gbc.pc(), 0xdef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03AC
        gbc.setState(0x138a, 0x4394, 0xc040, 0x53d3, 0xb7e1, 0x13cc, 0x0, 0x0);
        gbc.writeMem(0x138a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4394);
        EXPECT(gbc.pc(), 0x138c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03AD
        gbc.setState(0x786e, 0x3d5c, 0x4a20, 0x75e5, 0x6378, 0xf0c4, 0x1, 0x0);
        gbc.writeMem(0x786e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3d5c);
        EXPECT(gbc.pc(), 0x7870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03AE
        gbc.setState(0x3b7, 0x4b5f, 0xb70, 0x4332, 0x5797, 0xd778, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4b5f);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03AF
        gbc.setState(0x8528, 0x1d1e, 0xaab0, 0xdf2e, 0x4969, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x8528, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1d1e);
        EXPECT(gbc.pc(), 0x852a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8528), 0xcb);
        EXPECT(gbc.readMem(0x8529), 0xbd);
        // CB BD 03B0
        gbc.setState(0x3cdc, 0x9ca0, 0xba10, 0x8685, 0x428c, 0xdc2f, 0x1, 0x1);
        gbc.writeMem(0x3cdc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9ca0);
        EXPECT(gbc.pc(), 0x3cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03B1
        gbc.setState(0x1731, 0xff17, 0x3260, 0x98b, 0x6c6, 0x9860, 0x1, 0x0);
        gbc.writeMem(0x1731, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xff17);
        EXPECT(gbc.pc(), 0x1733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03B2
        gbc.setState(0x52dc, 0x9747, 0x9770, 0x40c, 0x7058, 0xccad, 0x0, 0x1);
        gbc.writeMem(0x52dc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9747);
        EXPECT(gbc.pc(), 0x52de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03B3
        gbc.setState(0xa1be, 0x75c2, 0x38c0, 0xa045, 0xf07f, 0x352b, 0x1, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x75c2);
        EXPECT(gbc.pc(), 0xa1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1be), 0xcb);
        EXPECT(gbc.readMem(0xa1bf), 0xbd);
        // CB BD 03B4
        gbc.setState(0x8464, 0x37e5, 0x3030, 0xafd0, 0x9031, 0xb968, 0x1, 0x0);
        gbc.writeMem(0x8464, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x37e5);
        EXPECT(gbc.pc(), 0x8466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8464), 0xcb);
        EXPECT(gbc.readMem(0x8465), 0xbd);
        // CB BD 03B5
        gbc.setState(0xd2b9, 0x1d55, 0x9700, 0x5a6e, 0xc03e, 0xe427, 0x0, 0x1);
        gbc.writeMem(0xd2b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1d55);
        EXPECT(gbc.pc(), 0xd2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b9), 0xcb);
        EXPECT(gbc.readMem(0xd2ba), 0xbd);
        // CB BD 03B6
        gbc.setState(0xe3ce, 0xc2d3, 0x5d10, 0xc228, 0x5dc9, 0x3bd4, 0x0, 0x1);
        gbc.writeMem(0xe3ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0xe3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ce), 0xcb);
        EXPECT(gbc.readMem(0xe3cf), 0xbd);
        // CB BD 03B7
        gbc.setState(0xa202, 0x3e8b, 0xe10, 0xeda4, 0xe1c, 0x8f38, 0x0, 0x0);
        gbc.writeMem(0xa202, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e8b);
        EXPECT(gbc.pc(), 0xa204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa202), 0xcb);
        EXPECT(gbc.readMem(0xa203), 0xbd);
        // CB BD 03B8
        gbc.setState(0x6e4e, 0xd72e, 0x2830, 0xcf1c, 0xe4d6, 0x7310, 0x1, 0x1);
        gbc.writeMem(0x6e4e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd72e);
        EXPECT(gbc.pc(), 0x6e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03B9
        gbc.setState(0xd563, 0x9aa3, 0xc4b0, 0xdc70, 0x4182, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0xd563, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9aa3);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd563), 0xcb);
        EXPECT(gbc.readMem(0xd564), 0xbd);
        // CB BD 03BA
        gbc.setState(0x89b5, 0xa9a8, 0xebe0, 0xbd94, 0xe3d7, 0xb712, 0x0, 0x0);
        gbc.writeMem(0x89b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa9a8);
        EXPECT(gbc.pc(), 0x89b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b5), 0xcb);
        EXPECT(gbc.readMem(0x89b6), 0xbd);
        // CB BD 03BB
        gbc.setState(0xa88a, 0xf12d, 0xea50, 0xc58d, 0x49cd, 0xbf42, 0x1, 0x1);
        gbc.writeMem(0xa88a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf12d);
        EXPECT(gbc.pc(), 0xa88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88a), 0xcb);
        EXPECT(gbc.readMem(0xa88b), 0xbd);
        // CB BD 03BC
        gbc.setState(0xd561, 0x878d, 0x5680, 0x4973, 0x6abc, 0x233, 0x0, 0x0);
        gbc.writeMem(0xd561, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x878d);
        EXPECT(gbc.pc(), 0xd563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd561), 0xcb);
        EXPECT(gbc.readMem(0xd562), 0xbd);
        // CB BD 03BD
        gbc.setState(0x534b, 0x7dfc, 0x710, 0x4b93, 0x9013, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x534b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7dfc);
        EXPECT(gbc.pc(), 0x534d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03BE
        gbc.setState(0x4fbd, 0x30cd, 0x1820, 0x7390, 0x507d, 0x79ce, 0x1, 0x1);
        gbc.writeMem(0x4fbd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x30cd);
        EXPECT(gbc.pc(), 0x4fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03BF
        gbc.setState(0x7790, 0x8295, 0x48a0, 0xfa4f, 0x2f27, 0x23f5, 0x0, 0x0);
        gbc.writeMem(0x7790, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8295);
        EXPECT(gbc.pc(), 0x7792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03C0
        gbc.setState(0xd28a, 0x3c19, 0x570, 0x5863, 0xfe9a, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0xd28a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3c19);
        EXPECT(gbc.pc(), 0xd28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28a), 0xcb);
        EXPECT(gbc.readMem(0xd28b), 0xbd);
        // CB BD 03C1
        gbc.setState(0x54f6, 0x13ce, 0xdfd0, 0x94d, 0x1b73, 0x940f, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x13ce);
        EXPECT(gbc.pc(), 0x54f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03C2
        gbc.setState(0x3a00, 0xea17, 0x1b50, 0xfd0b, 0x329e, 0x279d, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xea17);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03C3
        gbc.setState(0x40f5, 0xe7e, 0xc970, 0xa449, 0x9cf0, 0xa68b, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe7e);
        EXPECT(gbc.pc(), 0x40f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03C4
        gbc.setState(0x1c0, 0x7c8b, 0xd3c0, 0x3e98, 0x7601, 0x48ec, 0x0, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0x1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03C5
        gbc.setState(0x158c, 0xdb62, 0x67a0, 0x61de, 0x9eb, 0x701c, 0x1, 0x0);
        gbc.writeMem(0x158c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdb62);
        EXPECT(gbc.pc(), 0x158e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03C6
        gbc.setState(0xa7ec, 0x22f5, 0x9ea0, 0x5b23, 0xd440, 0xd132, 0x1, 0x0);
        gbc.writeMem(0xa7ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x22f5);
        EXPECT(gbc.pc(), 0xa7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ec), 0xcb);
        EXPECT(gbc.readMem(0xa7ed), 0xbd);
        // CB BD 03C7
        gbc.setState(0x34ed, 0x498b, 0x5070, 0xa13b, 0x7522, 0x2df4, 0x0, 0x0);
        gbc.writeMem(0x34ed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x498b);
        EXPECT(gbc.pc(), 0x34ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03C8
        gbc.setState(0x4539, 0x792f, 0xa790, 0x7cc0, 0xc3e9, 0x127d, 0x0, 0x0);
        gbc.writeMem(0x4539, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x792f);
        EXPECT(gbc.pc(), 0x453b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03C9
        gbc.setState(0xab36, 0x2600, 0xffd0, 0x5127, 0x1189, 0xf35, 0x1, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2600);
        EXPECT(gbc.pc(), 0xab38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab36), 0xcb);
        EXPECT(gbc.readMem(0xab37), 0xbd);
        // CB BD 03CA
        gbc.setState(0x6da9, 0x38b0, 0x1b30, 0xf0fd, 0xc1d3, 0x1bd1, 0x1, 0x0);
        gbc.writeMem(0x6da9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x38b0);
        EXPECT(gbc.pc(), 0x6dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03CB
        gbc.setState(0xd6a3, 0xbcba, 0x750, 0xc68b, 0x5294, 0xdaed, 0x1, 0x0);
        gbc.writeMem(0xd6a3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbcba);
        EXPECT(gbc.pc(), 0xd6a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a3), 0xcb);
        EXPECT(gbc.readMem(0xd6a4), 0xbd);
        // CB BD 03CC
        gbc.setState(0xa8b7, 0xd1f3, 0xea00, 0xce8a, 0x217a, 0x1a61, 0x1, 0x0);
        gbc.writeMem(0xa8b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd1f3);
        EXPECT(gbc.pc(), 0xa8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b7), 0xcb);
        EXPECT(gbc.readMem(0xa8b8), 0xbd);
        // CB BD 03CD
        gbc.setState(0x8ecb, 0x9b79, 0xd960, 0x5f86, 0x6163, 0xa748, 0x1, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9b79);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0xbd);
        // CB BD 03CE
        gbc.setState(0x9b5b, 0x7ce9, 0x4bb0, 0x3f1, 0x9f55, 0x3b49, 0x1, 0x1);
        gbc.writeMem(0x9b5b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7ce9);
        EXPECT(gbc.pc(), 0x9b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5b), 0xcb);
        EXPECT(gbc.readMem(0x9b5c), 0xbd);
        // CB BD 03CF
        gbc.setState(0x3da5, 0x35d8, 0xc430, 0xb4f7, 0xd955, 0xabca, 0x1, 0x0);
        gbc.writeMem(0x3da5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0x3da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D0
        gbc.setState(0x15b, 0x122, 0xa10, 0xa936, 0x95e8, 0x57f5, 0x0, 0x1);
        gbc.writeMem(0x15b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x122);
        EXPECT(gbc.pc(), 0x15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D1
        gbc.setState(0x5eba, 0x662, 0x2590, 0x169f, 0xdf16, 0x204f, 0x1, 0x0);
        gbc.writeMem(0x5eba, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x662);
        EXPECT(gbc.pc(), 0x5ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D2
        gbc.setState(0x42a1, 0x8d2b, 0xd7d0, 0x4414, 0x5574, 0xf0f3, 0x0, 0x1);
        gbc.writeMem(0x42a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8d2b);
        EXPECT(gbc.pc(), 0x42a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D3
        gbc.setState(0xd713, 0x159a, 0xb9d0, 0x9780, 0xdf29, 0x55fb, 0x0, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x159a);
        EXPECT(gbc.pc(), 0xd715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd713), 0xcb);
        EXPECT(gbc.readMem(0xd714), 0xbd);
        // CB BD 03D4
        gbc.setState(0xb263, 0x9cd3, 0x4d80, 0x1d93, 0x79cd, 0xc7bc, 0x1, 0x0);
        gbc.writeMem(0xb263, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9cd3);
        EXPECT(gbc.pc(), 0xb265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb263), 0xcb);
        EXPECT(gbc.readMem(0xb264), 0xbd);
        // CB BD 03D5
        gbc.setState(0x2b2c, 0x6526, 0x9f80, 0xadab, 0x78df, 0x46b7, 0x0, 0x0);
        gbc.writeMem(0x2b2c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0x2b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03D6
        gbc.setState(0x3027, 0x535, 0x2310, 0xa667, 0xd7ed, 0x605c, 0x0, 0x1);
        gbc.writeMem(0x3027, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0x3029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D7
        gbc.setState(0x5662, 0x198, 0xe470, 0xe8a3, 0xcdeb, 0x446b, 0x0, 0x1);
        gbc.writeMem(0x5662, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x198);
        EXPECT(gbc.pc(), 0x5664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03D8
        gbc.setState(0x3b9, 0x8384, 0x2820, 0x29ac, 0xf590, 0x29bb, 0x0, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8384);
        EXPECT(gbc.pc(), 0x3bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03D9
        gbc.setState(0x72db, 0x7199, 0x71a0, 0x4b65, 0xb2e3, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7199);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03DA
        gbc.setState(0x90fe, 0x6016, 0xbff0, 0x218, 0xa722, 0x8c7, 0x1, 0x1);
        gbc.writeMem(0x90fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0x9100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fe), 0xcb);
        EXPECT(gbc.readMem(0x90ff), 0xbd);
        // CB BD 03DB
        gbc.setState(0xbc62, 0x8934, 0x6f00, 0xe44d, 0xff87, 0x5365, 0x1, 0x0);
        gbc.writeMem(0xbc62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8934);
        EXPECT(gbc.pc(), 0xbc64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc62), 0xcb);
        EXPECT(gbc.readMem(0xbc63), 0xbd);
        // CB BD 03DC
        gbc.setState(0xa320, 0xa2cb, 0xe880, 0x3584, 0xd43d, 0xf012, 0x1, 0x1);
        gbc.writeMem(0xa320, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa2cb);
        EXPECT(gbc.pc(), 0xa322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa320), 0xcb);
        EXPECT(gbc.readMem(0xa321), 0xbd);
        // CB BD 03DD
        gbc.setState(0xcc00, 0x9659, 0x5170, 0x3b01, 0x2ce0, 0xa4e1, 0x0, 0x0);
        gbc.writeMem(0xcc00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9659);
        EXPECT(gbc.pc(), 0xcc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc00), 0xcb);
        EXPECT(gbc.readMem(0xcc01), 0xbd);
        // CB BD 03DE
        gbc.setState(0xcf56, 0x6e5e, 0x27a0, 0x21d5, 0x7af1, 0xeb39, 0x0, 0x0);
        gbc.writeMem(0xcf56, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6e5e);
        EXPECT(gbc.pc(), 0xcf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf56), 0xcb);
        EXPECT(gbc.readMem(0xcf57), 0xbd);
        // CB BD 03DF
        gbc.setState(0x396e, 0x85f7, 0x4190, 0xad01, 0x5fd4, 0xf5f1, 0x1, 0x0);
        gbc.writeMem(0x396e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x85f7);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BD 03E0
        gbc.setState(0x802f, 0x6f29, 0x6970, 0xfcbc, 0xb0a5, 0x4688, 0x1, 0x1);
        gbc.writeMem(0x802f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6f29);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802f), 0xcb);
        EXPECT(gbc.readMem(0x8030), 0xbd);
        // CB BD 03E1
        gbc.setState(0xe4d3, 0xf180, 0xa8c0, 0x5ebc, 0xba56, 0x2452, 0x1, 0x0);
        gbc.writeMem(0xe4d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf180);
        EXPECT(gbc.pc(), 0xe4d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d3), 0xcb);
        EXPECT(gbc.readMem(0xe4d4), 0xbd);
        // CB BD 03E2
        gbc.setState(0x9886, 0x638d, 0x88c0, 0x934e, 0xae6e, 0x754a, 0x0, 0x0);
        gbc.writeMem(0x9886, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x638d);
        EXPECT(gbc.pc(), 0x9888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9886), 0xcb);
        EXPECT(gbc.readMem(0x9887), 0xbd);
        // CB BD 03E3
        gbc.setState(0xae07, 0x3947, 0x50, 0x2fad, 0x6b50, 0x28b9, 0x0, 0x1);
        gbc.writeMem(0xae07, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3947);
        EXPECT(gbc.pc(), 0xae09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae07), 0xcb);
        EXPECT(gbc.readMem(0xae08), 0xbd);
        // CB BD 03E4
        gbc.setState(0x560d, 0x9325, 0x9160, 0x57c1, 0xd794, 0xcdcd, 0x1, 0x0);
        gbc.writeMem(0x560d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9325);
        EXPECT(gbc.pc(), 0x560f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BD 03E5
        gbc.setState(0xef30, 0xe03, 0x1620, 0xf801, 0x218, 0xda9, 0x1, 0x0);
        gbc.writeMem(0xef30, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe03);
        EXPECT(gbc.pc(), 0xef32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef30), 0xcb);
        EXPECT(gbc.readMem(0xef31), 0xbd);
        // CB BD 03E6
        gbc.setState(0x978d, 0xbce7, 0x3b60, 0xf8c1, 0x3a0a, 0x238a, 0x0, 0x0);
        gbc.writeMem(0x978d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbce7);
        EXPECT(gbc.pc(), 0x978f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978d), 0xcb);
        EXPECT(gbc.readMem(0x978e), 0xbd);
        // CB BD 03E7
        gbc.setState(0xce6, 0x9a9a, 0x9c20, 0x8604, 0xf51e, 0x61c1, 0x0, 0x1);
        gbc.writeMem(0xce6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9a9a);
        EXPECT(gbc.pc(), 0xce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
